// Code generated by define_gene; DO NOT EDIT.
package regexp

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/golang/io"
	"regexp"
)

var (
	//go:embed regexp.d.ts
	RegexpDefine   []byte
	RegexpDeclared = map[string]any{
		"matchReader":      regexp.MatchReader,
		"matchString":      regexp.MatchString,
		"mustCompile":      regexp.MustCompile,
		"mustCompilePOSIX": regexp.MustCompilePOSIX,
		"quoteMeta":        regexp.QuoteMeta,
		"compile":          regexp.Compile,
		"compilePOSIX":     regexp.CompilePOSIX,
		"match":            regexp.Match,

		"emptyRegexp": func() (v regexp.Regexp) {
			return v
		},
		"refRegexp": func() *regexp.Regexp {
			var x regexp.Regexp
			return &x
		},
		"refOfRegexp": func(x regexp.Regexp) *regexp.Regexp {
			return &x
		}}
)

func init() {
	engine.RegisterModule(RegexpModule{})
}

type RegexpModule struct{}

func (S RegexpModule) Identity() string {
	return "golang/regexp"
}
func (S RegexpModule) TypeDefine() []byte {
	return RegexpDefine
}
func (S RegexpModule) Exports() map[string]any {
	return RegexpDeclared
}
