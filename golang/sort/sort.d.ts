// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'golang/sort'{
	// @ts-ignore
	import type {int,bool,float64} from 'go'
	export function find(n:int,cmp:(v1:int)=>int):[int,bool]
	export interface Float64Slice extends Array<float64>{
		search(x:float64):int
		len():int
		less(i:int,j:int):bool
		swap(i:int,j:int):void
		sort():void
	}
	export function float64s(x:float64[]):void
	export function float64sAreSorted(x:float64[]):bool
	export interface IntSlice extends Array<int>{
		search(x:int):int
		len():int
		less(i:int,j:int):bool
		swap(i:int,j:int):void
		sort():void
	}
	export interface Interface{
		len():int
		less(i:int,j:int):bool
		swap(i:int,j:int):void
	}
	export function ints(x:int[]):void
	export function intsAreSorted(x:int[]):bool
	export function isSorted(data:Interface):bool
	export function reverse(data:Interface):Interface
	export function search(n:int,f:(v1:int)=>bool):int
	export function searchFloat64s(a:float64[],x:float64):int
	export function searchInts(a:int[],x:int):int
	export function searchStrings(a:string[],x:string):int
	export function slice(x:any,less:(i:int,j:int)=>bool):void
	export function sliceIsSorted(x:any,less:(i:int,j:int)=>bool):bool
	export function sliceStable(x:any,less:(i:int,j:int)=>bool):void
	export function sort(data:Interface):void
	export function stable(data:Interface):void
	export interface StringSlice extends Array<string>{
		search(x:string):int
		len():int
		less(i:int,j:int):bool
		swap(i:int,j:int):void
		sort():void
	}
	export function strings(x:string[]):void
	export function stringsAreSorted(x:string[]):bool

}
