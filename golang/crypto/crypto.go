// Code generated by define_gene; DO NOT EDIT.
package crypto

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"crypto"
	_ "github.com/ZenLiuCN/engine/golang/hash"
	_ "github.com/ZenLiuCN/engine/golang/io"
)

var (
	//go:embed crypto.d.ts
	CryptoDefine   []byte
	CryptoDeclared = map[string]any{
		"registerHash": crypto.RegisterHash,
		"SHA256":       crypto.SHA256,
		"SHA384":       crypto.SHA384,
		"SHA3_224":     crypto.SHA3_224,
		"SHA3_512":     crypto.SHA3_512,
		"BLAKE2b_256":  crypto.BLAKE2b_256,
		"BLAKE2s_256":  crypto.BLAKE2s_256,
		"MD4":          crypto.MD4,
		"MD5SHA1":      crypto.MD5SHA1,
		"SHA3_256":     crypto.SHA3_256,
		"SHA3_384":     crypto.SHA3_384,
		"SHA512_224":   crypto.SHA512_224,
		"MD5":          crypto.MD5,
		"RIPEMD160":    crypto.RIPEMD160,
		"SHA224":       crypto.SHA224,
		"SHA512_256":   crypto.SHA512_256,
		"BLAKE2b_384":  crypto.BLAKE2b_384,
		"BLAKE2b_512":  crypto.BLAKE2b_512,
		"SHA1":         crypto.SHA1,
		"SHA512":       crypto.SHA512,
	}
)

func init() {
	engine.RegisterModule(CryptoModule{})
}

type CryptoModule struct{}

func (S CryptoModule) Identity() string {
	return "golang/crypto"
}
func (S CryptoModule) TypeDefine() []byte {
	return CryptoDefine
}
func (S CryptoModule) Exports() map[string]any {
	return CryptoDeclared
}
