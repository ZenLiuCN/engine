// Code generated by define_gene; DO NOT EDIT.
package elliptic

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"crypto/elliptic"
	_ "github.com/ZenLiuCN/engine/golang/io"
	_ "github.com/ZenLiuCN/engine/golang/math/big"
)

var (
	//go:embed crypto_elliptic.d.ts
	CryptoEllipticDefine   []byte
	CryptoEllipticDeclared = map[string]any{
		"generateKey":         elliptic.GenerateKey,
		"marshalCompressed":   elliptic.MarshalCompressed,
		"p384":                elliptic.P384,
		"p521":                elliptic.P521,
		"unmarshal":           elliptic.Unmarshal,
		"marshal":             elliptic.Marshal,
		"p224":                elliptic.P224,
		"p256":                elliptic.P256,
		"unmarshalCompressed": elliptic.UnmarshalCompressed,

		"emptyCurveParams": func() (v elliptic.CurveParams) {
			return v
		},
		"refCurveParams": func() *elliptic.CurveParams {
			var x elliptic.CurveParams
			return &x
		},
		"refOfCurveParams": func(x elliptic.CurveParams) *elliptic.CurveParams {
			return &x
		}}
)

func init() {
	engine.RegisterModule(CryptoEllipticModule{})
}

type CryptoEllipticModule struct{}

func (S CryptoEllipticModule) Identity() string {
	return "golang/crypto/elliptic"
}
func (S CryptoEllipticModule) TypeDefine() []byte {
	return CryptoEllipticDefine
}
func (S CryptoEllipticModule) Exports() map[string]any {
	return CryptoEllipticDeclared
}
