// Code generated by define_gene; DO NOT EDIT.
package ed25519

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"crypto/ed25519"
	_ "github.com/ZenLiuCN/engine/golang/crypto"
	_ "github.com/ZenLiuCN/engine/golang/io"
)

var (
	//go:embed crypto_ed25519.d.ts
	CryptoEd25519Define   []byte
	CryptoEd25519Declared = map[string]any{
		"newKeyFromSeed":    ed25519.NewKeyFromSeed,
		"PublicKeySize":     ed25519.PublicKeySize,
		"sign":              ed25519.Sign,
		"generateKey":       ed25519.GenerateKey,
		"PrivateKeySize":    ed25519.PrivateKeySize,
		"SeedSize":          ed25519.SeedSize,
		"SignatureSize":     ed25519.SignatureSize,
		"verify":            ed25519.Verify,
		"verifyWithOptions": ed25519.VerifyWithOptions,

		"emptyOptions": func() (v ed25519.Options) {
			return v
		},
		"refOptions": func() *ed25519.Options {
			var x ed25519.Options
			return &x
		},
		"refOfOptions": func(x ed25519.Options) *ed25519.Options {
			return &x
		}}
)

func init() {
	engine.RegisterModule(CryptoEd25519Module{})
}

type CryptoEd25519Module struct{}

func (S CryptoEd25519Module) Identity() string {
	return "golang/crypto/ed25519"
}
func (S CryptoEd25519Module) TypeDefine() []byte {
	return CryptoEd25519Define
}
func (S CryptoEd25519Module) Exports() map[string]any {
	return CryptoEd25519Declared
}
