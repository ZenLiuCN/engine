// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'golang/crypto'{
	// @ts-ignore
	import * as io from 'golang/io'
	// @ts-ignore
	import * as hash from 'golang/hash'
	// @ts-ignore
	import type {int,bool,error,uint} from 'go'
	export const BLAKE2b_256:Hash
	export const BLAKE2b_384:Hash
	export const BLAKE2b_512:Hash
	export const BLAKE2s_256:Hash
	export interface Decrypter{
		decrypt(rand:io.Reader,msg:Uint8Array,opts:DecrypterOpts):Uint8Array
		public():PublicKey
	}
	export interface DecrypterOpts{
	}
	export interface Hash extends uint{
		hashFunc():Hash
		string():string
		size():int
		New():hash.Hash
		available():bool
	}
	export const MD4:Hash
	export const MD5:Hash
	export const MD5SHA1:Hash
	export interface PrivateKey{
	}
	export interface PublicKey{
	}
	export const RIPEMD160:Hash
	export function registerHash(h:Hash,f:()=>hash.Hash):void
	export const SHA1:Hash
	export const SHA224:Hash
	export const SHA256:Hash
	export const SHA384:Hash
	export const SHA3_224:Hash
	export const SHA3_256:Hash
	export const SHA3_384:Hash
	export const SHA3_512:Hash
	export const SHA512:Hash
	export const SHA512_224:Hash
	export const SHA512_256:Hash
	export interface Signer{
		public():PublicKey
		sign(rand:io.Reader,digest:Uint8Array,opts:SignerOpts):Uint8Array
	}
	export interface SignerOpts{
		hashFunc():Hash
	}

}
