// Code generated by define_gene; DO NOT EDIT.
package maphash

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"hash/maphash"
)

var (
	//go:embed hash_maphash.d.ts
	HashMaphashDefine   []byte
	HashMaphashDeclared = map[string]any{
		"bytes":    maphash.Bytes,
		"makeSeed": maphash.MakeSeed,
		"string":   maphash.String,

		"emptyHash": func() (v maphash.Hash) {
			return v
		},
		"refHash": func() *maphash.Hash {
			var x maphash.Hash
			return &x
		},
		"refOfHash": func(x maphash.Hash) *maphash.Hash {
			return &x
		},
		"emptySeed": func() (v maphash.Seed) {
			return v
		},
		"refSeed": func() *maphash.Seed {
			var x maphash.Seed
			return &x
		},
		"refOfSeed": func(x maphash.Seed) *maphash.Seed {
			return &x
		}}
)

func init() {
	engine.RegisterModule(HashMaphashModule{})
}

type HashMaphashModule struct{}

func (S HashMaphashModule) Identity() string {
	return "golang/hash/maphash"
}
func (S HashMaphashModule) TypeDefine() []byte {
	return HashMaphashDefine
}
func (S HashMaphashModule) Exports() map[string]any {
	return HashMaphashDeclared
}
