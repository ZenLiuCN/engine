// Code generated by define_gene; DO NOT EDIT.
package user

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"os/user"
)

var (
	//go:embed os_user.d.ts
	OsUserDefine   []byte
	OsUserDeclared = map[string]any{
		"lookupGroup":   user.LookupGroup,
		"lookupGroupId": user.LookupGroupId,
		"lookupId":      user.LookupId,
		"current":       user.Current,
		"lookup":        user.Lookup,

		"emptyGroup": func() (v user.Group) {
			return v
		},
		"refGroup": func() *user.Group {
			var x user.Group
			return &x
		},
		"refOfGroup": func(x user.Group) *user.Group {
			return &x
		},
		"emptyUser": func() (v user.User) {
			return v
		},
		"refUser": func() *user.User {
			var x user.User
			return &x
		},
		"refOfUser": func(x user.User) *user.User {
			return &x
		}}
)

func init() {
	engine.RegisterModule(OsUserModule{})
}

type OsUserModule struct{}

func (S OsUserModule) Identity() string {
	return "golang/os/user"
}
func (S OsUserModule) TypeDefine() []byte {
	return OsUserDefine
}
func (S OsUserModule) Exports() map[string]any {
	return OsUserDeclared
}
