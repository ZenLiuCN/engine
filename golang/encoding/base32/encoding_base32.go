// Code generated by define_gene; DO NOT EDIT.
package base32

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"encoding/base32"
	_ "github.com/ZenLiuCN/engine/golang/io"
)

var (
	//go:embed encoding_base32.d.ts
	EncodingBase32Define   []byte
	EncodingBase32Declared = map[string]any{
		"newDecoder":  base32.NewDecoder,
		"newEncoder":  base32.NewEncoder,
		"newEncoding": base32.NewEncoding,
		"NoPadding":   base32.NoPadding,
		"StdEncoding": base32.StdEncoding,
		"StdPadding":  base32.StdPadding,
		"HexEncoding": base32.HexEncoding,

		"emptyEncoding": func() (v base32.Encoding) {
			return v
		},
		"refEncoding": func() *base32.Encoding {
			var x base32.Encoding
			return &x
		},
		"refOfEncoding": func(x base32.Encoding) *base32.Encoding {
			return &x
		}}
)

func init() {
	engine.RegisterModule(EncodingBase32Module{})
}

type EncodingBase32Module struct{}

func (S EncodingBase32Module) Identity() string {
	return "golang/encoding/base32"
}
func (S EncodingBase32Module) TypeDefine() []byte {
	return EncodingBase32Define
}
func (S EncodingBase32Module) Exports() map[string]any {
	return EncodingBase32Declared
}
