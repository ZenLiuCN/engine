// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'golang/encoding/base32'{
	// @ts-ignore
	import * as io from 'golang/io'
	// @ts-ignore
	import type {error,int64,GoError,Struct,rune,Ref,int} from 'go'
	export interface CorruptInputError extends GoError,int64{
		error():string
	}
	export interface Encoding extends Struct<Encoding>{
		withPadding(padding:rune):Ref<Encoding>
		encode(dst:Uint8Array,src:Uint8Array):void
		encodeToString(src:Uint8Array):string
		encodedLen(n:int):int
		decode(dst:Uint8Array,src:Uint8Array):int
		decodeString(s:string):Uint8Array
		decodedLen(n:int):int
	}
	export const HexEncoding:Ref<Encoding>
	export function newDecoder(enc:Ref<Encoding>,r:io.Reader):io.Reader
	export function newEncoder(enc:Ref<Encoding>,w:io.Writer):io.WriteCloser
	export function newEncoding(encoder:string):Ref<Encoding>
	//-1
	export const NoPadding:rune
	export const StdEncoding:Ref<Encoding>
	//61
	export const StdPadding:rune

export function emptyEncoding():Encoding
export function refEncoding():Ref<Encoding>
export function refOfEncoding(x:Encoding):Ref<Encoding>
}
