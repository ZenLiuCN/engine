// Code generated by define_gene; DO NOT EDIT.
package binary

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"encoding/binary"
	_ "github.com/ZenLiuCN/engine/golang/io"
)

var (
	//go:embed encoding_binary.d.ts
	EncodingBinaryDefine   []byte
	EncodingBinaryDeclared = map[string]any{
		"appendUvarint":  binary.AppendUvarint,
		"putUvarint":     binary.PutUvarint,
		"putVarint":      binary.PutVarint,
		"MaxVarintLen32": binary.MaxVarintLen32,
		"MaxVarintLen64": binary.MaxVarintLen64,
		"NativeEndian":   binary.NativeEndian,
		"read":           binary.Read,
		"appendVarint":   binary.AppendVarint,
		"BigEndian":      binary.BigEndian,
		"readVarint":     binary.ReadVarint,
		"varint":         binary.Varint,
		"uvarint":        binary.Uvarint,
		"write":          binary.Write,
		"LittleEndian":   binary.LittleEndian,
		"MaxVarintLen16": binary.MaxVarintLen16,
		"readUvarint":    binary.ReadUvarint,
		"size":           binary.Size,
	}
)

func init() {
	engine.RegisterModule(EncodingBinaryModule{})
}

type EncodingBinaryModule struct{}

func (S EncodingBinaryModule) Identity() string {
	return "golang/encoding/binary"
}
func (S EncodingBinaryModule) TypeDefine() []byte {
	return EncodingBinaryDefine
}
func (S EncodingBinaryModule) Exports() map[string]any {
	return EncodingBinaryDeclared
}
