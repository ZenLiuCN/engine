// Code generated by define_gene; DO NOT EDIT.
package csv

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"encoding/csv"
	_ "github.com/ZenLiuCN/engine/golang/io"
)

var (
	//go:embed encoding_csv.d.ts
	EncodingCsvDefine   []byte
	EncodingCsvDeclared = map[string]any{
		"ErrQuote":         csv.ErrQuote,
		"ErrTrailingComma": csv.ErrTrailingComma,
		"newReader":        csv.NewReader,
		"newWriter":        csv.NewWriter,
		"ErrBareQuote":     csv.ErrBareQuote,
		"ErrFieldCount":    csv.ErrFieldCount,

		"emptyReader": func() (v csv.Reader) {
			return v
		},
		"refReader": func() *csv.Reader {
			var x csv.Reader
			return &x
		},
		"refOfReader": func(x csv.Reader) *csv.Reader {
			return &x
		},
		"emptyWriter": func() (v csv.Writer) {
			return v
		},
		"refWriter": func() *csv.Writer {
			var x csv.Writer
			return &x
		},
		"refOfWriter": func(x csv.Writer) *csv.Writer {
			return &x
		}}
)

func init() {
	engine.RegisterModule(EncodingCsvModule{})
}

type EncodingCsvModule struct{}

func (S EncodingCsvModule) Identity() string {
	return "golang/encoding/csv"
}
func (S EncodingCsvModule) TypeDefine() []byte {
	return EncodingCsvDefine
}
func (S EncodingCsvModule) Exports() map[string]any {
	return EncodingCsvDeclared
}
