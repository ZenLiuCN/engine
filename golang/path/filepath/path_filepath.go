// Code generated by define_gene; DO NOT EDIT.
package filepath

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/golang/io/fs"
	"path/filepath"
)

var (
	//go:embed path_filepath.d.ts
	PathFilepathDefine   []byte
	PathFilepathDeclared = map[string]any{
		"join":          filepath.Join,
		"SkipDir":       filepath.SkipDir,
		"toSlash":       filepath.ToSlash,
		"evalSymlinks":  filepath.EvalSymlinks,
		"ListSeparator": filepath.ListSeparator,
		"walk":          filepath.Walk,
		"walkDir":       filepath.WalkDir,
		"ErrBadPattern": filepath.ErrBadPattern,
		"ext":           filepath.Ext,
		"glob":          filepath.Glob,
		"isLocal":       filepath.IsLocal,
		"clean":         filepath.Clean,
		"splitList":     filepath.SplitList,
		"dir":           filepath.Dir,
		"isAbs":         filepath.IsAbs,
		"rel":           filepath.Rel,
		"hasPrefix":     filepath.HasPrefix,
		"match":         filepath.Match,
		"split":         filepath.Split,
		"abs":           filepath.Abs,
		"base":          filepath.Base,
		"fromSlash":     filepath.FromSlash,
		"SkipAll":       filepath.SkipAll,
		"volumeName":    filepath.VolumeName,
		"Separator":     filepath.Separator,
	}
)

func init() {
	engine.RegisterModule(PathFilepathModule{})
}

type PathFilepathModule struct{}

func (S PathFilepathModule) Identity() string {
	return "golang/path/filepath"
}
func (S PathFilepathModule) TypeDefine() []byte {
	return PathFilepathDefine
}
func (S PathFilepathModule) Exports() map[string]any {
	return PathFilepathDeclared
}
