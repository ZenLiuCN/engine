// Code generated by define_gene; DO NOT EDIT.
package url

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/golang/fmt"
	"net/url"
)

var (
	//go:embed net_url.d.ts
	NetUrlDefine   []byte
	NetUrlDeclared = map[string]any{
		"joinPath":        url.JoinPath,
		"parseQuery":      url.ParseQuery,
		"queryUnescape":   url.QueryUnescape,
		"user":            url.User,
		"userPassword":    url.UserPassword,
		"parse":           url.Parse,
		"parseRequestURI": url.ParseRequestURI,
		"pathEscape":      url.PathEscape,
		"pathUnescape":    url.PathUnescape,
		"queryEscape":     url.QueryEscape,

		"emptyURL": func() (v url.URL) {
			return v
		},
		"refURL": func() *url.URL {
			var x url.URL
			return &x
		},
		"refOfURL": func(x url.URL) *url.URL {
			return &x
		},
		"emptyUserinfo": func() (v url.Userinfo) {
			return v
		},
		"refUserinfo": func() *url.Userinfo {
			var x url.Userinfo
			return &x
		},
		"refOfUserinfo": func(x url.Userinfo) *url.Userinfo {
			return &x
		}}
)

func init() {
	engine.RegisterModule(NetUrlModule{})
}

type NetUrlModule struct{}

func (S NetUrlModule) Identity() string {
	return "golang/net/url"
}
func (S NetUrlModule) TypeDefine() []byte {
	return NetUrlDefine
}
func (S NetUrlModule) Exports() map[string]any {
	return NetUrlDeclared
}
