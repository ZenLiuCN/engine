// Code generated by define_gene; DO NOT EDIT.
package httputil

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/golang/bufio"
	_ "github.com/ZenLiuCN/engine/golang/io"
	_ "github.com/ZenLiuCN/engine/golang/log"
	_ "github.com/ZenLiuCN/engine/golang/net"
	_ "github.com/ZenLiuCN/engine/golang/net/http"
	_ "github.com/ZenLiuCN/engine/golang/net/url"
	_ "github.com/ZenLiuCN/engine/golang/time"
	"net/http/httputil"
)

var (
	//go:embed net_http_httputil.d.ts
	NetHttpHttputilDefine   []byte
	NetHttpHttputilDeclared = map[string]any{
		"ErrPersistEOF":             httputil.ErrPersistEOF,
		"ErrPipeline":               httputil.ErrPipeline,
		"newChunkedWriter":          httputil.NewChunkedWriter,
		"newServerConn":             httputil.NewServerConn,
		"newSingleHostReverseProxy": httputil.NewSingleHostReverseProxy,
		"ErrLineTooLong":            httputil.ErrLineTooLong,
		"ErrClosed":                 httputil.ErrClosed,
		"newClientConn":             httputil.NewClientConn,
		"dumpResponse":              httputil.DumpResponse,
		"newChunkedReader":          httputil.NewChunkedReader,
		"dumpRequestOut":            httputil.DumpRequestOut,
		"newProxyClientConn":        httputil.NewProxyClientConn,
		"dumpRequest":               httputil.DumpRequest,

		"emptyProxyRequest": func() (v httputil.ProxyRequest) {
			return v
		},
		"refProxyRequest": func() *httputil.ProxyRequest {
			var x httputil.ProxyRequest
			return &x
		},
		"refOfProxyRequest": func(x httputil.ProxyRequest) *httputil.ProxyRequest {
			return &x
		},
		"emptyReverseProxy": func() (v httputil.ReverseProxy) {
			return v
		},
		"refReverseProxy": func() *httputil.ReverseProxy {
			var x httputil.ReverseProxy
			return &x
		},
		"refOfReverseProxy": func(x httputil.ReverseProxy) *httputil.ReverseProxy {
			return &x
		},
		"emptyServerConn": func() (v httputil.ServerConn) {
			return v
		},
		"refServerConn": func() *httputil.ServerConn {
			var x httputil.ServerConn
			return &x
		},
		"refOfServerConn": func(x httputil.ServerConn) *httputil.ServerConn {
			return &x
		},
		"emptyClientConn": func() (v httputil.ClientConn) {
			return v
		},
		"refClientConn": func() *httputil.ClientConn {
			var x httputil.ClientConn
			return &x
		},
		"refOfClientConn": func(x httputil.ClientConn) *httputil.ClientConn {
			return &x
		}}
)

func init() {
	engine.RegisterModule(NetHttpHttputilModule{})
}

type NetHttpHttputilModule struct{}

func (S NetHttpHttputilModule) Identity() string {
	return "golang/net/http/httputil"
}
func (S NetHttpHttputilModule) TypeDefine() []byte {
	return NetHttpHttputilDefine
}
func (S NetHttpHttputilModule) Exports() map[string]any {
	return NetHttpHttputilDeclared
}
