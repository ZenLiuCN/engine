// Code generated by define_gene; DO NOT EDIT.
package utf8

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"unicode/utf8"
)

var (
	//go:embed unicode_utf8.d.ts
	UnicodeUtf8Define   []byte
	UnicodeUtf8Declared = map[string]any{
		"decodeRuneInString":     utf8.DecodeRuneInString,
		"fullRune":               utf8.FullRune,
		"fullRuneInString":       utf8.FullRuneInString,
		"runeCountInString":      utf8.RuneCountInString,
		"RuneError":              utf8.RuneError,
		"runeLen":                utf8.RuneLen,
		"runeStart":              utf8.RuneStart,
		"decodeRune":             utf8.DecodeRune,
		"valid":                  utf8.Valid,
		"UTFMax":                 utf8.UTFMax,
		"decodeLastRuneInString": utf8.DecodeLastRuneInString,
		"MaxRune":                utf8.MaxRune,
		"RuneSelf":               utf8.RuneSelf,
		"validString":            utf8.ValidString,
		"decodeLastRune":         utf8.DecodeLastRune,
		"encodeRune":             utf8.EncodeRune,
		"runeCount":              utf8.RuneCount,
		"validRune":              utf8.ValidRune,
		"appendRune":             utf8.AppendRune,
	}
)

func init() {
	engine.RegisterModule(UnicodeUtf8Module{})
}

type UnicodeUtf8Module struct{}

func (S UnicodeUtf8Module) Identity() string {
	return "golang/unicode/utf8"
}
func (S UnicodeUtf8Module) TypeDefine() []byte {
	return UnicodeUtf8Define
}
func (S UnicodeUtf8Module) Exports() map[string]any {
	return UnicodeUtf8Declared
}
