// Code generated by define_gene; DO NOT EDIT.
package fs

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/golang/io"
	_ "github.com/ZenLiuCN/engine/golang/time"
	"io/fs"
)

var (
	//go:embed io_fs.d.ts
	IoFsDefine   []byte
	IoFsDeclared = map[string]any{
		"formatDirEntry":     fs.FormatDirEntry,
		"ModeNamedPipe":      fs.ModeNamedPipe,
		"ModeExclusive":      fs.ModeExclusive,
		"ModeSetgid":         fs.ModeSetgid,
		"ModeSticky":         fs.ModeSticky,
		"readFile":           fs.ReadFile,
		"SkipAll":            fs.SkipAll,
		"ModeTemporary":      fs.ModeTemporary,
		"ModeType":           fs.ModeType,
		"formatFileInfo":     fs.FormatFileInfo,
		"glob":               fs.Glob,
		"ModeAppend":         fs.ModeAppend,
		"ModeIrregular":      fs.ModeIrregular,
		"ModePerm":           fs.ModePerm,
		"ErrNotExist":        fs.ErrNotExist,
		"ErrClosed":          fs.ErrClosed,
		"ErrExist":           fs.ErrExist,
		"fileInfoToDirEntry": fs.FileInfoToDirEntry,
		"stat":               fs.Stat,
		"sub":                fs.Sub,
		"readDir":            fs.ReadDir,
		"ErrInvalid":         fs.ErrInvalid,
		"ModeCharDevice":     fs.ModeCharDevice,
		"ModeDevice":         fs.ModeDevice,
		"ModeSocket":         fs.ModeSocket,
		"ModeSymlink":        fs.ModeSymlink,
		"walkDir":            fs.WalkDir,
		"ErrPermission":      fs.ErrPermission,
		"ModeDir":            fs.ModeDir,
		"ModeSetuid":         fs.ModeSetuid,
		"SkipDir":            fs.SkipDir,
		"validPath":          fs.ValidPath,
	}
)

func init() {
	engine.RegisterModule(IoFsModule{})
}

type IoFsModule struct{}

func (S IoFsModule) Identity() string {
	return "golang/io/fs"
}
func (S IoFsModule) TypeDefine() []byte {
	return IoFsDefine
}
func (S IoFsModule) Exports() map[string]any {
	return IoFsDeclared
}
