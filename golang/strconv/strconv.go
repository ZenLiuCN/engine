// Code generated by define_gene; DO NOT EDIT.
package strconv

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"strconv"
)

var (
	//go:embed strconv.d.ts
	StrconvDefine   []byte
	StrconvDeclared = map[string]any{
		"formatComplex":            strconv.FormatComplex,
		"formatUint":               strconv.FormatUint,
		"unquote":                  strconv.Unquote,
		"appendFloat":              strconv.AppendFloat,
		"atoi":                     strconv.Atoi,
		"canBackquote":             strconv.CanBackquote,
		"formatFloat":              strconv.FormatFloat,
		"quoteRune":                strconv.QuoteRune,
		"quoteToGraphic":           strconv.QuoteToGraphic,
		"formatInt":                strconv.FormatInt,
		"IntSize":                  strconv.IntSize,
		"parseComplex":             strconv.ParseComplex,
		"parseUint":                strconv.ParseUint,
		"quotedPrefix":             strconv.QuotedPrefix,
		"unquoteChar":              strconv.UnquoteChar,
		"appendInt":                strconv.AppendInt,
		"ErrSyntax":                strconv.ErrSyntax,
		"formatBool":               strconv.FormatBool,
		"isPrint":                  strconv.IsPrint,
		"parseBool":                strconv.ParseBool,
		"quote":                    strconv.Quote,
		"appendQuoteRuneToASCII":   strconv.AppendQuoteRuneToASCII,
		"appendQuoteRuneToGraphic": strconv.AppendQuoteRuneToGraphic,
		"itoa":                     strconv.Itoa,
		"quoteRuneToASCII":         strconv.QuoteRuneToASCII,
		"quoteToASCII":             strconv.QuoteToASCII,
		"appendBool":               strconv.AppendBool,
		"appendQuoteToASCII":       strconv.AppendQuoteToASCII,
		"ErrRange":                 strconv.ErrRange,
		"parseFloat":               strconv.ParseFloat,
		"parseInt":                 strconv.ParseInt,
		"appendQuote":              strconv.AppendQuote,
		"appendQuoteRune":          strconv.AppendQuoteRune,
		"appendQuoteToGraphic":     strconv.AppendQuoteToGraphic,
		"appendUint":               strconv.AppendUint,
		"isGraphic":                strconv.IsGraphic,
		"quoteRuneToGraphic":       strconv.QuoteRuneToGraphic,
	}
)

func init() {
	engine.RegisterModule(StrconvModule{})
}

type StrconvModule struct{}

func (S StrconvModule) Identity() string {
	return "golang/strconv"
}
func (S StrconvModule) TypeDefine() []byte {
	return StrconvDefine
}
func (S StrconvModule) Exports() map[string]any {
	return StrconvDeclared
}
