// Code generated by define_gene; DO NOT EDIT.
package scanner

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/golang/fmt"
	_ "github.com/ZenLiuCN/engine/golang/io"
	"text/scanner"
)

var (
	//go:embed text_scanner.d.ts
	TextScannerDefine   []byte
	TextScannerDeclared = map[string]any{
		"ScanFloats":     scanner.ScanFloats,
		"ScanStrings":    scanner.ScanStrings,
		"SkipComments":   scanner.SkipComments,
		"EOF":            scanner.EOF,
		"Float":          scanner.Float,
		"GoTokens":       scanner.GoTokens,
		"GoWhitespace":   scanner.GoWhitespace,
		"Int":            scanner.Int,
		"Comment":        scanner.Comment,
		"ScanComments":   scanner.ScanComments,
		"ScanIdents":     scanner.ScanIdents,
		"ScanRawStrings": scanner.ScanRawStrings,
		"String":         scanner.String,
		"tokenString":    scanner.TokenString,
		"Ident":          scanner.Ident,
		"RawString":      scanner.RawString,
		"ScanChars":      scanner.ScanChars,
		"ScanInts":       scanner.ScanInts,
		"Char":           scanner.Char,

		"emptyPosition": func() (v scanner.Position) {
			return v
		},
		"refPosition": func() *scanner.Position {
			var x scanner.Position
			return &x
		},
		"refOfPosition": func(x scanner.Position) *scanner.Position {
			return &x
		},
		"emptyScanner": func() (v scanner.Scanner) {
			return v
		},
		"refScanner": func() *scanner.Scanner {
			var x scanner.Scanner
			return &x
		},
		"refOfScanner": func(x scanner.Scanner) *scanner.Scanner {
			return &x
		}}
)

func init() {
	engine.RegisterModule(TextScannerModule{})
}

type TextScannerModule struct{}

func (S TextScannerModule) Identity() string {
	return "golang/text/scanner"
}
func (S TextScannerModule) TypeDefine() []byte {
	return TextScannerDefine
}
func (S TextScannerModule) Exports() map[string]any {
	return TextScannerDeclared
}
