// Code generated by define_gene; DO NOT EDIT.
package template

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/golang/io"
	_ "github.com/ZenLiuCN/engine/golang/io/fs"
	_ "github.com/ZenLiuCN/engine/golang/text/template/parse"
	"text/template"
)

var (
	//go:embed text_template.d.ts
	TextTemplateDefine   []byte
	TextTemplateDeclared = map[string]any{
		"htmlEscape":       template.HTMLEscape,
		"parseFiles":       template.ParseFiles,
		"jsEscapeString":   template.JSEscapeString,
		"New":              template.New,
		"parseGlob":        template.ParseGlob,
		"jsEscape":         template.JSEscape,
		"must":             template.Must,
		"urlQueryEscaper":  template.URLQueryEscaper,
		"htmlEscapeString": template.HTMLEscapeString,
		"htmlEscaper":      template.HTMLEscaper,
		"isTrue":           template.IsTrue,
		"jsEscaper":        template.JSEscaper,
		"parseFS":          template.ParseFS,

		"emptyTemplate": func() (v template.Template) {
			return v
		},
		"refTemplate": func() *template.Template {
			var x template.Template
			return &x
		},
		"refOfTemplate": func(x template.Template) *template.Template {
			return &x
		}}
)

func init() {
	engine.RegisterModule(TextTemplateModule{})
}

type TextTemplateModule struct{}

func (S TextTemplateModule) Identity() string {
	return "golang/text/template"
}
func (S TextTemplateModule) TypeDefine() []byte {
	return TextTemplateDefine
}
func (S TextTemplateModule) Exports() map[string]any {
	return TextTemplateDeclared
}
