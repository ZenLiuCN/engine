// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'golang/compress/flate'{

	// @ts-ignore
	import * as io from 'golang/io'
	// @ts-ignore
	import type {int,int64,GoError,Ref,error,Struct} from 'go'
	//9
	export const BestCompression:int
	//1
	export const BestSpeed:int
	export interface CorruptInputError extends int64,GoError{

	error():string
	}
	//-1
	export const DefaultCompression:int
	//-2
	export const HuffmanOnly:int
	export interface InternalError extends string,GoError{

	error():string
	}
	export function newReader(r:io.Reader):io.ReadCloser

	export function newReaderDict(r:io.Reader,dict:Uint8Array):io.ReadCloser

	export function newWriter(w:io.Writer,level:int):Ref<Writer>

	export function newWriterDict(w:io.Writer,level:int,dict:Uint8Array):Ref<Writer>

	//0
	export const NoCompression:int
	export interface ReadError extends Struct<ReadError>,Error,GoError{

			offset:int64
			err:GoError
			error():string
	}
	export interface Reader extends io.Reader,io.ByteReader{

	}
	export interface Resetter{

			reset(r:io.Reader,dict:Uint8Array)/*error*/
	}
	export interface WriteError extends Struct<WriteError>,Error,GoError{

			offset:int64
			err:GoError
			error():string
	}
	export interface Writer extends Struct<Writer>,io.WriteCloser,io.Closer{

			write(data:Uint8Array):int
			flush()/*error*/
			close():error
			reset(dst:io.Writer):void
	}
}