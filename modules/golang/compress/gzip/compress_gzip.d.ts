// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'golang/compress/gzip'{

	// @ts-ignore
	import * as io from 'golang/io'
	// @ts-ignore
	import * as time from 'golang/time'
	// @ts-ignore
	import type {Struct,Ref,error,bool,int,GoError,byte} from 'go'
	//9
	export const BestCompression:int
	//1
	export const BestSpeed:int
	//-1
	export const DefaultCompression:int
	export const ErrChecksum:GoError
	export const ErrHeader:GoError
	export interface Header extends Struct<Header>{

			comment:string
			extra:Uint8Array
			modTime:time.Time
			name:string
			os:byte
	}
	//-2
	export const HuffmanOnly:int
	export function newReader(r:io.Reader):Ref<Reader>

	export function newWriter(w:io.Writer):Ref<Writer>

	export function newWriterLevel(w:io.Writer,level:int):Ref<Writer>

	//0
	export const NoCompression:int
	export interface Reader extends Struct<Reader>,io.ReadCloser,io.Closer{

			header:Header
			reset(r:io.Reader)/*error*/
			multistream(ok:bool):void
			read(p:Uint8Array):int
			close():error
	}
	export interface Writer extends Struct<Writer>,io.WriteCloser,io.Closer{

			header:Header
			reset(w:io.Writer):void
			write(p:Uint8Array):int
			flush()/*error*/
			close():error
	}
	export function emptyHeader():Header
	export function emptyRefHeader():Ref<Header>
	export function refOfHeader(x:Header,v:Ref<Header>)
	export function unRefHeader(v:Ref<Header>):Header
}