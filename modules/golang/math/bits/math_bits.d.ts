// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'golang/math/bits'{

	// @ts-ignore
	import type {uint,uint32,uint64,int,uint16,uint8,Ref} from 'go'
	export function add(x:uint,y:uint,carry:uint):[uint,uint]

	export function add32(x:uint32,y:uint32,carry:uint32):[uint32,uint32]

	export function add64(x:uint64,y:uint64,carry:uint64):[uint64,uint64]

	export function div(hi:uint,lo:uint,y:uint):[uint,uint]

	export function div32(hi:uint32,lo:uint32,y:uint32):[uint32,uint32]

	export function div64(hi:uint64,lo:uint64,y:uint64):[uint64,uint64]

	export function leadingZeros(x:uint):int

	export function leadingZeros16(x:uint16):int

	export function leadingZeros32(x:uint32):int

	export function leadingZeros64(x:uint64):int

	export function leadingZeros8(x:uint8):int

	export function len(x:uint):int

	export function len16(x:uint16):int

	export function len32(x:uint32):int

	export function len64(x:uint64):int

	export function len8(x:uint8):int

	export function mul(x:uint,y:uint):[uint,uint]

	export function mul32(x:uint32,y:uint32):[uint32,uint32]

	export function mul64(x:uint64,y:uint64):[uint64,uint64]

	export function onesCount(x:uint):int

	export function onesCount16(x:uint16):int

	export function onesCount32(x:uint32):int

	export function onesCount64(x:uint64):int

	export function onesCount8(x:uint8):int

	export function rem(hi:uint,lo:uint,y:uint):uint

	export function rem32(hi:uint32,lo:uint32,y:uint32):uint32

	export function rem64(hi:uint64,lo:uint64,y:uint64):uint64

	export function reverse(x:uint):uint

	export function reverse16(x:uint16):uint16

	export function reverse32(x:uint32):uint32

	export function reverse64(x:uint64):uint64

	export function reverse8(x:uint8):uint8

	export function reverseBytes(x:uint):uint

	export function reverseBytes16(x:uint16):uint16

	export function reverseBytes32(x:uint32):uint32

	export function reverseBytes64(x:uint64):uint64

	export function rotateLeft(x:uint,k:int):uint

	export function rotateLeft16(x:uint16,k:int):uint16

	export function rotateLeft32(x:uint32,k:int):uint32

	export function rotateLeft64(x:uint64,k:int):uint64

	export function rotateLeft8(x:uint8,k:int):uint8

	export function sub(x:uint,y:uint,borrow:uint):[uint,uint]

	export function sub32(x:uint32,y:uint32,borrow:uint32):[uint32,uint32]

	export function sub64(x:uint64,y:uint64,borrow:uint64):[uint64,uint64]

	export function trailingZeros(x:uint):int

	export function trailingZeros16(x:uint16):int

	export function trailingZeros32(x:uint32):int

	export function trailingZeros64(x:uint64):int

	export function trailingZeros8(x:uint8):int

	//64
	export const UintSize:int
}