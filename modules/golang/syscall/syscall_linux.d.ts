// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'golang/syscall'{

	// @ts-ignore
	import * as sync from 'golang/sync'
	// @ts-ignore
	import type {error,uint32,bool,Ref,byte,int32,Struct,uint8,int16,uint,int,uintptr,uint16,int8,GoError,uint64,int64} from 'go'
	//38
	export const AF_ALG:int
	//5
	export const AF_APPLETALK:int
	//18
	export const AF_ASH:int
	//8
	export const AF_ATMPVC:int
	//20
	export const AF_ATMSVC:int
	//3
	export const AF_AX25:int
	//31
	export const AF_BLUETOOTH:int
	//7
	export const AF_BRIDGE:int
	//37
	export const AF_CAIF:int
	//29
	export const AF_CAN:int
	//12
	export const AF_DECnet:int
	//19
	export const AF_ECONET:int
	//1
	export const AF_FILE:int
	//36
	export const AF_IEEE802154:int
	//2
	export const AF_INET:int
	//10
	export const AF_INET6:int
	//4
	export const AF_IPX:int
	//23
	export const AF_IRDA:int
	//34
	export const AF_ISDN:int
	//32
	export const AF_IUCV:int
	//15
	export const AF_KEY:int
	//26
	export const AF_LLC:int
	//1
	export const AF_LOCAL:int
	//39
	export const AF_MAX:int
	//13
	export const AF_NETBEUI:int
	//16
	export const AF_NETLINK:int
	//6
	export const AF_NETROM:int
	//17
	export const AF_PACKET:int
	//35
	export const AF_PHONET:int
	//24
	export const AF_PPPOX:int
	//21
	export const AF_RDS:int
	//11
	export const AF_ROSE:int
	//16
	export const AF_ROUTE:int
	//33
	export const AF_RXRPC:int
	//14
	export const AF_SECURITY:int
	//22
	export const AF_SNA:int
	//30
	export const AF_TIPC:int
	//1
	export const AF_UNIX:int
	//0
	export const AF_UNSPEC:int
	//25
	export const AF_WANPIPE:int
	//9
	export const AF_X25:int
	//264
	export const ARPHRD_ADAPT:int
	//8
	export const ARPHRD_APPLETLK:int
	//7
	export const ARPHRD_ARCNET:int
	//781
	export const ARPHRD_ASH:int
	//19
	export const ARPHRD_ATM:int
	//3
	export const ARPHRD_AX25:int
	//775
	export const ARPHRD_BIF:int
	//5
	export const ARPHRD_CHAOS:int
	//513
	export const ARPHRD_CISCO:int
	//257
	export const ARPHRD_CSLIP:int
	//259
	export const ARPHRD_CSLIP6:int
	//517
	export const ARPHRD_DDCMP:int
	//15
	export const ARPHRD_DLCI:int
	//782
	export const ARPHRD_ECONET:int
	//2
	export const ARPHRD_EETHER:int
	//1
	export const ARPHRD_ETHER:int
	//27
	export const ARPHRD_EUI64:int
	//785
	export const ARPHRD_FCAL:int
	//787
	export const ARPHRD_FCFABRIC:int
	//786
	export const ARPHRD_FCPL:int
	//784
	export const ARPHRD_FCPP:int
	//774
	export const ARPHRD_FDDI:int
	//770
	export const ARPHRD_FRAD:int
	//513
	export const ARPHRD_HDLC:int
	//780
	export const ARPHRD_HIPPI:int
	//272
	export const ARPHRD_HWX25:int
	//24
	export const ARPHRD_IEEE1394:int
	//6
	export const ARPHRD_IEEE802:int
	//801
	export const ARPHRD_IEEE80211:int
	//802
	export const ARPHRD_IEEE80211_PRISM:int
	//803
	export const ARPHRD_IEEE80211_RADIOTAP:int
	//804
	export const ARPHRD_IEEE802154:int
	//805
	export const ARPHRD_IEEE802154_PHY:int
	//800
	export const ARPHRD_IEEE802_TR:int
	//32
	export const ARPHRD_INFINIBAND:int
	//777
	export const ARPHRD_IPDDP:int
	//778
	export const ARPHRD_IPGRE:int
	//783
	export const ARPHRD_IRDA:int
	//516
	export const ARPHRD_LAPB:int
	//773
	export const ARPHRD_LOCALTLK:int
	//772
	export const ARPHRD_LOOPBACK:int
	//23
	export const ARPHRD_METRICOM:int
	//0
	export const ARPHRD_NETROM:int
	//65534
	export const ARPHRD_NONE:int
	//779
	export const ARPHRD_PIMREG:int
	//512
	export const ARPHRD_PPP:int
	//4
	export const ARPHRD_PRONET:int
	//518
	export const ARPHRD_RAWHDLC:int
	//270
	export const ARPHRD_ROSE:int
	//260
	export const ARPHRD_RSRVD:int
	//776
	export const ARPHRD_SIT:int
	//771
	export const ARPHRD_SKIP:int
	//256
	export const ARPHRD_SLIP:int
	//258
	export const ARPHRD_SLIP6:int
	//768
	export const ARPHRD_TUNNEL:int
	//769
	export const ARPHRD_TUNNEL6:int
	//65535
	export const ARPHRD_VOID:int
	//271
	export const ARPHRD_X25:int
	export function accept(fd:int):[int,Sockaddr]

	export function accept4(fd:int,flags:int):[int,Sockaddr]

	export function access(path:string,mode:uint32)/*error*/

	export function acct(path:string)/*error*/

	export function adjtimex(buf:Ref<Timex>):int

	export function allThreadsSyscall(trap:uintptr,a1:uintptr,a2:uintptr,a3:uintptr):[uintptr,uintptr,Errno]

	export function allThreadsSyscall6(trap:uintptr,a1:uintptr,a2:uintptr,a3:uintptr,a4:uintptr,a5:uintptr,a6:uintptr):[uintptr,uintptr,Errno]

	export function attachLsf(fd:int,i:SockFilter[])/*error*/

	//0
	export const B0:int
	//4104
	export const B1000000:int
	//3
	export const B110:int
	//4098
	export const B115200:int
	//4105
	export const B1152000:int
	//9
	export const B1200:int
	//4
	export const B134:int
	//5
	export const B150:int
	//4106
	export const B1500000:int
	//10
	export const B1800:int
	//14
	export const B19200:int
	//6
	export const B200:int
	//4107
	export const B2000000:int
	//4099
	export const B230400:int
	//11
	export const B2400:int
	//4108
	export const B2500000:int
	//7
	export const B300:int
	//4109
	export const B3000000:int
	//4110
	export const B3500000:int
	//15
	export const B38400:int
	//4111
	export const B4000000:int
	//4100
	export const B460800:int
	//12
	export const B4800:int
	//1
	export const B50:int
	//4101
	export const B500000:int
	//4097
	export const B57600:int
	//4102
	export const B576000:int
	//8
	export const B600:int
	//2
	export const B75:int
	//4103
	export const B921600:int
	//13
	export const B9600:int
	//16
	export const BPF_A:int
	//32
	export const BPF_ABS:int
	//0
	export const BPF_ADD:int
	//4
	export const BPF_ALU:int
	//80
	export const BPF_AND:int
	//16
	export const BPF_B:int
	//48
	export const BPF_DIV:int
	//8
	export const BPF_H:int
	//0
	export const BPF_IMM:int
	//64
	export const BPF_IND:int
	//0
	export const BPF_JA:int
	//16
	export const BPF_JEQ:int
	//48
	export const BPF_JGE:int
	//32
	export const BPF_JGT:int
	//5
	export const BPF_JMP:int
	//64
	export const BPF_JSET:int
	//0
	export const BPF_K:int
	//0
	export const BPF_LD:int
	//1
	export const BPF_LDX:int
	//128
	export const BPF_LEN:int
	//96
	export const BPF_LSH:int
	//1
	export const BPF_MAJOR_VERSION:int
	//4096
	export const BPF_MAXINSNS:int
	//96
	export const BPF_MEM:int
	//16
	export const BPF_MEMWORDS:int
	//1
	export const BPF_MINOR_VERSION:int
	//7
	export const BPF_MISC:int
	//160
	export const BPF_MSH:int
	//32
	export const BPF_MUL:int
	//128
	export const BPF_NEG:int
	//64
	export const BPF_OR:int
	//6
	export const BPF_RET:int
	//112
	export const BPF_RSH:int
	//2
	export const BPF_ST:int
	//3
	export const BPF_STX:int
	//16
	export const BPF_SUB:int
	//0
	export const BPF_TAX:int
	//128
	export const BPF_TXA:int
	//0
	export const BPF_W:int
	//8
	export const BPF_X:int
	//2
	export const BRKINT:int
	export function bind(fd:int,sa:Sockaddr)/*error*/

	export function bindToDevice(fd:int,device:string)/*error*/

	export function bytePtrFromString(s:string):Ref<byte>

	export function byteSliceFromString(s:string):Uint8Array

	//2048
	export const CLOCAL:int
	//2097152
	export const CLONE_CHILD_CLEARTID:int
	//16777216
	export const CLONE_CHILD_SETTID:int
	//4294967296
	export const CLONE_CLEAR_SIGHAND:int
	//4194304
	export const CLONE_DETACHED:int
	//1024
	export const CLONE_FILES:int
	//512
	export const CLONE_FS:int
	//8589934592
	export const CLONE_INTO_CGROUP:int
	//2147483648
	export const CLONE_IO:int
	//33554432
	export const CLONE_NEWCGROUP:int
	//134217728
	export const CLONE_NEWIPC:int
	//1073741824
	export const CLONE_NEWNET:int
	//131072
	export const CLONE_NEWNS:int
	//536870912
	export const CLONE_NEWPID:int
	//128
	export const CLONE_NEWTIME:int
	//268435456
	export const CLONE_NEWUSER:int
	//67108864
	export const CLONE_NEWUTS:int
	//32768
	export const CLONE_PARENT:int
	//1048576
	export const CLONE_PARENT_SETTID:int
	//4096
	export const CLONE_PIDFD:int
	//8192
	export const CLONE_PTRACE:int
	//524288
	export const CLONE_SETTLS:int
	//2048
	export const CLONE_SIGHAND:int
	//262144
	export const CLONE_SYSVSEM:int
	//65536
	export const CLONE_THREAD:int
	//8388608
	export const CLONE_UNTRACED:int
	//16384
	export const CLONE_VFORK:int
	//256
	export const CLONE_VM:int
	//128
	export const CREAD:int
	//0
	export const CS5:int
	//16
	export const CS6:int
	//32
	export const CS7:int
	//48
	export const CS8:int
	//48
	export const CSIZE:int
	//64
	export const CSTOPB:int
	export function chdir(path:string)/*error*/

	export function chmod(path:string,mode:uint32)/*error*/

	export function chown(path:string,uid:int,gid:int)/*error*/

	export function chroot(path:string)/*error*/

	export function clearenv():void

	export function close(fd:int)/*error*/

	export function closeOnExec(fd:int):void

	export function cmsgLen(datalen:int):int

	export function cmsgSpace(datalen:int):int

	export interface Cmsghdr extends Struct<Cmsghdr>{

			len:uint64
			level:int32
			type:int32
			setLen(length:int):void
	}
	export interface Conn{

			syscallConn():RawConn
	}
	export function connect(fd:int,sa:Sockaddr)/*error*/

	export function creat(path:string,mode:uint32):int

	export interface Credential extends Struct<Credential>{

			uid:uint32
			gid:uint32
			groups:Uint32Array
			noSetGroups:bool
	}
	//6
	export const DT_BLK:int
	//2
	export const DT_CHR:int
	//4
	export const DT_DIR:int
	//1
	export const DT_FIFO:int
	//10
	export const DT_LNK:int
	//8
	export const DT_REG:int
	//12
	export const DT_SOCK:int
	//0
	export const DT_UNKNOWN:int
	//14
	export const DT_WHT:int
	export function detachLsf(fd:int)/*error*/

	export interface Dirent extends Struct<Dirent>{

			ino:uint64
			off:int64
			reclen:uint16
			type:uint8
			name:int8/*256*/
			pad_cgo_0:byte/*5*/
	}
	export function dup(oldfd:int):int

	export function dup2(oldfd:int,newfd:int)/*error*/

	export function dup3(oldfd:int,newfd:int,flags:int)/*error*/

	export const E2BIG:Errno
	export const EACCES:Errno
	export const EADDRINUSE:Errno
	export const EADDRNOTAVAIL:Errno
	export const EADV:Errno
	export const EAFNOSUPPORT:Errno
	export const EAGAIN:Errno
	export const EALREADY:Errno
	export const EBADE:Errno
	export const EBADF:Errno
	export const EBADFD:Errno
	export const EBADMSG:Errno
	export const EBADR:Errno
	export const EBADRQC:Errno
	export const EBADSLT:Errno
	export const EBFONT:Errno
	export const EBUSY:Errno
	export const ECANCELED:Errno
	export const ECHILD:Errno
	//8
	export const ECHO:int
	//512
	export const ECHOCTL:int
	//16
	export const ECHOE:int
	//32
	export const ECHOK:int
	//2048
	export const ECHOKE:int
	//64
	export const ECHONL:int
	//1024
	export const ECHOPRT:int
	export const ECHRNG:Errno
	export const ECOMM:Errno
	export const ECONNABORTED:Errno
	export const ECONNREFUSED:Errno
	export const ECONNRESET:Errno
	export const EDEADLK:Errno
	export const EDEADLOCK:Errno
	export const EDESTADDRREQ:Errno
	export const EDOM:Errno
	export const EDOTDOT:Errno
	export const EDQUOT:Errno
	export const EEXIST:Errno
	export const EFAULT:Errno
	export const EFBIG:Errno
	export const EHOSTDOWN:Errno
	export const EHOSTUNREACH:Errno
	export const EIDRM:Errno
	export const EILSEQ:Errno
	export const EINPROGRESS:Errno
	export const EINTR:Errno
	export const EINVAL:Errno
	export const EIO:Errno
	export const EISCONN:Errno
	export const EISDIR:Errno
	export const EISNAM:Errno
	export const EKEYEXPIRED:Errno
	export const EKEYREJECTED:Errno
	export const EKEYREVOKED:Errno
	export const EL2HLT:Errno
	export const EL2NSYNC:Errno
	export const EL3HLT:Errno
	export const EL3RST:Errno
	export const ELIBACC:Errno
	export const ELIBBAD:Errno
	export const ELIBEXEC:Errno
	export const ELIBMAX:Errno
	export const ELIBSCN:Errno
	export const ELNRNG:Errno
	export const ELOOP:Errno
	export const EMEDIUMTYPE:Errno
	export const EMFILE:Errno
	export const EMLINK:Errno
	export const EMSGSIZE:Errno
	export const EMULTIHOP:Errno
	export const ENAMETOOLONG:Errno
	export const ENAVAIL:Errno
	export const ENETDOWN:Errno
	export const ENETRESET:Errno
	export const ENETUNREACH:Errno
	export const ENFILE:Errno
	export const ENOANO:Errno
	export const ENOBUFS:Errno
	export const ENOCSI:Errno
	export const ENODATA:Errno
	export const ENODEV:Errno
	export const ENOENT:Errno
	export const ENOEXEC:Errno
	export const ENOKEY:Errno
	export const ENOLCK:Errno
	export const ENOLINK:Errno
	export const ENOMEDIUM:Errno
	export const ENOMEM:Errno
	export const ENOMSG:Errno
	export const ENONET:Errno
	export const ENOPKG:Errno
	export const ENOPROTOOPT:Errno
	export const ENOSPC:Errno
	export const ENOSR:Errno
	export const ENOSTR:Errno
	export const ENOSYS:Errno
	export const ENOTBLK:Errno
	export const ENOTCONN:Errno
	export const ENOTDIR:Errno
	export const ENOTEMPTY:Errno
	export const ENOTNAM:Errno
	export const ENOTRECOVERABLE:Errno
	export const ENOTSOCK:Errno
	export const ENOTSUP:Errno
	export const ENOTTY:Errno
	export const ENOTUNIQ:Errno
	export const ENXIO:Errno
	export const EOPNOTSUPP:Errno
	export const EOVERFLOW:Errno
	export const EOWNERDEAD:Errno
	export const EPERM:Errno
	export const EPFNOSUPPORT:Errno
	export const EPIPE:Errno
	//8
	export const EPOLLERR:int
	//-2147483648
	export const EPOLLET:int
	//16
	export const EPOLLHUP:int
	//1
	export const EPOLLIN:int
	//1024
	export const EPOLLMSG:int
	//1073741824
	export const EPOLLONESHOT:int
	//4
	export const EPOLLOUT:int
	//2
	export const EPOLLPRI:int
	//128
	export const EPOLLRDBAND:int
	//8192
	export const EPOLLRDHUP:int
	//64
	export const EPOLLRDNORM:int
	//512
	export const EPOLLWRBAND:int
	//256
	export const EPOLLWRNORM:int
	//524288
	export const EPOLL_CLOEXEC:int
	//1
	export const EPOLL_CTL_ADD:int
	//2
	export const EPOLL_CTL_DEL:int
	//3
	export const EPOLL_CTL_MOD:int
	//2048
	export const EPOLL_NONBLOCK:int
	export const EPROTO:Errno
	export const EPROTONOSUPPORT:Errno
	export const EPROTOTYPE:Errno
	export const ERANGE:Errno
	export const EREMCHG:Errno
	export const EREMOTE:Errno
	export const EREMOTEIO:Errno
	export const ERESTART:Errno
	export const ERFKILL:Errno
	export const EROFS:Errno
	export const ESHUTDOWN:Errno
	export const ESOCKTNOSUPPORT:Errno
	export const ESPIPE:Errno
	export const ESRCH:Errno
	export const ESRMNT:Errno
	export const ESTALE:Errno
	export const ESTRPIPE:Errno
	//35063
	export const ETH_P_1588:int
	//33024
	export const ETH_P_8021Q:int
	//4
	export const ETH_P_802_2:int
	//1
	export const ETH_P_802_3:int
	//33011
	export const ETH_P_AARP:int
	//3
	export const ETH_P_ALL:int
	//34978
	export const ETH_P_AOE:int
	//26
	export const ETH_P_ARCNET:int
	//2054
	export const ETH_P_ARP:int
	//32923
	export const ETH_P_ATALK:int
	//34948
	export const ETH_P_ATMFATE:int
	//34892
	export const ETH_P_ATMMPOA:int
	//2
	export const ETH_P_AX25:int
	//2303
	export const ETH_P_BPQ:int
	//247
	export const ETH_P_CAIF:int
	//12
	export const ETH_P_CAN:int
	//22
	export const ETH_P_CONTROL:int
	//24582
	export const ETH_P_CUST:int
	//6
	export const ETH_P_DDCMP:int
	//24576
	export const ETH_P_DEC:int
	//24581
	export const ETH_P_DIAG:int
	//24577
	export const ETH_P_DNA_DL:int
	//24578
	export const ETH_P_DNA_RC:int
	//24579
	export const ETH_P_DNA_RT:int
	//27
	export const ETH_P_DSA:int
	//24
	export const ETH_P_ECONET:int
	//56026
	export const ETH_P_EDSA:int
	//35078
	export const ETH_P_FCOE:int
	//35092
	export const ETH_P_FIP:int
	//25
	export const ETH_P_HDLC:int
	//246
	export const ETH_P_IEEE802154:int
	//2560
	export const ETH_P_IEEEPUP:int
	//2561
	export const ETH_P_IEEEPUPAT:int
	//2048
	export const ETH_P_IP:int
	//34525
	export const ETH_P_IPV6:int
	//33079
	export const ETH_P_IPX:int
	//23
	export const ETH_P_IRDA:int
	//24580
	export const ETH_P_LAT:int
	//34924
	export const ETH_P_LINK_CTL:int
	//9
	export const ETH_P_LOCALTALK:int
	//96
	export const ETH_P_LOOP:int
	//21
	export const ETH_P_MOBITEX:int
	//34888
	export const ETH_P_MPLS_MC:int
	//34887
	export const ETH_P_MPLS_UC:int
	//34958
	export const ETH_P_PAE:int
	//34824
	export const ETH_P_PAUSE:int
	//245
	export const ETH_P_PHONET:int
	//16
	export const ETH_P_PPPTALK:int
	//34915
	export const ETH_P_PPP_DISC:int
	//8
	export const ETH_P_PPP_MP:int
	//34916
	export const ETH_P_PPP_SES:int
	//512
	export const ETH_P_PUP:int
	//513
	export const ETH_P_PUPAT:int
	//32821
	export const ETH_P_RARP:int
	//24583
	export const ETH_P_SCA:int
	//34825
	export const ETH_P_SLOW:int
	//5
	export const ETH_P_SNAP:int
	//25944
	export const ETH_P_TEB:int
	//35018
	export const ETH_P_TIPC:int
	//28
	export const ETH_P_TRAILER:int
	//17
	export const ETH_P_TR_802_2:int
	//7
	export const ETH_P_WAN_PPP:int
	//34878
	export const ETH_P_WCCP:int
	//2053
	export const ETH_P_X25:int
	export const ETIME:Errno
	export const ETIMEDOUT:Errno
	export const ETOOMANYREFS:Errno
	export const ETXTBSY:Errno
	export const EUCLEAN:Errno
	export const EUNATCH:Errno
	export const EUSERS:Errno
	export const EWOULDBLOCK:Errno
	export const EXDEV:Errno
	export const EXFULL:Errno
	export function environ():string[]

	export function epollCreate(size:int):int

	export function epollCreate1(flag:int):int

	export function epollCtl(epfd:int,op:int,fd:int,event:Ref<EpollEvent>)/*error*/

	export interface EpollEvent extends Struct<EpollEvent>{

			events:uint32
			fd:int32
			pad:int32
	}
	export function epollWait(epfd:int,events:EpollEvent[],msec:int):int

	export interface Errno extends uintptr,GoError{

	error():string
	is(target:error):bool
	temporary():bool
	timeout():bool
	}
	export function exec(argv0:string,argv:string[],envv:string[])/*error*/

	export function exit(code:int):void

	//1
	export const FD_CLOEXEC:int
	//1024
	export const FD_SETSIZE:int
	//4096
	export const FLUSHO:int
	//0
	export const F_DUPFD:int
	//1030
	export const F_DUPFD_CLOEXEC:int
	//4
	export const F_EXLCK:int
	//1
	export const F_GETFD:int
	//3
	export const F_GETFL:int
	//1025
	export const F_GETLEASE:int
	//5
	export const F_GETLK:int
	//5
	export const F_GETLK64:int
	//9
	export const F_GETOWN:int
	//16
	export const F_GETOWN_EX:int
	//1032
	export const F_GETPIPE_SZ:int
	//11
	export const F_GETSIG:int
	//1
	export const F_LOCK:int
	//1026
	export const F_NOTIFY:int
	//0
	export const F_OK:int
	//0
	export const F_RDLCK:int
	//2
	export const F_SETFD:int
	//4
	export const F_SETFL:int
	//1024
	export const F_SETLEASE:int
	//6
	export const F_SETLK:int
	//6
	export const F_SETLK64:int
	//7
	export const F_SETLKW:int
	//7
	export const F_SETLKW64:int
	//8
	export const F_SETOWN:int
	//15
	export const F_SETOWN_EX:int
	//1031
	export const F_SETPIPE_SZ:int
	//10
	export const F_SETSIG:int
	//8
	export const F_SHLCK:int
	//3
	export const F_TEST:int
	//2
	export const F_TLOCK:int
	//0
	export const F_ULOCK:int
	//2
	export const F_UNLCK:int
	//1
	export const F_WRLCK:int
	export function faccessat(dirfd:int,path:string,mode:uint32,flags:int)/*error*/

	export function fallocate(fd:int,mode:uint32,off:int64,len:int64)/*error*/

	export function fchdir(fd:int)/*error*/

	export function fchmod(fd:int,mode:uint32)/*error*/

	export function fchmodat(dirfd:int,path:string,mode:uint32,flags:int)/*error*/

	export function fchown(fd:int,uid:int,gid:int)/*error*/

	export function fchownat(dirfd:int,path:string,uid:int,gid:int,flags:int)/*error*/

	export function fcntlFlock(fd:uintptr,cmd:int,lk:Ref<Flock_t>)/*error*/

	export interface FdSet extends Struct<FdSet>{

			bits:int64/*16*/
	}
	export function fdatasync(fd:int)/*error*/

	export function flock(fd:int,how:int)/*error*/

	export interface Flock_t extends Struct<Flock_t>{

			type:int16
			whence:int16
			pad_cgo_0:byte/*4*/
			start:int64
			len:int64
			pid:int32
			pad_cgo_1:byte/*4*/
	}
	export function forkExec(argv0:string,argv:string[],attr:Ref<ProcAttr>):int

	export const ForkLock:sync.RWMutex
	export interface Fsid extends Struct<Fsid>{

			x__val:int32/*2*/
	}
	export function fstat(fd:int,stat:Ref<Stat_t>)/*error*/

	export function fstatfs(fd:int,buf:Ref<Statfs_t>)/*error*/

	export function fsync(fd:int)/*error*/

	export function ftruncate(fd:int,length:int64)/*error*/

	export function futimes(fd:int,tv:Timeval[])/*error*/

	export function futimesat(dirfd:int,path:string,tv:Timeval[])/*error*/

	export function getcwd(buf:Uint8Array):int

	export function getdents(fd:int,buf:Uint8Array):int

	export function getegid():int

	export function getenv(key:string):[string,bool]

	export function geteuid():int

	export function getgid():int

	export function getgroups():int[]

	export function getpagesize():int

	export function getpeername(fd:int):Sockaddr

	export function getpgid(pid:int):int

	export function getpgrp():int

	export function getpid():int

	export function getppid():int

	export function getpriority(which:int,who:int):int

	export function getrlimit(resource:int,rlim:Ref<Rlimit>)/*error*/

	export function getrusage(who:int,rusage:Ref<Rusage>)/*error*/

	export function getsockname(fd:int):Sockaddr

	export function getsockoptICMPv6Filter(fd:int,level:int,opt:int):Ref<ICMPv6Filter>

	export function getsockoptIPMreq(fd:int,level:int,opt:int):Ref<IPMreq>

	export function getsockoptIPMreqn(fd:int,level:int,opt:int):Ref<IPMreqn>

	export function getsockoptIPv6MTUInfo(fd:int,level:int,opt:int):Ref<IPv6MTUInfo>

	export function getsockoptIPv6Mreq(fd:int,level:int,opt:int):Ref<IPv6Mreq>

	export function getsockoptInet4Addr(fd:int,level:int,opt:int):byte/*4*/

	export function getsockoptInt(fd:int,level:int,opt:int):int

	export function getsockoptUcred(fd:int,level:int,opt:int):Ref<Ucred>

	export function gettid():int

	export function gettimeofday(tv:Ref<Timeval>)/*error*/

	export function getuid():int

	export function getwd():string

	export function getxattr(path:string,attr:string,dest:Uint8Array):int

	//1024
	export const HUPCL:int
	//2
	export const ICANON:int
	//1
	export const ICMPV6_FILTER:int
	export interface ICMPv6Filter extends Struct<ICMPv6Filter>{

			data:uint32/*8*/
	}
	//256
	export const ICRNL:int
	//32768
	export const IEXTEN:int
	//1
	export const IFA_ADDRESS:int
	//5
	export const IFA_ANYCAST:int
	//4
	export const IFA_BROADCAST:int
	//6
	export const IFA_CACHEINFO:int
	//8
	export const IFA_F_DADFAILED:int
	//32
	export const IFA_F_DEPRECATED:int
	//16
	export const IFA_F_HOMEADDRESS:int
	//2
	export const IFA_F_NODAD:int
	//4
	export const IFA_F_OPTIMISTIC:int
	//128
	export const IFA_F_PERMANENT:int
	//1
	export const IFA_F_SECONDARY:int
	//1
	export const IFA_F_TEMPORARY:int
	//64
	export const IFA_F_TENTATIVE:int
	//3
	export const IFA_LABEL:int
	//2
	export const IFA_LOCAL:int
	//7
	export const IFA_MAX:int
	//7
	export const IFA_MULTICAST:int
	//0
	export const IFA_UNSPEC:int
	//512
	export const IFF_ALLMULTI:int
	//16384
	export const IFF_AUTOMEDIA:int
	//2
	export const IFF_BROADCAST:int
	//4
	export const IFF_DEBUG:int
	//32768
	export const IFF_DYNAMIC:int
	//8
	export const IFF_LOOPBACK:int
	//1024
	export const IFF_MASTER:int
	//4096
	export const IFF_MULTICAST:int
	//128
	export const IFF_NOARP:int
	//32
	export const IFF_NOTRAILERS:int
	//4096
	export const IFF_NO_PI:int
	//8192
	export const IFF_ONE_QUEUE:int
	//16
	export const IFF_POINTOPOINT:int
	//8192
	export const IFF_PORTSEL:int
	//256
	export const IFF_PROMISC:int
	//64
	export const IFF_RUNNING:int
	//2048
	export const IFF_SLAVE:int
	//2
	export const IFF_TAP:int
	//1
	export const IFF_TUN:int
	//32768
	export const IFF_TUN_EXCL:int
	//1
	export const IFF_UP:int
	//16384
	export const IFF_VNET_HDR:int
	//1
	export const IFLA_ADDRESS:int
	//2
	export const IFLA_BROADCAST:int
	//8
	export const IFLA_COST:int
	//20
	export const IFLA_IFALIAS:int
	//3
	export const IFLA_IFNAME:int
	//5
	export const IFLA_LINK:int
	//18
	export const IFLA_LINKINFO:int
	//17
	export const IFLA_LINKMODE:int
	//14
	export const IFLA_MAP:int
	//10
	export const IFLA_MASTER:int
	//29
	export const IFLA_MAX:int
	//4
	export const IFLA_MTU:int
	//19
	export const IFLA_NET_NS_PID:int
	//16
	export const IFLA_OPERSTATE:int
	//9
	export const IFLA_PRIORITY:int
	//12
	export const IFLA_PROTINFO:int
	//6
	export const IFLA_QDISC:int
	//7
	export const IFLA_STATS:int
	//13
	export const IFLA_TXQLEN:int
	//0
	export const IFLA_UNSPEC:int
	//15
	export const IFLA_WEIGHT:int
	//11
	export const IFLA_WIRELESS:int
	//16
	export const IFNAMSIZ:int
	//1
	export const IGNBRK:int
	//128
	export const IGNCR:int
	//4
	export const IGNPAR:int
	//8192
	export const IMAXBEL:int
	//64
	export const INLCR:int
	//16
	export const INPCK:int
	//1
	export const IN_ACCESS:int
	//4095
	export const IN_ALL_EVENTS:int
	//4
	export const IN_ATTRIB:int
	//16777215
	export const IN_CLASSA_HOST:int
	//128
	export const IN_CLASSA_MAX:int
	//4278190080
	export const IN_CLASSA_NET:int
	//24
	export const IN_CLASSA_NSHIFT:int
	//65535
	export const IN_CLASSB_HOST:int
	//65536
	export const IN_CLASSB_MAX:int
	//4294901760
	export const IN_CLASSB_NET:int
	//16
	export const IN_CLASSB_NSHIFT:int
	//255
	export const IN_CLASSC_HOST:int
	//4294967040
	export const IN_CLASSC_NET:int
	//8
	export const IN_CLASSC_NSHIFT:int
	//524288
	export const IN_CLOEXEC:int
	//24
	export const IN_CLOSE:int
	//16
	export const IN_CLOSE_NOWRITE:int
	//8
	export const IN_CLOSE_WRITE:int
	//256
	export const IN_CREATE:int
	//512
	export const IN_DELETE:int
	//1024
	export const IN_DELETE_SELF:int
	//33554432
	export const IN_DONT_FOLLOW:int
	//67108864
	export const IN_EXCL_UNLINK:int
	//32768
	export const IN_IGNORED:int
	//1073741824
	export const IN_ISDIR:int
	//127
	export const IN_LOOPBACKNET:int
	//536870912
	export const IN_MASK_ADD:int
	//2
	export const IN_MODIFY:int
	//192
	export const IN_MOVE:int
	//64
	export const IN_MOVED_FROM:int
	//128
	export const IN_MOVED_TO:int
	//2048
	export const IN_MOVE_SELF:int
	//2048
	export const IN_NONBLOCK:int
	//2147483648
	export const IN_ONESHOT:int
	//16777216
	export const IN_ONLYDIR:int
	//32
	export const IN_OPEN:int
	//16384
	export const IN_Q_OVERFLOW:int
	//8192
	export const IN_UNMOUNT:int
	export interface IPMreq extends Struct<IPMreq>{

			multiaddr:byte/*4*/
			interface:byte/*4*/
	}
	export interface IPMreqn extends Struct<IPMreqn>{

			multiaddr:byte/*4*/
			address:byte/*4*/
			ifindex:int32
	}
	//51
	export const IPPROTO_AH:int
	//108
	export const IPPROTO_COMP:int
	//33
	export const IPPROTO_DCCP:int
	//60
	export const IPPROTO_DSTOPTS:int
	//8
	export const IPPROTO_EGP:int
	//98
	export const IPPROTO_ENCAP:int
	//50
	export const IPPROTO_ESP:int
	//44
	export const IPPROTO_FRAGMENT:int
	//47
	export const IPPROTO_GRE:int
	//0
	export const IPPROTO_HOPOPTS:int
	//1
	export const IPPROTO_ICMP:int
	//58
	export const IPPROTO_ICMPV6:int
	//22
	export const IPPROTO_IDP:int
	//2
	export const IPPROTO_IGMP:int
	//0
	export const IPPROTO_IP:int
	//4
	export const IPPROTO_IPIP:int
	//41
	export const IPPROTO_IPV6:int
	//92
	export const IPPROTO_MTP:int
	//59
	export const IPPROTO_NONE:int
	//103
	export const IPPROTO_PIM:int
	//12
	export const IPPROTO_PUP:int
	//255
	export const IPPROTO_RAW:int
	//43
	export const IPPROTO_ROUTING:int
	//46
	export const IPPROTO_RSVP:int
	//132
	export const IPPROTO_SCTP:int
	//6
	export const IPPROTO_TCP:int
	//29
	export const IPPROTO_TP:int
	//17
	export const IPPROTO_UDP:int
	//136
	export const IPPROTO_UDPLITE:int
	//4
	export const IPV6_2292DSTOPTS:int
	//8
	export const IPV6_2292HOPLIMIT:int
	//3
	export const IPV6_2292HOPOPTS:int
	//2
	export const IPV6_2292PKTINFO:int
	//6
	export const IPV6_2292PKTOPTIONS:int
	//5
	export const IPV6_2292RTHDR:int
	//1
	export const IPV6_ADDRFORM:int
	//20
	export const IPV6_ADD_MEMBERSHIP:int
	//10
	export const IPV6_AUTHHDR:int
	//7
	export const IPV6_CHECKSUM:int
	//21
	export const IPV6_DROP_MEMBERSHIP:int
	//59
	export const IPV6_DSTOPTS:int
	//52
	export const IPV6_HOPLIMIT:int
	//54
	export const IPV6_HOPOPTS:int
	//34
	export const IPV6_IPSEC_POLICY:int
	//27
	export const IPV6_JOIN_ANYCAST:int
	//20
	export const IPV6_JOIN_GROUP:int
	//28
	export const IPV6_LEAVE_ANYCAST:int
	//21
	export const IPV6_LEAVE_GROUP:int
	//24
	export const IPV6_MTU:int
	//23
	export const IPV6_MTU_DISCOVER:int
	//18
	export const IPV6_MULTICAST_HOPS:int
	//17
	export const IPV6_MULTICAST_IF:int
	//19
	export const IPV6_MULTICAST_LOOP:int
	//9
	export const IPV6_NEXTHOP:int
	//50
	export const IPV6_PKTINFO:int
	//2
	export const IPV6_PMTUDISC_DO:int
	//0
	export const IPV6_PMTUDISC_DONT:int
	//3
	export const IPV6_PMTUDISC_PROBE:int
	//1
	export const IPV6_PMTUDISC_WANT:int
	//58
	export const IPV6_RECVDSTOPTS:int
	//25
	export const IPV6_RECVERR:int
	//51
	export const IPV6_RECVHOPLIMIT:int
	//53
	export const IPV6_RECVHOPOPTS:int
	//49
	export const IPV6_RECVPKTINFO:int
	//56
	export const IPV6_RECVRTHDR:int
	//66
	export const IPV6_RECVTCLASS:int
	//22
	export const IPV6_ROUTER_ALERT:int
	//57
	export const IPV6_RTHDR:int
	//55
	export const IPV6_RTHDRDSTOPTS:int
	//0
	export const IPV6_RTHDR_LOOSE:int
	//1
	export const IPV6_RTHDR_STRICT:int
	//0
	export const IPV6_RTHDR_TYPE_0:int
	//59
	export const IPV6_RXDSTOPTS:int
	//54
	export const IPV6_RXHOPOPTS:int
	//67
	export const IPV6_TCLASS:int
	//16
	export const IPV6_UNICAST_HOPS:int
	//26
	export const IPV6_V6ONLY:int
	//35
	export const IPV6_XFRM_POLICY:int
	//35
	export const IP_ADD_MEMBERSHIP:int
	//39
	export const IP_ADD_SOURCE_MEMBERSHIP:int
	//38
	export const IP_BLOCK_SOURCE:int
	//1
	export const IP_DEFAULT_MULTICAST_LOOP:int
	//1
	export const IP_DEFAULT_MULTICAST_TTL:int
	//16384
	export const IP_DF:int
	//36
	export const IP_DROP_MEMBERSHIP:int
	//40
	export const IP_DROP_SOURCE_MEMBERSHIP:int
	//15
	export const IP_FREEBIND:int
	//3
	export const IP_HDRINCL:int
	//16
	export const IP_IPSEC_POLICY:int
	//65535
	export const IP_MAXPACKET:int
	//20
	export const IP_MAX_MEMBERSHIPS:int
	//8192
	export const IP_MF:int
	//21
	export const IP_MINTTL:int
	//41
	export const IP_MSFILTER:int
	//576
	export const IP_MSS:int
	//14
	export const IP_MTU:int
	//10
	export const IP_MTU_DISCOVER:int
	//32
	export const IP_MULTICAST_IF:int
	//34
	export const IP_MULTICAST_LOOP:int
	//33
	export const IP_MULTICAST_TTL:int
	//8191
	export const IP_OFFMASK:int
	//4
	export const IP_OPTIONS:int
	//20
	export const IP_ORIGDSTADDR:int
	//18
	export const IP_PASSSEC:int
	//8
	export const IP_PKTINFO:int
	//9
	export const IP_PKTOPTIONS:int
	//10
	export const IP_PMTUDISC:int
	//2
	export const IP_PMTUDISC_DO:int
	//0
	export const IP_PMTUDISC_DONT:int
	//3
	export const IP_PMTUDISC_PROBE:int
	//1
	export const IP_PMTUDISC_WANT:int
	//11
	export const IP_RECVERR:int
	//6
	export const IP_RECVOPTS:int
	//20
	export const IP_RECVORIGDSTADDR:int
	//7
	export const IP_RECVRETOPTS:int
	//13
	export const IP_RECVTOS:int
	//12
	export const IP_RECVTTL:int
	//7
	export const IP_RETOPTS:int
	//32768
	export const IP_RF:int
	//5
	export const IP_ROUTER_ALERT:int
	//1
	export const IP_TOS:int
	//19
	export const IP_TRANSPARENT:int
	//2
	export const IP_TTL:int
	//37
	export const IP_UNBLOCK_SOURCE:int
	//17
	export const IP_XFRM_POLICY:int
	export interface IPv6MTUInfo extends Struct<IPv6MTUInfo>{

			addr:RawSockaddrInet6
			mtu:uint32
	}
	export interface IPv6Mreq extends Struct<IPv6Mreq>{

			multiaddr:byte/*16*/
			interface:uint32
	}
	//1
	export const ISIG:int
	//32
	export const ISTRIP:int
	//512
	export const IUCLC:int
	//16384
	export const IUTF8:int
	//2048
	export const IXANY:int
	//4096
	export const IXOFF:int
	//1024
	export const IXON:int
	export interface IfAddrmsg extends Struct<IfAddrmsg>{

			family:uint8
			prefixlen:uint8
			flags:uint8
			scope:uint8
			index:uint32
	}
	export interface IfInfomsg extends Struct<IfInfomsg>{

			family:uint8
			x__ifi_pad:uint8
			type:uint16
			index:int32
			flags:uint32
			change:uint32
	}
	//true
	export const ImplementsGetwd:bool
	export interface Inet4Pktinfo extends Struct<Inet4Pktinfo>{

			ifindex:int32
			spec_dst:byte/*4*/
			addr:byte/*4*/
	}
	export interface Inet6Pktinfo extends Struct<Inet6Pktinfo>{

			addr:byte/*16*/
			ifindex:uint32
	}
	export function inotifyAddWatch(fd:int,pathname:string,mask:uint32):int

	export interface InotifyEvent extends Struct<InotifyEvent>{

			wd:int32
			mask:uint32
			cookie:uint32
			len:uint32
			name:uint8
	}
	export function inotifyInit():int

	export function inotifyInit1(flags:int):int

	export function inotifyRmWatch(fd:int,watchdesc:uint32):int

	export function ioperm(from:int,num:int,on:int)/*error*/

	export function iopl(level:int)/*error*/

	export interface Iovec extends Struct<Iovec>{

			base:Ref<byte>
			len:uint64
			setLen(length:int):void
	}
	export function kill(pid:int,sig:Signal)/*error*/

	export function klogctl(typ:int,buf:Uint8Array):int

	//0
	export const LINUX_REBOOT_CMD_CAD_OFF:int
	//2309737967
	export const LINUX_REBOOT_CMD_CAD_ON:int
	//3454992675
	export const LINUX_REBOOT_CMD_HALT:int
	//1163412803
	export const LINUX_REBOOT_CMD_KEXEC:int
	//1126301404
	export const LINUX_REBOOT_CMD_POWER_OFF:int
	//19088743
	export const LINUX_REBOOT_CMD_RESTART:int
	//2712847316
	export const LINUX_REBOOT_CMD_RESTART2:int
	//3489725666
	export const LINUX_REBOOT_CMD_SW_SUSPEND:int
	//4276215469
	export const LINUX_REBOOT_MAGIC1:int
	//672274793
	export const LINUX_REBOOT_MAGIC2:int
	//2
	export const LOCK_EX:int
	//4
	export const LOCK_NB:int
	//1
	export const LOCK_SH:int
	//8
	export const LOCK_UN:int
	export function lchown(path:string,uid:int,gid:int)/*error*/

	export interface Linger extends Struct<Linger>{

			onoff:int32
			linger:int32
	}
	export function link(oldpath:string,newpath:string)/*error*/

	export function listen(s:int,n:int)/*error*/

	export function listxattr(path:string,dest:Uint8Array):int

	export function lsfJump(code:int,k:int,jt:int,jf:int):Ref<SockFilter>

	export function lsfSocket(ifindex:int,proto:int):int

	export function lsfStmt(code:int,k:int):Ref<SockFilter>

	export function lstat(path:string,stat:Ref<Stat_t>)/*error*/

	//11
	export const MADV_DOFORK:int
	//10
	export const MADV_DONTFORK:int
	//4
	export const MADV_DONTNEED:int
	//14
	export const MADV_HUGEPAGE:int
	//100
	export const MADV_HWPOISON:int
	//12
	export const MADV_MERGEABLE:int
	//15
	export const MADV_NOHUGEPAGE:int
	//0
	export const MADV_NORMAL:int
	//1
	export const MADV_RANDOM:int
	//9
	export const MADV_REMOVE:int
	//2
	export const MADV_SEQUENTIAL:int
	//13
	export const MADV_UNMERGEABLE:int
	//3
	export const MADV_WILLNEED:int
	//64
	export const MAP_32BIT:int
	//32
	export const MAP_ANON:int
	//32
	export const MAP_ANONYMOUS:int
	//2048
	export const MAP_DENYWRITE:int
	//4096
	export const MAP_EXECUTABLE:int
	//0
	export const MAP_FILE:int
	//16
	export const MAP_FIXED:int
	//256
	export const MAP_GROWSDOWN:int
	//262144
	export const MAP_HUGETLB:int
	//8192
	export const MAP_LOCKED:int
	//65536
	export const MAP_NONBLOCK:int
	//16384
	export const MAP_NORESERVE:int
	//32768
	export const MAP_POPULATE:int
	//2
	export const MAP_PRIVATE:int
	//1
	export const MAP_SHARED:int
	//131072
	export const MAP_STACK:int
	//15
	export const MAP_TYPE:int
	//1
	export const MCL_CURRENT:int
	//2
	export const MCL_FUTURE:int
	//2
	export const MNT_DETACH:int
	//4
	export const MNT_EXPIRE:int
	//1
	export const MNT_FORCE:int
	//1073741824
	export const MSG_CMSG_CLOEXEC:int
	//2048
	export const MSG_CONFIRM:int
	//8
	export const MSG_CTRUNC:int
	//4
	export const MSG_DONTROUTE:int
	//64
	export const MSG_DONTWAIT:int
	//128
	export const MSG_EOR:int
	//8192
	export const MSG_ERRQUEUE:int
	//536870912
	export const MSG_FASTOPEN:int
	//512
	export const MSG_FIN:int
	//32768
	export const MSG_MORE:int
	//16384
	export const MSG_NOSIGNAL:int
	//1
	export const MSG_OOB:int
	//2
	export const MSG_PEEK:int
	//16
	export const MSG_PROXY:int
	//4096
	export const MSG_RST:int
	//1024
	export const MSG_SYN:int
	//32
	export const MSG_TRUNC:int
	//4
	export const MSG_TRYHARD:int
	//256
	export const MSG_WAITALL:int
	//65536
	export const MSG_WAITFORONE:int
	//1073741824
	export const MS_ACTIVE:int
	//1
	export const MS_ASYNC:int
	//4096
	export const MS_BIND:int
	//128
	export const MS_DIRSYNC:int
	//2
	export const MS_INVALIDATE:int
	//8388608
	export const MS_I_VERSION:int
	//4194304
	export const MS_KERNMOUNT:int
	//64
	export const MS_MANDLOCK:int
	//4294901760
	export const MS_MGC_MSK:int
	//3236757504
	export const MS_MGC_VAL:int
	//8192
	export const MS_MOVE:int
	//1024
	export const MS_NOATIME:int
	//4
	export const MS_NODEV:int
	//2048
	export const MS_NODIRATIME:int
	//8
	export const MS_NOEXEC:int
	//2
	export const MS_NOSUID:int
	//-2147483648
	export const MS_NOUSER:int
	//65536
	export const MS_POSIXACL:int
	//262144
	export const MS_PRIVATE:int
	//1
	export const MS_RDONLY:int
	//16384
	export const MS_REC:int
	//2097152
	export const MS_RELATIME:int
	//32
	export const MS_REMOUNT:int
	//8388689
	export const MS_RMT_MASK:int
	//1048576
	export const MS_SHARED:int
	//32768
	export const MS_SILENT:int
	//524288
	export const MS_SLAVE:int
	//16777216
	export const MS_STRICTATIME:int
	//4
	export const MS_SYNC:int
	//16
	export const MS_SYNCHRONOUS:int
	//131072
	export const MS_UNBINDABLE:int
	export function madvise(b:Uint8Array,advice:int)/*error*/

	export function mkdir(path:string,mode:uint32)/*error*/

	export function mkdirat(dirfd:int,path:string,mode:uint32)/*error*/

	export function mkfifo(path:string,mode:uint32)/*error*/

	export function mknod(path:string,mode:uint32,dev:int)/*error*/

	export function mknodat(dirfd:int,path:string,mode:uint32,dev:int)/*error*/

	export function mlock(b:Uint8Array)/*error*/

	export function mlockall(flags:int)/*error*/

	export function mmap(fd:int,offset:int64,length:int,prot:int,flags:int):Uint8Array

	export function mount(source:string,target:string,fstype:string,flags:uintptr,data:string)/*error*/

	export function mprotect(b:Uint8Array,prot:int)/*error*/

	export interface Msghdr extends Struct<Msghdr>{

			name:Ref<byte>
			namelen:uint32
			pad_cgo_0:byte/*4*/
			iov:Ref<Iovec>
			iovlen:uint64
			control:Ref<byte>
			controllen:uint64
			flags:int32
			pad_cgo_1:byte/*4*/
			setControllen(length:int):void
	}
	export function munlock(b:Uint8Array)/*error*/

	export function munlockall()/*error*/

	export function munmap(b:Uint8Array)/*error*/

	//255
	export const NAME_MAX:int
	//1
	export const NETLINK_ADD_MEMBERSHIP:int
	//9
	export const NETLINK_AUDIT:int
	//4
	export const NETLINK_BROADCAST_ERROR:int
	//11
	export const NETLINK_CONNECTOR:int
	//14
	export const NETLINK_DNRTMSG:int
	//2
	export const NETLINK_DROP_MEMBERSHIP:int
	//19
	export const NETLINK_ECRYPTFS:int
	//10
	export const NETLINK_FIB_LOOKUP:int
	//3
	export const NETLINK_FIREWALL:int
	//16
	export const NETLINK_GENERIC:int
	//4
	export const NETLINK_INET_DIAG:int
	//13
	export const NETLINK_IP6_FW:int
	//8
	export const NETLINK_ISCSI:int
	//15
	export const NETLINK_KOBJECT_UEVENT:int
	//12
	export const NETLINK_NETFILTER:int
	//5
	export const NETLINK_NFLOG:int
	//5
	export const NETLINK_NO_ENOBUFS:int
	//3
	export const NETLINK_PKTINFO:int
	//0
	export const NETLINK_ROUTE:int
	//18
	export const NETLINK_SCSITRANSPORT:int
	//7
	export const NETLINK_SELINUX:int
	//1
	export const NETLINK_UNUSED:int
	//2
	export const NETLINK_USERSOCK:int
	//6
	export const NETLINK_XFRM:int
	//4
	export const NLA_ALIGNTO:int
	//32768
	export const NLA_F_NESTED:int
	//16384
	export const NLA_F_NET_BYTEORDER:int
	//4
	export const NLA_HDRLEN:int
	//4
	export const NLMSG_ALIGNTO:int
	//3
	export const NLMSG_DONE:int
	//2
	export const NLMSG_ERROR:int
	//16
	export const NLMSG_HDRLEN:int
	//16
	export const NLMSG_MIN_TYPE:int
	//1
	export const NLMSG_NOOP:int
	//4
	export const NLMSG_OVERRUN:int
	//4
	export const NLM_F_ACK:int
	//2048
	export const NLM_F_APPEND:int
	//1024
	export const NLM_F_ATOMIC:int
	//1024
	export const NLM_F_CREATE:int
	//768
	export const NLM_F_DUMP:int
	//8
	export const NLM_F_ECHO:int
	//512
	export const NLM_F_EXCL:int
	//512
	export const NLM_F_MATCH:int
	//2
	export const NLM_F_MULTI:int
	//256
	export const NLM_F_REPLACE:int
	//1
	export const NLM_F_REQUEST:int
	//256
	export const NLM_F_ROOT:int
	//128
	export const NOFLSH:int
	export function nanosleep(time:Ref<Timespec>,leftover:Ref<Timespec>)/*error*/

	export interface NetlinkMessage extends Struct<NetlinkMessage>{

			header:NlMsghdr
			data:Uint8Array
	}
	export function netlinkRIB(proto:int,family:int):Uint8Array

	export interface NetlinkRouteAttr extends Struct<NetlinkRouteAttr>{

			attr:RtAttr
			value:Uint8Array
	}
	export interface NetlinkRouteRequest extends Struct<NetlinkRouteRequest>{

			header:NlMsghdr
			data:RtGenmsg
	}
	export interface NlAttr extends Struct<NlAttr>{

			len:uint16
			type:uint16
	}
	export interface NlMsgerr extends Struct<NlMsgerr>{

			error:int32
			msg:NlMsghdr
	}
	export interface NlMsghdr extends Struct<NlMsghdr>{

			len:uint32
			type:uint16
			flags:uint16
			seq:uint32
			pid:uint32
	}
	export function nsecToTimespec(nsec:int64):Timespec

	export function nsecToTimeval(nsec:int64):Timeval

	//8
	export const OCRNL:int
	//128
	export const OFDEL:int
	//64
	export const OFILL:int
	//2
	export const OLCUC:int
	//4
	export const ONLCR:int
	//32
	export const ONLRET:int
	//16
	export const ONOCR:int
	//1
	export const OPOST:int
	//3
	export const O_ACCMODE:int
	//1024
	export const O_APPEND:int
	//8192
	export const O_ASYNC:int
	//524288
	export const O_CLOEXEC:int
	//64
	export const O_CREAT:int
	//16384
	export const O_DIRECT:int
	//65536
	export const O_DIRECTORY:int
	//4096
	export const O_DSYNC:int
	//128
	export const O_EXCL:int
	//1052672
	export const O_FSYNC:int
	//0
	export const O_LARGEFILE:int
	//2048
	export const O_NDELAY:int
	//262144
	export const O_NOATIME:int
	//256
	export const O_NOCTTY:int
	//131072
	export const O_NOFOLLOW:int
	//2048
	export const O_NONBLOCK:int
	//0
	export const O_RDONLY:int
	//2
	export const O_RDWR:int
	//1052672
	export const O_RSYNC:int
	//1052672
	export const O_SYNC:int
	//512
	export const O_TRUNC:int
	//1
	export const O_WRONLY:int
	export function open(path:string,mode:int,perm:uint32):int

	export function openat(dirfd:int,path:string,flags:int,mode:uint32):int

	//1
	export const PACKET_ADD_MEMBERSHIP:int
	//1
	export const PACKET_BROADCAST:int
	//2
	export const PACKET_DROP_MEMBERSHIP:int
	//6
	export const PACKET_FASTROUTE:int
	//0
	export const PACKET_HOST:int
	//5
	export const PACKET_LOOPBACK:int
	//2
	export const PACKET_MR_ALLMULTI:int
	//0
	export const PACKET_MR_MULTICAST:int
	//1
	export const PACKET_MR_PROMISC:int
	//2
	export const PACKET_MULTICAST:int
	//3
	export const PACKET_OTHERHOST:int
	//4
	export const PACKET_OUTGOING:int
	//3
	export const PACKET_RECV_OUTPUT:int
	//5
	export const PACKET_RX_RING:int
	//6
	export const PACKET_STATISTICS:int
	//256
	export const PARENB:int
	//8
	export const PARMRK:int
	//512
	export const PARODD:int
	//16384
	export const PENDIN:int
	//1
	export const PRIO_PGRP:int
	//0
	export const PRIO_PROCESS:int
	//2
	export const PRIO_USER:int
	//4
	export const PROT_EXEC:int
	//16777216
	export const PROT_GROWSDOWN:int
	//33554432
	export const PROT_GROWSUP:int
	//0
	export const PROT_NONE:int
	//1
	export const PROT_READ:int
	//2
	export const PROT_WRITE:int
	//24
	export const PR_CAPBSET_DROP:int
	//23
	export const PR_CAPBSET_READ:int
	//0
	export const PR_ENDIAN_BIG:int
	//1
	export const PR_ENDIAN_LITTLE:int
	//2
	export const PR_ENDIAN_PPC_LITTLE:int
	//1
	export const PR_FPEMU_NOPRINT:int
	//2
	export const PR_FPEMU_SIGFPE:int
	//2
	export const PR_FP_EXC_ASYNC:int
	//0
	export const PR_FP_EXC_DISABLED:int
	//65536
	export const PR_FP_EXC_DIV:int
	//1048576
	export const PR_FP_EXC_INV:int
	//1
	export const PR_FP_EXC_NONRECOV:int
	//131072
	export const PR_FP_EXC_OVF:int
	//3
	export const PR_FP_EXC_PRECISE:int
	//524288
	export const PR_FP_EXC_RES:int
	//128
	export const PR_FP_EXC_SW_ENABLE:int
	//262144
	export const PR_FP_EXC_UND:int
	//3
	export const PR_GET_DUMPABLE:int
	//19
	export const PR_GET_ENDIAN:int
	//9
	export const PR_GET_FPEMU:int
	//11
	export const PR_GET_FPEXC:int
	//7
	export const PR_GET_KEEPCAPS:int
	//16
	export const PR_GET_NAME:int
	//2
	export const PR_GET_PDEATHSIG:int
	//21
	export const PR_GET_SECCOMP:int
	//27
	export const PR_GET_SECUREBITS:int
	//30
	export const PR_GET_TIMERSLACK:int
	//13
	export const PR_GET_TIMING:int
	//25
	export const PR_GET_TSC:int
	//5
	export const PR_GET_UNALIGN:int
	//33
	export const PR_MCE_KILL:int
	//0
	export const PR_MCE_KILL_CLEAR:int
	//2
	export const PR_MCE_KILL_DEFAULT:int
	//1
	export const PR_MCE_KILL_EARLY:int
	//34
	export const PR_MCE_KILL_GET:int
	//0
	export const PR_MCE_KILL_LATE:int
	//1
	export const PR_MCE_KILL_SET:int
	//4
	export const PR_SET_DUMPABLE:int
	//20
	export const PR_SET_ENDIAN:int
	//10
	export const PR_SET_FPEMU:int
	//12
	export const PR_SET_FPEXC:int
	//8
	export const PR_SET_KEEPCAPS:int
	//15
	export const PR_SET_NAME:int
	//1
	export const PR_SET_PDEATHSIG:int
	//1499557217
	export const PR_SET_PTRACER:int
	//22
	export const PR_SET_SECCOMP:int
	//28
	export const PR_SET_SECUREBITS:int
	//29
	export const PR_SET_TIMERSLACK:int
	//14
	export const PR_SET_TIMING:int
	//26
	export const PR_SET_TSC:int
	//6
	export const PR_SET_UNALIGN:int
	//31
	export const PR_TASK_PERF_EVENTS_DISABLE:int
	//32
	export const PR_TASK_PERF_EVENTS_ENABLE:int
	//0
	export const PR_TIMING_STATISTICAL:int
	//1
	export const PR_TIMING_TIMESTAMP:int
	//1
	export const PR_TSC_ENABLE:int
	//2
	export const PR_TSC_SIGSEGV:int
	//1
	export const PR_UNALIGN_NOPRINT:int
	//2
	export const PR_UNALIGN_SIGBUS:int
	//30
	export const PTRACE_ARCH_PRCTL:int
	//16
	export const PTRACE_ATTACH:int
	//7
	export const PTRACE_CONT:int
	//17
	export const PTRACE_DETACH:int
	//3
	export const PTRACE_EVENT_CLONE:int
	//4
	export const PTRACE_EVENT_EXEC:int
	//6
	export const PTRACE_EVENT_EXIT:int
	//1
	export const PTRACE_EVENT_FORK:int
	//2
	export const PTRACE_EVENT_VFORK:int
	//5
	export const PTRACE_EVENT_VFORK_DONE:int
	//16897
	export const PTRACE_GETEVENTMSG:int
	//14
	export const PTRACE_GETFPREGS:int
	//18
	export const PTRACE_GETFPXREGS:int
	//12
	export const PTRACE_GETREGS:int
	//16900
	export const PTRACE_GETREGSET:int
	//16898
	export const PTRACE_GETSIGINFO:int
	//25
	export const PTRACE_GET_THREAD_AREA:int
	//8
	export const PTRACE_KILL:int
	//21
	export const PTRACE_OLDSETOPTIONS:int
	//127
	export const PTRACE_O_MASK:int
	//8
	export const PTRACE_O_TRACECLONE:int
	//16
	export const PTRACE_O_TRACEEXEC:int
	//64
	export const PTRACE_O_TRACEEXIT:int
	//2
	export const PTRACE_O_TRACEFORK:int
	//1
	export const PTRACE_O_TRACESYSGOOD:int
	//4
	export const PTRACE_O_TRACEVFORK:int
	//32
	export const PTRACE_O_TRACEVFORKDONE:int
	//2
	export const PTRACE_PEEKDATA:int
	//1
	export const PTRACE_PEEKTEXT:int
	//3
	export const PTRACE_PEEKUSR:int
	//5
	export const PTRACE_POKEDATA:int
	//4
	export const PTRACE_POKETEXT:int
	//6
	export const PTRACE_POKEUSR:int
	//15
	export const PTRACE_SETFPREGS:int
	//19
	export const PTRACE_SETFPXREGS:int
	//16896
	export const PTRACE_SETOPTIONS:int
	//13
	export const PTRACE_SETREGS:int
	//16901
	export const PTRACE_SETREGSET:int
	//16899
	export const PTRACE_SETSIGINFO:int
	//26
	export const PTRACE_SET_THREAD_AREA:int
	//33
	export const PTRACE_SINGLEBLOCK:int
	//9
	export const PTRACE_SINGLESTEP:int
	//24
	export const PTRACE_SYSCALL:int
	//31
	export const PTRACE_SYSEMU:int
	//32
	export const PTRACE_SYSEMU_SINGLESTEP:int
	//0
	export const PTRACE_TRACEME:int
	export function parseDirent(buf:Uint8Array,max:int,names:string[]):[int,int,string[]]

	export function parseNetlinkMessage(b:Uint8Array):NetlinkMessage[]

	export function parseNetlinkRouteAttr(m:Ref<NetlinkMessage>):NetlinkRouteAttr[]

	export function parseSocketControlMessage(b:Uint8Array):SocketControlMessage[]

	export function parseUnixCredentials(m:Ref<SocketControlMessage>):Ref<Ucred>

	export function parseUnixRights(m:Ref<SocketControlMessage>):int[]

	//4096
	export const PathMax:int
	export function pause()/*error*/

	export function pipe(p:int[])/*error*/

	export function pipe2(p:int[],flags:int)/*error*/

	export function pivotRoot(newroot:string,putold:string)/*error*/

	export function pread(fd:int,p:Uint8Array,offset:int64):int

	export interface ProcAttr extends Struct<ProcAttr>{

			dir:string
			env:string[]
			files:uintptr[]
			sys:Ref<SysProcAttr>
	}
	export function ptraceAttach(pid:int)/*error*/

	export function ptraceCont(pid:int,signal:int)/*error*/

	export function ptraceDetach(pid:int)/*error*/

	export function ptraceGetEventMsg(pid:int):uint

	export function ptraceGetRegs(pid:int,regsout:Ref<PtraceRegs>)/*error*/

	export function ptracePeekData(pid:int,addr:uintptr,out:Uint8Array):int

	export function ptracePeekText(pid:int,addr:uintptr,out:Uint8Array):int

	export function ptracePokeData(pid:int,addr:uintptr,data:Uint8Array):int

	export function ptracePokeText(pid:int,addr:uintptr,data:Uint8Array):int

	export interface PtraceRegs extends Struct<PtraceRegs>{

			R15:uint64
			R14:uint64
			R13:uint64
			R12:uint64
			rbp:uint64
			rbx:uint64
			R11:uint64
			R10:uint64
			R9:uint64
			R8:uint64
			rax:uint64
			rcx:uint64
			rdx:uint64
			rsi:uint64
			rdi:uint64
			orig_rax:uint64
			rip:uint64
			cs:uint64
			eflags:uint64
			rsp:uint64
			ss:uint64
			fs_base:uint64
			gs_base:uint64
			ds:uint64
			es:uint64
			fs:uint64
			gs:uint64
			pc():uint64
			setPC(pc:uint64):void
	}
	export function ptraceSetOptions(pid:int,options:int)/*error*/

	export function ptraceSetRegs(pid:int,regs:Ref<PtraceRegs>)/*error*/

	export function ptraceSingleStep(pid:int)/*error*/

	export function ptraceSyscall(pid:int,signal:int)/*error*/

	export function pwrite(fd:int,p:Uint8Array,offset:int64):int

	//9
	export const RLIMIT_AS:int
	//4
	export const RLIMIT_CORE:int
	//0
	export const RLIMIT_CPU:int
	//2
	export const RLIMIT_DATA:int
	//1
	export const RLIMIT_FSIZE:int
	//7
	export const RLIMIT_NOFILE:int
	//3
	export const RLIMIT_STACK:int
	//-1
	export const RLIM_INFINITY:int
	//8
	export const RTAX_ADVMSS:int
	//7
	export const RTAX_CWND:int
	//12
	export const RTAX_FEATURES:int
	//8
	export const RTAX_FEATURE_ALLFRAG:int
	//1
	export const RTAX_FEATURE_ECN:int
	//2
	export const RTAX_FEATURE_SACK:int
	//4
	export const RTAX_FEATURE_TIMESTAMP:int
	//10
	export const RTAX_HOPLIMIT:int
	//11
	export const RTAX_INITCWND:int
	//14
	export const RTAX_INITRWND:int
	//1
	export const RTAX_LOCK:int
	//14
	export const RTAX_MAX:int
	//2
	export const RTAX_MTU:int
	//9
	export const RTAX_REORDERING:int
	//13
	export const RTAX_RTO_MIN:int
	//4
	export const RTAX_RTT:int
	//5
	export const RTAX_RTTVAR:int
	//6
	export const RTAX_SSTHRESH:int
	//0
	export const RTAX_UNSPEC:int
	//3
	export const RTAX_WINDOW:int
	//4
	export const RTA_ALIGNTO:int
	//12
	export const RTA_CACHEINFO:int
	//1
	export const RTA_DST:int
	//11
	export const RTA_FLOW:int
	//5
	export const RTA_GATEWAY:int
	//3
	export const RTA_IIF:int
	//16
	export const RTA_MAX:int
	//8
	export const RTA_METRICS:int
	//9
	export const RTA_MULTIPATH:int
	//4
	export const RTA_OIF:int
	//7
	export const RTA_PREFSRC:int
	//6
	export const RTA_PRIORITY:int
	//2
	export const RTA_SRC:int
	//15
	export const RTA_TABLE:int
	//0
	export const RTA_UNSPEC:int
	//67108864
	export const RTCF_DIRECTSRC:int
	//16777216
	export const RTCF_DOREDIRECT:int
	//33554432
	export const RTCF_LOG:int
	//4194304
	export const RTCF_MASQ:int
	//8388608
	export const RTCF_NAT:int
	//2097152
	export const RTCF_VALVE:int
	//4160749568
	export const RTF_ADDRCLASSMASK:int
	//262144
	export const RTF_ADDRCONF:int
	//131072
	export const RTF_ALLONLINK:int
	//268435456
	export const RTF_BROADCAST:int
	//16777216
	export const RTF_CACHE:int
	//65536
	export const RTF_DEFAULT:int
	//16
	export const RTF_DYNAMIC:int
	//33554432
	export const RTF_FLOW:int
	//2
	export const RTF_GATEWAY:int
	//4
	export const RTF_HOST:int
	//1073741824
	export const RTF_INTERFACE:int
	//256
	export const RTF_IRTT:int
	//1048576
	export const RTF_LINKRT:int
	//2147483648
	export const RTF_LOCAL:int
	//32
	export const RTF_MODIFIED:int
	//64
	export const RTF_MSS:int
	//64
	export const RTF_MTU:int
	//536870912
	export const RTF_MULTICAST:int
	//134217728
	export const RTF_NAT:int
	//4096
	export const RTF_NOFORWARD:int
	//2097152
	export const RTF_NONEXTHOP:int
	//16384
	export const RTF_NOPMTUDISC:int
	//67108864
	export const RTF_POLICY:int
	//8
	export const RTF_REINSTATE:int
	//512
	export const RTF_REJECT:int
	//1024
	export const RTF_STATIC:int
	//8192
	export const RTF_THROW:int
	//1
	export const RTF_UP:int
	//128
	export const RTF_WINDOW:int
	//2048
	export const RTF_XRESOLVE:int
	//16
	export const RTM_BASE:int
	//49
	export const RTM_DELACTION:int
	//21
	export const RTM_DELADDR:int
	//73
	export const RTM_DELADDRLABEL:int
	//17
	export const RTM_DELLINK:int
	//29
	export const RTM_DELNEIGH:int
	//37
	export const RTM_DELQDISC:int
	//25
	export const RTM_DELROUTE:int
	//33
	export const RTM_DELRULE:int
	//41
	export const RTM_DELTCLASS:int
	//45
	export const RTM_DELTFILTER:int
	//512
	export const RTM_F_CLONED:int
	//1024
	export const RTM_F_EQUALIZE:int
	//256
	export const RTM_F_NOTIFY:int
	//2048
	export const RTM_F_PREFIX:int
	//50
	export const RTM_GETACTION:int
	//22
	export const RTM_GETADDR:int
	//74
	export const RTM_GETADDRLABEL:int
	//62
	export const RTM_GETANYCAST:int
	//78
	export const RTM_GETDCB:int
	//18
	export const RTM_GETLINK:int
	//58
	export const RTM_GETMULTICAST:int
	//30
	export const RTM_GETNEIGH:int
	//66
	export const RTM_GETNEIGHTBL:int
	//38
	export const RTM_GETQDISC:int
	//26
	export const RTM_GETROUTE:int
	//34
	export const RTM_GETRULE:int
	//42
	export const RTM_GETTCLASS:int
	//46
	export const RTM_GETTFILTER:int
	//79
	export const RTM_MAX:int
	//48
	export const RTM_NEWACTION:int
	//20
	export const RTM_NEWADDR:int
	//72
	export const RTM_NEWADDRLABEL:int
	//16
	export const RTM_NEWLINK:int
	//68
	export const RTM_NEWNDUSEROPT:int
	//28
	export const RTM_NEWNEIGH:int
	//64
	export const RTM_NEWNEIGHTBL:int
	//52
	export const RTM_NEWPREFIX:int
	//36
	export const RTM_NEWQDISC:int
	//24
	export const RTM_NEWROUTE:int
	//32
	export const RTM_NEWRULE:int
	//40
	export const RTM_NEWTCLASS:int
	//44
	export const RTM_NEWTFILTER:int
	//16
	export const RTM_NR_FAMILIES:int
	//64
	export const RTM_NR_MSGTYPES:int
	//79
	export const RTM_SETDCB:int
	//19
	export const RTM_SETLINK:int
	//67
	export const RTM_SETNEIGHTBL:int
	//4
	export const RTNH_ALIGNTO:int
	//1
	export const RTNH_F_DEAD:int
	//4
	export const RTNH_F_ONLINK:int
	//2
	export const RTNH_F_PERVASIVE:int
	//5
	export const RTNLGRP_IPV4_IFADDR:int
	//6
	export const RTNLGRP_IPV4_MROUTE:int
	//7
	export const RTNLGRP_IPV4_ROUTE:int
	//8
	export const RTNLGRP_IPV4_RULE:int
	//9
	export const RTNLGRP_IPV6_IFADDR:int
	//12
	export const RTNLGRP_IPV6_IFINFO:int
	//10
	export const RTNLGRP_IPV6_MROUTE:int
	//18
	export const RTNLGRP_IPV6_PREFIX:int
	//11
	export const RTNLGRP_IPV6_ROUTE:int
	//19
	export const RTNLGRP_IPV6_RULE:int
	//1
	export const RTNLGRP_LINK:int
	//20
	export const RTNLGRP_ND_USEROPT:int
	//3
	export const RTNLGRP_NEIGH:int
	//0
	export const RTNLGRP_NONE:int
	//2
	export const RTNLGRP_NOTIFY:int
	//4
	export const RTNLGRP_TC:int
	//4
	export const RTN_ANYCAST:int
	//6
	export const RTN_BLACKHOLE:int
	//3
	export const RTN_BROADCAST:int
	//2
	export const RTN_LOCAL:int
	//11
	export const RTN_MAX:int
	//5
	export const RTN_MULTICAST:int
	//10
	export const RTN_NAT:int
	//8
	export const RTN_PROHIBIT:int
	//9
	export const RTN_THROW:int
	//1
	export const RTN_UNICAST:int
	//7
	export const RTN_UNREACHABLE:int
	//0
	export const RTN_UNSPEC:int
	//11
	export const RTN_XRESOLVE:int
	//12
	export const RTPROT_BIRD:int
	//3
	export const RTPROT_BOOT:int
	//16
	export const RTPROT_DHCP:int
	//13
	export const RTPROT_DNROUTED:int
	//8
	export const RTPROT_GATED:int
	//2
	export const RTPROT_KERNEL:int
	//10
	export const RTPROT_MRT:int
	//15
	export const RTPROT_NTK:int
	//9
	export const RTPROT_RA:int
	//1
	export const RTPROT_REDIRECT:int
	//4
	export const RTPROT_STATIC:int
	//0
	export const RTPROT_UNSPEC:int
	//14
	export const RTPROT_XORP:int
	//11
	export const RTPROT_ZEBRA:int
	//253
	export const RT_CLASS_DEFAULT:int
	//255
	export const RT_CLASS_LOCAL:int
	//254
	export const RT_CLASS_MAIN:int
	//255
	export const RT_CLASS_MAX:int
	//0
	export const RT_CLASS_UNSPEC:int
	//254
	export const RT_SCOPE_HOST:int
	//253
	export const RT_SCOPE_LINK:int
	//255
	export const RT_SCOPE_NOWHERE:int
	//200
	export const RT_SCOPE_SITE:int
	//0
	export const RT_SCOPE_UNIVERSE:int
	//252
	export const RT_TABLE_COMPAT:int
	//253
	export const RT_TABLE_DEFAULT:int
	//255
	export const RT_TABLE_LOCAL:int
	//254
	export const RT_TABLE_MAIN:int
	//4294967295
	export const RT_TABLE_MAX:int
	//0
	export const RT_TABLE_UNSPEC:int
	//-1
	export const RUSAGE_CHILDREN:int
	//0
	export const RUSAGE_SELF:int
	//1
	export const RUSAGE_THREAD:int
	export interface RawConn{

			control(v1:(fd:uintptr)=>void/*error*/
			read(v1:(fd:uintptr)=>void/*error*/
			write(v1:(fd:uintptr)=>void/*error*/
	}
	export interface RawSockaddr extends Struct<RawSockaddr>{

			family:uint16
			data:int8/*14*/
	}
	export interface RawSockaddrAny extends Struct<RawSockaddrAny>{

			addr:RawSockaddr
			pad:int8/*96*/
	}
	export interface RawSockaddrInet4 extends Struct<RawSockaddrInet4>{

			family:uint16
			port:uint16
			addr:byte/*4*/
			zero:uint8/*8*/
	}
	export interface RawSockaddrInet6 extends Struct<RawSockaddrInet6>{

			family:uint16
			port:uint16
			flowinfo:uint32
			addr:byte/*16*/
			scope_id:uint32
	}
	export interface RawSockaddrLinklayer extends Struct<RawSockaddrLinklayer>{

			family:uint16
			protocol:uint16
			ifindex:int32
			hatype:uint16
			pkttype:uint8
			halen:uint8
			addr:uint8/*8*/
	}
	export interface RawSockaddrNetlink extends Struct<RawSockaddrNetlink>{

			family:uint16
			pad:uint16
			pid:uint32
			groups:uint32
	}
	export interface RawSockaddrUnix extends Struct<RawSockaddrUnix>{

			family:uint16
			path:int8/*108*/
	}
	export function rawSyscall(trap:uintptr,a1:uintptr,a2:uintptr,a3:uintptr):[uintptr,uintptr,Errno]

	export function rawSyscall6(trap:uintptr,a1:uintptr,a2:uintptr,a3:uintptr,a4:uintptr,a5:uintptr,a6:uintptr):[uintptr,uintptr,Errno]

	export function read(fd:int,p:Uint8Array):int

	export function readDirent(fd:int,buf:Uint8Array):int

	export function readlink(path:string,buf:Uint8Array):int

	export function reboot(cmd:int)/*error*/

	export function recvfrom(fd:int,p:Uint8Array,flags:int):[int,Sockaddr]

	export function recvmsg(fd:int,p:Uint8Array,oob:Uint8Array,flags:int):[int,int,int,Sockaddr]

	export function removexattr(path:string,attr:string)/*error*/

	export function rename(oldpath:string,newpath:string)/*error*/

	export function renameat(olddirfd:int,oldpath:string,newdirfd:int,newpath:string)/*error*/

	export interface Rlimit extends Struct<Rlimit>{

			cur:uint64
			max:uint64
	}
	export function rmdir(path:string)/*error*/

	export interface RtAttr extends Struct<RtAttr>{

			len:uint16
			type:uint16
	}
	export interface RtGenmsg extends Struct<RtGenmsg>{

			family:uint8
	}
	export interface RtMsg extends Struct<RtMsg>{

			family:uint8
			dst_len:uint8
			src_len:uint8
			tos:uint8
			table:uint8
			protocol:uint8
			scope:uint8
			type:uint8
			flags:uint32
	}
	export interface RtNexthop extends Struct<RtNexthop>{

			len:uint16
			flags:uint8
			hops:uint8
			ifindex:int32
	}
	export interface Rusage extends Struct<Rusage>{

			utime:Timeval
			stime:Timeval
			maxrss:int64
			ixrss:int64
			idrss:int64
			isrss:int64
			minflt:int64
			majflt:int64
			nswap:int64
			inblock:int64
			oublock:int64
			msgsnd:int64
			msgrcv:int64
			nsignals:int64
			nvcsw:int64
			nivcsw:int64
	}
	//2
	export const SCM_CREDENTIALS:int
	//1
	export const SCM_RIGHTS:int
	//29
	export const SCM_TIMESTAMP:int
	//37
	export const SCM_TIMESTAMPING:int
	//35
	export const SCM_TIMESTAMPNS:int
	//0
	export const SHUT_RD:int
	//2
	export const SHUT_RDWR:int
	//1
	export const SHUT_WR:int
	export const SIGABRT:Signal
	export const SIGALRM:Signal
	export const SIGBUS:Signal
	export const SIGCHLD:Signal
	export const SIGCLD:Signal
	export const SIGCONT:Signal
	export const SIGFPE:Signal
	export const SIGHUP:Signal
	export const SIGILL:Signal
	export const SIGINT:Signal
	export const SIGIO:Signal
	export const SIGIOT:Signal
	export const SIGKILL:Signal
	export const SIGPIPE:Signal
	export const SIGPOLL:Signal
	export const SIGPROF:Signal
	export const SIGPWR:Signal
	export const SIGQUIT:Signal
	export const SIGSEGV:Signal
	export const SIGSTKFLT:Signal
	export const SIGSTOP:Signal
	export const SIGSYS:Signal
	export const SIGTERM:Signal
	export const SIGTRAP:Signal
	export const SIGTSTP:Signal
	export const SIGTTIN:Signal
	export const SIGTTOU:Signal
	export const SIGUNUSED:Signal
	export const SIGURG:Signal
	export const SIGUSR1:Signal
	export const SIGUSR2:Signal
	export const SIGVTALRM:Signal
	export const SIGWINCH:Signal
	export const SIGXCPU:Signal
	export const SIGXFSZ:Signal
	//35200
	export const SIOCADDDLCI:int
	//35121
	export const SIOCADDMULTI:int
	//35083
	export const SIOCADDRT:int
	//35077
	export const SIOCATMARK:int
	//35155
	export const SIOCDARP:int
	//35201
	export const SIOCDELDLCI:int
	//35122
	export const SIOCDELMULTI:int
	//35084
	export const SIOCDELRT:int
	//35312
	export const SIOCDEVPRIVATE:int
	//35126
	export const SIOCDIFADDR:int
	//35168
	export const SIOCDRARP:int
	//35156
	export const SIOCGARP:int
	//35093
	export const SIOCGIFADDR:int
	//35136
	export const SIOCGIFBR:int
	//35097
	export const SIOCGIFBRDADDR:int
	//35090
	export const SIOCGIFCONF:int
	//35128
	export const SIOCGIFCOUNT:int
	//35095
	export const SIOCGIFDSTADDR:int
	//35109
	export const SIOCGIFENCAP:int
	//35091
	export const SIOCGIFFLAGS:int
	//35111
	export const SIOCGIFHWADDR:int
	//35123
	export const SIOCGIFINDEX:int
	//35184
	export const SIOCGIFMAP:int
	//35103
	export const SIOCGIFMEM:int
	//35101
	export const SIOCGIFMETRIC:int
	//35105
	export const SIOCGIFMTU:int
	//35088
	export const SIOCGIFNAME:int
	//35099
	export const SIOCGIFNETMASK:int
	//35125
	export const SIOCGIFPFLAGS:int
	//35113
	export const SIOCGIFSLAVE:int
	//35138
	export const SIOCGIFTXQLEN:int
	//35076
	export const SIOCGPGRP:int
	//35169
	export const SIOCGRARP:int
	//35078
	export const SIOCGSTAMP:int
	//35079
	export const SIOCGSTAMPNS:int
	//35296
	export const SIOCPROTOPRIVATE:int
	//35085
	export const SIOCRTMSG:int
	//35157
	export const SIOCSARP:int
	//35094
	export const SIOCSIFADDR:int
	//35137
	export const SIOCSIFBR:int
	//35098
	export const SIOCSIFBRDADDR:int
	//35096
	export const SIOCSIFDSTADDR:int
	//35110
	export const SIOCSIFENCAP:int
	//35092
	export const SIOCSIFFLAGS:int
	//35108
	export const SIOCSIFHWADDR:int
	//35127
	export const SIOCSIFHWBROADCAST:int
	//35089
	export const SIOCSIFLINK:int
	//35185
	export const SIOCSIFMAP:int
	//35104
	export const SIOCSIFMEM:int
	//35102
	export const SIOCSIFMETRIC:int
	//35106
	export const SIOCSIFMTU:int
	//35107
	export const SIOCSIFNAME:int
	//35100
	export const SIOCSIFNETMASK:int
	//35124
	export const SIOCSIFPFLAGS:int
	//35120
	export const SIOCSIFSLAVE:int
	//35139
	export const SIOCSIFTXQLEN:int
	//35074
	export const SIOCSPGRP:int
	//35170
	export const SIOCSRARP:int
	//524288
	export const SOCK_CLOEXEC:int
	//6
	export const SOCK_DCCP:int
	//2
	export const SOCK_DGRAM:int
	//2048
	export const SOCK_NONBLOCK:int
	//10
	export const SOCK_PACKET:int
	//3
	export const SOCK_RAW:int
	//4
	export const SOCK_RDM:int
	//5
	export const SOCK_SEQPACKET:int
	//1
	export const SOCK_STREAM:int
	//265
	export const SOL_AAL:int
	//264
	export const SOL_ATM:int
	//261
	export const SOL_DECNET:int
	//58
	export const SOL_ICMPV6:int
	//0
	export const SOL_IP:int
	//41
	export const SOL_IPV6:int
	//266
	export const SOL_IRDA:int
	//263
	export const SOL_PACKET:int
	//255
	export const SOL_RAW:int
	//1
	export const SOL_SOCKET:int
	//6
	export const SOL_TCP:int
	//262
	export const SOL_X25:int
	//128
	export const SOMAXCONN:int
	//30
	export const SO_ACCEPTCONN:int
	//26
	export const SO_ATTACH_FILTER:int
	//25
	export const SO_BINDTODEVICE:int
	//6
	export const SO_BROADCAST:int
	//14
	export const SO_BSDCOMPAT:int
	//1
	export const SO_DEBUG:int
	//27
	export const SO_DETACH_FILTER:int
	//39
	export const SO_DOMAIN:int
	//5
	export const SO_DONTROUTE:int
	//4
	export const SO_ERROR:int
	//9
	export const SO_KEEPALIVE:int
	//13
	export const SO_LINGER:int
	//36
	export const SO_MARK:int
	//11
	export const SO_NO_CHECK:int
	//10
	export const SO_OOBINLINE:int
	//16
	export const SO_PASSCRED:int
	//34
	export const SO_PASSSEC:int
	//17
	export const SO_PEERCRED:int
	//28
	export const SO_PEERNAME:int
	//31
	export const SO_PEERSEC:int
	//12
	export const SO_PRIORITY:int
	//38
	export const SO_PROTOCOL:int
	//8
	export const SO_RCVBUF:int
	//33
	export const SO_RCVBUFFORCE:int
	//18
	export const SO_RCVLOWAT:int
	//20
	export const SO_RCVTIMEO:int
	//2
	export const SO_REUSEADDR:int
	//40
	export const SO_RXQ_OVFL:int
	//22
	export const SO_SECURITY_AUTHENTICATION:int
	//24
	export const SO_SECURITY_ENCRYPTION_NETWORK:int
	//23
	export const SO_SECURITY_ENCRYPTION_TRANSPORT:int
	//7
	export const SO_SNDBUF:int
	//32
	export const SO_SNDBUFFORCE:int
	//19
	export const SO_SNDLOWAT:int
	//21
	export const SO_SNDTIMEO:int
	//29
	export const SO_TIMESTAMP:int
	//37
	export const SO_TIMESTAMPING:int
	//35
	export const SO_TIMESTAMPNS:int
	//3
	export const SO_TYPE:int
	//43
	export const SYS_ACCEPT:int
	//288
	export const SYS_ACCEPT4:int
	//21
	export const SYS_ACCESS:int
	//163
	export const SYS_ACCT:int
	//248
	export const SYS_ADD_KEY:int
	//159
	export const SYS_ADJTIMEX:int
	//183
	export const SYS_AFS_SYSCALL:int
	//37
	export const SYS_ALARM:int
	//158
	export const SYS_ARCH_PRCTL:int
	//49
	export const SYS_BIND:int
	//12
	export const SYS_BRK:int
	//125
	export const SYS_CAPGET:int
	//126
	export const SYS_CAPSET:int
	//80
	export const SYS_CHDIR:int
	//90
	export const SYS_CHMOD:int
	//92
	export const SYS_CHOWN:int
	//161
	export const SYS_CHROOT:int
	//229
	export const SYS_CLOCK_GETRES:int
	//228
	export const SYS_CLOCK_GETTIME:int
	//230
	export const SYS_CLOCK_NANOSLEEP:int
	//227
	export const SYS_CLOCK_SETTIME:int
	//56
	export const SYS_CLONE:int
	//3
	export const SYS_CLOSE:int
	//42
	export const SYS_CONNECT:int
	//85
	export const SYS_CREAT:int
	//174
	export const SYS_CREATE_MODULE:int
	//176
	export const SYS_DELETE_MODULE:int
	//32
	export const SYS_DUP:int
	//33
	export const SYS_DUP2:int
	//292
	export const SYS_DUP3:int
	//213
	export const SYS_EPOLL_CREATE:int
	//291
	export const SYS_EPOLL_CREATE1:int
	//233
	export const SYS_EPOLL_CTL:int
	//214
	export const SYS_EPOLL_CTL_OLD:int
	//281
	export const SYS_EPOLL_PWAIT:int
	//232
	export const SYS_EPOLL_WAIT:int
	//215
	export const SYS_EPOLL_WAIT_OLD:int
	//284
	export const SYS_EVENTFD:int
	//290
	export const SYS_EVENTFD2:int
	//59
	export const SYS_EXECVE:int
	//60
	export const SYS_EXIT:int
	//231
	export const SYS_EXIT_GROUP:int
	//269
	export const SYS_FACCESSAT:int
	//221
	export const SYS_FADVISE64:int
	//285
	export const SYS_FALLOCATE:int
	//300
	export const SYS_FANOTIFY_INIT:int
	//301
	export const SYS_FANOTIFY_MARK:int
	//81
	export const SYS_FCHDIR:int
	//91
	export const SYS_FCHMOD:int
	//268
	export const SYS_FCHMODAT:int
	//93
	export const SYS_FCHOWN:int
	//260
	export const SYS_FCHOWNAT:int
	//72
	export const SYS_FCNTL:int
	//75
	export const SYS_FDATASYNC:int
	//193
	export const SYS_FGETXATTR:int
	//196
	export const SYS_FLISTXATTR:int
	//73
	export const SYS_FLOCK:int
	//57
	export const SYS_FORK:int
	//199
	export const SYS_FREMOVEXATTR:int
	//190
	export const SYS_FSETXATTR:int
	//5
	export const SYS_FSTAT:int
	//138
	export const SYS_FSTATFS:int
	//74
	export const SYS_FSYNC:int
	//77
	export const SYS_FTRUNCATE:int
	//202
	export const SYS_FUTEX:int
	//261
	export const SYS_FUTIMESAT:int
	//79
	export const SYS_GETCWD:int
	//78
	export const SYS_GETDENTS:int
	//217
	export const SYS_GETDENTS64:int
	//108
	export const SYS_GETEGID:int
	//107
	export const SYS_GETEUID:int
	//104
	export const SYS_GETGID:int
	//115
	export const SYS_GETGROUPS:int
	//36
	export const SYS_GETITIMER:int
	//52
	export const SYS_GETPEERNAME:int
	//121
	export const SYS_GETPGID:int
	//111
	export const SYS_GETPGRP:int
	//39
	export const SYS_GETPID:int
	//181
	export const SYS_GETPMSG:int
	//110
	export const SYS_GETPPID:int
	//140
	export const SYS_GETPRIORITY:int
	//120
	export const SYS_GETRESGID:int
	//118
	export const SYS_GETRESUID:int
	//97
	export const SYS_GETRLIMIT:int
	//98
	export const SYS_GETRUSAGE:int
	//124
	export const SYS_GETSID:int
	//51
	export const SYS_GETSOCKNAME:int
	//55
	export const SYS_GETSOCKOPT:int
	//186
	export const SYS_GETTID:int
	//96
	export const SYS_GETTIMEOFDAY:int
	//102
	export const SYS_GETUID:int
	//191
	export const SYS_GETXATTR:int
	//177
	export const SYS_GET_KERNEL_SYMS:int
	//239
	export const SYS_GET_MEMPOLICY:int
	//274
	export const SYS_GET_ROBUST_LIST:int
	//211
	export const SYS_GET_THREAD_AREA:int
	//175
	export const SYS_INIT_MODULE:int
	//254
	export const SYS_INOTIFY_ADD_WATCH:int
	//253
	export const SYS_INOTIFY_INIT:int
	//294
	export const SYS_INOTIFY_INIT1:int
	//255
	export const SYS_INOTIFY_RM_WATCH:int
	//16
	export const SYS_IOCTL:int
	//173
	export const SYS_IOPERM:int
	//172
	export const SYS_IOPL:int
	//252
	export const SYS_IOPRIO_GET:int
	//251
	export const SYS_IOPRIO_SET:int
	//210
	export const SYS_IO_CANCEL:int
	//207
	export const SYS_IO_DESTROY:int
	//208
	export const SYS_IO_GETEVENTS:int
	//206
	export const SYS_IO_SETUP:int
	//209
	export const SYS_IO_SUBMIT:int
	//246
	export const SYS_KEXEC_LOAD:int
	//250
	export const SYS_KEYCTL:int
	//62
	export const SYS_KILL:int
	//94
	export const SYS_LCHOWN:int
	//192
	export const SYS_LGETXATTR:int
	//86
	export const SYS_LINK:int
	//265
	export const SYS_LINKAT:int
	//50
	export const SYS_LISTEN:int
	//194
	export const SYS_LISTXATTR:int
	//195
	export const SYS_LLISTXATTR:int
	//212
	export const SYS_LOOKUP_DCOOKIE:int
	//198
	export const SYS_LREMOVEXATTR:int
	//8
	export const SYS_LSEEK:int
	//189
	export const SYS_LSETXATTR:int
	//6
	export const SYS_LSTAT:int
	//28
	export const SYS_MADVISE:int
	//237
	export const SYS_MBIND:int
	//256
	export const SYS_MIGRATE_PAGES:int
	//27
	export const SYS_MINCORE:int
	//83
	export const SYS_MKDIR:int
	//258
	export const SYS_MKDIRAT:int
	//133
	export const SYS_MKNOD:int
	//259
	export const SYS_MKNODAT:int
	//149
	export const SYS_MLOCK:int
	//151
	export const SYS_MLOCKALL:int
	//9
	export const SYS_MMAP:int
	//154
	export const SYS_MODIFY_LDT:int
	//165
	export const SYS_MOUNT:int
	//279
	export const SYS_MOVE_PAGES:int
	//10
	export const SYS_MPROTECT:int
	//245
	export const SYS_MQ_GETSETATTR:int
	//244
	export const SYS_MQ_NOTIFY:int
	//240
	export const SYS_MQ_OPEN:int
	//243
	export const SYS_MQ_TIMEDRECEIVE:int
	//242
	export const SYS_MQ_TIMEDSEND:int
	//241
	export const SYS_MQ_UNLINK:int
	//25
	export const SYS_MREMAP:int
	//71
	export const SYS_MSGCTL:int
	//68
	export const SYS_MSGGET:int
	//70
	export const SYS_MSGRCV:int
	//69
	export const SYS_MSGSND:int
	//26
	export const SYS_MSYNC:int
	//150
	export const SYS_MUNLOCK:int
	//152
	export const SYS_MUNLOCKALL:int
	//11
	export const SYS_MUNMAP:int
	//35
	export const SYS_NANOSLEEP:int
	//262
	export const SYS_NEWFSTATAT:int
	//180
	export const SYS_NFSSERVCTL:int
	//2
	export const SYS_OPEN:int
	//257
	export const SYS_OPENAT:int
	//34
	export const SYS_PAUSE:int
	//298
	export const SYS_PERF_EVENT_OPEN:int
	//135
	export const SYS_PERSONALITY:int
	//22
	export const SYS_PIPE:int
	//293
	export const SYS_PIPE2:int
	//155
	export const SYS_PIVOT_ROOT:int
	//7
	export const SYS_POLL:int
	//271
	export const SYS_PPOLL:int
	//157
	export const SYS_PRCTL:int
	//17
	export const SYS_PREAD64:int
	//295
	export const SYS_PREADV:int
	//302
	export const SYS_PRLIMIT64:int
	//270
	export const SYS_PSELECT6:int
	//101
	export const SYS_PTRACE:int
	//182
	export const SYS_PUTPMSG:int
	//18
	export const SYS_PWRITE64:int
	//296
	export const SYS_PWRITEV:int
	//178
	export const SYS_QUERY_MODULE:int
	//179
	export const SYS_QUOTACTL:int
	//0
	export const SYS_READ:int
	//187
	export const SYS_READAHEAD:int
	//89
	export const SYS_READLINK:int
	//267
	export const SYS_READLINKAT:int
	//19
	export const SYS_READV:int
	//169
	export const SYS_REBOOT:int
	//45
	export const SYS_RECVFROM:int
	//299
	export const SYS_RECVMMSG:int
	//47
	export const SYS_RECVMSG:int
	//216
	export const SYS_REMAP_FILE_PAGES:int
	//197
	export const SYS_REMOVEXATTR:int
	//82
	export const SYS_RENAME:int
	//264
	export const SYS_RENAMEAT:int
	//249
	export const SYS_REQUEST_KEY:int
	//219
	export const SYS_RESTART_SYSCALL:int
	//84
	export const SYS_RMDIR:int
	//13
	export const SYS_RT_SIGACTION:int
	//127
	export const SYS_RT_SIGPENDING:int
	//14
	export const SYS_RT_SIGPROCMASK:int
	//129
	export const SYS_RT_SIGQUEUEINFO:int
	//15
	export const SYS_RT_SIGRETURN:int
	//130
	export const SYS_RT_SIGSUSPEND:int
	//128
	export const SYS_RT_SIGTIMEDWAIT:int
	//297
	export const SYS_RT_TGSIGQUEUEINFO:int
	//204
	export const SYS_SCHED_GETAFFINITY:int
	//143
	export const SYS_SCHED_GETPARAM:int
	//145
	export const SYS_SCHED_GETSCHEDULER:int
	//146
	export const SYS_SCHED_GET_PRIORITY_MAX:int
	//147
	export const SYS_SCHED_GET_PRIORITY_MIN:int
	//148
	export const SYS_SCHED_RR_GET_INTERVAL:int
	//203
	export const SYS_SCHED_SETAFFINITY:int
	//142
	export const SYS_SCHED_SETPARAM:int
	//144
	export const SYS_SCHED_SETSCHEDULER:int
	//24
	export const SYS_SCHED_YIELD:int
	//185
	export const SYS_SECURITY:int
	//23
	export const SYS_SELECT:int
	//66
	export const SYS_SEMCTL:int
	//64
	export const SYS_SEMGET:int
	//65
	export const SYS_SEMOP:int
	//220
	export const SYS_SEMTIMEDOP:int
	//40
	export const SYS_SENDFILE:int
	//46
	export const SYS_SENDMSG:int
	//44
	export const SYS_SENDTO:int
	//171
	export const SYS_SETDOMAINNAME:int
	//123
	export const SYS_SETFSGID:int
	//122
	export const SYS_SETFSUID:int
	//106
	export const SYS_SETGID:int
	//116
	export const SYS_SETGROUPS:int
	//170
	export const SYS_SETHOSTNAME:int
	//38
	export const SYS_SETITIMER:int
	//109
	export const SYS_SETPGID:int
	//141
	export const SYS_SETPRIORITY:int
	//114
	export const SYS_SETREGID:int
	//119
	export const SYS_SETRESGID:int
	//117
	export const SYS_SETRESUID:int
	//113
	export const SYS_SETREUID:int
	//160
	export const SYS_SETRLIMIT:int
	//112
	export const SYS_SETSID:int
	//54
	export const SYS_SETSOCKOPT:int
	//164
	export const SYS_SETTIMEOFDAY:int
	//105
	export const SYS_SETUID:int
	//188
	export const SYS_SETXATTR:int
	//238
	export const SYS_SET_MEMPOLICY:int
	//273
	export const SYS_SET_ROBUST_LIST:int
	//205
	export const SYS_SET_THREAD_AREA:int
	//218
	export const SYS_SET_TID_ADDRESS:int
	//30
	export const SYS_SHMAT:int
	//31
	export const SYS_SHMCTL:int
	//67
	export const SYS_SHMDT:int
	//29
	export const SYS_SHMGET:int
	//48
	export const SYS_SHUTDOWN:int
	//131
	export const SYS_SIGALTSTACK:int
	//282
	export const SYS_SIGNALFD:int
	//289
	export const SYS_SIGNALFD4:int
	//41
	export const SYS_SOCKET:int
	//53
	export const SYS_SOCKETPAIR:int
	//275
	export const SYS_SPLICE:int
	//4
	export const SYS_STAT:int
	//137
	export const SYS_STATFS:int
	//168
	export const SYS_SWAPOFF:int
	//167
	export const SYS_SWAPON:int
	//88
	export const SYS_SYMLINK:int
	//266
	export const SYS_SYMLINKAT:int
	//162
	export const SYS_SYNC:int
	//277
	export const SYS_SYNC_FILE_RANGE:int
	//139
	export const SYS_SYSFS:int
	//99
	export const SYS_SYSINFO:int
	//103
	export const SYS_SYSLOG:int
	//276
	export const SYS_TEE:int
	//234
	export const SYS_TGKILL:int
	//201
	export const SYS_TIME:int
	//283
	export const SYS_TIMERFD_CREATE:int
	//287
	export const SYS_TIMERFD_GETTIME:int
	//286
	export const SYS_TIMERFD_SETTIME:int
	//222
	export const SYS_TIMER_CREATE:int
	//226
	export const SYS_TIMER_DELETE:int
	//225
	export const SYS_TIMER_GETOVERRUN:int
	//224
	export const SYS_TIMER_GETTIME:int
	//223
	export const SYS_TIMER_SETTIME:int
	//100
	export const SYS_TIMES:int
	//200
	export const SYS_TKILL:int
	//76
	export const SYS_TRUNCATE:int
	//184
	export const SYS_TUXCALL:int
	//95
	export const SYS_UMASK:int
	//166
	export const SYS_UMOUNT2:int
	//63
	export const SYS_UNAME:int
	//87
	export const SYS_UNLINK:int
	//263
	export const SYS_UNLINKAT:int
	//272
	export const SYS_UNSHARE:int
	//134
	export const SYS_USELIB:int
	//136
	export const SYS_USTAT:int
	//132
	export const SYS_UTIME:int
	//280
	export const SYS_UTIMENSAT:int
	//235
	export const SYS_UTIMES:int
	//58
	export const SYS_VFORK:int
	//153
	export const SYS_VHANGUP:int
	//278
	export const SYS_VMSPLICE:int
	//236
	export const SYS_VSERVER:int
	//61
	export const SYS_WAIT4:int
	//247
	export const SYS_WAITID:int
	//1
	export const SYS_WRITE:int
	//20
	export const SYS_WRITEV:int
	//156
	export const SYS__SYSCTL:int
	//512
	export const S_BLKSIZE:int
	//64
	export const S_IEXEC:int
	//24576
	export const S_IFBLK:int
	//8192
	export const S_IFCHR:int
	//16384
	export const S_IFDIR:int
	//4096
	export const S_IFIFO:int
	//40960
	export const S_IFLNK:int
	//61440
	export const S_IFMT:int
	//32768
	export const S_IFREG:int
	//49152
	export const S_IFSOCK:int
	//256
	export const S_IREAD:int
	//32
	export const S_IRGRP:int
	//4
	export const S_IROTH:int
	//256
	export const S_IRUSR:int
	//56
	export const S_IRWXG:int
	//7
	export const S_IRWXO:int
	//448
	export const S_IRWXU:int
	//1024
	export const S_ISGID:int
	//2048
	export const S_ISUID:int
	//512
	export const S_ISVTX:int
	//16
	export const S_IWGRP:int
	//2
	export const S_IWOTH:int
	//128
	export const S_IWRITE:int
	//128
	export const S_IWUSR:int
	//8
	export const S_IXGRP:int
	//1
	export const S_IXOTH:int
	//64
	export const S_IXUSR:int
	export function seek(fd:int,offset:int64,whence:int):int64

	export function select(nfd:int,r:Ref<FdSet>,w:Ref<FdSet>,e:Ref<FdSet>,timeout:Ref<Timeval>):int

	export function sendfile(outfd:int,infd:int,offset:Ref<int64>,count:int):int

	export function sendmsg(fd:int,p:Uint8Array,oob:Uint8Array,to:Sockaddr,flags:int)/*error*/

	export function sendmsgN(fd:int,p:Uint8Array,oob:Uint8Array,to:Sockaddr,flags:int):int

	export function sendto(fd:int,p:Uint8Array,flags:int,to:Sockaddr)/*error*/

	export function setLsfPromisc(name:string,m:bool)/*error*/

	export function setNonblock(fd:int,nonblocking:bool)/*error*/

	export function setdomainname(p:Uint8Array)/*error*/

	export function setegid(egid:int)/*error*/

	export function setenv(key:string,value:string)/*error*/

	export function seteuid(euid:int)/*error*/

	export function setfsgid(gid:int)/*error*/

	export function setfsuid(uid:int)/*error*/

	export function setgid(gid:int)/*error*/

	export function setgroups(gids:int[])/*error*/

	export function sethostname(p:Uint8Array)/*error*/

	export function setpgid(pid:int,pgid:int)/*error*/

	export function setpriority(which:int,who:int,prio:int)/*error*/

	export function setregid(rgid:int,egid:int)/*error*/

	export function setresgid(rgid:int,egid:int,sgid:int)/*error*/

	export function setresuid(ruid:int,euid:int,suid:int)/*error*/

	export function setreuid(ruid:int,euid:int)/*error*/

	export function setrlimit(resource:int,rlim:Ref<Rlimit>)/*error*/

	export function setsid():int

	export function setsockoptByte(fd:int,level:int,opt:int,value:byte)/*error*/

	export function setsockoptICMPv6Filter(fd:int,level:int,opt:int,filter:Ref<ICMPv6Filter>)/*error*/

	export function setsockoptIPMreq(fd:int,level:int,opt:int,mreq:Ref<IPMreq>)/*error*/

	export function setsockoptIPMreqn(fd:int,level:int,opt:int,mreq:Ref<IPMreqn>)/*error*/

	export function setsockoptIPv6Mreq(fd:int,level:int,opt:int,mreq:Ref<IPv6Mreq>)/*error*/

	export function setsockoptInet4Addr(fd:int,level:int,opt:int,value:byte/*4*/)/*error*/

	export function setsockoptInt(fd:int,level:int,opt:int,value:int)/*error*/

	export function setsockoptLinger(fd:int,level:int,opt:int,l:Ref<Linger>)/*error*/

	export function setsockoptString(fd:int,level:int,opt:int,s:string)/*error*/

	export function setsockoptTimeval(fd:int,level:int,opt:int,tv:Ref<Timeval>)/*error*/

	export function settimeofday(tv:Ref<Timeval>)/*error*/

	export function setuid(uid:int)/*error*/

	export function setxattr(path:string,attr:string,data:Uint8Array,flags:int)/*error*/

	export function shutdown(fd:int,how:int)/*error*/

	export interface Signal extends int{

	signal():void
	string():string
	}
	//16
	export const SizeofCmsghdr:int
	//32
	export const SizeofICMPv6Filter:int
	//8
	export const SizeofIPMreq:int
	//12
	export const SizeofIPMreqn:int
	//32
	export const SizeofIPv6MTUInfo:int
	//20
	export const SizeofIPv6Mreq:int
	//8
	export const SizeofIfAddrmsg:int
	//16
	export const SizeofIfInfomsg:int
	//12
	export const SizeofInet4Pktinfo:int
	//20
	export const SizeofInet6Pktinfo:int
	//16
	export const SizeofInotifyEvent:int
	//8
	export const SizeofLinger:int
	//56
	export const SizeofMsghdr:int
	//4
	export const SizeofNlAttr:int
	//20
	export const SizeofNlMsgerr:int
	//16
	export const SizeofNlMsghdr:int
	//4
	export const SizeofRtAttr:int
	//1
	export const SizeofRtGenmsg:int
	//12
	export const SizeofRtMsg:int
	//8
	export const SizeofRtNexthop:int
	//8
	export const SizeofSockFilter:int
	//16
	export const SizeofSockFprog:int
	//112
	export const SizeofSockaddrAny:int
	//16
	export const SizeofSockaddrInet4:int
	//28
	export const SizeofSockaddrInet6:int
	//20
	export const SizeofSockaddrLinklayer:int
	//12
	export const SizeofSockaddrNetlink:int
	//110
	export const SizeofSockaddrUnix:int
	//104
	export const SizeofTCPInfo:int
	//12
	export const SizeofUcred:int
	export function slicePtrFromStrings(ss:string[]):Ref<Uint8Array>[]

	export interface SockFilter extends Struct<SockFilter>{

			code:uint16
			jt:uint8
			jf:uint8
			K:uint32
	}
	export interface SockFprog extends Struct<SockFprog>{

			len:uint16
			pad_cgo_0:byte/*6*/
			filter:Ref<SockFilter>
	}
	export interface Sockaddr{

	}
	export interface SockaddrInet4 extends Struct<SockaddrInet4>,Sockaddr{

			port:int
			addr:byte/*4*/
	}
	export interface SockaddrInet6 extends Struct<SockaddrInet6>,Sockaddr{

			port:int
			zoneId:uint32
			addr:byte/*16*/
	}
	export interface SockaddrLinklayer extends Struct<SockaddrLinklayer>,Sockaddr{

			protocol:uint16
			ifindex:int
			hatype:uint16
			pkttype:uint8
			halen:uint8
			addr:byte/*8*/
	}
	export interface SockaddrNetlink extends Struct<SockaddrNetlink>,Sockaddr{

			family:uint16
			pad:uint16
			pid:uint32
			groups:uint32
	}
	export interface SockaddrUnix extends Struct<SockaddrUnix>,Sockaddr{

			name:string
	}
	export function socket(domain:int,typ:int,proto:int):int

	export interface SocketControlMessage extends Struct<SocketControlMessage>{

			header:Cmsghdr
			data:Uint8Array
	}
	export const SocketDisableIPv6:bool
	export function socketpair(domain:int,typ:int,proto:int):int/*2*/

	export function splice(rfd:int,roff:Ref<int64>,wfd:int,woff:Ref<int64>,len:int,flags:int):int64

	export function startProcess(argv0:string,argv:string[],attr:Ref<ProcAttr>):[int,uintptr]

	export function stat(path:string,stat:Ref<Stat_t>)/*error*/

	export interface Stat_t extends Struct<Stat_t>{

			dev:uint64
			ino:uint64
			nlink:uint64
			mode:uint32
			uid:uint32
			gid:uint32
			x__pad0:int32
			rdev:uint64
			size:int64
			blksize:int64
			blocks:int64
			atim:Timespec
			mtim:Timespec
			ctim:Timespec
			x__unused:int64/*3*/
	}
	export function statfs(path:string,buf:Ref<Statfs_t>)/*error*/

	export interface Statfs_t extends Struct<Statfs_t>{

			type:int64
			bsize:int64
			blocks:uint64
			bfree:uint64
			bavail:uint64
			files:uint64
			ffree:uint64
			fsid:Fsid
			namelen:int64
			frsize:int64
			flags:int64
			spare:int64/*4*/
	}
	export const Stderr:int
	export const Stdin:int
	export const Stdout:int
	export function stringBytePtr(s:string):Ref<byte>

	export function stringByteSlice(s:string):Uint8Array

	export function stringSlicePtr(ss:string[]):Ref<Uint8Array>[]

	export function symlink(oldpath:string,newpath:string)/*error*/

	export function sync():void

	export function syncFileRange(fd:int,off:int64,n:int64,flags:int)/*error*/

	export interface SysProcAttr extends Struct<SysProcAttr>{

			chroot:string
			credential:Ref<Credential>
			ptrace:bool
			setsid:bool
			setpgid:bool
			setctty:bool
			noctty:bool
			ctty:int
			foreground:bool
			pgid:int
			pdeathsig:Signal
			cloneflags:uintptr
			unshareflags:uintptr
			uidMappings:SysProcIDMap[]
			gidMappings:SysProcIDMap[]
			gidMappingsEnableSetgroups:bool
			ambientCaps:uintptr[]
			useCgroupFD:bool
			cgroupFD:int
	}
	export interface SysProcIDMap extends Struct<SysProcIDMap>{

			containerID:int
			hostID:int
			size:int
	}
	export function syscall(trap:uintptr,a1:uintptr,a2:uintptr,a3:uintptr):[uintptr,uintptr,Errno]

	export function syscall6(trap:uintptr,a1:uintptr,a2:uintptr,a3:uintptr,a4:uintptr,a5:uintptr,a6:uintptr):[uintptr,uintptr,Errno]

	export function sysinfo(info:Ref<Sysinfo_t>)/*error*/

	export interface Sysinfo_t extends Struct<Sysinfo_t>{

			uptime:int64
			loads:uint64/*3*/
			totalram:uint64
			freeram:uint64
			sharedram:uint64
			bufferram:uint64
			totalswap:uint64
			freeswap:uint64
			procs:uint16
			pad:uint16
			pad_cgo_0:byte/*4*/
			totalhigh:uint64
			freehigh:uint64
			unit:uint32
			x_f:byte
			pad_cgo_1:byte/*4*/
	}
	//21505
	export const TCGETS:int
	//0
	export const TCIFLUSH:int
	//2
	export const TCIOFLUSH:int
	//1
	export const TCOFLUSH:int
	export interface TCPInfo extends Struct<TCPInfo>{

			state:uint8
			ca_state:uint8
			retransmits:uint8
			probes:uint8
			backoff:uint8
			options:uint8
			pad_cgo_0:byte/*2*/
			rto:uint32
			ato:uint32
			snd_mss:uint32
			rcv_mss:uint32
			unacked:uint32
			sacked:uint32
			lost:uint32
			retrans:uint32
			fackets:uint32
			last_data_sent:uint32
			last_ack_sent:uint32
			last_data_recv:uint32
			last_ack_recv:uint32
			pmtu:uint32
			rcv_ssthresh:uint32
			rtt:uint32
			rttvar:uint32
			snd_ssthresh:uint32
			snd_cwnd:uint32
			advmss:uint32
			reordering:uint32
			rcv_rtt:uint32
			rcv_space:uint32
			total_retrans:uint32
	}
	//13
	export const TCP_CONGESTION:int
	//3
	export const TCP_CORK:int
	//9
	export const TCP_DEFER_ACCEPT:int
	//11
	export const TCP_INFO:int
	//6
	export const TCP_KEEPCNT:int
	//4
	export const TCP_KEEPIDLE:int
	//5
	export const TCP_KEEPINTVL:int
	//8
	export const TCP_LINGER2:int
	//2
	export const TCP_MAXSEG:int
	//65535
	export const TCP_MAXWIN:int
	//14
	export const TCP_MAX_WINSHIFT:int
	//14
	export const TCP_MD5SIG:int
	//80
	export const TCP_MD5SIG_MAXKEYLEN:int
	//512
	export const TCP_MSS:int
	//1
	export const TCP_NODELAY:int
	//12
	export const TCP_QUICKACK:int
	//7
	export const TCP_SYNCNT:int
	//10
	export const TCP_WINDOW_CLAMP:int
	//21506
	export const TCSETS:int
	//21544
	export const TIOCCBRK:int
	//21533
	export const TIOCCONS:int
	//21516
	export const TIOCEXCL:int
	//2147767346
	export const TIOCGDEV:int
	//21540
	export const TIOCGETD:int
	//21597
	export const TIOCGICOUNT:int
	//21590
	export const TIOCGLCKTRMIOS:int
	//21519
	export const TIOCGPGRP:int
	//2147767344
	export const TIOCGPTN:int
	//21550
	export const TIOCGRS485:int
	//21534
	export const TIOCGSERIAL:int
	//21545
	export const TIOCGSID:int
	//21529
	export const TIOCGSOFTCAR:int
	//21523
	export const TIOCGWINSZ:int
	//21531
	export const TIOCINQ:int
	//21532
	export const TIOCLINUX:int
	//21527
	export const TIOCMBIC:int
	//21526
	export const TIOCMBIS:int
	//21525
	export const TIOCMGET:int
	//21596
	export const TIOCMIWAIT:int
	//21528
	export const TIOCMSET:int
	//64
	export const TIOCM_CAR:int
	//64
	export const TIOCM_CD:int
	//32
	export const TIOCM_CTS:int
	//256
	export const TIOCM_DSR:int
	//2
	export const TIOCM_DTR:int
	//1
	export const TIOCM_LE:int
	//128
	export const TIOCM_RI:int
	//128
	export const TIOCM_RNG:int
	//4
	export const TIOCM_RTS:int
	//16
	export const TIOCM_SR:int
	//8
	export const TIOCM_ST:int
	//21538
	export const TIOCNOTTY:int
	//21517
	export const TIOCNXCL:int
	//21521
	export const TIOCOUTQ:int
	//21536
	export const TIOCPKT:int
	//0
	export const TIOCPKT_DATA:int
	//32
	export const TIOCPKT_DOSTOP:int
	//1
	export const TIOCPKT_FLUSHREAD:int
	//2
	export const TIOCPKT_FLUSHWRITE:int
	//64
	export const TIOCPKT_IOCTL:int
	//16
	export const TIOCPKT_NOSTOP:int
	//8
	export const TIOCPKT_START:int
	//4
	export const TIOCPKT_STOP:int
	//21543
	export const TIOCSBRK:int
	//21518
	export const TIOCSCTTY:int
	//21587
	export const TIOCSERCONFIG:int
	//21593
	export const TIOCSERGETLSR:int
	//21594
	export const TIOCSERGETMULTI:int
	//21592
	export const TIOCSERGSTRUCT:int
	//21588
	export const TIOCSERGWILD:int
	//21595
	export const TIOCSERSETMULTI:int
	//21589
	export const TIOCSERSWILD:int
	//1
	export const TIOCSER_TEMT:int
	//21539
	export const TIOCSETD:int
	//1074025526
	export const TIOCSIG:int
	//21591
	export const TIOCSLCKTRMIOS:int
	//21520
	export const TIOCSPGRP:int
	//1074025521
	export const TIOCSPTLCK:int
	//21551
	export const TIOCSRS485:int
	//21535
	export const TIOCSSERIAL:int
	//21530
	export const TIOCSSOFTCAR:int
	//21522
	export const TIOCSTI:int
	//21524
	export const TIOCSWINSZ:int
	//256
	export const TOSTOP:int
	//1074812117
	export const TUNATTACHFILTER:int
	//1074812118
	export const TUNDETACHFILTER:int
	//2147767503
	export const TUNGETFEATURES:int
	//2147767506
	export const TUNGETIFF:int
	//2147767507
	export const TUNGETSNDBUF:int
	//2147767511
	export const TUNGETVNETHDRSZ:int
	//1074025673
	export const TUNSETDEBUG:int
	//1074025678
	export const TUNSETGROUP:int
	//1074025674
	export const TUNSETIFF:int
	//1074025677
	export const TUNSETLINK:int
	//1074025672
	export const TUNSETNOCSUM:int
	//1074025680
	export const TUNSETOFFLOAD:int
	//1074025676
	export const TUNSETOWNER:int
	//1074025675
	export const TUNSETPERSIST:int
	//1074025684
	export const TUNSETSNDBUF:int
	//1074025681
	export const TUNSETTXFILTER:int
	//1074025688
	export const TUNSETVNETHDRSZ:int
	export function tee(rfd:int,wfd:int,len:int,flags:int):int64

	export interface Termios extends Struct<Termios>{

			iflag:uint32
			oflag:uint32
			cflag:uint32
			lflag:uint32
			line:uint8
			cc:uint8/*32*/
			pad_cgo_0:byte/*3*/
			ispeed:uint32
			ospeed:uint32
	}
	export function tgkill(tgid:int,tid:int,sig:Signal)/*error*/

	export function time(t:Ref<Time_t>):Time_t

	export interface Time_t extends int64{

	}
	export function times(tms:Ref<Tms>):uintptr

	export interface Timespec extends Struct<Timespec>{

			sec:int64
			nsec:int64
			unix():[int64,int64]
			nano():int64
	}
	export function timespecToNsec(ts:Timespec):int64

	export interface Timeval extends Struct<Timeval>{

			sec:int64
			usec:int64
			unix():[int64,int64]
			nano():int64
	}
	export function timevalToNsec(tv:Timeval):int64

	export interface Timex extends Struct<Timex>{

			modes:uint32
			pad_cgo_0:byte/*4*/
			offset:int64
			freq:int64
			maxerror:int64
			esterror:int64
			status:int32
			pad_cgo_1:byte/*4*/
			constant:int64
			precision:int64
			tolerance:int64
			time:Timeval
			tick:int64
			ppsfreq:int64
			jitter:int64
			shift:int32
			pad_cgo_2:byte/*4*/
			stabil:int64
			jitcnt:int64
			calcnt:int64
			errcnt:int64
			stbcnt:int64
			tai:int32
			pad_cgo_3:byte/*44*/
	}
	export interface Tms extends Struct<Tms>{

			utime:int64
			stime:int64
			cutime:int64
			cstime:int64
	}
	export function truncate(path:string,length:int64)/*error*/

	export interface Ucred extends Struct<Ucred>{

			pid:int32
			uid:uint32
			gid:uint32
	}
	export function umask(mask:int):int

	export function uname(buf:Ref<Utsname>)/*error*/

	export function unixCredentials(ucred:Ref<Ucred>):Uint8Array

	export function unixRights(...fds:int[]):Uint8Array

	export function unlink(path:string)/*error*/

	export function unlinkat(dirfd:int,path:string)/*error*/

	export function unmount(target:string,flags:int)/*error*/

	export function unsetenv(key:string)/*error*/

	export function unshare(flags:int)/*error*/

	export function ustat(dev:int,ubuf:Ref<Ustat_t>)/*error*/

	export interface Ustat_t extends Struct<Ustat_t>{

			tfree:int32
			pad_cgo_0:byte/*4*/
			tinode:uint64
			fname:int8/*6*/
			fpack:int8/*6*/
			pad_cgo_1:byte/*4*/
	}
	export interface Utimbuf extends Struct<Utimbuf>{

			actime:int64
			modtime:int64
	}
	export function utime(path:string,buf:Ref<Utimbuf>)/*error*/

	export function utimes(path:string,tv:Timeval[])/*error*/

	export function utimesNano(path:string,ts:Timespec[])/*error*/

	export interface Utsname extends Struct<Utsname>{

			sysname:int8/*65*/
			nodename:int8/*65*/
			release:int8/*65*/
			version:int8/*65*/
			machine:int8/*65*/
			domainname:int8/*65*/
	}
	//13
	export const VDISCARD:int
	//4
	export const VEOF:int
	//11
	export const VEOL:int
	//16
	export const VEOL2:int
	//2
	export const VERASE:int
	//0
	export const VINTR:int
	//3
	export const VKILL:int
	//15
	export const VLNEXT:int
	//6
	export const VMIN:int
	//1
	export const VQUIT:int
	//12
	export const VREPRINT:int
	//8
	export const VSTART:int
	//9
	export const VSTOP:int
	//10
	export const VSUSP:int
	//7
	export const VSWTC:int
	//5
	export const VTIME:int
	//14
	export const VWERASE:int
	//1073741824
	export const WALL:int
	//2147483648
	export const WCLONE:int
	//8
	export const WCONTINUED:int
	//4
	export const WEXITED:int
	//1
	export const WNOHANG:int
	//536870912
	export const WNOTHREAD:int
	//16777216
	export const WNOWAIT:int
	//64
	export const WORDSIZE:int
	//2
	export const WSTOPPED:int
	//2
	export const WUNTRACED:int
	export function wait4(pid:int,wstatus:Ref<WaitStatus>,options:int,rusage:Ref<Rusage>):int

	export interface WaitStatus extends uint32{

	exited():bool
	signaled():bool
	stopped():bool
	continued():bool
	coreDump():bool
	exitStatus():int
	signal():Signal
	stopSignal():Signal
	trapCause():int
	}
	export function write(fd:int,p:Uint8Array):int

	//4
	export const XCASE:int
	export function emptyCmsghdr():Cmsghdr
	export function emptyRefCmsghdr():Ref<Cmsghdr>
	export function refOfCmsghdr(x:Cmsghdr,v:Ref<Cmsghdr>)
	export function unRefCmsghdr(v:Ref<Cmsghdr>):Cmsghdr
	export function emptyIfAddrmsg():IfAddrmsg
	export function emptyRefIfAddrmsg():Ref<IfAddrmsg>
	export function refOfIfAddrmsg(x:IfAddrmsg,v:Ref<IfAddrmsg>)
	export function unRefIfAddrmsg(v:Ref<IfAddrmsg>):IfAddrmsg
	export function emptyRawSockaddrInet6():RawSockaddrInet6
	export function emptyRefRawSockaddrInet6():Ref<RawSockaddrInet6>
	export function refOfRawSockaddrInet6(x:RawSockaddrInet6,v:Ref<RawSockaddrInet6>)
	export function unRefRawSockaddrInet6(v:Ref<RawSockaddrInet6>):RawSockaddrInet6
	export function emptyRtGenmsg():RtGenmsg
	export function emptyRefRtGenmsg():Ref<RtGenmsg>
	export function refOfRtGenmsg(x:RtGenmsg,v:Ref<RtGenmsg>)
	export function unRefRtGenmsg(v:Ref<RtGenmsg>):RtGenmsg
	export function emptyEpollEvent():EpollEvent
	export function emptyRefEpollEvent():Ref<EpollEvent>
	export function refOfEpollEvent(x:EpollEvent,v:Ref<EpollEvent>)
	export function unRefEpollEvent(v:Ref<EpollEvent>):EpollEvent
	export function emptyFsid():Fsid
	export function emptyRefFsid():Ref<Fsid>
	export function refOfFsid(x:Fsid,v:Ref<Fsid>)
	export function unRefFsid(v:Ref<Fsid>):Fsid
	export function emptyNlMsgerr():NlMsgerr
	export function emptyRefNlMsgerr():Ref<NlMsgerr>
	export function refOfNlMsgerr(x:NlMsgerr,v:Ref<NlMsgerr>)
	export function unRefNlMsgerr(v:Ref<NlMsgerr>):NlMsgerr
	export function emptyICMPv6Filter():ICMPv6Filter
	export function emptyRefICMPv6Filter():Ref<ICMPv6Filter>
	export function refOfICMPv6Filter(x:ICMPv6Filter,v:Ref<ICMPv6Filter>)
	export function unRefICMPv6Filter(v:Ref<ICMPv6Filter>):ICMPv6Filter
	export function emptyIfInfomsg():IfInfomsg
	export function emptyRefIfInfomsg():Ref<IfInfomsg>
	export function refOfIfInfomsg(x:IfInfomsg,v:Ref<IfInfomsg>)
	export function unRefIfInfomsg(v:Ref<IfInfomsg>):IfInfomsg
	export function emptyNetlinkMessage():NetlinkMessage
	export function emptyRefNetlinkMessage():Ref<NetlinkMessage>
	export function refOfNetlinkMessage(x:NetlinkMessage,v:Ref<NetlinkMessage>)
	export function unRefNetlinkMessage(v:Ref<NetlinkMessage>):NetlinkMessage
	export function emptyRawSockaddrAny():RawSockaddrAny
	export function emptyRefRawSockaddrAny():Ref<RawSockaddrAny>
	export function refOfRawSockaddrAny(x:RawSockaddrAny,v:Ref<RawSockaddrAny>)
	export function unRefRawSockaddrAny(v:Ref<RawSockaddrAny>):RawSockaddrAny
	export function emptyRawSockaddrNetlink():RawSockaddrNetlink
	export function emptyRefRawSockaddrNetlink():Ref<RawSockaddrNetlink>
	export function refOfRawSockaddrNetlink(x:RawSockaddrNetlink,v:Ref<RawSockaddrNetlink>)
	export function unRefRawSockaddrNetlink(v:Ref<RawSockaddrNetlink>):RawSockaddrNetlink
	export function emptyIPMreqn():IPMreqn
	export function emptyRefIPMreqn():Ref<IPMreqn>
	export function refOfIPMreqn(x:IPMreqn,v:Ref<IPMreqn>)
	export function unRefIPMreqn(v:Ref<IPMreqn>):IPMreqn
	export function emptyInet6Pktinfo():Inet6Pktinfo
	export function emptyRefInet6Pktinfo():Ref<Inet6Pktinfo>
	export function refOfInet6Pktinfo(x:Inet6Pktinfo,v:Ref<Inet6Pktinfo>)
	export function unRefInet6Pktinfo(v:Ref<Inet6Pktinfo>):Inet6Pktinfo
	export function emptyNetlinkRouteRequest():NetlinkRouteRequest
	export function emptyRefNetlinkRouteRequest():Ref<NetlinkRouteRequest>
	export function refOfNetlinkRouteRequest(x:NetlinkRouteRequest,v:Ref<NetlinkRouteRequest>)
	export function unRefNetlinkRouteRequest(v:Ref<NetlinkRouteRequest>):NetlinkRouteRequest
	export function emptySysProcIDMap():SysProcIDMap
	export function emptyRefSysProcIDMap():Ref<SysProcIDMap>
	export function refOfSysProcIDMap(x:SysProcIDMap,v:Ref<SysProcIDMap>)
	export function unRefSysProcIDMap(v:Ref<SysProcIDMap>):SysProcIDMap
	export function emptyCredential():Credential
	export function emptyRefCredential():Ref<Credential>
	export function refOfCredential(x:Credential,v:Ref<Credential>)
	export function unRefCredential(v:Ref<Credential>):Credential
	export function emptyIPv6Mreq():IPv6Mreq
	export function emptyRefIPv6Mreq():Ref<IPv6Mreq>
	export function refOfIPv6Mreq(x:IPv6Mreq,v:Ref<IPv6Mreq>)
	export function unRefIPv6Mreq(v:Ref<IPv6Mreq>):IPv6Mreq
	export function emptySockaddrUnix():SockaddrUnix
	export function emptyRefSockaddrUnix():Ref<SockaddrUnix>
	export function refOfSockaddrUnix(x:SockaddrUnix,v:Ref<SockaddrUnix>)
	export function unRefSockaddrUnix(v:Ref<SockaddrUnix>):SockaddrUnix
	export function emptyTimespec():Timespec
	export function emptyRefTimespec():Ref<Timespec>
	export function refOfTimespec(x:Timespec,v:Ref<Timespec>)
	export function unRefTimespec(v:Ref<Timespec>):Timespec
	export function emptyInet4Pktinfo():Inet4Pktinfo
	export function emptyRefInet4Pktinfo():Ref<Inet4Pktinfo>
	export function refOfInet4Pktinfo(x:Inet4Pktinfo,v:Ref<Inet4Pktinfo>)
	export function unRefInet4Pktinfo(v:Ref<Inet4Pktinfo>):Inet4Pktinfo
	export function emptyInotifyEvent():InotifyEvent
	export function emptyRefInotifyEvent():Ref<InotifyEvent>
	export function refOfInotifyEvent(x:InotifyEvent,v:Ref<InotifyEvent>)
	export function unRefInotifyEvent(v:Ref<InotifyEvent>):InotifyEvent
	export function emptyRawSockaddrUnix():RawSockaddrUnix
	export function emptyRefRawSockaddrUnix():Ref<RawSockaddrUnix>
	export function refOfRawSockaddrUnix(x:RawSockaddrUnix,v:Ref<RawSockaddrUnix>)
	export function unRefRawSockaddrUnix(v:Ref<RawSockaddrUnix>):RawSockaddrUnix
	export function emptySockFprog():SockFprog
	export function emptyRefSockFprog():Ref<SockFprog>
	export function refOfSockFprog(x:SockFprog,v:Ref<SockFprog>)
	export function unRefSockFprog(v:Ref<SockFprog>):SockFprog
	export function emptyStatfs_t():Statfs_t
	export function emptyRefStatfs_t():Ref<Statfs_t>
	export function refOfStatfs_t(x:Statfs_t,v:Ref<Statfs_t>)
	export function unRefStatfs_t(v:Ref<Statfs_t>):Statfs_t
	export function emptySysProcAttr():SysProcAttr
	export function emptyRefSysProcAttr():Ref<SysProcAttr>
	export function refOfSysProcAttr(x:SysProcAttr,v:Ref<SysProcAttr>)
	export function unRefSysProcAttr(v:Ref<SysProcAttr>):SysProcAttr
	export function emptyFdSet():FdSet
	export function emptyRefFdSet():Ref<FdSet>
	export function refOfFdSet(x:FdSet,v:Ref<FdSet>)
	export function unRefFdSet(v:Ref<FdSet>):FdSet
	export function emptyNlMsghdr():NlMsghdr
	export function emptyRefNlMsghdr():Ref<NlMsghdr>
	export function refOfNlMsghdr(x:NlMsghdr,v:Ref<NlMsghdr>)
	export function unRefNlMsghdr(v:Ref<NlMsghdr>):NlMsghdr
	export function emptySockaddrInet6():SockaddrInet6
	export function emptyRefSockaddrInet6():Ref<SockaddrInet6>
	export function refOfSockaddrInet6(x:SockaddrInet6,v:Ref<SockaddrInet6>)
	export function unRefSockaddrInet6(v:Ref<SockaddrInet6>):SockaddrInet6
	export function emptyTermios():Termios
	export function emptyRefTermios():Ref<Termios>
	export function refOfTermios(x:Termios,v:Ref<Termios>)
	export function unRefTermios(v:Ref<Termios>):Termios
	export function emptyFlock_t():Flock_t
	export function emptyRefFlock_t():Ref<Flock_t>
	export function refOfFlock_t(x:Flock_t,v:Ref<Flock_t>)
	export function unRefFlock_t(v:Ref<Flock_t>):Flock_t
	export function emptyIPv6MTUInfo():IPv6MTUInfo
	export function emptyRefIPv6MTUInfo():Ref<IPv6MTUInfo>
	export function refOfIPv6MTUInfo(x:IPv6MTUInfo,v:Ref<IPv6MTUInfo>)
	export function unRefIPv6MTUInfo(v:Ref<IPv6MTUInfo>):IPv6MTUInfo
	export function emptyLinger():Linger
	export function emptyRefLinger():Ref<Linger>
	export function refOfLinger(x:Linger,v:Ref<Linger>)
	export function unRefLinger(v:Ref<Linger>):Linger
	export function emptyProcAttr():ProcAttr
	export function emptyRefProcAttr():Ref<ProcAttr>
	export function refOfProcAttr(x:ProcAttr,v:Ref<ProcAttr>)
	export function unRefProcAttr(v:Ref<ProcAttr>):ProcAttr
	export function emptySockaddrInet4():SockaddrInet4
	export function emptyRefSockaddrInet4():Ref<SockaddrInet4>
	export function refOfSockaddrInet4(x:SockaddrInet4,v:Ref<SockaddrInet4>)
	export function unRefSockaddrInet4(v:Ref<SockaddrInet4>):SockaddrInet4
	export function emptyTimex():Timex
	export function emptyRefTimex():Ref<Timex>
	export function refOfTimex(x:Timex,v:Ref<Timex>)
	export function unRefTimex(v:Ref<Timex>):Timex
	export function emptyUtimbuf():Utimbuf
	export function emptyRefUtimbuf():Ref<Utimbuf>
	export function refOfUtimbuf(x:Utimbuf,v:Ref<Utimbuf>)
	export function unRefUtimbuf(v:Ref<Utimbuf>):Utimbuf
	export function emptyPtraceRegs():PtraceRegs
	export function emptyRefPtraceRegs():Ref<PtraceRegs>
	export function refOfPtraceRegs(x:PtraceRegs,v:Ref<PtraceRegs>)
	export function unRefPtraceRegs(v:Ref<PtraceRegs>):PtraceRegs
	export function emptySockFilter():SockFilter
	export function emptyRefSockFilter():Ref<SockFilter>
	export function refOfSockFilter(x:SockFilter,v:Ref<SockFilter>)
	export function unRefSockFilter(v:Ref<SockFilter>):SockFilter
	export function emptySockaddrNetlink():SockaddrNetlink
	export function emptyRefSockaddrNetlink():Ref<SockaddrNetlink>
	export function refOfSockaddrNetlink(x:SockaddrNetlink,v:Ref<SockaddrNetlink>)
	export function unRefSockaddrNetlink(v:Ref<SockaddrNetlink>):SockaddrNetlink
	export function emptySysinfo_t():Sysinfo_t
	export function emptyRefSysinfo_t():Ref<Sysinfo_t>
	export function refOfSysinfo_t(x:Sysinfo_t,v:Ref<Sysinfo_t>)
	export function unRefSysinfo_t(v:Ref<Sysinfo_t>):Sysinfo_t
	export function emptyTimeval():Timeval
	export function emptyRefTimeval():Ref<Timeval>
	export function refOfTimeval(x:Timeval,v:Ref<Timeval>)
	export function unRefTimeval(v:Ref<Timeval>):Timeval
	export function emptyTms():Tms
	export function emptyRefTms():Ref<Tms>
	export function refOfTms(x:Tms,v:Ref<Tms>)
	export function unRefTms(v:Ref<Tms>):Tms
	export function emptyRawSockaddr():RawSockaddr
	export function emptyRefRawSockaddr():Ref<RawSockaddr>
	export function refOfRawSockaddr(x:RawSockaddr,v:Ref<RawSockaddr>)
	export function unRefRawSockaddr(v:Ref<RawSockaddr>):RawSockaddr
	export function emptyRtAttr():RtAttr
	export function emptyRefRtAttr():Ref<RtAttr>
	export function refOfRtAttr(x:RtAttr,v:Ref<RtAttr>)
	export function unRefRtAttr(v:Ref<RtAttr>):RtAttr
	export function emptyStat_t():Stat_t
	export function emptyRefStat_t():Ref<Stat_t>
	export function refOfStat_t(x:Stat_t,v:Ref<Stat_t>)
	export function unRefStat_t(v:Ref<Stat_t>):Stat_t
	export function emptyMsghdr():Msghdr
	export function emptyRefMsghdr():Ref<Msghdr>
	export function refOfMsghdr(x:Msghdr,v:Ref<Msghdr>)
	export function unRefMsghdr(v:Ref<Msghdr>):Msghdr
	export function emptyRawSockaddrInet4():RawSockaddrInet4
	export function emptyRefRawSockaddrInet4():Ref<RawSockaddrInet4>
	export function refOfRawSockaddrInet4(x:RawSockaddrInet4,v:Ref<RawSockaddrInet4>)
	export function unRefRawSockaddrInet4(v:Ref<RawSockaddrInet4>):RawSockaddrInet4
	export function emptyUtsname():Utsname
	export function emptyRefUtsname():Ref<Utsname>
	export function refOfUtsname(x:Utsname,v:Ref<Utsname>)
	export function unRefUtsname(v:Ref<Utsname>):Utsname
	export function emptyRtMsg():RtMsg
	export function emptyRefRtMsg():Ref<RtMsg>
	export function refOfRtMsg(x:RtMsg,v:Ref<RtMsg>)
	export function unRefRtMsg(v:Ref<RtMsg>):RtMsg
	export function emptyRusage():Rusage
	export function emptyRefRusage():Ref<Rusage>
	export function refOfRusage(x:Rusage,v:Ref<Rusage>)
	export function unRefRusage(v:Ref<Rusage>):Rusage
	export function emptyRawSockaddrLinklayer():RawSockaddrLinklayer
	export function emptyRefRawSockaddrLinklayer():Ref<RawSockaddrLinklayer>
	export function refOfRawSockaddrLinklayer(x:RawSockaddrLinklayer,v:Ref<RawSockaddrLinklayer>)
	export function unRefRawSockaddrLinklayer(v:Ref<RawSockaddrLinklayer>):RawSockaddrLinklayer
	export function emptySocketControlMessage():SocketControlMessage
	export function emptyRefSocketControlMessage():Ref<SocketControlMessage>
	export function refOfSocketControlMessage(x:SocketControlMessage,v:Ref<SocketControlMessage>)
	export function unRefSocketControlMessage(v:Ref<SocketControlMessage>):SocketControlMessage
	export function emptyNetlinkRouteAttr():NetlinkRouteAttr
	export function emptyRefNetlinkRouteAttr():Ref<NetlinkRouteAttr>
	export function refOfNetlinkRouteAttr(x:NetlinkRouteAttr,v:Ref<NetlinkRouteAttr>)
	export function unRefNetlinkRouteAttr(v:Ref<NetlinkRouteAttr>):NetlinkRouteAttr
	export function emptyNlAttr():NlAttr
	export function emptyRefNlAttr():Ref<NlAttr>
	export function refOfNlAttr(x:NlAttr,v:Ref<NlAttr>)
	export function unRefNlAttr(v:Ref<NlAttr>):NlAttr
	export function emptyRlimit():Rlimit
	export function emptyRefRlimit():Ref<Rlimit>
	export function refOfRlimit(x:Rlimit,v:Ref<Rlimit>)
	export function unRefRlimit(v:Ref<Rlimit>):Rlimit
	export function emptyRtNexthop():RtNexthop
	export function emptyRefRtNexthop():Ref<RtNexthop>
	export function refOfRtNexthop(x:RtNexthop,v:Ref<RtNexthop>)
	export function unRefRtNexthop(v:Ref<RtNexthop>):RtNexthop
	export function emptyUcred():Ucred
	export function emptyRefUcred():Ref<Ucred>
	export function refOfUcred(x:Ucred,v:Ref<Ucred>)
	export function unRefUcred(v:Ref<Ucred>):Ucred
	export function emptyUstat_t():Ustat_t
	export function emptyRefUstat_t():Ref<Ustat_t>
	export function refOfUstat_t(x:Ustat_t,v:Ref<Ustat_t>)
	export function unRefUstat_t(v:Ref<Ustat_t>):Ustat_t
	export function emptyDirent():Dirent
	export function emptyRefDirent():Ref<Dirent>
	export function refOfDirent(x:Dirent,v:Ref<Dirent>)
	export function unRefDirent(v:Ref<Dirent>):Dirent
	export function emptyIPMreq():IPMreq
	export function emptyRefIPMreq():Ref<IPMreq>
	export function refOfIPMreq(x:IPMreq,v:Ref<IPMreq>)
	export function unRefIPMreq(v:Ref<IPMreq>):IPMreq
	export function emptyIovec():Iovec
	export function emptyRefIovec():Ref<Iovec>
	export function refOfIovec(x:Iovec,v:Ref<Iovec>)
	export function unRefIovec(v:Ref<Iovec>):Iovec
	export function emptySockaddrLinklayer():SockaddrLinklayer
	export function emptyRefSockaddrLinklayer():Ref<SockaddrLinklayer>
	export function refOfSockaddrLinklayer(x:SockaddrLinklayer,v:Ref<SockaddrLinklayer>)
	export function unRefSockaddrLinklayer(v:Ref<SockaddrLinklayer>):SockaddrLinklayer
	export function emptyTCPInfo():TCPInfo
	export function emptyRefTCPInfo():Ref<TCPInfo>
	export function refOfTCPInfo(x:TCPInfo,v:Ref<TCPInfo>)
	export function unRefTCPInfo(v:Ref<TCPInfo>):TCPInfo
}