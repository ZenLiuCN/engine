// Code generated by define_gene; DO NOT EDIT.
package mime

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/modules/golang/io"
	"mime"
)

var (
	//go:embed mime.d.ts
	MimeDefine   []byte
	MimeDeclared = map[string]any{
		"BEncoding":                mime.BEncoding,
		"ErrInvalidMediaParameter": mime.ErrInvalidMediaParameter,
		"extensionsByType":         mime.ExtensionsByType,
		"formatMediaType":          mime.FormatMediaType,
		"parseMediaType":           mime.ParseMediaType,
		"QEncoding":                mime.QEncoding,
		"typeByExtension":          mime.TypeByExtension,
		"addExtensionType":         mime.AddExtensionType,

		"emptyWordDecoder":    engine.Empty[mime.WordDecoder],
		"emptyRefWordDecoder": engine.EmptyRefer[mime.WordDecoder],
		"refOfWordDecoder":    engine.ReferOf[mime.WordDecoder],
		"unRefWordDecoder":    engine.UnRefer[mime.WordDecoder]}
)

func init() {
	engine.RegisterModule(MimeModule{})
}

type MimeModule struct{}

func (S MimeModule) Identity() string {
	return "golang/mime"
}
func (S MimeModule) TypeDefine() []byte {
	return MimeDefine
}
func (S MimeModule) Exports() map[string]any {
	return MimeDeclared
}
