// Code generated by define_gene; DO NOT EDIT.
package image

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/modules/golang/image/color"
	_ "github.com/ZenLiuCN/engine/modules/golang/io"
	"image"
)

var (
	//go:embed image.d.ts
	ImageDefine   []byte
	ImageDeclared = map[string]any{
		"newAlpha16":             image.NewAlpha16,
		"newRGBA":                image.NewRGBA,
		"newGray16":              image.NewGray16,
		"YCbCrSubsampleRatio444": image.YCbCrSubsampleRatio444,
		"newGray":                image.NewGray,
		"newNRGBA":               image.NewNRGBA,
		"newPaletted":            image.NewPaletted,
		"newUniform":             image.NewUniform,
		"newAlpha":               image.NewAlpha,
		"Opaque":                 image.Opaque,
		"registerFormat":         image.RegisterFormat,
		"Black":                  image.Black,
		"newNYCbCrA":             image.NewNYCbCrA,
		"YCbCrSubsampleRatio410": image.YCbCrSubsampleRatio410,
		"YCbCrSubsampleRatio420": image.YCbCrSubsampleRatio420,
		"newCMYK":                image.NewCMYK,
		"newYCbCr":               image.NewYCbCr,
		"pt":                     image.Pt,
		"YCbCrSubsampleRatio440": image.YCbCrSubsampleRatio440,
		"ZR":                     image.ZR,
		"decode":                 image.Decode,
		"rect":                   image.Rect,
		"YCbCrSubsampleRatio422": image.YCbCrSubsampleRatio422,
		"ZP":                     image.ZP,
		"decodeConfig":           image.DecodeConfig,
		"ErrFormat":              image.ErrFormat,
		"newNRGBA64":             image.NewNRGBA64,
		"newRGBA64":              image.NewRGBA64,
		"Transparent":            image.Transparent,
		"White":                  image.White,
		"YCbCrSubsampleRatio411": image.YCbCrSubsampleRatio411,

		"emptyPoint":        engine.Empty[image.Point],
		"emptyRefPoint":     engine.EmptyRefer[image.Point],
		"refOfPoint":        engine.ReferOf[image.Point],
		"unRefPoint":        engine.UnRefer[image.Point],
		"emptyRectangle":    engine.Empty[image.Rectangle],
		"emptyRefRectangle": engine.EmptyRefer[image.Rectangle],
		"refOfRectangle":    engine.ReferOf[image.Rectangle],
		"unRefRectangle":    engine.UnRefer[image.Rectangle],
		"emptyConfig":       engine.Empty[image.Config],
		"emptyRefConfig":    engine.EmptyRefer[image.Config],
		"refOfConfig":       engine.ReferOf[image.Config],
		"unRefConfig":       engine.UnRefer[image.Config]}
)

func init() {
	engine.RegisterModule(ImageModule{})
}

type ImageModule struct{}

func (S ImageModule) Identity() string {
	return "golang/image"
}
func (S ImageModule) TypeDefine() []byte {
	return ImageDefine
}
func (S ImageModule) Exports() map[string]any {
	return ImageDeclared
}
