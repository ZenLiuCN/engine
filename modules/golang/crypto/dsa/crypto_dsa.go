// Code generated by define_gene; DO NOT EDIT.
package dsa

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"crypto/dsa"
	_ "github.com/ZenLiuCN/engine/modules/golang/io"
	_ "github.com/ZenLiuCN/engine/modules/golang/math/big"
)

var (
	//go:embed crypto_dsa.d.ts
	CryptoDsaDefine   []byte
	CryptoDsaDeclared = map[string]any{
		"generateKey":         dsa.GenerateKey,
		"generateParameters":  dsa.GenerateParameters,
		"L2048N224":           dsa.L2048N224,
		"L3072N256":           dsa.L3072N256,
		"sign":                dsa.Sign,
		"verify":              dsa.Verify,
		"ErrInvalidPublicKey": dsa.ErrInvalidPublicKey,
		"L1024N160":           dsa.L1024N160,
		"L2048N256":           dsa.L2048N256,

		"emptyParameters":    engine.Empty[dsa.Parameters],
		"emptyRefParameters": engine.EmptyRefer[dsa.Parameters],
		"refOfParameters":    engine.ReferOf[dsa.Parameters],
		"unRefParameters":    engine.UnRefer[dsa.Parameters],
		"emptyPrivateKey":    engine.Empty[dsa.PrivateKey],
		"emptyRefPrivateKey": engine.EmptyRefer[dsa.PrivateKey],
		"refOfPrivateKey":    engine.ReferOf[dsa.PrivateKey],
		"unRefPrivateKey":    engine.UnRefer[dsa.PrivateKey],
		"emptyPublicKey":     engine.Empty[dsa.PublicKey],
		"emptyRefPublicKey":  engine.EmptyRefer[dsa.PublicKey],
		"refOfPublicKey":     engine.ReferOf[dsa.PublicKey],
		"unRefPublicKey":     engine.UnRefer[dsa.PublicKey]}
)

func init() {
	engine.RegisterModule(CryptoDsaModule{})
}

type CryptoDsaModule struct{}

func (S CryptoDsaModule) Identity() string {
	return "golang/crypto/dsa"
}
func (S CryptoDsaModule) TypeDefine() []byte {
	return CryptoDsaDefine
}
func (S CryptoDsaModule) Exports() map[string]any {
	return CryptoDsaDeclared
}
