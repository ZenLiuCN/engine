// Code generated by define_gene; DO NOT EDIT.
package ecdh

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"crypto/ecdh"
	_ "github.com/ZenLiuCN/engine/modules/golang/crypto"
	_ "github.com/ZenLiuCN/engine/modules/golang/io"
)

var (
	//go:embed crypto_ecdh.d.ts
	CryptoEcdhDefine   []byte
	CryptoEcdhDeclared = map[string]any{
		"P384":   ecdh.P384,
		"P521":   ecdh.P521,
		"X25519": ecdh.X25519,
		"P256":   ecdh.P256,

		"emptyPrivateKey":    engine.Empty[ecdh.PrivateKey],
		"emptyRefPrivateKey": engine.EmptyRefer[ecdh.PrivateKey],
		"refOfPrivateKey":    engine.ReferOf[ecdh.PrivateKey],
		"unRefPrivateKey":    engine.UnRefer[ecdh.PrivateKey],
		"emptyPublicKey":     engine.Empty[ecdh.PublicKey],
		"emptyRefPublicKey":  engine.EmptyRefer[ecdh.PublicKey],
		"refOfPublicKey":     engine.ReferOf[ecdh.PublicKey],
		"unRefPublicKey":     engine.UnRefer[ecdh.PublicKey]}
)

func init() {
	engine.RegisterModule(CryptoEcdhModule{})
}

type CryptoEcdhModule struct{}

func (S CryptoEcdhModule) Identity() string {
	return "golang/crypto/ecdh"
}
func (S CryptoEcdhModule) TypeDefine() []byte {
	return CryptoEcdhDefine
}
func (S CryptoEcdhModule) Exports() map[string]any {
	return CryptoEcdhDeclared
}
