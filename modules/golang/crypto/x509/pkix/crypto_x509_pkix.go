// Code generated by define_gene; DO NOT EDIT.
package pkix

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"crypto/x509/pkix"
	_ "github.com/ZenLiuCN/engine/modules/golang/encoding/asn1"
	_ "github.com/ZenLiuCN/engine/modules/golang/fmt"
	_ "github.com/ZenLiuCN/engine/modules/golang/math/big"
	_ "github.com/ZenLiuCN/engine/modules/golang/time"
)

var (
	//go:embed crypto_x509_pkix.d.ts
	Crypto509PkixDefine   []byte
	Crypto509PkixDeclared = map[string]any{

		"emptyAttributeTypeAndValue":       engine.Empty[pkix.AttributeTypeAndValue],
		"emptyRefAttributeTypeAndValue":    engine.EmptyRefer[pkix.AttributeTypeAndValue],
		"refOfAttributeTypeAndValue":       engine.ReferOf[pkix.AttributeTypeAndValue],
		"unRefAttributeTypeAndValue":       engine.UnRefer[pkix.AttributeTypeAndValue],
		"emptyAttributeTypeAndValueSET":    engine.Empty[pkix.AttributeTypeAndValueSET],
		"emptyRefAttributeTypeAndValueSET": engine.EmptyRefer[pkix.AttributeTypeAndValueSET],
		"refOfAttributeTypeAndValueSET":    engine.ReferOf[pkix.AttributeTypeAndValueSET],
		"unRefAttributeTypeAndValueSET":    engine.UnRefer[pkix.AttributeTypeAndValueSET],
		"emptyCertificateList":             engine.Empty[pkix.CertificateList],
		"emptyRefCertificateList":          engine.EmptyRefer[pkix.CertificateList],
		"refOfCertificateList":             engine.ReferOf[pkix.CertificateList],
		"unRefCertificateList":             engine.UnRefer[pkix.CertificateList],
		"emptyExtension":                   engine.Empty[pkix.Extension],
		"emptyRefExtension":                engine.EmptyRefer[pkix.Extension],
		"refOfExtension":                   engine.ReferOf[pkix.Extension],
		"unRefExtension":                   engine.UnRefer[pkix.Extension],
		"emptyName":                        engine.Empty[pkix.Name],
		"emptyRefName":                     engine.EmptyRefer[pkix.Name],
		"refOfName":                        engine.ReferOf[pkix.Name],
		"unRefName":                        engine.UnRefer[pkix.Name],
		"emptyRevokedCertificate":          engine.Empty[pkix.RevokedCertificate],
		"emptyRefRevokedCertificate":       engine.EmptyRefer[pkix.RevokedCertificate],
		"refOfRevokedCertificate":          engine.ReferOf[pkix.RevokedCertificate],
		"unRefRevokedCertificate":          engine.UnRefer[pkix.RevokedCertificate],
		"emptyTBSCertificateList":          engine.Empty[pkix.TBSCertificateList],
		"emptyRefTBSCertificateList":       engine.EmptyRefer[pkix.TBSCertificateList],
		"refOfTBSCertificateList":          engine.ReferOf[pkix.TBSCertificateList],
		"unRefTBSCertificateList":          engine.UnRefer[pkix.TBSCertificateList],
		"emptyAlgorithmIdentifier":         engine.Empty[pkix.AlgorithmIdentifier],
		"emptyRefAlgorithmIdentifier":      engine.EmptyRefer[pkix.AlgorithmIdentifier],
		"refOfAlgorithmIdentifier":         engine.ReferOf[pkix.AlgorithmIdentifier],
		"unRefAlgorithmIdentifier":         engine.UnRefer[pkix.AlgorithmIdentifier]}
)

func init() {
	engine.RegisterModule(Crypto509PkixModule{})
}

type Crypto509PkixModule struct{}

func (S Crypto509PkixModule) Identity() string {
	return "golang/crypto/x509/pkix"
}
func (S Crypto509PkixModule) TypeDefine() []byte {
	return Crypto509PkixDefine
}
func (S Crypto509PkixModule) Exports() map[string]any {
	return Crypto509PkixDeclared
}
