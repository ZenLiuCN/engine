// Code generated by define_gene; DO NOT EDIT.
package cipher

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"crypto/cipher"
	_ "github.com/ZenLiuCN/engine/modules/golang/io"
)

var (
	//go:embed crypto_cipher.d.ts
	CryptoCipherDefine   []byte
	CryptoCipherDeclared = map[string]any{
		"newOFB":              cipher.NewOFB,
		"newCBCDecrypter":     cipher.NewCBCDecrypter,
		"newCBCEncrypter":     cipher.NewCBCEncrypter,
		"newCFBDecrypter":     cipher.NewCFBDecrypter,
		"newCFBEncrypter":     cipher.NewCFBEncrypter,
		"newCTR":              cipher.NewCTR,
		"newGCM":              cipher.NewGCM,
		"newGCMWithTagSize":   cipher.NewGCMWithTagSize,
		"newGCMWithNonceSize": cipher.NewGCMWithNonceSize,

		"emptyStreamReader":    engine.Empty[cipher.StreamReader],
		"emptyRefStreamReader": engine.EmptyRefer[cipher.StreamReader],
		"refOfStreamReader":    engine.ReferOf[cipher.StreamReader],
		"unRefStreamReader":    engine.UnRefer[cipher.StreamReader],
		"emptyStreamWriter":    engine.Empty[cipher.StreamWriter],
		"emptyRefStreamWriter": engine.EmptyRefer[cipher.StreamWriter],
		"refOfStreamWriter":    engine.ReferOf[cipher.StreamWriter],
		"unRefStreamWriter":    engine.UnRefer[cipher.StreamWriter]}
)

func init() {
	engine.RegisterModule(CryptoCipherModule{})
}

type CryptoCipherModule struct{}

func (S CryptoCipherModule) Identity() string {
	return "golang/crypto/cipher"
}
func (S CryptoCipherModule) TypeDefine() []byte {
	return CryptoCipherDefine
}
func (S CryptoCipherModule) Exports() map[string]any {
	return CryptoCipherDeclared
}
