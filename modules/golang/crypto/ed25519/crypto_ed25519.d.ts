// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'golang/crypto/ed25519'{

	// @ts-ignore
	import * as io from 'golang/io'
	// @ts-ignore
	import * as crypto from 'golang/crypto'
	// @ts-ignore
	import type {int,Ref,error,Struct,bool} from 'go'
	export function generateKey(rand:io.Reader):[PublicKey,PrivateKey]

	export function newKeyFromSeed(seed:Uint8Array):PrivateKey

	export interface Options extends Struct<Options>,crypto.PublicKey,crypto.SignerOpts,crypto.PrivateKey,crypto.DecrypterOpts{

			hash:crypto.Hash
			context:string
			hashFunc():crypto.Hash
	}
	export interface PrivateKey extends Uint8Array{

			public():crypto.PublicKey
			equal(x:crypto.PrivateKey):bool
			seed():Uint8Array
			sign(rand:io.Reader,message:Uint8Array,opts:crypto.SignerOpts):Uint8Array
	}
	//64
	export const PrivateKeySize:int
	export interface PublicKey extends Uint8Array{

			equal(x:crypto.PublicKey):bool
	}
	//32
	export const PublicKeySize:int
	//32
	export const SeedSize:int
	export function sign(privateKey:PrivateKey,message:Uint8Array):Uint8Array

	//64
	export const SignatureSize:int
	export function verify(publicKey:PublicKey,message:Uint8Array,sig:Uint8Array):bool

	export function verifyWithOptions(publicKey:PublicKey,message:Uint8Array,sig:Uint8Array,opts:Ref<Options>)/*error*/

	export function emptyOptions():Options
	export function emptyRefOptions():Ref<Options>
	export function refOfOptions(x:Options,v:Ref<Options>)
	export function unRefOptions(v:Ref<Options>):Options
}