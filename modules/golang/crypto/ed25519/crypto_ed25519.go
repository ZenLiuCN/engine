// Code generated by define_gene; DO NOT EDIT.
package ed25519

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"crypto/ed25519"
	_ "github.com/ZenLiuCN/engine/modules/golang/crypto"
	_ "github.com/ZenLiuCN/engine/modules/golang/io"
)

var (
	//go:embed crypto_ed25519.d.ts
	CryptoEd25519Define   []byte
	CryptoEd25519Declared = map[string]any{
		"newKeyFromSeed":    ed25519.NewKeyFromSeed,
		"PrivateKeySize":    ed25519.PrivateKeySize,
		"SignatureSize":     ed25519.SignatureSize,
		"verify":            ed25519.Verify,
		"generateKey":       ed25519.GenerateKey,
		"PublicKeySize":     ed25519.PublicKeySize,
		"SeedSize":          ed25519.SeedSize,
		"sign":              ed25519.Sign,
		"verifyWithOptions": ed25519.VerifyWithOptions,

		"emptyOptions":    engine.Empty[ed25519.Options],
		"emptyRefOptions": engine.EmptyRefer[ed25519.Options],
		"refOfOptions":    engine.ReferOf[ed25519.Options],
		"unRefOptions":    engine.UnRefer[ed25519.Options]}
)

func init() {
	engine.RegisterModule(CryptoEd25519Module{})
}

type CryptoEd25519Module struct{}

func (S CryptoEd25519Module) Identity() string {
	return "golang/crypto/ed25519"
}
func (S CryptoEd25519Module) TypeDefine() []byte {
	return CryptoEd25519Define
}
func (S CryptoEd25519Module) Exports() map[string]any {
	return CryptoEd25519Declared
}
