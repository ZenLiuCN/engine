// Code generated by define_gene; DO NOT EDIT.
package regexp

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/modules/golang/io"
	"regexp"
)

var (
	//go:embed regexp.d.ts
	RegexpDefine   []byte
	RegexpDeclared = map[string]any{
		"compile":          regexp.Compile,
		"compilePOSIX":     regexp.CompilePOSIX,
		"match":            regexp.Match,
		"matchReader":      regexp.MatchReader,
		"matchString":      regexp.MatchString,
		"mustCompile":      regexp.MustCompile,
		"mustCompilePOSIX": regexp.MustCompilePOSIX,
		"quoteMeta":        regexp.QuoteMeta,

		"emptyRegexp":    engine.Empty[regexp.Regexp],
		"emptyRefRegexp": engine.EmptyRefer[regexp.Regexp],
		"refOfRegexp":    engine.ReferOf[regexp.Regexp],
		"unRefRegexp":    engine.UnRefer[regexp.Regexp]}
)

func init() {
	engine.RegisterModule(RegexpModule{})
}

type RegexpModule struct{}

func (S RegexpModule) Identity() string {
	return "golang/regexp"
}
func (S RegexpModule) TypeDefine() []byte {
	return RegexpDefine
}
func (S RegexpModule) Exports() map[string]any {
	return RegexpDeclared
}
