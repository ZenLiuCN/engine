// Code generated by define_gene; DO NOT EDIT.
package maphash

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"hash/maphash"
)

var (
	//go:embed hash_maphash.d.ts
	HashMaphashDefine   []byte
	HashMaphashDeclared = map[string]any{
		"string":   maphash.String,
		"bytes":    maphash.Bytes,
		"makeSeed": maphash.MakeSeed,

		"emptyHash":    engine.Empty[maphash.Hash],
		"emptyRefHash": engine.EmptyRefer[maphash.Hash],
		"refOfHash":    engine.ReferOf[maphash.Hash],
		"unRefHash":    engine.UnRefer[maphash.Hash],
		"emptySeed":    engine.Empty[maphash.Seed],
		"emptyRefSeed": engine.EmptyRefer[maphash.Seed],
		"refOfSeed":    engine.ReferOf[maphash.Seed],
		"unRefSeed":    engine.UnRefer[maphash.Seed]}
)

func init() {
	engine.RegisterModule(HashMaphashModule{})
}

type HashMaphashModule struct{}

func (S HashMaphashModule) Identity() string {
	return "golang/hash/maphash"
}
func (S HashMaphashModule) TypeDefine() []byte {
	return HashMaphashDefine
}
func (S HashMaphashModule) Exports() map[string]any {
	return HashMaphashDeclared
}
