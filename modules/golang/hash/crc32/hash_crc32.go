// Code generated by define_gene; DO NOT EDIT.
package crc32

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/modules/golang/hash"
	"hash/crc32"
)

var (
	//go:embed hash_crc32.d.ts
	HashCrc32Define   []byte
	HashCrc32Declared = map[string]any{
		"IEEE":         crc32.IEEE,
		"IEEETable":    crc32.IEEETable,
		"Koopman":      crc32.Koopman,
		"New":          crc32.New,
		"Size":         crc32.Size,
		"update":       crc32.Update,
		"checksum":     crc32.Checksum,
		"checksumIEEE": crc32.ChecksumIEEE,
		"makeTable":    crc32.MakeTable,
		"newIEEE":      crc32.NewIEEE,
		"Castagnoli":   crc32.Castagnoli,
	}
)

func init() {
	engine.RegisterModule(HashCrc32Module{})
}

type HashCrc32Module struct{}

func (S HashCrc32Module) Identity() string {
	return "golang/hash/crc32"
}
func (S HashCrc32Module) TypeDefine() []byte {
	return HashCrc32Define
}
func (S HashCrc32Module) Exports() map[string]any {
	return HashCrc32Declared
}
