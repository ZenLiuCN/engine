// Code generated by define_gene; DO NOT EDIT.
package mail

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/modules/golang/fmt"
	_ "github.com/ZenLiuCN/engine/modules/golang/io"
	_ "github.com/ZenLiuCN/engine/modules/golang/mime"
	_ "github.com/ZenLiuCN/engine/modules/golang/time"
	"net/mail"
)

var (
	//go:embed net_mail.d.ts
	NetMailDefine   []byte
	NetMailDeclared = map[string]any{
		"ErrHeaderNotPresent": mail.ErrHeaderNotPresent,
		"parseAddress":        mail.ParseAddress,
		"parseAddressList":    mail.ParseAddressList,
		"parseDate":           mail.ParseDate,
		"readMessage":         mail.ReadMessage,

		"emptyAddress":          engine.Empty[mail.Address],
		"emptyRefAddress":       engine.EmptyRefer[mail.Address],
		"refOfAddress":          engine.ReferOf[mail.Address],
		"unRefAddress":          engine.UnRefer[mail.Address],
		"emptyAddressParser":    engine.Empty[mail.AddressParser],
		"emptyRefAddressParser": engine.EmptyRefer[mail.AddressParser],
		"refOfAddressParser":    engine.ReferOf[mail.AddressParser],
		"unRefAddressParser":    engine.UnRefer[mail.AddressParser],
		"emptyMessage":          engine.Empty[mail.Message],
		"emptyRefMessage":       engine.EmptyRefer[mail.Message],
		"refOfMessage":          engine.ReferOf[mail.Message],
		"unRefMessage":          engine.UnRefer[mail.Message]}
)

func init() {
	engine.RegisterModule(NetMailModule{})
}

type NetMailModule struct{}

func (S NetMailModule) Identity() string {
	return "golang/net/mail"
}
func (S NetMailModule) TypeDefine() []byte {
	return NetMailDefine
}
func (S NetMailModule) Exports() map[string]any {
	return NetMailDeclared
}
