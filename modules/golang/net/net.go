// Code generated by define_gene; DO NOT EDIT.
package net

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/modules/golang/context"
	_ "github.com/ZenLiuCN/engine/modules/golang/io"
	_ "github.com/ZenLiuCN/engine/modules/golang/net/netip"
	_ "github.com/ZenLiuCN/engine/modules/golang/os"
	_ "github.com/ZenLiuCN/engine/modules/golang/syscall"
	_ "github.com/ZenLiuCN/engine/modules/golang/time"
	"net"
)

var (
	//go:embed net.d.ts
	NetDefine   []byte
	NetDeclared = map[string]any{
		"lookupHost":                 net.LookupHost,
		"FlagUp":                     net.FlagUp,
		"IPv6linklocalallrouters":    net.IPv6linklocalallrouters,
		"interfaceAddrs":             net.InterfaceAddrs,
		"listenTCP":                  net.ListenTCP,
		"lookupCNAME":                net.LookupCNAME,
		"lookupMX":                   net.LookupMX,
		"FlagPointToPoint":           net.FlagPointToPoint,
		"IPv4bcast":                  net.IPv4bcast,
		"IPv6interfacelocalallnodes": net.IPv6interfacelocalallnodes,
		"listen":                     net.Listen,
		"listenUDP":                  net.ListenUDP,
		"ErrWriteToConnected":        net.ErrWriteToConnected,
		"FlagLoopback":               net.FlagLoopback,
		"lookupPort":                 net.LookupPort,
		"lookupTXT":                  net.LookupTXT,
		"udpAddrFromAddrPort":        net.UDPAddrFromAddrPort,
		"dialIP":                     net.DialIP,
		"IPv4allrouter":              net.IPv4allrouter,
		"IPv4allsys":                 net.IPv4allsys,
		"IPv6loopback":               net.IPv6loopback,
		"parseIP":                    net.ParseIP,
		"lookupSRV":                  net.LookupSRV,
		"fileConn":                   net.FileConn,
		"iPv4":                       net.IPv4,
		"iPv4Mask":                   net.IPv4Mask,
		"IPv4zero":                   net.IPv4zero,
		"listenPacket":               net.ListenPacket,
		"cidrMask":                   net.CIDRMask,
		"DefaultResolver":            net.DefaultResolver,
		"joinHostPort":               net.JoinHostPort,
		"IPv6len":                    net.IPv6len,
		"IPv6unspecified":            net.IPv6unspecified,
		"IPv6zero":                   net.IPv6zero,
		"lookupNS":                   net.LookupNS,
		"parseMAC":                   net.ParseMAC,
		"dialTimeout":                net.DialTimeout,
		"interfaces":                 net.Interfaces,
		"listenUnix":                 net.ListenUnix,
		"resolveTCPAddr":             net.ResolveTCPAddr,
		"pipe":                       net.Pipe,
		"dial":                       net.Dial,
		"dialUDP":                    net.DialUDP,
		"ErrClosed":                  net.ErrClosed,
		"listenMulticastUDP":         net.ListenMulticastUDP,
		"lookupIP":                   net.LookupIP,
		"resolveUnixAddr":            net.ResolveUnixAddr,
		"FlagBroadcast":              net.FlagBroadcast,
		"FlagMulticast":              net.FlagMulticast,
		"resolveUDPAddr":             net.ResolveUDPAddr,
		"filePacketConn":             net.FilePacketConn,
		"interfaceByIndex":           net.InterfaceByIndex,
		"tcpAddrFromAddrPort":        net.TCPAddrFromAddrPort,
		"listenIP":                   net.ListenIP,
		"lookupAddr":                 net.LookupAddr,
		"splitHostPort":              net.SplitHostPort,
		"dialTCP":                    net.DialTCP,
		"dialUnix":                   net.DialUnix,
		"fileListener":               net.FileListener,
		"IPv4len":                    net.IPv4len,
		"interfaceByName":            net.InterfaceByName,
		"FlagRunning":                net.FlagRunning,
		"IPv6linklocalallnodes":      net.IPv6linklocalallnodes,
		"listenUnixgram":             net.ListenUnixgram,
		"parseCIDR":                  net.ParseCIDR,
		"resolveIPAddr":              net.ResolveIPAddr,

		"emptyDialer":          engine.Empty[net.Dialer],
		"emptyRefDialer":       engine.EmptyRefer[net.Dialer],
		"refOfDialer":          engine.ReferOf[net.Dialer],
		"unRefDialer":          engine.UnRefer[net.Dialer],
		"emptyIPAddr":          engine.Empty[net.IPAddr],
		"emptyRefIPAddr":       engine.EmptyRefer[net.IPAddr],
		"refOfIPAddr":          engine.ReferOf[net.IPAddr],
		"unRefIPAddr":          engine.UnRefer[net.IPAddr],
		"emptyUnixConn":        engine.Empty[net.UnixConn],
		"emptyRefUnixConn":     engine.EmptyRefer[net.UnixConn],
		"refOfUnixConn":        engine.ReferOf[net.UnixConn],
		"unRefUnixConn":        engine.UnRefer[net.UnixConn],
		"emptyTCPListener":     engine.Empty[net.TCPListener],
		"emptyRefTCPListener":  engine.EmptyRefer[net.TCPListener],
		"refOfTCPListener":     engine.ReferOf[net.TCPListener],
		"unRefTCPListener":     engine.UnRefer[net.TCPListener],
		"emptyTCPAddr":         engine.Empty[net.TCPAddr],
		"emptyRefTCPAddr":      engine.EmptyRefer[net.TCPAddr],
		"refOfTCPAddr":         engine.ReferOf[net.TCPAddr],
		"unRefTCPAddr":         engine.UnRefer[net.TCPAddr],
		"emptyUnixAddr":        engine.Empty[net.UnixAddr],
		"emptyRefUnixAddr":     engine.EmptyRefer[net.UnixAddr],
		"refOfUnixAddr":        engine.ReferOf[net.UnixAddr],
		"unRefUnixAddr":        engine.UnRefer[net.UnixAddr],
		"emptyUnixListener":    engine.Empty[net.UnixListener],
		"emptyRefUnixListener": engine.EmptyRefer[net.UnixListener],
		"refOfUnixListener":    engine.ReferOf[net.UnixListener],
		"unRefUnixListener":    engine.UnRefer[net.UnixListener],
		"emptyInterface":       engine.Empty[net.Interface],
		"emptyRefInterface":    engine.EmptyRefer[net.Interface],
		"refOfInterface":       engine.ReferOf[net.Interface],
		"unRefInterface":       engine.UnRefer[net.Interface],
		"emptyMX":              engine.Empty[net.MX],
		"emptyRefMX":           engine.EmptyRefer[net.MX],
		"refOfMX":              engine.ReferOf[net.MX],
		"unRefMX":              engine.UnRefer[net.MX],
		"emptyNS":              engine.Empty[net.NS],
		"emptyRefNS":           engine.EmptyRefer[net.NS],
		"refOfNS":              engine.ReferOf[net.NS],
		"unRefNS":              engine.UnRefer[net.NS],
		"emptyResolver":        engine.Empty[net.Resolver],
		"emptyRefResolver":     engine.EmptyRefer[net.Resolver],
		"refOfResolver":        engine.ReferOf[net.Resolver],
		"unRefResolver":        engine.UnRefer[net.Resolver],
		"emptySRV":             engine.Empty[net.SRV],
		"emptyRefSRV":          engine.EmptyRefer[net.SRV],
		"refOfSRV":             engine.ReferOf[net.SRV],
		"unRefSRV":             engine.UnRefer[net.SRV],
		"emptyTCPConn":         engine.Empty[net.TCPConn],
		"emptyRefTCPConn":      engine.EmptyRefer[net.TCPConn],
		"refOfTCPConn":         engine.ReferOf[net.TCPConn],
		"unRefTCPConn":         engine.UnRefer[net.TCPConn],
		"emptyUDPAddr":         engine.Empty[net.UDPAddr],
		"emptyRefUDPAddr":      engine.EmptyRefer[net.UDPAddr],
		"refOfUDPAddr":         engine.ReferOf[net.UDPAddr],
		"unRefUDPAddr":         engine.UnRefer[net.UDPAddr],
		"emptyIPConn":          engine.Empty[net.IPConn],
		"emptyRefIPConn":       engine.EmptyRefer[net.IPConn],
		"refOfIPConn":          engine.ReferOf[net.IPConn],
		"unRefIPConn":          engine.UnRefer[net.IPConn],
		"emptyIPNet":           engine.Empty[net.IPNet],
		"emptyRefIPNet":        engine.EmptyRefer[net.IPNet],
		"refOfIPNet":           engine.ReferOf[net.IPNet],
		"unRefIPNet":           engine.UnRefer[net.IPNet],
		"emptyListenConfig":    engine.Empty[net.ListenConfig],
		"emptyRefListenConfig": engine.EmptyRefer[net.ListenConfig],
		"refOfListenConfig":    engine.ReferOf[net.ListenConfig],
		"unRefListenConfig":    engine.UnRefer[net.ListenConfig],
		"emptyUDPConn":         engine.Empty[net.UDPConn],
		"emptyRefUDPConn":      engine.EmptyRefer[net.UDPConn],
		"refOfUDPConn":         engine.ReferOf[net.UDPConn],
		"unRefUDPConn":         engine.UnRefer[net.UDPConn]}
)

func init() {
	engine.RegisterModule(NetModule{})
}

type NetModule struct{}

func (S NetModule) Identity() string {
	return "golang/net"
}
func (S NetModule) TypeDefine() []byte {
	return NetDefine
}
func (S NetModule) Exports() map[string]any {
	return NetDeclared
}
