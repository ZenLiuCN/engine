// Code generated by define_gene; DO NOT EDIT.
package rpc

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/modules/golang/io"
	_ "github.com/ZenLiuCN/engine/modules/golang/net"
	_ "github.com/ZenLiuCN/engine/modules/golang/net/http"
	"net/rpc"
)

var (
	//go:embed net_rpc.d.ts
	NetRpcDefine   []byte
	NetRpcDeclared = map[string]any{
		"registerName":       rpc.RegisterName,
		"serveConn":          rpc.ServeConn,
		"dialHTTPPath":       rpc.DialHTTPPath,
		"newClient":          rpc.NewClient,
		"newServer":          rpc.NewServer,
		"dialHTTP":           rpc.DialHTTP,
		"ErrShutdown":        rpc.ErrShutdown,
		"register":           rpc.Register,
		"serveCodec":         rpc.ServeCodec,
		"serveRequest":       rpc.ServeRequest,
		"accept":             rpc.Accept,
		"DefaultDebugPath":   rpc.DefaultDebugPath,
		"DefaultServer":      rpc.DefaultServer,
		"newClientWithCodec": rpc.NewClientWithCodec,
		"DefaultRPCPath":     rpc.DefaultRPCPath,
		"dial":               rpc.Dial,
		"handleHTTP":         rpc.HandleHTTP,

		"emptyCall":        engine.Empty[rpc.Call],
		"emptyRefCall":     engine.EmptyRefer[rpc.Call],
		"refOfCall":        engine.ReferOf[rpc.Call],
		"unRefCall":        engine.UnRefer[rpc.Call],
		"emptyRequest":     engine.Empty[rpc.Request],
		"emptyRefRequest":  engine.EmptyRefer[rpc.Request],
		"refOfRequest":     engine.ReferOf[rpc.Request],
		"unRefRequest":     engine.UnRefer[rpc.Request],
		"emptyResponse":    engine.Empty[rpc.Response],
		"emptyRefResponse": engine.EmptyRefer[rpc.Response],
		"refOfResponse":    engine.ReferOf[rpc.Response],
		"unRefResponse":    engine.UnRefer[rpc.Response]}
)

func init() {
	engine.RegisterModule(NetRpcModule{})
}

type NetRpcModule struct{}

func (S NetRpcModule) Identity() string {
	return "golang/net/rpc"
}
func (S NetRpcModule) TypeDefine() []byte {
	return NetRpcDefine
}
func (S NetRpcModule) Exports() map[string]any {
	return NetRpcDeclared
}
