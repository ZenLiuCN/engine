// Code generated by define_gene; DO NOT EDIT.
package context

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"context"
	_ "github.com/ZenLiuCN/engine/modules/golang/time"
)

var (
	//go:embed context.d.ts
	ContextDefine   []byte
	ContextDeclared = map[string]any{
		"background":        context.Background,
		"cause":             context.Cause,
		"DeadlineExceeded":  context.DeadlineExceeded,
		"withCancel":        context.WithCancel,
		"withDeadline":      context.WithDeadline,
		"withTimeoutCause":  context.WithTimeoutCause,
		"withValue":         context.WithValue,
		"afterFunc":         context.AfterFunc,
		"todo":              context.TODO,
		"withDeadlineCause": context.WithDeadlineCause,
		"Canceled":          context.Canceled,
		"withTimeout":       context.WithTimeout,
		"withCancelCause":   context.WithCancelCause,
		"withoutCancel":     context.WithoutCancel,
	}
)

func init() {
	engine.RegisterModule(ContextModule{})
}

type ContextModule struct{}

func (S ContextModule) Identity() string {
	return "golang/context"
}
func (S ContextModule) TypeDefine() []byte {
	return ContextDefine
}
func (S ContextModule) Exports() map[string]any {
	return ContextDeclared
}
