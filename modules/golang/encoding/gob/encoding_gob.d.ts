// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'golang/encoding/gob'{

	// @ts-ignore
	import * as reflect from 'golang/reflect'
	// @ts-ignore
	import * as io from 'golang/io'
	// @ts-ignore
	import type {error,Ref,int32,Struct} from 'go'
	export interface CommonType extends Struct<CommonType>{

			name:string
			id:{
			int32
			}
	}
	export interface Decoder extends Struct<Decoder>{

			decode(e:any)/*error*/
			decodeValue(v:reflect.Value)/*error*/
	}
	export interface Encoder extends Struct<Encoder>{

			encode(e:any)/*error*/
			encodeValue(value:reflect.Value)/*error*/
	}
	export interface GobDecoder{

			gobDecode(v1:Uint8Array)/*error*/
	}
	export interface GobEncoder{

			gobEncode():Uint8Array
	}
	export function newDecoder(r:io.Reader):Ref<Decoder>

	export function newEncoder(w:io.Writer):Ref<Encoder>

	export function register(value:any):void

	export function registerName(name:string,value:any):void

	export function emptyCommonType():CommonType
	export function emptyRefCommonType():Ref<CommonType>
	export function refOfCommonType(x:CommonType,v:Ref<CommonType>)
	export function unRefCommonType(v:Ref<CommonType>):CommonType
}