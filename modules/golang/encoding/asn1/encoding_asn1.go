// Code generated by define_gene; DO NOT EDIT.
package asn1

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	"encoding/asn1"
)

var (
	//go:embed encoding_asn1.d.ts
	EncodingAsn1Define   []byte
	EncodingAsn1Declared = map[string]any{
		"ClassContextSpecific": asn1.ClassContextSpecific,
		"ClassPrivate":         asn1.ClassPrivate,
		"TagBMPString":         asn1.TagBMPString,
		"TagSequence":          asn1.TagSequence,
		"TagSet":               asn1.TagSet,
		"TagUTF8String":        asn1.TagUTF8String,
		"TagGeneralString":     asn1.TagGeneralString,
		"TagInteger":           asn1.TagInteger,
		"TagOctetString":       asn1.TagOctetString,
		"TagT61String":         asn1.TagT61String,
		"ClassApplication":     asn1.ClassApplication,
		"NullRawValue":         asn1.NullRawValue,
		"TagBoolean":           asn1.TagBoolean,
		"TagGeneralizedTime":   asn1.TagGeneralizedTime,
		"TagIA5String":         asn1.TagIA5String,
		"TagOID":               asn1.TagOID,
		"NullBytes":            asn1.NullBytes,
		"TagNull":              asn1.TagNull,
		"TagNumericString":     asn1.TagNumericString,
		"ClassUniversal":       asn1.ClassUniversal,
		"TagBitString":         asn1.TagBitString,
		"TagEnum":              asn1.TagEnum,
		"TagUTCTime":           asn1.TagUTCTime,
		"marshal":              asn1.Marshal,
		"marshalWithParams":    asn1.MarshalWithParams,
		"unmarshalWithParams":  asn1.UnmarshalWithParams,
		"TagPrintableString":   asn1.TagPrintableString,
		"unmarshal":            asn1.Unmarshal,

		"emptyBitString":    engine.Empty[asn1.BitString],
		"emptyRefBitString": engine.EmptyRefer[asn1.BitString],
		"refOfBitString":    engine.ReferOf[asn1.BitString],
		"unRefBitString":    engine.UnRefer[asn1.BitString],
		"emptyRawValue":     engine.Empty[asn1.RawValue],
		"emptyRefRawValue":  engine.EmptyRefer[asn1.RawValue],
		"refOfRawValue":     engine.ReferOf[asn1.RawValue],
		"unRefRawValue":     engine.UnRefer[asn1.RawValue]}
)

func init() {
	engine.RegisterModule(EncodingAsn1Module{})
}

type EncodingAsn1Module struct{}

func (S EncodingAsn1Module) Identity() string {
	return "golang/encoding/asn1"
}
func (S EncodingAsn1Module) TypeDefine() []byte {
	return EncodingAsn1Define
}
func (S EncodingAsn1Module) Exports() map[string]any {
	return EncodingAsn1Declared
}
