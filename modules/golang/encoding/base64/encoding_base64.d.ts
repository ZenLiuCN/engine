// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'golang/encoding/base64'{

	// @ts-ignore
	import * as io from 'golang/io'
	// @ts-ignore
	import type {rune,Ref,int,error,int64,GoError,Struct} from 'go'
	export interface CorruptInputError extends int64,GoError{

	error():string
	}
	export interface Encoding extends Struct<Encoding>{

			withPadding(padding:rune):Ref<Encoding>
			strict():Ref<Encoding>
			encode(dst:Uint8Array,src:Uint8Array):void
			encodeToString(src:Uint8Array):string
			encodedLen(n:int):int
			decodeString(s:string):Uint8Array
			decode(dst:Uint8Array,src:Uint8Array):int
			decodedLen(n:int):int
	}
	export function newDecoder(enc:Ref<Encoding>,r:io.Reader):io.Reader

	export function newEncoder(enc:Ref<Encoding>,w:io.Writer):io.WriteCloser

	export function newEncoding(encoder:string):Ref<Encoding>

	//-1
	export const NoPadding:rune
	export const RawStdEncoding:Ref<Encoding>
	export const RawURLEncoding:Ref<Encoding>
	export const StdEncoding:Ref<Encoding>
	//61
	export const StdPadding:rune
	export const URLEncoding:Ref<Encoding>
}