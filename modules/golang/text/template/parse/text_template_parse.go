// Code generated by define_gene; DO NOT EDIT.
package parse

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/modules/golang/fmt"
	"text/template/parse"
)

var (
	//go:embed text_template_parse.d.ts
	TextTemplateParseDefine   []byte
	TextTemplateParseDeclared = map[string]any{
		"NodeCommand":    parse.NodeCommand,
		"NodeContinue":   parse.NodeContinue,
		"NodeIf":         parse.NodeIf,
		"NodeVariable":   parse.NodeVariable,
		"NodeAction":     parse.NodeAction,
		"NodeTemplate":   parse.NodeTemplate,
		"SkipFuncCheck":  parse.SkipFuncCheck,
		"NodeDot":        parse.NodeDot,
		"NodeField":      parse.NodeField,
		"NodeString":     parse.NodeString,
		"New":            parse.New,
		"newIdentifier":  parse.NewIdentifier,
		"NodeComment":    parse.NodeComment,
		"NodeIdentifier": parse.NodeIdentifier,
		"NodeList":       parse.NodeList,
		"ParseComments":  parse.ParseComments,
		"isEmptyTree":    parse.IsEmptyTree,
		"NodeChain":      parse.NodeChain,
		"NodeNumber":     parse.NodeNumber,
		"NodePipe":       parse.NodePipe,
		"NodeWith":       parse.NodeWith,
		"NodeNil":        parse.NodeNil,
		"NodeBool":       parse.NodeBool,
		"NodeBreak":      parse.NodeBreak,
		"NodeRange":      parse.NodeRange,
		"NodeText":       parse.NodeText,
		"parse":          parse.Parse,

		"emptyPipeNode":          engine.Empty[parse.PipeNode],
		"emptyRefPipeNode":       engine.EmptyRefer[parse.PipeNode],
		"refOfPipeNode":          engine.ReferOf[parse.PipeNode],
		"unRefPipeNode":          engine.UnRefer[parse.PipeNode],
		"emptyBoolNode":          engine.Empty[parse.BoolNode],
		"emptyRefBoolNode":       engine.EmptyRefer[parse.BoolNode],
		"refOfBoolNode":          engine.ReferOf[parse.BoolNode],
		"unRefBoolNode":          engine.UnRefer[parse.BoolNode],
		"emptyIdentifierNode":    engine.Empty[parse.IdentifierNode],
		"emptyRefIdentifierNode": engine.EmptyRefer[parse.IdentifierNode],
		"refOfIdentifierNode":    engine.ReferOf[parse.IdentifierNode],
		"unRefIdentifierNode":    engine.UnRefer[parse.IdentifierNode],
		"emptyListNode":          engine.Empty[parse.ListNode],
		"emptyRefListNode":       engine.EmptyRefer[parse.ListNode],
		"refOfListNode":          engine.ReferOf[parse.ListNode],
		"unRefListNode":          engine.UnRefer[parse.ListNode],
		"emptyNumberNode":        engine.Empty[parse.NumberNode],
		"emptyRefNumberNode":     engine.EmptyRefer[parse.NumberNode],
		"refOfNumberNode":        engine.ReferOf[parse.NumberNode],
		"unRefNumberNode":        engine.UnRefer[parse.NumberNode],
		"emptyNilNode":           engine.Empty[parse.NilNode],
		"emptyRefNilNode":        engine.EmptyRefer[parse.NilNode],
		"refOfNilNode":           engine.ReferOf[parse.NilNode],
		"unRefNilNode":           engine.UnRefer[parse.NilNode],
		"emptyRangeNode":         engine.Empty[parse.RangeNode],
		"emptyRefRangeNode":      engine.EmptyRefer[parse.RangeNode],
		"refOfRangeNode":         engine.ReferOf[parse.RangeNode],
		"unRefRangeNode":         engine.UnRefer[parse.RangeNode],
		"emptyTemplateNode":      engine.Empty[parse.TemplateNode],
		"emptyRefTemplateNode":   engine.EmptyRefer[parse.TemplateNode],
		"refOfTemplateNode":      engine.ReferOf[parse.TemplateNode],
		"unRefTemplateNode":      engine.UnRefer[parse.TemplateNode],
		"emptyTree":              engine.Empty[parse.Tree],
		"emptyRefTree":           engine.EmptyRefer[parse.Tree],
		"refOfTree":              engine.ReferOf[parse.Tree],
		"unRefTree":              engine.UnRefer[parse.Tree],
		"emptyActionNode":        engine.Empty[parse.ActionNode],
		"emptyRefActionNode":     engine.EmptyRefer[parse.ActionNode],
		"refOfActionNode":        engine.ReferOf[parse.ActionNode],
		"unRefActionNode":        engine.UnRefer[parse.ActionNode],
		"emptyCommentNode":       engine.Empty[parse.CommentNode],
		"emptyRefCommentNode":    engine.EmptyRefer[parse.CommentNode],
		"refOfCommentNode":       engine.ReferOf[parse.CommentNode],
		"unRefCommentNode":       engine.UnRefer[parse.CommentNode],
		"emptyFieldNode":         engine.Empty[parse.FieldNode],
		"emptyRefFieldNode":      engine.EmptyRefer[parse.FieldNode],
		"refOfFieldNode":         engine.ReferOf[parse.FieldNode],
		"unRefFieldNode":         engine.UnRefer[parse.FieldNode],
		"emptyIfNode":            engine.Empty[parse.IfNode],
		"emptyRefIfNode":         engine.EmptyRefer[parse.IfNode],
		"refOfIfNode":            engine.ReferOf[parse.IfNode],
		"unRefIfNode":            engine.UnRefer[parse.IfNode],
		"emptyBreakNode":         engine.Empty[parse.BreakNode],
		"emptyRefBreakNode":      engine.EmptyRefer[parse.BreakNode],
		"refOfBreakNode":         engine.ReferOf[parse.BreakNode],
		"unRefBreakNode":         engine.UnRefer[parse.BreakNode],
		"emptyChainNode":         engine.Empty[parse.ChainNode],
		"emptyRefChainNode":      engine.EmptyRefer[parse.ChainNode],
		"refOfChainNode":         engine.ReferOf[parse.ChainNode],
		"unRefChainNode":         engine.UnRefer[parse.ChainNode],
		"emptyDotNode":           engine.Empty[parse.DotNode],
		"emptyRefDotNode":        engine.EmptyRefer[parse.DotNode],
		"refOfDotNode":           engine.ReferOf[parse.DotNode],
		"unRefDotNode":           engine.UnRefer[parse.DotNode],
		"emptyTextNode":          engine.Empty[parse.TextNode],
		"emptyRefTextNode":       engine.EmptyRefer[parse.TextNode],
		"refOfTextNode":          engine.ReferOf[parse.TextNode],
		"unRefTextNode":          engine.UnRefer[parse.TextNode],
		"emptyVariableNode":      engine.Empty[parse.VariableNode],
		"emptyRefVariableNode":   engine.EmptyRefer[parse.VariableNode],
		"refOfVariableNode":      engine.ReferOf[parse.VariableNode],
		"unRefVariableNode":      engine.UnRefer[parse.VariableNode],
		"emptyWithNode":          engine.Empty[parse.WithNode],
		"emptyRefWithNode":       engine.EmptyRefer[parse.WithNode],
		"refOfWithNode":          engine.ReferOf[parse.WithNode],
		"unRefWithNode":          engine.UnRefer[parse.WithNode],
		"emptyBranchNode":        engine.Empty[parse.BranchNode],
		"emptyRefBranchNode":     engine.EmptyRefer[parse.BranchNode],
		"refOfBranchNode":        engine.ReferOf[parse.BranchNode],
		"unRefBranchNode":        engine.UnRefer[parse.BranchNode],
		"emptyCommandNode":       engine.Empty[parse.CommandNode],
		"emptyRefCommandNode":    engine.EmptyRefer[parse.CommandNode],
		"refOfCommandNode":       engine.ReferOf[parse.CommandNode],
		"unRefCommandNode":       engine.UnRefer[parse.CommandNode],
		"emptyContinueNode":      engine.Empty[parse.ContinueNode],
		"emptyRefContinueNode":   engine.EmptyRefer[parse.ContinueNode],
		"refOfContinueNode":      engine.ReferOf[parse.ContinueNode],
		"unRefContinueNode":      engine.UnRefer[parse.ContinueNode],
		"emptyStringNode":        engine.Empty[parse.StringNode],
		"emptyRefStringNode":     engine.EmptyRefer[parse.StringNode],
		"refOfStringNode":        engine.ReferOf[parse.StringNode],
		"unRefStringNode":        engine.UnRefer[parse.StringNode]}
)

func init() {
	engine.RegisterModule(TextTemplateParseModule{})
}

type TextTemplateParseModule struct{}

func (S TextTemplateParseModule) Identity() string {
	return "golang/text/template/parse"
}
func (S TextTemplateParseModule) TypeDefine() []byte {
	return TextTemplateParseDefine
}
func (S TextTemplateParseModule) Exports() map[string]any {
	return TextTemplateParseDeclared
}
