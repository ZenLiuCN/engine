// Code generated by define_gene; DO NOT EDIT.
package bbolt

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/modules/golang/fmt"
	_ "github.com/ZenLiuCN/engine/modules/golang/io"
	_ "github.com/ZenLiuCN/engine/modules/golang/io/fs"
	_ "github.com/ZenLiuCN/engine/modules/golang/os"
	_ "github.com/ZenLiuCN/engine/modules/golang/time"
	"go.etcd.io/bbolt"
)

var (
	//go:embed go_etcd_io_bbolt.d.ts
	GoEtcdIoBboltDefine   []byte
	GoEtcdIoBboltDeclared = map[string]any{
		"FreelistMapType":       bbolt.FreelistMapType,
		"DefaultOptions":        bbolt.DefaultOptions,
		"ErrBucketExists":       bbolt.ErrBucketExists,
		"MaxKeySize":            bbolt.MaxKeySize,
		"ErrChecksum":           bbolt.ErrChecksum,
		"FreelistArrayType":     bbolt.FreelistArrayType,
		"ErrInvalidMapping":     bbolt.ErrInvalidMapping,
		"ErrTxClosed":           bbolt.ErrTxClosed,
		"IgnoreNoSync":          bbolt.IgnoreNoSync,
		"open":                  bbolt.Open,
		"ErrDatabaseOpen":       bbolt.ErrDatabaseOpen,
		"ErrInvalid":            bbolt.ErrInvalid,
		"ErrDatabaseReadOnly":   bbolt.ErrDatabaseReadOnly,
		"ErrKeyRequired":        bbolt.ErrKeyRequired,
		"ErrVersionMismatch":    bbolt.ErrVersionMismatch,
		"hexKVStringer":         bbolt.HexKVStringer,
		"DefaultMaxBatchSize":   bbolt.DefaultMaxBatchSize,
		"ErrDatabaseNotOpen":    bbolt.ErrDatabaseNotOpen,
		"DefaultFillPercent":    bbolt.DefaultFillPercent,
		"withKVStringer":        bbolt.WithKVStringer,
		"ErrFreePagesNotLoaded": bbolt.ErrFreePagesNotLoaded,
		"ErrTimeout":            bbolt.ErrTimeout,
		"ErrTxNotWritable":      bbolt.ErrTxNotWritable,
		"DefaultMaxBatchDelay":  bbolt.DefaultMaxBatchDelay,
		"ErrBucketNotFound":     bbolt.ErrBucketNotFound,
		"ErrBucketNameRequired": bbolt.ErrBucketNameRequired,
		"ErrIncompatibleValue":  bbolt.ErrIncompatibleValue,
		"ErrKeyTooLarge":        bbolt.ErrKeyTooLarge,
		"ErrValueTooLarge":      bbolt.ErrValueTooLarge,
		"MaxValueSize":          bbolt.MaxValueSize,
		"compact":               bbolt.Compact,
		"DefaultAllocSize":      bbolt.DefaultAllocSize,

		"emptyBucket":         engine.Empty[bbolt.Bucket],
		"emptyRefBucket":      engine.EmptyRefer[bbolt.Bucket],
		"refOfBucket":         engine.ReferOf[bbolt.Bucket],
		"unRefBucket":         engine.UnRefer[bbolt.Bucket],
		"emptyBucketStats":    engine.Empty[bbolt.BucketStats],
		"emptyRefBucketStats": engine.EmptyRefer[bbolt.BucketStats],
		"refOfBucketStats":    engine.ReferOf[bbolt.BucketStats],
		"unRefBucketStats":    engine.UnRefer[bbolt.BucketStats],
		"emptyDB":             engine.Empty[bbolt.DB],
		"emptyRefDB":          engine.EmptyRefer[bbolt.DB],
		"refOfDB":             engine.ReferOf[bbolt.DB],
		"unRefDB":             engine.UnRefer[bbolt.DB],
		"emptyInfo":           engine.Empty[bbolt.Info],
		"emptyRefInfo":        engine.EmptyRefer[bbolt.Info],
		"refOfInfo":           engine.ReferOf[bbolt.Info],
		"unRefInfo":           engine.UnRefer[bbolt.Info],
		"emptyOptions":        engine.Empty[bbolt.Options],
		"emptyRefOptions":     engine.EmptyRefer[bbolt.Options],
		"refOfOptions":        engine.ReferOf[bbolt.Options],
		"unRefOptions":        engine.UnRefer[bbolt.Options],
		"emptyStats":          engine.Empty[bbolt.Stats],
		"emptyRefStats":       engine.EmptyRefer[bbolt.Stats],
		"refOfStats":          engine.ReferOf[bbolt.Stats],
		"unRefStats":          engine.UnRefer[bbolt.Stats],
		"emptyCursor":         engine.Empty[bbolt.Cursor],
		"emptyRefCursor":      engine.EmptyRefer[bbolt.Cursor],
		"refOfCursor":         engine.ReferOf[bbolt.Cursor],
		"unRefCursor":         engine.UnRefer[bbolt.Cursor],
		"emptyPageInfo":       engine.Empty[bbolt.PageInfo],
		"emptyRefPageInfo":    engine.EmptyRefer[bbolt.PageInfo],
		"refOfPageInfo":       engine.ReferOf[bbolt.PageInfo],
		"unRefPageInfo":       engine.UnRefer[bbolt.PageInfo],
		"emptyTx":             engine.Empty[bbolt.Tx],
		"emptyRefTx":          engine.EmptyRefer[bbolt.Tx],
		"refOfTx":             engine.ReferOf[bbolt.Tx],
		"unRefTx":             engine.UnRefer[bbolt.Tx],
		"emptyTxStats":        engine.Empty[bbolt.TxStats],
		"emptyRefTxStats":     engine.EmptyRefer[bbolt.TxStats],
		"refOfTxStats":        engine.ReferOf[bbolt.TxStats],
		"unRefTxStats":        engine.UnRefer[bbolt.TxStats]}
)

func init() {
	engine.RegisterModule(GoEtcdIoBboltModule{})
}

type GoEtcdIoBboltModule struct{}

func (S GoEtcdIoBboltModule) Identity() string {
	return "go.etcd.io/bbolt"
}
func (S GoEtcdIoBboltModule) TypeDefine() []byte {
	return GoEtcdIoBboltDefine
}
func (S GoEtcdIoBboltModule) Exports() map[string]any {
	return GoEtcdIoBboltDeclared
}
