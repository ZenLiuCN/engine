// Code generated by define_gene; DO NOT EDIT.
package larkcore

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/modules/golang/context"
	_ "github.com/ZenLiuCN/engine/modules/golang/encoding/json"
	_ "github.com/ZenLiuCN/engine/modules/golang/fmt"
	_ "github.com/ZenLiuCN/engine/modules/golang/io"
	_ "github.com/ZenLiuCN/engine/modules/golang/net/http"
	_ "github.com/ZenLiuCN/engine/modules/golang/time"
	"github.com/larksuite/base-sdk-go/v3/core"
)

var (
	//go:embed github_com_larksuite_base-sdk-go_v3_core.d.ts
	GithubComLarksuiteBaseSdkGo3CoreDefine   []byte
	GithubComLarksuiteBaseSdkGo3CoreDeclared = map[string]any{
		"prettify":                larkcore.Prettify,
		"withHeaders":             larkcore.WithHeaders,
		"LogLevelInfo":            larkcore.LogLevelInfo,
		"LogLevelWarn":            larkcore.LogLevelWarn,
		"newEventLogger":          larkcore.NewEventLogger,
		"newFormdata":             larkcore.NewFormdata,
		"newHttpClient":           larkcore.NewHttpClient,
		"newSerialization":        larkcore.NewSerialization,
		"request":                 larkcore.Request,
		"withFileDownload":        larkcore.WithFileDownload,
		"fileNameByHeader":        larkcore.FileNameByHeader,
		"HttpHeaderKeyLogId":      larkcore.HttpHeaderKeyLogId,
		"LogLevelDebug":           larkcore.LogLevelDebug,
		"withFileUpload":          larkcore.WithFileUpload,
		"file2Bytes":              larkcore.File2Bytes,
		"HttpHeaderKeyRequestId":  larkcore.HttpHeaderKeyRequestId,
		"LogLevelError":           larkcore.LogLevelError,
		"newLogger":               larkcore.NewLogger,
		"withRequestId":           larkcore.WithRequestId,
		"AccessTokenTypeNone":     larkcore.AccessTokenTypeNone,
		"AccessTokenTypePersonal": larkcore.AccessTokenTypePersonal,

		"emptyApiReq":                          engine.Empty[larkcore.ApiReq],
		"emptyRefApiReq":                       engine.EmptyRefer[larkcore.ApiReq],
		"refOfApiReq":                          engine.ReferOf[larkcore.ApiReq],
		"unRefApiReq":                          engine.UnRefer[larkcore.ApiReq],
		"emptyCodeErrorPermissionViolation":    engine.Empty[larkcore.CodeErrorPermissionViolation],
		"emptyRefCodeErrorPermissionViolation": engine.EmptyRefer[larkcore.CodeErrorPermissionViolation],
		"refOfCodeErrorPermissionViolation":    engine.ReferOf[larkcore.CodeErrorPermissionViolation],
		"unRefCodeErrorPermissionViolation":    engine.UnRefer[larkcore.CodeErrorPermissionViolation],
		"emptyConfig":                          engine.Empty[larkcore.Config],
		"emptyRefConfig":                       engine.EmptyRefer[larkcore.Config],
		"refOfConfig":                          engine.ReferOf[larkcore.Config],
		"unRefConfig":                          engine.UnRefer[larkcore.Config],
		"emptyRequestOption":                   engine.Empty[larkcore.RequestOption],
		"emptyRefRequestOption":                engine.EmptyRefer[larkcore.RequestOption],
		"refOfRequestOption":                   engine.ReferOf[larkcore.RequestOption],
		"unRefRequestOption":                   engine.UnRefer[larkcore.RequestOption],
		"emptyCodeErrorDetail":                 engine.Empty[larkcore.CodeErrorDetail],
		"emptyRefCodeErrorDetail":              engine.EmptyRefer[larkcore.CodeErrorDetail],
		"refOfCodeErrorDetail":                 engine.ReferOf[larkcore.CodeErrorDetail],
		"unRefCodeErrorDetail":                 engine.UnRefer[larkcore.CodeErrorDetail],
		"emptyCodeErrorFieldViolation":         engine.Empty[larkcore.CodeErrorFieldViolation],
		"emptyRefCodeErrorFieldViolation":      engine.EmptyRefer[larkcore.CodeErrorFieldViolation],
		"refOfCodeErrorFieldViolation":         engine.ReferOf[larkcore.CodeErrorFieldViolation],
		"unRefCodeErrorFieldViolation":         engine.UnRefer[larkcore.CodeErrorFieldViolation],
		"emptyApiResp":                         engine.Empty[larkcore.ApiResp],
		"emptyRefApiResp":                      engine.EmptyRefer[larkcore.ApiResp],
		"refOfApiResp":                         engine.ReferOf[larkcore.ApiResp],
		"unRefApiResp":                         engine.UnRefer[larkcore.ApiResp]}
)

func init() {
	engine.RegisterModule(GithubComLarksuiteBaseSdkGo3CoreModule{})
}

type GithubComLarksuiteBaseSdkGo3CoreModule struct{}

func (S GithubComLarksuiteBaseSdkGo3CoreModule) Identity() string {
	return "github.com/larksuite/base-sdk-go/v3/core"
}
func (S GithubComLarksuiteBaseSdkGo3CoreModule) TypeDefine() []byte {
	return GithubComLarksuiteBaseSdkGo3CoreDefine
}
func (S GithubComLarksuiteBaseSdkGo3CoreModule) Exports() map[string]any {
	return GithubComLarksuiteBaseSdkGo3CoreDeclared
}
