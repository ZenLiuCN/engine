// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'github.com/larksuite/base-sdk-go/v3/service/drive/v1'{

	// @ts-ignore
	import * as context from 'golang/context'
	// @ts-ignore
	import * as larkcore from 'github.com/larksuite/base-sdk-go/v3/core'
	// @ts-ignore
	import * as io from 'golang/io'
	// @ts-ignore
	import type {bool,error,Alias,Nothing,Ref,Struct,int} from 'go'
	export interface ApplyMemberRequest extends Struct<ApplyMemberRequest>{

			perm:Ref<string>
			remark:Ref<string>
	}
	export interface ApplyMemberRequestBuilder extends Struct<ApplyMemberRequestBuilder>{

			perm(perm:string):Ref<ApplyMemberRequestBuilder>
			remark(remark:string):Ref<ApplyMemberRequestBuilder>
			build():Ref<ApplyMemberRequest>
	}
	export interface BaseMember extends Struct<BaseMember>{

			memberType:Ref<string>
			memberId:Ref<string>
			perm:Ref<string>
	}
	export interface BaseMemberBuilder extends Struct<BaseMemberBuilder>{

			memberType(memberType:string):Ref<BaseMemberBuilder>
			memberId(memberId:string):Ref<BaseMemberBuilder>
			perm(perm:string):Ref<BaseMemberBuilder>
			build():Ref<BaseMember>
	}
	export interface BitableTableFieldAction extends Struct<BitableTableFieldAction>{

			action:Ref<string>
			fieldId:Ref<string>
			beforeValue:Ref<BitableTableFieldActionValue>
			afterValue:Ref<BitableTableFieldActionValue>
	}
	export interface BitableTableFieldActionBuilder extends Struct<BitableTableFieldActionBuilder>{

			action(action:string):Ref<BitableTableFieldActionBuilder>
			fieldId(fieldId:string):Ref<BitableTableFieldActionBuilder>
			beforeValue(beforeValue:Ref<BitableTableFieldActionValue>):Ref<BitableTableFieldActionBuilder>
			afterValue(afterValue:Ref<BitableTableFieldActionValue>):Ref<BitableTableFieldActionBuilder>
			build():Ref<BitableTableFieldAction>
	}
	export interface BitableTableFieldActionValue extends Struct<BitableTableFieldActionValue>{

			id:Ref<string>
			name:Ref<string>
			type:Ref<int>
			description:Ref<string>
			property:Ref<BitableTableFieldActionValueProperty>
	}
	export interface BitableTableFieldActionValueBuilder extends Struct<BitableTableFieldActionValueBuilder>{

			id(id:string):Ref<BitableTableFieldActionValueBuilder>
			name(name:string):Ref<BitableTableFieldActionValueBuilder>
			type(type_:int):Ref<BitableTableFieldActionValueBuilder>
			description(description:string):Ref<BitableTableFieldActionValueBuilder>
			property(property:Ref<BitableTableFieldActionValueProperty>):Ref<BitableTableFieldActionValueBuilder>
			build():Ref<BitableTableFieldActionValue>
	}
	export interface BitableTableFieldActionValueProperty extends Struct<BitableTableFieldActionValueProperty>{

			formatter:Ref<string>
			dateFormatter:Ref<string>
			autoFill:Ref<bool>
			multiple:Ref<bool>
			tableId:Ref<string>
			tableName:Ref<string>
			backFieldName:Ref<string>
			inputType:Ref<string>
			backFieldId:Ref<string>
			autoSerial:Ref<BitableTableFieldActionValuePropertyAutoSerial>
			options:Ref<BitableTableFieldActionValuePropertyOption>[]
			formulaExpression:Ref<string>
	}
	export interface BitableTableFieldActionValuePropertyAutoSerial extends Struct<BitableTableFieldActionValuePropertyAutoSerial>{

			type:Ref<string>
			options:Ref<BitableTableFieldActionValuePropertyAutoSerialOptions>[]
	}
	export interface BitableTableFieldActionValuePropertyAutoSerialBuilder extends Struct<BitableTableFieldActionValuePropertyAutoSerialBuilder>{

			type(type_:string):Ref<BitableTableFieldActionValuePropertyAutoSerialBuilder>
			options(options:Ref<BitableTableFieldActionValuePropertyAutoSerialOptions>[]):Ref<BitableTableFieldActionValuePropertyAutoSerialBuilder>
			build():Ref<BitableTableFieldActionValuePropertyAutoSerial>
	}
	export interface BitableTableFieldActionValuePropertyAutoSerialOptions extends Struct<BitableTableFieldActionValuePropertyAutoSerialOptions>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface BitableTableFieldActionValuePropertyAutoSerialOptionsBuilder extends Struct<BitableTableFieldActionValuePropertyAutoSerialOptionsBuilder>{

			type(type_:string):Ref<BitableTableFieldActionValuePropertyAutoSerialOptionsBuilder>
			value(value:string):Ref<BitableTableFieldActionValuePropertyAutoSerialOptionsBuilder>
			build():Ref<BitableTableFieldActionValuePropertyAutoSerialOptions>
	}
	export interface BitableTableFieldActionValuePropertyBuilder extends Struct<BitableTableFieldActionValuePropertyBuilder>{

			formatter(formatter:string):Ref<BitableTableFieldActionValuePropertyBuilder>
			dateFormatter(dateFormatter:string):Ref<BitableTableFieldActionValuePropertyBuilder>
			autoFill(autoFill:bool):Ref<BitableTableFieldActionValuePropertyBuilder>
			multiple(multiple:bool):Ref<BitableTableFieldActionValuePropertyBuilder>
			tableId(tableId:string):Ref<BitableTableFieldActionValuePropertyBuilder>
			tableName(tableName:string):Ref<BitableTableFieldActionValuePropertyBuilder>
			backFieldName(backFieldName:string):Ref<BitableTableFieldActionValuePropertyBuilder>
			inputType(inputType:string):Ref<BitableTableFieldActionValuePropertyBuilder>
			backFieldId(backFieldId:string):Ref<BitableTableFieldActionValuePropertyBuilder>
			autoSerial(autoSerial:Ref<BitableTableFieldActionValuePropertyAutoSerial>):Ref<BitableTableFieldActionValuePropertyBuilder>
			options(options:Ref<BitableTableFieldActionValuePropertyOption>[]):Ref<BitableTableFieldActionValuePropertyBuilder>
			formulaExpression(formulaExpression:string):Ref<BitableTableFieldActionValuePropertyBuilder>
			build():Ref<BitableTableFieldActionValueProperty>
	}
	export interface BitableTableFieldActionValuePropertyOption extends Struct<BitableTableFieldActionValuePropertyOption>{

			name:Ref<string>
			id:Ref<string>
			color:Ref<int>
	}
	export interface BitableTableFieldActionValuePropertyOptionBuilder extends Struct<BitableTableFieldActionValuePropertyOptionBuilder>{

			name(name:string):Ref<BitableTableFieldActionValuePropertyOptionBuilder>
			id(id:string):Ref<BitableTableFieldActionValuePropertyOptionBuilder>
			color(color:int):Ref<BitableTableFieldActionValuePropertyOptionBuilder>
			build():Ref<BitableTableFieldActionValuePropertyOption>
	}
	export interface BitableTableRecordAction extends Struct<BitableTableRecordAction>{

			recordId:Ref<string>
			action:Ref<string>
			beforeValue:Ref<BitableTableRecordActionField>[]
			afterValue:Ref<BitableTableRecordActionField>[]
	}
	export interface BitableTableRecordActionBuilder extends Struct<BitableTableRecordActionBuilder>{

			recordId(recordId:string):Ref<BitableTableRecordActionBuilder>
			action(action:string):Ref<BitableTableRecordActionBuilder>
			beforeValue(beforeValue:Ref<BitableTableRecordActionField>[]):Ref<BitableTableRecordActionBuilder>
			afterValue(afterValue:Ref<BitableTableRecordActionField>[]):Ref<BitableTableRecordActionBuilder>
			build():Ref<BitableTableRecordAction>
	}
	export interface BitableTableRecordActionField extends Struct<BitableTableRecordActionField>{

			fieldId:Ref<string>
			fieldValue:Ref<string>
			fieldIdentityValue:Ref<BitableTableRecordActionFieldIdentity>
	}
	export interface BitableTableRecordActionFieldBuilder extends Struct<BitableTableRecordActionFieldBuilder>{

			fieldId(fieldId:string):Ref<BitableTableRecordActionFieldBuilder>
			fieldValue(fieldValue:string):Ref<BitableTableRecordActionFieldBuilder>
			fieldIdentityValue(fieldIdentityValue:Ref<BitableTableRecordActionFieldIdentity>):Ref<BitableTableRecordActionFieldBuilder>
			build():Ref<BitableTableRecordActionField>
	}
	export interface BitableTableRecordActionFieldIdentity extends Struct<BitableTableRecordActionFieldIdentity>{

			users:Ref<BitableTableRecordActionFieldIdentityUser>[]
	}
	export interface BitableTableRecordActionFieldIdentityBuilder extends Struct<BitableTableRecordActionFieldIdentityBuilder>{

			users(users:Ref<BitableTableRecordActionFieldIdentityUser>[]):Ref<BitableTableRecordActionFieldIdentityBuilder>
			build():Ref<BitableTableRecordActionFieldIdentity>
	}
	export interface BitableTableRecordActionFieldIdentityUser extends Struct<BitableTableRecordActionFieldIdentityUser>{

			userId:Ref<UserId>
			name:Ref<string>
			enName:Ref<string>
			avatarUrl:Ref<string>
	}
	export interface BitableTableRecordActionFieldIdentityUserBuilder extends Struct<BitableTableRecordActionFieldIdentityUserBuilder>{

			userId(userId:Ref<UserId>):Ref<BitableTableRecordActionFieldIdentityUserBuilder>
			name(name:string):Ref<BitableTableRecordActionFieldIdentityUserBuilder>
			enName(enName:string):Ref<BitableTableRecordActionFieldIdentityUserBuilder>
			avatarUrl(avatarUrl:string):Ref<BitableTableRecordActionFieldIdentityUserBuilder>
			build():Ref<BitableTableRecordActionFieldIdentityUser>
	}
	export interface Collaborator extends Struct<Collaborator>{

			memberType:Ref<string>
			memberOpenId:Ref<string>
			memberUserId:Ref<string>
			perm:Ref<string>
	}
	export interface CollaboratorBuilder extends Struct<CollaboratorBuilder>{

			memberType(memberType:string):Ref<CollaboratorBuilder>
			memberOpenId(memberOpenId:string):Ref<CollaboratorBuilder>
			memberUserId(memberUserId:string):Ref<CollaboratorBuilder>
			perm(perm:string):Ref<CollaboratorBuilder>
			build():Ref<Collaborator>
	}
	//"anyone_can_edit"
	export const CommentEntityAnyoneCanEdit:string
	//"anyone_can_view"
	export const CommentEntityAnyoneCanView:string
	export interface DepartmentId extends Struct<DepartmentId>{

			departmentId:Ref<string>
			openDepartmentId:Ref<string>
	}
	export interface DepartmentIdBuilder extends Struct<DepartmentIdBuilder>{

			departmentId(departmentId:string):Ref<DepartmentIdBuilder>
			openDepartmentId(openDepartmentId:string):Ref<DepartmentIdBuilder>
			build():Ref<DepartmentId>
	}
	//"ASC"
	export const DirectionASC:string
	//"DESC"
	export const DirectionDESC:string
	export interface DocsLink extends Struct<DocsLink>{

			url:Ref<string>
	}
	export interface DocsLinkBuilder extends Struct<DocsLinkBuilder>{

			url(url:string):Ref<DocsLinkBuilder>
			build():Ref<DocsLink>
	}
	export interface DownloadMediaReq extends Struct<DownloadMediaReq>{

	}
	export interface DownloadMediaReqBuilder extends Struct<DownloadMediaReqBuilder>{

			fileToken(fileToken:string):Ref<DownloadMediaReqBuilder>
			extra(extra:string):Ref<DownloadMediaReqBuilder>
			build():Ref<DownloadMediaReq>
	}
	export interface DownloadMediaResp extends Struct<DownloadMediaResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			file:io.Reader
			fileName:string
			success():bool
			writeFile(fileName:string)/*error*/
	}
	export interface DriveService extends Struct<DriveService>{

			media:Ref<{
			
				download(ctx:context.Context,req:Ref<DownloadMediaReq>,...options:larkcore.RequestOptionFunc[]):Ref<DownloadMediaResp>
				uploadAll(ctx:context.Context,req:Ref<UploadAllMediaReq>,...options:larkcore.RequestOptionFunc[]):Ref<UploadAllMediaResp>
			}>
	}
	export interface ExportTask extends Struct<ExportTask>{

			fileExtension:Ref<string>
			token:Ref<string>
			type:Ref<string>
			fileName:Ref<string>
			subId:Ref<string>
			fileToken:Ref<string>
			fileSize:Ref<int>
			jobErrorMsg:Ref<string>
			jobStatus:Ref<int>
	}
	export interface ExportTaskBuilder extends Struct<ExportTaskBuilder>{

			fileExtension(fileExtension:string):Ref<ExportTaskBuilder>
			token(token:string):Ref<ExportTaskBuilder>
			type(type_:string):Ref<ExportTaskBuilder>
			fileName(fileName:string):Ref<ExportTaskBuilder>
			subId(subId:string):Ref<ExportTaskBuilder>
			fileToken(fileToken:string):Ref<ExportTaskBuilder>
			fileSize(fileSize:int):Ref<ExportTaskBuilder>
			jobErrorMsg(jobErrorMsg:string):Ref<ExportTaskBuilder>
			jobStatus(jobStatus:int):Ref<ExportTaskBuilder>
			build():Ref<ExportTask>
	}
	export interface Favorite extends Alias<Nothing>{

	}
	export interface File extends Struct<File>{

			token:Ref<string>
			name:Ref<string>
			type:Ref<string>
			parentToken:Ref<string>
			url:Ref<string>
			shortcutInfo:Ref<ShortcutInfo>
			createdTime:Ref<string>
			modifiedTime:Ref<string>
			ownerId:Ref<string>
	}
	export interface FileBuilder extends Struct<FileBuilder>{

			token(token:string):Ref<FileBuilder>
			name(name:string):Ref<FileBuilder>
			type(type_:string):Ref<FileBuilder>
			parentToken(parentToken:string):Ref<FileBuilder>
			url(url:string):Ref<FileBuilder>
			shortcutInfo(shortcutInfo:Ref<ShortcutInfo>):Ref<FileBuilder>
			createdTime(createdTime:string):Ref<FileBuilder>
			modifiedTime(modifiedTime:string):Ref<FileBuilder>
			ownerId(ownerId:string):Ref<FileBuilder>
			build():Ref<File>
	}
	export interface FileComment extends Struct<FileComment>{

			commentId:Ref<string>
			userId:Ref<string>
			createTime:Ref<int>
			updateTime:Ref<int>
			isSolved:Ref<bool>
			solvedTime:Ref<int>
			solverUserId:Ref<string>
			hasMore:Ref<bool>
			pageToken:Ref<string>
			isWhole:Ref<bool>
			quote:Ref<string>
			replyList:Ref<ReplyList>
	}
	export interface FileCommentBuilder extends Struct<FileCommentBuilder>{

			commentId(commentId:string):Ref<FileCommentBuilder>
			userId(userId:string):Ref<FileCommentBuilder>
			createTime(createTime:int):Ref<FileCommentBuilder>
			updateTime(updateTime:int):Ref<FileCommentBuilder>
			isSolved(isSolved:bool):Ref<FileCommentBuilder>
			solvedTime(solvedTime:int):Ref<FileCommentBuilder>
			solverUserId(solverUserId:string):Ref<FileCommentBuilder>
			hasMore(hasMore:bool):Ref<FileCommentBuilder>
			pageToken(pageToken:string):Ref<FileCommentBuilder>
			isWhole(isWhole:bool):Ref<FileCommentBuilder>
			quote(quote:string):Ref<FileCommentBuilder>
			replyList(replyList:Ref<ReplyList>):Ref<FileCommentBuilder>
			build():Ref<FileComment>
	}
	export interface FileCommentReply extends Struct<FileCommentReply>{

			replyId:Ref<string>
			userId:Ref<string>
			createTime:Ref<int>
			updateTime:Ref<int>
			content:Ref<ReplyContent>
			extra:Ref<ReplyExtra>
	}
	export interface FileCommentReplyBuilder extends Struct<FileCommentReplyBuilder>{

			replyId(replyId:string):Ref<FileCommentReplyBuilder>
			userId(userId:string):Ref<FileCommentReplyBuilder>
			createTime(createTime:int):Ref<FileCommentReplyBuilder>
			updateTime(updateTime:int):Ref<FileCommentReplyBuilder>
			content(content:Ref<ReplyContent>):Ref<FileCommentReplyBuilder>
			extra(extra:Ref<ReplyExtra>):Ref<FileCommentReplyBuilder>
			build():Ref<FileCommentReply>
	}
	//"csv"
	export const FileExtensionCsv:string
	//"docx"
	export const FileExtensionDocx:string
	//"pdf"
	export const FileExtensionPdf:string
	//"xlsx"
	export const FileExtensionXlsx:string
	export interface FileFavorite extends Alias<Nothing>{

	}
	export interface FileSearch extends Struct<FileSearch>{

			docsToken:Ref<string>
			docsType:Ref<string>
			title:Ref<string>
			ownerId:Ref<string>
	}
	export interface FileSearchBuilder extends Struct<FileSearchBuilder>{

			docsToken(docsToken:string):Ref<FileSearchBuilder>
			docsType(docsType:string):Ref<FileSearchBuilder>
			title(title:string):Ref<FileSearchBuilder>
			ownerId(ownerId:string):Ref<FileSearchBuilder>
			build():Ref<FileSearch>
	}
	export interface FileStatistics extends Struct<FileStatistics>{

			uv:Ref<int>
			pv:Ref<int>
			likeCount:Ref<int>
			timestamp:Ref<int>
	}
	export interface FileStatisticsBuilder extends Struct<FileStatisticsBuilder>{

			uv(uv:int):Ref<FileStatisticsBuilder>
			pv(pv:int):Ref<FileStatisticsBuilder>
			likeCount(likeCount:int):Ref<FileStatisticsBuilder>
			timestamp(timestamp:int):Ref<FileStatisticsBuilder>
			build():Ref<FileStatistics>
	}
	export interface FileSubscription extends Struct<FileSubscription>{

			subscriptionId:Ref<string>
			subscriptionType:Ref<string>
			isSubcribe:Ref<bool>
			fileType:Ref<string>
	}
	export interface FileSubscriptionBuilder extends Struct<FileSubscriptionBuilder>{

			subscriptionId(subscriptionId:string):Ref<FileSubscriptionBuilder>
			subscriptionType(subscriptionType:string):Ref<FileSubscriptionBuilder>
			isSubcribe(isSubcribe:bool):Ref<FileSubscriptionBuilder>
			fileType(fileType:string):Ref<FileSubscriptionBuilder>
			build():Ref<FileSubscription>
	}
	//"doc"
	export const FileTypeBatchQueryFileCommentDoc:string
	//"docx"
	export const FileTypeBatchQueryFileCommentDocx:string
	//"file"
	export const FileTypeBatchQueryFileCommentFile:string
	//"sheet"
	export const FileTypeBatchQueryFileCommentSheet:string
	//"bitable"
	export const FileTypeBitable:string
	//"doc"
	export const FileTypeCreateFileCommentDoc:string
	//"docx"
	export const FileTypeCreateFileCommentDocx:string
	//"doc"
	export const FileTypeCreateFileSubscriptionDoc:string
	//"docx"
	export const FileTypeCreateFileSubscriptionDocx:string
	//"wiki"
	export const FileTypeCreateFileSubscriptionWiki:string
	//"doc"
	export const FileTypeDeleteFileCommentReplyDoc:string
	//"docx"
	export const FileTypeDeleteFileCommentReplyDocx:string
	//"file"
	export const FileTypeDeleteFileCommentReplyFile:string
	//"sheet"
	export const FileTypeDeleteFileCommentReplySheet:string
	//"doc"
	export const FileTypeDoc:string
	//"docx"
	export const FileTypeDocx:string
	//"file"
	export const FileTypeFile:string
	//"doc"
	export const FileTypeGetFileCommentDoc:string
	//"docx"
	export const FileTypeGetFileCommentDocx:string
	//"file"
	export const FileTypeGetFileCommentFile:string
	//"sheet"
	export const FileTypeGetFileCommentSheet:string
	//"bitable"
	export const FileTypeGetFileStatisticsBitable:string
	//"doc"
	export const FileTypeGetFileStatisticsDoc:string
	//"docx"
	export const FileTypeGetFileStatisticsDocx:string
	//"file"
	export const FileTypeGetFileStatisticsFile:string
	//"mindnote"
	export const FileTypeGetFileStatisticsMindnote:string
	//"sheet"
	export const FileTypeGetFileStatisticsSheet:string
	//"wiki"
	export const FileTypeGetFileStatisticsWiki:string
	//"doc"
	export const FileTypeGetFileSubscriptionDocs:string
	//"docx"
	export const FileTypeGetFileSubscriptionUpgradedDocs:string
	//"wiki"
	export const FileTypeGetFileSubscriptionWiki:string
	//"bitable"
	export const FileTypeGetSubscribeFileBitable:string
	//"doc"
	export const FileTypeGetSubscribeFileDoc:string
	//"docx"
	export const FileTypeGetSubscribeFileDocx:string
	//"file"
	export const FileTypeGetSubscribeFileFile:string
	//"sheet"
	export const FileTypeGetSubscribeFileSheet:string
	//"doc"
	export const FileTypeListFileCommentDoc:string
	//"docx"
	export const FileTypeListFileCommentDocx:string
	//"file"
	export const FileTypeListFileCommentFile:string
	//"doc"
	export const FileTypeListFileCommentReplyDoc:string
	//"docx"
	export const FileTypeListFileCommentReplyDocx:string
	//"file"
	export const FileTypeListFileCommentReplyFile:string
	//"sheet"
	export const FileTypeListFileCommentReplySheet:string
	//"sheet"
	export const FileTypeListFileCommentSheet:string
	//"bitable"
	export const FileTypeListFileViewRecordBitable:string
	//"doc"
	export const FileTypeListFileViewRecordDoc:string
	//"docx"
	export const FileTypeListFileViewRecordDocx:string
	//"file"
	export const FileTypeListFileViewRecordFile:string
	//"mindnote"
	export const FileTypeListFileViewRecordMindnote:string
	//"sheet"
	export const FileTypeListFileViewRecordSheet:string
	//"wiki"
	export const FileTypeListFileViewRecordWiki:string
	//"doc"
	export const FileTypePatchFileCommentDoc:string
	//"docx"
	export const FileTypePatchFileCommentDocx:string
	//"file"
	export const FileTypePatchFileCommentFile:string
	//"sheet"
	export const FileTypePatchFileCommentSheet:string
	//"doc"
	export const FileTypePatchFileSubscriptionDoc:string
	//"docx"
	export const FileTypePatchFileSubscriptionDocx:string
	//"wiki"
	export const FileTypePatchFileSubscriptionWiki:string
	//"sheet"
	export const FileTypeSheet:string
	//"bitable"
	export const FileTypeSubscribeFileBitable:string
	//"doc"
	export const FileTypeSubscribeFileDoc:string
	//"docx"
	export const FileTypeSubscribeFileDocx:string
	//"sheet"
	export const FileTypeSubscribeFileSheet:string
	//"doc"
	export const FileTypeUpdateFileCommentReplyDoc:string
	//"docx"
	export const FileTypeUpdateFileCommentReplyDocx:string
	//"file"
	export const FileTypeUpdateFileCommentReplyFile:string
	//"sheet"
	export const FileTypeUpdateFileCommentReplySheet:string
	export interface FileUploadInfo extends Struct<FileUploadInfo>{

			fileName:Ref<string>
			parentType:Ref<string>
			parentNode:Ref<string>
			size:Ref<int>
	}
	export interface FileUploadInfoBuilder extends Struct<FileUploadInfoBuilder>{

			fileName(fileName:string):Ref<FileUploadInfoBuilder>
			parentType(parentType:string):Ref<FileUploadInfoBuilder>
			parentNode(parentNode:string):Ref<FileUploadInfoBuilder>
			size(size:int):Ref<FileUploadInfoBuilder>
			build():Ref<FileUploadInfo>
	}
	export interface FileViewRecord extends Struct<FileViewRecord>{

			viewerId:Ref<string>
			name:Ref<string>
			avatarUrl:Ref<string>
			lastViewTime:Ref<string>
	}
	export interface FileViewRecordBuilder extends Struct<FileViewRecordBuilder>{

			viewerId(viewerId:string):Ref<FileViewRecordBuilder>
			name(name:string):Ref<FileViewRecordBuilder>
			avatarUrl(avatarUrl:string):Ref<FileViewRecordBuilder>
			lastViewTime(lastViewTime:string):Ref<FileViewRecordBuilder>
			build():Ref<FileViewRecord>
	}
	export interface ImportTask extends Struct<ImportTask>{

			ticket:Ref<string>
			fileExtension:Ref<string>
			fileToken:Ref<string>
			type:Ref<string>
			fileName:Ref<string>
			point:Ref<ImportTaskMountPoint>
			jobStatus:Ref<int>
			jobErrorMsg:Ref<string>
			token:Ref<string>
			url:Ref<string>
			extra:string[]
	}
	export interface ImportTaskBuilder extends Struct<ImportTaskBuilder>{

			ticket(ticket:string):Ref<ImportTaskBuilder>
			fileExtension(fileExtension:string):Ref<ImportTaskBuilder>
			fileToken(fileToken:string):Ref<ImportTaskBuilder>
			type(type_:string):Ref<ImportTaskBuilder>
			fileName(fileName:string):Ref<ImportTaskBuilder>
			point(point:Ref<ImportTaskMountPoint>):Ref<ImportTaskBuilder>
			jobStatus(jobStatus:int):Ref<ImportTaskBuilder>
			jobErrorMsg(jobErrorMsg:string):Ref<ImportTaskBuilder>
			token(token:string):Ref<ImportTaskBuilder>
			url(url:string):Ref<ImportTaskBuilder>
			extra(extra:string[]):Ref<ImportTaskBuilder>
			build():Ref<ImportTask>
	}
	export interface ImportTaskMountPoint extends Struct<ImportTaskMountPoint>{

			mountType:Ref<int>
			mountKey:Ref<string>
	}
	export interface ImportTaskMountPointBuilder extends Struct<ImportTaskMountPointBuilder>{

			mountType(mountType:int):Ref<ImportTaskMountPointBuilder>
			mountKey(mountKey:string):Ref<ImportTaskMountPointBuilder>
			build():Ref<ImportTaskMountPoint>
	}
	//"anyone_editable"
	export const LinkShareEntityAnyoneEditable:string
	//"anyone_readable"
	export const LinkShareEntityAnyoneReadable:string
	//"closed"
	export const LinkShareEntityClosed:string
	//"tenant_editable"
	export const LinkShareEntityTenantEditable:string
	//"tenant_readable"
	export const LinkShareEntityTenantReadable:string
	export interface Media extends Struct<Media>{

			fileToken:Ref<string>
			fileName:Ref<string>
			size:Ref<int>
			mimeType:Ref<string>
	}
	export interface MediaBuilder extends Struct<MediaBuilder>{

			fileToken(fileToken:string):Ref<MediaBuilder>
			fileName(fileName:string):Ref<MediaBuilder>
			size(size:int):Ref<MediaBuilder>
			mimeType(mimeType:string):Ref<MediaBuilder>
			build():Ref<Media>
	}
	export interface MediaUploadInfo extends Struct<MediaUploadInfo>{

			fileName:Ref<string>
			parentType:Ref<string>
			parentNode:Ref<string>
			size:Ref<int>
			extra:Ref<string>
	}
	export interface MediaUploadInfoBuilder extends Struct<MediaUploadInfoBuilder>{

			fileName(fileName:string):Ref<MediaUploadInfoBuilder>
			parentType(parentType:string):Ref<MediaUploadInfoBuilder>
			parentNode(parentNode:string):Ref<MediaUploadInfoBuilder>
			size(size:int):Ref<MediaUploadInfoBuilder>
			extra(extra:string):Ref<MediaUploadInfoBuilder>
			build():Ref<MediaUploadInfo>
	}
	export interface Member extends Struct<Member>{

			memberType:Ref<string>
			memberId:Ref<string>
			perm:Ref<string>
			type:Ref<string>
			name:Ref<string>
			avatar:Ref<string>
			externalLabel:Ref<bool>
	}
	export interface MemberBuilder extends Struct<MemberBuilder>{

			memberType(memberType:string):Ref<MemberBuilder>
			memberId(memberId:string):Ref<MemberBuilder>
			perm(perm:string):Ref<MemberBuilder>
			type(type_:string):Ref<MemberBuilder>
			name(name:string):Ref<MemberBuilder>
			avatar(avatar:string):Ref<MemberBuilder>
			externalLabel(externalLabel:bool):Ref<MemberBuilder>
			build():Ref<Member>
	}
	//"email"
	export const MemberTypeDeletePermissionMemberEmail:string
	//"openchat"
	export const MemberTypeDeletePermissionMemberOpenChatID:string
	//"opendepartmentid"
	export const MemberTypeDeletePermissionMemberOpenDepartmentID:string
	//"openid"
	export const MemberTypeDeletePermissionMemberOpenID:string
	//"userid"
	export const MemberTypeDeletePermissionMemberUserID:string
	//"email"
	export const MemberTypeEmail:string
	//"openchat"
	export const MemberTypeOpenChat:string
	//"opendepartmentid"
	export const MemberTypeOpenDepartmentId:string
	//"openid"
	export const MemberTypeOpenId:string
	//"email"
	export const MemberTypeTransferOwnerPermissionMemberEmail:string
	//"openid"
	export const MemberTypeTransferOwnerPermissionMemberOpenId:string
	//"userid"
	export const MemberTypeTransferOwnerPermissionMemberUserId:string
	//"email"
	export const MemberTypeUpdatePermissionMemberEmail:string
	//"openchat"
	export const MemberTypeUpdatePermissionMemberOpenChat:string
	//"opendepartmentid"
	export const MemberTypeUpdatePermissionMemberOpenDepartmentId:string
	//"openid"
	export const MemberTypeUpdatePermissionMemberOpenId:string
	//"userid"
	export const MemberTypeUpdatePermissionMemberUserId:string
	//"userid"
	export const MemberTypeUserId:string
	export interface Meta extends Struct<Meta>{

			docToken:Ref<string>
			docType:Ref<string>
			title:Ref<string>
			ownerId:Ref<string>
			createTime:Ref<string>
			latestModifyUser:Ref<string>
			latestModifyTime:Ref<string>
			url:Ref<string>
			secLabelName:Ref<string>
	}
	export interface MetaBuilder extends Struct<MetaBuilder>{

			docToken(docToken:string):Ref<MetaBuilder>
			docType(docType:string):Ref<MetaBuilder>
			title(title:string):Ref<MetaBuilder>
			ownerId(ownerId:string):Ref<MetaBuilder>
			createTime(createTime:string):Ref<MetaBuilder>
			latestModifyUser(latestModifyUser:string):Ref<MetaBuilder>
			latestModifyTime(latestModifyTime:string):Ref<MetaBuilder>
			url(url:string):Ref<MetaBuilder>
			secLabelName(secLabelName:string):Ref<MetaBuilder>
			build():Ref<Meta>
	}
	export interface MetaFailed extends Struct<MetaFailed>{

			token:Ref<string>
			code:Ref<int>
	}
	export interface MetaFailedBuilder extends Struct<MetaFailedBuilder>{

			token(token:string):Ref<MetaFailedBuilder>
			code(code:int):Ref<MetaFailedBuilder>
			build():Ref<MetaFailed>
	}
	export interface MetaRequest extends Struct<MetaRequest>{

			requestDocs:Ref<RequestDoc>[]
			withUrl:Ref<bool>
	}
	export interface MetaRequestBuilder extends Struct<MetaRequestBuilder>{

			requestDocs(requestDocs:Ref<RequestDoc>[]):Ref<MetaRequestBuilder>
			withUrl(withUrl:bool):Ref<MetaRequestBuilder>
			build():Ref<MetaRequest>
	}
	export function newApplyMemberRequestBuilder():Ref<ApplyMemberRequestBuilder>

	export function newBaseMemberBuilder():Ref<BaseMemberBuilder>

	export function newBitableTableFieldActionBuilder():Ref<BitableTableFieldActionBuilder>

	export function newBitableTableFieldActionValueBuilder():Ref<BitableTableFieldActionValueBuilder>

	export function newBitableTableFieldActionValuePropertyAutoSerialBuilder():Ref<BitableTableFieldActionValuePropertyAutoSerialBuilder>

	export function newBitableTableFieldActionValuePropertyAutoSerialOptionsBuilder():Ref<BitableTableFieldActionValuePropertyAutoSerialOptionsBuilder>

	export function newBitableTableFieldActionValuePropertyBuilder():Ref<BitableTableFieldActionValuePropertyBuilder>

	export function newBitableTableFieldActionValuePropertyOptionBuilder():Ref<BitableTableFieldActionValuePropertyOptionBuilder>

	export function newBitableTableRecordActionBuilder():Ref<BitableTableRecordActionBuilder>

	export function newBitableTableRecordActionFieldBuilder():Ref<BitableTableRecordActionFieldBuilder>

	export function newBitableTableRecordActionFieldIdentityBuilder():Ref<BitableTableRecordActionFieldIdentityBuilder>

	export function newBitableTableRecordActionFieldIdentityUserBuilder():Ref<BitableTableRecordActionFieldIdentityUserBuilder>

	export function newCollaboratorBuilder():Ref<CollaboratorBuilder>

	export function newDepartmentIdBuilder():Ref<DepartmentIdBuilder>

	export function newDocsLinkBuilder():Ref<DocsLinkBuilder>

	export function newDownloadMediaReqBuilder():Ref<DownloadMediaReqBuilder>

	export function newExportTaskBuilder():Ref<ExportTaskBuilder>

	export function newFileBuilder():Ref<FileBuilder>

	export function newFileCommentBuilder():Ref<FileCommentBuilder>

	export function newFileCommentReplyBuilder():Ref<FileCommentReplyBuilder>

	export function newFileSearchBuilder():Ref<FileSearchBuilder>

	export function newFileStatisticsBuilder():Ref<FileStatisticsBuilder>

	export function newFileSubscriptionBuilder():Ref<FileSubscriptionBuilder>

	export function newFileUploadInfoBuilder():Ref<FileUploadInfoBuilder>

	export function newFileViewRecordBuilder():Ref<FileViewRecordBuilder>

	export function newImportTaskBuilder():Ref<ImportTaskBuilder>

	export function newImportTaskMountPointBuilder():Ref<ImportTaskMountPointBuilder>

	export function newMediaBuilder():Ref<MediaBuilder>

	export function newMediaUploadInfoBuilder():Ref<MediaUploadInfoBuilder>

	export function newMemberBuilder():Ref<MemberBuilder>

	export function newMetaBuilder():Ref<MetaBuilder>

	export function newMetaFailedBuilder():Ref<MetaFailedBuilder>

	export function newMetaRequestBuilder():Ref<MetaRequestBuilder>

	export function newOwnerBuilder():Ref<OwnerBuilder>

	export function newPermissionPublicBuilder():Ref<PermissionPublicBuilder>

	export function newPermissionPublicRequestBuilder():Ref<PermissionPublicRequestBuilder>

	export function newPersonBuilder():Ref<PersonBuilder>

	export function newPropertyBuilder():Ref<PropertyBuilder>

	export function newReferEntityBuilder():Ref<ReferEntityBuilder>

	export function newReplyContentBuilder():Ref<ReplyContentBuilder>

	export function newReplyElementBuilder():Ref<ReplyElementBuilder>

	export function newReplyExtraBuilder():Ref<ReplyExtraBuilder>

	export function newReplyListBuilder():Ref<ReplyListBuilder>

	export function newRequestDocBuilder():Ref<RequestDocBuilder>

	export function newService(config:Ref<larkcore.Config>):Ref<DriveService>

	export function newShortcutInfoBuilder():Ref<ShortcutInfoBuilder>

	export function newTextRunBuilder():Ref<TextRunBuilder>

	export function newTmpDownloadUrlBuilder():Ref<TmpDownloadUrlBuilder>

	export function newTokenTypeBuilder():Ref<TokenTypeBuilder>

	export function newUploadAllMediaPathReqBodyBuilder():Ref<UploadAllMediaPathReqBodyBuilder>

	export function newUploadAllMediaReqBodyBuilder():Ref<UploadAllMediaReqBodyBuilder>

	export function newUploadAllMediaReqBuilder():Ref<UploadAllMediaReqBuilder>

	export function newUploadInfoBuilder():Ref<UploadInfoBuilder>

	export function newUserIdBuilder():Ref<UserIdBuilder>

	export function newVersionBuilder():Ref<VersionBuilder>

	//"docx"
	export const ObjTypeDeleteFileVersionDocx:string
	//"sheet"
	export const ObjTypeDeleteFileVersionSheet:string
	//"docx"
	export const ObjTypeDocx:string
	//"docx"
	export const ObjTypeGetFileVersionDocx:string
	//"sheet"
	export const ObjTypeGetFileVersionSheet:string
	//"docx"
	export const ObjTypeListFileVersionDocx:string
	//"sheet"
	export const ObjTypeListFileVersionSheet:string
	//"sheet"
	export const ObjTypeSheet:string
	//"CreatedTime"
	export const OrderByCreatedTime:string
	//"EditedTime"
	export const OrderByEditedTime:string
	export interface Owner extends Struct<Owner>{

			memberType:Ref<string>
			memberId:Ref<string>
	}
	export interface OwnerBuilder extends Struct<OwnerBuilder>{

			memberType(memberType:string):Ref<OwnerBuilder>
			memberId(memberId:string):Ref<OwnerBuilder>
			build():Ref<Owner>
	}
	//"docx"
	export const ParentTypeCreateFileVersionObjTypeDocx:string
	//"sheet"
	export const ParentTypeCreateFileVersionObjTypeSheet:string
	//"explorer"
	export const ParentTypeExplorer:string
	//"bitable_file"
	export const ParentTypeUploadAllMediaBitableFile:string
	//"bitable_image"
	export const ParentTypeUploadAllMediaBitableImage:string
	//"ccm_import_open"
	export const ParentTypeUploadAllMediaCcmImportOpen:string
	//"doc_file"
	export const ParentTypeUploadAllMediaDocFile:string
	//"doc_image"
	export const ParentTypeUploadAllMediaDocImage:string
	//"docx_file"
	export const ParentTypeUploadAllMediaDocxFile:string
	//"docx_image"
	export const ParentTypeUploadAllMediaDocxImage:string
	//"moments"
	export const ParentTypeUploadAllMediaMoments:string
	//"sheet_file"
	export const ParentTypeUploadAllMediaSheetFile:string
	//"sheet_image"
	export const ParentTypeUploadAllMediaSheetImage:string
	//"vc_virtual_background"
	export const ParentTypeUploadAllMediaVcVirtualBackground:string
	//"explorer"
	export const ParentTypeUploadPrepareFileExplorer:string
	//"bitable_file"
	export const ParentTypeUploadPrepareMediaBitableFile:string
	//"bitable_image"
	export const ParentTypeUploadPrepareMediaBitableImage:string
	//"ccm_import_open"
	export const ParentTypeUploadPrepareMediaCcmImportOpen:string
	//"doc_file"
	export const ParentTypeUploadPrepareMediaDocFile:string
	//"doc_image"
	export const ParentTypeUploadPrepareMediaDocImage:string
	//"docx_file"
	export const ParentTypeUploadPrepareMediaDocxFile:string
	//"docx_image"
	export const ParentTypeUploadPrepareMediaDocxImage:string
	//"moments"
	export const ParentTypeUploadPrepareMediaMoments:string
	//"sheet_file"
	export const ParentTypeUploadPrepareMediaSheetFile:string
	//"sheet_image"
	export const ParentTypeUploadPrepareMediaSheetImage:string
	//"vc_virtual_background"
	export const ParentTypeUploadPrepareMediaVcVirtualBackground:string
	//"comment"
	export const PermComment:string
	//"copy"
	export const PermCopy:string
	//"edit"
	export const PermCreatePermissionMemberEdit:string
	//"full_access"
	export const PermCreatePermissionMemberFullAccess:string
	//"view"
	export const PermCreatePermissionMemberView:string
	//"edit"
	export const PermEdit:string
	//"export"
	export const PermExport:string
	//"manage_public"
	export const PermManagePublic:string
	//"print"
	export const PermPrint:string
	//"share"
	export const PermShare:string
	//"edit"
	export const PermUpdatePermissionMemberEdit:string
	//"full_access"
	export const PermUpdatePermissionMemberFullAccess:string
	//"view"
	export const PermUpdatePermissionMemberView:string
	//"view"
	export const PermView:string
	export interface PermissionPublic extends Struct<PermissionPublic>{

			externalAccess:Ref<bool>
			securityEntity:Ref<string>
			commentEntity:Ref<string>
			shareEntity:Ref<string>
			linkShareEntity:Ref<string>
			inviteExternal:Ref<bool>
			lockSwitch:Ref<bool>
	}
	export interface PermissionPublicBuilder extends Struct<PermissionPublicBuilder>{

			externalAccess(externalAccess:bool):Ref<PermissionPublicBuilder>
			securityEntity(securityEntity:string):Ref<PermissionPublicBuilder>
			commentEntity(commentEntity:string):Ref<PermissionPublicBuilder>
			shareEntity(shareEntity:string):Ref<PermissionPublicBuilder>
			linkShareEntity(linkShareEntity:string):Ref<PermissionPublicBuilder>
			inviteExternal(inviteExternal:bool):Ref<PermissionPublicBuilder>
			lockSwitch(lockSwitch:bool):Ref<PermissionPublicBuilder>
			build():Ref<PermissionPublic>
	}
	export interface PermissionPublicPassword extends Alias<Nothing>{

	}
	export interface PermissionPublicRequest extends Struct<PermissionPublicRequest>{

			externalAccess:Ref<bool>
			securityEntity:Ref<string>
			commentEntity:Ref<string>
			shareEntity:Ref<string>
			linkShareEntity:Ref<string>
			inviteExternal:Ref<bool>
	}
	export interface PermissionPublicRequestBuilder extends Struct<PermissionPublicRequestBuilder>{

			externalAccess(externalAccess:bool):Ref<PermissionPublicRequestBuilder>
			securityEntity(securityEntity:string):Ref<PermissionPublicRequestBuilder>
			commentEntity(commentEntity:string):Ref<PermissionPublicRequestBuilder>
			shareEntity(shareEntity:string):Ref<PermissionPublicRequestBuilder>
			linkShareEntity(linkShareEntity:string):Ref<PermissionPublicRequestBuilder>
			inviteExternal(inviteExternal:bool):Ref<PermissionPublicRequestBuilder>
			build():Ref<PermissionPublicRequest>
	}
	export interface Person extends Struct<Person>{

			userId:Ref<string>
	}
	export interface PersonBuilder extends Struct<PersonBuilder>{

			userId(userId:string):Ref<PersonBuilder>
			build():Ref<Person>
	}
	export interface Property extends Struct<Property>{

			key:Ref<string>
			value:Ref<string>
	}
	export interface PropertyBuilder extends Struct<PropertyBuilder>{

			key(key:string):Ref<PropertyBuilder>
			value(value:string):Ref<PropertyBuilder>
			build():Ref<Property>
	}
	export interface ReferEntity extends Struct<ReferEntity>{

			referToken:Ref<string>
			referType:Ref<string>
	}
	export interface ReferEntityBuilder extends Struct<ReferEntityBuilder>{

			referToken(referToken:string):Ref<ReferEntityBuilder>
			referType(referType:string):Ref<ReferEntityBuilder>
			build():Ref<ReferEntity>
	}
	export interface ReplyContent extends Struct<ReplyContent>{

			elements:Ref<ReplyElement>[]
	}
	export interface ReplyContentBuilder extends Struct<ReplyContentBuilder>{

			elements(elements:Ref<ReplyElement>[]):Ref<ReplyContentBuilder>
			build():Ref<ReplyContent>
	}
	export interface ReplyElement extends Struct<ReplyElement>{

			type:Ref<string>
			textRun:Ref<TextRun>
			docsLink:Ref<DocsLink>
			person:Ref<Person>
	}
	export interface ReplyElementBuilder extends Struct<ReplyElementBuilder>{

			type(type_:string):Ref<ReplyElementBuilder>
			textRun(textRun:Ref<TextRun>):Ref<ReplyElementBuilder>
			docsLink(docsLink:Ref<DocsLink>):Ref<ReplyElementBuilder>
			person(person:Ref<Person>):Ref<ReplyElementBuilder>
			build():Ref<ReplyElement>
	}
	export interface ReplyExtra extends Struct<ReplyExtra>{

			imageList:string[]
	}
	export interface ReplyExtraBuilder extends Struct<ReplyExtraBuilder>{

			imageList(imageList:string[]):Ref<ReplyExtraBuilder>
			build():Ref<ReplyExtra>
	}
	export interface ReplyList extends Struct<ReplyList>{

			replies:Ref<FileCommentReply>[]
	}
	export interface ReplyListBuilder extends Struct<ReplyListBuilder>{

			replies(replies:Ref<FileCommentReply>[]):Ref<ReplyListBuilder>
			build():Ref<ReplyList>
	}
	export interface RequestDoc extends Struct<RequestDoc>{

			docToken:Ref<string>
			docType:Ref<string>
	}
	export interface RequestDocBuilder extends Struct<RequestDocBuilder>{

			docToken(docToken:string):Ref<RequestDocBuilder>
			docType(docType:string):Ref<RequestDocBuilder>
			build():Ref<RequestDoc>
	}
	//"anyone_can_edit"
	export const SecurityEntityAnyoneCanEdit:string
	//"anyone_can_view"
	export const SecurityEntityAnyoneCanView:string
	//"only_full_access"
	export const SecurityEntityOnlyFullAccess:string
	//"anyone"
	export const ShareEntityAnyone:string
	//"only_full_access"
	export const ShareEntityOnlyFullAccess:string
	//"same_tenant"
	export const ShareEntitySameTenant:string
	export interface ShortcutInfo extends Struct<ShortcutInfo>{

			targetType:Ref<string>
			targetToken:Ref<string>
	}
	export interface ShortcutInfoBuilder extends Struct<ShortcutInfoBuilder>{

			targetType(targetType:string):Ref<ShortcutInfoBuilder>
			targetToken(targetToken:string):Ref<ShortcutInfoBuilder>
			build():Ref<ShortcutInfo>
	}
	//"1"
	export const StatusStatusDeleted:string
	//"0"
	export const StatusStatusExist:string
	//"2"
	export const StatusStatusTrash:string
	//"comment_update"
	export const SubscriptionTypeCommentUpdate:string
	export interface TextRun extends Struct<TextRun>{

			text:Ref<string>
	}
	export interface TextRunBuilder extends Struct<TextRunBuilder>{

			text(text:string):Ref<TextRunBuilder>
			build():Ref<TextRun>
	}
	export interface TmpDownloadUrl extends Struct<TmpDownloadUrl>{

			fileToken:Ref<string>
			tmpDownloadUrl:Ref<string>
	}
	export interface TmpDownloadUrlBuilder extends Struct<TmpDownloadUrlBuilder>{

			fileToken(fileToken:string):Ref<TmpDownloadUrlBuilder>
			tmpDownloadUrl(tmpDownloadUrl:string):Ref<TmpDownloadUrlBuilder>
			build():Ref<TmpDownloadUrl>
	}
	export interface TokenType extends Struct<TokenType>{

			token:Ref<string>
			type:Ref<string>
	}
	//"bitable"
	export const TokenTypeBitable:string
	export interface TokenTypeBuilder extends Struct<TokenTypeBuilder>{

			token(token:string):Ref<TokenTypeBuilder>
			type(type_:string):Ref<TokenTypeBuilder>
			build():Ref<TokenType>
	}
	//"bitable"
	export const TokenTypeCreatePermissionPublicPasswordBitable:string
	//"doc"
	export const TokenTypeCreatePermissionPublicPasswordDoc:string
	//"docx"
	export const TokenTypeCreatePermissionPublicPasswordDocx:string
	//"file"
	export const TokenTypeCreatePermissionPublicPasswordFile:string
	//"mindnote"
	export const TokenTypeCreatePermissionPublicPasswordMindnote:string
	//"minutes"
	export const TokenTypeCreatePermissionPublicPasswordMinutes:string
	//"sheet"
	export const TokenTypeCreatePermissionPublicPasswordSheet:string
	//"slides"
	export const TokenTypeCreatePermissionPublicPasswordSlides:string
	//"wiki"
	export const TokenTypeCreatePermissionPublicPasswordWiki:string
	//"doc"
	export const TokenTypeDoc:string
	//"docx"
	export const TokenTypeDocx:string
	//"file"
	export const TokenTypeFile:string
	//"bitable"
	export const TokenTypeGetPermissionPublicBitable:string
	//"doc"
	export const TokenTypeGetPermissionPublicDoc:string
	//"docx"
	export const TokenTypeGetPermissionPublicDocx:string
	//"file"
	export const TokenTypeGetPermissionPublicFile:string
	//"mindnote"
	export const TokenTypeGetPermissionPublicMindnote:string
	//"minutes"
	export const TokenTypeGetPermissionPublicMinutes:string
	//"sheet"
	export const TokenTypeGetPermissionPublicSheet:string
	//"slides"
	export const TokenTypeGetPermissionPublicSlides:string
	//"wiki"
	export const TokenTypeGetPermissionPublicWiki:string
	//"bitable"
	export const TokenTypeListPermissionMemberBitable:string
	//"doc"
	export const TokenTypeListPermissionMemberDoc:string
	//"docx"
	export const TokenTypeListPermissionMemberDocx:string
	//"file"
	export const TokenTypeListPermissionMemberFile:string
	//"mindnote"
	export const TokenTypeListPermissionMemberMindnote:string
	//"minutes"
	export const TokenTypeListPermissionMemberMinutes:string
	//"sheet"
	export const TokenTypeListPermissionMemberSheet:string
	//"slides"
	export const TokenTypeListPermissionMemberSlides:string
	//"wiki"
	export const TokenTypeListPermissionMemberWiki:string
	//"mindnote"
	export const TokenTypeMindnote:string
	//"minutes"
	export const TokenTypeMinutes:string
	//"bitable"
	export const TokenTypePatchPermissionPublicBitable:string
	//"doc"
	export const TokenTypePatchPermissionPublicDoc:string
	//"docx"
	export const TokenTypePatchPermissionPublicDocx:string
	//"file"
	export const TokenTypePatchPermissionPublicFile:string
	//"mindnote"
	export const TokenTypePatchPermissionPublicMindnote:string
	//"minutes"
	export const TokenTypePatchPermissionPublicMinutes:string
	//"sheet"
	export const TokenTypePatchPermissionPublicSheet:string
	//"slides"
	export const TokenTypePatchPermissionPublicSlides:string
	//"wiki"
	export const TokenTypePatchPermissionPublicWiki:string
	//"sheet"
	export const TokenTypeSheet:string
	//"slides"
	export const TokenTypeSlides:string
	//"bitable"
	export const TokenTypeTransferOwnerPermissionMemberBitable:string
	//"doc"
	export const TokenTypeTransferOwnerPermissionMemberDoc:string
	//"docx"
	export const TokenTypeTransferOwnerPermissionMemberDocx:string
	//"file"
	export const TokenTypeTransferOwnerPermissionMemberFile:string
	//"mindnote"
	export const TokenTypeTransferOwnerPermissionMemberMindnote:string
	//"minutes"
	export const TokenTypeTransferOwnerPermissionMemberMinutes:string
	//"sheet"
	export const TokenTypeTransferOwnerPermissionMemberSheet:string
	//"slides"
	export const TokenTypeTransferOwnerPermissionMemberSlides:string
	//"wiki"
	export const TokenTypeTransferOwnerPermissionMemberWiki:string
	//"bitable"
	export const TokenTypeUpdatePermissionMemberBitable:string
	//"doc"
	export const TokenTypeUpdatePermissionMemberDoc:string
	//"docx"
	export const TokenTypeUpdatePermissionMemberDocx:string
	//"file"
	export const TokenTypeUpdatePermissionMemberFile:string
	//"mindnote"
	export const TokenTypeUpdatePermissionMemberMindnote:string
	//"minutes"
	export const TokenTypeUpdatePermissionMemberMinutes:string
	//"sheet"
	export const TokenTypeUpdatePermissionMemberSheet:string
	//"slides"
	export const TokenTypeUpdatePermissionMemberSlides:string
	//"wiki"
	export const TokenTypeUpdatePermissionMemberWiki:string
	//"bitable"
	export const TokenTypeV2Bitable:string
	//"bitable"
	export const TokenTypeV2DeletePermissionMemberBitable:string
	//"doc"
	export const TokenTypeV2DeletePermissionMemberDoc:string
	//"docx"
	export const TokenTypeV2DeletePermissionMemberDocx:string
	//"file"
	export const TokenTypeV2DeletePermissionMemberFile:string
	//"folder"
	export const TokenTypeV2DeletePermissionMemberFolder:string
	//"mindnote"
	export const TokenTypeV2DeletePermissionMemberMindnote:string
	//"minutes"
	export const TokenTypeV2DeletePermissionMemberMinutes:string
	//"sheet"
	export const TokenTypeV2DeletePermissionMemberSheet:string
	//"slides"
	export const TokenTypeV2DeletePermissionMemberSlides:string
	//"wiki"
	export const TokenTypeV2DeletePermissionMemberWiki:string
	//"doc"
	export const TokenTypeV2Doc:string
	//"docx"
	export const TokenTypeV2Docx:string
	//"file"
	export const TokenTypeV2File:string
	//"folder"
	export const TokenTypeV2Folder:string
	//"mindnote"
	export const TokenTypeV2Mindnote:string
	//"minutes"
	export const TokenTypeV2Minutes:string
	//"sheet"
	export const TokenTypeV2Sheet:string
	//"slides"
	export const TokenTypeV2Slides:string
	//"wiki"
	export const TokenTypeV2Wiki:string
	//"wiki"
	export const TokenTypeWiki:string
	//"bitable"
	export const TypeBitable:string
	//"bitable"
	export const TypeCopyFileBitable:string
	//"doc"
	export const TypeCopyFileDoc:string
	//"docx"
	export const TypeCopyFileDocx:string
	//"file"
	export const TypeCopyFileFile:string
	//"mindnote"
	export const TypeCopyFileMindnote:string
	//"sheet"
	export const TypeCopyFileSheet:string
	//"slides"
	export const TypeCopyFileSlides:string
	//"bitable"
	export const TypeDeleteFileBitable:string
	//"doc"
	export const TypeDeleteFileDoc:string
	//"docx"
	export const TypeDeleteFileDocx:string
	//"file"
	export const TypeDeleteFileFile:string
	//"folder"
	export const TypeDeleteFileFolder:string
	//"mindnote"
	export const TypeDeleteFileMindnote:string
	//"sheet"
	export const TypeDeleteFileSheet:string
	//"shortcut"
	export const TypeDeleteFileShortcut:string
	//"slides"
	export const TypeDeleteFileSlides:string
	//"bitable"
	export const TypeDeletePermissionPublicPasswordBitable:string
	//"doc"
	export const TypeDeletePermissionPublicPasswordDoc:string
	//"docx"
	export const TypeDeletePermissionPublicPasswordDocx:string
	//"file"
	export const TypeDeletePermissionPublicPasswordFile:string
	//"mindnote"
	export const TypeDeletePermissionPublicPasswordMindnote:string
	//"minutes"
	export const TypeDeletePermissionPublicPasswordMinutes:string
	//"sheet"
	export const TypeDeletePermissionPublicPasswordSheet:string
	//"slides"
	export const TypeDeletePermissionPublicPasswordSlides:string
	//"wiki"
	export const TypeDeletePermissionPublicPasswordWiki:string
	//"doc"
	export const TypeDoc:string
	//"docx"
	export const TypeDocx:string
	//"bitable"
	export const TypeMoveFileBitable:string
	//"doc"
	export const TypeMoveFileDoc:string
	//"docx"
	export const TypeMoveFileDocx:string
	//"file"
	export const TypeMoveFileFile:string
	//"folder"
	export const TypeMoveFileFolder:string
	//"mindnote"
	export const TypeMoveFileMindnote:string
	//"sheet"
	export const TypeMoveFileSheet:string
	//"slides"
	export const TypeMoveFileSlides:string
	//"sheet"
	export const TypeSheet:string
	//"bitable"
	export const TypeUpdatePermissionPublicPasswordBitable:string
	//"doc"
	export const TypeUpdatePermissionPublicPasswordDoc:string
	//"docx"
	export const TypeUpdatePermissionPublicPasswordDocx:string
	//"file"
	export const TypeUpdatePermissionPublicPasswordFile:string
	//"mindnote"
	export const TypeUpdatePermissionPublicPasswordMindnote:string
	//"minutes"
	export const TypeUpdatePermissionPublicPasswordMinutes:string
	//"sheet"
	export const TypeUpdatePermissionPublicPasswordSheet:string
	//"slides"
	export const TypeUpdatePermissionPublicPasswordSlides:string
	//"wiki"
	export const TypeUpdatePermissionPublicPasswordWiki:string
	export interface UploadAllMediaPathReqBodyBuilder extends Struct<UploadAllMediaPathReqBodyBuilder>{

			fileName(fileName:string):Ref<UploadAllMediaPathReqBodyBuilder>
			parentType(parentType:string):Ref<UploadAllMediaPathReqBodyBuilder>
			parentNode(parentNode:string):Ref<UploadAllMediaPathReqBodyBuilder>
			size(size:int):Ref<UploadAllMediaPathReqBodyBuilder>
			checksum(checksum:string):Ref<UploadAllMediaPathReqBodyBuilder>
			extra(extra:string):Ref<UploadAllMediaPathReqBodyBuilder>
			filePath(filePath:string):Ref<UploadAllMediaPathReqBodyBuilder>
			build():Ref<UploadAllMediaReqBody>
	}
	export interface UploadAllMediaReq extends Struct<UploadAllMediaReq>{

			body:Ref<UploadAllMediaReqBody>
	}
	export interface UploadAllMediaReqBody extends Struct<UploadAllMediaReqBody>{

			fileName:Ref<string>
			parentType:Ref<string>
			parentNode:Ref<string>
			size:Ref<int>
			checksum:Ref<string>
			extra:Ref<string>
			file:io.Reader
	}
	export interface UploadAllMediaReqBodyBuilder extends Struct<UploadAllMediaReqBodyBuilder>{

			fileName(fileName:string):Ref<UploadAllMediaReqBodyBuilder>
			parentType(parentType:string):Ref<UploadAllMediaReqBodyBuilder>
			parentNode(parentNode:string):Ref<UploadAllMediaReqBodyBuilder>
			size(size:int):Ref<UploadAllMediaReqBodyBuilder>
			checksum(checksum:string):Ref<UploadAllMediaReqBodyBuilder>
			extra(extra:string):Ref<UploadAllMediaReqBodyBuilder>
			file(file:io.Reader):Ref<UploadAllMediaReqBodyBuilder>
			build():Ref<UploadAllMediaReqBody>
	}
	export interface UploadAllMediaReqBuilder extends Struct<UploadAllMediaReqBuilder>{

			body(body:Ref<UploadAllMediaReqBody>):Ref<UploadAllMediaReqBuilder>
			build():Ref<UploadAllMediaReq>
	}
	export interface UploadAllMediaResp extends Struct<UploadAllMediaResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<UploadAllMediaRespData>
			success():bool
	}
	export interface UploadAllMediaRespData extends Struct<UploadAllMediaRespData>{

			fileToken:Ref<string>
	}
	export interface UploadInfo extends Struct<UploadInfo>{

			fileName:Ref<string>
			parentType:Ref<string>
			parentNode:Ref<string>
			size:Ref<int>
	}
	export interface UploadInfoBuilder extends Struct<UploadInfoBuilder>{

			fileName(fileName:string):Ref<UploadInfoBuilder>
			parentType(parentType:string):Ref<UploadInfoBuilder>
			parentNode(parentNode:string):Ref<UploadInfoBuilder>
			size(size:int):Ref<UploadInfoBuilder>
			build():Ref<UploadInfo>
	}
	export interface UserId extends Struct<UserId>{

			userId:Ref<string>
			openId:Ref<string>
			unionId:Ref<string>
	}
	export interface UserIdBuilder extends Struct<UserIdBuilder>{

			userId(userId:string):Ref<UserIdBuilder>
			openId(openId:string):Ref<UserIdBuilder>
			unionId(unionId:string):Ref<UserIdBuilder>
			build():Ref<UserId>
	}
	//"open_id"
	export const UserIdTypeBatchQueryFileCommentOpenId:string
	//"union_id"
	export const UserIdTypeBatchQueryFileCommentUnionId:string
	//"user_id"
	export const UserIdTypeBatchQueryFileCommentUserId:string
	//"open_id"
	export const UserIdTypeBatchQueryMetaOpenId:string
	//"union_id"
	export const UserIdTypeBatchQueryMetaUnionId:string
	//"user_id"
	export const UserIdTypeBatchQueryMetaUserId:string
	//"open_id"
	export const UserIdTypeCreateFileCommentOpenId:string
	//"union_id"
	export const UserIdTypeCreateFileCommentUnionId:string
	//"user_id"
	export const UserIdTypeCreateFileCommentUserId:string
	//"open_id"
	export const UserIdTypeCreateFileVersionOpenId:string
	//"union_id"
	export const UserIdTypeCreateFileVersionUnionId:string
	//"user_id"
	export const UserIdTypeCreateFileVersionUserId:string
	//"open_id"
	export const UserIdTypeCreateShortcutFileOpenId:string
	//"union_id"
	export const UserIdTypeCreateShortcutFileUnionId:string
	//"user_id"
	export const UserIdTypeCreateShortcutFileUserId:string
	//"open_id"
	export const UserIdTypeDeleteFileVersionOpenId:string
	//"union_id"
	export const UserIdTypeDeleteFileVersionUnionId:string
	//"user_id"
	export const UserIdTypeDeleteFileVersionUserId:string
	//"open_id"
	export const UserIdTypeGetFileCommentOpenId:string
	//"union_id"
	export const UserIdTypeGetFileCommentUnionId:string
	//"user_id"
	export const UserIdTypeGetFileCommentUserId:string
	//"open_id"
	export const UserIdTypeGetFileVersionOpenId:string
	//"union_id"
	export const UserIdTypeGetFileVersionUnionId:string
	//"user_id"
	export const UserIdTypeGetFileVersionUserId:string
	//"open_id"
	export const UserIdTypeListFileCommentOpenId:string
	//"open_id"
	export const UserIdTypeListFileCommentReplyOpenId:string
	//"union_id"
	export const UserIdTypeListFileCommentReplyUnionId:string
	//"user_id"
	export const UserIdTypeListFileCommentReplyUserId:string
	//"union_id"
	export const UserIdTypeListFileCommentUnionId:string
	//"user_id"
	export const UserIdTypeListFileCommentUserId:string
	//"open_id"
	export const UserIdTypeListFileOpenId:string
	//"union_id"
	export const UserIdTypeListFileUnionId:string
	//"user_id"
	export const UserIdTypeListFileUserId:string
	//"open_id"
	export const UserIdTypeListFileVersionOpenId:string
	//"union_id"
	export const UserIdTypeListFileVersionUnionId:string
	//"user_id"
	export const UserIdTypeListFileVersionUserId:string
	//"open_id"
	export const UserIdTypeOpenId:string
	//"union_id"
	export const UserIdTypeUnionId:string
	//"open_id"
	export const UserIdTypeUpdateFileCommentReplyOpenId:string
	//"union_id"
	export const UserIdTypeUpdateFileCommentReplyUnionId:string
	//"user_id"
	export const UserIdTypeUpdateFileCommentReplyUserId:string
	//"user_id"
	export const UserIdTypeUserId:string
	export interface Version extends Struct<Version>{

			name:Ref<string>
			version:Ref<string>
			parentToken:Ref<string>
			ownerId:Ref<string>
			creatorId:Ref<string>
			createTime:Ref<string>
			updateTime:Ref<string>
			status:Ref<string>
			objType:Ref<string>
			parentType:Ref<string>
	}
	export interface VersionBuilder extends Struct<VersionBuilder>{

			name(name:string):Ref<VersionBuilder>
			version(version:string):Ref<VersionBuilder>
			parentToken(parentToken:string):Ref<VersionBuilder>
			ownerId(ownerId:string):Ref<VersionBuilder>
			creatorId(creatorId:string):Ref<VersionBuilder>
			createTime(createTime:string):Ref<VersionBuilder>
			updateTime(updateTime:string):Ref<VersionBuilder>
			status(status:string):Ref<VersionBuilder>
			objType(objType:string):Ref<VersionBuilder>
			parentType(parentType:string):Ref<VersionBuilder>
			build():Ref<Version>
	}
	//"open_id"
	export const ViewerIdTypeOpenId:string
	//"union_id"
	export const ViewerIdTypeUnionId:string
	//"user_id"
	export const ViewerIdTypeUserId:string
	export function emptyFileUploadInfo():FileUploadInfo
	export function emptyRefFileUploadInfo():Ref<FileUploadInfo>
	export function refOfFileUploadInfo(x:FileUploadInfo,v:Ref<FileUploadInfo>)
	export function unRefFileUploadInfo(v:Ref<FileUploadInfo>):FileUploadInfo
	export function emptyImportTaskMountPoint():ImportTaskMountPoint
	export function emptyRefImportTaskMountPoint():Ref<ImportTaskMountPoint>
	export function refOfImportTaskMountPoint(x:ImportTaskMountPoint,v:Ref<ImportTaskMountPoint>)
	export function unRefImportTaskMountPoint(v:Ref<ImportTaskMountPoint>):ImportTaskMountPoint
	export function emptyMeta():Meta
	export function emptyRefMeta():Ref<Meta>
	export function refOfMeta(x:Meta,v:Ref<Meta>)
	export function unRefMeta(v:Ref<Meta>):Meta
	export function emptyReferEntity():ReferEntity
	export function emptyRefReferEntity():Ref<ReferEntity>
	export function refOfReferEntity(x:ReferEntity,v:Ref<ReferEntity>)
	export function unRefReferEntity(v:Ref<ReferEntity>):ReferEntity
	export function emptyMember():Member
	export function emptyRefMember():Ref<Member>
	export function refOfMember(x:Member,v:Ref<Member>)
	export function unRefMember(v:Ref<Member>):Member
	export function emptyRequestDoc():RequestDoc
	export function emptyRefRequestDoc():Ref<RequestDoc>
	export function refOfRequestDoc(x:RequestDoc,v:Ref<RequestDoc>)
	export function unRefRequestDoc(v:Ref<RequestDoc>):RequestDoc
	export function emptyDepartmentId():DepartmentId
	export function emptyRefDepartmentId():Ref<DepartmentId>
	export function refOfDepartmentId(x:DepartmentId,v:Ref<DepartmentId>)
	export function unRefDepartmentId(v:Ref<DepartmentId>):DepartmentId
	export function emptyReplyElement():ReplyElement
	export function emptyRefReplyElement():Ref<ReplyElement>
	export function refOfReplyElement(x:ReplyElement,v:Ref<ReplyElement>)
	export function unRefReplyElement(v:Ref<ReplyElement>):ReplyElement
	export function emptyApplyMemberRequest():ApplyMemberRequest
	export function emptyRefApplyMemberRequest():Ref<ApplyMemberRequest>
	export function refOfApplyMemberRequest(x:ApplyMemberRequest,v:Ref<ApplyMemberRequest>)
	export function unRefApplyMemberRequest(v:Ref<ApplyMemberRequest>):ApplyMemberRequest
	export function emptyFileComment():FileComment
	export function emptyRefFileComment():Ref<FileComment>
	export function refOfFileComment(x:FileComment,v:Ref<FileComment>)
	export function unRefFileComment(v:Ref<FileComment>):FileComment
	export function emptyFileSubscription():FileSubscription
	export function emptyRefFileSubscription():Ref<FileSubscription>
	export function refOfFileSubscription(x:FileSubscription,v:Ref<FileSubscription>)
	export function unRefFileSubscription(v:Ref<FileSubscription>):FileSubscription
	export function emptyBitableTableRecordActionFieldIdentityUser():BitableTableRecordActionFieldIdentityUser
	export function emptyRefBitableTableRecordActionFieldIdentityUser():Ref<BitableTableRecordActionFieldIdentityUser>
	export function refOfBitableTableRecordActionFieldIdentityUser(x:BitableTableRecordActionFieldIdentityUser,v:Ref<BitableTableRecordActionFieldIdentityUser>)
	export function unRefBitableTableRecordActionFieldIdentityUser(v:Ref<BitableTableRecordActionFieldIdentityUser>):BitableTableRecordActionFieldIdentityUser
	export function emptyBitableTableFieldActionValuePropertyAutoSerial():BitableTableFieldActionValuePropertyAutoSerial
	export function emptyRefBitableTableFieldActionValuePropertyAutoSerial():Ref<BitableTableFieldActionValuePropertyAutoSerial>
	export function refOfBitableTableFieldActionValuePropertyAutoSerial(x:BitableTableFieldActionValuePropertyAutoSerial,v:Ref<BitableTableFieldActionValuePropertyAutoSerial>)
	export function unRefBitableTableFieldActionValuePropertyAutoSerial(v:Ref<BitableTableFieldActionValuePropertyAutoSerial>):BitableTableFieldActionValuePropertyAutoSerial
	export function emptyMedia():Media
	export function emptyRefMedia():Ref<Media>
	export function refOfMedia(x:Media,v:Ref<Media>)
	export function unRefMedia(v:Ref<Media>):Media
	export function emptyUploadInfo():UploadInfo
	export function emptyRefUploadInfo():Ref<UploadInfo>
	export function refOfUploadInfo(x:UploadInfo,v:Ref<UploadInfo>)
	export function unRefUploadInfo(v:Ref<UploadInfo>):UploadInfo
	export function emptyUploadAllMediaReqBody():UploadAllMediaReqBody
	export function emptyRefUploadAllMediaReqBody():Ref<UploadAllMediaReqBody>
	export function refOfUploadAllMediaReqBody(x:UploadAllMediaReqBody,v:Ref<UploadAllMediaReqBody>)
	export function unRefUploadAllMediaReqBody(v:Ref<UploadAllMediaReqBody>):UploadAllMediaReqBody
	export function emptyDownloadMediaResp():DownloadMediaResp
	export function emptyRefDownloadMediaResp():Ref<DownloadMediaResp>
	export function refOfDownloadMediaResp(x:DownloadMediaResp,v:Ref<DownloadMediaResp>)
	export function unRefDownloadMediaResp(v:Ref<DownloadMediaResp>):DownloadMediaResp
	export function emptyFile():File
	export function emptyRefFile():Ref<File>
	export function refOfFile(x:File,v:Ref<File>)
	export function unRefFile(v:Ref<File>):File
	export function emptyBaseMember():BaseMember
	export function emptyRefBaseMember():Ref<BaseMember>
	export function refOfBaseMember(x:BaseMember,v:Ref<BaseMember>)
	export function unRefBaseMember(v:Ref<BaseMember>):BaseMember
	export function emptyBitableTableRecordActionField():BitableTableRecordActionField
	export function emptyRefBitableTableRecordActionField():Ref<BitableTableRecordActionField>
	export function refOfBitableTableRecordActionField(x:BitableTableRecordActionField,v:Ref<BitableTableRecordActionField>)
	export function unRefBitableTableRecordActionField(v:Ref<BitableTableRecordActionField>):BitableTableRecordActionField
	export function emptyUserId():UserId
	export function emptyRefUserId():Ref<UserId>
	export function refOfUserId(x:UserId,v:Ref<UserId>)
	export function unRefUserId(v:Ref<UserId>):UserId
	export function emptyDocsLink():DocsLink
	export function emptyRefDocsLink():Ref<DocsLink>
	export function refOfDocsLink(x:DocsLink,v:Ref<DocsLink>)
	export function unRefDocsLink(v:Ref<DocsLink>):DocsLink
	export function emptyUploadAllMediaResp():UploadAllMediaResp
	export function emptyRefUploadAllMediaResp():Ref<UploadAllMediaResp>
	export function refOfUploadAllMediaResp(x:UploadAllMediaResp,v:Ref<UploadAllMediaResp>)
	export function unRefUploadAllMediaResp(v:Ref<UploadAllMediaResp>):UploadAllMediaResp
	export function emptyFileCommentReply():FileCommentReply
	export function emptyRefFileCommentReply():Ref<FileCommentReply>
	export function refOfFileCommentReply(x:FileCommentReply,v:Ref<FileCommentReply>)
	export function unRefFileCommentReply(v:Ref<FileCommentReply>):FileCommentReply
	export function emptyTokenType():TokenType
	export function emptyRefTokenType():Ref<TokenType>
	export function refOfTokenType(x:TokenType,v:Ref<TokenType>)
	export function unRefTokenType(v:Ref<TokenType>):TokenType
	export function emptyVersion():Version
	export function emptyRefVersion():Ref<Version>
	export function refOfVersion(x:Version,v:Ref<Version>)
	export function unRefVersion(v:Ref<Version>):Version
	export function emptyUploadAllMediaRespData():UploadAllMediaRespData
	export function emptyRefUploadAllMediaRespData():Ref<UploadAllMediaRespData>
	export function refOfUploadAllMediaRespData(x:UploadAllMediaRespData,v:Ref<UploadAllMediaRespData>)
	export function unRefUploadAllMediaRespData(v:Ref<UploadAllMediaRespData>):UploadAllMediaRespData
	export function emptyBitableTableFieldActionValueProperty():BitableTableFieldActionValueProperty
	export function emptyRefBitableTableFieldActionValueProperty():Ref<BitableTableFieldActionValueProperty>
	export function refOfBitableTableFieldActionValueProperty(x:BitableTableFieldActionValueProperty,v:Ref<BitableTableFieldActionValueProperty>)
	export function unRefBitableTableFieldActionValueProperty(v:Ref<BitableTableFieldActionValueProperty>):BitableTableFieldActionValueProperty
	export function emptyImportTask():ImportTask
	export function emptyRefImportTask():Ref<ImportTask>
	export function refOfImportTask(x:ImportTask,v:Ref<ImportTask>)
	export function unRefImportTask(v:Ref<ImportTask>):ImportTask
	export function emptyOwner():Owner
	export function emptyRefOwner():Ref<Owner>
	export function refOfOwner(x:Owner,v:Ref<Owner>)
	export function unRefOwner(v:Ref<Owner>):Owner
	export function emptyTextRun():TextRun
	export function emptyRefTextRun():Ref<TextRun>
	export function refOfTextRun(x:TextRun,v:Ref<TextRun>)
	export function unRefTextRun(v:Ref<TextRun>):TextRun
	export function emptyMetaRequest():MetaRequest
	export function emptyRefMetaRequest():Ref<MetaRequest>
	export function refOfMetaRequest(x:MetaRequest,v:Ref<MetaRequest>)
	export function unRefMetaRequest(v:Ref<MetaRequest>):MetaRequest
	export function emptyUploadAllMediaReq():UploadAllMediaReq
	export function emptyRefUploadAllMediaReq():Ref<UploadAllMediaReq>
	export function refOfUploadAllMediaReq(x:UploadAllMediaReq,v:Ref<UploadAllMediaReq>)
	export function unRefUploadAllMediaReq(v:Ref<UploadAllMediaReq>):UploadAllMediaReq
	export function emptyBitableTableFieldAction():BitableTableFieldAction
	export function emptyRefBitableTableFieldAction():Ref<BitableTableFieldAction>
	export function refOfBitableTableFieldAction(x:BitableTableFieldAction,v:Ref<BitableTableFieldAction>)
	export function unRefBitableTableFieldAction(v:Ref<BitableTableFieldAction>):BitableTableFieldAction
	export function emptyBitableTableFieldActionValue():BitableTableFieldActionValue
	export function emptyRefBitableTableFieldActionValue():Ref<BitableTableFieldActionValue>
	export function refOfBitableTableFieldActionValue(x:BitableTableFieldActionValue,v:Ref<BitableTableFieldActionValue>)
	export function unRefBitableTableFieldActionValue(v:Ref<BitableTableFieldActionValue>):BitableTableFieldActionValue
	export function emptyDriveService():DriveService
	export function emptyRefDriveService():Ref<DriveService>
	export function refOfDriveService(x:DriveService,v:Ref<DriveService>)
	export function unRefDriveService(v:Ref<DriveService>):DriveService
	export function emptyFileStatistics():FileStatistics
	export function emptyRefFileStatistics():Ref<FileStatistics>
	export function refOfFileStatistics(x:FileStatistics,v:Ref<FileStatistics>)
	export function unRefFileStatistics(v:Ref<FileStatistics>):FileStatistics
	export function emptyFileViewRecord():FileViewRecord
	export function emptyRefFileViewRecord():Ref<FileViewRecord>
	export function refOfFileViewRecord(x:FileViewRecord,v:Ref<FileViewRecord>)
	export function unRefFileViewRecord(v:Ref<FileViewRecord>):FileViewRecord
	export function emptyFileSearch():FileSearch
	export function emptyRefFileSearch():Ref<FileSearch>
	export function refOfFileSearch(x:FileSearch,v:Ref<FileSearch>)
	export function unRefFileSearch(v:Ref<FileSearch>):FileSearch
	export function emptyBitableTableRecordAction():BitableTableRecordAction
	export function emptyRefBitableTableRecordAction():Ref<BitableTableRecordAction>
	export function refOfBitableTableRecordAction(x:BitableTableRecordAction,v:Ref<BitableTableRecordAction>)
	export function unRefBitableTableRecordAction(v:Ref<BitableTableRecordAction>):BitableTableRecordAction
	export function emptyDownloadMediaReq():DownloadMediaReq
	export function emptyRefDownloadMediaReq():Ref<DownloadMediaReq>
	export function refOfDownloadMediaReq(x:DownloadMediaReq,v:Ref<DownloadMediaReq>)
	export function unRefDownloadMediaReq(v:Ref<DownloadMediaReq>):DownloadMediaReq
	export function emptyProperty():Property
	export function emptyRefProperty():Ref<Property>
	export function refOfProperty(x:Property,v:Ref<Property>)
	export function unRefProperty(v:Ref<Property>):Property
	export function emptyPerson():Person
	export function emptyRefPerson():Ref<Person>
	export function refOfPerson(x:Person,v:Ref<Person>)
	export function unRefPerson(v:Ref<Person>):Person
	export function emptyBitableTableRecordActionFieldIdentity():BitableTableRecordActionFieldIdentity
	export function emptyRefBitableTableRecordActionFieldIdentity():Ref<BitableTableRecordActionFieldIdentity>
	export function refOfBitableTableRecordActionFieldIdentity(x:BitableTableRecordActionFieldIdentity,v:Ref<BitableTableRecordActionFieldIdentity>)
	export function unRefBitableTableRecordActionFieldIdentity(v:Ref<BitableTableRecordActionFieldIdentity>):BitableTableRecordActionFieldIdentity
	export function emptyExportTask():ExportTask
	export function emptyRefExportTask():Ref<ExportTask>
	export function refOfExportTask(x:ExportTask,v:Ref<ExportTask>)
	export function unRefExportTask(v:Ref<ExportTask>):ExportTask
	export function emptyMetaFailed():MetaFailed
	export function emptyRefMetaFailed():Ref<MetaFailed>
	export function refOfMetaFailed(x:MetaFailed,v:Ref<MetaFailed>)
	export function unRefMetaFailed(v:Ref<MetaFailed>):MetaFailed
	export function emptyPermissionPublicRequest():PermissionPublicRequest
	export function emptyRefPermissionPublicRequest():Ref<PermissionPublicRequest>
	export function refOfPermissionPublicRequest(x:PermissionPublicRequest,v:Ref<PermissionPublicRequest>)
	export function unRefPermissionPublicRequest(v:Ref<PermissionPublicRequest>):PermissionPublicRequest
	export function emptyBitableTableFieldActionValuePropertyOption():BitableTableFieldActionValuePropertyOption
	export function emptyRefBitableTableFieldActionValuePropertyOption():Ref<BitableTableFieldActionValuePropertyOption>
	export function refOfBitableTableFieldActionValuePropertyOption(x:BitableTableFieldActionValuePropertyOption,v:Ref<BitableTableFieldActionValuePropertyOption>)
	export function unRefBitableTableFieldActionValuePropertyOption(v:Ref<BitableTableFieldActionValuePropertyOption>):BitableTableFieldActionValuePropertyOption
	export function emptyMediaUploadInfo():MediaUploadInfo
	export function emptyRefMediaUploadInfo():Ref<MediaUploadInfo>
	export function refOfMediaUploadInfo(x:MediaUploadInfo,v:Ref<MediaUploadInfo>)
	export function unRefMediaUploadInfo(v:Ref<MediaUploadInfo>):MediaUploadInfo
	export function emptyPermissionPublic():PermissionPublic
	export function emptyRefPermissionPublic():Ref<PermissionPublic>
	export function refOfPermissionPublic(x:PermissionPublic,v:Ref<PermissionPublic>)
	export function unRefPermissionPublic(v:Ref<PermissionPublic>):PermissionPublic
	export function emptyReplyContent():ReplyContent
	export function emptyRefReplyContent():Ref<ReplyContent>
	export function refOfReplyContent(x:ReplyContent,v:Ref<ReplyContent>)
	export function unRefReplyContent(v:Ref<ReplyContent>):ReplyContent
	export function emptyReplyList():ReplyList
	export function emptyRefReplyList():Ref<ReplyList>
	export function refOfReplyList(x:ReplyList,v:Ref<ReplyList>)
	export function unRefReplyList(v:Ref<ReplyList>):ReplyList
	export function emptyTmpDownloadUrl():TmpDownloadUrl
	export function emptyRefTmpDownloadUrl():Ref<TmpDownloadUrl>
	export function refOfTmpDownloadUrl(x:TmpDownloadUrl,v:Ref<TmpDownloadUrl>)
	export function unRefTmpDownloadUrl(v:Ref<TmpDownloadUrl>):TmpDownloadUrl
	export function emptyShortcutInfo():ShortcutInfo
	export function emptyRefShortcutInfo():Ref<ShortcutInfo>
	export function refOfShortcutInfo(x:ShortcutInfo,v:Ref<ShortcutInfo>)
	export function unRefShortcutInfo(v:Ref<ShortcutInfo>):ShortcutInfo
	export function emptyBitableTableFieldActionValuePropertyAutoSerialOptions():BitableTableFieldActionValuePropertyAutoSerialOptions
	export function emptyRefBitableTableFieldActionValuePropertyAutoSerialOptions():Ref<BitableTableFieldActionValuePropertyAutoSerialOptions>
	export function refOfBitableTableFieldActionValuePropertyAutoSerialOptions(x:BitableTableFieldActionValuePropertyAutoSerialOptions,v:Ref<BitableTableFieldActionValuePropertyAutoSerialOptions>)
	export function unRefBitableTableFieldActionValuePropertyAutoSerialOptions(v:Ref<BitableTableFieldActionValuePropertyAutoSerialOptions>):BitableTableFieldActionValuePropertyAutoSerialOptions
	export function emptyReplyExtra():ReplyExtra
	export function emptyRefReplyExtra():Ref<ReplyExtra>
	export function refOfReplyExtra(x:ReplyExtra,v:Ref<ReplyExtra>)
	export function unRefReplyExtra(v:Ref<ReplyExtra>):ReplyExtra
	export function emptyCollaborator():Collaborator
	export function emptyRefCollaborator():Ref<Collaborator>
	export function refOfCollaborator(x:Collaborator,v:Ref<Collaborator>)
	export function unRefCollaborator(v:Ref<Collaborator>):Collaborator
}