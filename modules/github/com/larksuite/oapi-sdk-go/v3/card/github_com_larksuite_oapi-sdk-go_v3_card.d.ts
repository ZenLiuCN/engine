// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'github.com/larksuite/oapi-sdk-go/v3/card'{

	// @ts-ignore
	import * as larkevent from 'github.com/larksuite/oapi-sdk-go/v3/event'
	// @ts-ignore
	import * as json from 'golang/encoding/json'
	// @ts-ignore
	import * as larkcore from 'github.com/larksuite/oapi-sdk-go/v3/core'
	// @ts-ignore
	import * as context from 'golang/context'
	// @ts-ignore
	import type {Alias,Nothing,Ref,map,Struct,error,int,bool} from 'go'
	export interface CardAction extends Struct<CardAction>,json.Token{

			eventReq:Ref<larkevent.EventReq>
			openID:string
			userID:string
			openMessageID:string
			openChatId:string
			tenantKey:string
			token:string
			timezone:string
			challenge:string
			type:string
			action:Ref<Struct<{
			
				value:map<string,any>
				tag:string
				option:string
				timezone:string
			}>>
	}
	export interface CardActionBody extends json.Token,Struct<CardActionBody>{

			cardAction:Ref<CardAction>
			challenge:string
			type:string
	}
	export interface CardActionHandler extends Struct<CardActionHandler>,larkevent.IReqHandler,json.Token{

			config:Ref<larkcore.Config>
			handle(ctx:context.Context,req:Ref<larkevent.EventReq>):Ref<larkevent.EventResp>
			logger():larkcore.Logger
			initConfig(...options:larkevent.OptionFunc[]):void
			event():any
			authByChallenge(ctx:context.Context,cardAction:Ref<CardAction>):Ref<larkevent.EventResp>
			doHandle(ctx:context.Context,cardAction:Ref<CardAction>):Ref<larkevent.EventResp>
			verifySign(ctx:context.Context,req:Ref<larkevent.EventReq>)/*error*/
	}
	export interface CustomResp extends Struct<CustomResp>,json.Token{

			statusCode:int
			body:map<string,any>
	}
	export interface CustomToastBody extends Struct<CustomToastBody>,json.Token{

			content:string
			i18n:Ref<I18n>
	}
	export interface I18n extends Struct<I18n>,json.Token{

			zhCn:string
			enCn:string
			jaJp:string
	}
	export interface MessageCard extends Struct<MessageCard>,json.Token{

			config_:Ref<MessageCardConfig>
			header_:Ref<MessageCardHeader>
			elements_:MessageCardElement[]
			i18nElements_:Ref<MessageCardI18nElements>
			cardLink_:Ref<MessageCardURL>
			string():string
			config(config:Ref<MessageCardConfig>):Ref<MessageCard>
			header(header:Ref<MessageCardHeader>):Ref<MessageCard>
			elements(elements:MessageCardElement[]):Ref<MessageCard>
			i18nElements(i18nElements:Ref<MessageCardI18nElements>):Ref<MessageCard>
			cardLink(cardLink:Ref<MessageCardURL>):Ref<MessageCard>
			build():Ref<MessageCard>
			json():string
	}
	export interface MessageCardAction extends json.Token,Struct<MessageCardAction>,MessageCardElement,json.Marshaler{

			actions_:MessageCardActionElement[]
			layout_:Ref<MessageCardActionLayout>
			actions(actions:MessageCardActionElement[]):Ref<MessageCardAction>
			layout(layout:Ref<MessageCardActionLayout>):Ref<MessageCardAction>
			build():Ref<MessageCardAction>
			tag():string
			marshalJSON():Uint8Array
	}
	export interface MessageCardActionConfirm extends Struct<MessageCardActionConfirm>,json.Token{

			title_:Ref<MessageCardPlainText>
			text_:Ref<MessageCardPlainText>
			title(title:Ref<MessageCardPlainText>):Ref<MessageCardActionConfirm>
			text(text:Ref<MessageCardPlainText>):Ref<MessageCardActionConfirm>
			build():Ref<MessageCardActionConfirm>
	}
	export interface MessageCardActionElement extends MessageCardElement{

			isAction():void
	}
	export interface MessageCardActionLayout extends string{

	ptr():Ref<MessageCardActionLayout>
	}
	export const MessageCardActionLayoutBisected:MessageCardActionLayout
	export const MessageCardActionLayoutFlow:MessageCardActionLayout
	export const MessageCardActionLayoutTrisection:MessageCardActionLayout
	export interface MessageCardButtonType extends string{

	ptr():Ref<MessageCardButtonType>
	}
	export const MessageCardButtonTypeDanger:MessageCardButtonType
	export const MessageCardButtonTypeDefault:MessageCardButtonType
	export const MessageCardButtonTypePrimary:MessageCardButtonType
	export interface MessageCardConfig extends Struct<MessageCardConfig>,json.Token{

			enableForward_:Ref<bool>
			updateMulti_:Ref<bool>
			wideScreenMode_:Ref<bool>
			enableForward(enableForward:bool):Ref<MessageCardConfig>
			updateMulti(updateMulti:bool):Ref<MessageCardConfig>
			wideScreenMode(wideScreenMode:bool):Ref<MessageCardConfig>
			build():Ref<MessageCardConfig>
	}
	export interface MessageCardDiv extends Struct<MessageCardDiv>,json.Marshaler,json.Token,MessageCardElement{

			text_:MessageCardText
			fields_:Ref<MessageCardField>[]
			extra_:MessageCardExtraElement
			text(text:MessageCardText):Ref<MessageCardDiv>
			fields(fields:Ref<MessageCardField>[]):Ref<MessageCardDiv>
			extra(extra:MessageCardExtraElement):Ref<MessageCardDiv>
			build():Ref<MessageCardDiv>
			tag():string
			marshalJSON():Uint8Array
	}
	export interface MessageCardElement{

			marshalJSON():Uint8Array
			tag():string
	}
	export interface MessageCardEmbedButton extends Struct<MessageCardEmbedButton>,json.Marshaler,json.Token,MessageCardActionElement,MessageCardExtraElement{

			text_:MessageCardText
			urL_:Ref<string>
			multiURL_:Ref<MessageCardURL>
			type_:Ref<MessageCardButtonType>
			value_:map<string,any>
			confirm_:Ref<MessageCardActionConfirm>
			confirm(confirm:Ref<MessageCardActionConfirm>):Ref<MessageCardEmbedButton>
			value(value:map<string,any>):Ref<MessageCardEmbedButton>
			type(type_:MessageCardButtonType):Ref<MessageCardEmbedButton>
			text(text:MessageCardText):Ref<MessageCardEmbedButton>
			url(url:string):Ref<MessageCardEmbedButton>
			multiUrl(multiURL:Ref<MessageCardURL>):Ref<MessageCardEmbedButton>
			build():Ref<MessageCardEmbedButton>
			tag():string
			marshalJSON():Uint8Array
			isAction():void
			isExtra():void
	}
	export interface MessageCardEmbedDatePicker extends Struct<MessageCardEmbedDatePicker>,MessageCardExtraElement,json.Marshaler,json.Token,MessageCardActionElement{

			messageCardEmbedDatePickerBase:Ref<MessageCardEmbedDatePickerBase>
			messageCardEmbedDatePicker(base:Ref<MessageCardEmbedDatePickerBase>):Ref<MessageCardEmbedDatePicker>
			tag():string
			marshalJSON():Uint8Array
	}
	export interface MessageCardEmbedDatePickerBase extends Struct<MessageCardEmbedDatePickerBase>,json.Token{

			initialDate_:Ref<string>
			initialTime_:Ref<string>
			initialDatetime_:Ref<string>
			placeholder_:Ref<MessageCardPlainText>
			value_:map<string,any>
			confirm_:Ref<MessageCardActionConfirm>
			initialDate(initialDate:string):Ref<MessageCardEmbedDatePickerBase>
			initialTime(initialTime:string):Ref<MessageCardEmbedDatePickerBase>
			initialDatetime(initialDatetime:string):Ref<MessageCardEmbedDatePickerBase>
			placeholder(placeholder:Ref<MessageCardPlainText>):Ref<MessageCardEmbedDatePickerBase>
			value(value:map<string,any>):Ref<MessageCardEmbedDatePickerBase>
			confirm(confirm:Ref<MessageCardActionConfirm>):Ref<MessageCardEmbedDatePickerBase>
			build():Ref<MessageCardEmbedDatePickerBase>
			isAction():void
			isExtra():void
	}
	export interface MessageCardEmbedImage extends json.Token,MessageCardExtraElement,MessageCardNoteElement,Struct<MessageCardEmbedImage>,json.Marshaler{

			alt_:Ref<MessageCardPlainText>
			imgKey_:string
			mode_:Ref<MessageCardImageModel>
			preview_:Ref<bool>
			alt(alt:Ref<MessageCardPlainText>):Ref<MessageCardEmbedImage>
			imgKey(imgKey:string):Ref<MessageCardEmbedImage>
			mode(mode:Ref<MessageCardImageModel>):Ref<MessageCardEmbedImage>
			preview(preview:bool):Ref<MessageCardEmbedImage>
			build():Ref<MessageCardEmbedImage>
			tag():string
			isExtra():void
			isNote():void
			marshalJSON():Uint8Array
	}
	export interface MessageCardEmbedOverflow extends MessageCardExtraElement,Struct<MessageCardEmbedOverflow>,json.Marshaler,json.Token,MessageCardActionElement{

			options_:Ref<MessageCardEmbedSelectOption>[]
			value_:map<string,any>
			confirm_:Ref<MessageCardActionConfirm>
			options(options:Ref<MessageCardEmbedSelectOption>[]):Ref<MessageCardEmbedOverflow>
			value(value:map<string,any>):Ref<MessageCardEmbedOverflow>
			confirm(confirm:Ref<MessageCardActionConfirm>):Ref<MessageCardEmbedOverflow>
			build():Ref<MessageCardEmbedOverflow>
			tag():string
			marshalJSON():Uint8Array
			isAction():void
			isExtra():void
	}
	export interface MessageCardEmbedPickerDatetime extends MessageCardExtraElement,Struct<MessageCardEmbedPickerDatetime>,json.Marshaler,json.Token,MessageCardActionElement{

			messageCardEmbedDatePickerBase:Ref<MessageCardEmbedDatePickerBase>
			messageCardEmbedPickerDatetime(base:Ref<MessageCardEmbedDatePickerBase>):Ref<MessageCardEmbedPickerDatetime>
			build():Ref<MessageCardEmbedPickerDatetime>
			tag():string
			marshalJSON():Uint8Array
	}
	export interface MessageCardEmbedPickerTime extends Struct<MessageCardEmbedPickerTime>,json.Marshaler,json.Token,MessageCardActionElement,MessageCardExtraElement{

			messageCardEmbedDatePickerBase:Ref<MessageCardEmbedDatePickerBase>
			messageCardEmbedPickerTime(base:Ref<MessageCardEmbedDatePickerBase>):Ref<MessageCardEmbedPickerTime>
			build():Ref<MessageCardEmbedPickerTime>
			tag():string
			marshalJSON():Uint8Array
	}
	export interface MessageCardEmbedSelectMenuBase extends Struct<MessageCardEmbedSelectMenuBase>,json.Token{

			placeholder_:Ref<MessageCardPlainText>
			initialOption_:string
			options_:Ref<MessageCardEmbedSelectOption>[]
			value_:map<string,any>
			confirm_:Ref<MessageCardActionConfirm>
			placeholder(placeholder:Ref<MessageCardPlainText>):Ref<MessageCardEmbedSelectMenuBase>
			initialOption(initialOption:string):Ref<MessageCardEmbedSelectMenuBase>
			options(options:Ref<MessageCardEmbedSelectOption>[]):Ref<MessageCardEmbedSelectMenuBase>
			value(value:map<string,any>):Ref<MessageCardEmbedSelectMenuBase>
			confirm(confirm:Ref<MessageCardActionConfirm>):Ref<MessageCardEmbedSelectMenuBase>
			build():Ref<MessageCardEmbedSelectMenuBase>
			isAction():void
			isExtra():void
	}
	export interface MessageCardEmbedSelectMenuPerson extends Struct<MessageCardEmbedSelectMenuPerson>,json.Marshaler,json.Token,MessageCardActionElement,MessageCardExtraElement{

			messageCardEmbedSelectMenuBase:Ref<MessageCardEmbedSelectMenuBase>
			messageCardEmbedSelectMenu(messageCardEmbedSelectMenuBase:Ref<MessageCardEmbedSelectMenuBase>):Ref<MessageCardEmbedSelectMenuPerson>
			build(messageCardEmbedSelectMenuBase:Ref<MessageCardEmbedSelectMenuBase>):Ref<MessageCardEmbedSelectMenuPerson>
			tag():string
			marshalJSON():Uint8Array
	}
	export interface MessageCardEmbedSelectMenuStatic extends json.Token,Struct<MessageCardEmbedSelectMenuStatic>,MessageCardActionElement,MessageCardExtraElement,json.Marshaler{

			messageCardEmbedSelectMenuBase:Ref<MessageCardEmbedSelectMenuBase>
			messageCardEmbedSelectMenuStatic(base:Ref<MessageCardEmbedSelectMenuBase>):Ref<MessageCardEmbedSelectMenuStatic>
			build():Ref<MessageCardEmbedSelectMenuStatic>
			tag():string
			marshalJSON():Uint8Array
	}
	export interface MessageCardEmbedSelectOption extends Struct<MessageCardEmbedSelectOption>,json.Token{

			text_:Ref<MessageCardPlainText>
			value_:string
			urL_:Ref<string>
			multiURL_:Ref<MessageCardURL>
			type_:Ref<MessageCardButtonType>
			text(text:Ref<MessageCardPlainText>):Ref<MessageCardEmbedSelectOption>
			value(value:string):Ref<MessageCardEmbedSelectOption>
			url(url:string):Ref<MessageCardEmbedSelectOption>
			multiUrl(multiUrl:Ref<MessageCardURL>):Ref<MessageCardEmbedSelectOption>
			type(type_:Ref<MessageCardButtonType>):Ref<MessageCardEmbedSelectOption>
			build():Ref<MessageCardEmbedSelectOption>
	}
	export interface MessageCardExtraElement extends MessageCardElement{

			isExtra():void
	}
	export interface MessageCardField extends Struct<MessageCardField>,json.Token{

			isShort_:bool
			text_:MessageCardText
			isShort(isShort:bool):Ref<MessageCardField>
			text(text:MessageCardText):Ref<MessageCardField>
			build():Ref<MessageCardField>
	}
	export interface MessageCardHeader extends json.Token,Struct<MessageCardHeader>{

			template_:Ref<string>
			title_:Ref<MessageCardPlainText>
			template(template:string):Ref<MessageCardHeader>
			title(title:Ref<MessageCardPlainText>):Ref<MessageCardHeader>
			build():Ref<MessageCardHeader>
	}
	export interface MessageCardHr extends Alias<Nothing>{

			build():Ref<MessageCardHr>
			tag():string
			marshalJSON():Uint8Array
	}
	export interface MessageCardI18nElements extends Struct<MessageCardI18nElements>,json.Token{

			zhCN_:MessageCardElement[]
			enUS_:MessageCardElement[]
			jaJP_:MessageCardElement[]
			zhCN(zhCn:MessageCardElement[]):Ref<MessageCardI18nElements>
			enUS(enUS:MessageCardElement[]):Ref<MessageCardI18nElements>
			jaJP(jaJP:MessageCardElement[]):Ref<MessageCardI18nElements>
			build():Ref<MessageCardI18nElements>
	}
	export interface MessageCardImage extends Struct<MessageCardImage>,MessageCardElement,json.Marshaler,json.Token{

			alt_:Ref<MessageCardPlainText>
			title_:MessageCardText
			imgKey_:string
			customWidth_:Ref<int>
			compactWidth_:Ref<bool>
			mode_:Ref<MessageCardImageModel>
			preview_:Ref<bool>
			preview(preview:bool):Ref<MessageCardImage>
			alt(alt:Ref<MessageCardPlainText>):Ref<MessageCardImage>
			title(title:MessageCardText):Ref<MessageCardImage>
			imgKey(imgKey:string):Ref<MessageCardImage>
			customWidth(customWidth:int):Ref<MessageCardImage>
			compactWidth(compactWidth:bool):Ref<MessageCardImage>
			mode(mode:MessageCardImageModel):Ref<MessageCardImage>
			build():Ref<MessageCardImage>
			tag():string
			marshalJSON():Uint8Array
	}
	export interface MessageCardImageModel extends string{

	ptr():Ref<MessageCardImageModel>
	}
	export const MessageCardImageModelCropCenter:MessageCardImageModel
	export const MessageCardImageModelFitHorizontal:MessageCardImageModel
	export interface MessageCardLarkMd extends json.Token,MessageCardExtraElement,MessageCardNoteElement,Struct<MessageCardLarkMd>,MessageCardText,json.Marshaler{

			content_:string
			content(content:string):Ref<MessageCardLarkMd>
			build():Ref<MessageCardLarkMd>
			tag():string
			marshalJSON():Uint8Array
			text():string
			isExtra():void
			isNote():void
	}
	export interface MessageCardMarkdown extends json.Marshaler,json.Token,MessageCardElement,Struct<MessageCardMarkdown>{

			content_:string
			href_:map<string,Ref<MessageCardURL>>
			content(content:string):Ref<MessageCardMarkdown>
			href(href:map<string,Ref<MessageCardURL>>):Ref<MessageCardMarkdown>
			build():Ref<MessageCardMarkdown>
			tag():string
			marshalJSON():Uint8Array
	}
	export interface MessageCardNote extends json.Token,Struct<MessageCardNote>,MessageCardElement,json.Marshaler{

			elements_:MessageCardNoteElement[]
			elements(elements:MessageCardNoteElement[]):Ref<MessageCardNote>
			build():Ref<MessageCardNote>
			tag():string
			marshalJSON():Uint8Array
	}
	export interface MessageCardNoteElement extends MessageCardElement{

			isNote():void
	}
	export interface MessageCardPlainText extends Struct<MessageCardPlainText>,json.Marshaler,json.Token,MessageCardExtraElement,MessageCardNoteElement,MessageCardText{

			content_:string
			lines_:Ref<int>
			i18n_:Ref<MessageCardPlainTextI18n>
			content(content:string):Ref<MessageCardPlainText>
			lines(lines:int):Ref<MessageCardPlainText>
			i18n(i18n:Ref<MessageCardPlainTextI18n>):Ref<MessageCardPlainText>
			build():Ref<MessageCardPlainText>
			tag():string
			marshalJSON():Uint8Array
			text():string
			isExtra():void
			isNote():void
	}
	export interface MessageCardPlainTextI18n extends Struct<MessageCardPlainTextI18n>,json.Token{

			zhCN_:string
			enUS_:string
			jaJP_:string
			zhCN(zhCn:string):Ref<MessageCardPlainTextI18n>
			enUS(enUs:string):Ref<MessageCardPlainTextI18n>
			jaJP(jaJp:string):Ref<MessageCardPlainTextI18n>
			build():Ref<MessageCardPlainTextI18n>
	}
	export interface MessageCardText extends MessageCardElement{

			text():string
	}
	export interface MessageCardURL extends Struct<MessageCardURL>,json.Token{

			urL_:string
			androidURL_:string
			iosurL_:string
			pcurL_:string
			url(url:string):Ref<MessageCardURL>
			androidUrl(androidUrl:string):Ref<MessageCardURL>
			ioSUrl(iOSUrl:string):Ref<MessageCardURL>
			pcUrl(pcURL:string):Ref<MessageCardURL>
			build():Ref<MessageCardURL>
	}
	export function newCardActionHandler(verificationToken:string,eventEncryptKey:string,v1:(v2:context.Context,v1:Ref<CardAction>)=>any):Ref<CardActionHandler>

	export function newMessageCard():Ref<MessageCard>

	export function newMessageCardAction():Ref<MessageCardAction>

	export function newMessageCardActionConfirm():Ref<MessageCardActionConfirm>

	export function newMessageCardConfig():Ref<MessageCardConfig>

	export function newMessageCardDiv():Ref<MessageCardDiv>

	export function newMessageCardEmbedButton():Ref<MessageCardEmbedButton>

	export function newMessageCardEmbedDatePicker():Ref<MessageCardEmbedDatePicker>

	export function newMessageCardEmbedDatePickerBase():Ref<MessageCardEmbedDatePickerBase>

	export function newMessageCardEmbedImage():Ref<MessageCardEmbedImage>

	export function newMessageCardEmbedOverflow():Ref<MessageCardEmbedOverflow>

	export function newMessageCardEmbedPickerDatetime():Ref<MessageCardEmbedPickerDatetime>

	export function newMessageCardEmbedPickerTime():Ref<MessageCardEmbedPickerTime>

	export function newMessageCardEmbedSelectMenuBase():Ref<MessageCardEmbedSelectMenuBase>

	export function newMessageCardEmbedSelectMenuPerson():Ref<MessageCardEmbedSelectMenuPerson>

	export function newMessageCardEmbedSelectMenuStatic():Ref<MessageCardEmbedSelectMenuStatic>

	export function newMessageCardEmbedSelectOption():Ref<MessageCardEmbedSelectOption>

	export function newMessageCardField():Ref<MessageCardField>

	export function newMessageCardHeader():Ref<MessageCardHeader>

	export function newMessageCardHr():Ref<MessageCardHr>

	export function newMessageCardI18nElements():Ref<MessageCardI18nElements>

	export function newMessageCardImage():Ref<MessageCardImage>

	export function newMessageCardLarkMd():Ref<MessageCardLarkMd>

	export function newMessageCardMarkdown():Ref<MessageCardMarkdown>

	export function newMessageCardNote():Ref<MessageCardNote>

	export function newMessageCardPlainText():Ref<MessageCardPlainText>

	export function newMessageCardPlainTextI18n():Ref<MessageCardPlainTextI18n>

	export function newMessageCardURL():Ref<MessageCardURL>

	export function signature(timestamp:string,nonce:string,token:string,body:string):string

	//"blue"
	export const TemplateBlue:string
	//"carmine"
	export const TemplateCarmine:string
	//"green"
	export const TemplateGreen:string
	//"grey"
	export const TemplateGrey:string
	//"indigo"
	export const TemplateIndigo:string
	//"orange"
	export const TemplateOrange:string
	//"purple"
	export const TemplatePurple:string
	//"red"
	export const TemplateRed:string
	//"turquoise"
	export const TemplateTurquoise:string
	//"violet"
	export const TemplateViolet:string
	//"wathet"
	export const TemplateWathet:string
	//"yellow"
	export const TemplateYellow:string
	export function emptyMessageCardActionConfirm():MessageCardActionConfirm
	export function emptyRefMessageCardActionConfirm():Ref<MessageCardActionConfirm>
	export function refOfMessageCardActionConfirm(x:MessageCardActionConfirm,v:Ref<MessageCardActionConfirm>)
	export function unRefMessageCardActionConfirm(v:Ref<MessageCardActionConfirm>):MessageCardActionConfirm
	export function emptyMessageCardEmbedDatePicker():MessageCardEmbedDatePicker
	export function emptyRefMessageCardEmbedDatePicker():Ref<MessageCardEmbedDatePicker>
	export function refOfMessageCardEmbedDatePicker(x:MessageCardEmbedDatePicker,v:Ref<MessageCardEmbedDatePicker>)
	export function unRefMessageCardEmbedDatePicker(v:Ref<MessageCardEmbedDatePicker>):MessageCardEmbedDatePicker
	export function emptyMessageCardImage():MessageCardImage
	export function emptyRefMessageCardImage():Ref<MessageCardImage>
	export function refOfMessageCardImage(x:MessageCardImage,v:Ref<MessageCardImage>)
	export function unRefMessageCardImage(v:Ref<MessageCardImage>):MessageCardImage
	export function emptyMessageCardNote():MessageCardNote
	export function emptyRefMessageCardNote():Ref<MessageCardNote>
	export function refOfMessageCardNote(x:MessageCardNote,v:Ref<MessageCardNote>)
	export function unRefMessageCardNote(v:Ref<MessageCardNote>):MessageCardNote
	export function emptyI18n():I18n
	export function emptyRefI18n():Ref<I18n>
	export function refOfI18n(x:I18n,v:Ref<I18n>)
	export function unRefI18n(v:Ref<I18n>):I18n
	export function emptyMessageCardAction():MessageCardAction
	export function emptyRefMessageCardAction():Ref<MessageCardAction>
	export function refOfMessageCardAction(x:MessageCardAction,v:Ref<MessageCardAction>)
	export function unRefMessageCardAction(v:Ref<MessageCardAction>):MessageCardAction
	export function emptyMessageCardField():MessageCardField
	export function emptyRefMessageCardField():Ref<MessageCardField>
	export function refOfMessageCardField(x:MessageCardField,v:Ref<MessageCardField>)
	export function unRefMessageCardField(v:Ref<MessageCardField>):MessageCardField
	export function emptyMessageCardPlainText():MessageCardPlainText
	export function emptyRefMessageCardPlainText():Ref<MessageCardPlainText>
	export function refOfMessageCardPlainText(x:MessageCardPlainText,v:Ref<MessageCardPlainText>)
	export function unRefMessageCardPlainText(v:Ref<MessageCardPlainText>):MessageCardPlainText
	export function emptyCustomResp():CustomResp
	export function emptyRefCustomResp():Ref<CustomResp>
	export function refOfCustomResp(x:CustomResp,v:Ref<CustomResp>)
	export function unRefCustomResp(v:Ref<CustomResp>):CustomResp
	export function emptyMessageCardEmbedPickerDatetime():MessageCardEmbedPickerDatetime
	export function emptyRefMessageCardEmbedPickerDatetime():Ref<MessageCardEmbedPickerDatetime>
	export function refOfMessageCardEmbedPickerDatetime(x:MessageCardEmbedPickerDatetime,v:Ref<MessageCardEmbedPickerDatetime>)
	export function unRefMessageCardEmbedPickerDatetime(v:Ref<MessageCardEmbedPickerDatetime>):MessageCardEmbedPickerDatetime
	export function emptyMessageCardHeader():MessageCardHeader
	export function emptyRefMessageCardHeader():Ref<MessageCardHeader>
	export function refOfMessageCardHeader(x:MessageCardHeader,v:Ref<MessageCardHeader>)
	export function unRefMessageCardHeader(v:Ref<MessageCardHeader>):MessageCardHeader
	export function emptyMessageCardURL():MessageCardURL
	export function emptyRefMessageCardURL():Ref<MessageCardURL>
	export function refOfMessageCardURL(x:MessageCardURL,v:Ref<MessageCardURL>)
	export function unRefMessageCardURL(v:Ref<MessageCardURL>):MessageCardURL
	export function emptyMessageCard():MessageCard
	export function emptyRefMessageCard():Ref<MessageCard>
	export function refOfMessageCard(x:MessageCard,v:Ref<MessageCard>)
	export function unRefMessageCard(v:Ref<MessageCard>):MessageCard
	export function emptyMessageCardEmbedSelectMenuPerson():MessageCardEmbedSelectMenuPerson
	export function emptyRefMessageCardEmbedSelectMenuPerson():Ref<MessageCardEmbedSelectMenuPerson>
	export function refOfMessageCardEmbedSelectMenuPerson(x:MessageCardEmbedSelectMenuPerson,v:Ref<MessageCardEmbedSelectMenuPerson>)
	export function unRefMessageCardEmbedSelectMenuPerson(v:Ref<MessageCardEmbedSelectMenuPerson>):MessageCardEmbedSelectMenuPerson
	export function emptyMessageCardMarkdown():MessageCardMarkdown
	export function emptyRefMessageCardMarkdown():Ref<MessageCardMarkdown>
	export function refOfMessageCardMarkdown(x:MessageCardMarkdown,v:Ref<MessageCardMarkdown>)
	export function unRefMessageCardMarkdown(v:Ref<MessageCardMarkdown>):MessageCardMarkdown
	export function emptyMessageCardConfig():MessageCardConfig
	export function emptyRefMessageCardConfig():Ref<MessageCardConfig>
	export function refOfMessageCardConfig(x:MessageCardConfig,v:Ref<MessageCardConfig>)
	export function unRefMessageCardConfig(v:Ref<MessageCardConfig>):MessageCardConfig
	export function emptyMessageCardEmbedSelectMenuBase():MessageCardEmbedSelectMenuBase
	export function emptyRefMessageCardEmbedSelectMenuBase():Ref<MessageCardEmbedSelectMenuBase>
	export function refOfMessageCardEmbedSelectMenuBase(x:MessageCardEmbedSelectMenuBase,v:Ref<MessageCardEmbedSelectMenuBase>)
	export function unRefMessageCardEmbedSelectMenuBase(v:Ref<MessageCardEmbedSelectMenuBase>):MessageCardEmbedSelectMenuBase
	export function emptyMessageCardEmbedImage():MessageCardEmbedImage
	export function emptyRefMessageCardEmbedImage():Ref<MessageCardEmbedImage>
	export function refOfMessageCardEmbedImage(x:MessageCardEmbedImage,v:Ref<MessageCardEmbedImage>)
	export function unRefMessageCardEmbedImage(v:Ref<MessageCardEmbedImage>):MessageCardEmbedImage
	export function emptyCustomToastBody():CustomToastBody
	export function emptyRefCustomToastBody():Ref<CustomToastBody>
	export function refOfCustomToastBody(x:CustomToastBody,v:Ref<CustomToastBody>)
	export function unRefCustomToastBody(v:Ref<CustomToastBody>):CustomToastBody
	export function emptyMessageCardEmbedDatePickerBase():MessageCardEmbedDatePickerBase
	export function emptyRefMessageCardEmbedDatePickerBase():Ref<MessageCardEmbedDatePickerBase>
	export function refOfMessageCardEmbedDatePickerBase(x:MessageCardEmbedDatePickerBase,v:Ref<MessageCardEmbedDatePickerBase>)
	export function unRefMessageCardEmbedDatePickerBase(v:Ref<MessageCardEmbedDatePickerBase>):MessageCardEmbedDatePickerBase
	export function emptyMessageCardDiv():MessageCardDiv
	export function emptyRefMessageCardDiv():Ref<MessageCardDiv>
	export function refOfMessageCardDiv(x:MessageCardDiv,v:Ref<MessageCardDiv>)
	export function unRefMessageCardDiv(v:Ref<MessageCardDiv>):MessageCardDiv
	export function emptyMessageCardEmbedButton():MessageCardEmbedButton
	export function emptyRefMessageCardEmbedButton():Ref<MessageCardEmbedButton>
	export function refOfMessageCardEmbedButton(x:MessageCardEmbedButton,v:Ref<MessageCardEmbedButton>)
	export function unRefMessageCardEmbedButton(v:Ref<MessageCardEmbedButton>):MessageCardEmbedButton
	export function emptyMessageCardEmbedSelectOption():MessageCardEmbedSelectOption
	export function emptyRefMessageCardEmbedSelectOption():Ref<MessageCardEmbedSelectOption>
	export function refOfMessageCardEmbedSelectOption(x:MessageCardEmbedSelectOption,v:Ref<MessageCardEmbedSelectOption>)
	export function unRefMessageCardEmbedSelectOption(v:Ref<MessageCardEmbedSelectOption>):MessageCardEmbedSelectOption
	export function emptyCardAction():CardAction
	export function emptyRefCardAction():Ref<CardAction>
	export function refOfCardAction(x:CardAction,v:Ref<CardAction>)
	export function unRefCardAction(v:Ref<CardAction>):CardAction
	export function emptyCardActionHandler():CardActionHandler
	export function emptyRefCardActionHandler():Ref<CardActionHandler>
	export function refOfCardActionHandler(x:CardActionHandler,v:Ref<CardActionHandler>)
	export function unRefCardActionHandler(v:Ref<CardActionHandler>):CardActionHandler
	export function emptyMessageCardEmbedOverflow():MessageCardEmbedOverflow
	export function emptyRefMessageCardEmbedOverflow():Ref<MessageCardEmbedOverflow>
	export function refOfMessageCardEmbedOverflow(x:MessageCardEmbedOverflow,v:Ref<MessageCardEmbedOverflow>)
	export function unRefMessageCardEmbedOverflow(v:Ref<MessageCardEmbedOverflow>):MessageCardEmbedOverflow
	export function emptyMessageCardLarkMd():MessageCardLarkMd
	export function emptyRefMessageCardLarkMd():Ref<MessageCardLarkMd>
	export function refOfMessageCardLarkMd(x:MessageCardLarkMd,v:Ref<MessageCardLarkMd>)
	export function unRefMessageCardLarkMd(v:Ref<MessageCardLarkMd>):MessageCardLarkMd
	export function emptyMessageCardEmbedSelectMenuStatic():MessageCardEmbedSelectMenuStatic
	export function emptyRefMessageCardEmbedSelectMenuStatic():Ref<MessageCardEmbedSelectMenuStatic>
	export function refOfMessageCardEmbedSelectMenuStatic(x:MessageCardEmbedSelectMenuStatic,v:Ref<MessageCardEmbedSelectMenuStatic>)
	export function unRefMessageCardEmbedSelectMenuStatic(v:Ref<MessageCardEmbedSelectMenuStatic>):MessageCardEmbedSelectMenuStatic
	export function emptyMessageCardI18nElements():MessageCardI18nElements
	export function emptyRefMessageCardI18nElements():Ref<MessageCardI18nElements>
	export function refOfMessageCardI18nElements(x:MessageCardI18nElements,v:Ref<MessageCardI18nElements>)
	export function unRefMessageCardI18nElements(v:Ref<MessageCardI18nElements>):MessageCardI18nElements
	export function emptyMessageCardPlainTextI18n():MessageCardPlainTextI18n
	export function emptyRefMessageCardPlainTextI18n():Ref<MessageCardPlainTextI18n>
	export function refOfMessageCardPlainTextI18n(x:MessageCardPlainTextI18n,v:Ref<MessageCardPlainTextI18n>)
	export function unRefMessageCardPlainTextI18n(v:Ref<MessageCardPlainTextI18n>):MessageCardPlainTextI18n
	export function emptyCardActionBody():CardActionBody
	export function emptyRefCardActionBody():Ref<CardActionBody>
	export function refOfCardActionBody(x:CardActionBody,v:Ref<CardActionBody>)
	export function unRefCardActionBody(v:Ref<CardActionBody>):CardActionBody
	export function emptyMessageCardEmbedPickerTime():MessageCardEmbedPickerTime
	export function emptyRefMessageCardEmbedPickerTime():Ref<MessageCardEmbedPickerTime>
	export function refOfMessageCardEmbedPickerTime(x:MessageCardEmbedPickerTime,v:Ref<MessageCardEmbedPickerTime>)
	export function unRefMessageCardEmbedPickerTime(v:Ref<MessageCardEmbedPickerTime>):MessageCardEmbedPickerTime
}