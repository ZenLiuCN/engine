// Code generated by define_gene; DO NOT EDIT.
package ws

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/golang/context"
	_ "github.com/ZenLiuCN/engine/golang/encoding/json"
	_ "github.com/ZenLiuCN/engine/golang/fmt"
	//_ "github.com/ZenLiuCN/engine/modules/github/com/gogo/protobuf/proto"
	_ "github.com/ZenLiuCN/engine/modules/github/com/larksuite/oapi-sdk-go/v3/core"
	_ "github.com/ZenLiuCN/engine/modules/github/com/larksuite/oapi-sdk-go/v3/event/dispatcher"
	"github.com/larksuite/oapi-sdk-go/v3/ws"
)

var (
	//go:embed github_com_larksuite_oapi-sdk-go_v3_ws.d.ts
	GithubComLarksuiteOapiSdkGo3WsDefine   []byte
	GithubComLarksuiteOapiSdkGo3WsDeclared = map[string]any{
		"ErrIntOverflowPbbp2":          ws.ErrIntOverflowPbbp2,
		"HeaderSeq":                    ws.HeaderSeq,
		"HeaderTraceID":                ws.HeaderTraceID,
		"MessageTypePong":              ws.MessageTypePong,
		"withAutoReconnect":            ws.WithAutoReconnect,
		"withLogger":                   ws.WithLogger,
		"HeaderBizRt":                  ws.HeaderBizRt,
		"HeaderInstanceID":             ws.HeaderInstanceID,
		"InternalError":                ws.InternalError,
		"newPingFrame":                 ws.NewPingFrame,
		"newResponseByCode":            ws.NewResponseByCode,
		"withLogLevel":                 ws.WithLogLevel,
		"HeaderType":                   ws.HeaderType,
		"ExceedConnLimit":              ws.ExceedConnLimit,
		"Forbidden":                    ws.Forbidden,
		"FrameTypeControl":             ws.FrameTypeControl,
		"FrameTypeData":                ws.FrameTypeData,
		"HeaderSum":                    ws.HeaderSum,
		"HeaderTimestamp":              ws.HeaderTimestamp,
		"DeviceID":                     ws.DeviceID,
		"ErrUnexpectedEndOfGroupPbbp2": ws.ErrUnexpectedEndOfGroupPbbp2,
		"HeaderHandshakeMsg":           ws.HeaderHandshakeMsg,
		"newServerError":               ws.NewServerError,
		"GenEndpointUri":               ws.GenEndpointUri,
		"AuthFailed":                   ws.AuthFailed,
		"HeaderHandshakeStatus":        ws.HeaderHandshakeStatus,
		"MessageTypeCard":              ws.MessageTypeCard,
		"OK":                           ws.OK,
		"ErrInvalidLengthPbbp2":        ws.ErrInvalidLengthPbbp2,
		"HeaderMessageID":              ws.HeaderMessageID,
		"MessageTypeEvent":             ws.MessageTypeEvent,
		"MessageTypePing":              ws.MessageTypePing,
		"newClient":                    ws.NewClient,
		"withDomain":                   ws.WithDomain,
		"HeaderHandshakeAuthErrCode":   ws.HeaderHandshakeAuthErrCode,
		"newClientError":               ws.NewClientError,
		"ServiceID":                    ws.ServiceID,
		"SystemBusy":                   ws.SystemBusy,
		"withEventHandler":             ws.WithEventHandler,

		"emptyEndpoint":        engine.Empty[ws.Endpoint],
		"emptyRefEndpoint":     engine.EmptyRefer[ws.Endpoint],
		"refOfEndpoint":        engine.ReferOf[ws.Endpoint],
		"unRefEndpoint":        engine.UnRefer[ws.Endpoint],
		"emptyEndpointResp":    engine.Empty[ws.EndpointResp],
		"emptyRefEndpointResp": engine.EmptyRefer[ws.EndpointResp],
		"refOfEndpointResp":    engine.ReferOf[ws.EndpointResp],
		"unRefEndpointResp":    engine.UnRefer[ws.EndpointResp],
		"emptyClient":          engine.Empty[ws.Client],
		"emptyRefClient":       engine.EmptyRefer[ws.Client],
		"refOfClient":          engine.ReferOf[ws.Client],
		"unRefClient":          engine.UnRefer[ws.Client],
		"emptyClientConfig":    engine.Empty[ws.ClientConfig],
		"emptyRefClientConfig": engine.EmptyRefer[ws.ClientConfig],
		"refOfClientConfig":    engine.ReferOf[ws.ClientConfig],
		"unRefClientConfig":    engine.UnRefer[ws.ClientConfig],
		"emptyFrame":           engine.Empty[ws.Frame],
		"emptyRefFrame":        engine.EmptyRefer[ws.Frame],
		"refOfFrame":           engine.ReferOf[ws.Frame],
		"unRefFrame":           engine.UnRefer[ws.Frame],
		"emptyHeader":          engine.Empty[ws.Header],
		"emptyRefHeader":       engine.EmptyRefer[ws.Header],
		"refOfHeader":          engine.ReferOf[ws.Header],
		"unRefHeader":          engine.UnRefer[ws.Header],
		"emptyResponse":        engine.Empty[ws.Response],
		"emptyRefResponse":     engine.EmptyRefer[ws.Response],
		"refOfResponse":        engine.ReferOf[ws.Response],
		"unRefResponse":        engine.UnRefer[ws.Response]}
)

func init() {
	engine.RegisterModule(GithubComLarksuiteOapiSdkGo3WsModule{})
}

type GithubComLarksuiteOapiSdkGo3WsModule struct{}

func (S GithubComLarksuiteOapiSdkGo3WsModule) Identity() string {
	return "github.com/larksuite/oapi-sdk-go/v3/ws"
}
func (S GithubComLarksuiteOapiSdkGo3WsModule) TypeDefine() []byte {
	return GithubComLarksuiteOapiSdkGo3WsDefine
}
func (S GithubComLarksuiteOapiSdkGo3WsModule) Exports() map[string]any {
	return GithubComLarksuiteOapiSdkGo3WsDeclared
}
