// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'github.com/larksuite/oapi-sdk-go/v3/service/drive/v2'{

	// @ts-ignore
	import * as larkcore from 'github.com/larksuite/oapi-sdk-go/v3/core'
	// @ts-ignore
	import * as context from 'golang/context'
	// @ts-ignore
	import type {Struct,int,bool,error,Ref} from 'go'
	//"anyone_can_edit"
	export const CommentEntityAnyoneCanEdit:string
	//"anyone_can_view"
	export const CommentEntityAnyoneCanView:string
	//"anyone_can_edit"
	export const CopyEntityAnyoneCanEdit:string
	//"anyone_can_view"
	export const CopyEntityAnyoneCanView:string
	//"only_full_access"
	export const CopyEntityOnlyFullAccess:string
	export interface DepartmentId extends Struct<DepartmentId>{

			departmentId:Ref<string>
			openDepartmentId:Ref<string>
	}
	export interface DepartmentIdBuilder extends Struct<DepartmentIdBuilder>{

			departmentId(departmentId:string):Ref<DepartmentIdBuilder>
			openDepartmentId(openDepartmentId:string):Ref<DepartmentIdBuilder>
			build():Ref<DepartmentId>
	}
	export interface ExportJob extends Struct<ExportJob>{

			fileExtension:Ref<string>
			token:Ref<string>
			type:Ref<string>
			fileName:Ref<string>
			fileToken:Ref<string>
			jobErrorMsg:Ref<string>
			jobStatus:Ref<int>
	}
	export interface ExportJobBuilder extends Struct<ExportJobBuilder>{

			fileExtension(fileExtension:string):Ref<ExportJobBuilder>
			token(token:string):Ref<ExportJobBuilder>
			type(type_:string):Ref<ExportJobBuilder>
			fileName(fileName:string):Ref<ExportJobBuilder>
			fileToken(fileToken:string):Ref<ExportJobBuilder>
			jobErrorMsg(jobErrorMsg:string):Ref<ExportJobBuilder>
			jobStatus(jobStatus:int):Ref<ExportJobBuilder>
			build():Ref<ExportJob>
	}
	//"allow_share_partner_tenant"
	export const ExternalAccessEntityAllowSharePartnerTenant:string
	//"closed"
	export const ExternalAccessEntityClosed:string
	//"open"
	export const ExternalAccessEntityOpen:string
	export interface FileLike extends Struct<FileLike>{

			userId:Ref<string>
			lastLikedTime:Ref<string>
			userName:Ref<string>
			userEnName:Ref<string>
			userAvatarUrl:Ref<string>
			userIsDesensitized:Ref<bool>
	}
	export interface FileLikeBuilder extends Struct<FileLikeBuilder>{

			userId(userId:string):Ref<FileLikeBuilder>
			lastLikedTime(lastLikedTime:string):Ref<FileLikeBuilder>
			userName(userName:string):Ref<FileLikeBuilder>
			userEnName(userEnName:string):Ref<FileLikeBuilder>
			userAvatarUrl(userAvatarUrl:string):Ref<FileLikeBuilder>
			userIsDesensitized(userIsDesensitized:bool):Ref<FileLikeBuilder>
			build():Ref<FileLike>
	}
	export interface GetPermissionPublicReq extends Struct<GetPermissionPublicReq>{

	}
	export interface GetPermissionPublicReqBuilder extends Struct<GetPermissionPublicReqBuilder>{

			token(token:string):Ref<GetPermissionPublicReqBuilder>
			type(type_:string):Ref<GetPermissionPublicReqBuilder>
			build():Ref<GetPermissionPublicReq>
	}
	export interface GetPermissionPublicResp extends Struct<GetPermissionPublicResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetPermissionPublicRespData>
			success():bool
	}
	export interface GetPermissionPublicRespData extends Struct<GetPermissionPublicRespData>{

			permissionPublic:Ref<PermissionPublic>
	}
	export interface ImportJob extends Struct<ImportJob>{

			fileExtension:Ref<string>
			fileToken:Ref<string>
			type:Ref<string>
			fileName:Ref<string>
			point:Ref<ImportJobMountPoint>
			jobStatus:Ref<int>
			jobErrorMsg:Ref<string>
			token:Ref<string>
			url:Ref<string>
	}
	export interface ImportJobBuilder extends Struct<ImportJobBuilder>{

			fileExtension(fileExtension:string):Ref<ImportJobBuilder>
			fileToken(fileToken:string):Ref<ImportJobBuilder>
			type(type_:string):Ref<ImportJobBuilder>
			fileName(fileName:string):Ref<ImportJobBuilder>
			point(point:Ref<ImportJobMountPoint>):Ref<ImportJobBuilder>
			jobStatus(jobStatus:int):Ref<ImportJobBuilder>
			jobErrorMsg(jobErrorMsg:string):Ref<ImportJobBuilder>
			token(token:string):Ref<ImportJobBuilder>
			url(url:string):Ref<ImportJobBuilder>
			build():Ref<ImportJob>
	}
	export interface ImportJobMountPoint extends Struct<ImportJobMountPoint>{

			mountType:Ref<int>
			mountKey:Ref<string>
	}
	export interface ImportJobMountPointBuilder extends Struct<ImportJobMountPointBuilder>{

			mountType(mountType:int):Ref<ImportJobMountPointBuilder>
			mountKey(mountKey:string):Ref<ImportJobMountPointBuilder>
			build():Ref<ImportJobMountPoint>
	}
	//"anyone_editable"
	export const LinkShareEntityAnyoneEditable:string
	//"anyone_readable"
	export const LinkShareEntityAnyoneReadable:string
	//"closed"
	export const LinkShareEntityClosed:string
	//"partner_tenant_editable"
	export const LinkShareEntityPartnerTenantEditable:string
	//"partner_tenant_readable"
	export const LinkShareEntityPartnerTenantReadable:string
	//"tenant_editable"
	export const LinkShareEntityTenantEditable:string
	//"tenant_readable"
	export const LinkShareEntityTenantReadable:string
	//"collaborator_can_edit"
	export const ManageCollaboratorEntityCollaboratorCanEdit:string
	//"collaborator_can_view"
	export const ManageCollaboratorEntityCollaboratorCanView:string
	//"collaborator_full_access"
	export const ManageCollaboratorEntityCollaboratorFullAccess:string
	export interface MyLike extends Struct<MyLike>{

			lastLikedTime:Ref<string>
			fileToken:Ref<string>
			fileType:Ref<string>
			fileName:Ref<string>
			fileUrl:Ref<string>
			fileIsDeleted:Ref<bool>
	}
	export interface MyLikeBuilder extends Struct<MyLikeBuilder>{

			lastLikedTime(lastLikedTime:string):Ref<MyLikeBuilder>
			fileToken(fileToken:string):Ref<MyLikeBuilder>
			fileType(fileType:string):Ref<MyLikeBuilder>
			fileName(fileName:string):Ref<MyLikeBuilder>
			fileUrl(fileUrl:string):Ref<MyLikeBuilder>
			fileIsDeleted(fileIsDeleted:bool):Ref<MyLikeBuilder>
			build():Ref<MyLike>
	}
	export function New(config:Ref<larkcore.Config>):Ref<V2>

	export function newDepartmentIdBuilder():Ref<DepartmentIdBuilder>

	export function newExportJobBuilder():Ref<ExportJobBuilder>

	export function newFileLikeBuilder():Ref<FileLikeBuilder>

	export function newGetPermissionPublicReqBuilder():Ref<GetPermissionPublicReqBuilder>

	export function newImportJobBuilder():Ref<ImportJobBuilder>

	export function newImportJobMountPointBuilder():Ref<ImportJobMountPointBuilder>

	export function newMyLikeBuilder():Ref<MyLikeBuilder>

	export function newPatchPermissionPublicReqBuilder():Ref<PatchPermissionPublicReqBuilder>

	export function newPermissionPublicBuilder():Ref<PermissionPublicBuilder>

	export function newSecureLabelBuilder():Ref<SecureLabelBuilder>

	export interface PatchPermissionPublicReq extends Struct<PatchPermissionPublicReq>{

			permissionPublic:Ref<PermissionPublic>
	}
	export interface PatchPermissionPublicReqBuilder extends Struct<PatchPermissionPublicReqBuilder>{

			token(token:string):Ref<PatchPermissionPublicReqBuilder>
			type(type_:string):Ref<PatchPermissionPublicReqBuilder>
			permissionPublic(permissionPublic:Ref<PermissionPublic>):Ref<PatchPermissionPublicReqBuilder>
			build():Ref<PatchPermissionPublicReq>
	}
	export interface PatchPermissionPublicResp extends Struct<PatchPermissionPublicResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<PatchPermissionPublicRespData>
			success():bool
	}
	export interface PatchPermissionPublicRespData extends Struct<PatchPermissionPublicRespData>{

			permissionPublic:Ref<PermissionPublic>
	}
	export interface PermissionPublic extends Struct<PermissionPublic>{

			externalAccessEntity:Ref<string>
			securityEntity:Ref<string>
			commentEntity:Ref<string>
			shareEntity:Ref<string>
			manageCollaboratorEntity:Ref<string>
			linkShareEntity:Ref<string>
			copyEntity:Ref<string>
			lockSwitch:Ref<bool>
	}
	export interface PermissionPublicBuilder extends Struct<PermissionPublicBuilder>{

			externalAccessEntity(externalAccessEntity:string):Ref<PermissionPublicBuilder>
			securityEntity(securityEntity:string):Ref<PermissionPublicBuilder>
			commentEntity(commentEntity:string):Ref<PermissionPublicBuilder>
			shareEntity(shareEntity:string):Ref<PermissionPublicBuilder>
			manageCollaboratorEntity(manageCollaboratorEntity:string):Ref<PermissionPublicBuilder>
			linkShareEntity(linkShareEntity:string):Ref<PermissionPublicBuilder>
			copyEntity(copyEntity:string):Ref<PermissionPublicBuilder>
			lockSwitch(lockSwitch:bool):Ref<PermissionPublicBuilder>
			build():Ref<PermissionPublic>
	}
	export interface SecureLabel extends Struct<SecureLabel>{

			id:Ref<string>
			name:Ref<string>
	}
	export interface SecureLabelBuilder extends Struct<SecureLabelBuilder>{

			id(id:string):Ref<SecureLabelBuilder>
			name(name:string):Ref<SecureLabelBuilder>
			build():Ref<SecureLabel>
	}
	//"anyone_can_edit"
	export const SecurityEntityAnyoneCanEdit:string
	//"anyone_can_view"
	export const SecurityEntityAnyoneCanView:string
	//"only_full_access"
	export const SecurityEntityOnlyFullAccess:string
	//"anyone"
	export const ShareEntityAnyone:string
	//"same_tenant"
	export const ShareEntitySameTenant:string
	//"bitable"
	export const TokenTypeBitable:string
	//"doc"
	export const TokenTypeDoc:string
	//"docx"
	export const TokenTypeDocx:string
	//"file"
	export const TokenTypeFile:string
	//"mindnote"
	export const TokenTypeMindnote:string
	//"minutes"
	export const TokenTypeMinutes:string
	//"bitable"
	export const TokenTypePatchPermissionPublicBitable:string
	//"doc"
	export const TokenTypePatchPermissionPublicDoc:string
	//"docx"
	export const TokenTypePatchPermissionPublicDocx:string
	//"file"
	export const TokenTypePatchPermissionPublicFile:string
	//"mindnote"
	export const TokenTypePatchPermissionPublicMindnote:string
	//"minutes"
	export const TokenTypePatchPermissionPublicMinutes:string
	//"sheet"
	export const TokenTypePatchPermissionPublicSheet:string
	//"slides"
	export const TokenTypePatchPermissionPublicSlides:string
	//"wiki"
	export const TokenTypePatchPermissionPublicWiki:string
	//"sheet"
	export const TokenTypeSheet:string
	//"slides"
	export const TokenTypeSlides:string
	//"wiki"
	export const TokenTypeWiki:string
	export interface V2 extends Struct<V2>{

			permissionPublic:Ref<{
			
				get(ctx:context.Context,req:Ref<GetPermissionPublicReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetPermissionPublicResp>
				patch(ctx:context.Context,req:Ref<PatchPermissionPublicReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchPermissionPublicResp>
			}>
	}
	export function emptyFileLikeBuilder():FileLikeBuilder
	export function emptyRefFileLikeBuilder():Ref<FileLikeBuilder>
	export function refOfFileLikeBuilder(x:FileLikeBuilder,v:Ref<FileLikeBuilder>)
	export function unRefFileLikeBuilder(v:Ref<FileLikeBuilder>):FileLikeBuilder
	export function emptyImportJobMountPointBuilder():ImportJobMountPointBuilder
	export function emptyRefImportJobMountPointBuilder():Ref<ImportJobMountPointBuilder>
	export function refOfImportJobMountPointBuilder(x:ImportJobMountPointBuilder,v:Ref<ImportJobMountPointBuilder>)
	export function unRefImportJobMountPointBuilder(v:Ref<ImportJobMountPointBuilder>):ImportJobMountPointBuilder
	export function emptyDepartmentId():DepartmentId
	export function emptyRefDepartmentId():Ref<DepartmentId>
	export function refOfDepartmentId(x:DepartmentId,v:Ref<DepartmentId>)
	export function unRefDepartmentId(v:Ref<DepartmentId>):DepartmentId
	export function emptyDepartmentIdBuilder():DepartmentIdBuilder
	export function emptyRefDepartmentIdBuilder():Ref<DepartmentIdBuilder>
	export function refOfDepartmentIdBuilder(x:DepartmentIdBuilder,v:Ref<DepartmentIdBuilder>)
	export function unRefDepartmentIdBuilder(v:Ref<DepartmentIdBuilder>):DepartmentIdBuilder
	export function emptyPermissionPublic():PermissionPublic
	export function emptyRefPermissionPublic():Ref<PermissionPublic>
	export function refOfPermissionPublic(x:PermissionPublic,v:Ref<PermissionPublic>)
	export function unRefPermissionPublic(v:Ref<PermissionPublic>):PermissionPublic
	export function emptyPermissionPublicBuilder():PermissionPublicBuilder
	export function emptyRefPermissionPublicBuilder():Ref<PermissionPublicBuilder>
	export function refOfPermissionPublicBuilder(x:PermissionPublicBuilder,v:Ref<PermissionPublicBuilder>)
	export function unRefPermissionPublicBuilder(v:Ref<PermissionPublicBuilder>):PermissionPublicBuilder
	export function emptyV2():V2
	export function emptyRefV2():Ref<V2>
	export function refOfV2(x:V2,v:Ref<V2>)
	export function unRefV2(v:Ref<V2>):V2
	export function emptyExportJob():ExportJob
	export function emptyRefExportJob():Ref<ExportJob>
	export function refOfExportJob(x:ExportJob,v:Ref<ExportJob>)
	export function unRefExportJob(v:Ref<ExportJob>):ExportJob
	export function emptyPatchPermissionPublicReqBuilder():PatchPermissionPublicReqBuilder
	export function emptyRefPatchPermissionPublicReqBuilder():Ref<PatchPermissionPublicReqBuilder>
	export function refOfPatchPermissionPublicReqBuilder(x:PatchPermissionPublicReqBuilder,v:Ref<PatchPermissionPublicReqBuilder>)
	export function unRefPatchPermissionPublicReqBuilder(v:Ref<PatchPermissionPublicReqBuilder>):PatchPermissionPublicReqBuilder
	export function emptySecureLabelBuilder():SecureLabelBuilder
	export function emptyRefSecureLabelBuilder():Ref<SecureLabelBuilder>
	export function refOfSecureLabelBuilder(x:SecureLabelBuilder,v:Ref<SecureLabelBuilder>)
	export function unRefSecureLabelBuilder(v:Ref<SecureLabelBuilder>):SecureLabelBuilder
	export function emptyGetPermissionPublicReq():GetPermissionPublicReq
	export function emptyRefGetPermissionPublicReq():Ref<GetPermissionPublicReq>
	export function refOfGetPermissionPublicReq(x:GetPermissionPublicReq,v:Ref<GetPermissionPublicReq>)
	export function unRefGetPermissionPublicReq(v:Ref<GetPermissionPublicReq>):GetPermissionPublicReq
	export function emptyMyLike():MyLike
	export function emptyRefMyLike():Ref<MyLike>
	export function refOfMyLike(x:MyLike,v:Ref<MyLike>)
	export function unRefMyLike(v:Ref<MyLike>):MyLike
	export function emptyExportJobBuilder():ExportJobBuilder
	export function emptyRefExportJobBuilder():Ref<ExportJobBuilder>
	export function refOfExportJobBuilder(x:ExportJobBuilder,v:Ref<ExportJobBuilder>)
	export function unRefExportJobBuilder(v:Ref<ExportJobBuilder>):ExportJobBuilder
	export function emptyImportJobBuilder():ImportJobBuilder
	export function emptyRefImportJobBuilder():Ref<ImportJobBuilder>
	export function refOfImportJobBuilder(x:ImportJobBuilder,v:Ref<ImportJobBuilder>)
	export function unRefImportJobBuilder(v:Ref<ImportJobBuilder>):ImportJobBuilder
	export function emptyMyLikeBuilder():MyLikeBuilder
	export function emptyRefMyLikeBuilder():Ref<MyLikeBuilder>
	export function refOfMyLikeBuilder(x:MyLikeBuilder,v:Ref<MyLikeBuilder>)
	export function unRefMyLikeBuilder(v:Ref<MyLikeBuilder>):MyLikeBuilder
	export function emptyPatchPermissionPublicRespData():PatchPermissionPublicRespData
	export function emptyRefPatchPermissionPublicRespData():Ref<PatchPermissionPublicRespData>
	export function refOfPatchPermissionPublicRespData(x:PatchPermissionPublicRespData,v:Ref<PatchPermissionPublicRespData>)
	export function unRefPatchPermissionPublicRespData(v:Ref<PatchPermissionPublicRespData>):PatchPermissionPublicRespData
	export function emptyImportJobMountPoint():ImportJobMountPoint
	export function emptyRefImportJobMountPoint():Ref<ImportJobMountPoint>
	export function refOfImportJobMountPoint(x:ImportJobMountPoint,v:Ref<ImportJobMountPoint>)
	export function unRefImportJobMountPoint(v:Ref<ImportJobMountPoint>):ImportJobMountPoint
	export function emptyPatchPermissionPublicReq():PatchPermissionPublicReq
	export function emptyRefPatchPermissionPublicReq():Ref<PatchPermissionPublicReq>
	export function refOfPatchPermissionPublicReq(x:PatchPermissionPublicReq,v:Ref<PatchPermissionPublicReq>)
	export function unRefPatchPermissionPublicReq(v:Ref<PatchPermissionPublicReq>):PatchPermissionPublicReq
	export function emptyPatchPermissionPublicResp():PatchPermissionPublicResp
	export function emptyRefPatchPermissionPublicResp():Ref<PatchPermissionPublicResp>
	export function refOfPatchPermissionPublicResp(x:PatchPermissionPublicResp,v:Ref<PatchPermissionPublicResp>)
	export function unRefPatchPermissionPublicResp(v:Ref<PatchPermissionPublicResp>):PatchPermissionPublicResp
	export function emptyGetPermissionPublicReqBuilder():GetPermissionPublicReqBuilder
	export function emptyRefGetPermissionPublicReqBuilder():Ref<GetPermissionPublicReqBuilder>
	export function refOfGetPermissionPublicReqBuilder(x:GetPermissionPublicReqBuilder,v:Ref<GetPermissionPublicReqBuilder>)
	export function unRefGetPermissionPublicReqBuilder(v:Ref<GetPermissionPublicReqBuilder>):GetPermissionPublicReqBuilder
	export function emptyGetPermissionPublicResp():GetPermissionPublicResp
	export function emptyRefGetPermissionPublicResp():Ref<GetPermissionPublicResp>
	export function refOfGetPermissionPublicResp(x:GetPermissionPublicResp,v:Ref<GetPermissionPublicResp>)
	export function unRefGetPermissionPublicResp(v:Ref<GetPermissionPublicResp>):GetPermissionPublicResp
	export function emptyImportJob():ImportJob
	export function emptyRefImportJob():Ref<ImportJob>
	export function refOfImportJob(x:ImportJob,v:Ref<ImportJob>)
	export function unRefImportJob(v:Ref<ImportJob>):ImportJob
	export function emptySecureLabel():SecureLabel
	export function emptyRefSecureLabel():Ref<SecureLabel>
	export function refOfSecureLabel(x:SecureLabel,v:Ref<SecureLabel>)
	export function unRefSecureLabel(v:Ref<SecureLabel>):SecureLabel
	export function emptyFileLike():FileLike
	export function emptyRefFileLike():Ref<FileLike>
	export function refOfFileLike(x:FileLike,v:Ref<FileLike>)
	export function unRefFileLike(v:Ref<FileLike>):FileLike
	export function emptyGetPermissionPublicRespData():GetPermissionPublicRespData
	export function emptyRefGetPermissionPublicRespData():Ref<GetPermissionPublicRespData>
	export function refOfGetPermissionPublicRespData(x:GetPermissionPublicRespData,v:Ref<GetPermissionPublicRespData>)
	export function unRefGetPermissionPublicRespData(v:Ref<GetPermissionPublicRespData>):GetPermissionPublicRespData
}