// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'github.com/larksuite/oapi-sdk-go/v3/service/vc/v1'{

	// @ts-ignore
	import * as io from 'golang/io'
	// @ts-ignore
	import * as context from 'golang/context'
	// @ts-ignore
	import * as larkevent from 'github.com/larksuite/oapi-sdk-go/v3/event'
	// @ts-ignore
	import * as larkcore from 'github.com/larksuite/oapi-sdk-go/v3/core'
	// @ts-ignore
	import type {Struct,error,bool,float64,int,Ref} from 'go'
	//0
	export const ActionTypeAuthorize:int
	//1
	export const ActionTypeRevoke:int
	export interface Alert extends Struct<Alert>{

			alertId:Ref<string>
			resourceScope:Ref<string>
			monitorTarget:Ref<int>
			alertStrategy:Ref<string>
			alertTime:Ref<string>
			alertLevel:Ref<int>
			contacts:Ref<Contact>[]
			notifyMethods:int[]
			alertRule:Ref<string>
			processTime:Ref<string>
			recoverTime:Ref<string>
			processStatus:Ref<int>
			alertRuleId:Ref<string>
			monitorTargetRoomId:Ref<string>
			monitorTargetRoomMac:Ref<string>
	}
	export interface AlertBuilder extends Struct<AlertBuilder>{

			alertId(alertId:string):Ref<AlertBuilder>
			resourceScope(resourceScope:string):Ref<AlertBuilder>
			monitorTarget(monitorTarget:int):Ref<AlertBuilder>
			alertStrategy(alertStrategy:string):Ref<AlertBuilder>
			alertTime(alertTime:string):Ref<AlertBuilder>
			alertLevel(alertLevel:int):Ref<AlertBuilder>
			contacts(contacts:Ref<Contact>[]):Ref<AlertBuilder>
			notifyMethods(notifyMethods:int[]):Ref<AlertBuilder>
			alertRule(alertRule:string):Ref<AlertBuilder>
			processTime(processTime:string):Ref<AlertBuilder>
			recoverTime(recoverTime:string):Ref<AlertBuilder>
			processStatus(processStatus:int):Ref<AlertBuilder>
			alertRuleId(alertRuleId:string):Ref<AlertBuilder>
			monitorTargetRoomId(monitorTargetRoomId:string):Ref<AlertBuilder>
			monitorTargetRoomMac(monitorTargetRoomMac:string):Ref<AlertBuilder>
			build():Ref<Alert>
	}
	export interface ApplyReservePathReqBodyBuilder extends Struct<ApplyReservePathReqBodyBuilder>{

			endTime(endTime:string):Ref<ApplyReservePathReqBodyBuilder>
			ownerId(ownerId:string):Ref<ApplyReservePathReqBodyBuilder>
			meetingSettings(meetingSettings:Ref<ReserveMeetingSetting>):Ref<ApplyReservePathReqBodyBuilder>
			build():Ref<ApplyReserveReqBody>
	}
	export interface ApplyReserveReq extends Struct<ApplyReserveReq>{

			body:Ref<ApplyReserveReqBody>
	}
	export interface ApplyReserveReqBody extends Struct<ApplyReserveReqBody>{

			endTime:Ref<string>
			ownerId:Ref<string>
			meetingSettings:Ref<ReserveMeetingSetting>
	}
	export interface ApplyReserveReqBodyBuilder extends Struct<ApplyReserveReqBodyBuilder>{

			endTime(endTime:string):Ref<ApplyReserveReqBodyBuilder>
			ownerId(ownerId:string):Ref<ApplyReserveReqBodyBuilder>
			meetingSettings(meetingSettings:Ref<ReserveMeetingSetting>):Ref<ApplyReserveReqBodyBuilder>
			build():Ref<ApplyReserveReqBody>
	}
	export interface ApplyReserveReqBuilder extends Struct<ApplyReserveReqBuilder>{

			userIdType(userIdType:string):Ref<ApplyReserveReqBuilder>
			body(body:Ref<ApplyReserveReqBody>):Ref<ApplyReserveReqBuilder>
			build():Ref<ApplyReserveReq>
	}
	export interface ApplyReserveResp extends Struct<ApplyReserveResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ApplyReserveRespData>
			success():bool
	}
	export interface ApplyReserveRespData extends Struct<ApplyReserveRespData>{

			reserve:Ref<Reserve>
			reserveCorrectionCheckInfo:Ref<ReserveCorrectionCheckInfo>
	}
	export interface ApprovalConfig extends Struct<ApprovalConfig>{

			approvalSwitch:Ref<int>
			approvalCondition:Ref<int>
			meetingDuration:Ref<float64>
			approvers:Ref<SubscribeUser>[]
	}
	export interface ApprovalConfigBuilder extends Struct<ApprovalConfigBuilder>{

			approvalSwitch(approvalSwitch:int):Ref<ApprovalConfigBuilder>
			approvalCondition(approvalCondition:int):Ref<ApprovalConfigBuilder>
			meetingDuration(meetingDuration:float64):Ref<ApprovalConfigBuilder>
			approvers(approvers:Ref<SubscribeUser>[]):Ref<ApprovalConfigBuilder>
			build():Ref<ApprovalConfig>
	}
	export interface ApprovalConfigEvent extends Struct<ApprovalConfigEvent>{

			approvalSwitch:Ref<int>
			approvalCondition:Ref<int>
			meetingDuration:Ref<float64>
			approvers:Ref<SubscribeUserEvent>[]
	}
	export interface ApprovalConfigEventBuilder extends Struct<ApprovalConfigEventBuilder>{

			approvalSwitch(approvalSwitch:int):Ref<ApprovalConfigEventBuilder>
			approvalCondition(approvalCondition:int):Ref<ApprovalConfigEventBuilder>
			meetingDuration(meetingDuration:float64):Ref<ApprovalConfigEventBuilder>
			approvers(approvers:Ref<SubscribeUserEvent>[]):Ref<ApprovalConfigEventBuilder>
			build():Ref<ApprovalConfigEvent>
	}
	export interface Conditions extends Struct<Conditions>{

			customKey:Ref<string>
			optionKeys:string[]
	}
	export interface ConditionsBuilder extends Struct<ConditionsBuilder>{

			customKey(customKey:string):Ref<ConditionsBuilder>
			optionKeys(optionKeys:string[]):Ref<ConditionsBuilder>
			build():Ref<Conditions>
	}
	export interface Contact extends Struct<Contact>{

			contactType:Ref<int>
			contactName:Ref<string>
	}
	export interface ContactBuilder extends Struct<ContactBuilder>{

			contactType(contactType:int):Ref<ContactBuilder>
			contactName(contactName:string):Ref<ContactBuilder>
			build():Ref<Contact>
	}
	export interface CreateRoomLevelReq extends Struct<CreateRoomLevelReq>{

			roomLevel:Ref<RoomLevel>
	}
	export interface CreateRoomLevelReqBuilder extends Struct<CreateRoomLevelReqBuilder>{

			roomLevel(roomLevel:Ref<RoomLevel>):Ref<CreateRoomLevelReqBuilder>
			build():Ref<CreateRoomLevelReq>
	}
	export interface CreateRoomLevelResp extends Struct<CreateRoomLevelResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateRoomLevelRespData>
			success():bool
	}
	export interface CreateRoomLevelRespData extends Struct<CreateRoomLevelRespData>{

			roomLevel:Ref<RoomLevel>
	}
	export interface CreateRoomReq extends Struct<CreateRoomReq>{

			room:Ref<Room>
	}
	export interface CreateRoomReqBuilder extends Struct<CreateRoomReqBuilder>{

			userIdType(userIdType:string):Ref<CreateRoomReqBuilder>
			room(room:Ref<Room>):Ref<CreateRoomReqBuilder>
			build():Ref<CreateRoomReq>
	}
	export interface CreateRoomResp extends Struct<CreateRoomResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateRoomRespData>
			success():bool
	}
	export interface CreateRoomRespData extends Struct<CreateRoomRespData>{

			room:Ref<Room>
	}
	export interface CreateScopeConfigReq extends Struct<CreateScopeConfigReq>{

			scopeConfig:Ref<ScopeConfig>
	}
	export interface CreateScopeConfigReqBuilder extends Struct<CreateScopeConfigReqBuilder>{

			userIdType(userIdType:string):Ref<CreateScopeConfigReqBuilder>
			scopeConfig(scopeConfig:Ref<ScopeConfig>):Ref<CreateScopeConfigReqBuilder>
			build():Ref<CreateScopeConfigReq>
	}
	export interface CreateScopeConfigResp extends Struct<CreateScopeConfigResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface CustomList extends Struct<CustomList>{

			customType:Ref<int>
			key:Ref<string>
			needFill:Ref<bool>
			title:Ref<string>
			placeholder:Ref<string>
			options:Ref<Options>[]
			conditions:Ref<Conditions>[]
	}
	export interface CustomListBuilder extends Struct<CustomListBuilder>{

			customType(customType:int):Ref<CustomListBuilder>
			key(key:string):Ref<CustomListBuilder>
			needFill(needFill:bool):Ref<CustomListBuilder>
			title(title:string):Ref<CustomListBuilder>
			placeholder(placeholder:string):Ref<CustomListBuilder>
			options(options:Ref<Options>[]):Ref<CustomListBuilder>
			conditions(conditions:Ref<Conditions>[]):Ref<CustomListBuilder>
			build():Ref<CustomList>
	}
	export interface DelRoomLevelPathReqBodyBuilder extends Struct<DelRoomLevelPathReqBodyBuilder>{

			roomLevelId(roomLevelId:string):Ref<DelRoomLevelPathReqBodyBuilder>
			deleteChild(deleteChild:bool):Ref<DelRoomLevelPathReqBodyBuilder>
			build():Ref<DelRoomLevelReqBody>
	}
	export interface DelRoomLevelReq extends Struct<DelRoomLevelReq>{

			body:Ref<DelRoomLevelReqBody>
	}
	export interface DelRoomLevelReqBody extends Struct<DelRoomLevelReqBody>{

			roomLevelId:Ref<string>
			deleteChild:Ref<bool>
	}
	export interface DelRoomLevelReqBodyBuilder extends Struct<DelRoomLevelReqBodyBuilder>{

			roomLevelId(roomLevelId:string):Ref<DelRoomLevelReqBodyBuilder>
			deleteChild(deleteChild:bool):Ref<DelRoomLevelReqBodyBuilder>
			build():Ref<DelRoomLevelReqBody>
	}
	export interface DelRoomLevelReqBuilder extends Struct<DelRoomLevelReqBuilder>{

			body(body:Ref<DelRoomLevelReqBody>):Ref<DelRoomLevelReqBuilder>
			build():Ref<DelRoomLevelReq>
	}
	export interface DelRoomLevelResp extends Struct<DelRoomLevelResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeleteReserveReq extends Struct<DeleteReserveReq>{

	}
	export interface DeleteReserveReqBuilder extends Struct<DeleteReserveReqBuilder>{

			reserveId(reserveId:string):Ref<DeleteReserveReqBuilder>
			build():Ref<DeleteReserveReq>
	}
	export interface DeleteReserveResp extends Struct<DeleteReserveResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeleteRoomReq extends Struct<DeleteRoomReq>{

	}
	export interface DeleteRoomReqBuilder extends Struct<DeleteRoomReqBuilder>{

			roomId(roomId:string):Ref<DeleteRoomReqBuilder>
			build():Ref<DeleteRoomReq>
	}
	export interface DeleteRoomResp extends Struct<DeleteRoomResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DepartmentId extends Struct<DepartmentId>{

			departmentId:Ref<string>
			openDepartmentId:Ref<string>
	}
	export interface DepartmentIdBuilder extends Struct<DepartmentIdBuilder>{

			departmentId(departmentId:string):Ref<DepartmentIdBuilder>
			openDepartmentId(openDepartmentId:string):Ref<DepartmentIdBuilder>
			build():Ref<DepartmentId>
	}
	export interface Device extends Struct<Device>{

			name:Ref<string>
	}
	export interface DeviceBuilder extends Struct<DeviceBuilder>{

			name(name:string):Ref<DeviceBuilder>
			build():Ref<Device>
	}
	export interface DisableInformConfig extends Struct<DisableInformConfig>{

			ifCoverChildScope:Ref<bool>
			ifInform:Ref<bool>
			informedUsers:Ref<SubscribeUser>[]
			informedDepts:Ref<SubscribeDepartment>[]
	}
	export interface DisableInformConfigBuilder extends Struct<DisableInformConfigBuilder>{

			ifCoverChildScope(ifCoverChildScope:bool):Ref<DisableInformConfigBuilder>
			ifInform(ifInform:bool):Ref<DisableInformConfigBuilder>
			informedUsers(informedUsers:Ref<SubscribeUser>[]):Ref<DisableInformConfigBuilder>
			informedDepts(informedDepts:Ref<SubscribeDepartment>[]):Ref<DisableInformConfigBuilder>
			build():Ref<DisableInformConfig>
	}
	export interface DownloadExportReq extends Struct<DownloadExportReq>{

	}
	export interface DownloadExportReqBuilder extends Struct<DownloadExportReqBuilder>{

			fileToken(fileToken:string):Ref<DownloadExportReqBuilder>
			build():Ref<DownloadExportReq>
	}
	export interface DownloadExportResp extends Struct<DownloadExportResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			file:io.Reader
			fileName:string
			success():bool
			writeFile(fileName:string)/*error*/
	}
	export interface EndMeetingReq extends Struct<EndMeetingReq>{

	}
	export interface EndMeetingReqBuilder extends Struct<EndMeetingReqBuilder>{

			meetingId(meetingId:string):Ref<EndMeetingReqBuilder>
			build():Ref<EndMeetingReq>
	}
	export interface EndMeetingResp extends Struct<EndMeetingResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface GetActiveMeetingReserveReq extends Struct<GetActiveMeetingReserveReq>{

	}
	export interface GetActiveMeetingReserveReqBuilder extends Struct<GetActiveMeetingReserveReqBuilder>{

			reserveId(reserveId:string):Ref<GetActiveMeetingReserveReqBuilder>
			withParticipants(withParticipants:bool):Ref<GetActiveMeetingReserveReqBuilder>
			userIdType(userIdType:string):Ref<GetActiveMeetingReserveReqBuilder>
			build():Ref<GetActiveMeetingReserveReq>
	}
	export interface GetActiveMeetingReserveResp extends Struct<GetActiveMeetingReserveResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetActiveMeetingReserveRespData>
			success():bool
	}
	export interface GetActiveMeetingReserveRespData extends Struct<GetActiveMeetingReserveRespData>{

			meeting:Ref<Meeting>
	}
	export interface GetDailyReportReq extends Struct<GetDailyReportReq>{

	}
	export interface GetDailyReportReqBuilder extends Struct<GetDailyReportReqBuilder>{

			startTime(startTime:string):Ref<GetDailyReportReqBuilder>
			endTime(endTime:string):Ref<GetDailyReportReqBuilder>
			unit(unit:int):Ref<GetDailyReportReqBuilder>
			build():Ref<GetDailyReportReq>
	}
	export interface GetDailyReportResp extends Struct<GetDailyReportResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetDailyReportRespData>
			success():bool
	}
	export interface GetDailyReportRespData extends Struct<GetDailyReportRespData>{

			meetingReport:Ref<Report>
	}
	export interface GetExportReq extends Struct<GetExportReq>{

	}
	export interface GetExportReqBuilder extends Struct<GetExportReqBuilder>{

			taskId(taskId:string):Ref<GetExportReqBuilder>
			build():Ref<GetExportReq>
	}
	export interface GetExportResp extends Struct<GetExportResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetExportRespData>
			success():bool
	}
	export interface GetExportRespData extends Struct<GetExportRespData>{

			status:Ref<int>
			url:Ref<string>
			fileToken:Ref<string>
			failMsg:Ref<string>
	}
	export interface GetMeetingListIterator extends Struct<GetMeetingListIterator>{

			next():[bool,Ref<MeetingInfo>]
			nextPageToken():Ref<string>
	}
	export interface GetMeetingListReq extends Struct<GetMeetingListReq>{

			limit:int
	}
	export interface GetMeetingListReqBuilder extends Struct<GetMeetingListReqBuilder>{

			limit(limit:int):Ref<GetMeetingListReqBuilder>
			startTime(startTime:string):Ref<GetMeetingListReqBuilder>
			endTime(endTime:string):Ref<GetMeetingListReqBuilder>
			meetingStatus(meetingStatus:int):Ref<GetMeetingListReqBuilder>
			meetingNo(meetingNo:string):Ref<GetMeetingListReqBuilder>
			userId(userId:string):Ref<GetMeetingListReqBuilder>
			roomId(roomId:string):Ref<GetMeetingListReqBuilder>
			meetingType(meetingType:int):Ref<GetMeetingListReqBuilder>
			pageSize(pageSize:int):Ref<GetMeetingListReqBuilder>
			pageToken(pageToken:string):Ref<GetMeetingListReqBuilder>
			userIdType(userIdType:string):Ref<GetMeetingListReqBuilder>
			build():Ref<GetMeetingListReq>
	}
	export interface GetMeetingListResp extends Struct<GetMeetingListResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetMeetingListRespData>
			success():bool
	}
	export interface GetMeetingListRespData extends Struct<GetMeetingListRespData>{

			meetingList:Ref<MeetingInfo>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface GetMeetingRecordingReq extends Struct<GetMeetingRecordingReq>{

	}
	export interface GetMeetingRecordingReqBuilder extends Struct<GetMeetingRecordingReqBuilder>{

			meetingId(meetingId:string):Ref<GetMeetingRecordingReqBuilder>
			build():Ref<GetMeetingRecordingReq>
	}
	export interface GetMeetingRecordingResp extends Struct<GetMeetingRecordingResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetMeetingRecordingRespData>
			success():bool
	}
	export interface GetMeetingRecordingRespData extends Struct<GetMeetingRecordingRespData>{

			recording:Ref<MeetingRecording>
	}
	export interface GetMeetingReq extends Struct<GetMeetingReq>{

	}
	export interface GetMeetingReqBuilder extends Struct<GetMeetingReqBuilder>{

			meetingId(meetingId:string):Ref<GetMeetingReqBuilder>
			withParticipants(withParticipants:bool):Ref<GetMeetingReqBuilder>
			withMeetingAbility(withMeetingAbility:bool):Ref<GetMeetingReqBuilder>
			userIdType(userIdType:string):Ref<GetMeetingReqBuilder>
			build():Ref<GetMeetingReq>
	}
	export interface GetMeetingResp extends Struct<GetMeetingResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetMeetingRespData>
			success():bool
	}
	export interface GetMeetingRespData extends Struct<GetMeetingRespData>{

			meeting:Ref<Meeting>
	}
	export interface GetParticipantListIterator extends Struct<GetParticipantListIterator>{

			next():[bool,Ref<Participant>]
			nextPageToken():Ref<string>
	}
	export interface GetParticipantListReq extends Struct<GetParticipantListReq>{

			limit:int
	}
	export interface GetParticipantListReqBuilder extends Struct<GetParticipantListReqBuilder>{

			limit(limit:int):Ref<GetParticipantListReqBuilder>
			meetingStartTime(meetingStartTime:string):Ref<GetParticipantListReqBuilder>
			meetingEndTime(meetingEndTime:string):Ref<GetParticipantListReqBuilder>
			meetingStatus(meetingStatus:int):Ref<GetParticipantListReqBuilder>
			meetingNo(meetingNo:string):Ref<GetParticipantListReqBuilder>
			userId(userId:string):Ref<GetParticipantListReqBuilder>
			roomId(roomId:string):Ref<GetParticipantListReqBuilder>
			pageSize(pageSize:int):Ref<GetParticipantListReqBuilder>
			pageToken(pageToken:string):Ref<GetParticipantListReqBuilder>
			userIdType(userIdType:string):Ref<GetParticipantListReqBuilder>
			build():Ref<GetParticipantListReq>
	}
	export interface GetParticipantListResp extends Struct<GetParticipantListResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetParticipantListRespData>
			success():bool
	}
	export interface GetParticipantListRespData extends Struct<GetParticipantListRespData>{

			participants:Ref<Participant>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface GetParticipantQualityListIterator extends Struct<GetParticipantQualityListIterator>{

			next():[bool,Ref<ParticipantQuality>]
			nextPageToken():Ref<string>
	}
	export interface GetParticipantQualityListReq extends Struct<GetParticipantQualityListReq>{

			limit:int
	}
	export interface GetParticipantQualityListReqBuilder extends Struct<GetParticipantQualityListReqBuilder>{

			limit(limit:int):Ref<GetParticipantQualityListReqBuilder>
			meetingStartTime(meetingStartTime:string):Ref<GetParticipantQualityListReqBuilder>
			meetingEndTime(meetingEndTime:string):Ref<GetParticipantQualityListReqBuilder>
			meetingNo(meetingNo:string):Ref<GetParticipantQualityListReqBuilder>
			joinTime(joinTime:string):Ref<GetParticipantQualityListReqBuilder>
			userId(userId:string):Ref<GetParticipantQualityListReqBuilder>
			roomId(roomId:string):Ref<GetParticipantQualityListReqBuilder>
			pageSize(pageSize:int):Ref<GetParticipantQualityListReqBuilder>
			pageToken(pageToken:string):Ref<GetParticipantQualityListReqBuilder>
			userIdType(userIdType:string):Ref<GetParticipantQualityListReqBuilder>
			build():Ref<GetParticipantQualityListReq>
	}
	export interface GetParticipantQualityListResp extends Struct<GetParticipantQualityListResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetParticipantQualityListRespData>
			success():bool
	}
	export interface GetParticipantQualityListRespData extends Struct<GetParticipantQualityListRespData>{

			participantQualityList:Ref<ParticipantQuality>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface GetReserveConfigAdminReq extends Struct<GetReserveConfigAdminReq>{

	}
	export interface GetReserveConfigAdminReqBuilder extends Struct<GetReserveConfigAdminReqBuilder>{

			reserveConfigId(reserveConfigId:string):Ref<GetReserveConfigAdminReqBuilder>
			scopeType(scopeType:int):Ref<GetReserveConfigAdminReqBuilder>
			userIdType(userIdType:string):Ref<GetReserveConfigAdminReqBuilder>
			build():Ref<GetReserveConfigAdminReq>
	}
	export interface GetReserveConfigAdminResp extends Struct<GetReserveConfigAdminResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetReserveConfigAdminRespData>
			success():bool
	}
	export interface GetReserveConfigAdminRespData extends Struct<GetReserveConfigAdminRespData>{

			reserveAdminConfig:Ref<ReserveAdminConfig>
	}
	export interface GetReserveConfigDisableInformReq extends Struct<GetReserveConfigDisableInformReq>{

	}
	export interface GetReserveConfigDisableInformReqBuilder extends Struct<GetReserveConfigDisableInformReqBuilder>{

			reserveConfigId(reserveConfigId:string):Ref<GetReserveConfigDisableInformReqBuilder>
			scopeType(scopeType:int):Ref<GetReserveConfigDisableInformReqBuilder>
			userIdType(userIdType:string):Ref<GetReserveConfigDisableInformReqBuilder>
			build():Ref<GetReserveConfigDisableInformReq>
	}
	export interface GetReserveConfigDisableInformResp extends Struct<GetReserveConfigDisableInformResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetReserveConfigDisableInformRespData>
			success():bool
	}
	export interface GetReserveConfigDisableInformRespData extends Struct<GetReserveConfigDisableInformRespData>{

			disableInform:Ref<DisableInformConfig>
	}
	export interface GetReserveConfigFormReq extends Struct<GetReserveConfigFormReq>{

	}
	export interface GetReserveConfigFormReqBuilder extends Struct<GetReserveConfigFormReqBuilder>{

			reserveConfigId(reserveConfigId:string):Ref<GetReserveConfigFormReqBuilder>
			scopeType(scopeType:int):Ref<GetReserveConfigFormReqBuilder>
			userIdType(userIdType:string):Ref<GetReserveConfigFormReqBuilder>
			build():Ref<GetReserveConfigFormReq>
	}
	export interface GetReserveConfigFormResp extends Struct<GetReserveConfigFormResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetReserveConfigFormRespData>
			success():bool
	}
	export interface GetReserveConfigFormRespData extends Struct<GetReserveConfigFormRespData>{

			reserveFormConfig:Ref<ReserveFormConfig>
	}
	export interface GetReserveReq extends Struct<GetReserveReq>{

	}
	export interface GetReserveReqBuilder extends Struct<GetReserveReqBuilder>{

			reserveId(reserveId:string):Ref<GetReserveReqBuilder>
			userIdType(userIdType:string):Ref<GetReserveReqBuilder>
			build():Ref<GetReserveReq>
	}
	export interface GetReserveResp extends Struct<GetReserveResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetReserveRespData>
			success():bool
	}
	export interface GetReserveRespData extends Struct<GetReserveRespData>{

			reserve:Ref<Reserve>
	}
	export interface GetResourceReservationListIterator extends Struct<GetResourceReservationListIterator>{

			next():[bool,Ref<RoomMeetingReservation>]
			nextPageToken():Ref<string>
	}
	export interface GetResourceReservationListReq extends Struct<GetResourceReservationListReq>{

			limit:int
	}
	export interface GetResourceReservationListReqBuilder extends Struct<GetResourceReservationListReqBuilder>{

			limit(limit:int):Ref<GetResourceReservationListReqBuilder>
			roomLevelId(roomLevelId:string):Ref<GetResourceReservationListReqBuilder>
			needTopic(needTopic:bool):Ref<GetResourceReservationListReqBuilder>
			startTime(startTime:string):Ref<GetResourceReservationListReqBuilder>
			endTime(endTime:string):Ref<GetResourceReservationListReqBuilder>
			roomIds(roomIds:string[]):Ref<GetResourceReservationListReqBuilder>
			isExclude(isExclude:bool):Ref<GetResourceReservationListReqBuilder>
			pageSize(pageSize:int):Ref<GetResourceReservationListReqBuilder>
			pageToken(pageToken:string):Ref<GetResourceReservationListReqBuilder>
			build():Ref<GetResourceReservationListReq>
	}
	export interface GetResourceReservationListResp extends Struct<GetResourceReservationListResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetResourceReservationListRespData>
			success():bool
	}
	export interface GetResourceReservationListRespData extends Struct<GetResourceReservationListRespData>{

			roomReservationList:Ref<RoomMeetingReservation>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface GetRoomLevelReq extends Struct<GetRoomLevelReq>{

	}
	export interface GetRoomLevelReqBuilder extends Struct<GetRoomLevelReqBuilder>{

			roomLevelId(roomLevelId:string):Ref<GetRoomLevelReqBuilder>
			build():Ref<GetRoomLevelReq>
	}
	export interface GetRoomLevelResp extends Struct<GetRoomLevelResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetRoomLevelRespData>
			success():bool
	}
	export interface GetRoomLevelRespData extends Struct<GetRoomLevelRespData>{

			roomLevel:Ref<RoomLevel>
	}
	export interface GetRoomReq extends Struct<GetRoomReq>{

	}
	export interface GetRoomReqBuilder extends Struct<GetRoomReqBuilder>{

			roomId(roomId:string):Ref<GetRoomReqBuilder>
			userIdType(userIdType:string):Ref<GetRoomReqBuilder>
			build():Ref<GetRoomReq>
	}
	export interface GetRoomResp extends Struct<GetRoomResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetRoomRespData>
			success():bool
	}
	export interface GetRoomRespData extends Struct<GetRoomRespData>{

			room:Ref<Room>
	}
	export interface GetScopeConfigReq extends Struct<GetScopeConfigReq>{

	}
	export interface GetScopeConfigReqBuilder extends Struct<GetScopeConfigReqBuilder>{

			scopeType(scopeType:int):Ref<GetScopeConfigReqBuilder>
			scopeId(scopeId:string):Ref<GetScopeConfigReqBuilder>
			userIdType(userIdType:string):Ref<GetScopeConfigReqBuilder>
			build():Ref<GetScopeConfigReq>
	}
	export interface GetScopeConfigResp extends Struct<GetScopeConfigResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetScopeConfigRespData>
			success():bool
	}
	export interface GetScopeConfigRespData extends Struct<GetScopeConfigRespData>{

			currentConfig:Ref<ScopeConfig>
			originConfigs:Ref<ScopeConfig>[]
	}
	export interface GetTopUserReportReq extends Struct<GetTopUserReportReq>{

	}
	export interface GetTopUserReportReqBuilder extends Struct<GetTopUserReportReqBuilder>{

			startTime(startTime:string):Ref<GetTopUserReportReqBuilder>
			endTime(endTime:string):Ref<GetTopUserReportReqBuilder>
			limit(limit:int):Ref<GetTopUserReportReqBuilder>
			orderBy(orderBy:int):Ref<GetTopUserReportReqBuilder>
			unit(unit:int):Ref<GetTopUserReportReqBuilder>
			userIdType(userIdType:string):Ref<GetTopUserReportReqBuilder>
			build():Ref<GetTopUserReportReq>
	}
	export interface GetTopUserReportResp extends Struct<GetTopUserReportResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetTopUserReportRespData>
			success():bool
	}
	export interface GetTopUserReportRespData extends Struct<GetTopUserReportRespData>{

			topUserReport:Ref<ReportTopUser>[]
	}
	export interface InviteMeetingPathReqBodyBuilder extends Struct<InviteMeetingPathReqBodyBuilder>{

			invitees(invitees:Ref<MeetingUser>[]):Ref<InviteMeetingPathReqBodyBuilder>
			build():Ref<InviteMeetingReqBody>
	}
	export interface InviteMeetingReq extends Struct<InviteMeetingReq>{

			body:Ref<InviteMeetingReqBody>
	}
	export interface InviteMeetingReqBody extends Struct<InviteMeetingReqBody>{

			invitees:Ref<MeetingUser>[]
	}
	export interface InviteMeetingReqBodyBuilder extends Struct<InviteMeetingReqBodyBuilder>{

			invitees(invitees:Ref<MeetingUser>[]):Ref<InviteMeetingReqBodyBuilder>
			build():Ref<InviteMeetingReqBody>
	}
	export interface InviteMeetingReqBuilder extends Struct<InviteMeetingReqBuilder>{

			meetingId(meetingId:string):Ref<InviteMeetingReqBuilder>
			userIdType(userIdType:string):Ref<InviteMeetingReqBuilder>
			body(body:Ref<InviteMeetingReqBody>):Ref<InviteMeetingReqBuilder>
			build():Ref<InviteMeetingReq>
	}
	export interface InviteMeetingResp extends Struct<InviteMeetingResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<InviteMeetingRespData>
			success():bool
	}
	export interface InviteMeetingRespData extends Struct<InviteMeetingRespData>{

			inviteResults:Ref<MeetingInviteStatus>[]
	}
	export interface KickoutMeetingPathReqBodyBuilder extends Struct<KickoutMeetingPathReqBodyBuilder>{

			kickoutUsers(kickoutUsers:Ref<MeetingUser>[]):Ref<KickoutMeetingPathReqBodyBuilder>
			build():Ref<KickoutMeetingReqBody>
	}
	export interface KickoutMeetingReq extends Struct<KickoutMeetingReq>{

			body:Ref<KickoutMeetingReqBody>
	}
	export interface KickoutMeetingReqBody extends Struct<KickoutMeetingReqBody>{

			kickoutUsers:Ref<MeetingUser>[]
	}
	export interface KickoutMeetingReqBodyBuilder extends Struct<KickoutMeetingReqBodyBuilder>{

			kickoutUsers(kickoutUsers:Ref<MeetingUser>[]):Ref<KickoutMeetingReqBodyBuilder>
			build():Ref<KickoutMeetingReqBody>
	}
	export interface KickoutMeetingReqBuilder extends Struct<KickoutMeetingReqBuilder>{

			meetingId(meetingId:string):Ref<KickoutMeetingReqBuilder>
			userIdType(userIdType:string):Ref<KickoutMeetingReqBuilder>
			body(body:Ref<KickoutMeetingReqBody>):Ref<KickoutMeetingReqBuilder>
			build():Ref<KickoutMeetingReq>
	}
	export interface KickoutMeetingResp extends Struct<KickoutMeetingResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<KickoutMeetingRespData>
			success():bool
	}
	export interface KickoutMeetingRespData extends Struct<KickoutMeetingRespData>{

			kickoutResults:Ref<MeetingParticipantResult>[]
	}
	export interface ListAlertIterator extends Struct<ListAlertIterator>{

			next():[bool,Ref<Alert>]
			nextPageToken():Ref<string>
	}
	export interface ListAlertReq extends Struct<ListAlertReq>{

			limit:int
	}
	export interface ListAlertReqBuilder extends Struct<ListAlertReqBuilder>{

			limit(limit:int):Ref<ListAlertReqBuilder>
			startTime(startTime:string):Ref<ListAlertReqBuilder>
			endTime(endTime:string):Ref<ListAlertReqBuilder>
			queryType(queryType:int):Ref<ListAlertReqBuilder>
			queryValue(queryValue:string):Ref<ListAlertReqBuilder>
			pageSize(pageSize:int):Ref<ListAlertReqBuilder>
			pageToken(pageToken:string):Ref<ListAlertReqBuilder>
			build():Ref<ListAlertReq>
	}
	export interface ListAlertResp extends Struct<ListAlertResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListAlertRespData>
			success():bool
	}
	export interface ListAlertRespData extends Struct<ListAlertRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<Alert>[]
	}
	export interface ListByNoMeetingIterator extends Struct<ListByNoMeetingIterator>{

			next():[bool,Ref<Meeting>]
			nextPageToken():Ref<string>
	}
	export interface ListByNoMeetingReq extends Struct<ListByNoMeetingReq>{

			limit:int
	}
	export interface ListByNoMeetingReqBuilder extends Struct<ListByNoMeetingReqBuilder>{

			limit(limit:int):Ref<ListByNoMeetingReqBuilder>
			meetingNo(meetingNo:string):Ref<ListByNoMeetingReqBuilder>
			startTime(startTime:string):Ref<ListByNoMeetingReqBuilder>
			endTime(endTime:string):Ref<ListByNoMeetingReqBuilder>
			pageToken(pageToken:string):Ref<ListByNoMeetingReqBuilder>
			pageSize(pageSize:int):Ref<ListByNoMeetingReqBuilder>
			build():Ref<ListByNoMeetingReq>
	}
	export interface ListByNoMeetingResp extends Struct<ListByNoMeetingResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListByNoMeetingRespData>
			success():bool
	}
	export interface ListByNoMeetingRespData extends Struct<ListByNoMeetingRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			meetingBriefs:Ref<Meeting>[]
	}
	export interface ListRoomIterator extends Struct<ListRoomIterator>{

			next():[bool,Ref<Room>]
			nextPageToken():Ref<string>
	}
	export interface ListRoomLevelIterator extends Struct<ListRoomLevelIterator>{

			next():[bool,Ref<RoomLevel>]
			nextPageToken():Ref<string>
	}
	export interface ListRoomLevelReq extends Struct<ListRoomLevelReq>{

			limit:int
	}
	export interface ListRoomLevelReqBuilder extends Struct<ListRoomLevelReqBuilder>{

			limit(limit:int):Ref<ListRoomLevelReqBuilder>
			roomLevelId(roomLevelId:string):Ref<ListRoomLevelReqBuilder>
			pageSize(pageSize:int):Ref<ListRoomLevelReqBuilder>
			pageToken(pageToken:string):Ref<ListRoomLevelReqBuilder>
			build():Ref<ListRoomLevelReq>
	}
	export interface ListRoomLevelResp extends Struct<ListRoomLevelResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListRoomLevelRespData>
			success():bool
	}
	export interface ListRoomLevelRespData extends Struct<ListRoomLevelRespData>{

			items:Ref<RoomLevel>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface ListRoomReq extends Struct<ListRoomReq>{

			limit:int
	}
	export interface ListRoomReqBuilder extends Struct<ListRoomReqBuilder>{

			limit(limit:int):Ref<ListRoomReqBuilder>
			pageSize(pageSize:int):Ref<ListRoomReqBuilder>
			pageToken(pageToken:string):Ref<ListRoomReqBuilder>
			roomLevelId(roomLevelId:string):Ref<ListRoomReqBuilder>
			userIdType(userIdType:string):Ref<ListRoomReqBuilder>
			build():Ref<ListRoomReq>
	}
	export interface ListRoomResp extends Struct<ListRoomResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListRoomRespData>
			success():bool
	}
	export interface ListRoomRespData extends Struct<ListRoomRespData>{

			rooms:Ref<Room>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface Material extends Struct<Material>{

			name:Ref<string>
			fileToken:Ref<string>
			fileSize:Ref<int>
			deviceType:Ref<int>
			materialType:Ref<int>
			reviewResult:Ref<int>
			materialSource:Ref<int>
	}
	export interface MaterialBuilder extends Struct<MaterialBuilder>{

			name(name:string):Ref<MaterialBuilder>
			fileToken(fileToken:string):Ref<MaterialBuilder>
			fileSize(fileSize:int):Ref<MaterialBuilder>
			deviceType(deviceType:int):Ref<MaterialBuilder>
			materialType(materialType:int):Ref<MaterialBuilder>
			reviewResult(reviewResult:int):Ref<MaterialBuilder>
			materialSource(materialSource:int):Ref<MaterialBuilder>
			build():Ref<Material>
	}
	export interface MaterialDeleteResult extends Struct<MaterialDeleteResult>{

			fileToken:Ref<string>
			result:Ref<int>
	}
	export interface MaterialDeleteResultBuilder extends Struct<MaterialDeleteResultBuilder>{

			fileToken(fileToken:string):Ref<MaterialDeleteResultBuilder>
			result(result:int):Ref<MaterialDeleteResultBuilder>
			build():Ref<MaterialDeleteResult>
	}
	export interface MaterialReviewResult extends Struct<MaterialReviewResult>{

			fileToken:Ref<string>
			result:Ref<int>
	}
	export interface MaterialReviewResultBuilder extends Struct<MaterialReviewResultBuilder>{

			fileToken(fileToken:string):Ref<MaterialReviewResultBuilder>
			result(result:int):Ref<MaterialReviewResultBuilder>
			build():Ref<MaterialReviewResult>
	}
	export interface MaterialUploadResult extends Struct<MaterialUploadResult>{

			fileToken:Ref<string>
			result:Ref<int>
	}
	export interface MaterialUploadResultBuilder extends Struct<MaterialUploadResultBuilder>{

			fileToken(fileToken:string):Ref<MaterialUploadResultBuilder>
			result(result:int):Ref<MaterialUploadResultBuilder>
			build():Ref<MaterialUploadResult>
	}
	export interface Meeting extends Struct<Meeting>{

			id:Ref<string>
			topic:Ref<string>
			url:Ref<string>
			meetingNo:Ref<string>
			password:Ref<string>
			createTime:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			hostUser:Ref<MeetingUser>
			status:Ref<int>
			participantCount:Ref<string>
			participantCountAccumulated:Ref<string>
			participants:Ref<MeetingParticipant>[]
			ability:Ref<MeetingAbility>
	}
	export interface MeetingAbility extends Struct<MeetingAbility>{

			useVideo:Ref<bool>
			useAudio:Ref<bool>
			useShareScreen:Ref<bool>
			useFollowScreen:Ref<bool>
			useRecording:Ref<bool>
			usePstn:Ref<bool>
	}
	export interface MeetingAbilityBuilder extends Struct<MeetingAbilityBuilder>{

			useVideo(useVideo:bool):Ref<MeetingAbilityBuilder>
			useAudio(useAudio:bool):Ref<MeetingAbilityBuilder>
			useShareScreen(useShareScreen:bool):Ref<MeetingAbilityBuilder>
			useFollowScreen(useFollowScreen:bool):Ref<MeetingAbilityBuilder>
			useRecording(useRecording:bool):Ref<MeetingAbilityBuilder>
			usePstn(usePstn:bool):Ref<MeetingAbilityBuilder>
			build():Ref<MeetingAbility>
	}
	export interface MeetingBuilder extends Struct<MeetingBuilder>{

			id(id:string):Ref<MeetingBuilder>
			topic(topic:string):Ref<MeetingBuilder>
			url(url:string):Ref<MeetingBuilder>
			meetingNo(meetingNo:string):Ref<MeetingBuilder>
			password(password:string):Ref<MeetingBuilder>
			createTime(createTime:string):Ref<MeetingBuilder>
			startTime(startTime:string):Ref<MeetingBuilder>
			endTime(endTime:string):Ref<MeetingBuilder>
			hostUser(hostUser:Ref<MeetingUser>):Ref<MeetingBuilder>
			status(status:int):Ref<MeetingBuilder>
			participantCount(participantCount:string):Ref<MeetingBuilder>
			participantCountAccumulated(participantCountAccumulated:string):Ref<MeetingBuilder>
			participants(participants:Ref<MeetingParticipant>[]):Ref<MeetingBuilder>
			ability(ability:Ref<MeetingAbility>):Ref<MeetingBuilder>
			build():Ref<Meeting>
	}
	export interface MeetingEventMeeting extends Struct<MeetingEventMeeting>{

			id:Ref<string>
			topic:Ref<string>
			meetingNo:Ref<string>
			meetingSource:Ref<int>
			startTime:Ref<string>
			endTime:Ref<string>
			hostUser:Ref<MeetingEventUser>
			owner:Ref<MeetingEventUser>
			calendarEventId:Ref<string>
			meetingSubType:Ref<int>
			securitySetting:Ref<MeetingSecuritySetting>
			webinarSetting:Ref<MeetingWebinarSetting>
	}
	export interface MeetingEventMeetingBuilder extends Struct<MeetingEventMeetingBuilder>{

			id(id:string):Ref<MeetingEventMeetingBuilder>
			topic(topic:string):Ref<MeetingEventMeetingBuilder>
			meetingNo(meetingNo:string):Ref<MeetingEventMeetingBuilder>
			meetingSource(meetingSource:int):Ref<MeetingEventMeetingBuilder>
			startTime(startTime:string):Ref<MeetingEventMeetingBuilder>
			endTime(endTime:string):Ref<MeetingEventMeetingBuilder>
			hostUser(hostUser:Ref<MeetingEventUser>):Ref<MeetingEventMeetingBuilder>
			owner(owner:Ref<MeetingEventUser>):Ref<MeetingEventMeetingBuilder>
			calendarEventId(calendarEventId:string):Ref<MeetingEventMeetingBuilder>
			meetingSubType(meetingSubType:int):Ref<MeetingEventMeetingBuilder>
			securitySetting(securitySetting:Ref<MeetingSecuritySetting>):Ref<MeetingEventMeetingBuilder>
			webinarSetting(webinarSetting:Ref<MeetingWebinarSetting>):Ref<MeetingEventMeetingBuilder>
			build():Ref<MeetingEventMeeting>
	}
	export interface MeetingEventUser extends Struct<MeetingEventUser>{

			id:Ref<UserId>
			userRole:Ref<int>
			userType:Ref<int>
	}
	export interface MeetingEventUserBuilder extends Struct<MeetingEventUserBuilder>{

			id(id:Ref<UserId>):Ref<MeetingEventUserBuilder>
			userRole(userRole:int):Ref<MeetingEventUserBuilder>
			userType(userType:int):Ref<MeetingEventUserBuilder>
			build():Ref<MeetingEventUser>
	}
	export interface MeetingInfo extends Struct<MeetingInfo>{

			meetingId:Ref<string>
			meetingTopic:Ref<string>
			meetingType:Ref<int>
			organizer:Ref<string>
			department:Ref<string>
			userId:Ref<string>
			employeeId:Ref<string>
			email:Ref<string>
			mobile:Ref<string>
			meetingStartTime:Ref<string>
			meetingEndTime:Ref<string>
			meetingDuration:Ref<string>
			numberOfParticipants:Ref<string>
			numberOfDevices:Ref<string>
			audio:Ref<bool>
			video:Ref<bool>
			sharing:Ref<bool>
			recording:Ref<bool>
			telephone:Ref<bool>
			reservedRooms:Ref<ReservedRoom>[]
			hasRelatedDocument:Ref<bool>
	}
	export interface MeetingInfoBuilder extends Struct<MeetingInfoBuilder>{

			meetingId(meetingId:string):Ref<MeetingInfoBuilder>
			meetingTopic(meetingTopic:string):Ref<MeetingInfoBuilder>
			meetingType(meetingType:int):Ref<MeetingInfoBuilder>
			organizer(organizer:string):Ref<MeetingInfoBuilder>
			department(department:string):Ref<MeetingInfoBuilder>
			userId(userId:string):Ref<MeetingInfoBuilder>
			employeeId(employeeId:string):Ref<MeetingInfoBuilder>
			email(email:string):Ref<MeetingInfoBuilder>
			mobile(mobile:string):Ref<MeetingInfoBuilder>
			meetingStartTime(meetingStartTime:string):Ref<MeetingInfoBuilder>
			meetingEndTime(meetingEndTime:string):Ref<MeetingInfoBuilder>
			meetingDuration(meetingDuration:string):Ref<MeetingInfoBuilder>
			numberOfParticipants(numberOfParticipants:string):Ref<MeetingInfoBuilder>
			numberOfDevices(numberOfDevices:string):Ref<MeetingInfoBuilder>
			audio(audio:bool):Ref<MeetingInfoBuilder>
			video(video:bool):Ref<MeetingInfoBuilder>
			sharing(sharing:bool):Ref<MeetingInfoBuilder>
			recording(recording:bool):Ref<MeetingInfoBuilder>
			telephone(telephone:bool):Ref<MeetingInfoBuilder>
			reservedRooms(reservedRooms:Ref<ReservedRoom>[]):Ref<MeetingInfoBuilder>
			hasRelatedDocument(hasRelatedDocument:bool):Ref<MeetingInfoBuilder>
			build():Ref<MeetingInfo>
	}
	export interface MeetingInviteStatus extends Struct<MeetingInviteStatus>{

			id:Ref<string>
			userType:Ref<int>
			status:Ref<int>
	}
	export interface MeetingInviteStatusBuilder extends Struct<MeetingInviteStatusBuilder>{

			id(id:string):Ref<MeetingInviteStatusBuilder>
			userType(userType:int):Ref<MeetingInviteStatusBuilder>
			status(status:int):Ref<MeetingInviteStatusBuilder>
			build():Ref<MeetingInviteStatus>
	}
	export interface MeetingListExportPathReqBodyBuilder extends Struct<MeetingListExportPathReqBodyBuilder>{

			startTime(startTime:string):Ref<MeetingListExportPathReqBodyBuilder>
			endTime(endTime:string):Ref<MeetingListExportPathReqBodyBuilder>
			meetingStatus(meetingStatus:int):Ref<MeetingListExportPathReqBodyBuilder>
			meetingNo(meetingNo:string):Ref<MeetingListExportPathReqBodyBuilder>
			userId(userId:string):Ref<MeetingListExportPathReqBodyBuilder>
			roomId(roomId:string):Ref<MeetingListExportPathReqBodyBuilder>
			meetingType(meetingType:int):Ref<MeetingListExportPathReqBodyBuilder>
			build():Ref<MeetingListExportReqBody>
	}
	export interface MeetingListExportReq extends Struct<MeetingListExportReq>{

			body:Ref<MeetingListExportReqBody>
	}
	export interface MeetingListExportReqBody extends Struct<MeetingListExportReqBody>{

			startTime:Ref<string>
			endTime:Ref<string>
			meetingStatus:Ref<int>
			meetingNo:Ref<string>
			userId:Ref<string>
			roomId:Ref<string>
			meetingType:Ref<int>
	}
	export interface MeetingListExportReqBodyBuilder extends Struct<MeetingListExportReqBodyBuilder>{

			startTime(startTime:string):Ref<MeetingListExportReqBodyBuilder>
			endTime(endTime:string):Ref<MeetingListExportReqBodyBuilder>
			meetingStatus(meetingStatus:int):Ref<MeetingListExportReqBodyBuilder>
			meetingNo(meetingNo:string):Ref<MeetingListExportReqBodyBuilder>
			userId(userId:string):Ref<MeetingListExportReqBodyBuilder>
			roomId(roomId:string):Ref<MeetingListExportReqBodyBuilder>
			meetingType(meetingType:int):Ref<MeetingListExportReqBodyBuilder>
			build():Ref<MeetingListExportReqBody>
	}
	export interface MeetingListExportReqBuilder extends Struct<MeetingListExportReqBuilder>{

			userIdType(userIdType:string):Ref<MeetingListExportReqBuilder>
			body(body:Ref<MeetingListExportReqBody>):Ref<MeetingListExportReqBuilder>
			build():Ref<MeetingListExportReq>
	}
	export interface MeetingListExportResp extends Struct<MeetingListExportResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<MeetingListExportRespData>
			success():bool
	}
	export interface MeetingListExportRespData extends Struct<MeetingListExportRespData>{

			taskId:Ref<string>
	}
	export interface MeetingParticipant extends Struct<MeetingParticipant>{

			id:Ref<string>
			firstJoinTime:Ref<string>
			finalLeaveTime:Ref<string>
			inMeetingDuration:Ref<string>
			userType:Ref<int>
			isHost:Ref<bool>
			isCohost:Ref<bool>
			isExternal:Ref<bool>
			status:Ref<int>
	}
	export interface MeetingParticipantBuilder extends Struct<MeetingParticipantBuilder>{

			id(id:string):Ref<MeetingParticipantBuilder>
			firstJoinTime(firstJoinTime:string):Ref<MeetingParticipantBuilder>
			finalLeaveTime(finalLeaveTime:string):Ref<MeetingParticipantBuilder>
			inMeetingDuration(inMeetingDuration:string):Ref<MeetingParticipantBuilder>
			userType(userType:int):Ref<MeetingParticipantBuilder>
			isHost(isHost:bool):Ref<MeetingParticipantBuilder>
			isCohost(isCohost:bool):Ref<MeetingParticipantBuilder>
			isExternal(isExternal:bool):Ref<MeetingParticipantBuilder>
			status(status:int):Ref<MeetingParticipantBuilder>
			build():Ref<MeetingParticipant>
	}
	export interface MeetingParticipantResult extends Struct<MeetingParticipantResult>{

			id:Ref<string>
			userType:Ref<int>
			result:Ref<int>
	}
	export interface MeetingParticipantResultBuilder extends Struct<MeetingParticipantResultBuilder>{

			id(id:string):Ref<MeetingParticipantResultBuilder>
			userType(userType:int):Ref<MeetingParticipantResultBuilder>
			result(result:int):Ref<MeetingParticipantResultBuilder>
			build():Ref<MeetingParticipantResult>
	}
	export interface MeetingRecording extends Struct<MeetingRecording>{

			id:Ref<string>
			meetingId:Ref<string>
			url:Ref<string>
			duration:Ref<string>
	}
	export interface MeetingRecordingBuilder extends Struct<MeetingRecordingBuilder>{

			id(id:string):Ref<MeetingRecordingBuilder>
			meetingId(meetingId:string):Ref<MeetingRecordingBuilder>
			url(url:string):Ref<MeetingRecordingBuilder>
			duration(duration:string):Ref<MeetingRecordingBuilder>
			build():Ref<MeetingRecording>
	}
	export interface MeetingSecuritySetting extends Struct<MeetingSecuritySetting>{

			securityLevel:Ref<int>
			groupIds:string[]
			userIds:Ref<UserId>[]
			roomIds:string[]
			hasSetSecurityContactsAndGroup:Ref<bool>
	}
	export interface MeetingSecuritySettingBuilder extends Struct<MeetingSecuritySettingBuilder>{

			securityLevel(securityLevel:int):Ref<MeetingSecuritySettingBuilder>
			groupIds(groupIds:string[]):Ref<MeetingSecuritySettingBuilder>
			userIds(userIds:Ref<UserId>[]):Ref<MeetingSecuritySettingBuilder>
			roomIds(roomIds:string[]):Ref<MeetingSecuritySettingBuilder>
			hasSetSecurityContactsAndGroup(hasSetSecurityContactsAndGroup:bool):Ref<MeetingSecuritySettingBuilder>
			build():Ref<MeetingSecuritySetting>
	}
	//3
	export const MeetingStatusTypeFuture:int
	//3
	export const MeetingStatusTypeGetMeetingListFuture:int
	//1
	export const MeetingStatusTypeGetMeetingListOngoing:int
	//2
	export const MeetingStatusTypeGetMeetingListPast:int
	//3
	export const MeetingStatusTypeGetParticipantListFuture:int
	//1
	export const MeetingStatusTypeGetParticipantListOngoing:int
	//2
	export const MeetingStatusTypeGetParticipantListPast:int
	//1
	export const MeetingStatusTypeOngoing:int
	//3
	export const MeetingStatusTypeParticipantListExportFuture:int
	//1
	export const MeetingStatusTypeParticipantListExportOngoing:int
	//2
	export const MeetingStatusTypeParticipantListExportPast:int
	//2
	export const MeetingStatusTypePast:int
	//1
	export const MeetingTypeAll:int
	//1
	export const MeetingTypeGetMeetingListAll:int
	//2
	export const MeetingTypeGetMeetingListMeeting:int
	//3
	export const MeetingTypeGetMeetingListShareScreen:int
	//2
	export const MeetingTypeMeeting:int
	//3
	export const MeetingTypeShareScreen:int
	export interface MeetingUser extends Struct<MeetingUser>{

			id:Ref<string>
			userType:Ref<int>
	}
	export interface MeetingUserBuilder extends Struct<MeetingUserBuilder>{

			id(id:string):Ref<MeetingUserBuilder>
			userType(userType:int):Ref<MeetingUserBuilder>
			build():Ref<MeetingUser>
	}
	export interface MeetingWebinarSetting extends Struct<MeetingWebinarSetting>{

			webinarType:Ref<int>
	}
	export interface MeetingWebinarSettingBuilder extends Struct<MeetingWebinarSettingBuilder>{

			webinarType(webinarType:int):Ref<MeetingWebinarSettingBuilder>
			build():Ref<MeetingWebinarSetting>
	}
	export interface MgetRoomLevelPathReqBodyBuilder extends Struct<MgetRoomLevelPathReqBodyBuilder>{

			levelIds(levelIds:string[]):Ref<MgetRoomLevelPathReqBodyBuilder>
			build():Ref<MgetRoomLevelReqBody>
	}
	export interface MgetRoomLevelReq extends Struct<MgetRoomLevelReq>{

			body:Ref<MgetRoomLevelReqBody>
	}
	export interface MgetRoomLevelReqBody extends Struct<MgetRoomLevelReqBody>{

			levelIds:string[]
	}
	export interface MgetRoomLevelReqBodyBuilder extends Struct<MgetRoomLevelReqBodyBuilder>{

			levelIds(levelIds:string[]):Ref<MgetRoomLevelReqBodyBuilder>
			build():Ref<MgetRoomLevelReqBody>
	}
	export interface MgetRoomLevelReqBuilder extends Struct<MgetRoomLevelReqBuilder>{

			body(body:Ref<MgetRoomLevelReqBody>):Ref<MgetRoomLevelReqBuilder>
			build():Ref<MgetRoomLevelReq>
	}
	export interface MgetRoomLevelResp extends Struct<MgetRoomLevelResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<MgetRoomLevelRespData>
			success():bool
	}
	export interface MgetRoomLevelRespData extends Struct<MgetRoomLevelRespData>{

			items:Ref<RoomLevel>[]
	}
	export interface MgetRoomPathReqBodyBuilder extends Struct<MgetRoomPathReqBodyBuilder>{

			roomIds(roomIds:string[]):Ref<MgetRoomPathReqBodyBuilder>
			build():Ref<MgetRoomReqBody>
	}
	export interface MgetRoomReq extends Struct<MgetRoomReq>{

			body:Ref<MgetRoomReqBody>
	}
	export interface MgetRoomReqBody extends Struct<MgetRoomReqBody>{

			roomIds:string[]
	}
	export interface MgetRoomReqBodyBuilder extends Struct<MgetRoomReqBodyBuilder>{

			roomIds(roomIds:string[]):Ref<MgetRoomReqBodyBuilder>
			build():Ref<MgetRoomReqBody>
	}
	export interface MgetRoomReqBuilder extends Struct<MgetRoomReqBuilder>{

			userIdType(userIdType:string):Ref<MgetRoomReqBuilder>
			body(body:Ref<MgetRoomReqBody>):Ref<MgetRoomReqBuilder>
			build():Ref<MgetRoomReq>
	}
	export interface MgetRoomResp extends Struct<MgetRoomResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<MgetRoomRespData>
			success():bool
	}
	export interface MgetRoomRespData extends Struct<MgetRoomRespData>{

			items:Ref<Room>[]
	}
	export interface MyAiAvPluginCardStatus extends Struct<MyAiAvPluginCardStatus>{

			fromStatus:Ref<string>
			toStatus:Ref<string>
	}
	export interface MyAiAvPluginCardStatusBuilder extends Struct<MyAiAvPluginCardStatusBuilder>{

			fromStatus(fromStatus:string):Ref<MyAiAvPluginCardStatusBuilder>
			toStatus(toStatus:string):Ref<MyAiAvPluginCardStatusBuilder>
			build():Ref<MyAiAvPluginCardStatus>
	}
	export interface MyAiAvPluginCardVariables extends Struct<MyAiAvPluginCardVariables>{

			content:Ref<string>
	}
	export interface MyAiAvPluginCardVariablesBuilder extends Struct<MyAiAvPluginCardVariablesBuilder>{

			content(content:string):Ref<MyAiAvPluginCardVariablesBuilder>
			build():Ref<MyAiAvPluginCardVariables>
	}
	export interface MyAiAvPluginCardVaribales extends Struct<MyAiAvPluginCardVaribales>{

			content:Ref<string>
	}
	export interface MyAiAvPluginCardVaribalesBuilder extends Struct<MyAiAvPluginCardVaribalesBuilder>{

			content(content:string):Ref<MyAiAvPluginCardVaribalesBuilder>
			build():Ref<MyAiAvPluginCardVaribales>
	}
	export interface MyAiAvPluginContextSystemInfo extends Struct<MyAiAvPluginContextSystemInfo>{

			lang:Ref<string>
			brand:Ref<string>
			locale:Ref<string>
			sessionId:Ref<string>
			appVersion:Ref<string>
	}
	export interface MyAiAvPluginContextSystemInfoBuilder extends Struct<MyAiAvPluginContextSystemInfoBuilder>{

			lang(lang:string):Ref<MyAiAvPluginContextSystemInfoBuilder>
			brand(brand:string):Ref<MyAiAvPluginContextSystemInfoBuilder>
			locale(locale:string):Ref<MyAiAvPluginContextSystemInfoBuilder>
			sessionId(sessionId:string):Ref<MyAiAvPluginContextSystemInfoBuilder>
			appVersion(appVersion:string):Ref<MyAiAvPluginContextSystemInfoBuilder>
			build():Ref<MyAiAvPluginContextSystemInfo>
	}
	export interface MyAiAvPluginPresentInfo extends Struct<MyAiAvPluginPresentInfo>{

			type:Ref<string>
			cardTemplateId:Ref<string>
			body:Ref<string>
			cardVariables:Ref<MyAiAvPluginCardVariables>
			callbackInfo:Ref<string>
	}
	export interface MyAiAvPluginPresentInfoBuilder extends Struct<MyAiAvPluginPresentInfoBuilder>{

			type(type_:string):Ref<MyAiAvPluginPresentInfoBuilder>
			cardTemplateId(cardTemplateId:string):Ref<MyAiAvPluginPresentInfoBuilder>
			body(body:string):Ref<MyAiAvPluginPresentInfoBuilder>
			cardVariables(cardVariables:Ref<MyAiAvPluginCardVariables>):Ref<MyAiAvPluginPresentInfoBuilder>
			callbackInfo(callbackInfo:string):Ref<MyAiAvPluginPresentInfoBuilder>
			build():Ref<MyAiAvPluginPresentInfo>
	}
	export interface MyAiAvPluginScenarioContext extends Struct<MyAiAvPluginScenarioContext>{

			plugins:Ref<MyAiPluginContext>[]
			workMode:Ref<int>
			scenario:Ref<string>
			sessionId:Ref<string>
			uploadObjects:Ref<MyAiAvPluginUploadObject>[]
			systemInfo:Ref<MyAiAvPluginContextSystemInfo>
	}
	export interface MyAiAvPluginScenarioContextBuilder extends Struct<MyAiAvPluginScenarioContextBuilder>{

			plugins(plugins:Ref<MyAiPluginContext>[]):Ref<MyAiAvPluginScenarioContextBuilder>
			workMode(workMode:int):Ref<MyAiAvPluginScenarioContextBuilder>
			scenario(scenario:string):Ref<MyAiAvPluginScenarioContextBuilder>
			sessionId(sessionId:string):Ref<MyAiAvPluginScenarioContextBuilder>
			uploadObjects(uploadObjects:Ref<MyAiAvPluginUploadObject>[]):Ref<MyAiAvPluginScenarioContextBuilder>
			systemInfo(systemInfo:Ref<MyAiAvPluginContextSystemInfo>):Ref<MyAiAvPluginScenarioContextBuilder>
			build():Ref<MyAiAvPluginScenarioContext>
	}
	export interface MyAiAvPluginUploadObject extends Struct<MyAiAvPluginUploadObject>{

			bizId:Ref<string>
			type:Ref<string>
	}
	export interface MyAiAvPluginUploadObjectBuilder extends Struct<MyAiAvPluginUploadObjectBuilder>{

			bizId(bizId:string):Ref<MyAiAvPluginUploadObjectBuilder>
			type(type_:string):Ref<MyAiAvPluginUploadObjectBuilder>
			build():Ref<MyAiAvPluginUploadObject>
	}
	export interface MyAiCallbackAction extends Struct<MyAiCallbackAction>{

			value:Ref<MyAiCallbackActionValue>
			tag:Ref<string>
	}
	export interface MyAiCallbackActionBuilder extends Struct<MyAiCallbackActionBuilder>{

			value(value:Ref<MyAiCallbackActionValue>):Ref<MyAiCallbackActionBuilder>
			tag(tag:string):Ref<MyAiCallbackActionBuilder>
			build():Ref<MyAiCallbackAction>
	}
	export interface MyAiCallbackActionValue extends Struct<MyAiCallbackActionValue>{

			body:Ref<string>
			handle:Ref<string>
	}
	export interface MyAiCallbackActionValueBuilder extends Struct<MyAiCallbackActionValueBuilder>{

			body(body:string):Ref<MyAiCallbackActionValueBuilder>
			handle(handle:string):Ref<MyAiCallbackActionValueBuilder>
			build():Ref<MyAiCallbackActionValue>
	}
	export interface MyAiObjectContext extends Struct<MyAiObjectContext>{

			type:Ref<string>
			bizId:Ref<string>
	}
	export interface MyAiObjectContextBuilder extends Struct<MyAiObjectContextBuilder>{

			type(type_:string):Ref<MyAiObjectContextBuilder>
			bizId(bizId:string):Ref<MyAiObjectContextBuilder>
			build():Ref<MyAiObjectContext>
	}
	export interface MyAiPluginContext extends Struct<MyAiPluginContext>{

			key:Ref<string>
	}
	export interface MyAiPluginContextBuilder extends Struct<MyAiPluginContextBuilder>{

			key(key:string):Ref<MyAiPluginContextBuilder>
			build():Ref<MyAiPluginContext>
	}
	export interface MyAiResponsePresent extends Struct<MyAiResponsePresent>{

			type:Ref<string>
			body:Ref<string>
			interactable:Ref<bool>
			operationType:Ref<string>
			operationUrl:Ref<string>
			callbackUrl:Ref<string>
			callbackInfo:Ref<string>
	}
	export interface MyAiResponsePresentBuilder extends Struct<MyAiResponsePresentBuilder>{

			type(type_:string):Ref<MyAiResponsePresentBuilder>
			body(body:string):Ref<MyAiResponsePresentBuilder>
			interactable(interactable:bool):Ref<MyAiResponsePresentBuilder>
			operationType(operationType:string):Ref<MyAiResponsePresentBuilder>
			operationUrl(operationUrl:string):Ref<MyAiResponsePresentBuilder>
			callbackUrl(callbackUrl:string):Ref<MyAiResponsePresentBuilder>
			callbackInfo(callbackInfo:string):Ref<MyAiResponsePresentBuilder>
			build():Ref<MyAiResponsePresent>
	}
	export interface MyAiRoomCommonResult extends Struct<MyAiRoomCommonResult>{

			roomReply:Ref<string>
			openapiResponse:Ref<MyAiRoomOpenapiResponse>
	}
	export interface MyAiRoomCommonResultBuilder extends Struct<MyAiRoomCommonResultBuilder>{

			roomReply(roomReply:string):Ref<MyAiRoomCommonResultBuilder>
			openapiResponse(openapiResponse:Ref<MyAiRoomOpenapiResponse>):Ref<MyAiRoomCommonResultBuilder>
			build():Ref<MyAiRoomCommonResult>
	}
	export interface MyAiRoomOpenapiResponse extends Struct<MyAiRoomOpenapiResponse>{

			responseType:Ref<int>
			scheduleEventId:Ref<string>
			otherMsg:Ref<string>
			oapiMsg:Ref<string>
	}
	export interface MyAiRoomOpenapiResponseBuilder extends Struct<MyAiRoomOpenapiResponseBuilder>{

			responseType(responseType:int):Ref<MyAiRoomOpenapiResponseBuilder>
			scheduleEventId(scheduleEventId:string):Ref<MyAiRoomOpenapiResponseBuilder>
			otherMsg(otherMsg:string):Ref<MyAiRoomOpenapiResponseBuilder>
			oapiMsg(oapiMsg:string):Ref<MyAiRoomOpenapiResponseBuilder>
			build():Ref<MyAiRoomOpenapiResponse>
	}
	export interface MyAiSipCardVariables extends Struct<MyAiSipCardVariables>{

			text:Ref<string>
			imageKey:Ref<string>
	}
	export interface MyAiSipCardVariablesBuilder extends Struct<MyAiSipCardVariablesBuilder>{

			text(text:string):Ref<MyAiSipCardVariablesBuilder>
			imageKey(imageKey:string):Ref<MyAiSipCardVariablesBuilder>
			build():Ref<MyAiSipCardVariables>
	}
	export interface MyAiSipImageProperty extends Struct<MyAiSipImageProperty>{

			theme:Ref<string>
			number:Ref<int>
			size:Ref<string>
	}
	export interface MyAiSipImagePropertyBuilder extends Struct<MyAiSipImagePropertyBuilder>{

			theme(theme:string):Ref<MyAiSipImagePropertyBuilder>
			number(number:int):Ref<MyAiSipImagePropertyBuilder>
			size(size:string):Ref<MyAiSipImagePropertyBuilder>
			build():Ref<MyAiSipImageProperty>
	}
	export interface MyAiSipPresent extends Struct<MyAiSipPresent>{

			type:Ref<string>
			body:Ref<string>
			operationType:Ref<string>
			interactable:Ref<bool>
			operationUrl:Ref<string>
			callbackUrl:Ref<string>
			callbackInfo:Ref<string>
			cardTemplateId:Ref<string>
			cardVariables:Ref<MyAiSipCardVariables>
	}
	export interface MyAiSipPresentBuilder extends Struct<MyAiSipPresentBuilder>{

			type(type_:string):Ref<MyAiSipPresentBuilder>
			body(body:string):Ref<MyAiSipPresentBuilder>
			operationType(operationType:string):Ref<MyAiSipPresentBuilder>
			interactable(interactable:bool):Ref<MyAiSipPresentBuilder>
			operationUrl(operationUrl:string):Ref<MyAiSipPresentBuilder>
			callbackUrl(callbackUrl:string):Ref<MyAiSipPresentBuilder>
			callbackInfo(callbackInfo:string):Ref<MyAiSipPresentBuilder>
			cardTemplateId(cardTemplateId:string):Ref<MyAiSipPresentBuilder>
			cardVariables(cardVariables:Ref<MyAiSipCardVariables>):Ref<MyAiSipPresentBuilder>
			build():Ref<MyAiSipPresent>
	}
	export interface MyAiVcAnalysisResult extends Struct<MyAiVcAnalysisResult>{

			reply:Ref<string>
	}
	export interface MyAiVcAnalysisResultBuilder extends Struct<MyAiVcAnalysisResultBuilder>{

			reply(reply:string):Ref<MyAiVcAnalysisResultBuilder>
			build():Ref<MyAiVcAnalysisResult>
	}
	export interface MyAiVcMeetingContentCommonResult extends Struct<MyAiVcMeetingContentCommonResult>{

			meetingContentReply:Ref<string>
	}
	export interface MyAiVcMeetingContentCommonResultBuilder extends Struct<MyAiVcMeetingContentCommonResultBuilder>{

			meetingContentReply(meetingContentReply:string):Ref<MyAiVcMeetingContentCommonResultBuilder>
			build():Ref<MyAiVcMeetingContentCommonResult>
	}
	export interface MyAiVcMeetingExtra extends Struct<MyAiVcMeetingExtra>{

			vcMeetingId:Ref<string>
			vcLocale:Ref<string>
			vcApplinkHost:Ref<string>
			vcAppVersion:Ref<string>
			vcFeatureConfig:Ref<string>
			quickExecuteParamRichTag:Ref<string>
	}
	export interface MyAiVcMeetingExtraBuilder extends Struct<MyAiVcMeetingExtraBuilder>{

			vcMeetingId(vcMeetingId:string):Ref<MyAiVcMeetingExtraBuilder>
			vcLocale(vcLocale:string):Ref<MyAiVcMeetingExtraBuilder>
			vcApplinkHost(vcApplinkHost:string):Ref<MyAiVcMeetingExtraBuilder>
			vcAppVersion(vcAppVersion:string):Ref<MyAiVcMeetingExtraBuilder>
			vcFeatureConfig(vcFeatureConfig:string):Ref<MyAiVcMeetingExtraBuilder>
			quickExecuteParamRichTag(quickExecuteParamRichTag:string):Ref<MyAiVcMeetingExtraBuilder>
			build():Ref<MyAiVcMeetingExtra>
	}
	export interface MyAiVcMeetingOperationResult extends Struct<MyAiVcMeetingOperationResult>{

			meetingOperationReply:Ref<string>
	}
	export interface MyAiVcMeetingOperationResultBuilder extends Struct<MyAiVcMeetingOperationResultBuilder>{

			meetingOperationReply(meetingOperationReply:string):Ref<MyAiVcMeetingOperationResultBuilder>
			build():Ref<MyAiVcMeetingOperationResult>
	}
	export interface MyAiVcMeetingRecapResult extends Struct<MyAiVcMeetingRecapResult>{

			meetingRecapOrFailReason:Ref<string>
			meetingRecap:Ref<string>
	}
	export interface MyAiVcMeetingRecapResultBuilder extends Struct<MyAiVcMeetingRecapResultBuilder>{

			meetingRecapOrFailReason(meetingRecapOrFailReason:string):Ref<MyAiVcMeetingRecapResultBuilder>
			meetingRecap(meetingRecap:string):Ref<MyAiVcMeetingRecapResultBuilder>
			build():Ref<MyAiVcMeetingRecapResult>
	}
	export interface MyAiVcMeetingScenarioContext extends Struct<MyAiVcMeetingScenarioContext>{

			plugins:Ref<MyAiPluginContext>[]
			object:Ref<MyAiObjectContext>
			workMode:Ref<int>
			scenario:Ref<string>
			extra:Ref<MyAiVcMeetingExtra>
			systemInfo:Ref<MyAiAvPluginContextSystemInfo>
	}
	export interface MyAiVcMeetingScenarioContextBuilder extends Struct<MyAiVcMeetingScenarioContextBuilder>{

			plugins(plugins:Ref<MyAiPluginContext>[]):Ref<MyAiVcMeetingScenarioContextBuilder>
			object(object:Ref<MyAiObjectContext>):Ref<MyAiVcMeetingScenarioContextBuilder>
			workMode(workMode:int):Ref<MyAiVcMeetingScenarioContextBuilder>
			scenario(scenario:string):Ref<MyAiVcMeetingScenarioContextBuilder>
			extra(extra:Ref<MyAiVcMeetingExtra>):Ref<MyAiVcMeetingScenarioContextBuilder>
			systemInfo(systemInfo:Ref<MyAiAvPluginContextSystemInfo>):Ref<MyAiVcMeetingScenarioContextBuilder>
			build():Ref<MyAiVcMeetingScenarioContext>
	}
	export interface MyAiVcMeetingSuggestQuestionResult extends Struct<MyAiVcMeetingSuggestQuestionResult>{

			present:Ref<string>
	}
	export interface MyAiVcMeetingSuggestQuestionResultBuilder extends Struct<MyAiVcMeetingSuggestQuestionResultBuilder>{

			present(present:string):Ref<MyAiVcMeetingSuggestQuestionResultBuilder>
			build():Ref<MyAiVcMeetingSuggestQuestionResult>
	}
	export interface MyAiVcMeetingTodoTaskResult extends Struct<MyAiVcMeetingTodoTaskResult>{

			meetingTodoTaskOrFailReason:Ref<string>
			meetingTodoTask:Ref<string>
	}
	export interface MyAiVcMeetingTodoTaskResultBuilder extends Struct<MyAiVcMeetingTodoTaskResultBuilder>{

			meetingTodoTaskOrFailReason(meetingTodoTaskOrFailReason:string):Ref<MyAiVcMeetingTodoTaskResultBuilder>
			meetingTodoTask(meetingTodoTask:string):Ref<MyAiVcMeetingTodoTaskResultBuilder>
			build():Ref<MyAiVcMeetingTodoTaskResult>
	}
	export interface MyAiVcRoomExtra extends Struct<MyAiVcRoomExtra>{

			calendarInfo:Ref<string>
	}
	export interface MyAiVcRoomExtraBuilder extends Struct<MyAiVcRoomExtraBuilder>{

			calendarInfo(calendarInfo:string):Ref<MyAiVcRoomExtraBuilder>
			build():Ref<MyAiVcRoomExtra>
	}
	export interface MyAiVcRoomRequestCommonParam extends Struct<MyAiVcRoomRequestCommonParam>{

			language:Ref<string>
			utcOffset:Ref<string>
			roomId:Ref<string>
			clientVersion:Ref<string>
			openapiHistory:Ref<MyAiRoomOpenapiResponse>
	}
	export interface MyAiVcRoomRequestCommonParamBuilder extends Struct<MyAiVcRoomRequestCommonParamBuilder>{

			language(language:string):Ref<MyAiVcRoomRequestCommonParamBuilder>
			utcOffset(utcOffset:string):Ref<MyAiVcRoomRequestCommonParamBuilder>
			roomId(roomId:string):Ref<MyAiVcRoomRequestCommonParamBuilder>
			clientVersion(clientVersion:string):Ref<MyAiVcRoomRequestCommonParamBuilder>
			openapiHistory(openapiHistory:Ref<MyAiRoomOpenapiResponse>):Ref<MyAiVcRoomRequestCommonParamBuilder>
			build():Ref<MyAiVcRoomRequestCommonParam>
	}
	export interface MyAiVcRoomScenarioContext extends Struct<MyAiVcRoomScenarioContext>{

			plugins:Ref<MyAiPluginContext>[]
			extra:Ref<MyAiVcRoomExtra>
	}
	export interface MyAiVcRoomScenarioContextBuilder extends Struct<MyAiVcRoomScenarioContextBuilder>{

			plugins(plugins:Ref<MyAiPluginContext>[]):Ref<MyAiVcRoomScenarioContextBuilder>
			extra(extra:Ref<MyAiVcRoomExtra>):Ref<MyAiVcRoomScenarioContextBuilder>
			build():Ref<MyAiVcRoomScenarioContext>
	}
	export function New(config:Ref<larkcore.Config>):Ref<V1>

	export function newAlertBuilder():Ref<AlertBuilder>

	export function newApplyReservePathReqBodyBuilder():Ref<ApplyReservePathReqBodyBuilder>

	export function newApplyReserveReqBodyBuilder():Ref<ApplyReserveReqBodyBuilder>

	export function newApplyReserveReqBuilder():Ref<ApplyReserveReqBuilder>

	export function newApprovalConfigBuilder():Ref<ApprovalConfigBuilder>

	export function newApprovalConfigEventBuilder():Ref<ApprovalConfigEventBuilder>

	export function newConditionsBuilder():Ref<ConditionsBuilder>

	export function newContactBuilder():Ref<ContactBuilder>

	export function newCreateRoomLevelReqBuilder():Ref<CreateRoomLevelReqBuilder>

	export function newCreateRoomReqBuilder():Ref<CreateRoomReqBuilder>

	export function newCreateScopeConfigReqBuilder():Ref<CreateScopeConfigReqBuilder>

	export function newCustomListBuilder():Ref<CustomListBuilder>

	export function newDelRoomLevelPathReqBodyBuilder():Ref<DelRoomLevelPathReqBodyBuilder>

	export function newDelRoomLevelReqBodyBuilder():Ref<DelRoomLevelReqBodyBuilder>

	export function newDelRoomLevelReqBuilder():Ref<DelRoomLevelReqBuilder>

	export function newDeleteReserveReqBuilder():Ref<DeleteReserveReqBuilder>

	export function newDeleteRoomReqBuilder():Ref<DeleteRoomReqBuilder>

	export function newDepartmentIdBuilder():Ref<DepartmentIdBuilder>

	export function newDeviceBuilder():Ref<DeviceBuilder>

	export function newDisableInformConfigBuilder():Ref<DisableInformConfigBuilder>

	export function newDownloadExportReqBuilder():Ref<DownloadExportReqBuilder>

	export function newEndMeetingReqBuilder():Ref<EndMeetingReqBuilder>

	export function newGetActiveMeetingReserveReqBuilder():Ref<GetActiveMeetingReserveReqBuilder>

	export function newGetDailyReportReqBuilder():Ref<GetDailyReportReqBuilder>

	export function newGetExportReqBuilder():Ref<GetExportReqBuilder>

	export function newGetMeetingListReqBuilder():Ref<GetMeetingListReqBuilder>

	export function newGetMeetingRecordingReqBuilder():Ref<GetMeetingRecordingReqBuilder>

	export function newGetMeetingReqBuilder():Ref<GetMeetingReqBuilder>

	export function newGetParticipantListReqBuilder():Ref<GetParticipantListReqBuilder>

	export function newGetParticipantQualityListReqBuilder():Ref<GetParticipantQualityListReqBuilder>

	export function newGetReserveConfigAdminReqBuilder():Ref<GetReserveConfigAdminReqBuilder>

	export function newGetReserveConfigDisableInformReqBuilder():Ref<GetReserveConfigDisableInformReqBuilder>

	export function newGetReserveConfigFormReqBuilder():Ref<GetReserveConfigFormReqBuilder>

	export function newGetReserveReqBuilder():Ref<GetReserveReqBuilder>

	export function newGetResourceReservationListReqBuilder():Ref<GetResourceReservationListReqBuilder>

	export function newGetRoomLevelReqBuilder():Ref<GetRoomLevelReqBuilder>

	export function newGetRoomReqBuilder():Ref<GetRoomReqBuilder>

	export function newGetScopeConfigReqBuilder():Ref<GetScopeConfigReqBuilder>

	export function newGetTopUserReportReqBuilder():Ref<GetTopUserReportReqBuilder>

	export function newInviteMeetingPathReqBodyBuilder():Ref<InviteMeetingPathReqBodyBuilder>

	export function newInviteMeetingReqBodyBuilder():Ref<InviteMeetingReqBodyBuilder>

	export function newInviteMeetingReqBuilder():Ref<InviteMeetingReqBuilder>

	export function newKickoutMeetingPathReqBodyBuilder():Ref<KickoutMeetingPathReqBodyBuilder>

	export function newKickoutMeetingReqBodyBuilder():Ref<KickoutMeetingReqBodyBuilder>

	export function newKickoutMeetingReqBuilder():Ref<KickoutMeetingReqBuilder>

	export function newListAlertReqBuilder():Ref<ListAlertReqBuilder>

	export function newListByNoMeetingReqBuilder():Ref<ListByNoMeetingReqBuilder>

	export function newListRoomLevelReqBuilder():Ref<ListRoomLevelReqBuilder>

	export function newListRoomReqBuilder():Ref<ListRoomReqBuilder>

	export function newMaterialBuilder():Ref<MaterialBuilder>

	export function newMaterialDeleteResultBuilder():Ref<MaterialDeleteResultBuilder>

	export function newMaterialReviewResultBuilder():Ref<MaterialReviewResultBuilder>

	export function newMaterialUploadResultBuilder():Ref<MaterialUploadResultBuilder>

	export function newMeetingAbilityBuilder():Ref<MeetingAbilityBuilder>

	export function newMeetingBuilder():Ref<MeetingBuilder>

	export function newMeetingEventMeetingBuilder():Ref<MeetingEventMeetingBuilder>

	export function newMeetingEventUserBuilder():Ref<MeetingEventUserBuilder>

	export function newMeetingInfoBuilder():Ref<MeetingInfoBuilder>

	export function newMeetingInviteStatusBuilder():Ref<MeetingInviteStatusBuilder>

	export function newMeetingListExportPathReqBodyBuilder():Ref<MeetingListExportPathReqBodyBuilder>

	export function newMeetingListExportReqBodyBuilder():Ref<MeetingListExportReqBodyBuilder>

	export function newMeetingListExportReqBuilder():Ref<MeetingListExportReqBuilder>

	export function newMeetingParticipantBuilder():Ref<MeetingParticipantBuilder>

	export function newMeetingParticipantResultBuilder():Ref<MeetingParticipantResultBuilder>

	export function newMeetingRecordingBuilder():Ref<MeetingRecordingBuilder>

	export function newMeetingSecuritySettingBuilder():Ref<MeetingSecuritySettingBuilder>

	export function newMeetingUserBuilder():Ref<MeetingUserBuilder>

	export function newMeetingWebinarSettingBuilder():Ref<MeetingWebinarSettingBuilder>

	export function newMgetRoomLevelPathReqBodyBuilder():Ref<MgetRoomLevelPathReqBodyBuilder>

	export function newMgetRoomLevelReqBodyBuilder():Ref<MgetRoomLevelReqBodyBuilder>

	export function newMgetRoomLevelReqBuilder():Ref<MgetRoomLevelReqBuilder>

	export function newMgetRoomPathReqBodyBuilder():Ref<MgetRoomPathReqBodyBuilder>

	export function newMgetRoomReqBodyBuilder():Ref<MgetRoomReqBodyBuilder>

	export function newMgetRoomReqBuilder():Ref<MgetRoomReqBuilder>

	export function newMyAiAvPluginCardStatusBuilder():Ref<MyAiAvPluginCardStatusBuilder>

	export function newMyAiAvPluginCardVariablesBuilder():Ref<MyAiAvPluginCardVariablesBuilder>

	export function newMyAiAvPluginCardVaribalesBuilder():Ref<MyAiAvPluginCardVaribalesBuilder>

	export function newMyAiAvPluginContextSystemInfoBuilder():Ref<MyAiAvPluginContextSystemInfoBuilder>

	export function newMyAiAvPluginPresentInfoBuilder():Ref<MyAiAvPluginPresentInfoBuilder>

	export function newMyAiAvPluginScenarioContextBuilder():Ref<MyAiAvPluginScenarioContextBuilder>

	export function newMyAiAvPluginUploadObjectBuilder():Ref<MyAiAvPluginUploadObjectBuilder>

	export function newMyAiCallbackActionBuilder():Ref<MyAiCallbackActionBuilder>

	export function newMyAiCallbackActionValueBuilder():Ref<MyAiCallbackActionValueBuilder>

	export function newMyAiObjectContextBuilder():Ref<MyAiObjectContextBuilder>

	export function newMyAiPluginContextBuilder():Ref<MyAiPluginContextBuilder>

	export function newMyAiResponsePresentBuilder():Ref<MyAiResponsePresentBuilder>

	export function newMyAiRoomCommonResultBuilder():Ref<MyAiRoomCommonResultBuilder>

	export function newMyAiRoomOpenapiResponseBuilder():Ref<MyAiRoomOpenapiResponseBuilder>

	export function newMyAiSipCardVariablesBuilder():Ref<MyAiSipCardVariablesBuilder>

	export function newMyAiSipImagePropertyBuilder():Ref<MyAiSipImagePropertyBuilder>

	export function newMyAiSipPresentBuilder():Ref<MyAiSipPresentBuilder>

	export function newMyAiVcAnalysisResultBuilder():Ref<MyAiVcAnalysisResultBuilder>

	export function newMyAiVcMeetingContentCommonResultBuilder():Ref<MyAiVcMeetingContentCommonResultBuilder>

	export function newMyAiVcMeetingExtraBuilder():Ref<MyAiVcMeetingExtraBuilder>

	export function newMyAiVcMeetingOperationResultBuilder():Ref<MyAiVcMeetingOperationResultBuilder>

	export function newMyAiVcMeetingRecapResultBuilder():Ref<MyAiVcMeetingRecapResultBuilder>

	export function newMyAiVcMeetingScenarioContextBuilder():Ref<MyAiVcMeetingScenarioContextBuilder>

	export function newMyAiVcMeetingSuggestQuestionResultBuilder():Ref<MyAiVcMeetingSuggestQuestionResultBuilder>

	export function newMyAiVcMeetingTodoTaskResultBuilder():Ref<MyAiVcMeetingTodoTaskResultBuilder>

	export function newMyAiVcRoomExtraBuilder():Ref<MyAiVcRoomExtraBuilder>

	export function newMyAiVcRoomRequestCommonParamBuilder():Ref<MyAiVcRoomRequestCommonParamBuilder>

	export function newMyAiVcRoomScenarioContextBuilder():Ref<MyAiVcRoomScenarioContextBuilder>

	export function newOptionsBuilder():Ref<OptionsBuilder>

	export function newP2MeetingAllMeetingEndedV1Handler(v1:(v2:context.Context,v1:Ref<P2MeetingAllMeetingEndedV1>)=>void/*error*/):Ref<P2MeetingAllMeetingEndedV1Handler>

	export function newP2MeetingAllMeetingStartedV1Handler(v1:(v2:context.Context,v1:Ref<P2MeetingAllMeetingStartedV1>)=>void/*error*/):Ref<P2MeetingAllMeetingStartedV1Handler>

	export function newP2MeetingEndedV1Handler(v1:(v2:context.Context,v1:Ref<P2MeetingEndedV1>)=>void/*error*/):Ref<P2MeetingEndedV1Handler>

	export function newP2MeetingJoinMeetingV1Handler(v1:(v2:context.Context,v1:Ref<P2MeetingJoinMeetingV1>)=>void/*error*/):Ref<P2MeetingJoinMeetingV1Handler>

	export function newP2MeetingLeaveMeetingV1Handler(v1:(v2:context.Context,v1:Ref<P2MeetingLeaveMeetingV1>)=>void/*error*/):Ref<P2MeetingLeaveMeetingV1Handler>

	export function newP2MeetingRecordingEndedV1Handler(v1:(v2:context.Context,v1:Ref<P2MeetingRecordingEndedV1>)=>void/*error*/):Ref<P2MeetingRecordingEndedV1Handler>

	export function newP2MeetingRecordingReadyV1Handler(v1:(v2:context.Context,v1:Ref<P2MeetingRecordingReadyV1>)=>void/*error*/):Ref<P2MeetingRecordingReadyV1Handler>

	export function newP2MeetingRecordingStartedV1Handler(v1:(v2:context.Context,v1:Ref<P2MeetingRecordingStartedV1>)=>void/*error*/):Ref<P2MeetingRecordingStartedV1Handler>

	export function newP2MeetingShareEndedV1Handler(v1:(v2:context.Context,v1:Ref<P2MeetingShareEndedV1>)=>void/*error*/):Ref<P2MeetingShareEndedV1Handler>

	export function newP2MeetingShareStartedV1Handler(v1:(v2:context.Context,v1:Ref<P2MeetingShareStartedV1>)=>void/*error*/):Ref<P2MeetingShareStartedV1Handler>

	export function newP2MeetingStartedV1Handler(v1:(v2:context.Context,v1:Ref<P2MeetingStartedV1>)=>void/*error*/):Ref<P2MeetingStartedV1Handler>

	export function newP2ReserveConfigUpdatedV1Handler(v1:(v2:context.Context,v1:Ref<P2ReserveConfigUpdatedV1>)=>void/*error*/):Ref<P2ReserveConfigUpdatedV1Handler>

	export function newP2RoomCreatedV1Handler(v1:(v2:context.Context,v1:Ref<P2RoomCreatedV1>)=>void/*error*/):Ref<P2RoomCreatedV1Handler>

	export function newP2RoomDeletedV1Handler(v1:(v2:context.Context,v1:Ref<P2RoomDeletedV1>)=>void/*error*/):Ref<P2RoomDeletedV1Handler>

	export function newP2RoomLevelCreatedV1Handler(v1:(v2:context.Context,v1:Ref<P2RoomLevelCreatedV1>)=>void/*error*/):Ref<P2RoomLevelCreatedV1Handler>

	export function newP2RoomLevelDeletedV1Handler(v1:(v2:context.Context,v1:Ref<P2RoomLevelDeletedV1>)=>void/*error*/):Ref<P2RoomLevelDeletedV1Handler>

	export function newP2RoomLevelUpdatedV1Handler(v1:(v2:context.Context,v1:Ref<P2RoomLevelUpdatedV1>)=>void/*error*/):Ref<P2RoomLevelUpdatedV1Handler>

	export function newP2RoomUpdatedV1Handler(v1:(v2:context.Context,v1:Ref<P2RoomUpdatedV1>)=>void/*error*/):Ref<P2RoomUpdatedV1Handler>

	export function newParticipantBuilder():Ref<ParticipantBuilder>

	export function newParticipantListExportPathReqBodyBuilder():Ref<ParticipantListExportPathReqBodyBuilder>

	export function newParticipantListExportReqBodyBuilder():Ref<ParticipantListExportReqBodyBuilder>

	export function newParticipantListExportReqBuilder():Ref<ParticipantListExportReqBuilder>

	export function newParticipantQualityBuilder():Ref<ParticipantQualityBuilder>

	export function newParticipantQualityListExportPathReqBodyBuilder():Ref<ParticipantQualityListExportPathReqBodyBuilder>

	export function newParticipantQualityListExportReqBodyBuilder():Ref<ParticipantQualityListExportReqBodyBuilder>

	export function newParticipantQualityListExportReqBuilder():Ref<ParticipantQualityListExportReqBuilder>

	export function newPatchReserveConfigAdminPathReqBodyBuilder():Ref<PatchReserveConfigAdminPathReqBodyBuilder>

	export function newPatchReserveConfigAdminReqBodyBuilder():Ref<PatchReserveConfigAdminReqBodyBuilder>

	export function newPatchReserveConfigAdminReqBuilder():Ref<PatchReserveConfigAdminReqBuilder>

	export function newPatchReserveConfigDisableInformPathReqBodyBuilder():Ref<PatchReserveConfigDisableInformPathReqBodyBuilder>

	export function newPatchReserveConfigDisableInformReqBodyBuilder():Ref<PatchReserveConfigDisableInformReqBodyBuilder>

	export function newPatchReserveConfigDisableInformReqBuilder():Ref<PatchReserveConfigDisableInformReqBuilder>

	export function newPatchReserveConfigFormPathReqBodyBuilder():Ref<PatchReserveConfigFormPathReqBodyBuilder>

	export function newPatchReserveConfigFormReqBodyBuilder():Ref<PatchReserveConfigFormReqBodyBuilder>

	export function newPatchReserveConfigFormReqBuilder():Ref<PatchReserveConfigFormReqBuilder>

	export function newPatchReserveConfigPathReqBodyBuilder():Ref<PatchReserveConfigPathReqBodyBuilder>

	export function newPatchReserveConfigReqBodyBuilder():Ref<PatchReserveConfigReqBodyBuilder>

	export function newPatchReserveConfigReqBuilder():Ref<PatchReserveConfigReqBuilder>

	export function newPatchRoomLevelReqBuilder():Ref<PatchRoomLevelReqBuilder>

	export function newPatchRoomReqBuilder():Ref<PatchRoomReqBuilder>

	export function newPstnSipInfoBuilder():Ref<PstnSipInfoBuilder>

	export function newQualityAudioBuilder():Ref<QualityAudioBuilder>

	export function newQualityCpuUsageBuilder():Ref<QualityCpuUsageBuilder>

	export function newQualityNetworkBuilder():Ref<QualityNetworkBuilder>

	export function newQualityVideoSharingBuilder():Ref<QualityVideoSharingBuilder>

	export function newQueryRoomConfigReqBuilder():Ref<QueryRoomConfigReqBuilder>

	export function newRecordingPermissionObjectBuilder():Ref<RecordingPermissionObjectBuilder>

	export function newReportBuilder():Ref<ReportBuilder>

	export function newReportMeetingDailyBuilder():Ref<ReportMeetingDailyBuilder>

	export function newReportTopUserBuilder():Ref<ReportTopUserBuilder>

	export function newReserveActionPermissionBuilder():Ref<ReserveActionPermissionBuilder>

	export function newReserveAdminConfigBuilder():Ref<ReserveAdminConfigBuilder>

	export function newReserveAssignHostBuilder():Ref<ReserveAssignHostBuilder>

	export function newReserveBuilder():Ref<ReserveBuilder>

	export function newReserveCallSettingBuilder():Ref<ReserveCallSettingBuilder>

	export function newReserveCalleeBuilder():Ref<ReserveCalleeBuilder>

	export function newReserveCorrectionCheckInfoBuilder():Ref<ReserveCorrectionCheckInfoBuilder>

	export function newReserveFormConfigBuilder():Ref<ReserveFormConfigBuilder>

	export function newReserveMeetingSettingBuilder():Ref<ReserveMeetingSettingBuilder>

	export function newReservePermissionCheckerBuilder():Ref<ReservePermissionCheckerBuilder>

	export function newReserveScopeConfigBuilder():Ref<ReserveScopeConfigBuilder>

	export function newReserveScopeConfigEventBuilder():Ref<ReserveScopeConfigEventBuilder>

	export function newReserveScopeReserveConfigReqBuilder():Ref<ReserveScopeReserveConfigReqBuilder>

	export function newReservedRoomBuilder():Ref<ReservedRoomBuilder>

	export function newResourceReservationListExportPathReqBodyBuilder():Ref<ResourceReservationListExportPathReqBodyBuilder>

	export function newResourceReservationListExportReqBodyBuilder():Ref<ResourceReservationListExportReqBodyBuilder>

	export function newResourceReservationListExportReqBuilder():Ref<ResourceReservationListExportReqBuilder>

	export function newRoomBuilder():Ref<RoomBuilder>

	export function newRoomConfigBuilder():Ref<RoomConfigBuilder>

	export function newRoomDigitalSignageBuilder():Ref<RoomDigitalSignageBuilder>

	export function newRoomDigitalSignageMaterialBuilder():Ref<RoomDigitalSignageMaterialBuilder>

	export function newRoomEventBuilder():Ref<RoomEventBuilder>

	export function newRoomLevelBuilder():Ref<RoomLevelBuilder>

	export function newRoomMeetingReservationBuilder():Ref<RoomMeetingReservationBuilder>

	export function newRoomStatusBuilder():Ref<RoomStatusBuilder>

	export function newRoomStatusEventBuilder():Ref<RoomStatusEventBuilder>

	export function newScopeConfigBuilder():Ref<ScopeConfigBuilder>

	export function newSearchRoomLevelReqBuilder():Ref<SearchRoomLevelReqBuilder>

	export function newSearchRoomPathReqBodyBuilder():Ref<SearchRoomPathReqBodyBuilder>

	export function newSearchRoomReqBodyBuilder():Ref<SearchRoomReqBodyBuilder>

	export function newSearchRoomReqBuilder():Ref<SearchRoomReqBuilder>

	export function newSetCheckboardAccessCodeRoomConfigPathReqBodyBuilder():Ref<SetCheckboardAccessCodeRoomConfigPathReqBodyBuilder>

	export function newSetCheckboardAccessCodeRoomConfigReqBodyBuilder():Ref<SetCheckboardAccessCodeRoomConfigReqBodyBuilder>

	export function newSetCheckboardAccessCodeRoomConfigReqBuilder():Ref<SetCheckboardAccessCodeRoomConfigReqBuilder>

	export function newSetHostMeetingPathReqBodyBuilder():Ref<SetHostMeetingPathReqBodyBuilder>

	export function newSetHostMeetingReqBodyBuilder():Ref<SetHostMeetingReqBodyBuilder>

	export function newSetHostMeetingReqBuilder():Ref<SetHostMeetingReqBuilder>

	export function newSetPermissionMeetingRecordingPathReqBodyBuilder():Ref<SetPermissionMeetingRecordingPathReqBodyBuilder>

	export function newSetPermissionMeetingRecordingReqBodyBuilder():Ref<SetPermissionMeetingRecordingReqBodyBuilder>

	export function newSetPermissionMeetingRecordingReqBuilder():Ref<SetPermissionMeetingRecordingReqBuilder>

	export function newSetRoomAccessCodeRoomConfigPathReqBodyBuilder():Ref<SetRoomAccessCodeRoomConfigPathReqBodyBuilder>

	export function newSetRoomAccessCodeRoomConfigReqBodyBuilder():Ref<SetRoomAccessCodeRoomConfigReqBodyBuilder>

	export function newSetRoomAccessCodeRoomConfigReqBuilder():Ref<SetRoomAccessCodeRoomConfigReqBuilder>

	export function newSetRoomConfigPathReqBodyBuilder():Ref<SetRoomConfigPathReqBodyBuilder>

	export function newSetRoomConfigReqBodyBuilder():Ref<SetRoomConfigReqBodyBuilder>

	export function newSetRoomConfigReqBuilder():Ref<SetRoomConfigReqBuilder>

	export function newStartMeetingRecordingPathReqBodyBuilder():Ref<StartMeetingRecordingPathReqBodyBuilder>

	export function newStartMeetingRecordingReqBodyBuilder():Ref<StartMeetingRecordingReqBodyBuilder>

	export function newStartMeetingRecordingReqBuilder():Ref<StartMeetingRecordingReqBuilder>

	export function newStopMeetingRecordingReqBuilder():Ref<StopMeetingRecordingReqBuilder>

	export function newSubscribeDepartmentBuilder():Ref<SubscribeDepartmentBuilder>

	export function newSubscribeUserBuilder():Ref<SubscribeUserBuilder>

	export function newSubscribeUserEventBuilder():Ref<SubscribeUserEventBuilder>

	export function newTimeConfigBuilder():Ref<TimeConfigBuilder>

	export function newUpdateReservePathReqBodyBuilder():Ref<UpdateReservePathReqBodyBuilder>

	export function newUpdateReserveReqBodyBuilder():Ref<UpdateReserveReqBodyBuilder>

	export function newUpdateReserveReqBuilder():Ref<UpdateReserveReqBuilder>

	export function newUserIdBuilder():Ref<UserIdBuilder>

	//4
	export const NodeScopeBuilding:int
	//3
	export const NodeScopeCity:int
	//2
	export const NodeScopeCountryDistrict:int
	//5
	export const NodeScopeFloor:int
	//6
	export const NodeScopeRoom:int
	//4
	export const NodeScopeSetCheckboardAccessCodeRoomConfigBuilding:int
	//3
	export const NodeScopeSetCheckboardAccessCodeRoomConfigCity:int
	//2
	export const NodeScopeSetCheckboardAccessCodeRoomConfigCountryDistrict:int
	//5
	export const NodeScopeSetCheckboardAccessCodeRoomConfigFloor:int
	//6
	export const NodeScopeSetCheckboardAccessCodeRoomConfigRoom:int
	//1
	export const NodeScopeSetCheckboardAccessCodeRoomConfigTenant:int
	//4
	export const NodeScopeSetRoomAccessCodeRoomConfigBuilding:int
	//3
	export const NodeScopeSetRoomAccessCodeRoomConfigCity:int
	//2
	export const NodeScopeSetRoomAccessCodeRoomConfigCountryDistrict:int
	//5
	export const NodeScopeSetRoomAccessCodeRoomConfigFloor:int
	//6
	export const NodeScopeSetRoomAccessCodeRoomConfigRoom:int
	//1
	export const NodeScopeSetRoomAccessCodeRoomConfigTenant:int
	//4
	export const NodeScopeSetRoomConfigBuilding:int
	//3
	export const NodeScopeSetRoomConfigCity:int
	//2
	export const NodeScopeSetRoomConfigCountryDistrict:int
	//5
	export const NodeScopeSetRoomConfigFloor:int
	//6
	export const NodeScopeSetRoomConfigRoom:int
	//1
	export const NodeScopeSetRoomConfigTenant:int
	//1
	export const NodeScopeTenant:int
	export interface Options extends Struct<Options>{

			text:Ref<string>
			key:Ref<string>
			isOther:Ref<bool>
	}
	export interface OptionsBuilder extends Struct<OptionsBuilder>{

			text(text:string):Ref<OptionsBuilder>
			key(key:string):Ref<OptionsBuilder>
			isOther(isOther:bool):Ref<OptionsBuilder>
			build():Ref<Options>
	}
	export interface P2MeetingAllMeetingEndedV1 extends larkevent.EventHandlerModel,Struct<P2MeetingAllMeetingEndedV1>{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2MeetingAllMeetingEndedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2MeetingAllMeetingEndedV1Data extends Struct<P2MeetingAllMeetingEndedV1Data>{

			meeting:Ref<MeetingEventMeeting>
			operator:Ref<MeetingEventUser>
	}
	export interface P2MeetingAllMeetingEndedV1Handler extends Struct<P2MeetingAllMeetingEndedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2MeetingAllMeetingStartedV1 extends Struct<P2MeetingAllMeetingStartedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2MeetingAllMeetingStartedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2MeetingAllMeetingStartedV1Data extends Struct<P2MeetingAllMeetingStartedV1Data>{

			meeting:Ref<MeetingEventMeeting>
			operator:Ref<MeetingEventUser>
	}
	export interface P2MeetingAllMeetingStartedV1Handler extends Struct<P2MeetingAllMeetingStartedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2MeetingEndedV1 extends Struct<P2MeetingEndedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2MeetingEndedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2MeetingEndedV1Data extends Struct<P2MeetingEndedV1Data>{

			meeting:Ref<MeetingEventMeeting>
			operator:Ref<MeetingEventUser>
	}
	export interface P2MeetingEndedV1Handler extends Struct<P2MeetingEndedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2MeetingJoinMeetingV1 extends Struct<P2MeetingJoinMeetingV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2MeetingJoinMeetingV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2MeetingJoinMeetingV1Data extends Struct<P2MeetingJoinMeetingV1Data>{

			meeting:Ref<MeetingEventMeeting>
			operator:Ref<MeetingEventUser>
	}
	export interface P2MeetingJoinMeetingV1Handler extends Struct<P2MeetingJoinMeetingV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2MeetingLeaveMeetingV1 extends Struct<P2MeetingLeaveMeetingV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2MeetingLeaveMeetingV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2MeetingLeaveMeetingV1Data extends Struct<P2MeetingLeaveMeetingV1Data>{

			meeting:Ref<MeetingEventMeeting>
			operator:Ref<MeetingEventUser>
			leaveReason:Ref<int>
			leaveUser:Ref<MeetingEventUser>
	}
	export interface P2MeetingLeaveMeetingV1Handler extends Struct<P2MeetingLeaveMeetingV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2MeetingRecordingEndedV1 extends Struct<P2MeetingRecordingEndedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2MeetingRecordingEndedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2MeetingRecordingEndedV1Data extends Struct<P2MeetingRecordingEndedV1Data>{

			meeting:Ref<MeetingEventMeeting>
			operator:Ref<MeetingEventUser>
	}
	export interface P2MeetingRecordingEndedV1Handler extends Struct<P2MeetingRecordingEndedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2MeetingRecordingReadyV1 extends Struct<P2MeetingRecordingReadyV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2MeetingRecordingReadyV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2MeetingRecordingReadyV1Data extends Struct<P2MeetingRecordingReadyV1Data>{

			meeting:Ref<MeetingEventMeeting>
			url:Ref<string>
			duration:Ref<string>
	}
	export interface P2MeetingRecordingReadyV1Handler extends Struct<P2MeetingRecordingReadyV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2MeetingRecordingStartedV1 extends Struct<P2MeetingRecordingStartedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2MeetingRecordingStartedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2MeetingRecordingStartedV1Data extends Struct<P2MeetingRecordingStartedV1Data>{

			meeting:Ref<MeetingEventMeeting>
			operator:Ref<MeetingEventUser>
	}
	export interface P2MeetingRecordingStartedV1Handler extends Struct<P2MeetingRecordingStartedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2MeetingShareEndedV1 extends Struct<P2MeetingShareEndedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2MeetingShareEndedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2MeetingShareEndedV1Data extends Struct<P2MeetingShareEndedV1Data>{

			meeting:Ref<MeetingEventMeeting>
			operator:Ref<MeetingEventUser>
	}
	export interface P2MeetingShareEndedV1Handler extends Struct<P2MeetingShareEndedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2MeetingShareStartedV1 extends larkevent.EventHandlerModel,Struct<P2MeetingShareStartedV1>{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2MeetingShareStartedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2MeetingShareStartedV1Data extends Struct<P2MeetingShareStartedV1Data>{

			meeting:Ref<MeetingEventMeeting>
			operator:Ref<MeetingEventUser>
	}
	export interface P2MeetingShareStartedV1Handler extends Struct<P2MeetingShareStartedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2MeetingStartedV1 extends Struct<P2MeetingStartedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2MeetingStartedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2MeetingStartedV1Data extends Struct<P2MeetingStartedV1Data>{

			meeting:Ref<MeetingEventMeeting>
			operator:Ref<MeetingEventUser>
	}
	export interface P2MeetingStartedV1Handler extends Struct<P2MeetingStartedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2ReserveConfigUpdatedV1 extends Struct<P2ReserveConfigUpdatedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ReserveConfigUpdatedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ReserveConfigUpdatedV1Data extends Struct<P2ReserveConfigUpdatedV1Data>{

			scopeId:Ref<string>
			scopeType:Ref<int>
			approveConfig:Ref<ApprovalConfigEvent>
			timeConfig:Ref<TimeConfig>
			reserveScopeConfig:Ref<ReserveScopeConfigEvent>
	}
	export interface P2ReserveConfigUpdatedV1Handler extends Struct<P2ReserveConfigUpdatedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2RoomCreatedV1 extends Struct<P2RoomCreatedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2RoomCreatedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2RoomCreatedV1Data extends Struct<P2RoomCreatedV1Data>{

			room:Ref<RoomEvent>
	}
	export interface P2RoomCreatedV1Handler extends larkevent.EventHandler,Struct<P2RoomCreatedV1Handler>{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2RoomDeletedV1 extends Struct<P2RoomDeletedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2RoomDeletedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2RoomDeletedV1Data extends Struct<P2RoomDeletedV1Data>{

			room:Ref<RoomEvent>
	}
	export interface P2RoomDeletedV1Handler extends Struct<P2RoomDeletedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2RoomLevelCreatedV1 extends Struct<P2RoomLevelCreatedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2RoomLevelCreatedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2RoomLevelCreatedV1Data extends Struct<P2RoomLevelCreatedV1Data>{

			roomLevel:Ref<RoomLevel>
	}
	export interface P2RoomLevelCreatedV1Handler extends Struct<P2RoomLevelCreatedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2RoomLevelDeletedV1 extends Struct<P2RoomLevelDeletedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2RoomLevelDeletedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2RoomLevelDeletedV1Data extends Struct<P2RoomLevelDeletedV1Data>{

			roomLevelId:Ref<string>
			deleteChild:Ref<bool>
	}
	export interface P2RoomLevelDeletedV1Handler extends Struct<P2RoomLevelDeletedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2RoomLevelUpdatedV1 extends Struct<P2RoomLevelUpdatedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2RoomLevelUpdatedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2RoomLevelUpdatedV1Data extends Struct<P2RoomLevelUpdatedV1Data>{

			roomLevel:Ref<RoomLevel>
	}
	export interface P2RoomLevelUpdatedV1Handler extends Struct<P2RoomLevelUpdatedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2RoomUpdatedV1 extends Struct<P2RoomUpdatedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2RoomUpdatedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2RoomUpdatedV1Data extends Struct<P2RoomUpdatedV1Data>{

			room:Ref<RoomEvent>
	}
	export interface P2RoomUpdatedV1Handler extends larkevent.EventHandler,Struct<P2RoomUpdatedV1Handler>{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface Participant extends Struct<Participant>{

			participantName:Ref<string>
			department:Ref<string>
			userId:Ref<string>
			meetingRoomId:Ref<string>
			employeeId:Ref<string>
			phone:Ref<string>
			email:Ref<string>
			device:Ref<string>
			appVersion:Ref<string>
			publicIp:Ref<string>
			internalIp:Ref<string>
			useRtcProxy:Ref<bool>
			location:Ref<string>
			networkType:Ref<string>
			protocol:Ref<string>
			microphone:Ref<string>
			speaker:Ref<string>
			camera:Ref<string>
			audio:Ref<bool>
			video:Ref<bool>
			sharing:Ref<bool>
			joinTime:Ref<string>
			leaveTime:Ref<string>
			timeInMeeting:Ref<string>
			leaveReason:Ref<string>
			acceptStatus:Ref<int>
	}
	export interface ParticipantBuilder extends Struct<ParticipantBuilder>{

			participantName(participantName:string):Ref<ParticipantBuilder>
			department(department:string):Ref<ParticipantBuilder>
			userId(userId:string):Ref<ParticipantBuilder>
			meetingRoomId(meetingRoomId:string):Ref<ParticipantBuilder>
			employeeId(employeeId:string):Ref<ParticipantBuilder>
			phone(phone:string):Ref<ParticipantBuilder>
			email(email:string):Ref<ParticipantBuilder>
			device(device:string):Ref<ParticipantBuilder>
			appVersion(appVersion:string):Ref<ParticipantBuilder>
			publicIp(publicIp:string):Ref<ParticipantBuilder>
			internalIp(internalIp:string):Ref<ParticipantBuilder>
			useRtcProxy(useRtcProxy:bool):Ref<ParticipantBuilder>
			location(location:string):Ref<ParticipantBuilder>
			networkType(networkType:string):Ref<ParticipantBuilder>
			protocol(protocol:string):Ref<ParticipantBuilder>
			microphone(microphone:string):Ref<ParticipantBuilder>
			speaker(speaker:string):Ref<ParticipantBuilder>
			camera(camera:string):Ref<ParticipantBuilder>
			audio(audio:bool):Ref<ParticipantBuilder>
			video(video:bool):Ref<ParticipantBuilder>
			sharing(sharing:bool):Ref<ParticipantBuilder>
			joinTime(joinTime:string):Ref<ParticipantBuilder>
			leaveTime(leaveTime:string):Ref<ParticipantBuilder>
			timeInMeeting(timeInMeeting:string):Ref<ParticipantBuilder>
			leaveReason(leaveReason:string):Ref<ParticipantBuilder>
			acceptStatus(acceptStatus:int):Ref<ParticipantBuilder>
			build():Ref<Participant>
	}
	export interface ParticipantListExportPathReqBodyBuilder extends Struct<ParticipantListExportPathReqBodyBuilder>{

			meetingStartTime(meetingStartTime:string):Ref<ParticipantListExportPathReqBodyBuilder>
			meetingEndTime(meetingEndTime:string):Ref<ParticipantListExportPathReqBodyBuilder>
			meetingStatus(meetingStatus:int):Ref<ParticipantListExportPathReqBodyBuilder>
			meetingNo(meetingNo:string):Ref<ParticipantListExportPathReqBodyBuilder>
			userId(userId:string):Ref<ParticipantListExportPathReqBodyBuilder>
			roomId(roomId:string):Ref<ParticipantListExportPathReqBodyBuilder>
			build():Ref<ParticipantListExportReqBody>
	}
	export interface ParticipantListExportReq extends Struct<ParticipantListExportReq>{

			body:Ref<ParticipantListExportReqBody>
	}
	export interface ParticipantListExportReqBody extends Struct<ParticipantListExportReqBody>{

			meetingStartTime:Ref<string>
			meetingEndTime:Ref<string>
			meetingStatus:Ref<int>
			meetingNo:Ref<string>
			userId:Ref<string>
			roomId:Ref<string>
	}
	export interface ParticipantListExportReqBodyBuilder extends Struct<ParticipantListExportReqBodyBuilder>{

			meetingStartTime(meetingStartTime:string):Ref<ParticipantListExportReqBodyBuilder>
			meetingEndTime(meetingEndTime:string):Ref<ParticipantListExportReqBodyBuilder>
			meetingStatus(meetingStatus:int):Ref<ParticipantListExportReqBodyBuilder>
			meetingNo(meetingNo:string):Ref<ParticipantListExportReqBodyBuilder>
			userId(userId:string):Ref<ParticipantListExportReqBodyBuilder>
			roomId(roomId:string):Ref<ParticipantListExportReqBodyBuilder>
			build():Ref<ParticipantListExportReqBody>
	}
	export interface ParticipantListExportReqBuilder extends Struct<ParticipantListExportReqBuilder>{

			userIdType(userIdType:string):Ref<ParticipantListExportReqBuilder>
			body(body:Ref<ParticipantListExportReqBody>):Ref<ParticipantListExportReqBuilder>
			build():Ref<ParticipantListExportReq>
	}
	export interface ParticipantListExportResp extends Struct<ParticipantListExportResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ParticipantListExportRespData>
			success():bool
	}
	export interface ParticipantListExportRespData extends Struct<ParticipantListExportRespData>{

			taskId:Ref<string>
	}
	export interface ParticipantQuality extends Struct<ParticipantQuality>{

			network:Ref<QualityNetwork>
			audio:Ref<QualityAudio>
			video:Ref<QualityVideoSharing>
			screenSharing:Ref<QualityVideoSharing>
			cpuUsage:Ref<QualityCpuUsage>
	}
	export interface ParticipantQualityBuilder extends Struct<ParticipantQualityBuilder>{

			network(network:Ref<QualityNetwork>):Ref<ParticipantQualityBuilder>
			audio(audio:Ref<QualityAudio>):Ref<ParticipantQualityBuilder>
			video(video:Ref<QualityVideoSharing>):Ref<ParticipantQualityBuilder>
			screenSharing(screenSharing:Ref<QualityVideoSharing>):Ref<ParticipantQualityBuilder>
			cpuUsage(cpuUsage:Ref<QualityCpuUsage>):Ref<ParticipantQualityBuilder>
			build():Ref<ParticipantQuality>
	}
	export interface ParticipantQualityListExportPathReqBodyBuilder extends Struct<ParticipantQualityListExportPathReqBodyBuilder>{

			meetingStartTime(meetingStartTime:string):Ref<ParticipantQualityListExportPathReqBodyBuilder>
			meetingEndTime(meetingEndTime:string):Ref<ParticipantQualityListExportPathReqBodyBuilder>
			meetingNo(meetingNo:string):Ref<ParticipantQualityListExportPathReqBodyBuilder>
			joinTime(joinTime:string):Ref<ParticipantQualityListExportPathReqBodyBuilder>
			userId(userId:string):Ref<ParticipantQualityListExportPathReqBodyBuilder>
			roomId(roomId:string):Ref<ParticipantQualityListExportPathReqBodyBuilder>
			build():Ref<ParticipantQualityListExportReqBody>
	}
	export interface ParticipantQualityListExportReq extends Struct<ParticipantQualityListExportReq>{

			body:Ref<ParticipantQualityListExportReqBody>
	}
	export interface ParticipantQualityListExportReqBody extends Struct<ParticipantQualityListExportReqBody>{

			meetingStartTime:Ref<string>
			meetingEndTime:Ref<string>
			meetingNo:Ref<string>
			joinTime:Ref<string>
			userId:Ref<string>
			roomId:Ref<string>
	}
	export interface ParticipantQualityListExportReqBodyBuilder extends Struct<ParticipantQualityListExportReqBodyBuilder>{

			meetingStartTime(meetingStartTime:string):Ref<ParticipantQualityListExportReqBodyBuilder>
			meetingEndTime(meetingEndTime:string):Ref<ParticipantQualityListExportReqBodyBuilder>
			meetingNo(meetingNo:string):Ref<ParticipantQualityListExportReqBodyBuilder>
			joinTime(joinTime:string):Ref<ParticipantQualityListExportReqBodyBuilder>
			userId(userId:string):Ref<ParticipantQualityListExportReqBodyBuilder>
			roomId(roomId:string):Ref<ParticipantQualityListExportReqBodyBuilder>
			build():Ref<ParticipantQualityListExportReqBody>
	}
	export interface ParticipantQualityListExportReqBuilder extends Struct<ParticipantQualityListExportReqBuilder>{

			userIdType(userIdType:string):Ref<ParticipantQualityListExportReqBuilder>
			body(body:Ref<ParticipantQualityListExportReqBody>):Ref<ParticipantQualityListExportReqBuilder>
			build():Ref<ParticipantQualityListExportReq>
	}
	export interface ParticipantQualityListExportResp extends Struct<ParticipantQualityListExportResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ParticipantQualityListExportRespData>
			success():bool
	}
	export interface ParticipantQualityListExportRespData extends Struct<ParticipantQualityListExportRespData>{

			taskId:Ref<string>
	}
	export interface PatchReserveConfigAdminPathReqBodyBuilder extends Struct<PatchReserveConfigAdminPathReqBodyBuilder>{

			scopeType(scopeType:int):Ref<PatchReserveConfigAdminPathReqBodyBuilder>
			reserveAdminConfig(reserveAdminConfig:Ref<ReserveAdminConfig>):Ref<PatchReserveConfigAdminPathReqBodyBuilder>
			build():Ref<PatchReserveConfigAdminReqBody>
	}
	export interface PatchReserveConfigAdminReq extends Struct<PatchReserveConfigAdminReq>{

			body:Ref<PatchReserveConfigAdminReqBody>
	}
	export interface PatchReserveConfigAdminReqBody extends Struct<PatchReserveConfigAdminReqBody>{

			scopeType:Ref<int>
			reserveAdminConfig:Ref<ReserveAdminConfig>
	}
	export interface PatchReserveConfigAdminReqBodyBuilder extends Struct<PatchReserveConfigAdminReqBodyBuilder>{

			scopeType(scopeType:int):Ref<PatchReserveConfigAdminReqBodyBuilder>
			reserveAdminConfig(reserveAdminConfig:Ref<ReserveAdminConfig>):Ref<PatchReserveConfigAdminReqBodyBuilder>
			build():Ref<PatchReserveConfigAdminReqBody>
	}
	export interface PatchReserveConfigAdminReqBuilder extends Struct<PatchReserveConfigAdminReqBuilder>{

			reserveConfigId(reserveConfigId:string):Ref<PatchReserveConfigAdminReqBuilder>
			userIdType(userIdType:string):Ref<PatchReserveConfigAdminReqBuilder>
			body(body:Ref<PatchReserveConfigAdminReqBody>):Ref<PatchReserveConfigAdminReqBuilder>
			build():Ref<PatchReserveConfigAdminReq>
	}
	export interface PatchReserveConfigAdminResp extends Struct<PatchReserveConfigAdminResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface PatchReserveConfigDisableInformPathReqBodyBuilder extends Struct<PatchReserveConfigDisableInformPathReqBodyBuilder>{

			scopeType(scopeType:int):Ref<PatchReserveConfigDisableInformPathReqBodyBuilder>
			disableInform(disableInform:Ref<DisableInformConfig>):Ref<PatchReserveConfigDisableInformPathReqBodyBuilder>
			build():Ref<PatchReserveConfigDisableInformReqBody>
	}
	export interface PatchReserveConfigDisableInformReq extends Struct<PatchReserveConfigDisableInformReq>{

			body:Ref<PatchReserveConfigDisableInformReqBody>
	}
	export interface PatchReserveConfigDisableInformReqBody extends Struct<PatchReserveConfigDisableInformReqBody>{

			scopeType:Ref<int>
			disableInform:Ref<DisableInformConfig>
	}
	export interface PatchReserveConfigDisableInformReqBodyBuilder extends Struct<PatchReserveConfigDisableInformReqBodyBuilder>{

			scopeType(scopeType:int):Ref<PatchReserveConfigDisableInformReqBodyBuilder>
			disableInform(disableInform:Ref<DisableInformConfig>):Ref<PatchReserveConfigDisableInformReqBodyBuilder>
			build():Ref<PatchReserveConfigDisableInformReqBody>
	}
	export interface PatchReserveConfigDisableInformReqBuilder extends Struct<PatchReserveConfigDisableInformReqBuilder>{

			reserveConfigId(reserveConfigId:string):Ref<PatchReserveConfigDisableInformReqBuilder>
			userIdType(userIdType:string):Ref<PatchReserveConfigDisableInformReqBuilder>
			body(body:Ref<PatchReserveConfigDisableInformReqBody>):Ref<PatchReserveConfigDisableInformReqBuilder>
			build():Ref<PatchReserveConfigDisableInformReq>
	}
	export interface PatchReserveConfigDisableInformResp extends Struct<PatchReserveConfigDisableInformResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface PatchReserveConfigFormPathReqBodyBuilder extends Struct<PatchReserveConfigFormPathReqBodyBuilder>{

			scopeType(scopeType:int):Ref<PatchReserveConfigFormPathReqBodyBuilder>
			reserveFormConfig(reserveFormConfig:Ref<ReserveFormConfig>):Ref<PatchReserveConfigFormPathReqBodyBuilder>
			build():Ref<PatchReserveConfigFormReqBody>
	}
	export interface PatchReserveConfigFormReq extends Struct<PatchReserveConfigFormReq>{

			body:Ref<PatchReserveConfigFormReqBody>
	}
	export interface PatchReserveConfigFormReqBody extends Struct<PatchReserveConfigFormReqBody>{

			scopeType:Ref<int>
			reserveFormConfig:Ref<ReserveFormConfig>
	}
	export interface PatchReserveConfigFormReqBodyBuilder extends Struct<PatchReserveConfigFormReqBodyBuilder>{

			scopeType(scopeType:int):Ref<PatchReserveConfigFormReqBodyBuilder>
			reserveFormConfig(reserveFormConfig:Ref<ReserveFormConfig>):Ref<PatchReserveConfigFormReqBodyBuilder>
			build():Ref<PatchReserveConfigFormReqBody>
	}
	export interface PatchReserveConfigFormReqBuilder extends Struct<PatchReserveConfigFormReqBuilder>{

			reserveConfigId(reserveConfigId:string):Ref<PatchReserveConfigFormReqBuilder>
			userIdType(userIdType:string):Ref<PatchReserveConfigFormReqBuilder>
			body(body:Ref<PatchReserveConfigFormReqBody>):Ref<PatchReserveConfigFormReqBuilder>
			build():Ref<PatchReserveConfigFormReq>
	}
	export interface PatchReserveConfigFormResp extends Struct<PatchReserveConfigFormResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface PatchReserveConfigPathReqBodyBuilder extends Struct<PatchReserveConfigPathReqBodyBuilder>{

			scopeType(scopeType:string):Ref<PatchReserveConfigPathReqBodyBuilder>
			approvalConfig(approvalConfig:Ref<ApprovalConfig>):Ref<PatchReserveConfigPathReqBodyBuilder>
			timeConfig(timeConfig:Ref<TimeConfig>):Ref<PatchReserveConfigPathReqBodyBuilder>
			reserveScopeConfig(reserveScopeConfig:Ref<ReserveScopeConfig>):Ref<PatchReserveConfigPathReqBodyBuilder>
			build():Ref<PatchReserveConfigReqBody>
	}
	export interface PatchReserveConfigReq extends Struct<PatchReserveConfigReq>{

			body:Ref<PatchReserveConfigReqBody>
	}
	export interface PatchReserveConfigReqBody extends Struct<PatchReserveConfigReqBody>{

			scopeType:Ref<string>
			approvalConfig:Ref<ApprovalConfig>
			timeConfig:Ref<TimeConfig>
			reserveScopeConfig:Ref<ReserveScopeConfig>
	}
	export interface PatchReserveConfigReqBodyBuilder extends Struct<PatchReserveConfigReqBodyBuilder>{

			scopeType(scopeType:string):Ref<PatchReserveConfigReqBodyBuilder>
			approvalConfig(approvalConfig:Ref<ApprovalConfig>):Ref<PatchReserveConfigReqBodyBuilder>
			timeConfig(timeConfig:Ref<TimeConfig>):Ref<PatchReserveConfigReqBodyBuilder>
			reserveScopeConfig(reserveScopeConfig:Ref<ReserveScopeConfig>):Ref<PatchReserveConfigReqBodyBuilder>
			build():Ref<PatchReserveConfigReqBody>
	}
	export interface PatchReserveConfigReqBuilder extends Struct<PatchReserveConfigReqBuilder>{

			reserveConfigId(reserveConfigId:string):Ref<PatchReserveConfigReqBuilder>
			userIdType(userIdType:string):Ref<PatchReserveConfigReqBuilder>
			body(body:Ref<PatchReserveConfigReqBody>):Ref<PatchReserveConfigReqBuilder>
			build():Ref<PatchReserveConfigReq>
	}
	export interface PatchReserveConfigResp extends Struct<PatchReserveConfigResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface PatchRoomLevelReq extends Struct<PatchRoomLevelReq>{

			roomLevel:Ref<RoomLevel>
	}
	export interface PatchRoomLevelReqBuilder extends Struct<PatchRoomLevelReqBuilder>{

			roomLevelId(roomLevelId:string):Ref<PatchRoomLevelReqBuilder>
			roomLevel(roomLevel:Ref<RoomLevel>):Ref<PatchRoomLevelReqBuilder>
			build():Ref<PatchRoomLevelReq>
	}
	export interface PatchRoomLevelResp extends Struct<PatchRoomLevelResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface PatchRoomReq extends Struct<PatchRoomReq>{

			room:Ref<Room>
	}
	export interface PatchRoomReqBuilder extends Struct<PatchRoomReqBuilder>{

			roomId(roomId:string):Ref<PatchRoomReqBuilder>
			userIdType(userIdType:string):Ref<PatchRoomReqBuilder>
			room(room:Ref<Room>):Ref<PatchRoomReqBuilder>
			build():Ref<PatchRoomReq>
	}
	export interface PatchRoomResp extends Struct<PatchRoomResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface PstnSipInfo extends Struct<PstnSipInfo>{

			nickname:Ref<string>
			mainAddress:Ref<string>
	}
	export interface PstnSipInfoBuilder extends Struct<PstnSipInfoBuilder>{

			nickname(nickname:string):Ref<PstnSipInfoBuilder>
			mainAddress(mainAddress:string):Ref<PstnSipInfoBuilder>
			build():Ref<PstnSipInfo>
	}
	export interface QualityAudio extends Struct<QualityAudio>{

			time:Ref<string>
			micInputVolume:Ref<string>
			speakerVolume:Ref<string>
			bitrateReceived:Ref<string>
			latencyReceived:Ref<string>
			jitterReceived:Ref<string>
			bitrateSent:Ref<string>
			latencySent:Ref<string>
			jitterSent:Ref<string>
	}
	export interface QualityAudioBuilder extends Struct<QualityAudioBuilder>{

			time(time:string):Ref<QualityAudioBuilder>
			micInputVolume(micInputVolume:string):Ref<QualityAudioBuilder>
			speakerVolume(speakerVolume:string):Ref<QualityAudioBuilder>
			bitrateReceived(bitrateReceived:string):Ref<QualityAudioBuilder>
			latencyReceived(latencyReceived:string):Ref<QualityAudioBuilder>
			jitterReceived(jitterReceived:string):Ref<QualityAudioBuilder>
			bitrateSent(bitrateSent:string):Ref<QualityAudioBuilder>
			latencySent(latencySent:string):Ref<QualityAudioBuilder>
			jitterSent(jitterSent:string):Ref<QualityAudioBuilder>
			build():Ref<QualityAudio>
	}
	export interface QualityCpuUsage extends Struct<QualityCpuUsage>{

			time:Ref<string>
			clientAvgCpuUsage:Ref<string>
			clientMaxCpuUsage:Ref<string>
			systemAvgCpuUsage:Ref<string>
			systemMaxCpuUsage:Ref<string>
	}
	export interface QualityCpuUsageBuilder extends Struct<QualityCpuUsageBuilder>{

			time(time:string):Ref<QualityCpuUsageBuilder>
			clientAvgCpuUsage(clientAvgCpuUsage:string):Ref<QualityCpuUsageBuilder>
			clientMaxCpuUsage(clientMaxCpuUsage:string):Ref<QualityCpuUsageBuilder>
			systemAvgCpuUsage(systemAvgCpuUsage:string):Ref<QualityCpuUsageBuilder>
			systemMaxCpuUsage(systemMaxCpuUsage:string):Ref<QualityCpuUsageBuilder>
			build():Ref<QualityCpuUsage>
	}
	export interface QualityNetwork extends Struct<QualityNetwork>{

			time:Ref<string>
			networkDelay:Ref<string>
			bitrateReceived:Ref<string>
			packetLossAvgReceived:Ref<string>
			packetLossMaxReceived:Ref<string>
			bitrateSent:Ref<string>
			packetLossAvgSent:Ref<string>
			packetLossMaxSent:Ref<string>
	}
	export interface QualityNetworkBuilder extends Struct<QualityNetworkBuilder>{

			time(time:string):Ref<QualityNetworkBuilder>
			networkDelay(networkDelay:string):Ref<QualityNetworkBuilder>
			bitrateReceived(bitrateReceived:string):Ref<QualityNetworkBuilder>
			packetLossAvgReceived(packetLossAvgReceived:string):Ref<QualityNetworkBuilder>
			packetLossMaxReceived(packetLossMaxReceived:string):Ref<QualityNetworkBuilder>
			bitrateSent(bitrateSent:string):Ref<QualityNetworkBuilder>
			packetLossAvgSent(packetLossAvgSent:string):Ref<QualityNetworkBuilder>
			packetLossMaxSent(packetLossMaxSent:string):Ref<QualityNetworkBuilder>
			build():Ref<QualityNetwork>
	}
	export interface QualityVideoSharing extends Struct<QualityVideoSharing>{

			time:Ref<string>
			bitrateReceived:Ref<string>
			latencyReceived:Ref<string>
			jitterReceived:Ref<string>
			maximumResolutionReceived:Ref<string>
			framerateReceived:Ref<string>
			bitrateSent:Ref<string>
			latencySent:Ref<string>
			jitterSent:Ref<string>
			maximumResolutionSent:Ref<string>
			framerateSent:Ref<string>
	}
	export interface QualityVideoSharingBuilder extends Struct<QualityVideoSharingBuilder>{

			time(time:string):Ref<QualityVideoSharingBuilder>
			bitrateReceived(bitrateReceived:string):Ref<QualityVideoSharingBuilder>
			latencyReceived(latencyReceived:string):Ref<QualityVideoSharingBuilder>
			jitterReceived(jitterReceived:string):Ref<QualityVideoSharingBuilder>
			maximumResolutionReceived(maximumResolutionReceived:string):Ref<QualityVideoSharingBuilder>
			framerateReceived(framerateReceived:string):Ref<QualityVideoSharingBuilder>
			bitrateSent(bitrateSent:string):Ref<QualityVideoSharingBuilder>
			latencySent(latencySent:string):Ref<QualityVideoSharingBuilder>
			jitterSent(jitterSent:string):Ref<QualityVideoSharingBuilder>
			maximumResolutionSent(maximumResolutionSent:string):Ref<QualityVideoSharingBuilder>
			framerateSent(framerateSent:string):Ref<QualityVideoSharingBuilder>
			build():Ref<QualityVideoSharing>
	}
	export interface QueryRoomConfigReq extends Struct<QueryRoomConfigReq>{

	}
	export interface QueryRoomConfigReqBuilder extends Struct<QueryRoomConfigReqBuilder>{

			scope(scope:int):Ref<QueryRoomConfigReqBuilder>
			countryId(countryId:string):Ref<QueryRoomConfigReqBuilder>
			districtId(districtId:string):Ref<QueryRoomConfigReqBuilder>
			buildingId(buildingId:string):Ref<QueryRoomConfigReqBuilder>
			floorName(floorName:string):Ref<QueryRoomConfigReqBuilder>
			roomId(roomId:string):Ref<QueryRoomConfigReqBuilder>
			userIdType(userIdType:string):Ref<QueryRoomConfigReqBuilder>
			build():Ref<QueryRoomConfigReq>
	}
	export interface QueryRoomConfigResp extends Struct<QueryRoomConfigResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<QueryRoomConfigRespData>
			success():bool
	}
	export interface QueryRoomConfigRespData extends Struct<QueryRoomConfigRespData>{

			roomBackground:Ref<string>
			displayBackground:Ref<string>
			digitalSignage:Ref<RoomDigitalSignage>
			roomBoxDigitalSignage:Ref<RoomDigitalSignage>
			roomStatus:Ref<RoomStatus>
	}
	//2
	export const QueryTypeErc:int
	//1
	export const QueryTypeRoom:int
	//3
	export const QueryTypeSip:int
	export interface RecordingPermissionObject extends Struct<RecordingPermissionObject>{

			id:Ref<string>
			type:Ref<int>
			permission:Ref<int>
	}
	export interface RecordingPermissionObjectBuilder extends Struct<RecordingPermissionObjectBuilder>{

			id(id:string):Ref<RecordingPermissionObjectBuilder>
			type(type_:int):Ref<RecordingPermissionObjectBuilder>
			permission(permission:int):Ref<RecordingPermissionObjectBuilder>
			build():Ref<RecordingPermissionObject>
	}
	export interface Report extends Struct<Report>{

			totalMeetingCount:Ref<string>
			totalMeetingDuration:Ref<string>
			totalParticipantCount:Ref<string>
			dailyReport:Ref<ReportMeetingDaily>[]
	}
	export interface ReportBuilder extends Struct<ReportBuilder>{

			totalMeetingCount(totalMeetingCount:string):Ref<ReportBuilder>
			totalMeetingDuration(totalMeetingDuration:string):Ref<ReportBuilder>
			totalParticipantCount(totalParticipantCount:string):Ref<ReportBuilder>
			dailyReport(dailyReport:Ref<ReportMeetingDaily>[]):Ref<ReportBuilder>
			build():Ref<Report>
	}
	export interface ReportMeetingDaily extends Struct<ReportMeetingDaily>{

			date:Ref<string>
			meetingCount:Ref<string>
			meetingDuration:Ref<string>
			participantCount:Ref<string>
	}
	export interface ReportMeetingDailyBuilder extends Struct<ReportMeetingDailyBuilder>{

			date(date:string):Ref<ReportMeetingDailyBuilder>
			meetingCount(meetingCount:string):Ref<ReportMeetingDailyBuilder>
			meetingDuration(meetingDuration:string):Ref<ReportMeetingDailyBuilder>
			participantCount(participantCount:string):Ref<ReportMeetingDailyBuilder>
			build():Ref<ReportMeetingDaily>
	}
	export interface ReportTopUser extends Struct<ReportTopUser>{

			id:Ref<string>
			name:Ref<string>
			userType:Ref<int>
			meetingCount:Ref<string>
			meetingDuration:Ref<string>
	}
	export interface ReportTopUserBuilder extends Struct<ReportTopUserBuilder>{

			id(id:string):Ref<ReportTopUserBuilder>
			name(name:string):Ref<ReportTopUserBuilder>
			userType(userType:int):Ref<ReportTopUserBuilder>
			meetingCount(meetingCount:string):Ref<ReportTopUserBuilder>
			meetingDuration(meetingDuration:string):Ref<ReportTopUserBuilder>
			build():Ref<ReportTopUser>
	}
	export interface Reserve extends Struct<Reserve>{

			id:Ref<string>
			meetingNo:Ref<string>
			password:Ref<string>
			url:Ref<string>
			appLink:Ref<string>
			liveLink:Ref<string>
			endTime:Ref<string>
			expireStatus:Ref<int>
			reserveUserId:Ref<string>
			meetingSettings:Ref<ReserveMeetingSetting>
	}
	export interface ReserveActionPermission extends Struct<ReserveActionPermission>{

			permission:Ref<int>
			permissionCheckers:Ref<ReservePermissionChecker>[]
	}
	export interface ReserveActionPermissionBuilder extends Struct<ReserveActionPermissionBuilder>{

			permission(permission:int):Ref<ReserveActionPermissionBuilder>
			permissionCheckers(permissionCheckers:Ref<ReservePermissionChecker>[]):Ref<ReserveActionPermissionBuilder>
			build():Ref<ReserveActionPermission>
	}
	export interface ReserveAdminConfig extends Struct<ReserveAdminConfig>{

			depts:Ref<SubscribeDepartment>[]
			users:Ref<SubscribeUser>[]
	}
	export interface ReserveAdminConfigBuilder extends Struct<ReserveAdminConfigBuilder>{

			depts(depts:Ref<SubscribeDepartment>[]):Ref<ReserveAdminConfigBuilder>
			users(users:Ref<SubscribeUser>[]):Ref<ReserveAdminConfigBuilder>
			build():Ref<ReserveAdminConfig>
	}
	export interface ReserveAssignHost extends Struct<ReserveAssignHost>{

			userType:Ref<int>
			id:Ref<string>
	}
	export interface ReserveAssignHostBuilder extends Struct<ReserveAssignHostBuilder>{

			userType(userType:int):Ref<ReserveAssignHostBuilder>
			id(id:string):Ref<ReserveAssignHostBuilder>
			build():Ref<ReserveAssignHost>
	}
	export interface ReserveBuilder extends Struct<ReserveBuilder>{

			id(id:string):Ref<ReserveBuilder>
			meetingNo(meetingNo:string):Ref<ReserveBuilder>
			password(password:string):Ref<ReserveBuilder>
			url(url:string):Ref<ReserveBuilder>
			appLink(appLink:string):Ref<ReserveBuilder>
			liveLink(liveLink:string):Ref<ReserveBuilder>
			endTime(endTime:string):Ref<ReserveBuilder>
			expireStatus(expireStatus:int):Ref<ReserveBuilder>
			reserveUserId(reserveUserId:string):Ref<ReserveBuilder>
			meetingSettings(meetingSettings:Ref<ReserveMeetingSetting>):Ref<ReserveBuilder>
			build():Ref<Reserve>
	}
	export interface ReserveCallSetting extends Struct<ReserveCallSetting>{

			callee:Ref<ReserveCallee>
	}
	export interface ReserveCallSettingBuilder extends Struct<ReserveCallSettingBuilder>{

			callee(callee:Ref<ReserveCallee>):Ref<ReserveCallSettingBuilder>
			build():Ref<ReserveCallSetting>
	}
	export interface ReserveCallee extends Struct<ReserveCallee>{

			id:Ref<string>
			userType:Ref<int>
			pstnSipInfo:Ref<PstnSipInfo>
	}
	export interface ReserveCalleeBuilder extends Struct<ReserveCalleeBuilder>{

			id(id:string):Ref<ReserveCalleeBuilder>
			userType(userType:int):Ref<ReserveCalleeBuilder>
			pstnSipInfo(pstnSipInfo:Ref<PstnSipInfo>):Ref<ReserveCalleeBuilder>
			build():Ref<ReserveCallee>
	}
	export interface ReserveCorrectionCheckInfo extends Struct<ReserveCorrectionCheckInfo>{

			invalidHostIdList:string[]
	}
	export interface ReserveCorrectionCheckInfoBuilder extends Struct<ReserveCorrectionCheckInfoBuilder>{

			invalidHostIdList(invalidHostIdList:string[]):Ref<ReserveCorrectionCheckInfoBuilder>
			build():Ref<ReserveCorrectionCheckInfo>
	}
	export interface ReserveFormConfig extends Struct<ReserveFormConfig>{

			ifCoverChildScope:Ref<bool>
			reserveForm:Ref<bool>
			notifiedUsers:Ref<SubscribeUser>[]
			notifiedTime:Ref<int>
			timeUnit:Ref<int>
	}
	export interface ReserveFormConfigBuilder extends Struct<ReserveFormConfigBuilder>{

			ifCoverChildScope(ifCoverChildScope:bool):Ref<ReserveFormConfigBuilder>
			reserveForm(reserveForm:bool):Ref<ReserveFormConfigBuilder>
			notifiedUsers(notifiedUsers:Ref<SubscribeUser>[]):Ref<ReserveFormConfigBuilder>
			notifiedTime(notifiedTime:int):Ref<ReserveFormConfigBuilder>
			timeUnit(timeUnit:int):Ref<ReserveFormConfigBuilder>
			build():Ref<ReserveFormConfig>
	}
	export interface ReserveMeetingSetting extends Struct<ReserveMeetingSetting>{

			topic:Ref<string>
			actionPermissions:Ref<ReserveActionPermission>[]
			meetingInitialType:Ref<int>
			callSetting:Ref<ReserveCallSetting>
			autoRecord:Ref<bool>
			assignHostList:Ref<ReserveAssignHost>[]
			password:Ref<string>
	}
	export interface ReserveMeetingSettingBuilder extends Struct<ReserveMeetingSettingBuilder>{

			topic(topic:string):Ref<ReserveMeetingSettingBuilder>
			actionPermissions(actionPermissions:Ref<ReserveActionPermission>[]):Ref<ReserveMeetingSettingBuilder>
			meetingInitialType(meetingInitialType:int):Ref<ReserveMeetingSettingBuilder>
			callSetting(callSetting:Ref<ReserveCallSetting>):Ref<ReserveMeetingSettingBuilder>
			autoRecord(autoRecord:bool):Ref<ReserveMeetingSettingBuilder>
			assignHostList(assignHostList:Ref<ReserveAssignHost>[]):Ref<ReserveMeetingSettingBuilder>
			password(password:string):Ref<ReserveMeetingSettingBuilder>
			build():Ref<ReserveMeetingSetting>
	}
	export interface ReservePermissionChecker extends Struct<ReservePermissionChecker>{

			checkField:Ref<int>
			checkMode:Ref<int>
			checkList:string[]
	}
	export interface ReservePermissionCheckerBuilder extends Struct<ReservePermissionCheckerBuilder>{

			checkField(checkField:int):Ref<ReservePermissionCheckerBuilder>
			checkMode(checkMode:int):Ref<ReservePermissionCheckerBuilder>
			checkList(checkList:string[]):Ref<ReservePermissionCheckerBuilder>
			build():Ref<ReservePermissionChecker>
	}
	export interface ReserveScopeConfig extends Struct<ReserveScopeConfig>{

			ifCoverChildScope:Ref<bool>
			allowAllUsers:Ref<int>
			allowUsers:Ref<SubscribeUser>[]
			allowDepts:Ref<SubscribeDepartment>[]
	}
	export interface ReserveScopeConfigBuilder extends Struct<ReserveScopeConfigBuilder>{

			ifCoverChildScope(ifCoverChildScope:bool):Ref<ReserveScopeConfigBuilder>
			allowAllUsers(allowAllUsers:int):Ref<ReserveScopeConfigBuilder>
			allowUsers(allowUsers:Ref<SubscribeUser>[]):Ref<ReserveScopeConfigBuilder>
			allowDepts(allowDepts:Ref<SubscribeDepartment>[]):Ref<ReserveScopeConfigBuilder>
			build():Ref<ReserveScopeConfig>
	}
	export interface ReserveScopeConfigEvent extends Struct<ReserveScopeConfigEvent>{

			allowAllUsers:Ref<int>
			allowUsers:Ref<SubscribeUserEvent>[]
			allowDepts:Ref<SubscribeDepartment>[]
	}
	export interface ReserveScopeConfigEventBuilder extends Struct<ReserveScopeConfigEventBuilder>{

			allowAllUsers(allowAllUsers:int):Ref<ReserveScopeConfigEventBuilder>
			allowUsers(allowUsers:Ref<SubscribeUserEvent>[]):Ref<ReserveScopeConfigEventBuilder>
			allowDepts(allowDepts:Ref<SubscribeDepartment>[]):Ref<ReserveScopeConfigEventBuilder>
			build():Ref<ReserveScopeConfigEvent>
	}
	export interface ReserveScopeReserveConfigReq extends Struct<ReserveScopeReserveConfigReq>{

	}
	export interface ReserveScopeReserveConfigReqBuilder extends Struct<ReserveScopeReserveConfigReqBuilder>{

			scopeId(scopeId:string):Ref<ReserveScopeReserveConfigReqBuilder>
			scopeType(scopeType:string):Ref<ReserveScopeReserveConfigReqBuilder>
			userIdType(userIdType:string):Ref<ReserveScopeReserveConfigReqBuilder>
			build():Ref<ReserveScopeReserveConfigReq>
	}
	export interface ReserveScopeReserveConfigResp extends Struct<ReserveScopeReserveConfigResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ReserveScopeReserveConfigRespData>
			success():bool
	}
	export interface ReserveScopeReserveConfigRespData extends Struct<ReserveScopeReserveConfigRespData>{

			approveConfig:Ref<ApprovalConfig>
			timeConfig:Ref<TimeConfig>
			reserveScopeConfig:Ref<ReserveScopeConfig>
	}
	export interface ReservedRoom extends Struct<ReservedRoom>{

			roomId:Ref<string>
			roomName:Ref<string>
	}
	export interface ReservedRoomBuilder extends Struct<ReservedRoomBuilder>{

			roomId(roomId:string):Ref<ReservedRoomBuilder>
			roomName(roomName:string):Ref<ReservedRoomBuilder>
			build():Ref<ReservedRoom>
	}
	export interface ResourceReservationListExportPathReqBodyBuilder extends Struct<ResourceReservationListExportPathReqBodyBuilder>{

			roomLevelId(roomLevelId:string):Ref<ResourceReservationListExportPathReqBodyBuilder>
			needTopic(needTopic:bool):Ref<ResourceReservationListExportPathReqBodyBuilder>
			startTime(startTime:string):Ref<ResourceReservationListExportPathReqBodyBuilder>
			endTime(endTime:string):Ref<ResourceReservationListExportPathReqBodyBuilder>
			roomIds(roomIds:string[]):Ref<ResourceReservationListExportPathReqBodyBuilder>
			isExclude(isExclude:bool):Ref<ResourceReservationListExportPathReqBodyBuilder>
			build():Ref<ResourceReservationListExportReqBody>
	}
	export interface ResourceReservationListExportReq extends Struct<ResourceReservationListExportReq>{

			body:Ref<ResourceReservationListExportReqBody>
	}
	export interface ResourceReservationListExportReqBody extends Struct<ResourceReservationListExportReqBody>{

			roomLevelId:Ref<string>
			needTopic:Ref<bool>
			startTime:Ref<string>
			endTime:Ref<string>
			roomIds:string[]
			isExclude:Ref<bool>
	}
	export interface ResourceReservationListExportReqBodyBuilder extends Struct<ResourceReservationListExportReqBodyBuilder>{

			roomLevelId(roomLevelId:string):Ref<ResourceReservationListExportReqBodyBuilder>
			needTopic(needTopic:bool):Ref<ResourceReservationListExportReqBodyBuilder>
			startTime(startTime:string):Ref<ResourceReservationListExportReqBodyBuilder>
			endTime(endTime:string):Ref<ResourceReservationListExportReqBodyBuilder>
			roomIds(roomIds:string[]):Ref<ResourceReservationListExportReqBodyBuilder>
			isExclude(isExclude:bool):Ref<ResourceReservationListExportReqBodyBuilder>
			build():Ref<ResourceReservationListExportReqBody>
	}
	export interface ResourceReservationListExportReqBuilder extends Struct<ResourceReservationListExportReqBuilder>{

			body(body:Ref<ResourceReservationListExportReqBody>):Ref<ResourceReservationListExportReqBuilder>
			build():Ref<ResourceReservationListExportReq>
	}
	export interface ResourceReservationListExportResp extends Struct<ResourceReservationListExportResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ResourceReservationListExportRespData>
			success():bool
	}
	export interface ResourceReservationListExportRespData extends Struct<ResourceReservationListExportRespData>{

			taskId:Ref<string>
	}
	export interface Room extends Struct<Room>{

			roomId:Ref<string>
			name:Ref<string>
			capacity:Ref<int>
			description:Ref<string>
			displayId:Ref<string>
			customRoomId:Ref<string>
			roomLevelId:Ref<string>
			path:string[]
			roomStatus:Ref<RoomStatus>
			device:Ref<Device>[]
	}
	export interface RoomBuilder extends Struct<RoomBuilder>{

			roomId(roomId:string):Ref<RoomBuilder>
			name(name:string):Ref<RoomBuilder>
			capacity(capacity:int):Ref<RoomBuilder>
			description(description:string):Ref<RoomBuilder>
			displayId(displayId:string):Ref<RoomBuilder>
			customRoomId(customRoomId:string):Ref<RoomBuilder>
			roomLevelId(roomLevelId:string):Ref<RoomBuilder>
			path(path:string[]):Ref<RoomBuilder>
			roomStatus(roomStatus:Ref<RoomStatus>):Ref<RoomBuilder>
			device(device:Ref<Device>[]):Ref<RoomBuilder>
			build():Ref<Room>
	}
	export interface RoomConfig extends Struct<RoomConfig>{

			roomBackground:Ref<string>
			displayBackground:Ref<string>
			digitalSignage:Ref<RoomDigitalSignage>
			roomBoxDigitalSignage:Ref<RoomDigitalSignage>
			roomStatus:Ref<RoomStatus>
	}
	export interface RoomConfigBuilder extends Struct<RoomConfigBuilder>{

			roomBackground(roomBackground:string):Ref<RoomConfigBuilder>
			displayBackground(displayBackground:string):Ref<RoomConfigBuilder>
			digitalSignage(digitalSignage:Ref<RoomDigitalSignage>):Ref<RoomConfigBuilder>
			roomBoxDigitalSignage(roomBoxDigitalSignage:Ref<RoomDigitalSignage>):Ref<RoomConfigBuilder>
			roomStatus(roomStatus:Ref<RoomStatus>):Ref<RoomConfigBuilder>
			build():Ref<RoomConfig>
	}
	export interface RoomDigitalSignage extends Struct<RoomDigitalSignage>{

			ifCoverChildScope:Ref<bool>
			enable:Ref<bool>
			mute:Ref<bool>
			startDisplay:Ref<int>
			stopDisplay:Ref<int>
			materials:Ref<RoomDigitalSignageMaterial>[]
	}
	export interface RoomDigitalSignageBuilder extends Struct<RoomDigitalSignageBuilder>{

			ifCoverChildScope(ifCoverChildScope:bool):Ref<RoomDigitalSignageBuilder>
			enable(enable:bool):Ref<RoomDigitalSignageBuilder>
			mute(mute:bool):Ref<RoomDigitalSignageBuilder>
			startDisplay(startDisplay:int):Ref<RoomDigitalSignageBuilder>
			stopDisplay(stopDisplay:int):Ref<RoomDigitalSignageBuilder>
			materials(materials:Ref<RoomDigitalSignageMaterial>[]):Ref<RoomDigitalSignageBuilder>
			build():Ref<RoomDigitalSignage>
	}
	export interface RoomDigitalSignageMaterial extends Struct<RoomDigitalSignageMaterial>{

			id:Ref<string>
			name:Ref<string>
			materialType:Ref<int>
			url:Ref<string>
			duration:Ref<int>
			cover:Ref<string>
			md5:Ref<string>
			vid:Ref<string>
			size:Ref<string>
	}
	export interface RoomDigitalSignageMaterialBuilder extends Struct<RoomDigitalSignageMaterialBuilder>{

			id(id:string):Ref<RoomDigitalSignageMaterialBuilder>
			name(name:string):Ref<RoomDigitalSignageMaterialBuilder>
			materialType(materialType:int):Ref<RoomDigitalSignageMaterialBuilder>
			url(url:string):Ref<RoomDigitalSignageMaterialBuilder>
			duration(duration:int):Ref<RoomDigitalSignageMaterialBuilder>
			cover(cover:string):Ref<RoomDigitalSignageMaterialBuilder>
			md5(md5:string):Ref<RoomDigitalSignageMaterialBuilder>
			vid(vid:string):Ref<RoomDigitalSignageMaterialBuilder>
			size(size:string):Ref<RoomDigitalSignageMaterialBuilder>
			build():Ref<RoomDigitalSignageMaterial>
	}
	export interface RoomEvent extends Struct<RoomEvent>{

			roomId:Ref<string>
			name:Ref<string>
			capacity:Ref<int>
			description:Ref<string>
			displayId:Ref<string>
			customRoomId:Ref<string>
			roomLevelId:Ref<string>
			path:string[]
			roomStatus:Ref<RoomStatusEvent>
			device:Ref<Device>[]
	}
	export interface RoomEventBuilder extends Struct<RoomEventBuilder>{

			roomId(roomId:string):Ref<RoomEventBuilder>
			name(name:string):Ref<RoomEventBuilder>
			capacity(capacity:int):Ref<RoomEventBuilder>
			description(description:string):Ref<RoomEventBuilder>
			displayId(displayId:string):Ref<RoomEventBuilder>
			customRoomId(customRoomId:string):Ref<RoomEventBuilder>
			roomLevelId(roomLevelId:string):Ref<RoomEventBuilder>
			path(path:string[]):Ref<RoomEventBuilder>
			roomStatus(roomStatus:Ref<RoomStatusEvent>):Ref<RoomEventBuilder>
			device(device:Ref<Device>[]):Ref<RoomEventBuilder>
			build():Ref<RoomEvent>
	}
	export interface RoomLevel extends Struct<RoomLevel>{

			roomLevelId:Ref<string>
			name:Ref<string>
			parentId:Ref<string>
			path:string[]
			hasChild:Ref<bool>
			customGroupId:Ref<string>
	}
	export interface RoomLevelBuilder extends Struct<RoomLevelBuilder>{

			roomLevelId(roomLevelId:string):Ref<RoomLevelBuilder>
			name(name:string):Ref<RoomLevelBuilder>
			parentId(parentId:string):Ref<RoomLevelBuilder>
			path(path:string[]):Ref<RoomLevelBuilder>
			hasChild(hasChild:bool):Ref<RoomLevelBuilder>
			customGroupId(customGroupId:string):Ref<RoomLevelBuilder>
			build():Ref<RoomLevel>
	}
	export interface RoomMeetingReservation extends Struct<RoomMeetingReservation>{

			roomId:Ref<string>
			roomName:Ref<string>
			eventTitle:Ref<string>
			reserver:Ref<string>
			reserverUserId:Ref<string>
			departmentOfReserver:Ref<string>
			guestsNumber:Ref<string>
			acceptedNumber:Ref<string>
			eventStartTime:Ref<string>
			eventEndTime:Ref<string>
			eventDuration:Ref<string>
			reservationStatus:Ref<string>
			checkInDevice:Ref<string>
			roomCheckInStatus:Ref<string>
			checkInTime:Ref<string>
			isReleaseEarly:Ref<string>
			releasingPerson:Ref<string>
			releasingTime:Ref<string>
	}
	export interface RoomMeetingReservationBuilder extends Struct<RoomMeetingReservationBuilder>{

			roomId(roomId:string):Ref<RoomMeetingReservationBuilder>
			roomName(roomName:string):Ref<RoomMeetingReservationBuilder>
			eventTitle(eventTitle:string):Ref<RoomMeetingReservationBuilder>
			reserver(reserver:string):Ref<RoomMeetingReservationBuilder>
			reserverUserId(reserverUserId:string):Ref<RoomMeetingReservationBuilder>
			departmentOfReserver(departmentOfReserver:string):Ref<RoomMeetingReservationBuilder>
			guestsNumber(guestsNumber:string):Ref<RoomMeetingReservationBuilder>
			acceptedNumber(acceptedNumber:string):Ref<RoomMeetingReservationBuilder>
			eventStartTime(eventStartTime:string):Ref<RoomMeetingReservationBuilder>
			eventEndTime(eventEndTime:string):Ref<RoomMeetingReservationBuilder>
			eventDuration(eventDuration:string):Ref<RoomMeetingReservationBuilder>
			reservationStatus(reservationStatus:string):Ref<RoomMeetingReservationBuilder>
			checkInDevice(checkInDevice:string):Ref<RoomMeetingReservationBuilder>
			roomCheckInStatus(roomCheckInStatus:string):Ref<RoomMeetingReservationBuilder>
			checkInTime(checkInTime:string):Ref<RoomMeetingReservationBuilder>
			isReleaseEarly(isReleaseEarly:string):Ref<RoomMeetingReservationBuilder>
			releasingPerson(releasingPerson:string):Ref<RoomMeetingReservationBuilder>
			releasingTime(releasingTime:string):Ref<RoomMeetingReservationBuilder>
			build():Ref<RoomMeetingReservation>
	}
	export interface RoomStatus extends Struct<RoomStatus>{

			status:Ref<bool>
			scheduleStatus:Ref<bool>
			disableStartTime:Ref<string>
			disableEndTime:Ref<string>
			disableReason:Ref<string>
			contactIds:string[]
			disableNotice:Ref<bool>
			resumeNotice:Ref<bool>
	}
	export interface RoomStatusBuilder extends Struct<RoomStatusBuilder>{

			status(status:bool):Ref<RoomStatusBuilder>
			scheduleStatus(scheduleStatus:bool):Ref<RoomStatusBuilder>
			disableStartTime(disableStartTime:string):Ref<RoomStatusBuilder>
			disableEndTime(disableEndTime:string):Ref<RoomStatusBuilder>
			disableReason(disableReason:string):Ref<RoomStatusBuilder>
			contactIds(contactIds:string[]):Ref<RoomStatusBuilder>
			disableNotice(disableNotice:bool):Ref<RoomStatusBuilder>
			resumeNotice(resumeNotice:bool):Ref<RoomStatusBuilder>
			build():Ref<RoomStatus>
	}
	export interface RoomStatusEvent extends Struct<RoomStatusEvent>{

			status:Ref<bool>
			scheduleStatus:Ref<bool>
			disableStartTime:Ref<string>
			disableEndTime:Ref<string>
			disableReason:Ref<string>
			contactIds:Ref<UserId>[]
			disableNotice:Ref<bool>
			resumeNotice:Ref<bool>
	}
	export interface RoomStatusEventBuilder extends Struct<RoomStatusEventBuilder>{

			status(status:bool):Ref<RoomStatusEventBuilder>
			scheduleStatus(scheduleStatus:bool):Ref<RoomStatusEventBuilder>
			disableStartTime(disableStartTime:string):Ref<RoomStatusEventBuilder>
			disableEndTime(disableEndTime:string):Ref<RoomStatusEventBuilder>
			disableReason(disableReason:string):Ref<RoomStatusEventBuilder>
			contactIds(contactIds:Ref<UserId>[]):Ref<RoomStatusEventBuilder>
			disableNotice(disableNotice:bool):Ref<RoomStatusEventBuilder>
			resumeNotice(resumeNotice:bool):Ref<RoomStatusEventBuilder>
			build():Ref<RoomStatusEvent>
	}
	export interface ScopeConfig extends Struct<ScopeConfig>{

			scopeType:Ref<int>
			scopeId:Ref<string>
			scopeConfig:Ref<RoomConfig>
	}
	export interface ScopeConfigBuilder extends Struct<ScopeConfigBuilder>{

			scopeType(scopeType:int):Ref<ScopeConfigBuilder>
			scopeId(scopeId:string):Ref<ScopeConfigBuilder>
			scopeConfig(scopeConfig:Ref<RoomConfig>):Ref<ScopeConfigBuilder>
			build():Ref<ScopeConfig>
	}
	//2
	export const ScopeTypeGetScopeConfigRoom:int
	//1
	export const ScopeTypeGetScopeConfigRoomLevel:int
	//2
	export const ScopeTypeRoom:int
	//1
	export const ScopeTypeRoomLevel:int
	export interface SearchRoomLevelReq extends Struct<SearchRoomLevelReq>{

	}
	export interface SearchRoomLevelReqBuilder extends Struct<SearchRoomLevelReqBuilder>{

			customLevelIds(customLevelIds:string):Ref<SearchRoomLevelReqBuilder>
			build():Ref<SearchRoomLevelReq>
	}
	export interface SearchRoomLevelResp extends Struct<SearchRoomLevelResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchRoomLevelRespData>
			success():bool
	}
	export interface SearchRoomLevelRespData extends Struct<SearchRoomLevelRespData>{

			levelIds:string[]
	}
	export interface SearchRoomPathReqBodyBuilder extends Struct<SearchRoomPathReqBodyBuilder>{

			customRoomIds(customRoomIds:string[]):Ref<SearchRoomPathReqBodyBuilder>
			keyword(keyword:string):Ref<SearchRoomPathReqBodyBuilder>
			roomLevelId(roomLevelId:string):Ref<SearchRoomPathReqBodyBuilder>
			searchLevelName(searchLevelName:bool):Ref<SearchRoomPathReqBodyBuilder>
			pageSize(pageSize:int):Ref<SearchRoomPathReqBodyBuilder>
			pageToken(pageToken:string):Ref<SearchRoomPathReqBodyBuilder>
			build():Ref<SearchRoomReqBody>
	}
	export interface SearchRoomReq extends Struct<SearchRoomReq>{

			body:Ref<SearchRoomReqBody>
	}
	export interface SearchRoomReqBody extends Struct<SearchRoomReqBody>{

			customRoomIds:string[]
			keyword:Ref<string>
			roomLevelId:Ref<string>
			searchLevelName:Ref<bool>
			pageSize:Ref<int>
			pageToken:Ref<string>
	}
	export interface SearchRoomReqBodyBuilder extends Struct<SearchRoomReqBodyBuilder>{

			customRoomIds(customRoomIds:string[]):Ref<SearchRoomReqBodyBuilder>
			keyword(keyword:string):Ref<SearchRoomReqBodyBuilder>
			roomLevelId(roomLevelId:string):Ref<SearchRoomReqBodyBuilder>
			searchLevelName(searchLevelName:bool):Ref<SearchRoomReqBodyBuilder>
			pageSize(pageSize:int):Ref<SearchRoomReqBodyBuilder>
			pageToken(pageToken:string):Ref<SearchRoomReqBodyBuilder>
			build():Ref<SearchRoomReqBody>
	}
	export interface SearchRoomReqBuilder extends Struct<SearchRoomReqBuilder>{

			userIdType(userIdType:string):Ref<SearchRoomReqBuilder>
			body(body:Ref<SearchRoomReqBody>):Ref<SearchRoomReqBuilder>
			build():Ref<SearchRoomReq>
	}
	export interface SearchRoomResp extends Struct<SearchRoomResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchRoomRespData>
			success():bool
	}
	export interface SearchRoomRespData extends Struct<SearchRoomRespData>{

			rooms:Ref<Room>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SetCheckboardAccessCodeRoomConfigPathReqBodyBuilder extends Struct<SetCheckboardAccessCodeRoomConfigPathReqBodyBuilder>{

			scope(scope:int):Ref<SetCheckboardAccessCodeRoomConfigPathReqBodyBuilder>
			countryId(countryId:string):Ref<SetCheckboardAccessCodeRoomConfigPathReqBodyBuilder>
			districtId(districtId:string):Ref<SetCheckboardAccessCodeRoomConfigPathReqBodyBuilder>
			buildingId(buildingId:string):Ref<SetCheckboardAccessCodeRoomConfigPathReqBodyBuilder>
			floorName(floorName:string):Ref<SetCheckboardAccessCodeRoomConfigPathReqBodyBuilder>
			roomId(roomId:string):Ref<SetCheckboardAccessCodeRoomConfigPathReqBodyBuilder>
			validDay(validDay:int):Ref<SetCheckboardAccessCodeRoomConfigPathReqBodyBuilder>
			build():Ref<SetCheckboardAccessCodeRoomConfigReqBody>
	}
	export interface SetCheckboardAccessCodeRoomConfigReq extends Struct<SetCheckboardAccessCodeRoomConfigReq>{

			body:Ref<SetCheckboardAccessCodeRoomConfigReqBody>
	}
	export interface SetCheckboardAccessCodeRoomConfigReqBody extends Struct<SetCheckboardAccessCodeRoomConfigReqBody>{

			scope:Ref<int>
			countryId:Ref<string>
			districtId:Ref<string>
			buildingId:Ref<string>
			floorName:Ref<string>
			roomId:Ref<string>
			validDay:Ref<int>
	}
	export interface SetCheckboardAccessCodeRoomConfigReqBodyBuilder extends Struct<SetCheckboardAccessCodeRoomConfigReqBodyBuilder>{

			scope(scope:int):Ref<SetCheckboardAccessCodeRoomConfigReqBodyBuilder>
			countryId(countryId:string):Ref<SetCheckboardAccessCodeRoomConfigReqBodyBuilder>
			districtId(districtId:string):Ref<SetCheckboardAccessCodeRoomConfigReqBodyBuilder>
			buildingId(buildingId:string):Ref<SetCheckboardAccessCodeRoomConfigReqBodyBuilder>
			floorName(floorName:string):Ref<SetCheckboardAccessCodeRoomConfigReqBodyBuilder>
			roomId(roomId:string):Ref<SetCheckboardAccessCodeRoomConfigReqBodyBuilder>
			validDay(validDay:int):Ref<SetCheckboardAccessCodeRoomConfigReqBodyBuilder>
			build():Ref<SetCheckboardAccessCodeRoomConfigReqBody>
	}
	export interface SetCheckboardAccessCodeRoomConfigReqBuilder extends Struct<SetCheckboardAccessCodeRoomConfigReqBuilder>{

			body(body:Ref<SetCheckboardAccessCodeRoomConfigReqBody>):Ref<SetCheckboardAccessCodeRoomConfigReqBuilder>
			build():Ref<SetCheckboardAccessCodeRoomConfigReq>
	}
	export interface SetCheckboardAccessCodeRoomConfigResp extends Struct<SetCheckboardAccessCodeRoomConfigResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SetCheckboardAccessCodeRoomConfigRespData>
			success():bool
	}
	export interface SetCheckboardAccessCodeRoomConfigRespData extends Struct<SetCheckboardAccessCodeRoomConfigRespData>{

			accessCode:Ref<string>
	}
	export interface SetHostMeetingPathReqBodyBuilder extends Struct<SetHostMeetingPathReqBodyBuilder>{

			hostUser(hostUser:Ref<MeetingUser>):Ref<SetHostMeetingPathReqBodyBuilder>
			oldHostUser(oldHostUser:Ref<MeetingUser>):Ref<SetHostMeetingPathReqBodyBuilder>
			build():Ref<SetHostMeetingReqBody>
	}
	export interface SetHostMeetingReq extends Struct<SetHostMeetingReq>{

			body:Ref<SetHostMeetingReqBody>
	}
	export interface SetHostMeetingReqBody extends Struct<SetHostMeetingReqBody>{

			hostUser:Ref<MeetingUser>
			oldHostUser:Ref<MeetingUser>
	}
	export interface SetHostMeetingReqBodyBuilder extends Struct<SetHostMeetingReqBodyBuilder>{

			hostUser(hostUser:Ref<MeetingUser>):Ref<SetHostMeetingReqBodyBuilder>
			oldHostUser(oldHostUser:Ref<MeetingUser>):Ref<SetHostMeetingReqBodyBuilder>
			build():Ref<SetHostMeetingReqBody>
	}
	export interface SetHostMeetingReqBuilder extends Struct<SetHostMeetingReqBuilder>{

			meetingId(meetingId:string):Ref<SetHostMeetingReqBuilder>
			userIdType(userIdType:string):Ref<SetHostMeetingReqBuilder>
			body(body:Ref<SetHostMeetingReqBody>):Ref<SetHostMeetingReqBuilder>
			build():Ref<SetHostMeetingReq>
	}
	export interface SetHostMeetingResp extends Struct<SetHostMeetingResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SetHostMeetingRespData>
			success():bool
	}
	export interface SetHostMeetingRespData extends Struct<SetHostMeetingRespData>{

			hostUser:Ref<MeetingUser>
	}
	export interface SetPermissionMeetingRecordingPathReqBodyBuilder extends Struct<SetPermissionMeetingRecordingPathReqBodyBuilder>{

			permissionObjects(permissionObjects:Ref<RecordingPermissionObject>[]):Ref<SetPermissionMeetingRecordingPathReqBodyBuilder>
			actionType(actionType:int):Ref<SetPermissionMeetingRecordingPathReqBodyBuilder>
			build():Ref<SetPermissionMeetingRecordingReqBody>
	}
	export interface SetPermissionMeetingRecordingReq extends Struct<SetPermissionMeetingRecordingReq>{

			body:Ref<SetPermissionMeetingRecordingReqBody>
	}
	export interface SetPermissionMeetingRecordingReqBody extends Struct<SetPermissionMeetingRecordingReqBody>{

			permissionObjects:Ref<RecordingPermissionObject>[]
			actionType:Ref<int>
	}
	export interface SetPermissionMeetingRecordingReqBodyBuilder extends Struct<SetPermissionMeetingRecordingReqBodyBuilder>{

			permissionObjects(permissionObjects:Ref<RecordingPermissionObject>[]):Ref<SetPermissionMeetingRecordingReqBodyBuilder>
			actionType(actionType:int):Ref<SetPermissionMeetingRecordingReqBodyBuilder>
			build():Ref<SetPermissionMeetingRecordingReqBody>
	}
	export interface SetPermissionMeetingRecordingReqBuilder extends Struct<SetPermissionMeetingRecordingReqBuilder>{

			meetingId(meetingId:string):Ref<SetPermissionMeetingRecordingReqBuilder>
			userIdType(userIdType:string):Ref<SetPermissionMeetingRecordingReqBuilder>
			body(body:Ref<SetPermissionMeetingRecordingReqBody>):Ref<SetPermissionMeetingRecordingReqBuilder>
			build():Ref<SetPermissionMeetingRecordingReq>
	}
	export interface SetPermissionMeetingRecordingResp extends Struct<SetPermissionMeetingRecordingResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface SetRoomAccessCodeRoomConfigPathReqBodyBuilder extends Struct<SetRoomAccessCodeRoomConfigPathReqBodyBuilder>{

			scope(scope:int):Ref<SetRoomAccessCodeRoomConfigPathReqBodyBuilder>
			countryId(countryId:string):Ref<SetRoomAccessCodeRoomConfigPathReqBodyBuilder>
			districtId(districtId:string):Ref<SetRoomAccessCodeRoomConfigPathReqBodyBuilder>
			buildingId(buildingId:string):Ref<SetRoomAccessCodeRoomConfigPathReqBodyBuilder>
			floorName(floorName:string):Ref<SetRoomAccessCodeRoomConfigPathReqBodyBuilder>
			roomId(roomId:string):Ref<SetRoomAccessCodeRoomConfigPathReqBodyBuilder>
			validDay(validDay:int):Ref<SetRoomAccessCodeRoomConfigPathReqBodyBuilder>
			build():Ref<SetRoomAccessCodeRoomConfigReqBody>
	}
	export interface SetRoomAccessCodeRoomConfigReq extends Struct<SetRoomAccessCodeRoomConfigReq>{

			body:Ref<SetRoomAccessCodeRoomConfigReqBody>
	}
	export interface SetRoomAccessCodeRoomConfigReqBody extends Struct<SetRoomAccessCodeRoomConfigReqBody>{

			scope:Ref<int>
			countryId:Ref<string>
			districtId:Ref<string>
			buildingId:Ref<string>
			floorName:Ref<string>
			roomId:Ref<string>
			validDay:Ref<int>
	}
	export interface SetRoomAccessCodeRoomConfigReqBodyBuilder extends Struct<SetRoomAccessCodeRoomConfigReqBodyBuilder>{

			scope(scope:int):Ref<SetRoomAccessCodeRoomConfigReqBodyBuilder>
			countryId(countryId:string):Ref<SetRoomAccessCodeRoomConfigReqBodyBuilder>
			districtId(districtId:string):Ref<SetRoomAccessCodeRoomConfigReqBodyBuilder>
			buildingId(buildingId:string):Ref<SetRoomAccessCodeRoomConfigReqBodyBuilder>
			floorName(floorName:string):Ref<SetRoomAccessCodeRoomConfigReqBodyBuilder>
			roomId(roomId:string):Ref<SetRoomAccessCodeRoomConfigReqBodyBuilder>
			validDay(validDay:int):Ref<SetRoomAccessCodeRoomConfigReqBodyBuilder>
			build():Ref<SetRoomAccessCodeRoomConfigReqBody>
	}
	export interface SetRoomAccessCodeRoomConfigReqBuilder extends Struct<SetRoomAccessCodeRoomConfigReqBuilder>{

			body(body:Ref<SetRoomAccessCodeRoomConfigReqBody>):Ref<SetRoomAccessCodeRoomConfigReqBuilder>
			build():Ref<SetRoomAccessCodeRoomConfigReq>
	}
	export interface SetRoomAccessCodeRoomConfigResp extends Struct<SetRoomAccessCodeRoomConfigResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SetRoomAccessCodeRoomConfigRespData>
			success():bool
	}
	export interface SetRoomAccessCodeRoomConfigRespData extends Struct<SetRoomAccessCodeRoomConfigRespData>{

			accessCode:Ref<string>
	}
	export interface SetRoomConfigPathReqBodyBuilder extends Struct<SetRoomConfigPathReqBodyBuilder>{

			scope(scope:int):Ref<SetRoomConfigPathReqBodyBuilder>
			countryId(countryId:string):Ref<SetRoomConfigPathReqBodyBuilder>
			districtId(districtId:string):Ref<SetRoomConfigPathReqBodyBuilder>
			buildingId(buildingId:string):Ref<SetRoomConfigPathReqBodyBuilder>
			floorName(floorName:string):Ref<SetRoomConfigPathReqBodyBuilder>
			roomId(roomId:string):Ref<SetRoomConfigPathReqBodyBuilder>
			roomConfig(roomConfig:Ref<RoomConfig>):Ref<SetRoomConfigPathReqBodyBuilder>
			build():Ref<SetRoomConfigReqBody>
	}
	export interface SetRoomConfigReq extends Struct<SetRoomConfigReq>{

			body:Ref<SetRoomConfigReqBody>
	}
	export interface SetRoomConfigReqBody extends Struct<SetRoomConfigReqBody>{

			scope:Ref<int>
			countryId:Ref<string>
			districtId:Ref<string>
			buildingId:Ref<string>
			floorName:Ref<string>
			roomId:Ref<string>
			roomConfig:Ref<RoomConfig>
	}
	export interface SetRoomConfigReqBodyBuilder extends Struct<SetRoomConfigReqBodyBuilder>{

			scope(scope:int):Ref<SetRoomConfigReqBodyBuilder>
			countryId(countryId:string):Ref<SetRoomConfigReqBodyBuilder>
			districtId(districtId:string):Ref<SetRoomConfigReqBodyBuilder>
			buildingId(buildingId:string):Ref<SetRoomConfigReqBodyBuilder>
			floorName(floorName:string):Ref<SetRoomConfigReqBodyBuilder>
			roomId(roomId:string):Ref<SetRoomConfigReqBodyBuilder>
			roomConfig(roomConfig:Ref<RoomConfig>):Ref<SetRoomConfigReqBodyBuilder>
			build():Ref<SetRoomConfigReqBody>
	}
	export interface SetRoomConfigReqBuilder extends Struct<SetRoomConfigReqBuilder>{

			userIdType(userIdType:string):Ref<SetRoomConfigReqBuilder>
			body(body:Ref<SetRoomConfigReqBody>):Ref<SetRoomConfigReqBuilder>
			build():Ref<SetRoomConfigReq>
	}
	export interface SetRoomConfigResp extends Struct<SetRoomConfigResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface StartMeetingRecordingPathReqBodyBuilder extends Struct<StartMeetingRecordingPathReqBodyBuilder>{

			timezone(timezone:int):Ref<StartMeetingRecordingPathReqBodyBuilder>
			build():Ref<StartMeetingRecordingReqBody>
	}
	export interface StartMeetingRecordingReq extends Struct<StartMeetingRecordingReq>{

			body:Ref<StartMeetingRecordingReqBody>
	}
	export interface StartMeetingRecordingReqBody extends Struct<StartMeetingRecordingReqBody>{

			timezone:Ref<int>
	}
	export interface StartMeetingRecordingReqBodyBuilder extends Struct<StartMeetingRecordingReqBodyBuilder>{

			timezone(timezone:int):Ref<StartMeetingRecordingReqBodyBuilder>
			build():Ref<StartMeetingRecordingReqBody>
	}
	export interface StartMeetingRecordingReqBuilder extends Struct<StartMeetingRecordingReqBuilder>{

			meetingId(meetingId:string):Ref<StartMeetingRecordingReqBuilder>
			body(body:Ref<StartMeetingRecordingReqBody>):Ref<StartMeetingRecordingReqBuilder>
			build():Ref<StartMeetingRecordingReq>
	}
	export interface StartMeetingRecordingResp extends Struct<StartMeetingRecordingResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface StopMeetingRecordingReq extends Struct<StopMeetingRecordingReq>{

	}
	export interface StopMeetingRecordingReqBuilder extends Struct<StopMeetingRecordingReqBuilder>{

			meetingId(meetingId:string):Ref<StopMeetingRecordingReqBuilder>
			build():Ref<StopMeetingRecordingReq>
	}
	export interface StopMeetingRecordingResp extends Struct<StopMeetingRecordingResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface SubscribeDepartment extends Struct<SubscribeDepartment>{

			departmentId:Ref<string>
			departmentName:Ref<string>
	}
	export interface SubscribeDepartmentBuilder extends Struct<SubscribeDepartmentBuilder>{

			departmentId(departmentId:string):Ref<SubscribeDepartmentBuilder>
			departmentName(departmentName:string):Ref<SubscribeDepartmentBuilder>
			build():Ref<SubscribeDepartment>
	}
	export interface SubscribeUser extends Struct<SubscribeUser>{

			userId:Ref<string>
			userName:Ref<string>
	}
	export interface SubscribeUserBuilder extends Struct<SubscribeUserBuilder>{

			userId(userId:string):Ref<SubscribeUserBuilder>
			userName(userName:string):Ref<SubscribeUserBuilder>
			build():Ref<SubscribeUser>
	}
	export interface SubscribeUserEvent extends Struct<SubscribeUserEvent>{

			userId:Ref<UserId>
	}
	export interface SubscribeUserEventBuilder extends Struct<SubscribeUserEventBuilder>{

			userId(userId:Ref<UserId>):Ref<SubscribeUserEventBuilder>
			build():Ref<SubscribeUserEvent>
	}
	export interface TimeConfig extends Struct<TimeConfig>{

			ifCoverChildScope:Ref<bool>
			timeSwitch:Ref<int>
			daysInAdvance:Ref<int>
			openingHour:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			maxDuration:Ref<int>
	}
	export interface TimeConfigBuilder extends Struct<TimeConfigBuilder>{

			ifCoverChildScope(ifCoverChildScope:bool):Ref<TimeConfigBuilder>
			timeSwitch(timeSwitch:int):Ref<TimeConfigBuilder>
			daysInAdvance(daysInAdvance:int):Ref<TimeConfigBuilder>
			openingHour(openingHour:string):Ref<TimeConfigBuilder>
			startTime(startTime:string):Ref<TimeConfigBuilder>
			endTime(endTime:string):Ref<TimeConfigBuilder>
			maxDuration(maxDuration:int):Ref<TimeConfigBuilder>
			build():Ref<TimeConfig>
	}
	//1
	export const TopUserOrderByMeetingCount:int
	//2
	export const TopUserOrderByMeetingDuration:int
	//0
	export const UnitTypeCN:int
	//0
	export const UnitTypeGetTopUserReportCN:int
	//3
	export const UnitTypeGetTopUserReportJP:int
	//2
	export const UnitTypeGetTopUserReportSG:int
	//1
	export const UnitTypeGetTopUserReportVA:int
	//3
	export const UnitTypeJP:int
	//2
	export const UnitTypeSG:int
	//1
	export const UnitTypeVA:int
	export interface UpdateReservePathReqBodyBuilder extends Struct<UpdateReservePathReqBodyBuilder>{

			endTime(endTime:string):Ref<UpdateReservePathReqBodyBuilder>
			meetingSettings(meetingSettings:Ref<ReserveMeetingSetting>):Ref<UpdateReservePathReqBodyBuilder>
			build():Ref<UpdateReserveReqBody>
	}
	export interface UpdateReserveReq extends Struct<UpdateReserveReq>{

			body:Ref<UpdateReserveReqBody>
	}
	export interface UpdateReserveReqBody extends Struct<UpdateReserveReqBody>{

			endTime:Ref<string>
			meetingSettings:Ref<ReserveMeetingSetting>
	}
	export interface UpdateReserveReqBodyBuilder extends Struct<UpdateReserveReqBodyBuilder>{

			endTime(endTime:string):Ref<UpdateReserveReqBodyBuilder>
			meetingSettings(meetingSettings:Ref<ReserveMeetingSetting>):Ref<UpdateReserveReqBodyBuilder>
			build():Ref<UpdateReserveReqBody>
	}
	export interface UpdateReserveReqBuilder extends Struct<UpdateReserveReqBuilder>{

			reserveId(reserveId:string):Ref<UpdateReserveReqBuilder>
			userIdType(userIdType:string):Ref<UpdateReserveReqBuilder>
			body(body:Ref<UpdateReserveReqBody>):Ref<UpdateReserveReqBuilder>
			build():Ref<UpdateReserveReq>
	}
	export interface UpdateReserveResp extends Struct<UpdateReserveResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<UpdateReserveRespData>
			success():bool
	}
	export interface UpdateReserveRespData extends Struct<UpdateReserveRespData>{

			reserve:Ref<Reserve>
			reserveCorrectionCheckInfo:Ref<ReserveCorrectionCheckInfo>
	}
	export interface UserId extends Struct<UserId>{

			userId:Ref<string>
			openId:Ref<string>
			unionId:Ref<string>
	}
	export interface UserIdBuilder extends Struct<UserIdBuilder>{

			userId(userId:string):Ref<UserIdBuilder>
			openId(openId:string):Ref<UserIdBuilder>
			unionId(unionId:string):Ref<UserIdBuilder>
			build():Ref<UserId>
	}
	//"open_id"
	export const UserIdTypeApplyReserveOpenId:string
	//"union_id"
	export const UserIdTypeApplyReserveUnionId:string
	//"user_id"
	export const UserIdTypeApplyReserveUserId:string
	//"open_id"
	export const UserIdTypeCreateRoomOpenId:string
	//"union_id"
	export const UserIdTypeCreateRoomUnionId:string
	//"user_id"
	export const UserIdTypeCreateRoomUserId:string
	//"open_id"
	export const UserIdTypeCreateScopeConfigOpenId:string
	//"union_id"
	export const UserIdTypeCreateScopeConfigUnionId:string
	//"user_id"
	export const UserIdTypeCreateScopeConfigUserId:string
	//"open_id"
	export const UserIdTypeGetActiveMeetingReserveOpenId:string
	//"union_id"
	export const UserIdTypeGetActiveMeetingReserveUnionId:string
	//"user_id"
	export const UserIdTypeGetActiveMeetingReserveUserId:string
	//"open_id"
	export const UserIdTypeGetMeetingListOpenId:string
	//"union_id"
	export const UserIdTypeGetMeetingListUnionId:string
	//"user_id"
	export const UserIdTypeGetMeetingListUserId:string
	//"open_id"
	export const UserIdTypeGetMeetingOpenId:string
	//"union_id"
	export const UserIdTypeGetMeetingUnionId:string
	//"user_id"
	export const UserIdTypeGetMeetingUserId:string
	//"open_id"
	export const UserIdTypeGetParticipantListOpenId:string
	//"union_id"
	export const UserIdTypeGetParticipantListUnionId:string
	//"user_id"
	export const UserIdTypeGetParticipantListUserId:string
	//"open_id"
	export const UserIdTypeGetParticipantQualityListOpenId:string
	//"union_id"
	export const UserIdTypeGetParticipantQualityListUnionId:string
	//"user_id"
	export const UserIdTypeGetParticipantQualityListUserId:string
	//"open_id"
	export const UserIdTypeGetReserveConfigAdminOpenId:string
	//"union_id"
	export const UserIdTypeGetReserveConfigAdminUnionId:string
	//"user_id"
	export const UserIdTypeGetReserveConfigAdminUserId:string
	//"open_id"
	export const UserIdTypeGetReserveConfigDisableInformOpenId:string
	//"union_id"
	export const UserIdTypeGetReserveConfigDisableInformUnionId:string
	//"user_id"
	export const UserIdTypeGetReserveConfigDisableInformUserId:string
	//"open_id"
	export const UserIdTypeGetReserveConfigFormOpenId:string
	//"union_id"
	export const UserIdTypeGetReserveConfigFormUnionId:string
	//"user_id"
	export const UserIdTypeGetReserveConfigFormUserId:string
	//"open_id"
	export const UserIdTypeGetReserveOpenId:string
	//"union_id"
	export const UserIdTypeGetReserveUnionId:string
	//"user_id"
	export const UserIdTypeGetReserveUserId:string
	//"open_id"
	export const UserIdTypeGetRoomOpenId:string
	//"union_id"
	export const UserIdTypeGetRoomUnionId:string
	//"user_id"
	export const UserIdTypeGetRoomUserId:string
	//"open_id"
	export const UserIdTypeGetScopeConfigOpenId:string
	//"union_id"
	export const UserIdTypeGetScopeConfigUnionId:string
	//"user_id"
	export const UserIdTypeGetScopeConfigUserId:string
	//"open_id"
	export const UserIdTypeGetTopUserReportOpenId:string
	//"union_id"
	export const UserIdTypeGetTopUserReportUnionId:string
	//"user_id"
	export const UserIdTypeGetTopUserReportUserId:string
	//"open_id"
	export const UserIdTypeInviteMeetingOpenId:string
	//"union_id"
	export const UserIdTypeInviteMeetingUnionId:string
	//"user_id"
	export const UserIdTypeInviteMeetingUserId:string
	//"open_id"
	export const UserIdTypeKickoutMeetingOpenId:string
	//"union_id"
	export const UserIdTypeKickoutMeetingUnionId:string
	//"user_id"
	export const UserIdTypeKickoutMeetingUserId:string
	//"open_id"
	export const UserIdTypeListRoomOpenId:string
	//"union_id"
	export const UserIdTypeListRoomUnionId:string
	//"user_id"
	export const UserIdTypeListRoomUserId:string
	//"open_id"
	export const UserIdTypeMgetRoomOpenId:string
	//"union_id"
	export const UserIdTypeMgetRoomUnionId:string
	//"user_id"
	export const UserIdTypeMgetRoomUserId:string
	//"open_id"
	export const UserIdTypeOpenId:string
	//"open_id"
	export const UserIdTypeParticipantListExportOpenId:string
	//"union_id"
	export const UserIdTypeParticipantListExportUnionId:string
	//"user_id"
	export const UserIdTypeParticipantListExportUserId:string
	//"open_id"
	export const UserIdTypeParticipantQualityListExportOpenId:string
	//"union_id"
	export const UserIdTypeParticipantQualityListExportUnionId:string
	//"user_id"
	export const UserIdTypeParticipantQualityListExportUserId:string
	//"open_id"
	export const UserIdTypePatchReserveConfigAdminOpenId:string
	//"union_id"
	export const UserIdTypePatchReserveConfigAdminUnionId:string
	//"user_id"
	export const UserIdTypePatchReserveConfigAdminUserId:string
	//"open_id"
	export const UserIdTypePatchReserveConfigDisableInformOpenId:string
	//"union_id"
	export const UserIdTypePatchReserveConfigDisableInformUnionId:string
	//"user_id"
	export const UserIdTypePatchReserveConfigDisableInformUserId:string
	//"open_id"
	export const UserIdTypePatchReserveConfigFormOpenId:string
	//"union_id"
	export const UserIdTypePatchReserveConfigFormUnionId:string
	//"user_id"
	export const UserIdTypePatchReserveConfigFormUserId:string
	//"open_id"
	export const UserIdTypePatchReserveConfigOpenId:string
	//"union_id"
	export const UserIdTypePatchReserveConfigUnionId:string
	//"user_id"
	export const UserIdTypePatchReserveConfigUserId:string
	//"open_id"
	export const UserIdTypePatchRoomOpenId:string
	//"union_id"
	export const UserIdTypePatchRoomUnionId:string
	//"user_id"
	export const UserIdTypePatchRoomUserId:string
	//"open_id"
	export const UserIdTypeQueryRoomConfigOpenId:string
	//"union_id"
	export const UserIdTypeQueryRoomConfigUnionId:string
	//"user_id"
	export const UserIdTypeQueryRoomConfigUserId:string
	//"open_id"
	export const UserIdTypeReserveScopeReserveConfigOpenId:string
	//"union_id"
	export const UserIdTypeReserveScopeReserveConfigUnionId:string
	//"user_id"
	export const UserIdTypeReserveScopeReserveConfigUserId:string
	//"open_id"
	export const UserIdTypeSearchRoomOpenId:string
	//"union_id"
	export const UserIdTypeSearchRoomUnionId:string
	//"user_id"
	export const UserIdTypeSearchRoomUserId:string
	//"open_id"
	export const UserIdTypeSetHostMeetingOpenId:string
	//"union_id"
	export const UserIdTypeSetHostMeetingUnionId:string
	//"user_id"
	export const UserIdTypeSetHostMeetingUserId:string
	//"open_id"
	export const UserIdTypeSetPermissionMeetingRecordingOpenId:string
	//"union_id"
	export const UserIdTypeSetPermissionMeetingRecordingUnionId:string
	//"user_id"
	export const UserIdTypeSetPermissionMeetingRecordingUserId:string
	//"open_id"
	export const UserIdTypeSetRoomConfigOpenId:string
	//"union_id"
	export const UserIdTypeSetRoomConfigUnionId:string
	//"user_id"
	export const UserIdTypeSetRoomConfigUserId:string
	//"union_id"
	export const UserIdTypeUnionId:string
	//"open_id"
	export const UserIdTypeUpdateReserveOpenId:string
	//"union_id"
	export const UserIdTypeUpdateReserveUnionId:string
	//"user_id"
	export const UserIdTypeUpdateReserveUserId:string
	//"user_id"
	export const UserIdTypeUserId:string
	export interface V1 extends Struct<V1>{

			alert:Ref<{
			
				list(ctx:context.Context,req:Ref<ListAlertReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListAlertResp>
				listByIterator(ctx:context.Context,req:Ref<ListAlertReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListAlertIterator>
			}>
			export:Ref<{
			
				download(ctx:context.Context,req:Ref<DownloadExportReq>,...options:larkcore.RequestOptionFunc[]):Ref<DownloadExportResp>
				get(ctx:context.Context,req:Ref<GetExportReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetExportResp>
				meetingList(ctx:context.Context,req:Ref<MeetingListExportReq>,...options:larkcore.RequestOptionFunc[]):Ref<MeetingListExportResp>
				participantList(ctx:context.Context,req:Ref<ParticipantListExportReq>,...options:larkcore.RequestOptionFunc[]):Ref<ParticipantListExportResp>
				participantQualityList(ctx:context.Context,req:Ref<ParticipantQualityListExportReq>,...options:larkcore.RequestOptionFunc[]):Ref<ParticipantQualityListExportResp>
				resourceReservationList(ctx:context.Context,req:Ref<ResourceReservationListExportReq>,...options:larkcore.RequestOptionFunc[]):Ref<ResourceReservationListExportResp>
			}>
			meeting:Ref<{
			
				end(ctx:context.Context,req:Ref<EndMeetingReq>,...options:larkcore.RequestOptionFunc[]):Ref<EndMeetingResp>
				get(ctx:context.Context,req:Ref<GetMeetingReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetMeetingResp>
				invite(ctx:context.Context,req:Ref<InviteMeetingReq>,...options:larkcore.RequestOptionFunc[]):Ref<InviteMeetingResp>
				kickout(ctx:context.Context,req:Ref<KickoutMeetingReq>,...options:larkcore.RequestOptionFunc[]):Ref<KickoutMeetingResp>
				listByNo(ctx:context.Context,req:Ref<ListByNoMeetingReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListByNoMeetingResp>
				listByNoByIterator(ctx:context.Context,req:Ref<ListByNoMeetingReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListByNoMeetingIterator>
				setHost(ctx:context.Context,req:Ref<SetHostMeetingReq>,...options:larkcore.RequestOptionFunc[]):Ref<SetHostMeetingResp>
			}>
			meetingRecording:Ref<{
			
				get(ctx:context.Context,req:Ref<GetMeetingRecordingReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetMeetingRecordingResp>
				setPermission(ctx:context.Context,req:Ref<SetPermissionMeetingRecordingReq>,...options:larkcore.RequestOptionFunc[]):Ref<SetPermissionMeetingRecordingResp>
				start(ctx:context.Context,req:Ref<StartMeetingRecordingReq>,...options:larkcore.RequestOptionFunc[]):Ref<StartMeetingRecordingResp>
				stop(ctx:context.Context,req:Ref<StopMeetingRecordingReq>,...options:larkcore.RequestOptionFunc[]):Ref<StopMeetingRecordingResp>
			}>
			meetingList:Ref<{
			
				get(ctx:context.Context,req:Ref<GetMeetingListReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetMeetingListResp>
				getByIterator(ctx:context.Context,req:Ref<GetMeetingListReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetMeetingListIterator>
			}>
			participantList:Ref<{
			
				get(ctx:context.Context,req:Ref<GetParticipantListReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetParticipantListResp>
				getByIterator(ctx:context.Context,req:Ref<GetParticipantListReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetParticipantListIterator>
			}>
			participantQualityList:Ref<{
			
				get(ctx:context.Context,req:Ref<GetParticipantQualityListReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetParticipantQualityListResp>
				getByIterator(ctx:context.Context,req:Ref<GetParticipantQualityListReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetParticipantQualityListIterator>
			}>
			report:Ref<{
			
				getDaily(ctx:context.Context,req:Ref<GetDailyReportReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetDailyReportResp>
				getTopUser(ctx:context.Context,req:Ref<GetTopUserReportReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetTopUserReportResp>
			}>
			reserve:Ref<{
			
				apply(ctx:context.Context,req:Ref<ApplyReserveReq>,...options:larkcore.RequestOptionFunc[]):Ref<ApplyReserveResp>
				delete(ctx:context.Context,req:Ref<DeleteReserveReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteReserveResp>
				get(ctx:context.Context,req:Ref<GetReserveReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetReserveResp>
				getActiveMeeting(ctx:context.Context,req:Ref<GetActiveMeetingReserveReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetActiveMeetingReserveResp>
				update(ctx:context.Context,req:Ref<UpdateReserveReq>,...options:larkcore.RequestOptionFunc[]):Ref<UpdateReserveResp>
			}>
			reserveConfig:Ref<{
			
				patch(ctx:context.Context,req:Ref<PatchReserveConfigReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchReserveConfigResp>
				reserveScope(ctx:context.Context,req:Ref<ReserveScopeReserveConfigReq>,...options:larkcore.RequestOptionFunc[]):Ref<ReserveScopeReserveConfigResp>
			}>
			reserveConfigAdmin:Ref<{
			
				get(ctx:context.Context,req:Ref<GetReserveConfigAdminReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetReserveConfigAdminResp>
				patch(ctx:context.Context,req:Ref<PatchReserveConfigAdminReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchReserveConfigAdminResp>
			}>
			reserveConfigDisableInform:Ref<{
			
				get(ctx:context.Context,req:Ref<GetReserveConfigDisableInformReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetReserveConfigDisableInformResp>
				patch(ctx:context.Context,req:Ref<PatchReserveConfigDisableInformReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchReserveConfigDisableInformResp>
			}>
			reserveConfigForm:Ref<{
			
				get(ctx:context.Context,req:Ref<GetReserveConfigFormReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetReserveConfigFormResp>
				patch(ctx:context.Context,req:Ref<PatchReserveConfigFormReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchReserveConfigFormResp>
			}>
			resourceReservationList:Ref<{
			
				get(ctx:context.Context,req:Ref<GetResourceReservationListReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetResourceReservationListResp>
				getByIterator(ctx:context.Context,req:Ref<GetResourceReservationListReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetResourceReservationListIterator>
			}>
			room:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateRoomReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateRoomResp>
				delete(ctx:context.Context,req:Ref<DeleteRoomReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteRoomResp>
				get(ctx:context.Context,req:Ref<GetRoomReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetRoomResp>
				list(ctx:context.Context,req:Ref<ListRoomReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListRoomResp>
				listByIterator(ctx:context.Context,req:Ref<ListRoomReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListRoomIterator>
				mget(ctx:context.Context,req:Ref<MgetRoomReq>,...options:larkcore.RequestOptionFunc[]):Ref<MgetRoomResp>
				patch(ctx:context.Context,req:Ref<PatchRoomReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchRoomResp>
				search(ctx:context.Context,req:Ref<SearchRoomReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchRoomResp>
			}>
			roomConfig:Ref<{
			
				query(ctx:context.Context,req:Ref<QueryRoomConfigReq>,...options:larkcore.RequestOptionFunc[]):Ref<QueryRoomConfigResp>
				set(ctx:context.Context,req:Ref<SetRoomConfigReq>,...options:larkcore.RequestOptionFunc[]):Ref<SetRoomConfigResp>
				setCheckboardAccessCode(ctx:context.Context,req:Ref<SetCheckboardAccessCodeRoomConfigReq>,...options:larkcore.RequestOptionFunc[]):Ref<SetCheckboardAccessCodeRoomConfigResp>
				setRoomAccessCode(ctx:context.Context,req:Ref<SetRoomAccessCodeRoomConfigReq>,...options:larkcore.RequestOptionFunc[]):Ref<SetRoomAccessCodeRoomConfigResp>
			}>
			roomLevel:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateRoomLevelReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateRoomLevelResp>
				del(ctx:context.Context,req:Ref<DelRoomLevelReq>,...options:larkcore.RequestOptionFunc[]):Ref<DelRoomLevelResp>
				get(ctx:context.Context,req:Ref<GetRoomLevelReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetRoomLevelResp>
				list(ctx:context.Context,req:Ref<ListRoomLevelReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListRoomLevelResp>
				listByIterator(ctx:context.Context,req:Ref<ListRoomLevelReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListRoomLevelIterator>
				mget(ctx:context.Context,req:Ref<MgetRoomLevelReq>,...options:larkcore.RequestOptionFunc[]):Ref<MgetRoomLevelResp>
				patch(ctx:context.Context,req:Ref<PatchRoomLevelReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchRoomLevelResp>
				search(ctx:context.Context,req:Ref<SearchRoomLevelReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchRoomLevelResp>
			}>
			scopeConfig:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateScopeConfigReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateScopeConfigResp>
				get(ctx:context.Context,req:Ref<GetScopeConfigReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetScopeConfigResp>
			}>
	}
	//1
	export const ValidDayTypeDay:int
	//30
	export const ValidDayTypeMonth:int
	//1
	export const ValidDayTypeSetRoomAccessCodeRoomConfigDay:int
	//30
	export const ValidDayTypeSetRoomAccessCodeRoomConfigMonth:int
	//7
	export const ValidDayTypeSetRoomAccessCodeRoomConfigWeek:int
	//7
	export const ValidDayTypeWeek:int
	export function emptyApplyReserveResp():ApplyReserveResp
	export function emptyRefApplyReserveResp():Ref<ApplyReserveResp>
	export function refOfApplyReserveResp(x:ApplyReserveResp,v:Ref<ApplyReserveResp>)
	export function unRefApplyReserveResp(v:Ref<ApplyReserveResp>):ApplyReserveResp
	export function emptyGetReserveConfigAdminRespData():GetReserveConfigAdminRespData
	export function emptyRefGetReserveConfigAdminRespData():Ref<GetReserveConfigAdminRespData>
	export function refOfGetReserveConfigAdminRespData(x:GetReserveConfigAdminRespData,v:Ref<GetReserveConfigAdminRespData>)
	export function unRefGetReserveConfigAdminRespData(v:Ref<GetReserveConfigAdminRespData>):GetReserveConfigAdminRespData
	export function emptyGetReserveConfigFormResp():GetReserveConfigFormResp
	export function emptyRefGetReserveConfigFormResp():Ref<GetReserveConfigFormResp>
	export function refOfGetReserveConfigFormResp(x:GetReserveConfigFormResp,v:Ref<GetReserveConfigFormResp>)
	export function unRefGetReserveConfigFormResp(v:Ref<GetReserveConfigFormResp>):GetReserveConfigFormResp
	export function emptySetRoomAccessCodeRoomConfigResp():SetRoomAccessCodeRoomConfigResp
	export function emptyRefSetRoomAccessCodeRoomConfigResp():Ref<SetRoomAccessCodeRoomConfigResp>
	export function refOfSetRoomAccessCodeRoomConfigResp(x:SetRoomAccessCodeRoomConfigResp,v:Ref<SetRoomAccessCodeRoomConfigResp>)
	export function unRefSetRoomAccessCodeRoomConfigResp(v:Ref<SetRoomAccessCodeRoomConfigResp>):SetRoomAccessCodeRoomConfigResp
	export function emptyMyAiVcRoomExtra():MyAiVcRoomExtra
	export function emptyRefMyAiVcRoomExtra():Ref<MyAiVcRoomExtra>
	export function refOfMyAiVcRoomExtra(x:MyAiVcRoomExtra,v:Ref<MyAiVcRoomExtra>)
	export function unRefMyAiVcRoomExtra(v:Ref<MyAiVcRoomExtra>):MyAiVcRoomExtra
	export function emptySubscribeUserEvent():SubscribeUserEvent
	export function emptyRefSubscribeUserEvent():Ref<SubscribeUserEvent>
	export function refOfSubscribeUserEvent(x:SubscribeUserEvent,v:Ref<SubscribeUserEvent>)
	export function unRefSubscribeUserEvent(v:Ref<SubscribeUserEvent>):SubscribeUserEvent
	export function emptyGetTopUserReportRespData():GetTopUserReportRespData
	export function emptyRefGetTopUserReportRespData():Ref<GetTopUserReportRespData>
	export function refOfGetTopUserReportRespData(x:GetTopUserReportRespData,v:Ref<GetTopUserReportRespData>)
	export function unRefGetTopUserReportRespData(v:Ref<GetTopUserReportRespData>):GetTopUserReportRespData
	export function emptyMgetRoomResp():MgetRoomResp
	export function emptyRefMgetRoomResp():Ref<MgetRoomResp>
	export function refOfMgetRoomResp(x:MgetRoomResp,v:Ref<MgetRoomResp>)
	export function unRefMgetRoomResp(v:Ref<MgetRoomResp>):MgetRoomResp
	export function emptyPatchRoomLevelReq():PatchRoomLevelReq
	export function emptyRefPatchRoomLevelReq():Ref<PatchRoomLevelReq>
	export function refOfPatchRoomLevelReq(x:PatchRoomLevelReq,v:Ref<PatchRoomLevelReq>)
	export function unRefPatchRoomLevelReq(v:Ref<PatchRoomLevelReq>):PatchRoomLevelReq
	export function emptyGetExportRespData():GetExportRespData
	export function emptyRefGetExportRespData():Ref<GetExportRespData>
	export function refOfGetExportRespData(x:GetExportRespData,v:Ref<GetExportRespData>)
	export function unRefGetExportRespData(v:Ref<GetExportRespData>):GetExportRespData
	export function emptyPatchReserveConfigReqBody():PatchReserveConfigReqBody
	export function emptyRefPatchReserveConfigReqBody():Ref<PatchReserveConfigReqBody>
	export function refOfPatchReserveConfigReqBody(x:PatchReserveConfigReqBody,v:Ref<PatchReserveConfigReqBody>)
	export function unRefPatchReserveConfigReqBody(v:Ref<PatchReserveConfigReqBody>):PatchReserveConfigReqBody
	export function emptyRoomStatusEvent():RoomStatusEvent
	export function emptyRefRoomStatusEvent():Ref<RoomStatusEvent>
	export function refOfRoomStatusEvent(x:RoomStatusEvent,v:Ref<RoomStatusEvent>)
	export function unRefRoomStatusEvent(v:Ref<RoomStatusEvent>):RoomStatusEvent
	export function emptyUserId():UserId
	export function emptyRefUserId():Ref<UserId>
	export function refOfUserId(x:UserId,v:Ref<UserId>)
	export function unRefUserId(v:Ref<UserId>):UserId
	export function emptyGetTopUserReportResp():GetTopUserReportResp
	export function emptyRefGetTopUserReportResp():Ref<GetTopUserReportResp>
	export function refOfGetTopUserReportResp(x:GetTopUserReportResp,v:Ref<GetTopUserReportResp>)
	export function unRefGetTopUserReportResp(v:Ref<GetTopUserReportResp>):GetTopUserReportResp
	export function emptyP2MeetingAllMeetingEndedV1():P2MeetingAllMeetingEndedV1
	export function emptyRefP2MeetingAllMeetingEndedV1():Ref<P2MeetingAllMeetingEndedV1>
	export function refOfP2MeetingAllMeetingEndedV1(x:P2MeetingAllMeetingEndedV1,v:Ref<P2MeetingAllMeetingEndedV1>)
	export function unRefP2MeetingAllMeetingEndedV1(v:Ref<P2MeetingAllMeetingEndedV1>):P2MeetingAllMeetingEndedV1
	export function emptyParticipantQualityListExportReq():ParticipantQualityListExportReq
	export function emptyRefParticipantQualityListExportReq():Ref<ParticipantQualityListExportReq>
	export function refOfParticipantQualityListExportReq(x:ParticipantQualityListExportReq,v:Ref<ParticipantQualityListExportReq>)
	export function unRefParticipantQualityListExportReq(v:Ref<ParticipantQualityListExportReq>):ParticipantQualityListExportReq
	export function emptyGetResourceReservationListIterator():GetResourceReservationListIterator
	export function emptyRefGetResourceReservationListIterator():Ref<GetResourceReservationListIterator>
	export function refOfGetResourceReservationListIterator(x:GetResourceReservationListIterator,v:Ref<GetResourceReservationListIterator>)
	export function unRefGetResourceReservationListIterator(v:Ref<GetResourceReservationListIterator>):GetResourceReservationListIterator
	export function emptyListByNoMeetingIterator():ListByNoMeetingIterator
	export function emptyRefListByNoMeetingIterator():Ref<ListByNoMeetingIterator>
	export function refOfListByNoMeetingIterator(x:ListByNoMeetingIterator,v:Ref<ListByNoMeetingIterator>)
	export function unRefListByNoMeetingIterator(v:Ref<ListByNoMeetingIterator>):ListByNoMeetingIterator
	export function emptyPatchReserveConfigAdminResp():PatchReserveConfigAdminResp
	export function emptyRefPatchReserveConfigAdminResp():Ref<PatchReserveConfigAdminResp>
	export function refOfPatchReserveConfigAdminResp(x:PatchReserveConfigAdminResp,v:Ref<PatchReserveConfigAdminResp>)
	export function unRefPatchReserveConfigAdminResp(v:Ref<PatchReserveConfigAdminResp>):PatchReserveConfigAdminResp
	export function emptyGetReserveResp():GetReserveResp
	export function emptyRefGetReserveResp():Ref<GetReserveResp>
	export function refOfGetReserveResp(x:GetReserveResp,v:Ref<GetReserveResp>)
	export function unRefGetReserveResp(v:Ref<GetReserveResp>):GetReserveResp
	export function emptySetPermissionMeetingRecordingReq():SetPermissionMeetingRecordingReq
	export function emptyRefSetPermissionMeetingRecordingReq():Ref<SetPermissionMeetingRecordingReq>
	export function refOfSetPermissionMeetingRecordingReq(x:SetPermissionMeetingRecordingReq,v:Ref<SetPermissionMeetingRecordingReq>)
	export function unRefSetPermissionMeetingRecordingReq(v:Ref<SetPermissionMeetingRecordingReq>):SetPermissionMeetingRecordingReq
	export function emptyDisableInformConfig():DisableInformConfig
	export function emptyRefDisableInformConfig():Ref<DisableInformConfig>
	export function refOfDisableInformConfig(x:DisableInformConfig,v:Ref<DisableInformConfig>)
	export function unRefDisableInformConfig(v:Ref<DisableInformConfig>):DisableInformConfig
	export function emptyGetScopeConfigResp():GetScopeConfigResp
	export function emptyRefGetScopeConfigResp():Ref<GetScopeConfigResp>
	export function refOfGetScopeConfigResp(x:GetScopeConfigResp,v:Ref<GetScopeConfigResp>)
	export function unRefGetScopeConfigResp(v:Ref<GetScopeConfigResp>):GetScopeConfigResp
	export function emptyMyAiAvPluginCardVaribales():MyAiAvPluginCardVaribales
	export function emptyRefMyAiAvPluginCardVaribales():Ref<MyAiAvPluginCardVaribales>
	export function refOfMyAiAvPluginCardVaribales(x:MyAiAvPluginCardVaribales,v:Ref<MyAiAvPluginCardVaribales>)
	export function unRefMyAiAvPluginCardVaribales(v:Ref<MyAiAvPluginCardVaribales>):MyAiAvPluginCardVaribales
	export function emptyInviteMeetingReq():InviteMeetingReq
	export function emptyRefInviteMeetingReq():Ref<InviteMeetingReq>
	export function refOfInviteMeetingReq(x:InviteMeetingReq,v:Ref<InviteMeetingReq>)
	export function unRefInviteMeetingReq(v:Ref<InviteMeetingReq>):InviteMeetingReq
	export function emptyMyAiVcMeetingContentCommonResult():MyAiVcMeetingContentCommonResult
	export function emptyRefMyAiVcMeetingContentCommonResult():Ref<MyAiVcMeetingContentCommonResult>
	export function refOfMyAiVcMeetingContentCommonResult(x:MyAiVcMeetingContentCommonResult,v:Ref<MyAiVcMeetingContentCommonResult>)
	export function unRefMyAiVcMeetingContentCommonResult(v:Ref<MyAiVcMeetingContentCommonResult>):MyAiVcMeetingContentCommonResult
	export function emptyKickoutMeetingResp():KickoutMeetingResp
	export function emptyRefKickoutMeetingResp():Ref<KickoutMeetingResp>
	export function refOfKickoutMeetingResp(x:KickoutMeetingResp,v:Ref<KickoutMeetingResp>)
	export function unRefKickoutMeetingResp(v:Ref<KickoutMeetingResp>):KickoutMeetingResp
	export function emptyMyAiAvPluginUploadObject():MyAiAvPluginUploadObject
	export function emptyRefMyAiAvPluginUploadObject():Ref<MyAiAvPluginUploadObject>
	export function refOfMyAiAvPluginUploadObject(x:MyAiAvPluginUploadObject,v:Ref<MyAiAvPluginUploadObject>)
	export function unRefMyAiAvPluginUploadObject(v:Ref<MyAiAvPluginUploadObject>):MyAiAvPluginUploadObject
	export function emptyParticipantListExportRespData():ParticipantListExportRespData
	export function emptyRefParticipantListExportRespData():Ref<ParticipantListExportRespData>
	export function refOfParticipantListExportRespData(x:ParticipantListExportRespData,v:Ref<ParticipantListExportRespData>)
	export function unRefParticipantListExportRespData(v:Ref<ParticipantListExportRespData>):ParticipantListExportRespData
	export function emptyGetTopUserReportReq():GetTopUserReportReq
	export function emptyRefGetTopUserReportReq():Ref<GetTopUserReportReq>
	export function refOfGetTopUserReportReq(x:GetTopUserReportReq,v:Ref<GetTopUserReportReq>)
	export function unRefGetTopUserReportReq(v:Ref<GetTopUserReportReq>):GetTopUserReportReq
	export function emptyUpdateReserveReq():UpdateReserveReq
	export function emptyRefUpdateReserveReq():Ref<UpdateReserveReq>
	export function refOfUpdateReserveReq(x:UpdateReserveReq,v:Ref<UpdateReserveReq>)
	export function unRefUpdateReserveReq(v:Ref<UpdateReserveReq>):UpdateReserveReq
	export function emptyGetReserveConfigAdminReq():GetReserveConfigAdminReq
	export function emptyRefGetReserveConfigAdminReq():Ref<GetReserveConfigAdminReq>
	export function refOfGetReserveConfigAdminReq(x:GetReserveConfigAdminReq,v:Ref<GetReserveConfigAdminReq>)
	export function unRefGetReserveConfigAdminReq(v:Ref<GetReserveConfigAdminReq>):GetReserveConfigAdminReq
	export function emptySearchRoomLevelReq():SearchRoomLevelReq
	export function emptyRefSearchRoomLevelReq():Ref<SearchRoomLevelReq>
	export function refOfSearchRoomLevelReq(x:SearchRoomLevelReq,v:Ref<SearchRoomLevelReq>)
	export function unRefSearchRoomLevelReq(v:Ref<SearchRoomLevelReq>):SearchRoomLevelReq
	export function emptyDelRoomLevelReq():DelRoomLevelReq
	export function emptyRefDelRoomLevelReq():Ref<DelRoomLevelReq>
	export function refOfDelRoomLevelReq(x:DelRoomLevelReq,v:Ref<DelRoomLevelReq>)
	export function unRefDelRoomLevelReq(v:Ref<DelRoomLevelReq>):DelRoomLevelReq
	export function emptyV1():V1
	export function emptyRefV1():Ref<V1>
	export function refOfV1(x:V1,v:Ref<V1>)
	export function unRefV1(v:Ref<V1>):V1
	export function emptyCreateRoomLevelReq():CreateRoomLevelReq
	export function emptyRefCreateRoomLevelReq():Ref<CreateRoomLevelReq>
	export function refOfCreateRoomLevelReq(x:CreateRoomLevelReq,v:Ref<CreateRoomLevelReq>)
	export function unRefCreateRoomLevelReq(v:Ref<CreateRoomLevelReq>):CreateRoomLevelReq
	export function emptyGetDailyReportResp():GetDailyReportResp
	export function emptyRefGetDailyReportResp():Ref<GetDailyReportResp>
	export function refOfGetDailyReportResp(x:GetDailyReportResp,v:Ref<GetDailyReportResp>)
	export function unRefGetDailyReportResp(v:Ref<GetDailyReportResp>):GetDailyReportResp
	export function emptyRoom():Room
	export function emptyRefRoom():Ref<Room>
	export function refOfRoom(x:Room,v:Ref<Room>)
	export function unRefRoom(v:Ref<Room>):Room
	export function emptyListRoomReq():ListRoomReq
	export function emptyRefListRoomReq():Ref<ListRoomReq>
	export function refOfListRoomReq(x:ListRoomReq,v:Ref<ListRoomReq>)
	export function unRefListRoomReq(v:Ref<ListRoomReq>):ListRoomReq
	export function emptyDeleteReserveResp():DeleteReserveResp
	export function emptyRefDeleteReserveResp():Ref<DeleteReserveResp>
	export function refOfDeleteReserveResp(x:DeleteReserveResp,v:Ref<DeleteReserveResp>)
	export function unRefDeleteReserveResp(v:Ref<DeleteReserveResp>):DeleteReserveResp
	export function emptyPatchReserveConfigDisableInformResp():PatchReserveConfigDisableInformResp
	export function emptyRefPatchReserveConfigDisableInformResp():Ref<PatchReserveConfigDisableInformResp>
	export function refOfPatchReserveConfigDisableInformResp(x:PatchReserveConfigDisableInformResp,v:Ref<PatchReserveConfigDisableInformResp>)
	export function unRefPatchReserveConfigDisableInformResp(v:Ref<PatchReserveConfigDisableInformResp>):PatchReserveConfigDisableInformResp
	export function emptyMyAiRoomCommonResult():MyAiRoomCommonResult
	export function emptyRefMyAiRoomCommonResult():Ref<MyAiRoomCommonResult>
	export function refOfMyAiRoomCommonResult(x:MyAiRoomCommonResult,v:Ref<MyAiRoomCommonResult>)
	export function unRefMyAiRoomCommonResult(v:Ref<MyAiRoomCommonResult>):MyAiRoomCommonResult
	export function emptyReportTopUser():ReportTopUser
	export function emptyRefReportTopUser():Ref<ReportTopUser>
	export function refOfReportTopUser(x:ReportTopUser,v:Ref<ReportTopUser>)
	export function unRefReportTopUser(v:Ref<ReportTopUser>):ReportTopUser
	export function emptyStartMeetingRecordingReq():StartMeetingRecordingReq
	export function emptyRefStartMeetingRecordingReq():Ref<StartMeetingRecordingReq>
	export function refOfStartMeetingRecordingReq(x:StartMeetingRecordingReq,v:Ref<StartMeetingRecordingReq>)
	export function unRefStartMeetingRecordingReq(v:Ref<StartMeetingRecordingReq>):StartMeetingRecordingReq
	export function emptyGetParticipantListRespData():GetParticipantListRespData
	export function emptyRefGetParticipantListRespData():Ref<GetParticipantListRespData>
	export function refOfGetParticipantListRespData(x:GetParticipantListRespData,v:Ref<GetParticipantListRespData>)
	export function unRefGetParticipantListRespData(v:Ref<GetParticipantListRespData>):GetParticipantListRespData
	export function emptyKickoutMeetingRespData():KickoutMeetingRespData
	export function emptyRefKickoutMeetingRespData():Ref<KickoutMeetingRespData>
	export function refOfKickoutMeetingRespData(x:KickoutMeetingRespData,v:Ref<KickoutMeetingRespData>)
	export function unRefKickoutMeetingRespData(v:Ref<KickoutMeetingRespData>):KickoutMeetingRespData
	export function emptyListRoomResp():ListRoomResp
	export function emptyRefListRoomResp():Ref<ListRoomResp>
	export function refOfListRoomResp(x:ListRoomResp,v:Ref<ListRoomResp>)
	export function unRefListRoomResp(v:Ref<ListRoomResp>):ListRoomResp
	export function emptyMyAiAvPluginPresentInfo():MyAiAvPluginPresentInfo
	export function emptyRefMyAiAvPluginPresentInfo():Ref<MyAiAvPluginPresentInfo>
	export function refOfMyAiAvPluginPresentInfo(x:MyAiAvPluginPresentInfo,v:Ref<MyAiAvPluginPresentInfo>)
	export function unRefMyAiAvPluginPresentInfo(v:Ref<MyAiAvPluginPresentInfo>):MyAiAvPluginPresentInfo
	export function emptyP2MeetingLeaveMeetingV1Data():P2MeetingLeaveMeetingV1Data
	export function emptyRefP2MeetingLeaveMeetingV1Data():Ref<P2MeetingLeaveMeetingV1Data>
	export function refOfP2MeetingLeaveMeetingV1Data(x:P2MeetingLeaveMeetingV1Data,v:Ref<P2MeetingLeaveMeetingV1Data>)
	export function unRefP2MeetingLeaveMeetingV1Data(v:Ref<P2MeetingLeaveMeetingV1Data>):P2MeetingLeaveMeetingV1Data
	export function emptyP2ReserveConfigUpdatedV1Data():P2ReserveConfigUpdatedV1Data
	export function emptyRefP2ReserveConfigUpdatedV1Data():Ref<P2ReserveConfigUpdatedV1Data>
	export function refOfP2ReserveConfigUpdatedV1Data(x:P2ReserveConfigUpdatedV1Data,v:Ref<P2ReserveConfigUpdatedV1Data>)
	export function unRefP2ReserveConfigUpdatedV1Data(v:Ref<P2ReserveConfigUpdatedV1Data>):P2ReserveConfigUpdatedV1Data
	export function emptyGetScopeConfigRespData():GetScopeConfigRespData
	export function emptyRefGetScopeConfigRespData():Ref<GetScopeConfigRespData>
	export function refOfGetScopeConfigRespData(x:GetScopeConfigRespData,v:Ref<GetScopeConfigRespData>)
	export function unRefGetScopeConfigRespData(v:Ref<GetScopeConfigRespData>):GetScopeConfigRespData
	export function emptyP2ReserveConfigUpdatedV1():P2ReserveConfigUpdatedV1
	export function emptyRefP2ReserveConfigUpdatedV1():Ref<P2ReserveConfigUpdatedV1>
	export function refOfP2ReserveConfigUpdatedV1(x:P2ReserveConfigUpdatedV1,v:Ref<P2ReserveConfigUpdatedV1>)
	export function unRefP2ReserveConfigUpdatedV1(v:Ref<P2ReserveConfigUpdatedV1>):P2ReserveConfigUpdatedV1
	export function emptyUpdateReserveResp():UpdateReserveResp
	export function emptyRefUpdateReserveResp():Ref<UpdateReserveResp>
	export function refOfUpdateReserveResp(x:UpdateReserveResp,v:Ref<UpdateReserveResp>)
	export function unRefUpdateReserveResp(v:Ref<UpdateReserveResp>):UpdateReserveResp
	export function emptyListRoomIterator():ListRoomIterator
	export function emptyRefListRoomIterator():Ref<ListRoomIterator>
	export function refOfListRoomIterator(x:ListRoomIterator,v:Ref<ListRoomIterator>)
	export function unRefListRoomIterator(v:Ref<ListRoomIterator>):ListRoomIterator
	export function emptyListRoomLevelReq():ListRoomLevelReq
	export function emptyRefListRoomLevelReq():Ref<ListRoomLevelReq>
	export function refOfListRoomLevelReq(x:ListRoomLevelReq,v:Ref<ListRoomLevelReq>)
	export function unRefListRoomLevelReq(v:Ref<ListRoomLevelReq>):ListRoomLevelReq
	export function emptyP2MeetingShareEndedV1Data():P2MeetingShareEndedV1Data
	export function emptyRefP2MeetingShareEndedV1Data():Ref<P2MeetingShareEndedV1Data>
	export function refOfP2MeetingShareEndedV1Data(x:P2MeetingShareEndedV1Data,v:Ref<P2MeetingShareEndedV1Data>)
	export function unRefP2MeetingShareEndedV1Data(v:Ref<P2MeetingShareEndedV1Data>):P2MeetingShareEndedV1Data
	export function emptyPatchRoomLevelResp():PatchRoomLevelResp
	export function emptyRefPatchRoomLevelResp():Ref<PatchRoomLevelResp>
	export function refOfPatchRoomLevelResp(x:PatchRoomLevelResp,v:Ref<PatchRoomLevelResp>)
	export function unRefPatchRoomLevelResp(v:Ref<PatchRoomLevelResp>):PatchRoomLevelResp
	export function emptyPstnSipInfo():PstnSipInfo
	export function emptyRefPstnSipInfo():Ref<PstnSipInfo>
	export function refOfPstnSipInfo(x:PstnSipInfo,v:Ref<PstnSipInfo>)
	export function unRefPstnSipInfo(v:Ref<PstnSipInfo>):PstnSipInfo
	export function emptyReserveScopeConfigEvent():ReserveScopeConfigEvent
	export function emptyRefReserveScopeConfigEvent():Ref<ReserveScopeConfigEvent>
	export function refOfReserveScopeConfigEvent(x:ReserveScopeConfigEvent,v:Ref<ReserveScopeConfigEvent>)
	export function unRefReserveScopeConfigEvent(v:Ref<ReserveScopeConfigEvent>):ReserveScopeConfigEvent
	export function emptyRoomConfig():RoomConfig
	export function emptyRefRoomConfig():Ref<RoomConfig>
	export function refOfRoomConfig(x:RoomConfig,v:Ref<RoomConfig>)
	export function unRefRoomConfig(v:Ref<RoomConfig>):RoomConfig
	export function emptyApplyReserveRespData():ApplyReserveRespData
	export function emptyRefApplyReserveRespData():Ref<ApplyReserveRespData>
	export function refOfApplyReserveRespData(x:ApplyReserveRespData,v:Ref<ApplyReserveRespData>)
	export function unRefApplyReserveRespData(v:Ref<ApplyReserveRespData>):ApplyReserveRespData
	export function emptyMeetingEventMeeting():MeetingEventMeeting
	export function emptyRefMeetingEventMeeting():Ref<MeetingEventMeeting>
	export function refOfMeetingEventMeeting(x:MeetingEventMeeting,v:Ref<MeetingEventMeeting>)
	export function unRefMeetingEventMeeting(v:Ref<MeetingEventMeeting>):MeetingEventMeeting
	export function emptyDownloadExportReq():DownloadExportReq
	export function emptyRefDownloadExportReq():Ref<DownloadExportReq>
	export function refOfDownloadExportReq(x:DownloadExportReq,v:Ref<DownloadExportReq>)
	export function unRefDownloadExportReq(v:Ref<DownloadExportReq>):DownloadExportReq
	export function emptyP2MeetingStartedV1Data():P2MeetingStartedV1Data
	export function emptyRefP2MeetingStartedV1Data():Ref<P2MeetingStartedV1Data>
	export function refOfP2MeetingStartedV1Data(x:P2MeetingStartedV1Data,v:Ref<P2MeetingStartedV1Data>)
	export function unRefP2MeetingStartedV1Data(v:Ref<P2MeetingStartedV1Data>):P2MeetingStartedV1Data
	export function emptyP2RoomDeletedV1Data():P2RoomDeletedV1Data
	export function emptyRefP2RoomDeletedV1Data():Ref<P2RoomDeletedV1Data>
	export function refOfP2RoomDeletedV1Data(x:P2RoomDeletedV1Data,v:Ref<P2RoomDeletedV1Data>)
	export function unRefP2RoomDeletedV1Data(v:Ref<P2RoomDeletedV1Data>):P2RoomDeletedV1Data
	export function emptyPatchReserveConfigReq():PatchReserveConfigReq
	export function emptyRefPatchReserveConfigReq():Ref<PatchReserveConfigReq>
	export function refOfPatchReserveConfigReq(x:PatchReserveConfigReq,v:Ref<PatchReserveConfigReq>)
	export function unRefPatchReserveConfigReq(v:Ref<PatchReserveConfigReq>):PatchReserveConfigReq
	export function emptyReport():Report
	export function emptyRefReport():Ref<Report>
	export function refOfReport(x:Report,v:Ref<Report>)
	export function unRefReport(v:Ref<Report>):Report
	export function emptyListRoomLevelResp():ListRoomLevelResp
	export function emptyRefListRoomLevelResp():Ref<ListRoomLevelResp>
	export function refOfListRoomLevelResp(x:ListRoomLevelResp,v:Ref<ListRoomLevelResp>)
	export function unRefListRoomLevelResp(v:Ref<ListRoomLevelResp>):ListRoomLevelResp
	export function emptyMgetRoomReqBody():MgetRoomReqBody
	export function emptyRefMgetRoomReqBody():Ref<MgetRoomReqBody>
	export function refOfMgetRoomReqBody(x:MgetRoomReqBody,v:Ref<MgetRoomReqBody>)
	export function unRefMgetRoomReqBody(v:Ref<MgetRoomReqBody>):MgetRoomReqBody
	export function emptyParticipantQualityListExportReqBody():ParticipantQualityListExportReqBody
	export function emptyRefParticipantQualityListExportReqBody():Ref<ParticipantQualityListExportReqBody>
	export function refOfParticipantQualityListExportReqBody(x:ParticipantQualityListExportReqBody,v:Ref<ParticipantQualityListExportReqBody>)
	export function unRefParticipantQualityListExportReqBody(v:Ref<ParticipantQualityListExportReqBody>):ParticipantQualityListExportReqBody
	export function emptyGetDailyReportRespData():GetDailyReportRespData
	export function emptyRefGetDailyReportRespData():Ref<GetDailyReportRespData>
	export function refOfGetDailyReportRespData(x:GetDailyReportRespData,v:Ref<GetDailyReportRespData>)
	export function unRefGetDailyReportRespData(v:Ref<GetDailyReportRespData>):GetDailyReportRespData
	export function emptyP2MeetingAllMeetingStartedV1Data():P2MeetingAllMeetingStartedV1Data
	export function emptyRefP2MeetingAllMeetingStartedV1Data():Ref<P2MeetingAllMeetingStartedV1Data>
	export function refOfP2MeetingAllMeetingStartedV1Data(x:P2MeetingAllMeetingStartedV1Data,v:Ref<P2MeetingAllMeetingStartedV1Data>)
	export function unRefP2MeetingAllMeetingStartedV1Data(v:Ref<P2MeetingAllMeetingStartedV1Data>):P2MeetingAllMeetingStartedV1Data
	export function emptyP2RoomLevelCreatedV1Data():P2RoomLevelCreatedV1Data
	export function emptyRefP2RoomLevelCreatedV1Data():Ref<P2RoomLevelCreatedV1Data>
	export function refOfP2RoomLevelCreatedV1Data(x:P2RoomLevelCreatedV1Data,v:Ref<P2RoomLevelCreatedV1Data>)
	export function unRefP2RoomLevelCreatedV1Data(v:Ref<P2RoomLevelCreatedV1Data>):P2RoomLevelCreatedV1Data
	export function emptyPatchReserveConfigAdminReq():PatchReserveConfigAdminReq
	export function emptyRefPatchReserveConfigAdminReq():Ref<PatchReserveConfigAdminReq>
	export function refOfPatchReserveConfigAdminReq(x:PatchReserveConfigAdminReq,v:Ref<PatchReserveConfigAdminReq>)
	export function unRefPatchReserveConfigAdminReq(v:Ref<PatchReserveConfigAdminReq>):PatchReserveConfigAdminReq
	export function emptySetRoomConfigReqBody():SetRoomConfigReqBody
	export function emptyRefSetRoomConfigReqBody():Ref<SetRoomConfigReqBody>
	export function refOfSetRoomConfigReqBody(x:SetRoomConfigReqBody,v:Ref<SetRoomConfigReqBody>)
	export function unRefSetRoomConfigReqBody(v:Ref<SetRoomConfigReqBody>):SetRoomConfigReqBody
	export function emptyListAlertRespData():ListAlertRespData
	export function emptyRefListAlertRespData():Ref<ListAlertRespData>
	export function refOfListAlertRespData(x:ListAlertRespData,v:Ref<ListAlertRespData>)
	export function unRefListAlertRespData(v:Ref<ListAlertRespData>):ListAlertRespData
	export function emptyListByNoMeetingResp():ListByNoMeetingResp
	export function emptyRefListByNoMeetingResp():Ref<ListByNoMeetingResp>
	export function refOfListByNoMeetingResp(x:ListByNoMeetingResp,v:Ref<ListByNoMeetingResp>)
	export function unRefListByNoMeetingResp(v:Ref<ListByNoMeetingResp>):ListByNoMeetingResp
	export function emptyMgetRoomLevelReq():MgetRoomLevelReq
	export function emptyRefMgetRoomLevelReq():Ref<MgetRoomLevelReq>
	export function refOfMgetRoomLevelReq(x:MgetRoomLevelReq,v:Ref<MgetRoomLevelReq>)
	export function unRefMgetRoomLevelReq(v:Ref<MgetRoomLevelReq>):MgetRoomLevelReq
	export function emptyGetExportReq():GetExportReq
	export function emptyRefGetExportReq():Ref<GetExportReq>
	export function refOfGetExportReq(x:GetExportReq,v:Ref<GetExportReq>)
	export function unRefGetExportReq(v:Ref<GetExportReq>):GetExportReq
	export function emptyMgetRoomLevelReqBody():MgetRoomLevelReqBody
	export function emptyRefMgetRoomLevelReqBody():Ref<MgetRoomLevelReqBody>
	export function refOfMgetRoomLevelReqBody(x:MgetRoomLevelReqBody,v:Ref<MgetRoomLevelReqBody>)
	export function unRefMgetRoomLevelReqBody(v:Ref<MgetRoomLevelReqBody>):MgetRoomLevelReqBody
	export function emptyP2MeetingAllMeetingStartedV1():P2MeetingAllMeetingStartedV1
	export function emptyRefP2MeetingAllMeetingStartedV1():Ref<P2MeetingAllMeetingStartedV1>
	export function refOfP2MeetingAllMeetingStartedV1(x:P2MeetingAllMeetingStartedV1,v:Ref<P2MeetingAllMeetingStartedV1>)
	export function unRefP2MeetingAllMeetingStartedV1(v:Ref<P2MeetingAllMeetingStartedV1>):P2MeetingAllMeetingStartedV1
	export function emptyQueryRoomConfigRespData():QueryRoomConfigRespData
	export function emptyRefQueryRoomConfigRespData():Ref<QueryRoomConfigRespData>
	export function refOfQueryRoomConfigRespData(x:QueryRoomConfigRespData,v:Ref<QueryRoomConfigRespData>)
	export function unRefQueryRoomConfigRespData(v:Ref<QueryRoomConfigRespData>):QueryRoomConfigRespData
	export function emptyGetReserveConfigDisableInformRespData():GetReserveConfigDisableInformRespData
	export function emptyRefGetReserveConfigDisableInformRespData():Ref<GetReserveConfigDisableInformRespData>
	export function refOfGetReserveConfigDisableInformRespData(x:GetReserveConfigDisableInformRespData,v:Ref<GetReserveConfigDisableInformRespData>)
	export function unRefGetReserveConfigDisableInformRespData(v:Ref<GetReserveConfigDisableInformRespData>):GetReserveConfigDisableInformRespData
	export function emptyGetRoomReq():GetRoomReq
	export function emptyRefGetRoomReq():Ref<GetRoomReq>
	export function refOfGetRoomReq(x:GetRoomReq,v:Ref<GetRoomReq>)
	export function unRefGetRoomReq(v:Ref<GetRoomReq>):GetRoomReq
	export function emptyMaterialReviewResult():MaterialReviewResult
	export function emptyRefMaterialReviewResult():Ref<MaterialReviewResult>
	export function refOfMaterialReviewResult(x:MaterialReviewResult,v:Ref<MaterialReviewResult>)
	export function unRefMaterialReviewResult(v:Ref<MaterialReviewResult>):MaterialReviewResult
	export function emptyP2MeetingShareStartedV1Data():P2MeetingShareStartedV1Data
	export function emptyRefP2MeetingShareStartedV1Data():Ref<P2MeetingShareStartedV1Data>
	export function refOfP2MeetingShareStartedV1Data(x:P2MeetingShareStartedV1Data,v:Ref<P2MeetingShareStartedV1Data>)
	export function unRefP2MeetingShareStartedV1Data(v:Ref<P2MeetingShareStartedV1Data>):P2MeetingShareStartedV1Data
	export function emptySetPermissionMeetingRecordingReqBody():SetPermissionMeetingRecordingReqBody
	export function emptyRefSetPermissionMeetingRecordingReqBody():Ref<SetPermissionMeetingRecordingReqBody>
	export function refOfSetPermissionMeetingRecordingReqBody(x:SetPermissionMeetingRecordingReqBody,v:Ref<SetPermissionMeetingRecordingReqBody>)
	export function unRefSetPermissionMeetingRecordingReqBody(v:Ref<SetPermissionMeetingRecordingReqBody>):SetPermissionMeetingRecordingReqBody
	export function emptySetRoomConfigResp():SetRoomConfigResp
	export function emptyRefSetRoomConfigResp():Ref<SetRoomConfigResp>
	export function refOfSetRoomConfigResp(x:SetRoomConfigResp,v:Ref<SetRoomConfigResp>)
	export function unRefSetRoomConfigResp(v:Ref<SetRoomConfigResp>):SetRoomConfigResp
	export function emptyConditions():Conditions
	export function emptyRefConditions():Ref<Conditions>
	export function refOfConditions(x:Conditions,v:Ref<Conditions>)
	export function unRefConditions(v:Ref<Conditions>):Conditions
	export function emptyP2RoomLevelDeletedV1():P2RoomLevelDeletedV1
	export function emptyRefP2RoomLevelDeletedV1():Ref<P2RoomLevelDeletedV1>
	export function refOfP2RoomLevelDeletedV1(x:P2RoomLevelDeletedV1,v:Ref<P2RoomLevelDeletedV1>)
	export function unRefP2RoomLevelDeletedV1(v:Ref<P2RoomLevelDeletedV1>):P2RoomLevelDeletedV1
	export function emptyResourceReservationListExportRespData():ResourceReservationListExportRespData
	export function emptyRefResourceReservationListExportRespData():Ref<ResourceReservationListExportRespData>
	export function refOfResourceReservationListExportRespData(x:ResourceReservationListExportRespData,v:Ref<ResourceReservationListExportRespData>)
	export function unRefResourceReservationListExportRespData(v:Ref<ResourceReservationListExportRespData>):ResourceReservationListExportRespData
	export function emptyMaterial():Material
	export function emptyRefMaterial():Ref<Material>
	export function refOfMaterial(x:Material,v:Ref<Material>)
	export function unRefMaterial(v:Ref<Material>):Material
	export function emptyMeetingInfo():MeetingInfo
	export function emptyRefMeetingInfo():Ref<MeetingInfo>
	export function refOfMeetingInfo(x:MeetingInfo,v:Ref<MeetingInfo>)
	export function unRefMeetingInfo(v:Ref<MeetingInfo>):MeetingInfo
	export function emptyMyAiVcMeetingTodoTaskResult():MyAiVcMeetingTodoTaskResult
	export function emptyRefMyAiVcMeetingTodoTaskResult():Ref<MyAiVcMeetingTodoTaskResult>
	export function refOfMyAiVcMeetingTodoTaskResult(x:MyAiVcMeetingTodoTaskResult,v:Ref<MyAiVcMeetingTodoTaskResult>)
	export function unRefMyAiVcMeetingTodoTaskResult(v:Ref<MyAiVcMeetingTodoTaskResult>):MyAiVcMeetingTodoTaskResult
	export function emptyRoomLevel():RoomLevel
	export function emptyRefRoomLevel():Ref<RoomLevel>
	export function refOfRoomLevel(x:RoomLevel,v:Ref<RoomLevel>)
	export function unRefRoomLevel(v:Ref<RoomLevel>):RoomLevel
	export function emptyMgetRoomReq():MgetRoomReq
	export function emptyRefMgetRoomReq():Ref<MgetRoomReq>
	export function refOfMgetRoomReq(x:MgetRoomReq,v:Ref<MgetRoomReq>)
	export function unRefMgetRoomReq(v:Ref<MgetRoomReq>):MgetRoomReq
	export function emptyMyAiRoomOpenapiResponse():MyAiRoomOpenapiResponse
	export function emptyRefMyAiRoomOpenapiResponse():Ref<MyAiRoomOpenapiResponse>
	export function refOfMyAiRoomOpenapiResponse(x:MyAiRoomOpenapiResponse,v:Ref<MyAiRoomOpenapiResponse>)
	export function unRefMyAiRoomOpenapiResponse(v:Ref<MyAiRoomOpenapiResponse>):MyAiRoomOpenapiResponse
	export function emptySearchRoomResp():SearchRoomResp
	export function emptyRefSearchRoomResp():Ref<SearchRoomResp>
	export function refOfSearchRoomResp(x:SearchRoomResp,v:Ref<SearchRoomResp>)
	export function unRefSearchRoomResp(v:Ref<SearchRoomResp>):SearchRoomResp
	export function emptyGetParticipantListIterator():GetParticipantListIterator
	export function emptyRefGetParticipantListIterator():Ref<GetParticipantListIterator>
	export function refOfGetParticipantListIterator(x:GetParticipantListIterator,v:Ref<GetParticipantListIterator>)
	export function unRefGetParticipantListIterator(v:Ref<GetParticipantListIterator>):GetParticipantListIterator
	export function emptyResourceReservationListExportReqBody():ResourceReservationListExportReqBody
	export function emptyRefResourceReservationListExportReqBody():Ref<ResourceReservationListExportReqBody>
	export function refOfResourceReservationListExportReqBody(x:ResourceReservationListExportReqBody,v:Ref<ResourceReservationListExportReqBody>)
	export function unRefResourceReservationListExportReqBody(v:Ref<ResourceReservationListExportReqBody>):ResourceReservationListExportReqBody
	export function emptyCreateRoomResp():CreateRoomResp
	export function emptyRefCreateRoomResp():Ref<CreateRoomResp>
	export function refOfCreateRoomResp(x:CreateRoomResp,v:Ref<CreateRoomResp>)
	export function unRefCreateRoomResp(v:Ref<CreateRoomResp>):CreateRoomResp
	export function emptyGetReserveConfigDisableInformResp():GetReserveConfigDisableInformResp
	export function emptyRefGetReserveConfigDisableInformResp():Ref<GetReserveConfigDisableInformResp>
	export function refOfGetReserveConfigDisableInformResp(x:GetReserveConfigDisableInformResp,v:Ref<GetReserveConfigDisableInformResp>)
	export function unRefGetReserveConfigDisableInformResp(v:Ref<GetReserveConfigDisableInformResp>):GetReserveConfigDisableInformResp
	export function emptyP2MeetingRecordingStartedV1():P2MeetingRecordingStartedV1
	export function emptyRefP2MeetingRecordingStartedV1():Ref<P2MeetingRecordingStartedV1>
	export function refOfP2MeetingRecordingStartedV1(x:P2MeetingRecordingStartedV1,v:Ref<P2MeetingRecordingStartedV1>)
	export function unRefP2MeetingRecordingStartedV1(v:Ref<P2MeetingRecordingStartedV1>):P2MeetingRecordingStartedV1
	export function emptyCustomList():CustomList
	export function emptyRefCustomList():Ref<CustomList>
	export function refOfCustomList(x:CustomList,v:Ref<CustomList>)
	export function unRefCustomList(v:Ref<CustomList>):CustomList
	export function emptyMyAiSipCardVariables():MyAiSipCardVariables
	export function emptyRefMyAiSipCardVariables():Ref<MyAiSipCardVariables>
	export function refOfMyAiSipCardVariables(x:MyAiSipCardVariables,v:Ref<MyAiSipCardVariables>)
	export function unRefMyAiSipCardVariables(v:Ref<MyAiSipCardVariables>):MyAiSipCardVariables
	export function emptyP2RoomLevelUpdatedV1Data():P2RoomLevelUpdatedV1Data
	export function emptyRefP2RoomLevelUpdatedV1Data():Ref<P2RoomLevelUpdatedV1Data>
	export function refOfP2RoomLevelUpdatedV1Data(x:P2RoomLevelUpdatedV1Data,v:Ref<P2RoomLevelUpdatedV1Data>)
	export function unRefP2RoomLevelUpdatedV1Data(v:Ref<P2RoomLevelUpdatedV1Data>):P2RoomLevelUpdatedV1Data
	export function emptyReserveActionPermission():ReserveActionPermission
	export function emptyRefReserveActionPermission():Ref<ReserveActionPermission>
	export function refOfReserveActionPermission(x:ReserveActionPermission,v:Ref<ReserveActionPermission>)
	export function unRefReserveActionPermission(v:Ref<ReserveActionPermission>):ReserveActionPermission
	export function emptySearchRoomReqBody():SearchRoomReqBody
	export function emptyRefSearchRoomReqBody():Ref<SearchRoomReqBody>
	export function refOfSearchRoomReqBody(x:SearchRoomReqBody,v:Ref<SearchRoomReqBody>)
	export function unRefSearchRoomReqBody(v:Ref<SearchRoomReqBody>):SearchRoomReqBody
	export function emptyTimeConfig():TimeConfig
	export function emptyRefTimeConfig():Ref<TimeConfig>
	export function refOfTimeConfig(x:TimeConfig,v:Ref<TimeConfig>)
	export function unRefTimeConfig(v:Ref<TimeConfig>):TimeConfig
	export function emptyDeleteReserveReq():DeleteReserveReq
	export function emptyRefDeleteReserveReq():Ref<DeleteReserveReq>
	export function refOfDeleteReserveReq(x:DeleteReserveReq,v:Ref<DeleteReserveReq>)
	export function unRefDeleteReserveReq(v:Ref<DeleteReserveReq>):DeleteReserveReq
	export function emptyRoomEvent():RoomEvent
	export function emptyRefRoomEvent():Ref<RoomEvent>
	export function refOfRoomEvent(x:RoomEvent,v:Ref<RoomEvent>)
	export function unRefRoomEvent(v:Ref<RoomEvent>):RoomEvent
	export function emptySetHostMeetingReqBody():SetHostMeetingReqBody
	export function emptyRefSetHostMeetingReqBody():Ref<SetHostMeetingReqBody>
	export function refOfSetHostMeetingReqBody(x:SetHostMeetingReqBody,v:Ref<SetHostMeetingReqBody>)
	export function unRefSetHostMeetingReqBody(v:Ref<SetHostMeetingReqBody>):SetHostMeetingReqBody
	export function emptyCreateScopeConfigReq():CreateScopeConfigReq
	export function emptyRefCreateScopeConfigReq():Ref<CreateScopeConfigReq>
	export function refOfCreateScopeConfigReq(x:CreateScopeConfigReq,v:Ref<CreateScopeConfigReq>)
	export function unRefCreateScopeConfigReq(v:Ref<CreateScopeConfigReq>):CreateScopeConfigReq
	export function emptyGetScopeConfigReq():GetScopeConfigReq
	export function emptyRefGetScopeConfigReq():Ref<GetScopeConfigReq>
	export function refOfGetScopeConfigReq(x:GetScopeConfigReq,v:Ref<GetScopeConfigReq>)
	export function unRefGetScopeConfigReq(v:Ref<GetScopeConfigReq>):GetScopeConfigReq
	export function emptyRecordingPermissionObject():RecordingPermissionObject
	export function emptyRefRecordingPermissionObject():Ref<RecordingPermissionObject>
	export function refOfRecordingPermissionObject(x:RecordingPermissionObject,v:Ref<RecordingPermissionObject>)
	export function unRefRecordingPermissionObject(v:Ref<RecordingPermissionObject>):RecordingPermissionObject
	export function emptySearchRoomReq():SearchRoomReq
	export function emptyRefSearchRoomReq():Ref<SearchRoomReq>
	export function refOfSearchRoomReq(x:SearchRoomReq,v:Ref<SearchRoomReq>)
	export function unRefSearchRoomReq(v:Ref<SearchRoomReq>):SearchRoomReq
	export function emptyDelRoomLevelResp():DelRoomLevelResp
	export function emptyRefDelRoomLevelResp():Ref<DelRoomLevelResp>
	export function refOfDelRoomLevelResp(x:DelRoomLevelResp,v:Ref<DelRoomLevelResp>)
	export function unRefDelRoomLevelResp(v:Ref<DelRoomLevelResp>):DelRoomLevelResp
	export function emptyP2RoomLevelDeletedV1Data():P2RoomLevelDeletedV1Data
	export function emptyRefP2RoomLevelDeletedV1Data():Ref<P2RoomLevelDeletedV1Data>
	export function refOfP2RoomLevelDeletedV1Data(x:P2RoomLevelDeletedV1Data,v:Ref<P2RoomLevelDeletedV1Data>)
	export function unRefP2RoomLevelDeletedV1Data(v:Ref<P2RoomLevelDeletedV1Data>):P2RoomLevelDeletedV1Data
	export function emptyReserveFormConfig():ReserveFormConfig
	export function emptyRefReserveFormConfig():Ref<ReserveFormConfig>
	export function refOfReserveFormConfig(x:ReserveFormConfig,v:Ref<ReserveFormConfig>)
	export function unRefReserveFormConfig(v:Ref<ReserveFormConfig>):ReserveFormConfig
	export function emptyReserveMeetingSetting():ReserveMeetingSetting
	export function emptyRefReserveMeetingSetting():Ref<ReserveMeetingSetting>
	export function refOfReserveMeetingSetting(x:ReserveMeetingSetting,v:Ref<ReserveMeetingSetting>)
	export function unRefReserveMeetingSetting(v:Ref<ReserveMeetingSetting>):ReserveMeetingSetting
	export function emptyGetParticipantQualityListIterator():GetParticipantQualityListIterator
	export function emptyRefGetParticipantQualityListIterator():Ref<GetParticipantQualityListIterator>
	export function refOfGetParticipantQualityListIterator(x:GetParticipantQualityListIterator,v:Ref<GetParticipantQualityListIterator>)
	export function unRefGetParticipantQualityListIterator(v:Ref<GetParticipantQualityListIterator>):GetParticipantQualityListIterator
	export function emptySetCheckboardAccessCodeRoomConfigRespData():SetCheckboardAccessCodeRoomConfigRespData
	export function emptyRefSetCheckboardAccessCodeRoomConfigRespData():Ref<SetCheckboardAccessCodeRoomConfigRespData>
	export function refOfSetCheckboardAccessCodeRoomConfigRespData(x:SetCheckboardAccessCodeRoomConfigRespData,v:Ref<SetCheckboardAccessCodeRoomConfigRespData>)
	export function unRefSetCheckboardAccessCodeRoomConfigRespData(v:Ref<SetCheckboardAccessCodeRoomConfigRespData>):SetCheckboardAccessCodeRoomConfigRespData
	export function emptyDevice():Device
	export function emptyRefDevice():Ref<Device>
	export function refOfDevice(x:Device,v:Ref<Device>)
	export function unRefDevice(v:Ref<Device>):Device
	export function emptyReserveScopeReserveConfigResp():ReserveScopeReserveConfigResp
	export function emptyRefReserveScopeReserveConfigResp():Ref<ReserveScopeReserveConfigResp>
	export function refOfReserveScopeReserveConfigResp(x:ReserveScopeReserveConfigResp,v:Ref<ReserveScopeReserveConfigResp>)
	export function unRefReserveScopeReserveConfigResp(v:Ref<ReserveScopeReserveConfigResp>):ReserveScopeReserveConfigResp
	export function emptyMeetingInviteStatus():MeetingInviteStatus
	export function emptyRefMeetingInviteStatus():Ref<MeetingInviteStatus>
	export function refOfMeetingInviteStatus(x:MeetingInviteStatus,v:Ref<MeetingInviteStatus>)
	export function unRefMeetingInviteStatus(v:Ref<MeetingInviteStatus>):MeetingInviteStatus
	export function emptyP2MeetingStartedV1():P2MeetingStartedV1
	export function emptyRefP2MeetingStartedV1():Ref<P2MeetingStartedV1>
	export function refOfP2MeetingStartedV1(x:P2MeetingStartedV1,v:Ref<P2MeetingStartedV1>)
	export function unRefP2MeetingStartedV1(v:Ref<P2MeetingStartedV1>):P2MeetingStartedV1
	export function emptyQualityVideoSharing():QualityVideoSharing
	export function emptyRefQualityVideoSharing():Ref<QualityVideoSharing>
	export function refOfQualityVideoSharing(x:QualityVideoSharing,v:Ref<QualityVideoSharing>)
	export function unRefQualityVideoSharing(v:Ref<QualityVideoSharing>):QualityVideoSharing
	export function emptyDelRoomLevelReqBody():DelRoomLevelReqBody
	export function emptyRefDelRoomLevelReqBody():Ref<DelRoomLevelReqBody>
	export function refOfDelRoomLevelReqBody(x:DelRoomLevelReqBody,v:Ref<DelRoomLevelReqBody>)
	export function unRefDelRoomLevelReqBody(v:Ref<DelRoomLevelReqBody>):DelRoomLevelReqBody
	export function emptyGetReserveReq():GetReserveReq
	export function emptyRefGetReserveReq():Ref<GetReserveReq>
	export function refOfGetReserveReq(x:GetReserveReq,v:Ref<GetReserveReq>)
	export function unRefGetReserveReq(v:Ref<GetReserveReq>):GetReserveReq
	export function emptyApplyReserveReqBody():ApplyReserveReqBody
	export function emptyRefApplyReserveReqBody():Ref<ApplyReserveReqBody>
	export function refOfApplyReserveReqBody(x:ApplyReserveReqBody,v:Ref<ApplyReserveReqBody>)
	export function unRefApplyReserveReqBody(v:Ref<ApplyReserveReqBody>):ApplyReserveReqBody
	export function emptyGetParticipantQualityListResp():GetParticipantQualityListResp
	export function emptyRefGetParticipantQualityListResp():Ref<GetParticipantQualityListResp>
	export function refOfGetParticipantQualityListResp(x:GetParticipantQualityListResp,v:Ref<GetParticipantQualityListResp>)
	export function unRefGetParticipantQualityListResp(v:Ref<GetParticipantQualityListResp>):GetParticipantQualityListResp
	export function emptyMeetingListExportResp():MeetingListExportResp
	export function emptyRefMeetingListExportResp():Ref<MeetingListExportResp>
	export function refOfMeetingListExportResp(x:MeetingListExportResp,v:Ref<MeetingListExportResp>)
	export function unRefMeetingListExportResp(v:Ref<MeetingListExportResp>):MeetingListExportResp
	export function emptyUpdateReserveReqBody():UpdateReserveReqBody
	export function emptyRefUpdateReserveReqBody():Ref<UpdateReserveReqBody>
	export function refOfUpdateReserveReqBody(x:UpdateReserveReqBody,v:Ref<UpdateReserveReqBody>)
	export function unRefUpdateReserveReqBody(v:Ref<UpdateReserveReqBody>):UpdateReserveReqBody
	export function emptyDeleteRoomReq():DeleteRoomReq
	export function emptyRefDeleteRoomReq():Ref<DeleteRoomReq>
	export function refOfDeleteRoomReq(x:DeleteRoomReq,v:Ref<DeleteRoomReq>)
	export function unRefDeleteRoomReq(v:Ref<DeleteRoomReq>):DeleteRoomReq
	export function emptyGetMeetingListResp():GetMeetingListResp
	export function emptyRefGetMeetingListResp():Ref<GetMeetingListResp>
	export function refOfGetMeetingListResp(x:GetMeetingListResp,v:Ref<GetMeetingListResp>)
	export function unRefGetMeetingListResp(v:Ref<GetMeetingListResp>):GetMeetingListResp
	export function emptySetCheckboardAccessCodeRoomConfigResp():SetCheckboardAccessCodeRoomConfigResp
	export function emptyRefSetCheckboardAccessCodeRoomConfigResp():Ref<SetCheckboardAccessCodeRoomConfigResp>
	export function refOfSetCheckboardAccessCodeRoomConfigResp(x:SetCheckboardAccessCodeRoomConfigResp,v:Ref<SetCheckboardAccessCodeRoomConfigResp>)
	export function unRefSetCheckboardAccessCodeRoomConfigResp(v:Ref<SetCheckboardAccessCodeRoomConfigResp>):SetCheckboardAccessCodeRoomConfigResp
	export function emptyListAlertIterator():ListAlertIterator
	export function emptyRefListAlertIterator():Ref<ListAlertIterator>
	export function refOfListAlertIterator(x:ListAlertIterator,v:Ref<ListAlertIterator>)
	export function unRefListAlertIterator(v:Ref<ListAlertIterator>):ListAlertIterator
	export function emptyMaterialUploadResult():MaterialUploadResult
	export function emptyRefMaterialUploadResult():Ref<MaterialUploadResult>
	export function refOfMaterialUploadResult(x:MaterialUploadResult,v:Ref<MaterialUploadResult>)
	export function unRefMaterialUploadResult(v:Ref<MaterialUploadResult>):MaterialUploadResult
	export function emptyMyAiVcMeetingExtra():MyAiVcMeetingExtra
	export function emptyRefMyAiVcMeetingExtra():Ref<MyAiVcMeetingExtra>
	export function refOfMyAiVcMeetingExtra(x:MyAiVcMeetingExtra,v:Ref<MyAiVcMeetingExtra>)
	export function unRefMyAiVcMeetingExtra(v:Ref<MyAiVcMeetingExtra>):MyAiVcMeetingExtra
	export function emptyP2MeetingRecordingEndedV1():P2MeetingRecordingEndedV1
	export function emptyRefP2MeetingRecordingEndedV1():Ref<P2MeetingRecordingEndedV1>
	export function refOfP2MeetingRecordingEndedV1(x:P2MeetingRecordingEndedV1,v:Ref<P2MeetingRecordingEndedV1>)
	export function unRefP2MeetingRecordingEndedV1(v:Ref<P2MeetingRecordingEndedV1>):P2MeetingRecordingEndedV1
	export function emptyMyAiVcRoomRequestCommonParam():MyAiVcRoomRequestCommonParam
	export function emptyRefMyAiVcRoomRequestCommonParam():Ref<MyAiVcRoomRequestCommonParam>
	export function refOfMyAiVcRoomRequestCommonParam(x:MyAiVcRoomRequestCommonParam,v:Ref<MyAiVcRoomRequestCommonParam>)
	export function unRefMyAiVcRoomRequestCommonParam(v:Ref<MyAiVcRoomRequestCommonParam>):MyAiVcRoomRequestCommonParam
	export function emptyPatchReserveConfigAdminReqBody():PatchReserveConfigAdminReqBody
	export function emptyRefPatchReserveConfigAdminReqBody():Ref<PatchReserveConfigAdminReqBody>
	export function refOfPatchReserveConfigAdminReqBody(x:PatchReserveConfigAdminReqBody,v:Ref<PatchReserveConfigAdminReqBody>)
	export function unRefPatchReserveConfigAdminReqBody(v:Ref<PatchReserveConfigAdminReqBody>):PatchReserveConfigAdminReqBody
	export function emptyResourceReservationListExportReq():ResourceReservationListExportReq
	export function emptyRefResourceReservationListExportReq():Ref<ResourceReservationListExportReq>
	export function refOfResourceReservationListExportReq(x:ResourceReservationListExportReq,v:Ref<ResourceReservationListExportReq>)
	export function unRefResourceReservationListExportReq(v:Ref<ResourceReservationListExportReq>):ResourceReservationListExportReq
	export function emptyResourceReservationListExportResp():ResourceReservationListExportResp
	export function emptyRefResourceReservationListExportResp():Ref<ResourceReservationListExportResp>
	export function refOfResourceReservationListExportResp(x:ResourceReservationListExportResp,v:Ref<ResourceReservationListExportResp>)
	export function unRefResourceReservationListExportResp(v:Ref<ResourceReservationListExportResp>):ResourceReservationListExportResp
	export function emptyGetMeetingReq():GetMeetingReq
	export function emptyRefGetMeetingReq():Ref<GetMeetingReq>
	export function refOfGetMeetingReq(x:GetMeetingReq,v:Ref<GetMeetingReq>)
	export function unRefGetMeetingReq(v:Ref<GetMeetingReq>):GetMeetingReq
	export function emptyPatchReserveConfigFormReqBody():PatchReserveConfigFormReqBody
	export function emptyRefPatchReserveConfigFormReqBody():Ref<PatchReserveConfigFormReqBody>
	export function refOfPatchReserveConfigFormReqBody(x:PatchReserveConfigFormReqBody,v:Ref<PatchReserveConfigFormReqBody>)
	export function unRefPatchReserveConfigFormReqBody(v:Ref<PatchReserveConfigFormReqBody>):PatchReserveConfigFormReqBody
	export function emptySubscribeDepartment():SubscribeDepartment
	export function emptyRefSubscribeDepartment():Ref<SubscribeDepartment>
	export function refOfSubscribeDepartment(x:SubscribeDepartment,v:Ref<SubscribeDepartment>)
	export function unRefSubscribeDepartment(v:Ref<SubscribeDepartment>):SubscribeDepartment
	export function emptyCreateRoomRespData():CreateRoomRespData
	export function emptyRefCreateRoomRespData():Ref<CreateRoomRespData>
	export function refOfCreateRoomRespData(x:CreateRoomRespData,v:Ref<CreateRoomRespData>)
	export function unRefCreateRoomRespData(v:Ref<CreateRoomRespData>):CreateRoomRespData
	export function emptySetPermissionMeetingRecordingResp():SetPermissionMeetingRecordingResp
	export function emptyRefSetPermissionMeetingRecordingResp():Ref<SetPermissionMeetingRecordingResp>
	export function refOfSetPermissionMeetingRecordingResp(x:SetPermissionMeetingRecordingResp,v:Ref<SetPermissionMeetingRecordingResp>)
	export function unRefSetPermissionMeetingRecordingResp(v:Ref<SetPermissionMeetingRecordingResp>):SetPermissionMeetingRecordingResp
	export function emptyP2MeetingEndedV1Data():P2MeetingEndedV1Data
	export function emptyRefP2MeetingEndedV1Data():Ref<P2MeetingEndedV1Data>
	export function refOfP2MeetingEndedV1Data(x:P2MeetingEndedV1Data,v:Ref<P2MeetingEndedV1Data>)
	export function unRefP2MeetingEndedV1Data(v:Ref<P2MeetingEndedV1Data>):P2MeetingEndedV1Data
	export function emptyPatchRoomResp():PatchRoomResp
	export function emptyRefPatchRoomResp():Ref<PatchRoomResp>
	export function refOfPatchRoomResp(x:PatchRoomResp,v:Ref<PatchRoomResp>)
	export function unRefPatchRoomResp(v:Ref<PatchRoomResp>):PatchRoomResp
	export function emptyStartMeetingRecordingResp():StartMeetingRecordingResp
	export function emptyRefStartMeetingRecordingResp():Ref<StartMeetingRecordingResp>
	export function refOfStartMeetingRecordingResp(x:StartMeetingRecordingResp,v:Ref<StartMeetingRecordingResp>)
	export function unRefStartMeetingRecordingResp(v:Ref<StartMeetingRecordingResp>):StartMeetingRecordingResp
	export function emptyGetMeetingListReq():GetMeetingListReq
	export function emptyRefGetMeetingListReq():Ref<GetMeetingListReq>
	export function refOfGetMeetingListReq(x:GetMeetingListReq,v:Ref<GetMeetingListReq>)
	export function unRefGetMeetingListReq(v:Ref<GetMeetingListReq>):GetMeetingListReq
	export function emptyMeeting():Meeting
	export function emptyRefMeeting():Ref<Meeting>
	export function refOfMeeting(x:Meeting,v:Ref<Meeting>)
	export function unRefMeeting(v:Ref<Meeting>):Meeting
	export function emptyParticipantListExportResp():ParticipantListExportResp
	export function emptyRefParticipantListExportResp():Ref<ParticipantListExportResp>
	export function refOfParticipantListExportResp(x:ParticipantListExportResp,v:Ref<ParticipantListExportResp>)
	export function unRefParticipantListExportResp(v:Ref<ParticipantListExportResp>):ParticipantListExportResp
	export function emptyParticipantQualityListExportResp():ParticipantQualityListExportResp
	export function emptyRefParticipantQualityListExportResp():Ref<ParticipantQualityListExportResp>
	export function refOfParticipantQualityListExportResp(x:ParticipantQualityListExportResp,v:Ref<ParticipantQualityListExportResp>)
	export function unRefParticipantQualityListExportResp(v:Ref<ParticipantQualityListExportResp>):ParticipantQualityListExportResp
	export function emptyP2RoomCreatedV1():P2RoomCreatedV1
	export function emptyRefP2RoomCreatedV1():Ref<P2RoomCreatedV1>
	export function refOfP2RoomCreatedV1(x:P2RoomCreatedV1,v:Ref<P2RoomCreatedV1>)
	export function unRefP2RoomCreatedV1(v:Ref<P2RoomCreatedV1>):P2RoomCreatedV1
	export function emptyParticipantQualityListExportRespData():ParticipantQualityListExportRespData
	export function emptyRefParticipantQualityListExportRespData():Ref<ParticipantQualityListExportRespData>
	export function refOfParticipantQualityListExportRespData(x:ParticipantQualityListExportRespData,v:Ref<ParticipantQualityListExportRespData>)
	export function unRefParticipantQualityListExportRespData(v:Ref<ParticipantQualityListExportRespData>):ParticipantQualityListExportRespData
	export function emptyGetParticipantListResp():GetParticipantListResp
	export function emptyRefGetParticipantListResp():Ref<GetParticipantListResp>
	export function refOfGetParticipantListResp(x:GetParticipantListResp,v:Ref<GetParticipantListResp>)
	export function unRefGetParticipantListResp(v:Ref<GetParticipantListResp>):GetParticipantListResp
	export function emptyMyAiVcMeetingRecapResult():MyAiVcMeetingRecapResult
	export function emptyRefMyAiVcMeetingRecapResult():Ref<MyAiVcMeetingRecapResult>
	export function refOfMyAiVcMeetingRecapResult(x:MyAiVcMeetingRecapResult,v:Ref<MyAiVcMeetingRecapResult>)
	export function unRefMyAiVcMeetingRecapResult(v:Ref<MyAiVcMeetingRecapResult>):MyAiVcMeetingRecapResult
	export function emptyApprovalConfig():ApprovalConfig
	export function emptyRefApprovalConfig():Ref<ApprovalConfig>
	export function refOfApprovalConfig(x:ApprovalConfig,v:Ref<ApprovalConfig>)
	export function unRefApprovalConfig(v:Ref<ApprovalConfig>):ApprovalConfig
	export function emptyCreateRoomReq():CreateRoomReq
	export function emptyRefCreateRoomReq():Ref<CreateRoomReq>
	export function refOfCreateRoomReq(x:CreateRoomReq,v:Ref<CreateRoomReq>)
	export function unRefCreateRoomReq(v:Ref<CreateRoomReq>):CreateRoomReq
	export function emptyGetMeetingListRespData():GetMeetingListRespData
	export function emptyRefGetMeetingListRespData():Ref<GetMeetingListRespData>
	export function refOfGetMeetingListRespData(x:GetMeetingListRespData,v:Ref<GetMeetingListRespData>)
	export function unRefGetMeetingListRespData(v:Ref<GetMeetingListRespData>):GetMeetingListRespData
	export function emptyGetMeetingResp():GetMeetingResp
	export function emptyRefGetMeetingResp():Ref<GetMeetingResp>
	export function refOfGetMeetingResp(x:GetMeetingResp,v:Ref<GetMeetingResp>)
	export function unRefGetMeetingResp(v:Ref<GetMeetingResp>):GetMeetingResp
	export function emptyGetReserveRespData():GetReserveRespData
	export function emptyRefGetReserveRespData():Ref<GetReserveRespData>
	export function refOfGetReserveRespData(x:GetReserveRespData,v:Ref<GetReserveRespData>)
	export function unRefGetReserveRespData(v:Ref<GetReserveRespData>):GetReserveRespData
	export function emptyGetResourceReservationListResp():GetResourceReservationListResp
	export function emptyRefGetResourceReservationListResp():Ref<GetResourceReservationListResp>
	export function refOfGetResourceReservationListResp(x:GetResourceReservationListResp,v:Ref<GetResourceReservationListResp>)
	export function unRefGetResourceReservationListResp(v:Ref<GetResourceReservationListResp>):GetResourceReservationListResp
	export function emptyGetMeetingRecordingResp():GetMeetingRecordingResp
	export function emptyRefGetMeetingRecordingResp():Ref<GetMeetingRecordingResp>
	export function refOfGetMeetingRecordingResp(x:GetMeetingRecordingResp,v:Ref<GetMeetingRecordingResp>)
	export function unRefGetMeetingRecordingResp(v:Ref<GetMeetingRecordingResp>):GetMeetingRecordingResp
	export function emptyInviteMeetingRespData():InviteMeetingRespData
	export function emptyRefInviteMeetingRespData():Ref<InviteMeetingRespData>
	export function refOfInviteMeetingRespData(x:InviteMeetingRespData,v:Ref<InviteMeetingRespData>)
	export function unRefInviteMeetingRespData(v:Ref<InviteMeetingRespData>):InviteMeetingRespData
	export function emptyMeetingListExportReq():MeetingListExportReq
	export function emptyRefMeetingListExportReq():Ref<MeetingListExportReq>
	export function refOfMeetingListExportReq(x:MeetingListExportReq,v:Ref<MeetingListExportReq>)
	export function unRefMeetingListExportReq(v:Ref<MeetingListExportReq>):MeetingListExportReq
	export function emptyOptions():Options
	export function emptyRefOptions():Ref<Options>
	export function refOfOptions(x:Options,v:Ref<Options>)
	export function unRefOptions(v:Ref<Options>):Options
	export function emptyP2MeetingJoinMeetingV1():P2MeetingJoinMeetingV1
	export function emptyRefP2MeetingJoinMeetingV1():Ref<P2MeetingJoinMeetingV1>
	export function refOfP2MeetingJoinMeetingV1(x:P2MeetingJoinMeetingV1,v:Ref<P2MeetingJoinMeetingV1>)
	export function unRefP2MeetingJoinMeetingV1(v:Ref<P2MeetingJoinMeetingV1>):P2MeetingJoinMeetingV1
	export function emptyStopMeetingRecordingResp():StopMeetingRecordingResp
	export function emptyRefStopMeetingRecordingResp():Ref<StopMeetingRecordingResp>
	export function refOfStopMeetingRecordingResp(x:StopMeetingRecordingResp,v:Ref<StopMeetingRecordingResp>)
	export function unRefStopMeetingRecordingResp(v:Ref<StopMeetingRecordingResp>):StopMeetingRecordingResp
	export function emptyInviteMeetingResp():InviteMeetingResp
	export function emptyRefInviteMeetingResp():Ref<InviteMeetingResp>
	export function refOfInviteMeetingResp(x:InviteMeetingResp,v:Ref<InviteMeetingResp>)
	export function unRefInviteMeetingResp(v:Ref<InviteMeetingResp>):InviteMeetingResp
	export function emptyListAlertResp():ListAlertResp
	export function emptyRefListAlertResp():Ref<ListAlertResp>
	export function refOfListAlertResp(x:ListAlertResp,v:Ref<ListAlertResp>)
	export function unRefListAlertResp(v:Ref<ListAlertResp>):ListAlertResp
	export function emptyMyAiSipPresent():MyAiSipPresent
	export function emptyRefMyAiSipPresent():Ref<MyAiSipPresent>
	export function refOfMyAiSipPresent(x:MyAiSipPresent,v:Ref<MyAiSipPresent>)
	export function unRefMyAiSipPresent(v:Ref<MyAiSipPresent>):MyAiSipPresent
	export function emptyGetDailyReportReq():GetDailyReportReq
	export function emptyRefGetDailyReportReq():Ref<GetDailyReportReq>
	export function refOfGetDailyReportReq(x:GetDailyReportReq,v:Ref<GetDailyReportReq>)
	export function unRefGetDailyReportReq(v:Ref<GetDailyReportReq>):GetDailyReportReq
	export function emptyParticipantListExportReqBody():ParticipantListExportReqBody
	export function emptyRefParticipantListExportReqBody():Ref<ParticipantListExportReqBody>
	export function refOfParticipantListExportReqBody(x:ParticipantListExportReqBody,v:Ref<ParticipantListExportReqBody>)
	export function unRefParticipantListExportReqBody(v:Ref<ParticipantListExportReqBody>):ParticipantListExportReqBody
	export function emptyPatchReserveConfigFormReq():PatchReserveConfigFormReq
	export function emptyRefPatchReserveConfigFormReq():Ref<PatchReserveConfigFormReq>
	export function refOfPatchReserveConfigFormReq(x:PatchReserveConfigFormReq,v:Ref<PatchReserveConfigFormReq>)
	export function unRefPatchReserveConfigFormReq(v:Ref<PatchReserveConfigFormReq>):PatchReserveConfigFormReq
	export function emptyQueryRoomConfigReq():QueryRoomConfigReq
	export function emptyRefQueryRoomConfigReq():Ref<QueryRoomConfigReq>
	export function refOfQueryRoomConfigReq(x:QueryRoomConfigReq,v:Ref<QueryRoomConfigReq>)
	export function unRefQueryRoomConfigReq(v:Ref<QueryRoomConfigReq>):QueryRoomConfigReq
	export function emptyReserveCorrectionCheckInfo():ReserveCorrectionCheckInfo
	export function emptyRefReserveCorrectionCheckInfo():Ref<ReserveCorrectionCheckInfo>
	export function refOfReserveCorrectionCheckInfo(x:ReserveCorrectionCheckInfo,v:Ref<ReserveCorrectionCheckInfo>)
	export function unRefReserveCorrectionCheckInfo(v:Ref<ReserveCorrectionCheckInfo>):ReserveCorrectionCheckInfo
	export function emptyEndMeetingResp():EndMeetingResp
	export function emptyRefEndMeetingResp():Ref<EndMeetingResp>
	export function refOfEndMeetingResp(x:EndMeetingResp,v:Ref<EndMeetingResp>)
	export function unRefEndMeetingResp(v:Ref<EndMeetingResp>):EndMeetingResp
	export function emptyGetResourceReservationListRespData():GetResourceReservationListRespData
	export function emptyRefGetResourceReservationListRespData():Ref<GetResourceReservationListRespData>
	export function refOfGetResourceReservationListRespData(x:GetResourceReservationListRespData,v:Ref<GetResourceReservationListRespData>)
	export function unRefGetResourceReservationListRespData(v:Ref<GetResourceReservationListRespData>):GetResourceReservationListRespData
	export function emptyListRoomLevelRespData():ListRoomLevelRespData
	export function emptyRefListRoomLevelRespData():Ref<ListRoomLevelRespData>
	export function refOfListRoomLevelRespData(x:ListRoomLevelRespData,v:Ref<ListRoomLevelRespData>)
	export function unRefListRoomLevelRespData(v:Ref<ListRoomLevelRespData>):ListRoomLevelRespData
	export function emptyMeetingListExportRespData():MeetingListExportRespData
	export function emptyRefMeetingListExportRespData():Ref<MeetingListExportRespData>
	export function refOfMeetingListExportRespData(x:MeetingListExportRespData,v:Ref<MeetingListExportRespData>)
	export function unRefMeetingListExportRespData(v:Ref<MeetingListExportRespData>):MeetingListExportRespData
	export function emptySetCheckboardAccessCodeRoomConfigReq():SetCheckboardAccessCodeRoomConfigReq
	export function emptyRefSetCheckboardAccessCodeRoomConfigReq():Ref<SetCheckboardAccessCodeRoomConfigReq>
	export function refOfSetCheckboardAccessCodeRoomConfigReq(x:SetCheckboardAccessCodeRoomConfigReq,v:Ref<SetCheckboardAccessCodeRoomConfigReq>)
	export function unRefSetCheckboardAccessCodeRoomConfigReq(v:Ref<SetCheckboardAccessCodeRoomConfigReq>):SetCheckboardAccessCodeRoomConfigReq
	export function emptyGetResourceReservationListReq():GetResourceReservationListReq
	export function emptyRefGetResourceReservationListReq():Ref<GetResourceReservationListReq>
	export function refOfGetResourceReservationListReq(x:GetResourceReservationListReq,v:Ref<GetResourceReservationListReq>)
	export function unRefGetResourceReservationListReq(v:Ref<GetResourceReservationListReq>):GetResourceReservationListReq
	export function emptyListByNoMeetingReq():ListByNoMeetingReq
	export function emptyRefListByNoMeetingReq():Ref<ListByNoMeetingReq>
	export function refOfListByNoMeetingReq(x:ListByNoMeetingReq,v:Ref<ListByNoMeetingReq>)
	export function unRefListByNoMeetingReq(v:Ref<ListByNoMeetingReq>):ListByNoMeetingReq
	export function emptyP2MeetingEndedV1():P2MeetingEndedV1
	export function emptyRefP2MeetingEndedV1():Ref<P2MeetingEndedV1>
	export function refOfP2MeetingEndedV1(x:P2MeetingEndedV1,v:Ref<P2MeetingEndedV1>)
	export function unRefP2MeetingEndedV1(v:Ref<P2MeetingEndedV1>):P2MeetingEndedV1
	export function emptyUpdateReserveRespData():UpdateReserveRespData
	export function emptyRefUpdateReserveRespData():Ref<UpdateReserveRespData>
	export function refOfUpdateReserveRespData(x:UpdateReserveRespData,v:Ref<UpdateReserveRespData>)
	export function unRefUpdateReserveRespData(v:Ref<UpdateReserveRespData>):UpdateReserveRespData
	export function emptyGetActiveMeetingReserveRespData():GetActiveMeetingReserveRespData
	export function emptyRefGetActiveMeetingReserveRespData():Ref<GetActiveMeetingReserveRespData>
	export function refOfGetActiveMeetingReserveRespData(x:GetActiveMeetingReserveRespData,v:Ref<GetActiveMeetingReserveRespData>)
	export function unRefGetActiveMeetingReserveRespData(v:Ref<GetActiveMeetingReserveRespData>):GetActiveMeetingReserveRespData
	export function emptyMyAiVcRoomScenarioContext():MyAiVcRoomScenarioContext
	export function emptyRefMyAiVcRoomScenarioContext():Ref<MyAiVcRoomScenarioContext>
	export function refOfMyAiVcRoomScenarioContext(x:MyAiVcRoomScenarioContext,v:Ref<MyAiVcRoomScenarioContext>)
	export function unRefMyAiVcRoomScenarioContext(v:Ref<MyAiVcRoomScenarioContext>):MyAiVcRoomScenarioContext
	export function emptyParticipantListExportReq():ParticipantListExportReq
	export function emptyRefParticipantListExportReq():Ref<ParticipantListExportReq>
	export function refOfParticipantListExportReq(x:ParticipantListExportReq,v:Ref<ParticipantListExportReq>)
	export function unRefParticipantListExportReq(v:Ref<ParticipantListExportReq>):ParticipantListExportReq
	export function emptyQualityAudio():QualityAudio
	export function emptyRefQualityAudio():Ref<QualityAudio>
	export function refOfQualityAudio(x:QualityAudio,v:Ref<QualityAudio>)
	export function unRefQualityAudio(v:Ref<QualityAudio>):QualityAudio
	export function emptyGetReserveConfigFormRespData():GetReserveConfigFormRespData
	export function emptyRefGetReserveConfigFormRespData():Ref<GetReserveConfigFormRespData>
	export function refOfGetReserveConfigFormRespData(x:GetReserveConfigFormRespData,v:Ref<GetReserveConfigFormRespData>)
	export function unRefGetReserveConfigFormRespData(v:Ref<GetReserveConfigFormRespData>):GetReserveConfigFormRespData
	export function emptyMgetRoomLevelResp():MgetRoomLevelResp
	export function emptyRefMgetRoomLevelResp():Ref<MgetRoomLevelResp>
	export function refOfMgetRoomLevelResp(x:MgetRoomLevelResp,v:Ref<MgetRoomLevelResp>)
	export function unRefMgetRoomLevelResp(v:Ref<MgetRoomLevelResp>):MgetRoomLevelResp
	export function emptyListRoomLevelIterator():ListRoomLevelIterator
	export function emptyRefListRoomLevelIterator():Ref<ListRoomLevelIterator>
	export function refOfListRoomLevelIterator(x:ListRoomLevelIterator,v:Ref<ListRoomLevelIterator>)
	export function unRefListRoomLevelIterator(v:Ref<ListRoomLevelIterator>):ListRoomLevelIterator
	export function emptyMyAiSipImageProperty():MyAiSipImageProperty
	export function emptyRefMyAiSipImageProperty():Ref<MyAiSipImageProperty>
	export function refOfMyAiSipImageProperty(x:MyAiSipImageProperty,v:Ref<MyAiSipImageProperty>)
	export function unRefMyAiSipImageProperty(v:Ref<MyAiSipImageProperty>):MyAiSipImageProperty
	export function emptyStopMeetingRecordingReq():StopMeetingRecordingReq
	export function emptyRefStopMeetingRecordingReq():Ref<StopMeetingRecordingReq>
	export function refOfStopMeetingRecordingReq(x:StopMeetingRecordingReq,v:Ref<StopMeetingRecordingReq>)
	export function unRefStopMeetingRecordingReq(v:Ref<StopMeetingRecordingReq>):StopMeetingRecordingReq
	export function emptyMeetingEventUser():MeetingEventUser
	export function emptyRefMeetingEventUser():Ref<MeetingEventUser>
	export function refOfMeetingEventUser(x:MeetingEventUser,v:Ref<MeetingEventUser>)
	export function unRefMeetingEventUser(v:Ref<MeetingEventUser>):MeetingEventUser
	export function emptyQualityNetwork():QualityNetwork
	export function emptyRefQualityNetwork():Ref<QualityNetwork>
	export function refOfQualityNetwork(x:QualityNetwork,v:Ref<QualityNetwork>)
	export function unRefQualityNetwork(v:Ref<QualityNetwork>):QualityNetwork
	export function emptyGetRoomLevelReq():GetRoomLevelReq
	export function emptyRefGetRoomLevelReq():Ref<GetRoomLevelReq>
	export function refOfGetRoomLevelReq(x:GetRoomLevelReq,v:Ref<GetRoomLevelReq>)
	export function unRefGetRoomLevelReq(v:Ref<GetRoomLevelReq>):GetRoomLevelReq
	export function emptyMyAiObjectContext():MyAiObjectContext
	export function emptyRefMyAiObjectContext():Ref<MyAiObjectContext>
	export function refOfMyAiObjectContext(x:MyAiObjectContext,v:Ref<MyAiObjectContext>)
	export function unRefMyAiObjectContext(v:Ref<MyAiObjectContext>):MyAiObjectContext
	export function emptyReserveScopeReserveConfigReq():ReserveScopeReserveConfigReq
	export function emptyRefReserveScopeReserveConfigReq():Ref<ReserveScopeReserveConfigReq>
	export function refOfReserveScopeReserveConfigReq(x:ReserveScopeReserveConfigReq,v:Ref<ReserveScopeReserveConfigReq>)
	export function unRefReserveScopeReserveConfigReq(v:Ref<ReserveScopeReserveConfigReq>):ReserveScopeReserveConfigReq
	export function emptyGetMeetingListIterator():GetMeetingListIterator
	export function emptyRefGetMeetingListIterator():Ref<GetMeetingListIterator>
	export function refOfGetMeetingListIterator(x:GetMeetingListIterator,v:Ref<GetMeetingListIterator>)
	export function unRefGetMeetingListIterator(v:Ref<GetMeetingListIterator>):GetMeetingListIterator
	export function emptyMyAiPluginContext():MyAiPluginContext
	export function emptyRefMyAiPluginContext():Ref<MyAiPluginContext>
	export function refOfMyAiPluginContext(x:MyAiPluginContext,v:Ref<MyAiPluginContext>)
	export function unRefMyAiPluginContext(v:Ref<MyAiPluginContext>):MyAiPluginContext
	export function emptyP2RoomUpdatedV1Data():P2RoomUpdatedV1Data
	export function emptyRefP2RoomUpdatedV1Data():Ref<P2RoomUpdatedV1Data>
	export function refOfP2RoomUpdatedV1Data(x:P2RoomUpdatedV1Data,v:Ref<P2RoomUpdatedV1Data>)
	export function unRefP2RoomUpdatedV1Data(v:Ref<P2RoomUpdatedV1Data>):P2RoomUpdatedV1Data
	export function emptyReservedRoom():ReservedRoom
	export function emptyRefReservedRoom():Ref<ReservedRoom>
	export function refOfReservedRoom(x:ReservedRoom,v:Ref<ReservedRoom>)
	export function unRefReservedRoom(v:Ref<ReservedRoom>):ReservedRoom
	export function emptyStartMeetingRecordingReqBody():StartMeetingRecordingReqBody
	export function emptyRefStartMeetingRecordingReqBody():Ref<StartMeetingRecordingReqBody>
	export function refOfStartMeetingRecordingReqBody(x:StartMeetingRecordingReqBody,v:Ref<StartMeetingRecordingReqBody>)
	export function unRefStartMeetingRecordingReqBody(v:Ref<StartMeetingRecordingReqBody>):StartMeetingRecordingReqBody
	export function emptyApprovalConfigEvent():ApprovalConfigEvent
	export function emptyRefApprovalConfigEvent():Ref<ApprovalConfigEvent>
	export function refOfApprovalConfigEvent(x:ApprovalConfigEvent,v:Ref<ApprovalConfigEvent>)
	export function unRefApprovalConfigEvent(v:Ref<ApprovalConfigEvent>):ApprovalConfigEvent
	export function emptyGetReserveConfigDisableInformReq():GetReserveConfigDisableInformReq
	export function emptyRefGetReserveConfigDisableInformReq():Ref<GetReserveConfigDisableInformReq>
	export function refOfGetReserveConfigDisableInformReq(x:GetReserveConfigDisableInformReq,v:Ref<GetReserveConfigDisableInformReq>)
	export function unRefGetReserveConfigDisableInformReq(v:Ref<GetReserveConfigDisableInformReq>):GetReserveConfigDisableInformReq
	export function emptyListRoomRespData():ListRoomRespData
	export function emptyRefListRoomRespData():Ref<ListRoomRespData>
	export function refOfListRoomRespData(x:ListRoomRespData,v:Ref<ListRoomRespData>)
	export function unRefListRoomRespData(v:Ref<ListRoomRespData>):ListRoomRespData
	export function emptyMyAiResponsePresent():MyAiResponsePresent
	export function emptyRefMyAiResponsePresent():Ref<MyAiResponsePresent>
	export function refOfMyAiResponsePresent(x:MyAiResponsePresent,v:Ref<MyAiResponsePresent>)
	export function unRefMyAiResponsePresent(v:Ref<MyAiResponsePresent>):MyAiResponsePresent
	export function emptyReportMeetingDaily():ReportMeetingDaily
	export function emptyRefReportMeetingDaily():Ref<ReportMeetingDaily>
	export function refOfReportMeetingDaily(x:ReportMeetingDaily,v:Ref<ReportMeetingDaily>)
	export function unRefReportMeetingDaily(v:Ref<ReportMeetingDaily>):ReportMeetingDaily
	export function emptyRoomStatus():RoomStatus
	export function emptyRefRoomStatus():Ref<RoomStatus>
	export function refOfRoomStatus(x:RoomStatus,v:Ref<RoomStatus>)
	export function unRefRoomStatus(v:Ref<RoomStatus>):RoomStatus
	export function emptyDownloadExportResp():DownloadExportResp
	export function emptyRefDownloadExportResp():Ref<DownloadExportResp>
	export function refOfDownloadExportResp(x:DownloadExportResp,v:Ref<DownloadExportResp>)
	export function unRefDownloadExportResp(v:Ref<DownloadExportResp>):DownloadExportResp
	export function emptyP2MeetingShareStartedV1():P2MeetingShareStartedV1
	export function emptyRefP2MeetingShareStartedV1():Ref<P2MeetingShareStartedV1>
	export function refOfP2MeetingShareStartedV1(x:P2MeetingShareStartedV1,v:Ref<P2MeetingShareStartedV1>)
	export function unRefP2MeetingShareStartedV1(v:Ref<P2MeetingShareStartedV1>):P2MeetingShareStartedV1
	export function emptyCreateRoomLevelRespData():CreateRoomLevelRespData
	export function emptyRefCreateRoomLevelRespData():Ref<CreateRoomLevelRespData>
	export function refOfCreateRoomLevelRespData(x:CreateRoomLevelRespData,v:Ref<CreateRoomLevelRespData>)
	export function unRefCreateRoomLevelRespData(v:Ref<CreateRoomLevelRespData>):CreateRoomLevelRespData
	export function emptyGetMeetingRespData():GetMeetingRespData
	export function emptyRefGetMeetingRespData():Ref<GetMeetingRespData>
	export function refOfGetMeetingRespData(x:GetMeetingRespData,v:Ref<GetMeetingRespData>)
	export function unRefGetMeetingRespData(v:Ref<GetMeetingRespData>):GetMeetingRespData
	export function emptyP2RoomUpdatedV1():P2RoomUpdatedV1
	export function emptyRefP2RoomUpdatedV1():Ref<P2RoomUpdatedV1>
	export function refOfP2RoomUpdatedV1(x:P2RoomUpdatedV1,v:Ref<P2RoomUpdatedV1>)
	export function unRefP2RoomUpdatedV1(v:Ref<P2RoomUpdatedV1>):P2RoomUpdatedV1
	export function emptyQualityCpuUsage():QualityCpuUsage
	export function emptyRefQualityCpuUsage():Ref<QualityCpuUsage>
	export function refOfQualityCpuUsage(x:QualityCpuUsage,v:Ref<QualityCpuUsage>)
	export function unRefQualityCpuUsage(v:Ref<QualityCpuUsage>):QualityCpuUsage
	export function emptyReserveAdminConfig():ReserveAdminConfig
	export function emptyRefReserveAdminConfig():Ref<ReserveAdminConfig>
	export function refOfReserveAdminConfig(x:ReserveAdminConfig,v:Ref<ReserveAdminConfig>)
	export function unRefReserveAdminConfig(v:Ref<ReserveAdminConfig>):ReserveAdminConfig
	export function emptySetHostMeetingRespData():SetHostMeetingRespData
	export function emptyRefSetHostMeetingRespData():Ref<SetHostMeetingRespData>
	export function refOfSetHostMeetingRespData(x:SetHostMeetingRespData,v:Ref<SetHostMeetingRespData>)
	export function unRefSetHostMeetingRespData(v:Ref<SetHostMeetingRespData>):SetHostMeetingRespData
	export function emptyDeleteRoomResp():DeleteRoomResp
	export function emptyRefDeleteRoomResp():Ref<DeleteRoomResp>
	export function refOfDeleteRoomResp(x:DeleteRoomResp,v:Ref<DeleteRoomResp>)
	export function unRefDeleteRoomResp(v:Ref<DeleteRoomResp>):DeleteRoomResp
	export function emptyMaterialDeleteResult():MaterialDeleteResult
	export function emptyRefMaterialDeleteResult():Ref<MaterialDeleteResult>
	export function refOfMaterialDeleteResult(x:MaterialDeleteResult,v:Ref<MaterialDeleteResult>)
	export function unRefMaterialDeleteResult(v:Ref<MaterialDeleteResult>):MaterialDeleteResult
	export function emptyCreateRoomLevelResp():CreateRoomLevelResp
	export function emptyRefCreateRoomLevelResp():Ref<CreateRoomLevelResp>
	export function refOfCreateRoomLevelResp(x:CreateRoomLevelResp,v:Ref<CreateRoomLevelResp>)
	export function unRefCreateRoomLevelResp(v:Ref<CreateRoomLevelResp>):CreateRoomLevelResp
	export function emptyGetMeetingRecordingReq():GetMeetingRecordingReq
	export function emptyRefGetMeetingRecordingReq():Ref<GetMeetingRecordingReq>
	export function refOfGetMeetingRecordingReq(x:GetMeetingRecordingReq,v:Ref<GetMeetingRecordingReq>)
	export function unRefGetMeetingRecordingReq(v:Ref<GetMeetingRecordingReq>):GetMeetingRecordingReq
	export function emptyReserveCallee():ReserveCallee
	export function emptyRefReserveCallee():Ref<ReserveCallee>
	export function refOfReserveCallee(x:ReserveCallee,v:Ref<ReserveCallee>)
	export function unRefReserveCallee(v:Ref<ReserveCallee>):ReserveCallee
	export function emptyMeetingWebinarSetting():MeetingWebinarSetting
	export function emptyRefMeetingWebinarSetting():Ref<MeetingWebinarSetting>
	export function refOfMeetingWebinarSetting(x:MeetingWebinarSetting,v:Ref<MeetingWebinarSetting>)
	export function unRefMeetingWebinarSetting(v:Ref<MeetingWebinarSetting>):MeetingWebinarSetting
	export function emptyPatchReserveConfigDisableInformReq():PatchReserveConfigDisableInformReq
	export function emptyRefPatchReserveConfigDisableInformReq():Ref<PatchReserveConfigDisableInformReq>
	export function refOfPatchReserveConfigDisableInformReq(x:PatchReserveConfigDisableInformReq,v:Ref<PatchReserveConfigDisableInformReq>)
	export function unRefPatchReserveConfigDisableInformReq(v:Ref<PatchReserveConfigDisableInformReq>):PatchReserveConfigDisableInformReq
	export function emptyMeetingListExportReqBody():MeetingListExportReqBody
	export function emptyRefMeetingListExportReqBody():Ref<MeetingListExportReqBody>
	export function refOfMeetingListExportReqBody(x:MeetingListExportReqBody,v:Ref<MeetingListExportReqBody>)
	export function unRefMeetingListExportReqBody(v:Ref<MeetingListExportReqBody>):MeetingListExportReqBody
	export function emptyMyAiVcMeetingSuggestQuestionResult():MyAiVcMeetingSuggestQuestionResult
	export function emptyRefMyAiVcMeetingSuggestQuestionResult():Ref<MyAiVcMeetingSuggestQuestionResult>
	export function refOfMyAiVcMeetingSuggestQuestionResult(x:MyAiVcMeetingSuggestQuestionResult,v:Ref<MyAiVcMeetingSuggestQuestionResult>)
	export function unRefMyAiVcMeetingSuggestQuestionResult(v:Ref<MyAiVcMeetingSuggestQuestionResult>):MyAiVcMeetingSuggestQuestionResult
	export function emptyQueryRoomConfigResp():QueryRoomConfigResp
	export function emptyRefQueryRoomConfigResp():Ref<QueryRoomConfigResp>
	export function refOfQueryRoomConfigResp(x:QueryRoomConfigResp,v:Ref<QueryRoomConfigResp>)
	export function unRefQueryRoomConfigResp(v:Ref<QueryRoomConfigResp>):QueryRoomConfigResp
	export function emptyKickoutMeetingReq():KickoutMeetingReq
	export function emptyRefKickoutMeetingReq():Ref<KickoutMeetingReq>
	export function refOfKickoutMeetingReq(x:KickoutMeetingReq,v:Ref<KickoutMeetingReq>)
	export function unRefKickoutMeetingReq(v:Ref<KickoutMeetingReq>):KickoutMeetingReq
	export function emptyReserveScopeConfig():ReserveScopeConfig
	export function emptyRefReserveScopeConfig():Ref<ReserveScopeConfig>
	export function refOfReserveScopeConfig(x:ReserveScopeConfig,v:Ref<ReserveScopeConfig>)
	export function unRefReserveScopeConfig(v:Ref<ReserveScopeConfig>):ReserveScopeConfig
	export function emptyMeetingAbility():MeetingAbility
	export function emptyRefMeetingAbility():Ref<MeetingAbility>
	export function refOfMeetingAbility(x:MeetingAbility,v:Ref<MeetingAbility>)
	export function unRefMeetingAbility(v:Ref<MeetingAbility>):MeetingAbility
	export function emptyP2RoomLevelCreatedV1():P2RoomLevelCreatedV1
	export function emptyRefP2RoomLevelCreatedV1():Ref<P2RoomLevelCreatedV1>
	export function refOfP2RoomLevelCreatedV1(x:P2RoomLevelCreatedV1,v:Ref<P2RoomLevelCreatedV1>)
	export function unRefP2RoomLevelCreatedV1(v:Ref<P2RoomLevelCreatedV1>):P2RoomLevelCreatedV1
	export function emptyGetActiveMeetingReserveResp():GetActiveMeetingReserveResp
	export function emptyRefGetActiveMeetingReserveResp():Ref<GetActiveMeetingReserveResp>
	export function refOfGetActiveMeetingReserveResp(x:GetActiveMeetingReserveResp,v:Ref<GetActiveMeetingReserveResp>)
	export function unRefGetActiveMeetingReserveResp(v:Ref<GetActiveMeetingReserveResp>):GetActiveMeetingReserveResp
	export function emptyMeetingSecuritySetting():MeetingSecuritySetting
	export function emptyRefMeetingSecuritySetting():Ref<MeetingSecuritySetting>
	export function refOfMeetingSecuritySetting(x:MeetingSecuritySetting,v:Ref<MeetingSecuritySetting>)
	export function unRefMeetingSecuritySetting(v:Ref<MeetingSecuritySetting>):MeetingSecuritySetting
	export function emptyMeetingUser():MeetingUser
	export function emptyRefMeetingUser():Ref<MeetingUser>
	export function refOfMeetingUser(x:MeetingUser,v:Ref<MeetingUser>)
	export function unRefMeetingUser(v:Ref<MeetingUser>):MeetingUser
	export function emptyMyAiAvPluginCardStatus():MyAiAvPluginCardStatus
	export function emptyRefMyAiAvPluginCardStatus():Ref<MyAiAvPluginCardStatus>
	export function refOfMyAiAvPluginCardStatus(x:MyAiAvPluginCardStatus,v:Ref<MyAiAvPluginCardStatus>)
	export function unRefMyAiAvPluginCardStatus(v:Ref<MyAiAvPluginCardStatus>):MyAiAvPluginCardStatus
	export function emptyRoomDigitalSignageMaterial():RoomDigitalSignageMaterial
	export function emptyRefRoomDigitalSignageMaterial():Ref<RoomDigitalSignageMaterial>
	export function refOfRoomDigitalSignageMaterial(x:RoomDigitalSignageMaterial,v:Ref<RoomDigitalSignageMaterial>)
	export function unRefRoomDigitalSignageMaterial(v:Ref<RoomDigitalSignageMaterial>):RoomDigitalSignageMaterial
	export function emptyReserve():Reserve
	export function emptyRefReserve():Ref<Reserve>
	export function refOfReserve(x:Reserve,v:Ref<Reserve>)
	export function unRefReserve(v:Ref<Reserve>):Reserve
	export function emptySearchRoomRespData():SearchRoomRespData
	export function emptyRefSearchRoomRespData():Ref<SearchRoomRespData>
	export function refOfSearchRoomRespData(x:SearchRoomRespData,v:Ref<SearchRoomRespData>)
	export function unRefSearchRoomRespData(v:Ref<SearchRoomRespData>):SearchRoomRespData
	export function emptyEndMeetingReq():EndMeetingReq
	export function emptyRefEndMeetingReq():Ref<EndMeetingReq>
	export function refOfEndMeetingReq(x:EndMeetingReq,v:Ref<EndMeetingReq>)
	export function unRefEndMeetingReq(v:Ref<EndMeetingReq>):EndMeetingReq
	export function emptyParticipantQuality():ParticipantQuality
	export function emptyRefParticipantQuality():Ref<ParticipantQuality>
	export function refOfParticipantQuality(x:ParticipantQuality,v:Ref<ParticipantQuality>)
	export function unRefParticipantQuality(v:Ref<ParticipantQuality>):ParticipantQuality
	export function emptyAlert():Alert
	export function emptyRefAlert():Ref<Alert>
	export function refOfAlert(x:Alert,v:Ref<Alert>)
	export function unRefAlert(v:Ref<Alert>):Alert
	export function emptyMyAiAvPluginCardVariables():MyAiAvPluginCardVariables
	export function emptyRefMyAiAvPluginCardVariables():Ref<MyAiAvPluginCardVariables>
	export function refOfMyAiAvPluginCardVariables(x:MyAiAvPluginCardVariables,v:Ref<MyAiAvPluginCardVariables>)
	export function unRefMyAiAvPluginCardVariables(v:Ref<MyAiAvPluginCardVariables>):MyAiAvPluginCardVariables
	export function emptyP2MeetingRecordingStartedV1Data():P2MeetingRecordingStartedV1Data
	export function emptyRefP2MeetingRecordingStartedV1Data():Ref<P2MeetingRecordingStartedV1Data>
	export function refOfP2MeetingRecordingStartedV1Data(x:P2MeetingRecordingStartedV1Data,v:Ref<P2MeetingRecordingStartedV1Data>)
	export function unRefP2MeetingRecordingStartedV1Data(v:Ref<P2MeetingRecordingStartedV1Data>):P2MeetingRecordingStartedV1Data
	export function emptyInviteMeetingReqBody():InviteMeetingReqBody
	export function emptyRefInviteMeetingReqBody():Ref<InviteMeetingReqBody>
	export function refOfInviteMeetingReqBody(x:InviteMeetingReqBody,v:Ref<InviteMeetingReqBody>)
	export function unRefInviteMeetingReqBody(v:Ref<InviteMeetingReqBody>):InviteMeetingReqBody
	export function emptyMyAiAvPluginScenarioContext():MyAiAvPluginScenarioContext
	export function emptyRefMyAiAvPluginScenarioContext():Ref<MyAiAvPluginScenarioContext>
	export function refOfMyAiAvPluginScenarioContext(x:MyAiAvPluginScenarioContext,v:Ref<MyAiAvPluginScenarioContext>)
	export function unRefMyAiAvPluginScenarioContext(v:Ref<MyAiAvPluginScenarioContext>):MyAiAvPluginScenarioContext
	export function emptyP2MeetingLeaveMeetingV1():P2MeetingLeaveMeetingV1
	export function emptyRefP2MeetingLeaveMeetingV1():Ref<P2MeetingLeaveMeetingV1>
	export function refOfP2MeetingLeaveMeetingV1(x:P2MeetingLeaveMeetingV1,v:Ref<P2MeetingLeaveMeetingV1>)
	export function unRefP2MeetingLeaveMeetingV1(v:Ref<P2MeetingLeaveMeetingV1>):P2MeetingLeaveMeetingV1
	export function emptyP2MeetingRecordingEndedV1Data():P2MeetingRecordingEndedV1Data
	export function emptyRefP2MeetingRecordingEndedV1Data():Ref<P2MeetingRecordingEndedV1Data>
	export function refOfP2MeetingRecordingEndedV1Data(x:P2MeetingRecordingEndedV1Data,v:Ref<P2MeetingRecordingEndedV1Data>)
	export function unRefP2MeetingRecordingEndedV1Data(v:Ref<P2MeetingRecordingEndedV1Data>):P2MeetingRecordingEndedV1Data
	export function emptyPatchRoomReq():PatchRoomReq
	export function emptyRefPatchRoomReq():Ref<PatchRoomReq>
	export function refOfPatchRoomReq(x:PatchRoomReq,v:Ref<PatchRoomReq>)
	export function unRefPatchRoomReq(v:Ref<PatchRoomReq>):PatchRoomReq
	export function emptyGetActiveMeetingReserveReq():GetActiveMeetingReserveReq
	export function emptyRefGetActiveMeetingReserveReq():Ref<GetActiveMeetingReserveReq>
	export function refOfGetActiveMeetingReserveReq(x:GetActiveMeetingReserveReq,v:Ref<GetActiveMeetingReserveReq>)
	export function unRefGetActiveMeetingReserveReq(v:Ref<GetActiveMeetingReserveReq>):GetActiveMeetingReserveReq
	export function emptyKickoutMeetingReqBody():KickoutMeetingReqBody
	export function emptyRefKickoutMeetingReqBody():Ref<KickoutMeetingReqBody>
	export function refOfKickoutMeetingReqBody(x:KickoutMeetingReqBody,v:Ref<KickoutMeetingReqBody>)
	export function unRefKickoutMeetingReqBody(v:Ref<KickoutMeetingReqBody>):KickoutMeetingReqBody
	export function emptyPatchReserveConfigDisableInformReqBody():PatchReserveConfigDisableInformReqBody
	export function emptyRefPatchReserveConfigDisableInformReqBody():Ref<PatchReserveConfigDisableInformReqBody>
	export function refOfPatchReserveConfigDisableInformReqBody(x:PatchReserveConfigDisableInformReqBody,v:Ref<PatchReserveConfigDisableInformReqBody>)
	export function unRefPatchReserveConfigDisableInformReqBody(v:Ref<PatchReserveConfigDisableInformReqBody>):PatchReserveConfigDisableInformReqBody
	export function emptySearchRoomLevelRespData():SearchRoomLevelRespData
	export function emptyRefSearchRoomLevelRespData():Ref<SearchRoomLevelRespData>
	export function refOfSearchRoomLevelRespData(x:SearchRoomLevelRespData,v:Ref<SearchRoomLevelRespData>)
	export function unRefSearchRoomLevelRespData(v:Ref<SearchRoomLevelRespData>):SearchRoomLevelRespData
	export function emptyContact():Contact
	export function emptyRefContact():Ref<Contact>
	export function refOfContact(x:Contact,v:Ref<Contact>)
	export function unRefContact(v:Ref<Contact>):Contact
	export function emptySetHostMeetingReq():SetHostMeetingReq
	export function emptyRefSetHostMeetingReq():Ref<SetHostMeetingReq>
	export function refOfSetHostMeetingReq(x:SetHostMeetingReq,v:Ref<SetHostMeetingReq>)
	export function unRefSetHostMeetingReq(v:Ref<SetHostMeetingReq>):SetHostMeetingReq
	export function emptyGetReserveConfigAdminResp():GetReserveConfigAdminResp
	export function emptyRefGetReserveConfigAdminResp():Ref<GetReserveConfigAdminResp>
	export function refOfGetReserveConfigAdminResp(x:GetReserveConfigAdminResp,v:Ref<GetReserveConfigAdminResp>)
	export function unRefGetReserveConfigAdminResp(v:Ref<GetReserveConfigAdminResp>):GetReserveConfigAdminResp
	export function emptyMeetingRecording():MeetingRecording
	export function emptyRefMeetingRecording():Ref<MeetingRecording>
	export function refOfMeetingRecording(x:MeetingRecording,v:Ref<MeetingRecording>)
	export function unRefMeetingRecording(v:Ref<MeetingRecording>):MeetingRecording
	export function emptyPatchReserveConfigFormResp():PatchReserveConfigFormResp
	export function emptyRefPatchReserveConfigFormResp():Ref<PatchReserveConfigFormResp>
	export function refOfPatchReserveConfigFormResp(x:PatchReserveConfigFormResp,v:Ref<PatchReserveConfigFormResp>)
	export function unRefPatchReserveConfigFormResp(v:Ref<PatchReserveConfigFormResp>):PatchReserveConfigFormResp
	export function emptyRoomDigitalSignage():RoomDigitalSignage
	export function emptyRefRoomDigitalSignage():Ref<RoomDigitalSignage>
	export function refOfRoomDigitalSignage(x:RoomDigitalSignage,v:Ref<RoomDigitalSignage>)
	export function unRefRoomDigitalSignage(v:Ref<RoomDigitalSignage>):RoomDigitalSignage
	export function emptySetRoomAccessCodeRoomConfigReqBody():SetRoomAccessCodeRoomConfigReqBody
	export function emptyRefSetRoomAccessCodeRoomConfigReqBody():Ref<SetRoomAccessCodeRoomConfigReqBody>
	export function refOfSetRoomAccessCodeRoomConfigReqBody(x:SetRoomAccessCodeRoomConfigReqBody,v:Ref<SetRoomAccessCodeRoomConfigReqBody>)
	export function unRefSetRoomAccessCodeRoomConfigReqBody(v:Ref<SetRoomAccessCodeRoomConfigReqBody>):SetRoomAccessCodeRoomConfigReqBody
	export function emptyApplyReserveReq():ApplyReserveReq
	export function emptyRefApplyReserveReq():Ref<ApplyReserveReq>
	export function refOfApplyReserveReq(x:ApplyReserveReq,v:Ref<ApplyReserveReq>)
	export function unRefApplyReserveReq(v:Ref<ApplyReserveReq>):ApplyReserveReq
	export function emptySetRoomAccessCodeRoomConfigRespData():SetRoomAccessCodeRoomConfigRespData
	export function emptyRefSetRoomAccessCodeRoomConfigRespData():Ref<SetRoomAccessCodeRoomConfigRespData>
	export function refOfSetRoomAccessCodeRoomConfigRespData(x:SetRoomAccessCodeRoomConfigRespData,v:Ref<SetRoomAccessCodeRoomConfigRespData>)
	export function unRefSetRoomAccessCodeRoomConfigRespData(v:Ref<SetRoomAccessCodeRoomConfigRespData>):SetRoomAccessCodeRoomConfigRespData
	export function emptyMeetingParticipantResult():MeetingParticipantResult
	export function emptyRefMeetingParticipantResult():Ref<MeetingParticipantResult>
	export function refOfMeetingParticipantResult(x:MeetingParticipantResult,v:Ref<MeetingParticipantResult>)
	export function unRefMeetingParticipantResult(v:Ref<MeetingParticipantResult>):MeetingParticipantResult
	export function emptySubscribeUser():SubscribeUser
	export function emptyRefSubscribeUser():Ref<SubscribeUser>
	export function refOfSubscribeUser(x:SubscribeUser,v:Ref<SubscribeUser>)
	export function unRefSubscribeUser(v:Ref<SubscribeUser>):SubscribeUser
	export function emptyGetParticipantQualityListReq():GetParticipantQualityListReq
	export function emptyRefGetParticipantQualityListReq():Ref<GetParticipantQualityListReq>
	export function refOfGetParticipantQualityListReq(x:GetParticipantQualityListReq,v:Ref<GetParticipantQualityListReq>)
	export function unRefGetParticipantQualityListReq(v:Ref<GetParticipantQualityListReq>):GetParticipantQualityListReq
	export function emptyMyAiVcMeetingScenarioContext():MyAiVcMeetingScenarioContext
	export function emptyRefMyAiVcMeetingScenarioContext():Ref<MyAiVcMeetingScenarioContext>
	export function refOfMyAiVcMeetingScenarioContext(x:MyAiVcMeetingScenarioContext,v:Ref<MyAiVcMeetingScenarioContext>)
	export function unRefMyAiVcMeetingScenarioContext(v:Ref<MyAiVcMeetingScenarioContext>):MyAiVcMeetingScenarioContext
	export function emptyPatchReserveConfigResp():PatchReserveConfigResp
	export function emptyRefPatchReserveConfigResp():Ref<PatchReserveConfigResp>
	export function refOfPatchReserveConfigResp(x:PatchReserveConfigResp,v:Ref<PatchReserveConfigResp>)
	export function unRefPatchReserveConfigResp(v:Ref<PatchReserveConfigResp>):PatchReserveConfigResp
	export function emptyGetReserveConfigFormReq():GetReserveConfigFormReq
	export function emptyRefGetReserveConfigFormReq():Ref<GetReserveConfigFormReq>
	export function refOfGetReserveConfigFormReq(x:GetReserveConfigFormReq,v:Ref<GetReserveConfigFormReq>)
	export function unRefGetReserveConfigFormReq(v:Ref<GetReserveConfigFormReq>):GetReserveConfigFormReq
	export function emptyP2MeetingRecordingReadyV1():P2MeetingRecordingReadyV1
	export function emptyRefP2MeetingRecordingReadyV1():Ref<P2MeetingRecordingReadyV1>
	export function refOfP2MeetingRecordingReadyV1(x:P2MeetingRecordingReadyV1,v:Ref<P2MeetingRecordingReadyV1>)
	export function unRefP2MeetingRecordingReadyV1(v:Ref<P2MeetingRecordingReadyV1>):P2MeetingRecordingReadyV1
	export function emptyP2RoomCreatedV1Data():P2RoomCreatedV1Data
	export function emptyRefP2RoomCreatedV1Data():Ref<P2RoomCreatedV1Data>
	export function refOfP2RoomCreatedV1Data(x:P2RoomCreatedV1Data,v:Ref<P2RoomCreatedV1Data>)
	export function unRefP2RoomCreatedV1Data(v:Ref<P2RoomCreatedV1Data>):P2RoomCreatedV1Data
	export function emptyP2RoomDeletedV1():P2RoomDeletedV1
	export function emptyRefP2RoomDeletedV1():Ref<P2RoomDeletedV1>
	export function refOfP2RoomDeletedV1(x:P2RoomDeletedV1,v:Ref<P2RoomDeletedV1>)
	export function unRefP2RoomDeletedV1(v:Ref<P2RoomDeletedV1>):P2RoomDeletedV1
	export function emptySetHostMeetingResp():SetHostMeetingResp
	export function emptyRefSetHostMeetingResp():Ref<SetHostMeetingResp>
	export function refOfSetHostMeetingResp(x:SetHostMeetingResp,v:Ref<SetHostMeetingResp>)
	export function unRefSetHostMeetingResp(v:Ref<SetHostMeetingResp>):SetHostMeetingResp
	export function emptyMeetingParticipant():MeetingParticipant
	export function emptyRefMeetingParticipant():Ref<MeetingParticipant>
	export function refOfMeetingParticipant(x:MeetingParticipant,v:Ref<MeetingParticipant>)
	export function unRefMeetingParticipant(v:Ref<MeetingParticipant>):MeetingParticipant
	export function emptyP2MeetingJoinMeetingV1Data():P2MeetingJoinMeetingV1Data
	export function emptyRefP2MeetingJoinMeetingV1Data():Ref<P2MeetingJoinMeetingV1Data>
	export function refOfP2MeetingJoinMeetingV1Data(x:P2MeetingJoinMeetingV1Data,v:Ref<P2MeetingJoinMeetingV1Data>)
	export function unRefP2MeetingJoinMeetingV1Data(v:Ref<P2MeetingJoinMeetingV1Data>):P2MeetingJoinMeetingV1Data
	export function emptyParticipant():Participant
	export function emptyRefParticipant():Ref<Participant>
	export function refOfParticipant(x:Participant,v:Ref<Participant>)
	export function unRefParticipant(v:Ref<Participant>):Participant
	export function emptyReserveCallSetting():ReserveCallSetting
	export function emptyRefReserveCallSetting():Ref<ReserveCallSetting>
	export function refOfReserveCallSetting(x:ReserveCallSetting,v:Ref<ReserveCallSetting>)
	export function unRefReserveCallSetting(v:Ref<ReserveCallSetting>):ReserveCallSetting
	export function emptySetRoomAccessCodeRoomConfigReq():SetRoomAccessCodeRoomConfigReq
	export function emptyRefSetRoomAccessCodeRoomConfigReq():Ref<SetRoomAccessCodeRoomConfigReq>
	export function refOfSetRoomAccessCodeRoomConfigReq(x:SetRoomAccessCodeRoomConfigReq,v:Ref<SetRoomAccessCodeRoomConfigReq>)
	export function unRefSetRoomAccessCodeRoomConfigReq(v:Ref<SetRoomAccessCodeRoomConfigReq>):SetRoomAccessCodeRoomConfigReq
	export function emptySetRoomConfigReq():SetRoomConfigReq
	export function emptyRefSetRoomConfigReq():Ref<SetRoomConfigReq>
	export function refOfSetRoomConfigReq(x:SetRoomConfigReq,v:Ref<SetRoomConfigReq>)
	export function unRefSetRoomConfigReq(v:Ref<SetRoomConfigReq>):SetRoomConfigReq
	export function emptyListByNoMeetingRespData():ListByNoMeetingRespData
	export function emptyRefListByNoMeetingRespData():Ref<ListByNoMeetingRespData>
	export function refOfListByNoMeetingRespData(x:ListByNoMeetingRespData,v:Ref<ListByNoMeetingRespData>)
	export function unRefListByNoMeetingRespData(v:Ref<ListByNoMeetingRespData>):ListByNoMeetingRespData
	export function emptyP2MeetingAllMeetingEndedV1Data():P2MeetingAllMeetingEndedV1Data
	export function emptyRefP2MeetingAllMeetingEndedV1Data():Ref<P2MeetingAllMeetingEndedV1Data>
	export function refOfP2MeetingAllMeetingEndedV1Data(x:P2MeetingAllMeetingEndedV1Data,v:Ref<P2MeetingAllMeetingEndedV1Data>)
	export function unRefP2MeetingAllMeetingEndedV1Data(v:Ref<P2MeetingAllMeetingEndedV1Data>):P2MeetingAllMeetingEndedV1Data
	export function emptySetCheckboardAccessCodeRoomConfigReqBody():SetCheckboardAccessCodeRoomConfigReqBody
	export function emptyRefSetCheckboardAccessCodeRoomConfigReqBody():Ref<SetCheckboardAccessCodeRoomConfigReqBody>
	export function refOfSetCheckboardAccessCodeRoomConfigReqBody(x:SetCheckboardAccessCodeRoomConfigReqBody,v:Ref<SetCheckboardAccessCodeRoomConfigReqBody>)
	export function unRefSetCheckboardAccessCodeRoomConfigReqBody(v:Ref<SetCheckboardAccessCodeRoomConfigReqBody>):SetCheckboardAccessCodeRoomConfigReqBody
	export function emptyMyAiCallbackAction():MyAiCallbackAction
	export function emptyRefMyAiCallbackAction():Ref<MyAiCallbackAction>
	export function refOfMyAiCallbackAction(x:MyAiCallbackAction,v:Ref<MyAiCallbackAction>)
	export function unRefMyAiCallbackAction(v:Ref<MyAiCallbackAction>):MyAiCallbackAction
	export function emptyP2MeetingShareEndedV1():P2MeetingShareEndedV1
	export function emptyRefP2MeetingShareEndedV1():Ref<P2MeetingShareEndedV1>
	export function refOfP2MeetingShareEndedV1(x:P2MeetingShareEndedV1,v:Ref<P2MeetingShareEndedV1>)
	export function unRefP2MeetingShareEndedV1(v:Ref<P2MeetingShareEndedV1>):P2MeetingShareEndedV1
	export function emptyReserveScopeReserveConfigRespData():ReserveScopeReserveConfigRespData
	export function emptyRefReserveScopeReserveConfigRespData():Ref<ReserveScopeReserveConfigRespData>
	export function refOfReserveScopeReserveConfigRespData(x:ReserveScopeReserveConfigRespData,v:Ref<ReserveScopeReserveConfigRespData>)
	export function unRefReserveScopeReserveConfigRespData(v:Ref<ReserveScopeReserveConfigRespData>):ReserveScopeReserveConfigRespData
	export function emptyRoomMeetingReservation():RoomMeetingReservation
	export function emptyRefRoomMeetingReservation():Ref<RoomMeetingReservation>
	export function refOfRoomMeetingReservation(x:RoomMeetingReservation,v:Ref<RoomMeetingReservation>)
	export function unRefRoomMeetingReservation(v:Ref<RoomMeetingReservation>):RoomMeetingReservation
	export function emptyGetParticipantQualityListRespData():GetParticipantQualityListRespData
	export function emptyRefGetParticipantQualityListRespData():Ref<GetParticipantQualityListRespData>
	export function refOfGetParticipantQualityListRespData(x:GetParticipantQualityListRespData,v:Ref<GetParticipantQualityListRespData>)
	export function unRefGetParticipantQualityListRespData(v:Ref<GetParticipantQualityListRespData>):GetParticipantQualityListRespData
	export function emptyGetRoomLevelResp():GetRoomLevelResp
	export function emptyRefGetRoomLevelResp():Ref<GetRoomLevelResp>
	export function refOfGetRoomLevelResp(x:GetRoomLevelResp,v:Ref<GetRoomLevelResp>)
	export function unRefGetRoomLevelResp(v:Ref<GetRoomLevelResp>):GetRoomLevelResp
	export function emptyP2RoomLevelUpdatedV1():P2RoomLevelUpdatedV1
	export function emptyRefP2RoomLevelUpdatedV1():Ref<P2RoomLevelUpdatedV1>
	export function refOfP2RoomLevelUpdatedV1(x:P2RoomLevelUpdatedV1,v:Ref<P2RoomLevelUpdatedV1>)
	export function unRefP2RoomLevelUpdatedV1(v:Ref<P2RoomLevelUpdatedV1>):P2RoomLevelUpdatedV1
	export function emptySearchRoomLevelResp():SearchRoomLevelResp
	export function emptyRefSearchRoomLevelResp():Ref<SearchRoomLevelResp>
	export function refOfSearchRoomLevelResp(x:SearchRoomLevelResp,v:Ref<SearchRoomLevelResp>)
	export function unRefSearchRoomLevelResp(v:Ref<SearchRoomLevelResp>):SearchRoomLevelResp
	export function emptyGetExportResp():GetExportResp
	export function emptyRefGetExportResp():Ref<GetExportResp>
	export function refOfGetExportResp(x:GetExportResp,v:Ref<GetExportResp>)
	export function unRefGetExportResp(v:Ref<GetExportResp>):GetExportResp
	export function emptyGetRoomResp():GetRoomResp
	export function emptyRefGetRoomResp():Ref<GetRoomResp>
	export function refOfGetRoomResp(x:GetRoomResp,v:Ref<GetRoomResp>)
	export function unRefGetRoomResp(v:Ref<GetRoomResp>):GetRoomResp
	export function emptyGetParticipantListReq():GetParticipantListReq
	export function emptyRefGetParticipantListReq():Ref<GetParticipantListReq>
	export function refOfGetParticipantListReq(x:GetParticipantListReq,v:Ref<GetParticipantListReq>)
	export function unRefGetParticipantListReq(v:Ref<GetParticipantListReq>):GetParticipantListReq
	export function emptyGetRoomRespData():GetRoomRespData
	export function emptyRefGetRoomRespData():Ref<GetRoomRespData>
	export function refOfGetRoomRespData(x:GetRoomRespData,v:Ref<GetRoomRespData>)
	export function unRefGetRoomRespData(v:Ref<GetRoomRespData>):GetRoomRespData
	export function emptyListAlertReq():ListAlertReq
	export function emptyRefListAlertReq():Ref<ListAlertReq>
	export function refOfListAlertReq(x:ListAlertReq,v:Ref<ListAlertReq>)
	export function unRefListAlertReq(v:Ref<ListAlertReq>):ListAlertReq
	export function emptyReservePermissionChecker():ReservePermissionChecker
	export function emptyRefReservePermissionChecker():Ref<ReservePermissionChecker>
	export function refOfReservePermissionChecker(x:ReservePermissionChecker,v:Ref<ReservePermissionChecker>)
	export function unRefReservePermissionChecker(v:Ref<ReservePermissionChecker>):ReservePermissionChecker
	export function emptyMyAiAvPluginContextSystemInfo():MyAiAvPluginContextSystemInfo
	export function emptyRefMyAiAvPluginContextSystemInfo():Ref<MyAiAvPluginContextSystemInfo>
	export function refOfMyAiAvPluginContextSystemInfo(x:MyAiAvPluginContextSystemInfo,v:Ref<MyAiAvPluginContextSystemInfo>)
	export function unRefMyAiAvPluginContextSystemInfo(v:Ref<MyAiAvPluginContextSystemInfo>):MyAiAvPluginContextSystemInfo
	export function emptyMyAiVcAnalysisResult():MyAiVcAnalysisResult
	export function emptyRefMyAiVcAnalysisResult():Ref<MyAiVcAnalysisResult>
	export function refOfMyAiVcAnalysisResult(x:MyAiVcAnalysisResult,v:Ref<MyAiVcAnalysisResult>)
	export function unRefMyAiVcAnalysisResult(v:Ref<MyAiVcAnalysisResult>):MyAiVcAnalysisResult
	export function emptyCreateScopeConfigResp():CreateScopeConfigResp
	export function emptyRefCreateScopeConfigResp():Ref<CreateScopeConfigResp>
	export function refOfCreateScopeConfigResp(x:CreateScopeConfigResp,v:Ref<CreateScopeConfigResp>)
	export function unRefCreateScopeConfigResp(v:Ref<CreateScopeConfigResp>):CreateScopeConfigResp
	export function emptyMgetRoomLevelRespData():MgetRoomLevelRespData
	export function emptyRefMgetRoomLevelRespData():Ref<MgetRoomLevelRespData>
	export function refOfMgetRoomLevelRespData(x:MgetRoomLevelRespData,v:Ref<MgetRoomLevelRespData>)
	export function unRefMgetRoomLevelRespData(v:Ref<MgetRoomLevelRespData>):MgetRoomLevelRespData
	export function emptyMgetRoomRespData():MgetRoomRespData
	export function emptyRefMgetRoomRespData():Ref<MgetRoomRespData>
	export function refOfMgetRoomRespData(x:MgetRoomRespData,v:Ref<MgetRoomRespData>)
	export function unRefMgetRoomRespData(v:Ref<MgetRoomRespData>):MgetRoomRespData
	export function emptyMyAiCallbackActionValue():MyAiCallbackActionValue
	export function emptyRefMyAiCallbackActionValue():Ref<MyAiCallbackActionValue>
	export function refOfMyAiCallbackActionValue(x:MyAiCallbackActionValue,v:Ref<MyAiCallbackActionValue>)
	export function unRefMyAiCallbackActionValue(v:Ref<MyAiCallbackActionValue>):MyAiCallbackActionValue
	export function emptyMyAiVcMeetingOperationResult():MyAiVcMeetingOperationResult
	export function emptyRefMyAiVcMeetingOperationResult():Ref<MyAiVcMeetingOperationResult>
	export function refOfMyAiVcMeetingOperationResult(x:MyAiVcMeetingOperationResult,v:Ref<MyAiVcMeetingOperationResult>)
	export function unRefMyAiVcMeetingOperationResult(v:Ref<MyAiVcMeetingOperationResult>):MyAiVcMeetingOperationResult
	export function emptyScopeConfig():ScopeConfig
	export function emptyRefScopeConfig():Ref<ScopeConfig>
	export function refOfScopeConfig(x:ScopeConfig,v:Ref<ScopeConfig>)
	export function unRefScopeConfig(v:Ref<ScopeConfig>):ScopeConfig
	export function emptyReserveAssignHost():ReserveAssignHost
	export function emptyRefReserveAssignHost():Ref<ReserveAssignHost>
	export function refOfReserveAssignHost(x:ReserveAssignHost,v:Ref<ReserveAssignHost>)
	export function unRefReserveAssignHost(v:Ref<ReserveAssignHost>):ReserveAssignHost
	export function emptyDepartmentId():DepartmentId
	export function emptyRefDepartmentId():Ref<DepartmentId>
	export function refOfDepartmentId(x:DepartmentId,v:Ref<DepartmentId>)
	export function unRefDepartmentId(v:Ref<DepartmentId>):DepartmentId
	export function emptyGetMeetingRecordingRespData():GetMeetingRecordingRespData
	export function emptyRefGetMeetingRecordingRespData():Ref<GetMeetingRecordingRespData>
	export function refOfGetMeetingRecordingRespData(x:GetMeetingRecordingRespData,v:Ref<GetMeetingRecordingRespData>)
	export function unRefGetMeetingRecordingRespData(v:Ref<GetMeetingRecordingRespData>):GetMeetingRecordingRespData
	export function emptyGetRoomLevelRespData():GetRoomLevelRespData
	export function emptyRefGetRoomLevelRespData():Ref<GetRoomLevelRespData>
	export function refOfGetRoomLevelRespData(x:GetRoomLevelRespData,v:Ref<GetRoomLevelRespData>)
	export function unRefGetRoomLevelRespData(v:Ref<GetRoomLevelRespData>):GetRoomLevelRespData
	export function emptyP2MeetingRecordingReadyV1Data():P2MeetingRecordingReadyV1Data
	export function emptyRefP2MeetingRecordingReadyV1Data():Ref<P2MeetingRecordingReadyV1Data>
	export function refOfP2MeetingRecordingReadyV1Data(x:P2MeetingRecordingReadyV1Data,v:Ref<P2MeetingRecordingReadyV1Data>)
	export function unRefP2MeetingRecordingReadyV1Data(v:Ref<P2MeetingRecordingReadyV1Data>):P2MeetingRecordingReadyV1Data
}