// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'github.com/larksuite/oapi-sdk-go/v3/service/document_ai/v1'{

	// @ts-ignore
	import * as larkcore from 'github.com/larksuite/oapi-sdk-go/v3/core'
	// @ts-ignore
	import * as context from 'golang/context'
	// @ts-ignore
	import * as io from 'golang/io'
	// @ts-ignore
	import type {Alias,Nothing,int,bool,float64,error,Ref,Struct} from 'go'
	export interface BankCard extends Struct<BankCard>{

			entities:Ref<BankCardEntity>[]
	}
	export interface BankCardBuilder extends Struct<BankCardBuilder>{

			entities(entities:Ref<BankCardEntity>[]):Ref<BankCardBuilder>
			build():Ref<BankCard>
	}
	export interface BankCardEntity extends Struct<BankCardEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface BankCardEntityBuilder extends Struct<BankCardEntityBuilder>{

			type(type_:string):Ref<BankCardEntityBuilder>
			value(value:string):Ref<BankCardEntityBuilder>
			build():Ref<BankCardEntity>
	}
	export interface BankEntity extends Struct<BankEntity>{

			accountName:Ref<string>
			bankName:Ref<string>
			accountNumber:Ref<string>
			phone:Ref<string>
			contacts:Ref<string>
			taxNumber:Ref<string>
			address:Ref<string>
			idNumber:Ref<string>
			email:Ref<string>
	}
	export interface BankEntityBuilder extends Struct<BankEntityBuilder>{

			accountName(accountName:string):Ref<BankEntityBuilder>
			bankName(bankName:string):Ref<BankEntityBuilder>
			accountNumber(accountNumber:string):Ref<BankEntityBuilder>
			phone(phone:string):Ref<BankEntityBuilder>
			contacts(contacts:string):Ref<BankEntityBuilder>
			taxNumber(taxNumber:string):Ref<BankEntityBuilder>
			address(address:string):Ref<BankEntityBuilder>
			idNumber(idNumber:string):Ref<BankEntityBuilder>
			email(email:string):Ref<BankEntityBuilder>
			build():Ref<BankEntity>
	}
	export interface BankInfo extends Struct<BankInfo>{

			bankType:Ref<string>
			value:Ref<BankEntity>
	}
	export interface BankInfoBuilder extends Struct<BankInfoBuilder>{

			bankType(bankType:string):Ref<BankInfoBuilder>
			value(value:Ref<BankEntity>):Ref<BankInfoBuilder>
			build():Ref<BankInfo>
	}
	export interface BodyEntity extends Struct<BodyEntity>{

			address:Ref<string>
			contacts:Ref<string>
			email:Ref<string>
			phone:Ref<string>
			idNumber:Ref<string>
			legalRepresentative:Ref<string>
			party:Ref<string>
	}
	export interface BodyEntityBuilder extends Struct<BodyEntityBuilder>{

			address(address:string):Ref<BodyEntityBuilder>
			contacts(contacts:string):Ref<BodyEntityBuilder>
			email(email:string):Ref<BodyEntityBuilder>
			phone(phone:string):Ref<BodyEntityBuilder>
			idNumber(idNumber:string):Ref<BodyEntityBuilder>
			legalRepresentative(legalRepresentative:string):Ref<BodyEntityBuilder>
			party(party:string):Ref<BodyEntityBuilder>
			build():Ref<BodyEntity>
	}
	export interface BodyInfo extends Struct<BodyInfo>{

			bodyType:Ref<string>
			value:Ref<BodyEntity>
	}
	export interface BodyInfoBuilder extends Struct<BodyInfoBuilder>{

			bodyType(bodyType:string):Ref<BodyInfoBuilder>
			value(value:Ref<BodyEntity>):Ref<BodyInfoBuilder>
			build():Ref<BodyInfo>
	}
	export interface BusinessCard extends Alias<Nothing>{

	}
	export interface BusinessEntity extends Struct<BusinessEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface BusinessEntityBuilder extends Struct<BusinessEntityBuilder>{

			type(type_:string):Ref<BusinessEntityBuilder>
			value(value:string):Ref<BusinessEntityBuilder>
			build():Ref<BusinessEntity>
	}
	export interface BusinessLicense extends Struct<BusinessLicense>{

			entities:Ref<BusinessEntity>[]
	}
	export interface BusinessLicenseBuilder extends Struct<BusinessLicenseBuilder>{

			entities(entities:Ref<BusinessEntity>[]):Ref<BusinessLicenseBuilder>
			build():Ref<BusinessLicense>
	}
	export interface ChinesePassport extends Struct<ChinesePassport>{

			entities:Ref<ChinesePassportEntity>[]
	}
	export interface ChinesePassportBuilder extends Struct<ChinesePassportBuilder>{

			entities(entities:Ref<ChinesePassportEntity>[]):Ref<ChinesePassportBuilder>
			build():Ref<ChinesePassport>
	}
	export interface ChinesePassportEntity extends Struct<ChinesePassportEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface ChinesePassportEntityBuilder extends Struct<ChinesePassportEntityBuilder>{

			type(type_:string):Ref<ChinesePassportEntityBuilder>
			value(value:string):Ref<ChinesePassportEntityBuilder>
			build():Ref<ChinesePassportEntity>
	}
	export interface Currency extends Struct<Currency>{

			currencyName:Ref<string>
			currencyText:Ref<string>
	}
	export interface CurrencyBuilder extends Struct<CurrencyBuilder>{

			currencyName(currencyName:string):Ref<CurrencyBuilder>
			currencyText(currencyText:string):Ref<CurrencyBuilder>
			build():Ref<Currency>
	}
	export interface DepartmentId extends Struct<DepartmentId>{

			departmentId:Ref<string>
			openDepartmentId:Ref<string>
	}
	export interface DepartmentIdBuilder extends Struct<DepartmentIdBuilder>{

			departmentId(departmentId:string):Ref<DepartmentIdBuilder>
			openDepartmentId(openDepartmentId:string):Ref<DepartmentIdBuilder>
			build():Ref<DepartmentId>
	}
	export interface DocChunkBboxItem extends Struct<DocChunkBboxItem>{

			bboxPositions:string[]
	}
	export interface DocChunkBboxItemBuilder extends Struct<DocChunkBboxItemBuilder>{

			bboxPositions(bboxPositions:string[]):Ref<DocChunkBboxItemBuilder>
			build():Ref<DocChunkBboxItem>
	}
	export interface DocChunkPosition extends Struct<DocChunkPosition>{

			pageNumbers:int[]
			bboxes:Ref<DocChunkBboxItem>[]
	}
	export interface DocChunkPositionBuilder extends Struct<DocChunkPositionBuilder>{

			pageNumbers(pageNumbers:int[]):Ref<DocChunkPositionBuilder>
			bboxes(bboxes:Ref<DocChunkBboxItem>[]):Ref<DocChunkPositionBuilder>
			build():Ref<DocChunkPosition>
	}
	export interface DocChunkResult extends Struct<DocChunkResult>{

			id:Ref<int>
			type:Ref<string>
			positions:Ref<DocChunkPosition>
			text:Ref<string>
			level:Ref<int>
			parent:Ref<int>
			children:int[]
			label:Ref<string>
			blockId:Ref<string>
			tableDetail:Ref<DocChunkTableDetail>
	}
	export interface DocChunkResultBuilder extends Struct<DocChunkResultBuilder>{

			id(id:int):Ref<DocChunkResultBuilder>
			type(type_:string):Ref<DocChunkResultBuilder>
			positions(positions:Ref<DocChunkPosition>):Ref<DocChunkResultBuilder>
			text(text:string):Ref<DocChunkResultBuilder>
			level(level:int):Ref<DocChunkResultBuilder>
			parent(parent:int):Ref<DocChunkResultBuilder>
			children(children:int[]):Ref<DocChunkResultBuilder>
			label(label:string):Ref<DocChunkResultBuilder>
			blockId(blockId:string):Ref<DocChunkResultBuilder>
			tableDetail(tableDetail:Ref<DocChunkTableDetail>):Ref<DocChunkResultBuilder>
			build():Ref<DocChunkResult>
	}
	export interface DocChunkTableCell extends Struct<DocChunkTableCell>{

			type:Ref<string>
			text:Ref<string>
			X0:Ref<string>
			Y0:Ref<string>
			X1:Ref<string>
			Y1:Ref<string>
			rowIndex:Ref<int>
			colIndex:Ref<int>
			rowSpan:Ref<int>
			colSpan:Ref<int>
			isMergeCell:Ref<bool>
	}
	export interface DocChunkTableCellBuilder extends Struct<DocChunkTableCellBuilder>{

			type(type_:string):Ref<DocChunkTableCellBuilder>
			text(text:string):Ref<DocChunkTableCellBuilder>
			X0(x0:string):Ref<DocChunkTableCellBuilder>
			Y0(y0:string):Ref<DocChunkTableCellBuilder>
			X1(x1:string):Ref<DocChunkTableCellBuilder>
			Y1(y1:string):Ref<DocChunkTableCellBuilder>
			rowIndex(rowIndex:int):Ref<DocChunkTableCellBuilder>
			colIndex(colIndex:int):Ref<DocChunkTableCellBuilder>
			rowSpan(rowSpan:int):Ref<DocChunkTableCellBuilder>
			colSpan(colSpan:int):Ref<DocChunkTableCellBuilder>
			isMergeCell(isMergeCell:bool):Ref<DocChunkTableCellBuilder>
			build():Ref<DocChunkTableCell>
	}
	export interface DocChunkTableDetail extends Struct<DocChunkTableDetail>{

			tableIdx:Ref<int>
			text:Ref<string>
			cells:Ref<DocChunkTableRow>[]
	}
	export interface DocChunkTableDetailBuilder extends Struct<DocChunkTableDetailBuilder>{

			tableIdx(tableIdx:int):Ref<DocChunkTableDetailBuilder>
			text(text:string):Ref<DocChunkTableDetailBuilder>
			cells(cells:Ref<DocChunkTableRow>[]):Ref<DocChunkTableDetailBuilder>
			build():Ref<DocChunkTableDetail>
	}
	export interface DocChunkTableRow extends Struct<DocChunkTableRow>{

			rowCells:Ref<DocChunkTableCell>[]
	}
	export interface DocChunkTableRowBuilder extends Struct<DocChunkTableRowBuilder>{

			rowCells(rowCells:Ref<DocChunkTableCell>[]):Ref<DocChunkTableRowBuilder>
			build():Ref<DocChunkTableRow>
	}
	export interface DrivingEntity extends Struct<DrivingEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface DrivingEntityBuilder extends Struct<DrivingEntityBuilder>{

			type(type_:string):Ref<DrivingEntityBuilder>
			value(value:string):Ref<DrivingEntityBuilder>
			build():Ref<DrivingEntity>
	}
	export interface DrivingLicense extends Alias<Nothing>{

	}
	export interface DrvingLicense extends Struct<DrvingLicense>{

			entities:Ref<DrivingEntity>[]
	}
	export interface DrvingLicenseBuilder extends Struct<DrvingLicenseBuilder>{

			entities(entities:Ref<DrivingEntity>[]):Ref<DrvingLicenseBuilder>
			build():Ref<DrvingLicense>
	}
	export interface ExtractCopy extends Struct<ExtractCopy>{

			copyNum:Ref<int>
			originalCopy:Ref<string>
			key:Ref<string>
			text:Ref<string>
	}
	export interface ExtractCopyBuilder extends Struct<ExtractCopyBuilder>{

			copyNum(copyNum:int):Ref<ExtractCopyBuilder>
			originalCopy(originalCopy:string):Ref<ExtractCopyBuilder>
			key(key:string):Ref<ExtractCopyBuilder>
			text(text:string):Ref<ExtractCopyBuilder>
			build():Ref<ExtractCopy>
	}
	export interface ExtractCurrency extends Struct<ExtractCurrency>{

			currencyName:Ref<string>
			currencyText:Ref<string>
	}
	export interface ExtractCurrencyBuilder extends Struct<ExtractCurrencyBuilder>{

			currencyName(currencyName:string):Ref<ExtractCurrencyBuilder>
			currencyText(currencyText:string):Ref<ExtractCurrencyBuilder>
			build():Ref<ExtractCurrency>
	}
	export interface ExtractPrice extends Struct<ExtractPrice>{

			contractPrice:Ref<float64>
			contractPriceOriginal:Ref<string>
			text:Ref<string>
	}
	export interface ExtractPriceBuilder extends Struct<ExtractPriceBuilder>{

			contractPrice(contractPrice:float64):Ref<ExtractPriceBuilder>
			contractPriceOriginal(contractPriceOriginal:string):Ref<ExtractPriceBuilder>
			text(text:string):Ref<ExtractPriceBuilder>
			build():Ref<ExtractPrice>
	}
	export interface ExtractTerm extends Struct<ExtractTerm>{

			initialTime:Ref<string>
			initialUnit:Ref<string>
	}
	export interface ExtractTermBuilder extends Struct<ExtractTermBuilder>{

			initialTime(initialTime:string):Ref<ExtractTermBuilder>
			initialUnit(initialUnit:string):Ref<ExtractTermBuilder>
			build():Ref<ExtractTerm>
	}
	export interface ExtractTime extends Struct<ExtractTime>{

			timeStart:Ref<string>
			timeEnd:Ref<string>
			originalTimeStart:Ref<string>
			originalTimeEnd:Ref<string>
			textStart:Ref<string>
			textEnd:Ref<string>
			initialTerm:Ref<ExtractTerm>
			textInitialTerm:Ref<string>
	}
	export interface ExtractTimeBuilder extends Struct<ExtractTimeBuilder>{

			timeStart(timeStart:string):Ref<ExtractTimeBuilder>
			timeEnd(timeEnd:string):Ref<ExtractTimeBuilder>
			originalTimeStart(originalTimeStart:string):Ref<ExtractTimeBuilder>
			originalTimeEnd(originalTimeEnd:string):Ref<ExtractTimeBuilder>
			textStart(textStart:string):Ref<ExtractTimeBuilder>
			textEnd(textEnd:string):Ref<ExtractTimeBuilder>
			initialTerm(initialTerm:Ref<ExtractTerm>):Ref<ExtractTimeBuilder>
			textInitialTerm(textInitialTerm:string):Ref<ExtractTimeBuilder>
			build():Ref<ExtractTime>
	}
	export interface FieldExtraction extends Alias<Nothing>{

	}
	export interface FieldExtractionContractPathReqBodyBuilder extends Struct<FieldExtractionContractPathReqBodyBuilder>{

			filePath(filePath:string):Ref<FieldExtractionContractPathReqBodyBuilder>
			pdfPageLimit(pdfPageLimit:int):Ref<FieldExtractionContractPathReqBodyBuilder>
			ocrMode(ocrMode:string):Ref<FieldExtractionContractPathReqBodyBuilder>
			build():Ref<FieldExtractionContractReqBody>
	}
	export interface FieldExtractionContractReq extends Struct<FieldExtractionContractReq>{

			body:Ref<FieldExtractionContractReqBody>
	}
	export interface FieldExtractionContractReqBody extends Struct<FieldExtractionContractReqBody>{

			file:io.Reader
			pdfPageLimit:Ref<int>
			ocrMode:Ref<string>
	}
	export interface FieldExtractionContractReqBodyBuilder extends Struct<FieldExtractionContractReqBodyBuilder>{

			file(file:io.Reader):Ref<FieldExtractionContractReqBodyBuilder>
			pdfPageLimit(pdfPageLimit:int):Ref<FieldExtractionContractReqBodyBuilder>
			ocrMode(ocrMode:string):Ref<FieldExtractionContractReqBodyBuilder>
			build():Ref<FieldExtractionContractReqBody>
	}
	export interface FieldExtractionContractReqBuilder extends Struct<FieldExtractionContractReqBuilder>{

			body(body:Ref<FieldExtractionContractReqBody>):Ref<FieldExtractionContractReqBuilder>
			build():Ref<FieldExtractionContractReq>
	}
	export interface FieldExtractionContractResp extends Struct<FieldExtractionContractResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<FieldExtractionContractRespData>
			success():bool
	}
	export interface FieldExtractionContractRespData extends Struct<FieldExtractionContractRespData>{

			fileId:Ref<string>
			price:Ref<ExtractPrice>
			time:Ref<ExtractTime>
			copy:Ref<ExtractCopy>
			currency:Ref<ExtractCurrency>
			header:Ref<string>
			bodyInfo:Ref<BodyInfo>[]
			bankInfo:Ref<BankInfo>[]
	}
	export interface FoodManageEntity extends Struct<FoodManageEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface FoodManageEntityBuilder extends Struct<FoodManageEntityBuilder>{

			type(type_:string):Ref<FoodManageEntityBuilder>
			value(value:string):Ref<FoodManageEntityBuilder>
			build():Ref<FoodManageEntity>
	}
	export interface FoodManageLicense extends Struct<FoodManageLicense>{

			entities:Ref<FoodManageEntity>[]
	}
	export interface FoodManageLicenseBuilder extends Struct<FoodManageLicenseBuilder>{

			entities(entities:Ref<FoodManageEntity>[]):Ref<FoodManageLicenseBuilder>
			build():Ref<FoodManageLicense>
	}
	export interface FoodProduceEntity extends Struct<FoodProduceEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface FoodProduceEntityBuilder extends Struct<FoodProduceEntityBuilder>{

			type(type_:string):Ref<FoodProduceEntityBuilder>
			value(value:string):Ref<FoodProduceEntityBuilder>
			build():Ref<FoodProduceEntity>
	}
	export interface FoodProduceLicense extends Struct<FoodProduceLicense>{

			entities:Ref<FoodProduceEntity>[]
	}
	export interface FoodProduceLicenseBuilder extends Struct<FoodProduceLicenseBuilder>{

			entities(entities:Ref<FoodProduceEntity>[]):Ref<FoodProduceLicenseBuilder>
			build():Ref<FoodProduceLicense>
	}
	export interface HealthCertificate extends Struct<HealthCertificate>{

			entities:Ref<HealthCertificateEntity>[]
	}
	export interface HealthCertificateBuilder extends Struct<HealthCertificateBuilder>{

			entities(entities:Ref<HealthCertificateEntity>[]):Ref<HealthCertificateBuilder>
			build():Ref<HealthCertificate>
	}
	export interface HealthCertificateEntity extends Struct<HealthCertificateEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface HealthCertificateEntityBuilder extends Struct<HealthCertificateEntityBuilder>{

			type(type_:string):Ref<HealthCertificateEntityBuilder>
			value(value:string):Ref<HealthCertificateEntityBuilder>
			build():Ref<HealthCertificateEntity>
	}
	export interface HkmMainlandTravelPermit extends Struct<HkmMainlandTravelPermit>{

			entities:Ref<HkmMainlandTravelPermitEntity>[]
	}
	export interface HkmMainlandTravelPermitBuilder extends Struct<HkmMainlandTravelPermitBuilder>{

			entities(entities:Ref<HkmMainlandTravelPermitEntity>[]):Ref<HkmMainlandTravelPermitBuilder>
			build():Ref<HkmMainlandTravelPermit>
	}
	export interface HkmMainlandTravelPermitEntity extends Struct<HkmMainlandTravelPermitEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface HkmMainlandTravelPermitEntityBuilder extends Struct<HkmMainlandTravelPermitEntityBuilder>{

			type(type_:string):Ref<HkmMainlandTravelPermitEntityBuilder>
			value(value:string):Ref<HkmMainlandTravelPermitEntityBuilder>
			build():Ref<HkmMainlandTravelPermitEntity>
	}
	export interface IdCard extends Struct<IdCard>{

			entities:Ref<IdEntity>[]
			side:Ref<int>
			conners:int[]
			faceConners:int[]
	}
	export interface IdCardBuilder extends Struct<IdCardBuilder>{

			entities(entities:Ref<IdEntity>[]):Ref<IdCardBuilder>
			side(side:int):Ref<IdCardBuilder>
			conners(conners:int[]):Ref<IdCardBuilder>
			faceConners(faceConners:int[]):Ref<IdCardBuilder>
			build():Ref<IdCard>
	}
	export interface IdEntity extends Struct<IdEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface IdEntityBuilder extends Struct<IdEntityBuilder>{

			type(type_:string):Ref<IdEntityBuilder>
			value(value:string):Ref<IdEntityBuilder>
			build():Ref<IdEntity>
	}
	export function New(config:Ref<larkcore.Config>):Ref<V1>

	export function newBankCardBuilder():Ref<BankCardBuilder>

	export function newBankCardEntityBuilder():Ref<BankCardEntityBuilder>

	export function newBankEntityBuilder():Ref<BankEntityBuilder>

	export function newBankInfoBuilder():Ref<BankInfoBuilder>

	export function newBodyEntityBuilder():Ref<BodyEntityBuilder>

	export function newBodyInfoBuilder():Ref<BodyInfoBuilder>

	export function newBusinessEntityBuilder():Ref<BusinessEntityBuilder>

	export function newBusinessLicenseBuilder():Ref<BusinessLicenseBuilder>

	export function newChinesePassportBuilder():Ref<ChinesePassportBuilder>

	export function newChinesePassportEntityBuilder():Ref<ChinesePassportEntityBuilder>

	export function newCurrencyBuilder():Ref<CurrencyBuilder>

	export function newDepartmentIdBuilder():Ref<DepartmentIdBuilder>

	export function newDocChunkBboxItemBuilder():Ref<DocChunkBboxItemBuilder>

	export function newDocChunkPositionBuilder():Ref<DocChunkPositionBuilder>

	export function newDocChunkResultBuilder():Ref<DocChunkResultBuilder>

	export function newDocChunkTableCellBuilder():Ref<DocChunkTableCellBuilder>

	export function newDocChunkTableDetailBuilder():Ref<DocChunkTableDetailBuilder>

	export function newDocChunkTableRowBuilder():Ref<DocChunkTableRowBuilder>

	export function newDrivingEntityBuilder():Ref<DrivingEntityBuilder>

	export function newDrvingLicenseBuilder():Ref<DrvingLicenseBuilder>

	export function newExtractCopyBuilder():Ref<ExtractCopyBuilder>

	export function newExtractCurrencyBuilder():Ref<ExtractCurrencyBuilder>

	export function newExtractPriceBuilder():Ref<ExtractPriceBuilder>

	export function newExtractTermBuilder():Ref<ExtractTermBuilder>

	export function newExtractTimeBuilder():Ref<ExtractTimeBuilder>

	export function newFieldExtractionContractPathReqBodyBuilder():Ref<FieldExtractionContractPathReqBodyBuilder>

	export function newFieldExtractionContractReqBodyBuilder():Ref<FieldExtractionContractReqBodyBuilder>

	export function newFieldExtractionContractReqBuilder():Ref<FieldExtractionContractReqBuilder>

	export function newFoodManageEntityBuilder():Ref<FoodManageEntityBuilder>

	export function newFoodManageLicenseBuilder():Ref<FoodManageLicenseBuilder>

	export function newFoodProduceEntityBuilder():Ref<FoodProduceEntityBuilder>

	export function newFoodProduceLicenseBuilder():Ref<FoodProduceLicenseBuilder>

	export function newHealthCertificateBuilder():Ref<HealthCertificateBuilder>

	export function newHealthCertificateEntityBuilder():Ref<HealthCertificateEntityBuilder>

	export function newHkmMainlandTravelPermitBuilder():Ref<HkmMainlandTravelPermitBuilder>

	export function newHkmMainlandTravelPermitEntityBuilder():Ref<HkmMainlandTravelPermitEntityBuilder>

	export function newIdCardBuilder():Ref<IdCardBuilder>

	export function newIdEntityBuilder():Ref<IdEntityBuilder>

	export function newParseResumePathReqBodyBuilder():Ref<ParseResumePathReqBodyBuilder>

	export function newParseResumeReqBodyBuilder():Ref<ParseResumeReqBodyBuilder>

	export function newParseResumeReqBuilder():Ref<ParseResumeReqBuilder>

	export function newRecognizeBankCardPathReqBodyBuilder():Ref<RecognizeBankCardPathReqBodyBuilder>

	export function newRecognizeBankCardReqBodyBuilder():Ref<RecognizeBankCardReqBodyBuilder>

	export function newRecognizeBankCardReqBuilder():Ref<RecognizeBankCardReqBuilder>

	export function newRecognizeBusinessCardPathReqBodyBuilder():Ref<RecognizeBusinessCardPathReqBodyBuilder>

	export function newRecognizeBusinessCardReqBodyBuilder():Ref<RecognizeBusinessCardReqBodyBuilder>

	export function newRecognizeBusinessCardReqBuilder():Ref<RecognizeBusinessCardReqBuilder>

	export function newRecognizeBusinessLicensePathReqBodyBuilder():Ref<RecognizeBusinessLicensePathReqBodyBuilder>

	export function newRecognizeBusinessLicenseReqBodyBuilder():Ref<RecognizeBusinessLicenseReqBodyBuilder>

	export function newRecognizeBusinessLicenseReqBuilder():Ref<RecognizeBusinessLicenseReqBuilder>

	export function newRecognizeChinesePassportPathReqBodyBuilder():Ref<RecognizeChinesePassportPathReqBodyBuilder>

	export function newRecognizeChinesePassportReqBodyBuilder():Ref<RecognizeChinesePassportReqBodyBuilder>

	export function newRecognizeChinesePassportReqBuilder():Ref<RecognizeChinesePassportReqBuilder>

	export function newRecognizeDrivingLicensePathReqBodyBuilder():Ref<RecognizeDrivingLicensePathReqBodyBuilder>

	export function newRecognizeDrivingLicenseReqBodyBuilder():Ref<RecognizeDrivingLicenseReqBodyBuilder>

	export function newRecognizeDrivingLicenseReqBuilder():Ref<RecognizeDrivingLicenseReqBuilder>

	export function newRecognizeFoodManageLicensePathReqBodyBuilder():Ref<RecognizeFoodManageLicensePathReqBodyBuilder>

	export function newRecognizeFoodManageLicenseReqBodyBuilder():Ref<RecognizeFoodManageLicenseReqBodyBuilder>

	export function newRecognizeFoodManageLicenseReqBuilder():Ref<RecognizeFoodManageLicenseReqBuilder>

	export function newRecognizeFoodProduceLicensePathReqBodyBuilder():Ref<RecognizeFoodProduceLicensePathReqBodyBuilder>

	export function newRecognizeFoodProduceLicenseReqBodyBuilder():Ref<RecognizeFoodProduceLicenseReqBodyBuilder>

	export function newRecognizeFoodProduceLicenseReqBuilder():Ref<RecognizeFoodProduceLicenseReqBuilder>

	export function newRecognizeHealthCertificatePathReqBodyBuilder():Ref<RecognizeHealthCertificatePathReqBodyBuilder>

	export function newRecognizeHealthCertificateReqBodyBuilder():Ref<RecognizeHealthCertificateReqBodyBuilder>

	export function newRecognizeHealthCertificateReqBuilder():Ref<RecognizeHealthCertificateReqBuilder>

	export function newRecognizeHkmMainlandTravelPermitPathReqBodyBuilder():Ref<RecognizeHkmMainlandTravelPermitPathReqBodyBuilder>

	export function newRecognizeHkmMainlandTravelPermitReqBodyBuilder():Ref<RecognizeHkmMainlandTravelPermitReqBodyBuilder>

	export function newRecognizeHkmMainlandTravelPermitReqBuilder():Ref<RecognizeHkmMainlandTravelPermitReqBuilder>

	export function newRecognizeIdCardPathReqBodyBuilder():Ref<RecognizeIdCardPathReqBodyBuilder>

	export function newRecognizeIdCardReqBodyBuilder():Ref<RecognizeIdCardReqBodyBuilder>

	export function newRecognizeIdCardReqBuilder():Ref<RecognizeIdCardReqBuilder>

	export function newRecognizeTaxiInvoicePathReqBodyBuilder():Ref<RecognizeTaxiInvoicePathReqBodyBuilder>

	export function newRecognizeTaxiInvoiceReqBodyBuilder():Ref<RecognizeTaxiInvoiceReqBodyBuilder>

	export function newRecognizeTaxiInvoiceReqBuilder():Ref<RecognizeTaxiInvoiceReqBuilder>

	export function newRecognizeTrainInvoicePathReqBodyBuilder():Ref<RecognizeTrainInvoicePathReqBodyBuilder>

	export function newRecognizeTrainInvoiceReqBodyBuilder():Ref<RecognizeTrainInvoiceReqBodyBuilder>

	export function newRecognizeTrainInvoiceReqBuilder():Ref<RecognizeTrainInvoiceReqBuilder>

	export function newRecognizeTwMainlandTravelPermitPathReqBodyBuilder():Ref<RecognizeTwMainlandTravelPermitPathReqBodyBuilder>

	export function newRecognizeTwMainlandTravelPermitReqBodyBuilder():Ref<RecognizeTwMainlandTravelPermitReqBodyBuilder>

	export function newRecognizeTwMainlandTravelPermitReqBuilder():Ref<RecognizeTwMainlandTravelPermitReqBuilder>

	export function newRecognizeVatInvoicePathReqBodyBuilder():Ref<RecognizeVatInvoicePathReqBodyBuilder>

	export function newRecognizeVatInvoiceReqBodyBuilder():Ref<RecognizeVatInvoiceReqBodyBuilder>

	export function newRecognizeVatInvoiceReqBuilder():Ref<RecognizeVatInvoiceReqBuilder>

	export function newRecognizeVehicleInvoicePathReqBodyBuilder():Ref<RecognizeVehicleInvoicePathReqBodyBuilder>

	export function newRecognizeVehicleInvoiceReqBodyBuilder():Ref<RecognizeVehicleInvoiceReqBodyBuilder>

	export function newRecognizeVehicleInvoiceReqBuilder():Ref<RecognizeVehicleInvoiceReqBuilder>

	export function newRecognizeVehicleLicensePathReqBodyBuilder():Ref<RecognizeVehicleLicensePathReqBodyBuilder>

	export function newRecognizeVehicleLicenseReqBodyBuilder():Ref<RecognizeVehicleLicenseReqBodyBuilder>

	export function newRecognizeVehicleLicenseReqBuilder():Ref<RecognizeVehicleLicenseReqBuilder>

	export function newRecognizedEntitiesBuilder():Ref<RecognizedEntitiesBuilder>

	export function newRecognizedEntityBuilder():Ref<RecognizedEntityBuilder>

	export function newResumeAwardBuilder():Ref<ResumeAwardBuilder>

	export function newResumeBuilder():Ref<ResumeBuilder>

	export function newResumeCareerBuilder():Ref<ResumeCareerBuilder>

	export function newResumeCertificateBuilder():Ref<ResumeCertificateBuilder>

	export function newResumeCompetitionBuilder():Ref<ResumeCompetitionBuilder>

	export function newResumeEducationBuilder():Ref<ResumeEducationBuilder>

	export function newResumeLanguageBuilder():Ref<ResumeLanguageBuilder>

	export function newResumeProjectBuilder():Ref<ResumeProjectBuilder>

	export function newTaxiEnitityBuilder():Ref<TaxiEnitityBuilder>

	export function newTaxiEntityBuilder():Ref<TaxiEntityBuilder>

	export function newTaxiInvoiceBuilder():Ref<TaxiInvoiceBuilder>

	export function newTrainEntityBuilder():Ref<TrainEntityBuilder>

	export function newTrainInvoiceBuilder():Ref<TrainInvoiceBuilder>

	export function newTwMainlandTravelPermitBuilder():Ref<TwMainlandTravelPermitBuilder>

	export function newTwMainlandTravelPermitEntityBuilder():Ref<TwMainlandTravelPermitEntityBuilder>

	export function newVatEntityBuilder():Ref<VatEntityBuilder>

	export function newVatInvoiceBuilder():Ref<VatInvoiceBuilder>

	export function newVehicleEntityBuilder():Ref<VehicleEntityBuilder>

	export function newVehicleInvoiceBuilder():Ref<VehicleInvoiceBuilder>

	export function newVehicleInvoiceEntityBuilder():Ref<VehicleInvoiceEntityBuilder>

	export function newVehicleLicenseBuilder():Ref<VehicleLicenseBuilder>

	//"auto"
	export const OcrModeAuto:string
	//"force"
	export const OcrModeForce:string
	//"unused"
	export const OcrModeUnused:string
	export interface ParseResumePathReqBodyBuilder extends Struct<ParseResumePathReqBodyBuilder>{

			filePath(filePath:string):Ref<ParseResumePathReqBodyBuilder>
			build():Ref<ParseResumeReqBody>
	}
	export interface ParseResumeReq extends Struct<ParseResumeReq>{

			body:Ref<ParseResumeReqBody>
	}
	export interface ParseResumeReqBody extends Struct<ParseResumeReqBody>{

			file:io.Reader
	}
	export interface ParseResumeReqBodyBuilder extends Struct<ParseResumeReqBodyBuilder>{

			file(file:io.Reader):Ref<ParseResumeReqBodyBuilder>
			build():Ref<ParseResumeReqBody>
	}
	export interface ParseResumeReqBuilder extends Struct<ParseResumeReqBuilder>{

			body(body:Ref<ParseResumeReqBody>):Ref<ParseResumeReqBuilder>
			build():Ref<ParseResumeReq>
	}
	export interface ParseResumeResp extends Struct<ParseResumeResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ParseResumeRespData>
			success():bool
	}
	export interface ParseResumeRespData extends Struct<ParseResumeRespData>{

			resumes:Ref<Resume>[]
	}
	export interface RecognizeBankCardPathReqBodyBuilder extends Struct<RecognizeBankCardPathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeBankCardPathReqBodyBuilder>
			build():Ref<RecognizeBankCardReqBody>
	}
	export interface RecognizeBankCardReq extends Struct<RecognizeBankCardReq>{

			body:Ref<RecognizeBankCardReqBody>
	}
	export interface RecognizeBankCardReqBody extends Struct<RecognizeBankCardReqBody>{

			file:io.Reader
	}
	export interface RecognizeBankCardReqBodyBuilder extends Struct<RecognizeBankCardReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeBankCardReqBodyBuilder>
			build():Ref<RecognizeBankCardReqBody>
	}
	export interface RecognizeBankCardReqBuilder extends Struct<RecognizeBankCardReqBuilder>{

			body(body:Ref<RecognizeBankCardReqBody>):Ref<RecognizeBankCardReqBuilder>
			build():Ref<RecognizeBankCardReq>
	}
	export interface RecognizeBankCardResp extends Struct<RecognizeBankCardResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeBankCardRespData>
			success():bool
	}
	export interface RecognizeBankCardRespData extends Struct<RecognizeBankCardRespData>{

			bankCard:Ref<BankCard>
	}
	export interface RecognizeBusinessCardPathReqBodyBuilder extends Struct<RecognizeBusinessCardPathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeBusinessCardPathReqBodyBuilder>
			build():Ref<RecognizeBusinessCardReqBody>
	}
	export interface RecognizeBusinessCardReq extends Struct<RecognizeBusinessCardReq>{

			body:Ref<RecognizeBusinessCardReqBody>
	}
	export interface RecognizeBusinessCardReqBody extends Struct<RecognizeBusinessCardReqBody>{

			file:io.Reader
	}
	export interface RecognizeBusinessCardReqBodyBuilder extends Struct<RecognizeBusinessCardReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeBusinessCardReqBodyBuilder>
			build():Ref<RecognizeBusinessCardReqBody>
	}
	export interface RecognizeBusinessCardReqBuilder extends Struct<RecognizeBusinessCardReqBuilder>{

			body(body:Ref<RecognizeBusinessCardReqBody>):Ref<RecognizeBusinessCardReqBuilder>
			build():Ref<RecognizeBusinessCardReq>
	}
	export interface RecognizeBusinessCardResp extends Struct<RecognizeBusinessCardResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeBusinessCardRespData>
			success():bool
	}
	export interface RecognizeBusinessCardRespData extends Struct<RecognizeBusinessCardRespData>{

			businessCards:Ref<RecognizedEntities>[]
	}
	export interface RecognizeBusinessLicensePathReqBodyBuilder extends Struct<RecognizeBusinessLicensePathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeBusinessLicensePathReqBodyBuilder>
			build():Ref<RecognizeBusinessLicenseReqBody>
	}
	export interface RecognizeBusinessLicenseReq extends Struct<RecognizeBusinessLicenseReq>{

			body:Ref<RecognizeBusinessLicenseReqBody>
	}
	export interface RecognizeBusinessLicenseReqBody extends Struct<RecognizeBusinessLicenseReqBody>{

			file:io.Reader
	}
	export interface RecognizeBusinessLicenseReqBodyBuilder extends Struct<RecognizeBusinessLicenseReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeBusinessLicenseReqBodyBuilder>
			build():Ref<RecognizeBusinessLicenseReqBody>
	}
	export interface RecognizeBusinessLicenseReqBuilder extends Struct<RecognizeBusinessLicenseReqBuilder>{

			body(body:Ref<RecognizeBusinessLicenseReqBody>):Ref<RecognizeBusinessLicenseReqBuilder>
			build():Ref<RecognizeBusinessLicenseReq>
	}
	export interface RecognizeBusinessLicenseResp extends Struct<RecognizeBusinessLicenseResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeBusinessLicenseRespData>
			success():bool
	}
	export interface RecognizeBusinessLicenseRespData extends Struct<RecognizeBusinessLicenseRespData>{

			businessLicense:Ref<BusinessLicense>
	}
	export interface RecognizeChinesePassportPathReqBodyBuilder extends Struct<RecognizeChinesePassportPathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeChinesePassportPathReqBodyBuilder>
			build():Ref<RecognizeChinesePassportReqBody>
	}
	export interface RecognizeChinesePassportReq extends Struct<RecognizeChinesePassportReq>{

			body:Ref<RecognizeChinesePassportReqBody>
	}
	export interface RecognizeChinesePassportReqBody extends Struct<RecognizeChinesePassportReqBody>{

			file:io.Reader
	}
	export interface RecognizeChinesePassportReqBodyBuilder extends Struct<RecognizeChinesePassportReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeChinesePassportReqBodyBuilder>
			build():Ref<RecognizeChinesePassportReqBody>
	}
	export interface RecognizeChinesePassportReqBuilder extends Struct<RecognizeChinesePassportReqBuilder>{

			body(body:Ref<RecognizeChinesePassportReqBody>):Ref<RecognizeChinesePassportReqBuilder>
			build():Ref<RecognizeChinesePassportReq>
	}
	export interface RecognizeChinesePassportResp extends Struct<RecognizeChinesePassportResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeChinesePassportRespData>
			success():bool
	}
	export interface RecognizeChinesePassportRespData extends Struct<RecognizeChinesePassportRespData>{

			chinesePassport:Ref<ChinesePassport>
	}
	export interface RecognizeDrivingLicensePathReqBodyBuilder extends Struct<RecognizeDrivingLicensePathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeDrivingLicensePathReqBodyBuilder>
			build():Ref<RecognizeDrivingLicenseReqBody>
	}
	export interface RecognizeDrivingLicenseReq extends Struct<RecognizeDrivingLicenseReq>{

			body:Ref<RecognizeDrivingLicenseReqBody>
	}
	export interface RecognizeDrivingLicenseReqBody extends Struct<RecognizeDrivingLicenseReqBody>{

			file:io.Reader
	}
	export interface RecognizeDrivingLicenseReqBodyBuilder extends Struct<RecognizeDrivingLicenseReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeDrivingLicenseReqBodyBuilder>
			build():Ref<RecognizeDrivingLicenseReqBody>
	}
	export interface RecognizeDrivingLicenseReqBuilder extends Struct<RecognizeDrivingLicenseReqBuilder>{

			body(body:Ref<RecognizeDrivingLicenseReqBody>):Ref<RecognizeDrivingLicenseReqBuilder>
			build():Ref<RecognizeDrivingLicenseReq>
	}
	export interface RecognizeDrivingLicenseResp extends Struct<RecognizeDrivingLicenseResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeDrivingLicenseRespData>
			success():bool
	}
	export interface RecognizeDrivingLicenseRespData extends Struct<RecognizeDrivingLicenseRespData>{

			drivingLicense:Ref<DrvingLicense>
	}
	export interface RecognizeFoodManageLicensePathReqBodyBuilder extends Struct<RecognizeFoodManageLicensePathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeFoodManageLicensePathReqBodyBuilder>
			build():Ref<RecognizeFoodManageLicenseReqBody>
	}
	export interface RecognizeFoodManageLicenseReq extends Struct<RecognizeFoodManageLicenseReq>{

			body:Ref<RecognizeFoodManageLicenseReqBody>
	}
	export interface RecognizeFoodManageLicenseReqBody extends Struct<RecognizeFoodManageLicenseReqBody>{

			file:io.Reader
	}
	export interface RecognizeFoodManageLicenseReqBodyBuilder extends Struct<RecognizeFoodManageLicenseReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeFoodManageLicenseReqBodyBuilder>
			build():Ref<RecognizeFoodManageLicenseReqBody>
	}
	export interface RecognizeFoodManageLicenseReqBuilder extends Struct<RecognizeFoodManageLicenseReqBuilder>{

			body(body:Ref<RecognizeFoodManageLicenseReqBody>):Ref<RecognizeFoodManageLicenseReqBuilder>
			build():Ref<RecognizeFoodManageLicenseReq>
	}
	export interface RecognizeFoodManageLicenseResp extends Struct<RecognizeFoodManageLicenseResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeFoodManageLicenseRespData>
			success():bool
	}
	export interface RecognizeFoodManageLicenseRespData extends Struct<RecognizeFoodManageLicenseRespData>{

			foodManageLicense:Ref<FoodManageLicense>
	}
	export interface RecognizeFoodProduceLicensePathReqBodyBuilder extends Struct<RecognizeFoodProduceLicensePathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeFoodProduceLicensePathReqBodyBuilder>
			build():Ref<RecognizeFoodProduceLicenseReqBody>
	}
	export interface RecognizeFoodProduceLicenseReq extends Struct<RecognizeFoodProduceLicenseReq>{

			body:Ref<RecognizeFoodProduceLicenseReqBody>
	}
	export interface RecognizeFoodProduceLicenseReqBody extends Struct<RecognizeFoodProduceLicenseReqBody>{

			file:io.Reader
	}
	export interface RecognizeFoodProduceLicenseReqBodyBuilder extends Struct<RecognizeFoodProduceLicenseReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeFoodProduceLicenseReqBodyBuilder>
			build():Ref<RecognizeFoodProduceLicenseReqBody>
	}
	export interface RecognizeFoodProduceLicenseReqBuilder extends Struct<RecognizeFoodProduceLicenseReqBuilder>{

			body(body:Ref<RecognizeFoodProduceLicenseReqBody>):Ref<RecognizeFoodProduceLicenseReqBuilder>
			build():Ref<RecognizeFoodProduceLicenseReq>
	}
	export interface RecognizeFoodProduceLicenseResp extends Struct<RecognizeFoodProduceLicenseResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeFoodProduceLicenseRespData>
			success():bool
	}
	export interface RecognizeFoodProduceLicenseRespData extends Struct<RecognizeFoodProduceLicenseRespData>{

			foodProduceLicense:Ref<FoodProduceLicense>
	}
	export interface RecognizeHealthCertificatePathReqBodyBuilder extends Struct<RecognizeHealthCertificatePathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeHealthCertificatePathReqBodyBuilder>
			build():Ref<RecognizeHealthCertificateReqBody>
	}
	export interface RecognizeHealthCertificateReq extends Struct<RecognizeHealthCertificateReq>{

			body:Ref<RecognizeHealthCertificateReqBody>
	}
	export interface RecognizeHealthCertificateReqBody extends Struct<RecognizeHealthCertificateReqBody>{

			file:io.Reader
	}
	export interface RecognizeHealthCertificateReqBodyBuilder extends Struct<RecognizeHealthCertificateReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeHealthCertificateReqBodyBuilder>
			build():Ref<RecognizeHealthCertificateReqBody>
	}
	export interface RecognizeHealthCertificateReqBuilder extends Struct<RecognizeHealthCertificateReqBuilder>{

			body(body:Ref<RecognizeHealthCertificateReqBody>):Ref<RecognizeHealthCertificateReqBuilder>
			build():Ref<RecognizeHealthCertificateReq>
	}
	export interface RecognizeHealthCertificateResp extends Struct<RecognizeHealthCertificateResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeHealthCertificateRespData>
			success():bool
	}
	export interface RecognizeHealthCertificateRespData extends Struct<RecognizeHealthCertificateRespData>{

			healthCertificate:Ref<HealthCertificate>
	}
	export interface RecognizeHkmMainlandTravelPermitPathReqBodyBuilder extends Struct<RecognizeHkmMainlandTravelPermitPathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeHkmMainlandTravelPermitPathReqBodyBuilder>
			build():Ref<RecognizeHkmMainlandTravelPermitReqBody>
	}
	export interface RecognizeHkmMainlandTravelPermitReq extends Struct<RecognizeHkmMainlandTravelPermitReq>{

			body:Ref<RecognizeHkmMainlandTravelPermitReqBody>
	}
	export interface RecognizeHkmMainlandTravelPermitReqBody extends Struct<RecognizeHkmMainlandTravelPermitReqBody>{

			file:io.Reader
	}
	export interface RecognizeHkmMainlandTravelPermitReqBodyBuilder extends Struct<RecognizeHkmMainlandTravelPermitReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeHkmMainlandTravelPermitReqBodyBuilder>
			build():Ref<RecognizeHkmMainlandTravelPermitReqBody>
	}
	export interface RecognizeHkmMainlandTravelPermitReqBuilder extends Struct<RecognizeHkmMainlandTravelPermitReqBuilder>{

			body(body:Ref<RecognizeHkmMainlandTravelPermitReqBody>):Ref<RecognizeHkmMainlandTravelPermitReqBuilder>
			build():Ref<RecognizeHkmMainlandTravelPermitReq>
	}
	export interface RecognizeHkmMainlandTravelPermitResp extends Struct<RecognizeHkmMainlandTravelPermitResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeHkmMainlandTravelPermitRespData>
			success():bool
	}
	export interface RecognizeHkmMainlandTravelPermitRespData extends Struct<RecognizeHkmMainlandTravelPermitRespData>{

			hkmMainlandTravelPermit:Ref<HkmMainlandTravelPermit>
	}
	export interface RecognizeIdCardPathReqBodyBuilder extends Struct<RecognizeIdCardPathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeIdCardPathReqBodyBuilder>
			build():Ref<RecognizeIdCardReqBody>
	}
	export interface RecognizeIdCardReq extends Struct<RecognizeIdCardReq>{

			body:Ref<RecognizeIdCardReqBody>
	}
	export interface RecognizeIdCardReqBody extends Struct<RecognizeIdCardReqBody>{

			file:io.Reader
	}
	export interface RecognizeIdCardReqBodyBuilder extends Struct<RecognizeIdCardReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeIdCardReqBodyBuilder>
			build():Ref<RecognizeIdCardReqBody>
	}
	export interface RecognizeIdCardReqBuilder extends Struct<RecognizeIdCardReqBuilder>{

			body(body:Ref<RecognizeIdCardReqBody>):Ref<RecognizeIdCardReqBuilder>
			build():Ref<RecognizeIdCardReq>
	}
	export interface RecognizeIdCardResp extends Struct<RecognizeIdCardResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeIdCardRespData>
			success():bool
	}
	export interface RecognizeIdCardRespData extends Struct<RecognizeIdCardRespData>{

			idCard:Ref<IdCard>
	}
	export interface RecognizeTaxiInvoicePathReqBodyBuilder extends Struct<RecognizeTaxiInvoicePathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeTaxiInvoicePathReqBodyBuilder>
			build():Ref<RecognizeTaxiInvoiceReqBody>
	}
	export interface RecognizeTaxiInvoiceReq extends Struct<RecognizeTaxiInvoiceReq>{

			body:Ref<RecognizeTaxiInvoiceReqBody>
	}
	export interface RecognizeTaxiInvoiceReqBody extends Struct<RecognizeTaxiInvoiceReqBody>{

			file:io.Reader
	}
	export interface RecognizeTaxiInvoiceReqBodyBuilder extends Struct<RecognizeTaxiInvoiceReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeTaxiInvoiceReqBodyBuilder>
			build():Ref<RecognizeTaxiInvoiceReqBody>
	}
	export interface RecognizeTaxiInvoiceReqBuilder extends Struct<RecognizeTaxiInvoiceReqBuilder>{

			body(body:Ref<RecognizeTaxiInvoiceReqBody>):Ref<RecognizeTaxiInvoiceReqBuilder>
			build():Ref<RecognizeTaxiInvoiceReq>
	}
	export interface RecognizeTaxiInvoiceResp extends Struct<RecognizeTaxiInvoiceResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeTaxiInvoiceRespData>
			success():bool
	}
	export interface RecognizeTaxiInvoiceRespData extends Struct<RecognizeTaxiInvoiceRespData>{

			taxiInvoices:Ref<TaxiInvoice>[]
	}
	export interface RecognizeTrainInvoicePathReqBodyBuilder extends Struct<RecognizeTrainInvoicePathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeTrainInvoicePathReqBodyBuilder>
			build():Ref<RecognizeTrainInvoiceReqBody>
	}
	export interface RecognizeTrainInvoiceReq extends Struct<RecognizeTrainInvoiceReq>{

			body:Ref<RecognizeTrainInvoiceReqBody>
	}
	export interface RecognizeTrainInvoiceReqBody extends Struct<RecognizeTrainInvoiceReqBody>{

			file:io.Reader
	}
	export interface RecognizeTrainInvoiceReqBodyBuilder extends Struct<RecognizeTrainInvoiceReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeTrainInvoiceReqBodyBuilder>
			build():Ref<RecognizeTrainInvoiceReqBody>
	}
	export interface RecognizeTrainInvoiceReqBuilder extends Struct<RecognizeTrainInvoiceReqBuilder>{

			body(body:Ref<RecognizeTrainInvoiceReqBody>):Ref<RecognizeTrainInvoiceReqBuilder>
			build():Ref<RecognizeTrainInvoiceReq>
	}
	export interface RecognizeTrainInvoiceResp extends Struct<RecognizeTrainInvoiceResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeTrainInvoiceRespData>
			success():bool
	}
	export interface RecognizeTrainInvoiceRespData extends Struct<RecognizeTrainInvoiceRespData>{

			trainInvoices:Ref<TrainInvoice>[]
	}
	export interface RecognizeTwMainlandTravelPermitPathReqBodyBuilder extends Struct<RecognizeTwMainlandTravelPermitPathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeTwMainlandTravelPermitPathReqBodyBuilder>
			build():Ref<RecognizeTwMainlandTravelPermitReqBody>
	}
	export interface RecognizeTwMainlandTravelPermitReq extends Struct<RecognizeTwMainlandTravelPermitReq>{

			body:Ref<RecognizeTwMainlandTravelPermitReqBody>
	}
	export interface RecognizeTwMainlandTravelPermitReqBody extends Struct<RecognizeTwMainlandTravelPermitReqBody>{

			file:io.Reader
	}
	export interface RecognizeTwMainlandTravelPermitReqBodyBuilder extends Struct<RecognizeTwMainlandTravelPermitReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeTwMainlandTravelPermitReqBodyBuilder>
			build():Ref<RecognizeTwMainlandTravelPermitReqBody>
	}
	export interface RecognizeTwMainlandTravelPermitReqBuilder extends Struct<RecognizeTwMainlandTravelPermitReqBuilder>{

			body(body:Ref<RecognizeTwMainlandTravelPermitReqBody>):Ref<RecognizeTwMainlandTravelPermitReqBuilder>
			build():Ref<RecognizeTwMainlandTravelPermitReq>
	}
	export interface RecognizeTwMainlandTravelPermitResp extends Struct<RecognizeTwMainlandTravelPermitResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeTwMainlandTravelPermitRespData>
			success():bool
	}
	export interface RecognizeTwMainlandTravelPermitRespData extends Struct<RecognizeTwMainlandTravelPermitRespData>{

			twMainlandTravelPermit:Ref<TwMainlandTravelPermit>
	}
	export interface RecognizeVatInvoicePathReqBodyBuilder extends Struct<RecognizeVatInvoicePathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeVatInvoicePathReqBodyBuilder>
			build():Ref<RecognizeVatInvoiceReqBody>
	}
	export interface RecognizeVatInvoiceReq extends Struct<RecognizeVatInvoiceReq>{

			body:Ref<RecognizeVatInvoiceReqBody>
	}
	export interface RecognizeVatInvoiceReqBody extends Struct<RecognizeVatInvoiceReqBody>{

			file:io.Reader
	}
	export interface RecognizeVatInvoiceReqBodyBuilder extends Struct<RecognizeVatInvoiceReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeVatInvoiceReqBodyBuilder>
			build():Ref<RecognizeVatInvoiceReqBody>
	}
	export interface RecognizeVatInvoiceReqBuilder extends Struct<RecognizeVatInvoiceReqBuilder>{

			body(body:Ref<RecognizeVatInvoiceReqBody>):Ref<RecognizeVatInvoiceReqBuilder>
			build():Ref<RecognizeVatInvoiceReq>
	}
	export interface RecognizeVatInvoiceResp extends Struct<RecognizeVatInvoiceResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeVatInvoiceRespData>
			success():bool
	}
	export interface RecognizeVatInvoiceRespData extends Struct<RecognizeVatInvoiceRespData>{

			vatInvoices:Ref<VatInvoice>[]
	}
	export interface RecognizeVehicleInvoicePathReqBodyBuilder extends Struct<RecognizeVehicleInvoicePathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeVehicleInvoicePathReqBodyBuilder>
			build():Ref<RecognizeVehicleInvoiceReqBody>
	}
	export interface RecognizeVehicleInvoiceReq extends Struct<RecognizeVehicleInvoiceReq>{

			body:Ref<RecognizeVehicleInvoiceReqBody>
	}
	export interface RecognizeVehicleInvoiceReqBody extends Struct<RecognizeVehicleInvoiceReqBody>{

			file:io.Reader
	}
	export interface RecognizeVehicleInvoiceReqBodyBuilder extends Struct<RecognizeVehicleInvoiceReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeVehicleInvoiceReqBodyBuilder>
			build():Ref<RecognizeVehicleInvoiceReqBody>
	}
	export interface RecognizeVehicleInvoiceReqBuilder extends Struct<RecognizeVehicleInvoiceReqBuilder>{

			body(body:Ref<RecognizeVehicleInvoiceReqBody>):Ref<RecognizeVehicleInvoiceReqBuilder>
			build():Ref<RecognizeVehicleInvoiceReq>
	}
	export interface RecognizeVehicleInvoiceResp extends Struct<RecognizeVehicleInvoiceResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeVehicleInvoiceRespData>
			success():bool
	}
	export interface RecognizeVehicleInvoiceRespData extends Struct<RecognizeVehicleInvoiceRespData>{

			vehicleInvoice:Ref<VehicleInvoice>
	}
	export interface RecognizeVehicleLicensePathReqBodyBuilder extends Struct<RecognizeVehicleLicensePathReqBodyBuilder>{

			filePath(filePath:string):Ref<RecognizeVehicleLicensePathReqBodyBuilder>
			build():Ref<RecognizeVehicleLicenseReqBody>
	}
	export interface RecognizeVehicleLicenseReq extends Struct<RecognizeVehicleLicenseReq>{

			body:Ref<RecognizeVehicleLicenseReqBody>
	}
	export interface RecognizeVehicleLicenseReqBody extends Struct<RecognizeVehicleLicenseReqBody>{

			file:io.Reader
	}
	export interface RecognizeVehicleLicenseReqBodyBuilder extends Struct<RecognizeVehicleLicenseReqBodyBuilder>{

			file(file:io.Reader):Ref<RecognizeVehicleLicenseReqBodyBuilder>
			build():Ref<RecognizeVehicleLicenseReqBody>
	}
	export interface RecognizeVehicleLicenseReqBuilder extends Struct<RecognizeVehicleLicenseReqBuilder>{

			body(body:Ref<RecognizeVehicleLicenseReqBody>):Ref<RecognizeVehicleLicenseReqBuilder>
			build():Ref<RecognizeVehicleLicenseReq>
	}
	export interface RecognizeVehicleLicenseResp extends Struct<RecognizeVehicleLicenseResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecognizeVehicleLicenseRespData>
			success():bool
	}
	export interface RecognizeVehicleLicenseRespData extends Struct<RecognizeVehicleLicenseRespData>{

			vehicleLicense:Ref<VehicleLicense>
	}
	export interface RecognizedEntities extends Struct<RecognizedEntities>{

			entities:Ref<RecognizedEntity>[]
	}
	export interface RecognizedEntitiesBuilder extends Struct<RecognizedEntitiesBuilder>{

			entities(entities:Ref<RecognizedEntity>[]):Ref<RecognizedEntitiesBuilder>
			build():Ref<RecognizedEntities>
	}
	export interface RecognizedEntity extends Struct<RecognizedEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface RecognizedEntityBuilder extends Struct<RecognizedEntityBuilder>{

			type(type_:string):Ref<RecognizedEntityBuilder>
			value(value:string):Ref<RecognizedEntityBuilder>
			build():Ref<RecognizedEntity>
	}
	export interface Resume extends Struct<Resume>{

			fileMd5:Ref<string>
			content:Ref<string>
			newContent:Ref<string>
			name:Ref<string>
			email:Ref<string>
			mobile:Ref<string>
			mobileIsVirtual:Ref<bool>
			countryCode:Ref<string>
			educations:Ref<ResumeEducation>[]
			careers:Ref<ResumeCareer>[]
			projects:Ref<ResumeProject>[]
			workYear:Ref<int>
			dateOfBirth:Ref<string>
			gender:Ref<int>
			willingPositions:string[]
			currentLocation:Ref<string>
			willingLocations:string[]
			homeLocation:Ref<string>
			languages:Ref<ResumeLanguage>[]
			awards:Ref<ResumeAward>[]
			certificates:Ref<ResumeCertificate>[]
			competitions:Ref<ResumeCompetition>[]
			selfEvaluation:Ref<string>
			urls:string[]
			socialLinks:string[]
	}
	export interface ResumeAward extends Struct<ResumeAward>{

			award:Ref<string>
			date:Ref<string>
			description:Ref<string>
	}
	export interface ResumeAwardBuilder extends Struct<ResumeAwardBuilder>{

			award(award:string):Ref<ResumeAwardBuilder>
			date(date:string):Ref<ResumeAwardBuilder>
			description(description:string):Ref<ResumeAwardBuilder>
			build():Ref<ResumeAward>
	}
	export interface ResumeBuilder extends Struct<ResumeBuilder>{

			fileMd5(fileMd5:string):Ref<ResumeBuilder>
			content(content:string):Ref<ResumeBuilder>
			newContent(newContent:string):Ref<ResumeBuilder>
			name(name:string):Ref<ResumeBuilder>
			email(email:string):Ref<ResumeBuilder>
			mobile(mobile:string):Ref<ResumeBuilder>
			mobileIsVirtual(mobileIsVirtual:bool):Ref<ResumeBuilder>
			countryCode(countryCode:string):Ref<ResumeBuilder>
			educations(educations:Ref<ResumeEducation>[]):Ref<ResumeBuilder>
			careers(careers:Ref<ResumeCareer>[]):Ref<ResumeBuilder>
			projects(projects:Ref<ResumeProject>[]):Ref<ResumeBuilder>
			workYear(workYear:int):Ref<ResumeBuilder>
			dateOfBirth(dateOfBirth:string):Ref<ResumeBuilder>
			gender(gender:int):Ref<ResumeBuilder>
			willingPositions(willingPositions:string[]):Ref<ResumeBuilder>
			currentLocation(currentLocation:string):Ref<ResumeBuilder>
			willingLocations(willingLocations:string[]):Ref<ResumeBuilder>
			homeLocation(homeLocation:string):Ref<ResumeBuilder>
			languages(languages:Ref<ResumeLanguage>[]):Ref<ResumeBuilder>
			awards(awards:Ref<ResumeAward>[]):Ref<ResumeBuilder>
			certificates(certificates:Ref<ResumeCertificate>[]):Ref<ResumeBuilder>
			competitions(competitions:Ref<ResumeCompetition>[]):Ref<ResumeBuilder>
			selfEvaluation(selfEvaluation:string):Ref<ResumeBuilder>
			urls(urls:string[]):Ref<ResumeBuilder>
			socialLinks(socialLinks:string[]):Ref<ResumeBuilder>
			build():Ref<Resume>
	}
	export interface ResumeCareer extends Struct<ResumeCareer>{

			company:Ref<string>
			startDate:Ref<string>
			startTime:Ref<string>
			endDate:Ref<string>
			endTime:Ref<string>
			title:Ref<string>
			type:Ref<int>
			typeStr:Ref<string>
			jobDescription:Ref<string>
	}
	export interface ResumeCareerBuilder extends Struct<ResumeCareerBuilder>{

			company(company:string):Ref<ResumeCareerBuilder>
			startDate(startDate:string):Ref<ResumeCareerBuilder>
			startTime(startTime:string):Ref<ResumeCareerBuilder>
			endDate(endDate:string):Ref<ResumeCareerBuilder>
			endTime(endTime:string):Ref<ResumeCareerBuilder>
			title(title:string):Ref<ResumeCareerBuilder>
			type(type_:int):Ref<ResumeCareerBuilder>
			typeStr(typeStr:string):Ref<ResumeCareerBuilder>
			jobDescription(jobDescription:string):Ref<ResumeCareerBuilder>
			build():Ref<ResumeCareer>
	}
	export interface ResumeCertificate extends Struct<ResumeCertificate>{

			name:Ref<string>
			desc:Ref<string>
	}
	export interface ResumeCertificateBuilder extends Struct<ResumeCertificateBuilder>{

			name(name:string):Ref<ResumeCertificateBuilder>
			desc(desc:string):Ref<ResumeCertificateBuilder>
			build():Ref<ResumeCertificate>
	}
	export interface ResumeCompetition extends Struct<ResumeCompetition>{

			name:Ref<string>
			desc:Ref<string>
	}
	export interface ResumeCompetitionBuilder extends Struct<ResumeCompetitionBuilder>{

			name(name:string):Ref<ResumeCompetitionBuilder>
			desc(desc:string):Ref<ResumeCompetitionBuilder>
			build():Ref<ResumeCompetition>
	}
	export interface ResumeEducation extends Struct<ResumeEducation>{

			school:Ref<string>
			startDate:Ref<string>
			startTime:Ref<string>
			endDate:Ref<string>
			endTime:Ref<string>
			major:Ref<string>
			degree:Ref<string>
			qualification:Ref<int>
	}
	export interface ResumeEducationBuilder extends Struct<ResumeEducationBuilder>{

			school(school:string):Ref<ResumeEducationBuilder>
			startDate(startDate:string):Ref<ResumeEducationBuilder>
			startTime(startTime:string):Ref<ResumeEducationBuilder>
			endDate(endDate:string):Ref<ResumeEducationBuilder>
			endTime(endTime:string):Ref<ResumeEducationBuilder>
			major(major:string):Ref<ResumeEducationBuilder>
			degree(degree:string):Ref<ResumeEducationBuilder>
			qualification(qualification:int):Ref<ResumeEducationBuilder>
			build():Ref<ResumeEducation>
	}
	export interface ResumeLanguage extends Struct<ResumeLanguage>{

			level:Ref<int>
			description:Ref<string>
	}
	export interface ResumeLanguageBuilder extends Struct<ResumeLanguageBuilder>{

			level(level:int):Ref<ResumeLanguageBuilder>
			description(description:string):Ref<ResumeLanguageBuilder>
			build():Ref<ResumeLanguage>
	}
	export interface ResumeProject extends Struct<ResumeProject>{

			name:Ref<string>
			title:Ref<string>
			startDate:Ref<string>
			startTime:Ref<string>
			endDate:Ref<string>
			endTime:Ref<string>
			description:Ref<string>
	}
	export interface ResumeProjectBuilder extends Struct<ResumeProjectBuilder>{

			name(name:string):Ref<ResumeProjectBuilder>
			title(title:string):Ref<ResumeProjectBuilder>
			startDate(startDate:string):Ref<ResumeProjectBuilder>
			startTime(startTime:string):Ref<ResumeProjectBuilder>
			endDate(endDate:string):Ref<ResumeProjectBuilder>
			endTime(endTime:string):Ref<ResumeProjectBuilder>
			description(description:string):Ref<ResumeProjectBuilder>
			build():Ref<ResumeProject>
	}
	export interface TaxiEnitity extends Struct<TaxiEnitity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface TaxiEnitityBuilder extends Struct<TaxiEnitityBuilder>{

			type(type_:string):Ref<TaxiEnitityBuilder>
			value(value:string):Ref<TaxiEnitityBuilder>
			build():Ref<TaxiEnitity>
	}
	export interface TaxiEntity extends Struct<TaxiEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface TaxiEntityBuilder extends Struct<TaxiEntityBuilder>{

			type(type_:string):Ref<TaxiEntityBuilder>
			value(value:string):Ref<TaxiEntityBuilder>
			build():Ref<TaxiEntity>
	}
	export interface TaxiInvoice extends Struct<TaxiInvoice>{

			entities:Ref<TaxiEntity>[]
	}
	export interface TaxiInvoiceBuilder extends Struct<TaxiInvoiceBuilder>{

			entities(entities:Ref<TaxiEntity>[]):Ref<TaxiInvoiceBuilder>
			build():Ref<TaxiInvoice>
	}
	export interface TrainEntity extends Struct<TrainEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface TrainEntityBuilder extends Struct<TrainEntityBuilder>{

			type(type_:string):Ref<TrainEntityBuilder>
			value(value:string):Ref<TrainEntityBuilder>
			build():Ref<TrainEntity>
	}
	export interface TrainInvoice extends Struct<TrainInvoice>{

			entities:Ref<TrainEntity>[]
	}
	export interface TrainInvoiceBuilder extends Struct<TrainInvoiceBuilder>{

			entities(entities:Ref<TrainEntity>[]):Ref<TrainInvoiceBuilder>
			build():Ref<TrainInvoice>
	}
	export interface TwMainlandTravelPermit extends Struct<TwMainlandTravelPermit>{

			entities:Ref<TwMainlandTravelPermitEntity>[]
	}
	export interface TwMainlandTravelPermitBuilder extends Struct<TwMainlandTravelPermitBuilder>{

			entities(entities:Ref<TwMainlandTravelPermitEntity>[]):Ref<TwMainlandTravelPermitBuilder>
			build():Ref<TwMainlandTravelPermit>
	}
	export interface TwMainlandTravelPermitEntity extends Struct<TwMainlandTravelPermitEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface TwMainlandTravelPermitEntityBuilder extends Struct<TwMainlandTravelPermitEntityBuilder>{

			type(type_:string):Ref<TwMainlandTravelPermitEntityBuilder>
			value(value:string):Ref<TwMainlandTravelPermitEntityBuilder>
			build():Ref<TwMainlandTravelPermitEntity>
	}
	export interface V1 extends Struct<V1>{

			bankCard:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeBankCardReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeBankCardResp>
			}>
			businessCard:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeBusinessCardReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeBusinessCardResp>
			}>
			businessLicense:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeBusinessLicenseReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeBusinessLicenseResp>
			}>
			chinesePassport:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeChinesePassportReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeChinesePassportResp>
			}>
			contract:Ref<{
			
				fieldExtraction(ctx:context.Context,req:Ref<FieldExtractionContractReq>,...options:larkcore.RequestOptionFunc[]):Ref<FieldExtractionContractResp>
			}>
			drivingLicense:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeDrivingLicenseReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeDrivingLicenseResp>
			}>
			foodManageLicense:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeFoodManageLicenseReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeFoodManageLicenseResp>
			}>
			foodProduceLicense:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeFoodProduceLicenseReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeFoodProduceLicenseResp>
			}>
			healthCertificate:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeHealthCertificateReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeHealthCertificateResp>
			}>
			hkmMainlandTravelPermit:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeHkmMainlandTravelPermitReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeHkmMainlandTravelPermitResp>
			}>
			idCard:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeIdCardReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeIdCardResp>
			}>
			resume:Ref<{
			
				parse(ctx:context.Context,req:Ref<ParseResumeReq>,...options:larkcore.RequestOptionFunc[]):Ref<ParseResumeResp>
			}>
			taxiInvoice:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeTaxiInvoiceReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeTaxiInvoiceResp>
			}>
			trainInvoice:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeTrainInvoiceReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeTrainInvoiceResp>
			}>
			twMainlandTravelPermit:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeTwMainlandTravelPermitReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeTwMainlandTravelPermitResp>
			}>
			vatInvoice:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeVatInvoiceReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeVatInvoiceResp>
			}>
			vehicleInvoice:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeVehicleInvoiceReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeVehicleInvoiceResp>
			}>
			vehicleLicense:Ref<{
			
				recognize(ctx:context.Context,req:Ref<RecognizeVehicleLicenseReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecognizeVehicleLicenseResp>
			}>
	}
	export interface VatEntity extends Struct<VatEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface VatEntityBuilder extends Struct<VatEntityBuilder>{

			type(type_:string):Ref<VatEntityBuilder>
			value(value:string):Ref<VatEntityBuilder>
			build():Ref<VatEntity>
	}
	export interface VatInvoice extends Struct<VatInvoice>{

			entities:Ref<VatEntity>[]
	}
	export interface VatInvoiceBuilder extends Struct<VatInvoiceBuilder>{

			entities(entities:Ref<VatEntity>[]):Ref<VatInvoiceBuilder>
			build():Ref<VatInvoice>
	}
	export interface VehicleEntity extends Struct<VehicleEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface VehicleEntityBuilder extends Struct<VehicleEntityBuilder>{

			type(type_:string):Ref<VehicleEntityBuilder>
			value(value:string):Ref<VehicleEntityBuilder>
			build():Ref<VehicleEntity>
	}
	export interface VehicleInvoice extends Struct<VehicleInvoice>{

			entities:Ref<VehicleInvoiceEntity>[]
	}
	export interface VehicleInvoiceBuilder extends Struct<VehicleInvoiceBuilder>{

			entities(entities:Ref<VehicleInvoiceEntity>[]):Ref<VehicleInvoiceBuilder>
			build():Ref<VehicleInvoice>
	}
	export interface VehicleInvoiceEntity extends Struct<VehicleInvoiceEntity>{

			type:Ref<string>
			value:Ref<string>
	}
	export interface VehicleInvoiceEntityBuilder extends Struct<VehicleInvoiceEntityBuilder>{

			type(type_:string):Ref<VehicleInvoiceEntityBuilder>
			value(value:string):Ref<VehicleInvoiceEntityBuilder>
			build():Ref<VehicleInvoiceEntity>
	}
	export interface VehicleLicense extends Struct<VehicleLicense>{

			entities:Ref<VehicleEntity>[]
	}
	export interface VehicleLicenseBuilder extends Struct<VehicleLicenseBuilder>{

			entities(entities:Ref<VehicleEntity>[]):Ref<VehicleLicenseBuilder>
			build():Ref<VehicleLicense>
	}
	export function emptyRecognizeBusinessLicenseResp():RecognizeBusinessLicenseResp
	export function emptyRefRecognizeBusinessLicenseResp():Ref<RecognizeBusinessLicenseResp>
	export function refOfRecognizeBusinessLicenseResp(x:RecognizeBusinessLicenseResp,v:Ref<RecognizeBusinessLicenseResp>)
	export function unRefRecognizeBusinessLicenseResp(v:Ref<RecognizeBusinessLicenseResp>):RecognizeBusinessLicenseResp
	export function emptyFoodManageEntity():FoodManageEntity
	export function emptyRefFoodManageEntity():Ref<FoodManageEntity>
	export function refOfFoodManageEntity(x:FoodManageEntity,v:Ref<FoodManageEntity>)
	export function unRefFoodManageEntity(v:Ref<FoodManageEntity>):FoodManageEntity
	export function emptyRecognizeBusinessLicenseReq():RecognizeBusinessLicenseReq
	export function emptyRefRecognizeBusinessLicenseReq():Ref<RecognizeBusinessLicenseReq>
	export function refOfRecognizeBusinessLicenseReq(x:RecognizeBusinessLicenseReq,v:Ref<RecognizeBusinessLicenseReq>)
	export function unRefRecognizeBusinessLicenseReq(v:Ref<RecognizeBusinessLicenseReq>):RecognizeBusinessLicenseReq
	export function emptyRecognizeVehicleInvoiceRespData():RecognizeVehicleInvoiceRespData
	export function emptyRefRecognizeVehicleInvoiceRespData():Ref<RecognizeVehicleInvoiceRespData>
	export function refOfRecognizeVehicleInvoiceRespData(x:RecognizeVehicleInvoiceRespData,v:Ref<RecognizeVehicleInvoiceRespData>)
	export function unRefRecognizeVehicleInvoiceRespData(v:Ref<RecognizeVehicleInvoiceRespData>):RecognizeVehicleInvoiceRespData
	export function emptyBankInfo():BankInfo
	export function emptyRefBankInfo():Ref<BankInfo>
	export function refOfBankInfo(x:BankInfo,v:Ref<BankInfo>)
	export function unRefBankInfo(v:Ref<BankInfo>):BankInfo
	export function emptyFoodManageLicense():FoodManageLicense
	export function emptyRefFoodManageLicense():Ref<FoodManageLicense>
	export function refOfFoodManageLicense(x:FoodManageLicense,v:Ref<FoodManageLicense>)
	export function unRefFoodManageLicense(v:Ref<FoodManageLicense>):FoodManageLicense
	export function emptyRecognizeVatInvoiceRespData():RecognizeVatInvoiceRespData
	export function emptyRefRecognizeVatInvoiceRespData():Ref<RecognizeVatInvoiceRespData>
	export function refOfRecognizeVatInvoiceRespData(x:RecognizeVatInvoiceRespData,v:Ref<RecognizeVatInvoiceRespData>)
	export function unRefRecognizeVatInvoiceRespData(v:Ref<RecognizeVatInvoiceRespData>):RecognizeVatInvoiceRespData
	export function emptyParseResumeResp():ParseResumeResp
	export function emptyRefParseResumeResp():Ref<ParseResumeResp>
	export function refOfParseResumeResp(x:ParseResumeResp,v:Ref<ParseResumeResp>)
	export function unRefParseResumeResp(v:Ref<ParseResumeResp>):ParseResumeResp
	export function emptyParseResumeReqBody():ParseResumeReqBody
	export function emptyRefParseResumeReqBody():Ref<ParseResumeReqBody>
	export function refOfParseResumeReqBody(x:ParseResumeReqBody,v:Ref<ParseResumeReqBody>)
	export function unRefParseResumeReqBody(v:Ref<ParseResumeReqBody>):ParseResumeReqBody
	export function emptyExtractTime():ExtractTime
	export function emptyRefExtractTime():Ref<ExtractTime>
	export function refOfExtractTime(x:ExtractTime,v:Ref<ExtractTime>)
	export function unRefExtractTime(v:Ref<ExtractTime>):ExtractTime
	export function emptyHealthCertificateEntity():HealthCertificateEntity
	export function emptyRefHealthCertificateEntity():Ref<HealthCertificateEntity>
	export function refOfHealthCertificateEntity(x:HealthCertificateEntity,v:Ref<HealthCertificateEntity>)
	export function unRefHealthCertificateEntity(v:Ref<HealthCertificateEntity>):HealthCertificateEntity
	export function emptyRecognizeChinesePassportReqBody():RecognizeChinesePassportReqBody
	export function emptyRefRecognizeChinesePassportReqBody():Ref<RecognizeChinesePassportReqBody>
	export function refOfRecognizeChinesePassportReqBody(x:RecognizeChinesePassportReqBody,v:Ref<RecognizeChinesePassportReqBody>)
	export function unRefRecognizeChinesePassportReqBody(v:Ref<RecognizeChinesePassportReqBody>):RecognizeChinesePassportReqBody
	export function emptyIdEntity():IdEntity
	export function emptyRefIdEntity():Ref<IdEntity>
	export function refOfIdEntity(x:IdEntity,v:Ref<IdEntity>)
	export function unRefIdEntity(v:Ref<IdEntity>):IdEntity
	export function emptyRecognizeDrivingLicenseReq():RecognizeDrivingLicenseReq
	export function emptyRefRecognizeDrivingLicenseReq():Ref<RecognizeDrivingLicenseReq>
	export function refOfRecognizeDrivingLicenseReq(x:RecognizeDrivingLicenseReq,v:Ref<RecognizeDrivingLicenseReq>)
	export function unRefRecognizeDrivingLicenseReq(v:Ref<RecognizeDrivingLicenseReq>):RecognizeDrivingLicenseReq
	export function emptyChinesePassportEntity():ChinesePassportEntity
	export function emptyRefChinesePassportEntity():Ref<ChinesePassportEntity>
	export function refOfChinesePassportEntity(x:ChinesePassportEntity,v:Ref<ChinesePassportEntity>)
	export function unRefChinesePassportEntity(v:Ref<ChinesePassportEntity>):ChinesePassportEntity
	export function emptyExtractCurrency():ExtractCurrency
	export function emptyRefExtractCurrency():Ref<ExtractCurrency>
	export function refOfExtractCurrency(x:ExtractCurrency,v:Ref<ExtractCurrency>)
	export function unRefExtractCurrency(v:Ref<ExtractCurrency>):ExtractCurrency
	export function emptyFieldExtractionContractReqBody():FieldExtractionContractReqBody
	export function emptyRefFieldExtractionContractReqBody():Ref<FieldExtractionContractReqBody>
	export function refOfFieldExtractionContractReqBody(x:FieldExtractionContractReqBody,v:Ref<FieldExtractionContractReqBody>)
	export function unRefFieldExtractionContractReqBody(v:Ref<FieldExtractionContractReqBody>):FieldExtractionContractReqBody
	export function emptyRecognizeVatInvoiceReq():RecognizeVatInvoiceReq
	export function emptyRefRecognizeVatInvoiceReq():Ref<RecognizeVatInvoiceReq>
	export function refOfRecognizeVatInvoiceReq(x:RecognizeVatInvoiceReq,v:Ref<RecognizeVatInvoiceReq>)
	export function unRefRecognizeVatInvoiceReq(v:Ref<RecognizeVatInvoiceReq>):RecognizeVatInvoiceReq
	export function emptyDocChunkResult():DocChunkResult
	export function emptyRefDocChunkResult():Ref<DocChunkResult>
	export function refOfDocChunkResult(x:DocChunkResult,v:Ref<DocChunkResult>)
	export function unRefDocChunkResult(v:Ref<DocChunkResult>):DocChunkResult
	export function emptyDocChunkTableDetail():DocChunkTableDetail
	export function emptyRefDocChunkTableDetail():Ref<DocChunkTableDetail>
	export function refOfDocChunkTableDetail(x:DocChunkTableDetail,v:Ref<DocChunkTableDetail>)
	export function unRefDocChunkTableDetail(v:Ref<DocChunkTableDetail>):DocChunkTableDetail
	export function emptyRecognizedEntity():RecognizedEntity
	export function emptyRefRecognizedEntity():Ref<RecognizedEntity>
	export function refOfRecognizedEntity(x:RecognizedEntity,v:Ref<RecognizedEntity>)
	export function unRefRecognizedEntity(v:Ref<RecognizedEntity>):RecognizedEntity
	export function emptyParseResumeReq():ParseResumeReq
	export function emptyRefParseResumeReq():Ref<ParseResumeReq>
	export function refOfParseResumeReq(x:ParseResumeReq,v:Ref<ParseResumeReq>)
	export function unRefParseResumeReq(v:Ref<ParseResumeReq>):ParseResumeReq
	export function emptyRecognizeHkmMainlandTravelPermitRespData():RecognizeHkmMainlandTravelPermitRespData
	export function emptyRefRecognizeHkmMainlandTravelPermitRespData():Ref<RecognizeHkmMainlandTravelPermitRespData>
	export function refOfRecognizeHkmMainlandTravelPermitRespData(x:RecognizeHkmMainlandTravelPermitRespData,v:Ref<RecognizeHkmMainlandTravelPermitRespData>)
	export function unRefRecognizeHkmMainlandTravelPermitRespData(v:Ref<RecognizeHkmMainlandTravelPermitRespData>):RecognizeHkmMainlandTravelPermitRespData
	export function emptyRecognizeVehicleLicenseRespData():RecognizeVehicleLicenseRespData
	export function emptyRefRecognizeVehicleLicenseRespData():Ref<RecognizeVehicleLicenseRespData>
	export function refOfRecognizeVehicleLicenseRespData(x:RecognizeVehicleLicenseRespData,v:Ref<RecognizeVehicleLicenseRespData>)
	export function unRefRecognizeVehicleLicenseRespData(v:Ref<RecognizeVehicleLicenseRespData>):RecognizeVehicleLicenseRespData
	export function emptyRecognizeDrivingLicenseRespData():RecognizeDrivingLicenseRespData
	export function emptyRefRecognizeDrivingLicenseRespData():Ref<RecognizeDrivingLicenseRespData>
	export function refOfRecognizeDrivingLicenseRespData(x:RecognizeDrivingLicenseRespData,v:Ref<RecognizeDrivingLicenseRespData>)
	export function unRefRecognizeDrivingLicenseRespData(v:Ref<RecognizeDrivingLicenseRespData>):RecognizeDrivingLicenseRespData
	export function emptyRecognizeTaxiInvoiceResp():RecognizeTaxiInvoiceResp
	export function emptyRefRecognizeTaxiInvoiceResp():Ref<RecognizeTaxiInvoiceResp>
	export function refOfRecognizeTaxiInvoiceResp(x:RecognizeTaxiInvoiceResp,v:Ref<RecognizeTaxiInvoiceResp>)
	export function unRefRecognizeTaxiInvoiceResp(v:Ref<RecognizeTaxiInvoiceResp>):RecognizeTaxiInvoiceResp
	export function emptyRecognizeVehicleInvoiceReqBody():RecognizeVehicleInvoiceReqBody
	export function emptyRefRecognizeVehicleInvoiceReqBody():Ref<RecognizeVehicleInvoiceReqBody>
	export function refOfRecognizeVehicleInvoiceReqBody(x:RecognizeVehicleInvoiceReqBody,v:Ref<RecognizeVehicleInvoiceReqBody>)
	export function unRefRecognizeVehicleInvoiceReqBody(v:Ref<RecognizeVehicleInvoiceReqBody>):RecognizeVehicleInvoiceReqBody
	export function emptyDrvingLicense():DrvingLicense
	export function emptyRefDrvingLicense():Ref<DrvingLicense>
	export function refOfDrvingLicense(x:DrvingLicense,v:Ref<DrvingLicense>)
	export function unRefDrvingLicense(v:Ref<DrvingLicense>):DrvingLicense
	export function emptyRecognizeVehicleLicenseReqBody():RecognizeVehicleLicenseReqBody
	export function emptyRefRecognizeVehicleLicenseReqBody():Ref<RecognizeVehicleLicenseReqBody>
	export function refOfRecognizeVehicleLicenseReqBody(x:RecognizeVehicleLicenseReqBody,v:Ref<RecognizeVehicleLicenseReqBody>)
	export function unRefRecognizeVehicleLicenseReqBody(v:Ref<RecognizeVehicleLicenseReqBody>):RecognizeVehicleLicenseReqBody
	export function emptyBankCard():BankCard
	export function emptyRefBankCard():Ref<BankCard>
	export function refOfBankCard(x:BankCard,v:Ref<BankCard>)
	export function unRefBankCard(v:Ref<BankCard>):BankCard
	export function emptyExtractPrice():ExtractPrice
	export function emptyRefExtractPrice():Ref<ExtractPrice>
	export function refOfExtractPrice(x:ExtractPrice,v:Ref<ExtractPrice>)
	export function unRefExtractPrice(v:Ref<ExtractPrice>):ExtractPrice
	export function emptyRecognizeDrivingLicenseResp():RecognizeDrivingLicenseResp
	export function emptyRefRecognizeDrivingLicenseResp():Ref<RecognizeDrivingLicenseResp>
	export function refOfRecognizeDrivingLicenseResp(x:RecognizeDrivingLicenseResp,v:Ref<RecognizeDrivingLicenseResp>)
	export function unRefRecognizeDrivingLicenseResp(v:Ref<RecognizeDrivingLicenseResp>):RecognizeDrivingLicenseResp
	export function emptyBankEntity():BankEntity
	export function emptyRefBankEntity():Ref<BankEntity>
	export function refOfBankEntity(x:BankEntity,v:Ref<BankEntity>)
	export function unRefBankEntity(v:Ref<BankEntity>):BankEntity
	export function emptyFoodProduceEntity():FoodProduceEntity
	export function emptyRefFoodProduceEntity():Ref<FoodProduceEntity>
	export function refOfFoodProduceEntity(x:FoodProduceEntity,v:Ref<FoodProduceEntity>)
	export function unRefFoodProduceEntity(v:Ref<FoodProduceEntity>):FoodProduceEntity
	export function emptyRecognizeBankCardReqBody():RecognizeBankCardReqBody
	export function emptyRefRecognizeBankCardReqBody():Ref<RecognizeBankCardReqBody>
	export function refOfRecognizeBankCardReqBody(x:RecognizeBankCardReqBody,v:Ref<RecognizeBankCardReqBody>)
	export function unRefRecognizeBankCardReqBody(v:Ref<RecognizeBankCardReqBody>):RecognizeBankCardReqBody
	export function emptyRecognizeTrainInvoiceReqBody():RecognizeTrainInvoiceReqBody
	export function emptyRefRecognizeTrainInvoiceReqBody():Ref<RecognizeTrainInvoiceReqBody>
	export function refOfRecognizeTrainInvoiceReqBody(x:RecognizeTrainInvoiceReqBody,v:Ref<RecognizeTrainInvoiceReqBody>)
	export function unRefRecognizeTrainInvoiceReqBody(v:Ref<RecognizeTrainInvoiceReqBody>):RecognizeTrainInvoiceReqBody
	export function emptyVatInvoice():VatInvoice
	export function emptyRefVatInvoice():Ref<VatInvoice>
	export function refOfVatInvoice(x:VatInvoice,v:Ref<VatInvoice>)
	export function unRefVatInvoice(v:Ref<VatInvoice>):VatInvoice
	export function emptyTwMainlandTravelPermitEntity():TwMainlandTravelPermitEntity
	export function emptyRefTwMainlandTravelPermitEntity():Ref<TwMainlandTravelPermitEntity>
	export function refOfTwMainlandTravelPermitEntity(x:TwMainlandTravelPermitEntity,v:Ref<TwMainlandTravelPermitEntity>)
	export function unRefTwMainlandTravelPermitEntity(v:Ref<TwMainlandTravelPermitEntity>):TwMainlandTravelPermitEntity
	export function emptyHkmMainlandTravelPermit():HkmMainlandTravelPermit
	export function emptyRefHkmMainlandTravelPermit():Ref<HkmMainlandTravelPermit>
	export function refOfHkmMainlandTravelPermit(x:HkmMainlandTravelPermit,v:Ref<HkmMainlandTravelPermit>)
	export function unRefHkmMainlandTravelPermit(v:Ref<HkmMainlandTravelPermit>):HkmMainlandTravelPermit
	export function emptyRecognizeFoodManageLicenseResp():RecognizeFoodManageLicenseResp
	export function emptyRefRecognizeFoodManageLicenseResp():Ref<RecognizeFoodManageLicenseResp>
	export function refOfRecognizeFoodManageLicenseResp(x:RecognizeFoodManageLicenseResp,v:Ref<RecognizeFoodManageLicenseResp>)
	export function unRefRecognizeFoodManageLicenseResp(v:Ref<RecognizeFoodManageLicenseResp>):RecognizeFoodManageLicenseResp
	export function emptyRecognizeTwMainlandTravelPermitRespData():RecognizeTwMainlandTravelPermitRespData
	export function emptyRefRecognizeTwMainlandTravelPermitRespData():Ref<RecognizeTwMainlandTravelPermitRespData>
	export function refOfRecognizeTwMainlandTravelPermitRespData(x:RecognizeTwMainlandTravelPermitRespData,v:Ref<RecognizeTwMainlandTravelPermitRespData>)
	export function unRefRecognizeTwMainlandTravelPermitRespData(v:Ref<RecognizeTwMainlandTravelPermitRespData>):RecognizeTwMainlandTravelPermitRespData
	export function emptyTwMainlandTravelPermit():TwMainlandTravelPermit
	export function emptyRefTwMainlandTravelPermit():Ref<TwMainlandTravelPermit>
	export function refOfTwMainlandTravelPermit(x:TwMainlandTravelPermit,v:Ref<TwMainlandTravelPermit>)
	export function unRefTwMainlandTravelPermit(v:Ref<TwMainlandTravelPermit>):TwMainlandTravelPermit
	export function emptyChinesePassport():ChinesePassport
	export function emptyRefChinesePassport():Ref<ChinesePassport>
	export function refOfChinesePassport(x:ChinesePassport,v:Ref<ChinesePassport>)
	export function unRefChinesePassport(v:Ref<ChinesePassport>):ChinesePassport
	export function emptyRecognizedEntities():RecognizedEntities
	export function emptyRefRecognizedEntities():Ref<RecognizedEntities>
	export function refOfRecognizedEntities(x:RecognizedEntities,v:Ref<RecognizedEntities>)
	export function unRefRecognizedEntities(v:Ref<RecognizedEntities>):RecognizedEntities
	export function emptyBusinessLicense():BusinessLicense
	export function emptyRefBusinessLicense():Ref<BusinessLicense>
	export function refOfBusinessLicense(x:BusinessLicense,v:Ref<BusinessLicense>)
	export function unRefBusinessLicense(v:Ref<BusinessLicense>):BusinessLicense
	export function emptyRecognizeFoodManageLicenseRespData():RecognizeFoodManageLicenseRespData
	export function emptyRefRecognizeFoodManageLicenseRespData():Ref<RecognizeFoodManageLicenseRespData>
	export function refOfRecognizeFoodManageLicenseRespData(x:RecognizeFoodManageLicenseRespData,v:Ref<RecognizeFoodManageLicenseRespData>)
	export function unRefRecognizeFoodManageLicenseRespData(v:Ref<RecognizeFoodManageLicenseRespData>):RecognizeFoodManageLicenseRespData
	export function emptyV1():V1
	export function emptyRefV1():Ref<V1>
	export function refOfV1(x:V1,v:Ref<V1>)
	export function unRefV1(v:Ref<V1>):V1
	export function emptyHkmMainlandTravelPermitEntity():HkmMainlandTravelPermitEntity
	export function emptyRefHkmMainlandTravelPermitEntity():Ref<HkmMainlandTravelPermitEntity>
	export function refOfHkmMainlandTravelPermitEntity(x:HkmMainlandTravelPermitEntity,v:Ref<HkmMainlandTravelPermitEntity>)
	export function unRefHkmMainlandTravelPermitEntity(v:Ref<HkmMainlandTravelPermitEntity>):HkmMainlandTravelPermitEntity
	export function emptyRecognizeDrivingLicenseReqBody():RecognizeDrivingLicenseReqBody
	export function emptyRefRecognizeDrivingLicenseReqBody():Ref<RecognizeDrivingLicenseReqBody>
	export function refOfRecognizeDrivingLicenseReqBody(x:RecognizeDrivingLicenseReqBody,v:Ref<RecognizeDrivingLicenseReqBody>)
	export function unRefRecognizeDrivingLicenseReqBody(v:Ref<RecognizeDrivingLicenseReqBody>):RecognizeDrivingLicenseReqBody
	export function emptyRecognizeHkmMainlandTravelPermitResp():RecognizeHkmMainlandTravelPermitResp
	export function emptyRefRecognizeHkmMainlandTravelPermitResp():Ref<RecognizeHkmMainlandTravelPermitResp>
	export function refOfRecognizeHkmMainlandTravelPermitResp(x:RecognizeHkmMainlandTravelPermitResp,v:Ref<RecognizeHkmMainlandTravelPermitResp>)
	export function unRefRecognizeHkmMainlandTravelPermitResp(v:Ref<RecognizeHkmMainlandTravelPermitResp>):RecognizeHkmMainlandTravelPermitResp
	export function emptyRecognizeIdCardRespData():RecognizeIdCardRespData
	export function emptyRefRecognizeIdCardRespData():Ref<RecognizeIdCardRespData>
	export function refOfRecognizeIdCardRespData(x:RecognizeIdCardRespData,v:Ref<RecognizeIdCardRespData>)
	export function unRefRecognizeIdCardRespData(v:Ref<RecognizeIdCardRespData>):RecognizeIdCardRespData
	export function emptyTaxiEnitity():TaxiEnitity
	export function emptyRefTaxiEnitity():Ref<TaxiEnitity>
	export function refOfTaxiEnitity(x:TaxiEnitity,v:Ref<TaxiEnitity>)
	export function unRefTaxiEnitity(v:Ref<TaxiEnitity>):TaxiEnitity
	export function emptyFieldExtractionContractReq():FieldExtractionContractReq
	export function emptyRefFieldExtractionContractReq():Ref<FieldExtractionContractReq>
	export function refOfFieldExtractionContractReq(x:FieldExtractionContractReq,v:Ref<FieldExtractionContractReq>)
	export function unRefFieldExtractionContractReq(v:Ref<FieldExtractionContractReq>):FieldExtractionContractReq
	export function emptyTrainInvoice():TrainInvoice
	export function emptyRefTrainInvoice():Ref<TrainInvoice>
	export function refOfTrainInvoice(x:TrainInvoice,v:Ref<TrainInvoice>)
	export function unRefTrainInvoice(v:Ref<TrainInvoice>):TrainInvoice
	export function emptyBusinessEntity():BusinessEntity
	export function emptyRefBusinessEntity():Ref<BusinessEntity>
	export function refOfBusinessEntity(x:BusinessEntity,v:Ref<BusinessEntity>)
	export function unRefBusinessEntity(v:Ref<BusinessEntity>):BusinessEntity
	export function emptyRecognizeTaxiInvoiceReq():RecognizeTaxiInvoiceReq
	export function emptyRefRecognizeTaxiInvoiceReq():Ref<RecognizeTaxiInvoiceReq>
	export function refOfRecognizeTaxiInvoiceReq(x:RecognizeTaxiInvoiceReq,v:Ref<RecognizeTaxiInvoiceReq>)
	export function unRefRecognizeTaxiInvoiceReq(v:Ref<RecognizeTaxiInvoiceReq>):RecognizeTaxiInvoiceReq
	export function emptyTaxiInvoice():TaxiInvoice
	export function emptyRefTaxiInvoice():Ref<TaxiInvoice>
	export function refOfTaxiInvoice(x:TaxiInvoice,v:Ref<TaxiInvoice>)
	export function unRefTaxiInvoice(v:Ref<TaxiInvoice>):TaxiInvoice
	export function emptyHealthCertificate():HealthCertificate
	export function emptyRefHealthCertificate():Ref<HealthCertificate>
	export function refOfHealthCertificate(x:HealthCertificate,v:Ref<HealthCertificate>)
	export function unRefHealthCertificate(v:Ref<HealthCertificate>):HealthCertificate
	export function emptyRecognizeBusinessCardRespData():RecognizeBusinessCardRespData
	export function emptyRefRecognizeBusinessCardRespData():Ref<RecognizeBusinessCardRespData>
	export function refOfRecognizeBusinessCardRespData(x:RecognizeBusinessCardRespData,v:Ref<RecognizeBusinessCardRespData>)
	export function unRefRecognizeBusinessCardRespData(v:Ref<RecognizeBusinessCardRespData>):RecognizeBusinessCardRespData
	export function emptyRecognizeBusinessLicenseReqBody():RecognizeBusinessLicenseReqBody
	export function emptyRefRecognizeBusinessLicenseReqBody():Ref<RecognizeBusinessLicenseReqBody>
	export function refOfRecognizeBusinessLicenseReqBody(x:RecognizeBusinessLicenseReqBody,v:Ref<RecognizeBusinessLicenseReqBody>)
	export function unRefRecognizeBusinessLicenseReqBody(v:Ref<RecognizeBusinessLicenseReqBody>):RecognizeBusinessLicenseReqBody
	export function emptyTaxiEntity():TaxiEntity
	export function emptyRefTaxiEntity():Ref<TaxiEntity>
	export function refOfTaxiEntity(x:TaxiEntity,v:Ref<TaxiEntity>)
	export function unRefTaxiEntity(v:Ref<TaxiEntity>):TaxiEntity
	export function emptyIdCard():IdCard
	export function emptyRefIdCard():Ref<IdCard>
	export function refOfIdCard(x:IdCard,v:Ref<IdCard>)
	export function unRefIdCard(v:Ref<IdCard>):IdCard
	export function emptyRecognizeHealthCertificateResp():RecognizeHealthCertificateResp
	export function emptyRefRecognizeHealthCertificateResp():Ref<RecognizeHealthCertificateResp>
	export function refOfRecognizeHealthCertificateResp(x:RecognizeHealthCertificateResp,v:Ref<RecognizeHealthCertificateResp>)
	export function unRefRecognizeHealthCertificateResp(v:Ref<RecognizeHealthCertificateResp>):RecognizeHealthCertificateResp
	export function emptyRecognizeFoodProduceLicenseReq():RecognizeFoodProduceLicenseReq
	export function emptyRefRecognizeFoodProduceLicenseReq():Ref<RecognizeFoodProduceLicenseReq>
	export function refOfRecognizeFoodProduceLicenseReq(x:RecognizeFoodProduceLicenseReq,v:Ref<RecognizeFoodProduceLicenseReq>)
	export function unRefRecognizeFoodProduceLicenseReq(v:Ref<RecognizeFoodProduceLicenseReq>):RecognizeFoodProduceLicenseReq
	export function emptyResumeProject():ResumeProject
	export function emptyRefResumeProject():Ref<ResumeProject>
	export function refOfResumeProject(x:ResumeProject,v:Ref<ResumeProject>)
	export function unRefResumeProject(v:Ref<ResumeProject>):ResumeProject
	export function emptyBodyInfo():BodyInfo
	export function emptyRefBodyInfo():Ref<BodyInfo>
	export function refOfBodyInfo(x:BodyInfo,v:Ref<BodyInfo>)
	export function unRefBodyInfo(v:Ref<BodyInfo>):BodyInfo
	export function emptyRecognizeBusinessCardResp():RecognizeBusinessCardResp
	export function emptyRefRecognizeBusinessCardResp():Ref<RecognizeBusinessCardResp>
	export function refOfRecognizeBusinessCardResp(x:RecognizeBusinessCardResp,v:Ref<RecognizeBusinessCardResp>)
	export function unRefRecognizeBusinessCardResp(v:Ref<RecognizeBusinessCardResp>):RecognizeBusinessCardResp
	export function emptyRecognizeTrainInvoiceReq():RecognizeTrainInvoiceReq
	export function emptyRefRecognizeTrainInvoiceReq():Ref<RecognizeTrainInvoiceReq>
	export function refOfRecognizeTrainInvoiceReq(x:RecognizeTrainInvoiceReq,v:Ref<RecognizeTrainInvoiceReq>)
	export function unRefRecognizeTrainInvoiceReq(v:Ref<RecognizeTrainInvoiceReq>):RecognizeTrainInvoiceReq
	export function emptyRecognizeVehicleInvoiceResp():RecognizeVehicleInvoiceResp
	export function emptyRefRecognizeVehicleInvoiceResp():Ref<RecognizeVehicleInvoiceResp>
	export function refOfRecognizeVehicleInvoiceResp(x:RecognizeVehicleInvoiceResp,v:Ref<RecognizeVehicleInvoiceResp>)
	export function unRefRecognizeVehicleInvoiceResp(v:Ref<RecognizeVehicleInvoiceResp>):RecognizeVehicleInvoiceResp
	export function emptyFieldExtractionContractResp():FieldExtractionContractResp
	export function emptyRefFieldExtractionContractResp():Ref<FieldExtractionContractResp>
	export function refOfFieldExtractionContractResp(x:FieldExtractionContractResp,v:Ref<FieldExtractionContractResp>)
	export function unRefFieldExtractionContractResp(v:Ref<FieldExtractionContractResp>):FieldExtractionContractResp
	export function emptyRecognizeFoodProduceLicenseRespData():RecognizeFoodProduceLicenseRespData
	export function emptyRefRecognizeFoodProduceLicenseRespData():Ref<RecognizeFoodProduceLicenseRespData>
	export function refOfRecognizeFoodProduceLicenseRespData(x:RecognizeFoodProduceLicenseRespData,v:Ref<RecognizeFoodProduceLicenseRespData>)
	export function unRefRecognizeFoodProduceLicenseRespData(v:Ref<RecognizeFoodProduceLicenseRespData>):RecognizeFoodProduceLicenseRespData
	export function emptyRecognizeBusinessCardReq():RecognizeBusinessCardReq
	export function emptyRefRecognizeBusinessCardReq():Ref<RecognizeBusinessCardReq>
	export function refOfRecognizeBusinessCardReq(x:RecognizeBusinessCardReq,v:Ref<RecognizeBusinessCardReq>)
	export function unRefRecognizeBusinessCardReq(v:Ref<RecognizeBusinessCardReq>):RecognizeBusinessCardReq
	export function emptyRecognizeChinesePassportResp():RecognizeChinesePassportResp
	export function emptyRefRecognizeChinesePassportResp():Ref<RecognizeChinesePassportResp>
	export function refOfRecognizeChinesePassportResp(x:RecognizeChinesePassportResp,v:Ref<RecognizeChinesePassportResp>)
	export function unRefRecognizeChinesePassportResp(v:Ref<RecognizeChinesePassportResp>):RecognizeChinesePassportResp
	export function emptyRecognizeVehicleLicenseReq():RecognizeVehicleLicenseReq
	export function emptyRefRecognizeVehicleLicenseReq():Ref<RecognizeVehicleLicenseReq>
	export function refOfRecognizeVehicleLicenseReq(x:RecognizeVehicleLicenseReq,v:Ref<RecognizeVehicleLicenseReq>)
	export function unRefRecognizeVehicleLicenseReq(v:Ref<RecognizeVehicleLicenseReq>):RecognizeVehicleLicenseReq
	export function emptyDocChunkBboxItem():DocChunkBboxItem
	export function emptyRefDocChunkBboxItem():Ref<DocChunkBboxItem>
	export function refOfDocChunkBboxItem(x:DocChunkBboxItem,v:Ref<DocChunkBboxItem>)
	export function unRefDocChunkBboxItem(v:Ref<DocChunkBboxItem>):DocChunkBboxItem
	export function emptyRecognizeFoodManageLicenseReqBody():RecognizeFoodManageLicenseReqBody
	export function emptyRefRecognizeFoodManageLicenseReqBody():Ref<RecognizeFoodManageLicenseReqBody>
	export function refOfRecognizeFoodManageLicenseReqBody(x:RecognizeFoodManageLicenseReqBody,v:Ref<RecognizeFoodManageLicenseReqBody>)
	export function unRefRecognizeFoodManageLicenseReqBody(v:Ref<RecognizeFoodManageLicenseReqBody>):RecognizeFoodManageLicenseReqBody
	export function emptyRecognizeChinesePassportRespData():RecognizeChinesePassportRespData
	export function emptyRefRecognizeChinesePassportRespData():Ref<RecognizeChinesePassportRespData>
	export function refOfRecognizeChinesePassportRespData(x:RecognizeChinesePassportRespData,v:Ref<RecognizeChinesePassportRespData>)
	export function unRefRecognizeChinesePassportRespData(v:Ref<RecognizeChinesePassportRespData>):RecognizeChinesePassportRespData
	export function emptyResumeAward():ResumeAward
	export function emptyRefResumeAward():Ref<ResumeAward>
	export function refOfResumeAward(x:ResumeAward,v:Ref<ResumeAward>)
	export function unRefResumeAward(v:Ref<ResumeAward>):ResumeAward
	export function emptyParseResumeRespData():ParseResumeRespData
	export function emptyRefParseResumeRespData():Ref<ParseResumeRespData>
	export function refOfParseResumeRespData(x:ParseResumeRespData,v:Ref<ParseResumeRespData>)
	export function unRefParseResumeRespData(v:Ref<ParseResumeRespData>):ParseResumeRespData
	export function emptyRecognizeBusinessLicenseRespData():RecognizeBusinessLicenseRespData
	export function emptyRefRecognizeBusinessLicenseRespData():Ref<RecognizeBusinessLicenseRespData>
	export function refOfRecognizeBusinessLicenseRespData(x:RecognizeBusinessLicenseRespData,v:Ref<RecognizeBusinessLicenseRespData>)
	export function unRefRecognizeBusinessLicenseRespData(v:Ref<RecognizeBusinessLicenseRespData>):RecognizeBusinessLicenseRespData
	export function emptyResumeCompetition():ResumeCompetition
	export function emptyRefResumeCompetition():Ref<ResumeCompetition>
	export function refOfResumeCompetition(x:ResumeCompetition,v:Ref<ResumeCompetition>)
	export function unRefResumeCompetition(v:Ref<ResumeCompetition>):ResumeCompetition
	export function emptyExtractTerm():ExtractTerm
	export function emptyRefExtractTerm():Ref<ExtractTerm>
	export function refOfExtractTerm(x:ExtractTerm,v:Ref<ExtractTerm>)
	export function unRefExtractTerm(v:Ref<ExtractTerm>):ExtractTerm
	export function emptyFieldExtractionContractRespData():FieldExtractionContractRespData
	export function emptyRefFieldExtractionContractRespData():Ref<FieldExtractionContractRespData>
	export function refOfFieldExtractionContractRespData(x:FieldExtractionContractRespData,v:Ref<FieldExtractionContractRespData>)
	export function unRefFieldExtractionContractRespData(v:Ref<FieldExtractionContractRespData>):FieldExtractionContractRespData
	export function emptyRecognizeBankCardRespData():RecognizeBankCardRespData
	export function emptyRefRecognizeBankCardRespData():Ref<RecognizeBankCardRespData>
	export function refOfRecognizeBankCardRespData(x:RecognizeBankCardRespData,v:Ref<RecognizeBankCardRespData>)
	export function unRefRecognizeBankCardRespData(v:Ref<RecognizeBankCardRespData>):RecognizeBankCardRespData
	export function emptyResumeEducation():ResumeEducation
	export function emptyRefResumeEducation():Ref<ResumeEducation>
	export function refOfResumeEducation(x:ResumeEducation,v:Ref<ResumeEducation>)
	export function unRefResumeEducation(v:Ref<ResumeEducation>):ResumeEducation
	export function emptyRecognizeFoodProduceLicenseReqBody():RecognizeFoodProduceLicenseReqBody
	export function emptyRefRecognizeFoodProduceLicenseReqBody():Ref<RecognizeFoodProduceLicenseReqBody>
	export function refOfRecognizeFoodProduceLicenseReqBody(x:RecognizeFoodProduceLicenseReqBody,v:Ref<RecognizeFoodProduceLicenseReqBody>)
	export function unRefRecognizeFoodProduceLicenseReqBody(v:Ref<RecognizeFoodProduceLicenseReqBody>):RecognizeFoodProduceLicenseReqBody
	export function emptyDepartmentId():DepartmentId
	export function emptyRefDepartmentId():Ref<DepartmentId>
	export function refOfDepartmentId(x:DepartmentId,v:Ref<DepartmentId>)
	export function unRefDepartmentId(v:Ref<DepartmentId>):DepartmentId
	export function emptyRecognizeBankCardResp():RecognizeBankCardResp
	export function emptyRefRecognizeBankCardResp():Ref<RecognizeBankCardResp>
	export function refOfRecognizeBankCardResp(x:RecognizeBankCardResp,v:Ref<RecognizeBankCardResp>)
	export function unRefRecognizeBankCardResp(v:Ref<RecognizeBankCardResp>):RecognizeBankCardResp
	export function emptyRecognizeIdCardResp():RecognizeIdCardResp
	export function emptyRefRecognizeIdCardResp():Ref<RecognizeIdCardResp>
	export function refOfRecognizeIdCardResp(x:RecognizeIdCardResp,v:Ref<RecognizeIdCardResp>)
	export function unRefRecognizeIdCardResp(v:Ref<RecognizeIdCardResp>):RecognizeIdCardResp
	export function emptyRecognizeTaxiInvoiceReqBody():RecognizeTaxiInvoiceReqBody
	export function emptyRefRecognizeTaxiInvoiceReqBody():Ref<RecognizeTaxiInvoiceReqBody>
	export function refOfRecognizeTaxiInvoiceReqBody(x:RecognizeTaxiInvoiceReqBody,v:Ref<RecognizeTaxiInvoiceReqBody>)
	export function unRefRecognizeTaxiInvoiceReqBody(v:Ref<RecognizeTaxiInvoiceReqBody>):RecognizeTaxiInvoiceReqBody
	export function emptyRecognizeVatInvoiceResp():RecognizeVatInvoiceResp
	export function emptyRefRecognizeVatInvoiceResp():Ref<RecognizeVatInvoiceResp>
	export function refOfRecognizeVatInvoiceResp(x:RecognizeVatInvoiceResp,v:Ref<RecognizeVatInvoiceResp>)
	export function unRefRecognizeVatInvoiceResp(v:Ref<RecognizeVatInvoiceResp>):RecognizeVatInvoiceResp
	export function emptyDocChunkTableRow():DocChunkTableRow
	export function emptyRefDocChunkTableRow():Ref<DocChunkTableRow>
	export function refOfDocChunkTableRow(x:DocChunkTableRow,v:Ref<DocChunkTableRow>)
	export function unRefDocChunkTableRow(v:Ref<DocChunkTableRow>):DocChunkTableRow
	export function emptyRecognizeHkmMainlandTravelPermitReqBody():RecognizeHkmMainlandTravelPermitReqBody
	export function emptyRefRecognizeHkmMainlandTravelPermitReqBody():Ref<RecognizeHkmMainlandTravelPermitReqBody>
	export function refOfRecognizeHkmMainlandTravelPermitReqBody(x:RecognizeHkmMainlandTravelPermitReqBody,v:Ref<RecognizeHkmMainlandTravelPermitReqBody>)
	export function unRefRecognizeHkmMainlandTravelPermitReqBody(v:Ref<RecognizeHkmMainlandTravelPermitReqBody>):RecognizeHkmMainlandTravelPermitReqBody
	export function emptyRecognizeTrainInvoiceRespData():RecognizeTrainInvoiceRespData
	export function emptyRefRecognizeTrainInvoiceRespData():Ref<RecognizeTrainInvoiceRespData>
	export function refOfRecognizeTrainInvoiceRespData(x:RecognizeTrainInvoiceRespData,v:Ref<RecognizeTrainInvoiceRespData>)
	export function unRefRecognizeTrainInvoiceRespData(v:Ref<RecognizeTrainInvoiceRespData>):RecognizeTrainInvoiceRespData
	export function emptyDrivingEntity():DrivingEntity
	export function emptyRefDrivingEntity():Ref<DrivingEntity>
	export function refOfDrivingEntity(x:DrivingEntity,v:Ref<DrivingEntity>)
	export function unRefDrivingEntity(v:Ref<DrivingEntity>):DrivingEntity
	export function emptyRecognizeTwMainlandTravelPermitReq():RecognizeTwMainlandTravelPermitReq
	export function emptyRefRecognizeTwMainlandTravelPermitReq():Ref<RecognizeTwMainlandTravelPermitReq>
	export function refOfRecognizeTwMainlandTravelPermitReq(x:RecognizeTwMainlandTravelPermitReq,v:Ref<RecognizeTwMainlandTravelPermitReq>)
	export function unRefRecognizeTwMainlandTravelPermitReq(v:Ref<RecognizeTwMainlandTravelPermitReq>):RecognizeTwMainlandTravelPermitReq
	export function emptyRecognizeTwMainlandTravelPermitReqBody():RecognizeTwMainlandTravelPermitReqBody
	export function emptyRefRecognizeTwMainlandTravelPermitReqBody():Ref<RecognizeTwMainlandTravelPermitReqBody>
	export function refOfRecognizeTwMainlandTravelPermitReqBody(x:RecognizeTwMainlandTravelPermitReqBody,v:Ref<RecognizeTwMainlandTravelPermitReqBody>)
	export function unRefRecognizeTwMainlandTravelPermitReqBody(v:Ref<RecognizeTwMainlandTravelPermitReqBody>):RecognizeTwMainlandTravelPermitReqBody
	export function emptyResume():Resume
	export function emptyRefResume():Ref<Resume>
	export function refOfResume(x:Resume,v:Ref<Resume>)
	export function unRefResume(v:Ref<Resume>):Resume
	export function emptyRecognizeChinesePassportReq():RecognizeChinesePassportReq
	export function emptyRefRecognizeChinesePassportReq():Ref<RecognizeChinesePassportReq>
	export function refOfRecognizeChinesePassportReq(x:RecognizeChinesePassportReq,v:Ref<RecognizeChinesePassportReq>)
	export function unRefRecognizeChinesePassportReq(v:Ref<RecognizeChinesePassportReq>):RecognizeChinesePassportReq
	export function emptyVatEntity():VatEntity
	export function emptyRefVatEntity():Ref<VatEntity>
	export function refOfVatEntity(x:VatEntity,v:Ref<VatEntity>)
	export function unRefVatEntity(v:Ref<VatEntity>):VatEntity
	export function emptyVehicleInvoice():VehicleInvoice
	export function emptyRefVehicleInvoice():Ref<VehicleInvoice>
	export function refOfVehicleInvoice(x:VehicleInvoice,v:Ref<VehicleInvoice>)
	export function unRefVehicleInvoice(v:Ref<VehicleInvoice>):VehicleInvoice
	export function emptyRecognizeVehicleInvoiceReq():RecognizeVehicleInvoiceReq
	export function emptyRefRecognizeVehicleInvoiceReq():Ref<RecognizeVehicleInvoiceReq>
	export function refOfRecognizeVehicleInvoiceReq(x:RecognizeVehicleInvoiceReq,v:Ref<RecognizeVehicleInvoiceReq>)
	export function unRefRecognizeVehicleInvoiceReq(v:Ref<RecognizeVehicleInvoiceReq>):RecognizeVehicleInvoiceReq
	export function emptyVehicleEntity():VehicleEntity
	export function emptyRefVehicleEntity():Ref<VehicleEntity>
	export function refOfVehicleEntity(x:VehicleEntity,v:Ref<VehicleEntity>)
	export function unRefVehicleEntity(v:Ref<VehicleEntity>):VehicleEntity
	export function emptyCurrency():Currency
	export function emptyRefCurrency():Ref<Currency>
	export function refOfCurrency(x:Currency,v:Ref<Currency>)
	export function unRefCurrency(v:Ref<Currency>):Currency
	export function emptyDocChunkPosition():DocChunkPosition
	export function emptyRefDocChunkPosition():Ref<DocChunkPosition>
	export function refOfDocChunkPosition(x:DocChunkPosition,v:Ref<DocChunkPosition>)
	export function unRefDocChunkPosition(v:Ref<DocChunkPosition>):DocChunkPosition
	export function emptyRecognizeBusinessCardReqBody():RecognizeBusinessCardReqBody
	export function emptyRefRecognizeBusinessCardReqBody():Ref<RecognizeBusinessCardReqBody>
	export function refOfRecognizeBusinessCardReqBody(x:RecognizeBusinessCardReqBody,v:Ref<RecognizeBusinessCardReqBody>)
	export function unRefRecognizeBusinessCardReqBody(v:Ref<RecognizeBusinessCardReqBody>):RecognizeBusinessCardReqBody
	export function emptyRecognizeTaxiInvoiceRespData():RecognizeTaxiInvoiceRespData
	export function emptyRefRecognizeTaxiInvoiceRespData():Ref<RecognizeTaxiInvoiceRespData>
	export function refOfRecognizeTaxiInvoiceRespData(x:RecognizeTaxiInvoiceRespData,v:Ref<RecognizeTaxiInvoiceRespData>)
	export function unRefRecognizeTaxiInvoiceRespData(v:Ref<RecognizeTaxiInvoiceRespData>):RecognizeTaxiInvoiceRespData
	export function emptyFoodProduceLicense():FoodProduceLicense
	export function emptyRefFoodProduceLicense():Ref<FoodProduceLicense>
	export function refOfFoodProduceLicense(x:FoodProduceLicense,v:Ref<FoodProduceLicense>)
	export function unRefFoodProduceLicense(v:Ref<FoodProduceLicense>):FoodProduceLicense
	export function emptyRecognizeBankCardReq():RecognizeBankCardReq
	export function emptyRefRecognizeBankCardReq():Ref<RecognizeBankCardReq>
	export function refOfRecognizeBankCardReq(x:RecognizeBankCardReq,v:Ref<RecognizeBankCardReq>)
	export function unRefRecognizeBankCardReq(v:Ref<RecognizeBankCardReq>):RecognizeBankCardReq
	export function emptyRecognizeFoodManageLicenseReq():RecognizeFoodManageLicenseReq
	export function emptyRefRecognizeFoodManageLicenseReq():Ref<RecognizeFoodManageLicenseReq>
	export function refOfRecognizeFoodManageLicenseReq(x:RecognizeFoodManageLicenseReq,v:Ref<RecognizeFoodManageLicenseReq>)
	export function unRefRecognizeFoodManageLicenseReq(v:Ref<RecognizeFoodManageLicenseReq>):RecognizeFoodManageLicenseReq
	export function emptyResumeCertificate():ResumeCertificate
	export function emptyRefResumeCertificate():Ref<ResumeCertificate>
	export function refOfResumeCertificate(x:ResumeCertificate,v:Ref<ResumeCertificate>)
	export function unRefResumeCertificate(v:Ref<ResumeCertificate>):ResumeCertificate
	export function emptyRecognizeVehicleLicenseResp():RecognizeVehicleLicenseResp
	export function emptyRefRecognizeVehicleLicenseResp():Ref<RecognizeVehicleLicenseResp>
	export function refOfRecognizeVehicleLicenseResp(x:RecognizeVehicleLicenseResp,v:Ref<RecognizeVehicleLicenseResp>)
	export function unRefRecognizeVehicleLicenseResp(v:Ref<RecognizeVehicleLicenseResp>):RecognizeVehicleLicenseResp
	export function emptyVehicleInvoiceEntity():VehicleInvoiceEntity
	export function emptyRefVehicleInvoiceEntity():Ref<VehicleInvoiceEntity>
	export function refOfVehicleInvoiceEntity(x:VehicleInvoiceEntity,v:Ref<VehicleInvoiceEntity>)
	export function unRefVehicleInvoiceEntity(v:Ref<VehicleInvoiceEntity>):VehicleInvoiceEntity
	export function emptyExtractCopy():ExtractCopy
	export function emptyRefExtractCopy():Ref<ExtractCopy>
	export function refOfExtractCopy(x:ExtractCopy,v:Ref<ExtractCopy>)
	export function unRefExtractCopy(v:Ref<ExtractCopy>):ExtractCopy
	export function emptyDocChunkTableCell():DocChunkTableCell
	export function emptyRefDocChunkTableCell():Ref<DocChunkTableCell>
	export function refOfDocChunkTableCell(x:DocChunkTableCell,v:Ref<DocChunkTableCell>)
	export function unRefDocChunkTableCell(v:Ref<DocChunkTableCell>):DocChunkTableCell
	export function emptyResumeCareer():ResumeCareer
	export function emptyRefResumeCareer():Ref<ResumeCareer>
	export function refOfResumeCareer(x:ResumeCareer,v:Ref<ResumeCareer>)
	export function unRefResumeCareer(v:Ref<ResumeCareer>):ResumeCareer
	export function emptyRecognizeHealthCertificateRespData():RecognizeHealthCertificateRespData
	export function emptyRefRecognizeHealthCertificateRespData():Ref<RecognizeHealthCertificateRespData>
	export function refOfRecognizeHealthCertificateRespData(x:RecognizeHealthCertificateRespData,v:Ref<RecognizeHealthCertificateRespData>)
	export function unRefRecognizeHealthCertificateRespData(v:Ref<RecognizeHealthCertificateRespData>):RecognizeHealthCertificateRespData
	export function emptyTrainEntity():TrainEntity
	export function emptyRefTrainEntity():Ref<TrainEntity>
	export function refOfTrainEntity(x:TrainEntity,v:Ref<TrainEntity>)
	export function unRefTrainEntity(v:Ref<TrainEntity>):TrainEntity
	export function emptyVehicleLicense():VehicleLicense
	export function emptyRefVehicleLicense():Ref<VehicleLicense>
	export function refOfVehicleLicense(x:VehicleLicense,v:Ref<VehicleLicense>)
	export function unRefVehicleLicense(v:Ref<VehicleLicense>):VehicleLicense
	export function emptyRecognizeFoodProduceLicenseResp():RecognizeFoodProduceLicenseResp
	export function emptyRefRecognizeFoodProduceLicenseResp():Ref<RecognizeFoodProduceLicenseResp>
	export function refOfRecognizeFoodProduceLicenseResp(x:RecognizeFoodProduceLicenseResp,v:Ref<RecognizeFoodProduceLicenseResp>)
	export function unRefRecognizeFoodProduceLicenseResp(v:Ref<RecognizeFoodProduceLicenseResp>):RecognizeFoodProduceLicenseResp
	export function emptyRecognizeHealthCertificateReq():RecognizeHealthCertificateReq
	export function emptyRefRecognizeHealthCertificateReq():Ref<RecognizeHealthCertificateReq>
	export function refOfRecognizeHealthCertificateReq(x:RecognizeHealthCertificateReq,v:Ref<RecognizeHealthCertificateReq>)
	export function unRefRecognizeHealthCertificateReq(v:Ref<RecognizeHealthCertificateReq>):RecognizeHealthCertificateReq
	export function emptyRecognizeTwMainlandTravelPermitResp():RecognizeTwMainlandTravelPermitResp
	export function emptyRefRecognizeTwMainlandTravelPermitResp():Ref<RecognizeTwMainlandTravelPermitResp>
	export function refOfRecognizeTwMainlandTravelPermitResp(x:RecognizeTwMainlandTravelPermitResp,v:Ref<RecognizeTwMainlandTravelPermitResp>)
	export function unRefRecognizeTwMainlandTravelPermitResp(v:Ref<RecognizeTwMainlandTravelPermitResp>):RecognizeTwMainlandTravelPermitResp
	export function emptyRecognizeHkmMainlandTravelPermitReq():RecognizeHkmMainlandTravelPermitReq
	export function emptyRefRecognizeHkmMainlandTravelPermitReq():Ref<RecognizeHkmMainlandTravelPermitReq>
	export function refOfRecognizeHkmMainlandTravelPermitReq(x:RecognizeHkmMainlandTravelPermitReq,v:Ref<RecognizeHkmMainlandTravelPermitReq>)
	export function unRefRecognizeHkmMainlandTravelPermitReq(v:Ref<RecognizeHkmMainlandTravelPermitReq>):RecognizeHkmMainlandTravelPermitReq
	export function emptyResumeLanguage():ResumeLanguage
	export function emptyRefResumeLanguage():Ref<ResumeLanguage>
	export function refOfResumeLanguage(x:ResumeLanguage,v:Ref<ResumeLanguage>)
	export function unRefResumeLanguage(v:Ref<ResumeLanguage>):ResumeLanguage
	export function emptyRecognizeIdCardReqBody():RecognizeIdCardReqBody
	export function emptyRefRecognizeIdCardReqBody():Ref<RecognizeIdCardReqBody>
	export function refOfRecognizeIdCardReqBody(x:RecognizeIdCardReqBody,v:Ref<RecognizeIdCardReqBody>)
	export function unRefRecognizeIdCardReqBody(v:Ref<RecognizeIdCardReqBody>):RecognizeIdCardReqBody
	export function emptyRecognizeVatInvoiceReqBody():RecognizeVatInvoiceReqBody
	export function emptyRefRecognizeVatInvoiceReqBody():Ref<RecognizeVatInvoiceReqBody>
	export function refOfRecognizeVatInvoiceReqBody(x:RecognizeVatInvoiceReqBody,v:Ref<RecognizeVatInvoiceReqBody>)
	export function unRefRecognizeVatInvoiceReqBody(v:Ref<RecognizeVatInvoiceReqBody>):RecognizeVatInvoiceReqBody
	export function emptyRecognizeTrainInvoiceResp():RecognizeTrainInvoiceResp
	export function emptyRefRecognizeTrainInvoiceResp():Ref<RecognizeTrainInvoiceResp>
	export function refOfRecognizeTrainInvoiceResp(x:RecognizeTrainInvoiceResp,v:Ref<RecognizeTrainInvoiceResp>)
	export function unRefRecognizeTrainInvoiceResp(v:Ref<RecognizeTrainInvoiceResp>):RecognizeTrainInvoiceResp
	export function emptyBankCardEntity():BankCardEntity
	export function emptyRefBankCardEntity():Ref<BankCardEntity>
	export function refOfBankCardEntity(x:BankCardEntity,v:Ref<BankCardEntity>)
	export function unRefBankCardEntity(v:Ref<BankCardEntity>):BankCardEntity
	export function emptyRecognizeHealthCertificateReqBody():RecognizeHealthCertificateReqBody
	export function emptyRefRecognizeHealthCertificateReqBody():Ref<RecognizeHealthCertificateReqBody>
	export function refOfRecognizeHealthCertificateReqBody(x:RecognizeHealthCertificateReqBody,v:Ref<RecognizeHealthCertificateReqBody>)
	export function unRefRecognizeHealthCertificateReqBody(v:Ref<RecognizeHealthCertificateReqBody>):RecognizeHealthCertificateReqBody
	export function emptyRecognizeIdCardReq():RecognizeIdCardReq
	export function emptyRefRecognizeIdCardReq():Ref<RecognizeIdCardReq>
	export function refOfRecognizeIdCardReq(x:RecognizeIdCardReq,v:Ref<RecognizeIdCardReq>)
	export function unRefRecognizeIdCardReq(v:Ref<RecognizeIdCardReq>):RecognizeIdCardReq
	export function emptyBodyEntity():BodyEntity
	export function emptyRefBodyEntity():Ref<BodyEntity>
	export function refOfBodyEntity(x:BodyEntity,v:Ref<BodyEntity>)
	export function unRefBodyEntity(v:Ref<BodyEntity>):BodyEntity
}