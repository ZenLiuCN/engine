// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'github.com/larksuite/oapi-sdk-go/v3/service/translation/v1'{

	// @ts-ignore
	import * as larkcore from 'github.com/larksuite/oapi-sdk-go/v3/core'
	// @ts-ignore
	import * as context from 'golang/context'
	// @ts-ignore
	import type {Ref,Struct,error,bool,Alias,Nothing} from 'go'
	export interface DepartmentId extends Struct<DepartmentId>{

			departmentId:Ref<string>
			openDepartmentId:Ref<string>
	}
	export interface DepartmentIdBuilder extends Struct<DepartmentIdBuilder>{

			departmentId(departmentId:string):Ref<DepartmentIdBuilder>
			openDepartmentId(openDepartmentId:string):Ref<DepartmentIdBuilder>
			build():Ref<DepartmentId>
	}
	export interface DetectTextPathReqBodyBuilder extends Struct<DetectTextPathReqBodyBuilder>{

			text(text:string):Ref<DetectTextPathReqBodyBuilder>
			build():Ref<DetectTextReqBody>
	}
	export interface DetectTextReq extends Struct<DetectTextReq>{

			body:Ref<DetectTextReqBody>
	}
	export interface DetectTextReqBody extends Struct<DetectTextReqBody>{

			text:Ref<string>
	}
	export interface DetectTextReqBodyBuilder extends Struct<DetectTextReqBodyBuilder>{

			text(text:string):Ref<DetectTextReqBodyBuilder>
			build():Ref<DetectTextReqBody>
	}
	export interface DetectTextReqBuilder extends Struct<DetectTextReqBuilder>{

			body(body:Ref<DetectTextReqBody>):Ref<DetectTextReqBuilder>
			build():Ref<DetectTextReq>
	}
	export interface DetectTextResp extends Struct<DetectTextResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<DetectTextRespData>
			success():bool
	}
	export interface DetectTextRespData extends Struct<DetectTextRespData>{

			language:Ref<string>
	}
	export function New(config:Ref<larkcore.Config>):Ref<V1>

	export function newDepartmentIdBuilder():Ref<DepartmentIdBuilder>

	export function newDetectTextPathReqBodyBuilder():Ref<DetectTextPathReqBodyBuilder>

	export function newDetectTextReqBodyBuilder():Ref<DetectTextReqBodyBuilder>

	export function newDetectTextReqBuilder():Ref<DetectTextReqBuilder>

	export function newTermBuilder():Ref<TermBuilder>

	export function newTranslateTextPathReqBodyBuilder():Ref<TranslateTextPathReqBodyBuilder>

	export function newTranslateTextReqBodyBuilder():Ref<TranslateTextReqBodyBuilder>

	export function newTranslateTextReqBuilder():Ref<TranslateTextReqBuilder>

	export interface Term extends Struct<Term>{

			from:Ref<string>
			to:Ref<string>
	}
	export interface TermBuilder extends Struct<TermBuilder>{

			from(from:string):Ref<TermBuilder>
			to(to:string):Ref<TermBuilder>
			build():Ref<Term>
	}
	export interface Text extends Alias<Nothing>{

	}
	export interface TranslateTextPathReqBodyBuilder extends Struct<TranslateTextPathReqBodyBuilder>{

			sourceLanguage(sourceLanguage:string):Ref<TranslateTextPathReqBodyBuilder>
			text(text:string):Ref<TranslateTextPathReqBodyBuilder>
			targetLanguage(targetLanguage:string):Ref<TranslateTextPathReqBodyBuilder>
			glossary(glossary:Ref<Term>[]):Ref<TranslateTextPathReqBodyBuilder>
			build():Ref<TranslateTextReqBody>
	}
	export interface TranslateTextReq extends Struct<TranslateTextReq>{

			body:Ref<TranslateTextReqBody>
	}
	export interface TranslateTextReqBody extends Struct<TranslateTextReqBody>{

			sourceLanguage:Ref<string>
			text:Ref<string>
			targetLanguage:Ref<string>
			glossary:Ref<Term>[]
	}
	export interface TranslateTextReqBodyBuilder extends Struct<TranslateTextReqBodyBuilder>{

			sourceLanguage(sourceLanguage:string):Ref<TranslateTextReqBodyBuilder>
			text(text:string):Ref<TranslateTextReqBodyBuilder>
			targetLanguage(targetLanguage:string):Ref<TranslateTextReqBodyBuilder>
			glossary(glossary:Ref<Term>[]):Ref<TranslateTextReqBodyBuilder>
			build():Ref<TranslateTextReqBody>
	}
	export interface TranslateTextReqBuilder extends Struct<TranslateTextReqBuilder>{

			body(body:Ref<TranslateTextReqBody>):Ref<TranslateTextReqBuilder>
			build():Ref<TranslateTextReq>
	}
	export interface TranslateTextResp extends Struct<TranslateTextResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<TranslateTextRespData>
			success():bool
	}
	export interface TranslateTextRespData extends Struct<TranslateTextRespData>{

			text:Ref<string>
	}
	export interface V1 extends Struct<V1>{

			text:Ref<{
			
				detect(ctx:context.Context,req:Ref<DetectTextReq>,...options:larkcore.RequestOptionFunc[]):Ref<DetectTextResp>
				translate(ctx:context.Context,req:Ref<TranslateTextReq>,...options:larkcore.RequestOptionFunc[]):Ref<TranslateTextResp>
			}>
	}
	export function emptyDetectTextReqBuilder():DetectTextReqBuilder
	export function emptyRefDetectTextReqBuilder():Ref<DetectTextReqBuilder>
	export function refOfDetectTextReqBuilder(x:DetectTextReqBuilder,v:Ref<DetectTextReqBuilder>)
	export function unRefDetectTextReqBuilder(v:Ref<DetectTextReqBuilder>):DetectTextReqBuilder
	export function emptyDetectTextRespData():DetectTextRespData
	export function emptyRefDetectTextRespData():Ref<DetectTextRespData>
	export function refOfDetectTextRespData(x:DetectTextRespData,v:Ref<DetectTextRespData>)
	export function unRefDetectTextRespData(v:Ref<DetectTextRespData>):DetectTextRespData
	export function emptyTerm():Term
	export function emptyRefTerm():Ref<Term>
	export function refOfTerm(x:Term,v:Ref<Term>)
	export function unRefTerm(v:Ref<Term>):Term
	export function emptyTermBuilder():TermBuilder
	export function emptyRefTermBuilder():Ref<TermBuilder>
	export function refOfTermBuilder(x:TermBuilder,v:Ref<TermBuilder>)
	export function unRefTermBuilder(v:Ref<TermBuilder>):TermBuilder
	export function emptyTranslateTextReq():TranslateTextReq
	export function emptyRefTranslateTextReq():Ref<TranslateTextReq>
	export function refOfTranslateTextReq(x:TranslateTextReq,v:Ref<TranslateTextReq>)
	export function unRefTranslateTextReq(v:Ref<TranslateTextReq>):TranslateTextReq
	export function emptyTranslateTextReqBuilder():TranslateTextReqBuilder
	export function emptyRefTranslateTextReqBuilder():Ref<TranslateTextReqBuilder>
	export function refOfTranslateTextReqBuilder(x:TranslateTextReqBuilder,v:Ref<TranslateTextReqBuilder>)
	export function unRefTranslateTextReqBuilder(v:Ref<TranslateTextReqBuilder>):TranslateTextReqBuilder
	export function emptyTranslateTextRespData():TranslateTextRespData
	export function emptyRefTranslateTextRespData():Ref<TranslateTextRespData>
	export function refOfTranslateTextRespData(x:TranslateTextRespData,v:Ref<TranslateTextRespData>)
	export function unRefTranslateTextRespData(v:Ref<TranslateTextRespData>):TranslateTextRespData
	export function emptyDetectTextReqBody():DetectTextReqBody
	export function emptyRefDetectTextReqBody():Ref<DetectTextReqBody>
	export function refOfDetectTextReqBody(x:DetectTextReqBody,v:Ref<DetectTextReqBody>)
	export function unRefDetectTextReqBody(v:Ref<DetectTextReqBody>):DetectTextReqBody
	export function emptyDetectTextResp():DetectTextResp
	export function emptyRefDetectTextResp():Ref<DetectTextResp>
	export function refOfDetectTextResp(x:DetectTextResp,v:Ref<DetectTextResp>)
	export function unRefDetectTextResp(v:Ref<DetectTextResp>):DetectTextResp
	export function emptyTranslateTextReqBody():TranslateTextReqBody
	export function emptyRefTranslateTextReqBody():Ref<TranslateTextReqBody>
	export function refOfTranslateTextReqBody(x:TranslateTextReqBody,v:Ref<TranslateTextReqBody>)
	export function unRefTranslateTextReqBody(v:Ref<TranslateTextReqBody>):TranslateTextReqBody
	export function emptyV1():V1
	export function emptyRefV1():Ref<V1>
	export function refOfV1(x:V1,v:Ref<V1>)
	export function unRefV1(v:Ref<V1>):V1
	export function emptyDepartmentId():DepartmentId
	export function emptyRefDepartmentId():Ref<DepartmentId>
	export function refOfDepartmentId(x:DepartmentId,v:Ref<DepartmentId>)
	export function unRefDepartmentId(v:Ref<DepartmentId>):DepartmentId
	export function emptyDepartmentIdBuilder():DepartmentIdBuilder
	export function emptyRefDepartmentIdBuilder():Ref<DepartmentIdBuilder>
	export function refOfDepartmentIdBuilder(x:DepartmentIdBuilder,v:Ref<DepartmentIdBuilder>)
	export function unRefDepartmentIdBuilder(v:Ref<DepartmentIdBuilder>):DepartmentIdBuilder
	export function emptyDetectTextReq():DetectTextReq
	export function emptyRefDetectTextReq():Ref<DetectTextReq>
	export function refOfDetectTextReq(x:DetectTextReq,v:Ref<DetectTextReq>)
	export function unRefDetectTextReq(v:Ref<DetectTextReq>):DetectTextReq
	export function emptyDetectTextReqBodyBuilder():DetectTextReqBodyBuilder
	export function emptyRefDetectTextReqBodyBuilder():Ref<DetectTextReqBodyBuilder>
	export function refOfDetectTextReqBodyBuilder(x:DetectTextReqBodyBuilder,v:Ref<DetectTextReqBodyBuilder>)
	export function unRefDetectTextReqBodyBuilder(v:Ref<DetectTextReqBodyBuilder>):DetectTextReqBodyBuilder
	export function emptyTranslateTextPathReqBodyBuilder():TranslateTextPathReqBodyBuilder
	export function emptyRefTranslateTextPathReqBodyBuilder():Ref<TranslateTextPathReqBodyBuilder>
	export function refOfTranslateTextPathReqBodyBuilder(x:TranslateTextPathReqBodyBuilder,v:Ref<TranslateTextPathReqBodyBuilder>)
	export function unRefTranslateTextPathReqBodyBuilder(v:Ref<TranslateTextPathReqBodyBuilder>):TranslateTextPathReqBodyBuilder
	export function emptyTranslateTextReqBodyBuilder():TranslateTextReqBodyBuilder
	export function emptyRefTranslateTextReqBodyBuilder():Ref<TranslateTextReqBodyBuilder>
	export function refOfTranslateTextReqBodyBuilder(x:TranslateTextReqBodyBuilder,v:Ref<TranslateTextReqBodyBuilder>)
	export function unRefTranslateTextReqBodyBuilder(v:Ref<TranslateTextReqBodyBuilder>):TranslateTextReqBodyBuilder
	export function emptyTranslateTextResp():TranslateTextResp
	export function emptyRefTranslateTextResp():Ref<TranslateTextResp>
	export function refOfTranslateTextResp(x:TranslateTextResp,v:Ref<TranslateTextResp>)
	export function unRefTranslateTextResp(v:Ref<TranslateTextResp>):TranslateTextResp
	export function emptyDetectTextPathReqBodyBuilder():DetectTextPathReqBodyBuilder
	export function emptyRefDetectTextPathReqBodyBuilder():Ref<DetectTextPathReqBodyBuilder>
	export function refOfDetectTextPathReqBodyBuilder(x:DetectTextPathReqBodyBuilder,v:Ref<DetectTextPathReqBodyBuilder>)
	export function unRefDetectTextPathReqBodyBuilder(v:Ref<DetectTextPathReqBodyBuilder>):DetectTextPathReqBodyBuilder
}