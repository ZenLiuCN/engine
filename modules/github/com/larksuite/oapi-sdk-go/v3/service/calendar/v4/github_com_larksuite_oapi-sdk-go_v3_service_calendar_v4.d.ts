// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'github.com/larksuite/oapi-sdk-go/v3/service/calendar/v4'{

	// @ts-ignore
	import * as larkcore from 'github.com/larksuite/oapi-sdk-go/v3/core'
	// @ts-ignore
	import * as context from 'golang/context'
	// @ts-ignore
	import * as larkevent from 'github.com/larksuite/oapi-sdk-go/v3/event'
	// @ts-ignore
	import type {bool,error,int,float64,Alias,Nothing,Ref,Struct} from 'go'
	export interface AclScope extends Struct<AclScope>{

			type:Ref<string>
			userId:Ref<string>
	}
	export interface AclScopeBuilder extends Struct<AclScopeBuilder>{

			type(type_:string):Ref<AclScopeBuilder>
			userId(userId:string):Ref<AclScopeBuilder>
			build():Ref<AclScope>
	}
	export interface AclScopeEvent extends Struct<AclScopeEvent>{

			type:Ref<string>
			userId:Ref<UserId>
	}
	export interface AclScopeEventBuilder extends Struct<AclScopeEventBuilder>{

			type(type_:string):Ref<AclScopeEventBuilder>
			userId(userId:Ref<UserId>):Ref<AclScopeEventBuilder>
			build():Ref<AclScopeEvent>
	}
	export interface Attachment extends Struct<Attachment>{

			fileToken:Ref<string>
			fileSize:Ref<string>
			isDeleted:Ref<bool>
			name:Ref<string>
	}
	export interface AttachmentBuilder extends Struct<AttachmentBuilder>{

			fileToken(fileToken:string):Ref<AttachmentBuilder>
			fileSize(fileSize:string):Ref<AttachmentBuilder>
			isDeleted(isDeleted:bool):Ref<AttachmentBuilder>
			name(name:string):Ref<AttachmentBuilder>
			build():Ref<Attachment>
	}
	export interface AttendeeChatMember extends Struct<AttendeeChatMember>{

			rsvpStatus:Ref<string>
			isOptional:Ref<bool>
			displayName:Ref<string>
			isOrganizer:Ref<bool>
			isExternal:Ref<bool>
	}
	export interface AttendeeChatMemberBuilder extends Struct<AttendeeChatMemberBuilder>{

			rsvpStatus(rsvpStatus:string):Ref<AttendeeChatMemberBuilder>
			isOptional(isOptional:bool):Ref<AttendeeChatMemberBuilder>
			displayName(displayName:string):Ref<AttendeeChatMemberBuilder>
			isOrganizer(isOrganizer:bool):Ref<AttendeeChatMemberBuilder>
			isExternal(isExternal:bool):Ref<AttendeeChatMemberBuilder>
			build():Ref<AttendeeChatMember>
	}
	export interface BatchDeleteCalendarEventAttendeePathReqBodyBuilder extends Struct<BatchDeleteCalendarEventAttendeePathReqBodyBuilder>{

			attendeeIds(attendeeIds:string[]):Ref<BatchDeleteCalendarEventAttendeePathReqBodyBuilder>
			deleteIds(deleteIds:Ref<CalendarEventAttendeeId>[]):Ref<BatchDeleteCalendarEventAttendeePathReqBodyBuilder>
			needNotification(needNotification:bool):Ref<BatchDeleteCalendarEventAttendeePathReqBodyBuilder>
			instanceStartTimeAdmin(instanceStartTimeAdmin:string):Ref<BatchDeleteCalendarEventAttendeePathReqBodyBuilder>
			isEnableAdmin(isEnableAdmin:bool):Ref<BatchDeleteCalendarEventAttendeePathReqBodyBuilder>
			build():Ref<BatchDeleteCalendarEventAttendeeReqBody>
	}
	export interface BatchDeleteCalendarEventAttendeeReq extends Struct<BatchDeleteCalendarEventAttendeeReq>{

			body:Ref<BatchDeleteCalendarEventAttendeeReqBody>
	}
	export interface BatchDeleteCalendarEventAttendeeReqBody extends Struct<BatchDeleteCalendarEventAttendeeReqBody>{

			attendeeIds:string[]
			deleteIds:Ref<CalendarEventAttendeeId>[]
			needNotification:Ref<bool>
			instanceStartTimeAdmin:Ref<string>
			isEnableAdmin:Ref<bool>
	}
	export interface BatchDeleteCalendarEventAttendeeReqBodyBuilder extends Struct<BatchDeleteCalendarEventAttendeeReqBodyBuilder>{

			attendeeIds(attendeeIds:string[]):Ref<BatchDeleteCalendarEventAttendeeReqBodyBuilder>
			deleteIds(deleteIds:Ref<CalendarEventAttendeeId>[]):Ref<BatchDeleteCalendarEventAttendeeReqBodyBuilder>
			needNotification(needNotification:bool):Ref<BatchDeleteCalendarEventAttendeeReqBodyBuilder>
			instanceStartTimeAdmin(instanceStartTimeAdmin:string):Ref<BatchDeleteCalendarEventAttendeeReqBodyBuilder>
			isEnableAdmin(isEnableAdmin:bool):Ref<BatchDeleteCalendarEventAttendeeReqBodyBuilder>
			build():Ref<BatchDeleteCalendarEventAttendeeReqBody>
	}
	export interface BatchDeleteCalendarEventAttendeeReqBuilder extends Struct<BatchDeleteCalendarEventAttendeeReqBuilder>{

			calendarId(calendarId:string):Ref<BatchDeleteCalendarEventAttendeeReqBuilder>
			eventId(eventId:string):Ref<BatchDeleteCalendarEventAttendeeReqBuilder>
			userIdType(userIdType:string):Ref<BatchDeleteCalendarEventAttendeeReqBuilder>
			body(body:Ref<BatchDeleteCalendarEventAttendeeReqBody>):Ref<BatchDeleteCalendarEventAttendeeReqBuilder>
			build():Ref<BatchDeleteCalendarEventAttendeeReq>
	}
	export interface BatchDeleteCalendarEventAttendeeResp extends Struct<BatchDeleteCalendarEventAttendeeResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface BookMeetingRoomData extends Struct<BookMeetingRoomData>{

			meetingRoomId:Ref<string>
			hint:Ref<string>
			rooms:Ref<RoomMeta>[]
			recurrenceRule:Ref<string>
	}
	export interface BookMeetingRoomDataBuilder extends Struct<BookMeetingRoomDataBuilder>{

			meetingRoomId(meetingRoomId:string):Ref<BookMeetingRoomDataBuilder>
			hint(hint:string):Ref<BookMeetingRoomDataBuilder>
			rooms(rooms:Ref<RoomMeta>[]):Ref<BookMeetingRoomDataBuilder>
			recurrenceRule(recurrenceRule:string):Ref<BookMeetingRoomDataBuilder>
			build():Ref<BookMeetingRoomData>
	}
	export interface Calendar extends Struct<Calendar>{

			calendarId:Ref<string>
			summary:Ref<string>
			description:Ref<string>
			permissions:Ref<string>
			color:Ref<int>
			type:Ref<string>
			summaryAlias:Ref<string>
			isDeleted:Ref<bool>
			isThirdParty:Ref<bool>
			role:Ref<string>
	}
	//"free_busy_reader"
	export const CalendarAccessRoleFreeBusyReader:string
	//"owner"
	export const CalendarAccessRoleOwner:string
	//"reader"
	export const CalendarAccessRoleReader:string
	//"unknown"
	export const CalendarAccessRoleUnkonwn:string
	//"writer"
	export const CalendarAccessRoleWriter:string
	export interface CalendarAcl extends Struct<CalendarAcl>{

			aclId:Ref<string>
			role:Ref<string>
			scope:Ref<AclScope>
	}
	export interface CalendarAclBuilder extends Struct<CalendarAclBuilder>{

			aclId(aclId:string):Ref<CalendarAclBuilder>
			role(role:string):Ref<CalendarAclBuilder>
			scope(scope:Ref<AclScope>):Ref<CalendarAclBuilder>
			build():Ref<CalendarAcl>
	}
	export interface CalendarAclEvent extends Struct<CalendarAclEvent>{

			aclId:Ref<string>
			role:Ref<string>
			scope:Ref<AclScopeEvent>
			userIdList:Ref<UserId>[]
	}
	export interface CalendarAclEventBuilder extends Struct<CalendarAclEventBuilder>{

			aclId(aclId:string):Ref<CalendarAclEventBuilder>
			role(role:string):Ref<CalendarAclEventBuilder>
			scope(scope:Ref<AclScopeEvent>):Ref<CalendarAclEventBuilder>
			userIdList(userIdList:Ref<UserId>[]):Ref<CalendarAclEventBuilder>
			build():Ref<CalendarAclEvent>
	}
	export interface CalendarAttendeeResourceCustomization extends Struct<CalendarAttendeeResourceCustomization>{

			indexKey:Ref<string>
			inputContent:Ref<string>
			options:Ref<CustomizationOption>[]
	}
	export interface CalendarAttendeeResourceCustomizationBuilder extends Struct<CalendarAttendeeResourceCustomizationBuilder>{

			indexKey(indexKey:string):Ref<CalendarAttendeeResourceCustomizationBuilder>
			inputContent(inputContent:string):Ref<CalendarAttendeeResourceCustomizationBuilder>
			options(options:Ref<CustomizationOption>[]):Ref<CalendarAttendeeResourceCustomizationBuilder>
			build():Ref<CalendarAttendeeResourceCustomization>
	}
	export interface CalendarBuilder extends Struct<CalendarBuilder>{

			calendarId(calendarId:string):Ref<CalendarBuilder>
			summary(summary:string):Ref<CalendarBuilder>
			description(description:string):Ref<CalendarBuilder>
			permissions(permissions:string):Ref<CalendarBuilder>
			color(color:int):Ref<CalendarBuilder>
			type(type_:string):Ref<CalendarBuilder>
			summaryAlias(summaryAlias:string):Ref<CalendarBuilder>
			isDeleted(isDeleted:bool):Ref<CalendarBuilder>
			isThirdParty(isThirdParty:bool):Ref<CalendarBuilder>
			role(role:string):Ref<CalendarBuilder>
			build():Ref<Calendar>
	}
	export interface CalendarEvent extends Struct<CalendarEvent>{

			eventId:Ref<string>
			organizerCalendarId:Ref<string>
			summary:Ref<string>
			description:Ref<string>
			needNotification:Ref<bool>
			startTime:Ref<TimeInfo>
			endTime:Ref<TimeInfo>
			vchat:Ref<Vchat>
			visibility:Ref<string>
			attendeeAbility:Ref<string>
			freeBusyStatus:Ref<string>
			location:Ref<EventLocation>
			color:Ref<int>
			reminders:Ref<Reminder>[]
			recurrence:Ref<string>
			status:Ref<string>
			isException:Ref<bool>
			recurringEventId:Ref<string>
			createTime:Ref<string>
			schemas:Ref<Schema>[]
			eventOrganizer:Ref<EventOrganizer>
			appLink:Ref<string>
			attendees:Ref<CalendarEventAttendee>[]
			hasMoreAttendee:Ref<bool>
			attachments:Ref<Attachment>[]
	}
	export interface CalendarEventAttendee extends Struct<CalendarEventAttendee>{

			type:Ref<string>
			attendeeId:Ref<string>
			rsvpStatus:Ref<string>
			isOptional:Ref<bool>
			isOrganizer:Ref<bool>
			isExternal:Ref<bool>
			displayName:Ref<string>
			chatMembers:Ref<AttendeeChatMember>[]
			userId:Ref<string>
			chatId:Ref<string>
			roomId:Ref<string>
			thirdPartyEmail:Ref<string>
			operateId:Ref<string>
			resourceCustomization:Ref<CalendarAttendeeResourceCustomization>[]
			approvalReason:Ref<string>
	}
	export interface CalendarEventAttendeeBuilder extends Struct<CalendarEventAttendeeBuilder>{

			type(type_:string):Ref<CalendarEventAttendeeBuilder>
			attendeeId(attendeeId:string):Ref<CalendarEventAttendeeBuilder>
			rsvpStatus(rsvpStatus:string):Ref<CalendarEventAttendeeBuilder>
			isOptional(isOptional:bool):Ref<CalendarEventAttendeeBuilder>
			isOrganizer(isOrganizer:bool):Ref<CalendarEventAttendeeBuilder>
			isExternal(isExternal:bool):Ref<CalendarEventAttendeeBuilder>
			displayName(displayName:string):Ref<CalendarEventAttendeeBuilder>
			chatMembers(chatMembers:Ref<AttendeeChatMember>[]):Ref<CalendarEventAttendeeBuilder>
			userId(userId:string):Ref<CalendarEventAttendeeBuilder>
			chatId(chatId:string):Ref<CalendarEventAttendeeBuilder>
			roomId(roomId:string):Ref<CalendarEventAttendeeBuilder>
			thirdPartyEmail(thirdPartyEmail:string):Ref<CalendarEventAttendeeBuilder>
			operateId(operateId:string):Ref<CalendarEventAttendeeBuilder>
			resourceCustomization(resourceCustomization:Ref<CalendarAttendeeResourceCustomization>[]):Ref<CalendarEventAttendeeBuilder>
			approvalReason(approvalReason:string):Ref<CalendarEventAttendeeBuilder>
			build():Ref<CalendarEventAttendee>
	}
	export interface CalendarEventAttendeeChatMember extends Struct<CalendarEventAttendeeChatMember>{

			rsvpStatus:Ref<string>
			isOptional:Ref<bool>
			displayName:Ref<string>
			openId:Ref<string>
			isOrganizer:Ref<bool>
			isExternal:Ref<bool>
	}
	export interface CalendarEventAttendeeChatMemberBuilder extends Struct<CalendarEventAttendeeChatMemberBuilder>{

			rsvpStatus(rsvpStatus:string):Ref<CalendarEventAttendeeChatMemberBuilder>
			isOptional(isOptional:bool):Ref<CalendarEventAttendeeChatMemberBuilder>
			displayName(displayName:string):Ref<CalendarEventAttendeeChatMemberBuilder>
			openId(openId:string):Ref<CalendarEventAttendeeChatMemberBuilder>
			isOrganizer(isOrganizer:bool):Ref<CalendarEventAttendeeChatMemberBuilder>
			isExternal(isExternal:bool):Ref<CalendarEventAttendeeChatMemberBuilder>
			build():Ref<CalendarEventAttendeeChatMember>
	}
	export interface CalendarEventAttendeeId extends Struct<CalendarEventAttendeeId>{

			type:Ref<string>
			attendeeId:Ref<string>
			userId:Ref<string>
			chatId:Ref<string>
			roomId:Ref<string>
			thirdPartyEmail:Ref<string>
	}
	export interface CalendarEventAttendeeIdBuilder extends Struct<CalendarEventAttendeeIdBuilder>{

			type(type_:string):Ref<CalendarEventAttendeeIdBuilder>
			attendeeId(attendeeId:string):Ref<CalendarEventAttendeeIdBuilder>
			userId(userId:string):Ref<CalendarEventAttendeeIdBuilder>
			chatId(chatId:string):Ref<CalendarEventAttendeeIdBuilder>
			roomId(roomId:string):Ref<CalendarEventAttendeeIdBuilder>
			thirdPartyEmail(thirdPartyEmail:string):Ref<CalendarEventAttendeeIdBuilder>
			build():Ref<CalendarEventAttendeeId>
	}
	export interface CalendarEventAttendeeResp extends Struct<CalendarEventAttendeeResp>{

			type:Ref<string>
			attendeeId:Ref<string>
			rsvpStatus:Ref<string>
			isOptional:Ref<bool>
			isOrganizer:Ref<bool>
			isExternal:Ref<bool>
			displayName:Ref<string>
			chatMembers:Ref<AttendeeChatMember>[]
			userId:Ref<string>
			chatId:Ref<string>
			roomId:Ref<string>
			thirdPartyEmail:Ref<string>
			operateId:Ref<string>
			resourceCustomization:Ref<CalendarAttendeeResourceCustomization>[]
	}
	export interface CalendarEventAttendeeRespBuilder extends Struct<CalendarEventAttendeeRespBuilder>{

			type(type_:string):Ref<CalendarEventAttendeeRespBuilder>
			attendeeId(attendeeId:string):Ref<CalendarEventAttendeeRespBuilder>
			rsvpStatus(rsvpStatus:string):Ref<CalendarEventAttendeeRespBuilder>
			isOptional(isOptional:bool):Ref<CalendarEventAttendeeRespBuilder>
			isOrganizer(isOrganizer:bool):Ref<CalendarEventAttendeeRespBuilder>
			isExternal(isExternal:bool):Ref<CalendarEventAttendeeRespBuilder>
			displayName(displayName:string):Ref<CalendarEventAttendeeRespBuilder>
			chatMembers(chatMembers:Ref<AttendeeChatMember>[]):Ref<CalendarEventAttendeeRespBuilder>
			userId(userId:string):Ref<CalendarEventAttendeeRespBuilder>
			chatId(chatId:string):Ref<CalendarEventAttendeeRespBuilder>
			roomId(roomId:string):Ref<CalendarEventAttendeeRespBuilder>
			thirdPartyEmail(thirdPartyEmail:string):Ref<CalendarEventAttendeeRespBuilder>
			operateId(operateId:string):Ref<CalendarEventAttendeeRespBuilder>
			resourceCustomization(resourceCustomization:Ref<CalendarAttendeeResourceCustomization>[]):Ref<CalendarEventAttendeeRespBuilder>
			build():Ref<CalendarEventAttendeeResp>
	}
	export interface CalendarEventBuilder extends Struct<CalendarEventBuilder>{

			eventId(eventId:string):Ref<CalendarEventBuilder>
			organizerCalendarId(organizerCalendarId:string):Ref<CalendarEventBuilder>
			summary(summary:string):Ref<CalendarEventBuilder>
			description(description:string):Ref<CalendarEventBuilder>
			needNotification(needNotification:bool):Ref<CalendarEventBuilder>
			startTime(startTime:Ref<TimeInfo>):Ref<CalendarEventBuilder>
			endTime(endTime:Ref<TimeInfo>):Ref<CalendarEventBuilder>
			vchat(vchat:Ref<Vchat>):Ref<CalendarEventBuilder>
			visibility(visibility:string):Ref<CalendarEventBuilder>
			attendeeAbility(attendeeAbility:string):Ref<CalendarEventBuilder>
			freeBusyStatus(freeBusyStatus:string):Ref<CalendarEventBuilder>
			location(location:Ref<EventLocation>):Ref<CalendarEventBuilder>
			color(color:int):Ref<CalendarEventBuilder>
			reminders(reminders:Ref<Reminder>[]):Ref<CalendarEventBuilder>
			recurrence(recurrence:string):Ref<CalendarEventBuilder>
			status(status:string):Ref<CalendarEventBuilder>
			isException(isException:bool):Ref<CalendarEventBuilder>
			recurringEventId(recurringEventId:string):Ref<CalendarEventBuilder>
			createTime(createTime:string):Ref<CalendarEventBuilder>
			schemas(schemas:Ref<Schema>[]):Ref<CalendarEventBuilder>
			eventOrganizer(eventOrganizer:Ref<EventOrganizer>):Ref<CalendarEventBuilder>
			appLink(appLink:string):Ref<CalendarEventBuilder>
			attendees(attendees:Ref<CalendarEventAttendee>[]):Ref<CalendarEventBuilder>
			hasMoreAttendee(hasMoreAttendee:bool):Ref<CalendarEventBuilder>
			attachments(attachments:Ref<Attachment>[]):Ref<CalendarEventBuilder>
			build():Ref<CalendarEvent>
	}
	export interface CalendarEventResp extends Struct<CalendarEventResp>{

			eventId:Ref<string>
			organizerCalendarId:Ref<string>
			summary:Ref<string>
			description:Ref<string>
			needNotification:Ref<bool>
			startTime:Ref<TimeInfo>
			endTime:Ref<TimeInfo>
			vchat:Ref<Vchat>
			visibility:Ref<string>
			attendeeAbility:Ref<string>
			freeBusyStatus:Ref<string>
			location:Ref<EventLocation>
			color:Ref<int>
			reminders:Ref<Reminder>[]
			recurrence:Ref<string>
			status:Ref<string>
			isException:Ref<bool>
			recurringEventId:Ref<string>
			createTime:Ref<string>
			schemas:Ref<Schema>[]
	}
	export interface CalendarEventRespBuilder extends Struct<CalendarEventRespBuilder>{

			eventId(eventId:string):Ref<CalendarEventRespBuilder>
			organizerCalendarId(organizerCalendarId:string):Ref<CalendarEventRespBuilder>
			summary(summary:string):Ref<CalendarEventRespBuilder>
			description(description:string):Ref<CalendarEventRespBuilder>
			needNotification(needNotification:bool):Ref<CalendarEventRespBuilder>
			startTime(startTime:Ref<TimeInfo>):Ref<CalendarEventRespBuilder>
			endTime(endTime:Ref<TimeInfo>):Ref<CalendarEventRespBuilder>
			vchat(vchat:Ref<Vchat>):Ref<CalendarEventRespBuilder>
			visibility(visibility:string):Ref<CalendarEventRespBuilder>
			attendeeAbility(attendeeAbility:string):Ref<CalendarEventRespBuilder>
			freeBusyStatus(freeBusyStatus:string):Ref<CalendarEventRespBuilder>
			location(location:Ref<EventLocation>):Ref<CalendarEventRespBuilder>
			color(color:int):Ref<CalendarEventRespBuilder>
			reminders(reminders:Ref<Reminder>[]):Ref<CalendarEventRespBuilder>
			recurrence(recurrence:string):Ref<CalendarEventRespBuilder>
			status(status:string):Ref<CalendarEventRespBuilder>
			isException(isException:bool):Ref<CalendarEventRespBuilder>
			recurringEventId(recurringEventId:string):Ref<CalendarEventRespBuilder>
			createTime(createTime:string):Ref<CalendarEventRespBuilder>
			schemas(schemas:Ref<Schema>[]):Ref<CalendarEventRespBuilder>
			build():Ref<CalendarEventResp>
	}
	export interface CalendarFreebusy extends Struct<CalendarFreebusy>{

			startTime:Ref<string>
			endTime:Ref<string>
			calendarId:Ref<string>
	}
	export interface CalendarFreebusyBuilder extends Struct<CalendarFreebusyBuilder>{

			startTime(startTime:string):Ref<CalendarFreebusyBuilder>
			endTime(endTime:string):Ref<CalendarFreebusyBuilder>
			calendarId(calendarId:string):Ref<CalendarFreebusyBuilder>
			build():Ref<CalendarFreebusy>
	}
	export interface CalendarFreebusyError extends Struct<CalendarFreebusyError>,Error{

			calendarId:Ref<string>
			errorMsg:Ref<string>
	}
	export interface CalendarFreebusyErrorBuilder extends Struct<CalendarFreebusyErrorBuilder>,Error{

			calendarId(calendarId:string):Ref<CalendarFreebusyErrorBuilder>
			errorMsg(errorMsg:string):Ref<CalendarFreebusyErrorBuilder>
			build():Ref<CalendarFreebusyError>
	}
	export interface CalendarPrimaryBatchReq extends Struct<CalendarPrimaryBatchReq>{

			userIds:string[]
	}
	export interface CalendarPrimaryBatchReqBuilder extends Struct<CalendarPrimaryBatchReqBuilder>{

			userIds(userIds:string[]):Ref<CalendarPrimaryBatchReqBuilder>
			build():Ref<CalendarPrimaryBatchReq>
	}
	export interface CalendarUnderstandExtra extends Struct<CalendarUnderstandExtra>{

			aiTaskId:Ref<string>
			eventUid:Ref<string>
			originTime:Ref<string>
	}
	export interface CalendarUnderstandExtraBuilder extends Struct<CalendarUnderstandExtraBuilder>{

			aiTaskId(aiTaskId:string):Ref<CalendarUnderstandExtraBuilder>
			eventUid(eventUid:string):Ref<CalendarUnderstandExtraBuilder>
			originTime(originTime:string):Ref<CalendarUnderstandExtraBuilder>
			build():Ref<CalendarUnderstandExtra>
	}
	export interface CalendarUnderstandScenarioContext extends Struct<CalendarUnderstandScenarioContext>{

			scenario:Ref<string>
			workMode:Ref<int>
			extra:Ref<CalendarUnderstandExtra>
			systemInfo:Ref<SystemInfo>
	}
	export interface CalendarUnderstandScenarioContextBuilder extends Struct<CalendarUnderstandScenarioContextBuilder>{

			scenario(scenario:string):Ref<CalendarUnderstandScenarioContextBuilder>
			workMode(workMode:int):Ref<CalendarUnderstandScenarioContextBuilder>
			extra(extra:Ref<CalendarUnderstandExtra>):Ref<CalendarUnderstandScenarioContextBuilder>
			systemInfo(systemInfo:Ref<SystemInfo>):Ref<CalendarUnderstandScenarioContextBuilder>
			build():Ref<CalendarUnderstandScenarioContext>
	}
	export interface CardCallback extends Struct<CardCallback>{

			messageId:Ref<string>
			status:Ref<MyaiCardStatus>
			callbackInfo:Ref<string>
	}
	export interface CardCallbackBuilder extends Struct<CardCallbackBuilder>{

			messageId(messageId:string):Ref<CardCallbackBuilder>
			status(status:Ref<MyaiCardStatus>):Ref<CardCallbackBuilder>
			callbackInfo(callbackInfo:string):Ref<CardCallbackBuilder>
			build():Ref<CardCallback>
	}
	export interface CardPresent extends Struct<CardPresent>{

			body:Ref<string>
			interactable:Ref<bool>
			type:Ref<string>
			operationType:Ref<string>
			callbackInfo:Ref<string>
	}
	export interface CardPresentBuilder extends Struct<CardPresentBuilder>{

			body(body:string):Ref<CardPresentBuilder>
			interactable(interactable:bool):Ref<CardPresentBuilder>
			type(type_:string):Ref<CardPresentBuilder>
			operationType(operationType:string):Ref<CardPresentBuilder>
			callbackInfo(callbackInfo:string):Ref<CardPresentBuilder>
			build():Ref<CardPresent>
	}
	export interface CreateCalendarAclReq extends Struct<CreateCalendarAclReq>{

			calendarAcl:Ref<CalendarAcl>
	}
	export interface CreateCalendarAclReqBuilder extends Struct<CreateCalendarAclReqBuilder>{

			calendarId(calendarId:string):Ref<CreateCalendarAclReqBuilder>
			userIdType(userIdType:string):Ref<CreateCalendarAclReqBuilder>
			calendarAcl(calendarAcl:Ref<CalendarAcl>):Ref<CreateCalendarAclReqBuilder>
			build():Ref<CreateCalendarAclReq>
	}
	export interface CreateCalendarAclResp extends Struct<CreateCalendarAclResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateCalendarAclRespData>
			success():bool
	}
	export interface CreateCalendarAclRespData extends Struct<CreateCalendarAclRespData>{

			aclId:Ref<string>
			role:Ref<string>
			scope:Ref<AclScope>
	}
	export interface CreateCalendarEventAttendeePathReqBodyBuilder extends Struct<CreateCalendarEventAttendeePathReqBodyBuilder>{

			attendees(attendees:Ref<CalendarEventAttendee>[]):Ref<CreateCalendarEventAttendeePathReqBodyBuilder>
			needNotification(needNotification:bool):Ref<CreateCalendarEventAttendeePathReqBodyBuilder>
			instanceStartTimeAdmin(instanceStartTimeAdmin:string):Ref<CreateCalendarEventAttendeePathReqBodyBuilder>
			isEnableAdmin(isEnableAdmin:bool):Ref<CreateCalendarEventAttendeePathReqBodyBuilder>
			addOperatorToAttendee(addOperatorToAttendee:bool):Ref<CreateCalendarEventAttendeePathReqBodyBuilder>
			build():Ref<CreateCalendarEventAttendeeReqBody>
	}
	export interface CreateCalendarEventAttendeeReq extends Struct<CreateCalendarEventAttendeeReq>{

			body:Ref<CreateCalendarEventAttendeeReqBody>
	}
	export interface CreateCalendarEventAttendeeReqBody extends Struct<CreateCalendarEventAttendeeReqBody>{

			attendees:Ref<CalendarEventAttendee>[]
			needNotification:Ref<bool>
			instanceStartTimeAdmin:Ref<string>
			isEnableAdmin:Ref<bool>
			addOperatorToAttendee:Ref<bool>
	}
	export interface CreateCalendarEventAttendeeReqBodyBuilder extends Struct<CreateCalendarEventAttendeeReqBodyBuilder>{

			attendees(attendees:Ref<CalendarEventAttendee>[]):Ref<CreateCalendarEventAttendeeReqBodyBuilder>
			needNotification(needNotification:bool):Ref<CreateCalendarEventAttendeeReqBodyBuilder>
			instanceStartTimeAdmin(instanceStartTimeAdmin:string):Ref<CreateCalendarEventAttendeeReqBodyBuilder>
			isEnableAdmin(isEnableAdmin:bool):Ref<CreateCalendarEventAttendeeReqBodyBuilder>
			addOperatorToAttendee(addOperatorToAttendee:bool):Ref<CreateCalendarEventAttendeeReqBodyBuilder>
			build():Ref<CreateCalendarEventAttendeeReqBody>
	}
	export interface CreateCalendarEventAttendeeReqBuilder extends Struct<CreateCalendarEventAttendeeReqBuilder>{

			calendarId(calendarId:string):Ref<CreateCalendarEventAttendeeReqBuilder>
			eventId(eventId:string):Ref<CreateCalendarEventAttendeeReqBuilder>
			userIdType(userIdType:string):Ref<CreateCalendarEventAttendeeReqBuilder>
			body(body:Ref<CreateCalendarEventAttendeeReqBody>):Ref<CreateCalendarEventAttendeeReqBuilder>
			build():Ref<CreateCalendarEventAttendeeReq>
	}
	export interface CreateCalendarEventAttendeeResp extends Struct<CreateCalendarEventAttendeeResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateCalendarEventAttendeeRespData>
			success():bool
	}
	export interface CreateCalendarEventAttendeeRespData extends Struct<CreateCalendarEventAttendeeRespData>{

			attendees:Ref<CalendarEventAttendee>[]
	}
	export interface CreateCalendarEventMeetingChatReq extends Struct<CreateCalendarEventMeetingChatReq>{

	}
	export interface CreateCalendarEventMeetingChatReqBuilder extends Struct<CreateCalendarEventMeetingChatReqBuilder>{

			calendarId(calendarId:string):Ref<CreateCalendarEventMeetingChatReqBuilder>
			eventId(eventId:string):Ref<CreateCalendarEventMeetingChatReqBuilder>
			build():Ref<CreateCalendarEventMeetingChatReq>
	}
	export interface CreateCalendarEventMeetingChatResp extends Struct<CreateCalendarEventMeetingChatResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateCalendarEventMeetingChatRespData>
			success():bool
	}
	export interface CreateCalendarEventMeetingChatRespData extends Struct<CreateCalendarEventMeetingChatRespData>{

			meetingChatId:Ref<string>
			applink:Ref<string>
	}
	export interface CreateCalendarEventMeetingMinuteReq extends Struct<CreateCalendarEventMeetingMinuteReq>{

	}
	export interface CreateCalendarEventMeetingMinuteReqBuilder extends Struct<CreateCalendarEventMeetingMinuteReqBuilder>{

			calendarId(calendarId:string):Ref<CreateCalendarEventMeetingMinuteReqBuilder>
			eventId(eventId:string):Ref<CreateCalendarEventMeetingMinuteReqBuilder>
			build():Ref<CreateCalendarEventMeetingMinuteReq>
	}
	export interface CreateCalendarEventMeetingMinuteResp extends Struct<CreateCalendarEventMeetingMinuteResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateCalendarEventMeetingMinuteRespData>
			success():bool
	}
	export interface CreateCalendarEventMeetingMinuteRespData extends Struct<CreateCalendarEventMeetingMinuteRespData>{

			docUrl:Ref<string>
	}
	export interface CreateCalendarEventReq extends Struct<CreateCalendarEventReq>{

			calendarEvent:Ref<CalendarEvent>
	}
	export interface CreateCalendarEventReqBuilder extends Struct<CreateCalendarEventReqBuilder>{

			calendarId(calendarId:string):Ref<CreateCalendarEventReqBuilder>
			idempotencyKey(idempotencyKey:string):Ref<CreateCalendarEventReqBuilder>
			userIdType(userIdType:string):Ref<CreateCalendarEventReqBuilder>
			calendarEvent(calendarEvent:Ref<CalendarEvent>):Ref<CreateCalendarEventReqBuilder>
			build():Ref<CreateCalendarEventReq>
	}
	export interface CreateCalendarEventResp extends Struct<CreateCalendarEventResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateCalendarEventRespData>
			success():bool
	}
	export interface CreateCalendarEventRespData extends Struct<CreateCalendarEventRespData>{

			event:Ref<CalendarEvent>
	}
	export interface CreateCalendarReq extends Struct<CreateCalendarReq>{

			calendar:Ref<Calendar>
	}
	export interface CreateCalendarReqBuilder extends Struct<CreateCalendarReqBuilder>{

			calendar(calendar:Ref<Calendar>):Ref<CreateCalendarReqBuilder>
			build():Ref<CreateCalendarReq>
	}
	export interface CreateCalendarResp extends Struct<CreateCalendarResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateCalendarRespData>
			success():bool
	}
	export interface CreateCalendarRespData extends Struct<CreateCalendarRespData>{

			calendar:Ref<Calendar>
	}
	export interface CreateExchangeBindingReq extends Struct<CreateExchangeBindingReq>{

			exchangeBinding:Ref<ExchangeBinding>
	}
	export interface CreateExchangeBindingReqBuilder extends Struct<CreateExchangeBindingReqBuilder>{

			userIdType(userIdType:string):Ref<CreateExchangeBindingReqBuilder>
			exchangeBinding(exchangeBinding:Ref<ExchangeBinding>):Ref<CreateExchangeBindingReqBuilder>
			build():Ref<CreateExchangeBindingReq>
	}
	export interface CreateExchangeBindingResp extends Struct<CreateExchangeBindingResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateExchangeBindingRespData>
			success():bool
	}
	export interface CreateExchangeBindingRespData extends Struct<CreateExchangeBindingRespData>{

			adminAccount:Ref<string>
			exchangeAccount:Ref<string>
			userId:Ref<string>
			status:Ref<string>
			exchangeBindingId:Ref<string>
	}
	export interface CreateTimeoffEventReq extends Struct<CreateTimeoffEventReq>{

			timeoffEvent:Ref<TimeoffEvent>
	}
	export interface CreateTimeoffEventReqBuilder extends Struct<CreateTimeoffEventReqBuilder>{

			userIdType(userIdType:string):Ref<CreateTimeoffEventReqBuilder>
			timeoffEvent(timeoffEvent:Ref<TimeoffEvent>):Ref<CreateTimeoffEventReqBuilder>
			build():Ref<CreateTimeoffEventReq>
	}
	export interface CreateTimeoffEventResp extends Struct<CreateTimeoffEventResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateTimeoffEventRespData>
			success():bool
	}
	export interface CreateTimeoffEventRespData extends Struct<CreateTimeoffEventRespData>{

			timeoffEventId:Ref<string>
			userId:Ref<string>
			timezone:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			title:Ref<string>
			description:Ref<string>
	}
	export interface CustomizationOption extends Struct<CustomizationOption>{

			optionKey:Ref<string>
			othersContent:Ref<string>
	}
	export interface CustomizationOptionBuilder extends Struct<CustomizationOptionBuilder>{

			optionKey(optionKey:string):Ref<CustomizationOptionBuilder>
			othersContent(othersContent:string):Ref<CustomizationOptionBuilder>
			build():Ref<CustomizationOption>
	}
	export interface DeleteCalendarAclReq extends Struct<DeleteCalendarAclReq>{

	}
	export interface DeleteCalendarAclReqBuilder extends Struct<DeleteCalendarAclReqBuilder>{

			calendarId(calendarId:string):Ref<DeleteCalendarAclReqBuilder>
			aclId(aclId:string):Ref<DeleteCalendarAclReqBuilder>
			build():Ref<DeleteCalendarAclReq>
	}
	export interface DeleteCalendarAclResp extends Struct<DeleteCalendarAclResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeleteCalendarEventMeetingChatReq extends Struct<DeleteCalendarEventMeetingChatReq>{

	}
	export interface DeleteCalendarEventMeetingChatReqBuilder extends Struct<DeleteCalendarEventMeetingChatReqBuilder>{

			calendarId(calendarId:string):Ref<DeleteCalendarEventMeetingChatReqBuilder>
			eventId(eventId:string):Ref<DeleteCalendarEventMeetingChatReqBuilder>
			meetingChatId(meetingChatId:string):Ref<DeleteCalendarEventMeetingChatReqBuilder>
			build():Ref<DeleteCalendarEventMeetingChatReq>
	}
	export interface DeleteCalendarEventMeetingChatResp extends Struct<DeleteCalendarEventMeetingChatResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeleteCalendarEventReq extends Struct<DeleteCalendarEventReq>{

	}
	export interface DeleteCalendarEventReqBuilder extends Struct<DeleteCalendarEventReqBuilder>{

			calendarId(calendarId:string):Ref<DeleteCalendarEventReqBuilder>
			eventId(eventId:string):Ref<DeleteCalendarEventReqBuilder>
			needNotification(needNotification:string):Ref<DeleteCalendarEventReqBuilder>
			build():Ref<DeleteCalendarEventReq>
	}
	export interface DeleteCalendarEventResp extends Struct<DeleteCalendarEventResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeleteCalendarReq extends Struct<DeleteCalendarReq>{

	}
	export interface DeleteCalendarReqBuilder extends Struct<DeleteCalendarReqBuilder>{

			calendarId(calendarId:string):Ref<DeleteCalendarReqBuilder>
			build():Ref<DeleteCalendarReq>
	}
	export interface DeleteCalendarResp extends Struct<DeleteCalendarResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeleteExchangeBindingReq extends Struct<DeleteExchangeBindingReq>{

	}
	export interface DeleteExchangeBindingReqBuilder extends Struct<DeleteExchangeBindingReqBuilder>{

			exchangeBindingId(exchangeBindingId:string):Ref<DeleteExchangeBindingReqBuilder>
			build():Ref<DeleteExchangeBindingReq>
	}
	export interface DeleteExchangeBindingResp extends Struct<DeleteExchangeBindingResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeleteTimeoffEventReq extends Struct<DeleteTimeoffEventReq>{

	}
	export interface DeleteTimeoffEventReqBuilder extends Struct<DeleteTimeoffEventReqBuilder>{

			timeoffEventId(timeoffEventId:string):Ref<DeleteTimeoffEventReqBuilder>
			build():Ref<DeleteTimeoffEventReq>
	}
	export interface DeleteTimeoffEventResp extends Struct<DeleteTimeoffEventResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DepartmentId extends Struct<DepartmentId>{

			departmentId:Ref<string>
			openDepartmentId:Ref<string>
	}
	export interface DepartmentIdBuilder extends Struct<DepartmentIdBuilder>{

			departmentId(departmentId:string):Ref<DepartmentIdBuilder>
			openDepartmentId(openDepartmentId:string):Ref<DepartmentIdBuilder>
			build():Ref<DepartmentId>
	}
	//"can_invite_others"
	export const EventAttendeeAbilityCanInviteOthers:string
	//"can_modify_event"
	export const EventAttendeeAbilityCanModifyEvent:string
	//"can_see_others"
	export const EventAttendeeAbilityCanSeeOthers:string
	//"none"
	export const EventAttendeeAbilityNone:string
	//"can_invite_others"
	export const EventAttendeeAbilityPatchCalendarEventCanInviteOthers:string
	//"can_modify_event"
	export const EventAttendeeAbilityPatchCalendarEventCanModifyEvent:string
	//"can_see_others"
	export const EventAttendeeAbilityPatchCalendarEventCanSeeOthers:string
	//"none"
	export const EventAttendeeAbilityPatchCalendarEventNone:string
	export interface EventBriefInfoAi extends Struct<EventBriefInfoAi>{

			eventId:Ref<string>
			summary:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			appLink:Ref<string>
			organizer:Ref<EventOrganizer>
	}
	export interface EventBriefInfoAiBuilder extends Struct<EventBriefInfoAiBuilder>{

			eventId(eventId:string):Ref<EventBriefInfoAiBuilder>
			summary(summary:string):Ref<EventBriefInfoAiBuilder>
			startTime(startTime:string):Ref<EventBriefInfoAiBuilder>
			endTime(endTime:string):Ref<EventBriefInfoAiBuilder>
			appLink(appLink:string):Ref<EventBriefInfoAiBuilder>
			organizer(organizer:Ref<EventOrganizer>):Ref<EventBriefInfoAiBuilder>
			build():Ref<EventBriefInfoAi>
	}
	export interface EventCard extends Struct<EventCard>{

			summary:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			startTimezone:Ref<string>
			participantIds:Ref<string>
			recurrenceRule:Ref<string>
			meetingRoomIds:Ref<string>
			duration:Ref<string>
			needMeetingNotes:Ref<string>
			scenarioContextSchemaVersion:Ref<string>
			scenarioContext:Ref<CalendarUnderstandScenarioContext>
			eventId:Ref<string>
	}
	export interface EventCardBuilder extends Struct<EventCardBuilder>{

			summary(summary:string):Ref<EventCardBuilder>
			startTime(startTime:string):Ref<EventCardBuilder>
			endTime(endTime:string):Ref<EventCardBuilder>
			startTimezone(startTimezone:string):Ref<EventCardBuilder>
			participantIds(participantIds:string):Ref<EventCardBuilder>
			recurrenceRule(recurrenceRule:string):Ref<EventCardBuilder>
			meetingRoomIds(meetingRoomIds:string):Ref<EventCardBuilder>
			duration(duration:string):Ref<EventCardBuilder>
			needMeetingNotes(needMeetingNotes:string):Ref<EventCardBuilder>
			scenarioContextSchemaVersion(scenarioContextSchemaVersion:string):Ref<EventCardBuilder>
			scenarioContext(scenarioContext:Ref<CalendarUnderstandScenarioContext>):Ref<EventCardBuilder>
			eventId(eventId:string):Ref<EventCardBuilder>
			build():Ref<EventCard>
	}
	//"busy"
	export const EventFreeBusyStatusBusy:string
	//"free"
	export const EventFreeBusyStatusFree:string
	//"busy"
	export const EventFreeBusyStatusPatchCalendarEventBusy:string
	//"free"
	export const EventFreeBusyStatusPatchCalendarEventFree:string
	export interface EventLocation extends Struct<EventLocation>{

			name:Ref<string>
			address:Ref<string>
			latitude:Ref<float64>
			longitude:Ref<float64>
	}
	export interface EventLocationBuilder extends Struct<EventLocationBuilder>{

			name(name:string):Ref<EventLocationBuilder>
			address(address:string):Ref<EventLocationBuilder>
			latitude(latitude:float64):Ref<EventLocationBuilder>
			longitude(longitude:float64):Ref<EventLocationBuilder>
			build():Ref<EventLocation>
	}
	export interface EventOrganizer extends Struct<EventOrganizer>{

			userId:Ref<string>
			displayName:Ref<string>
	}
	export interface EventOrganizerBuilder extends Struct<EventOrganizerBuilder>{

			userId(userId:string):Ref<EventOrganizerBuilder>
			displayName(displayName:string):Ref<EventOrganizerBuilder>
			build():Ref<EventOrganizer>
	}
	//"private"
	export const EventPermissionsPatchCalendarPrivate:string
	//"public"
	export const EventPermissionsPatchCalendarPublic:string
	//"show_only_free_busy"
	export const EventPermissionsPatchCalendarShowOnlyFreeBusy:string
	//"private"
	export const EventPermissionsPrivate:string
	//"public"
	export const EventPermissionsPublic:string
	//"show_only_free_busy"
	export const EventPermissionsShowOnlyFreeBusy:string
	export interface EventSearchFilter extends Struct<EventSearchFilter>{

			startTime:Ref<TimeInfo>
			endTime:Ref<TimeInfo>
			userIds:string[]
			roomIds:string[]
			chatIds:string[]
	}
	export interface EventSearchFilterBuilder extends Struct<EventSearchFilterBuilder>{

			startTime(startTime:Ref<TimeInfo>):Ref<EventSearchFilterBuilder>
			endTime(endTime:Ref<TimeInfo>):Ref<EventSearchFilterBuilder>
			userIds(userIds:string[]):Ref<EventSearchFilterBuilder>
			roomIds(roomIds:string[]):Ref<EventSearchFilterBuilder>
			chatIds(chatIds:string[]):Ref<EventSearchFilterBuilder>
			build():Ref<EventSearchFilter>
	}
	export interface EventTime extends Struct<EventTime>{

			timeStamp:Ref<string>
	}
	export interface EventTimeBuilder extends Struct<EventTimeBuilder>{

			timeStamp(timeStamp:string):Ref<EventTimeBuilder>
			build():Ref<EventTime>
	}
	//"default"
	export const EventVisibilityDefault:string
	//"default"
	export const EventVisibilityPatchCalendarEventDefault:string
	//"private"
	export const EventVisibilityPatchCalendarEventPrivate:string
	//"public"
	export const EventVisibilityPatchCalendarEventPublic:string
	//"private"
	export const EventVisibilityPrivate:string
	//"public"
	export const EventVisibilityPublic:string
	export interface ExchangeBinding extends Struct<ExchangeBinding>{

			adminAccount:Ref<string>
			exchangeAccount:Ref<string>
			userId:Ref<string>
			status:Ref<string>
			exchangeBindingId:Ref<string>
	}
	export interface ExchangeBindingBuilder extends Struct<ExchangeBindingBuilder>{

			adminAccount(adminAccount:string):Ref<ExchangeBindingBuilder>
			exchangeAccount(exchangeAccount:string):Ref<ExchangeBindingBuilder>
			userId(userId:string):Ref<ExchangeBindingBuilder>
			status(status:string):Ref<ExchangeBindingBuilder>
			exchangeBindingId(exchangeBindingId:string):Ref<ExchangeBindingBuilder>
			build():Ref<ExchangeBinding>
	}
	export interface File extends Struct<File>{

			fileToken:Ref<string>
			fileSize:Ref<string>
			name:Ref<string>
	}
	export interface FileBuilder extends Struct<FileBuilder>{

			fileToken(fileToken:string):Ref<FileBuilder>
			fileSize(fileSize:string):Ref<FileBuilder>
			name(name:string):Ref<FileBuilder>
			build():Ref<File>
	}
	export interface FreeTime extends Struct<FreeTime>{

			freeTimeStart:Ref<string>
			freeTimeEnd:Ref<string>
			freeTimeList:Ref<string>
	}
	export interface FreeTimeAi extends Struct<FreeTimeAi>{

			freeTimeList:Ref<string>
	}
	export interface FreeTimeAiBuilder extends Struct<FreeTimeAiBuilder>{

			freeTimeList(freeTimeList:string):Ref<FreeTimeAiBuilder>
			build():Ref<FreeTimeAi>
	}
	export interface FreeTimeBuilder extends Struct<FreeTimeBuilder>{

			freeTimeStart(freeTimeStart:string):Ref<FreeTimeBuilder>
			freeTimeEnd(freeTimeEnd:string):Ref<FreeTimeBuilder>
			freeTimeList(freeTimeList:string):Ref<FreeTimeBuilder>
			build():Ref<FreeTime>
	}
	export interface FreeTimeSlot extends Struct<FreeTimeSlot>{

			startTime:Ref<string>
			endTime:Ref<string>
			length:Ref<int>
	}
	export interface FreeTimeSlotBuilder extends Struct<FreeTimeSlotBuilder>{

			startTime(startTime:string):Ref<FreeTimeSlotBuilder>
			endTime(endTime:string):Ref<FreeTimeSlotBuilder>
			length(length:int):Ref<FreeTimeSlotBuilder>
			build():Ref<FreeTimeSlot>
	}
	export interface Freebusy extends Struct<Freebusy>{

			startTime:Ref<string>
			endTime:Ref<string>
	}
	export interface FreebusyBuilder extends Struct<FreebusyBuilder>{

			startTime(startTime:string):Ref<FreebusyBuilder>
			endTime(endTime:string):Ref<FreebusyBuilder>
			build():Ref<Freebusy>
	}
	export interface GenerateCaldavConfSettingPathReqBodyBuilder extends Struct<GenerateCaldavConfSettingPathReqBodyBuilder>{

			deviceName(deviceName:string):Ref<GenerateCaldavConfSettingPathReqBodyBuilder>
			build():Ref<GenerateCaldavConfSettingReqBody>
	}
	export interface GenerateCaldavConfSettingReq extends Struct<GenerateCaldavConfSettingReq>{

			body:Ref<GenerateCaldavConfSettingReqBody>
	}
	export interface GenerateCaldavConfSettingReqBody extends Struct<GenerateCaldavConfSettingReqBody>{

			deviceName:Ref<string>
	}
	export interface GenerateCaldavConfSettingReqBodyBuilder extends Struct<GenerateCaldavConfSettingReqBodyBuilder>{

			deviceName(deviceName:string):Ref<GenerateCaldavConfSettingReqBodyBuilder>
			build():Ref<GenerateCaldavConfSettingReqBody>
	}
	export interface GenerateCaldavConfSettingReqBuilder extends Struct<GenerateCaldavConfSettingReqBuilder>{

			body(body:Ref<GenerateCaldavConfSettingReqBody>):Ref<GenerateCaldavConfSettingReqBuilder>
			build():Ref<GenerateCaldavConfSettingReq>
	}
	export interface GenerateCaldavConfSettingResp extends Struct<GenerateCaldavConfSettingResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GenerateCaldavConfSettingRespData>
			success():bool
	}
	export interface GenerateCaldavConfSettingRespData extends Struct<GenerateCaldavConfSettingRespData>{

			password:Ref<string>
			userName:Ref<string>
			serverAddress:Ref<string>
			deviceName:Ref<string>
	}
	export interface GetCalendarEventReq extends Struct<GetCalendarEventReq>{

	}
	export interface GetCalendarEventReqBuilder extends Struct<GetCalendarEventReqBuilder>{

			calendarId(calendarId:string):Ref<GetCalendarEventReqBuilder>
			eventId(eventId:string):Ref<GetCalendarEventReqBuilder>
			needMeetingSettings(needMeetingSettings:bool):Ref<GetCalendarEventReqBuilder>
			needAttendee(needAttendee:bool):Ref<GetCalendarEventReqBuilder>
			maxAttendeeNum(maxAttendeeNum:int):Ref<GetCalendarEventReqBuilder>
			userIdType(userIdType:string):Ref<GetCalendarEventReqBuilder>
			build():Ref<GetCalendarEventReq>
	}
	export interface GetCalendarEventResp extends Struct<GetCalendarEventResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetCalendarEventRespData>
			success():bool
	}
	export interface GetCalendarEventRespData extends Struct<GetCalendarEventRespData>{

			event:Ref<CalendarEvent>
	}
	export interface GetCalendarReq extends Struct<GetCalendarReq>{

	}
	export interface GetCalendarReqBuilder extends Struct<GetCalendarReqBuilder>{

			calendarId(calendarId:string):Ref<GetCalendarReqBuilder>
			build():Ref<GetCalendarReq>
	}
	export interface GetCalendarResp extends Struct<GetCalendarResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetCalendarRespData>
			success():bool
	}
	export interface GetCalendarRespData extends Struct<GetCalendarRespData>{

			calendarId:Ref<string>
			summary:Ref<string>
			description:Ref<string>
			permissions:Ref<string>
			color:Ref<int>
			type:Ref<string>
			summaryAlias:Ref<string>
			isDeleted:Ref<bool>
			isThirdParty:Ref<bool>
			role:Ref<string>
	}
	export interface GetExchangeBindingReq extends Struct<GetExchangeBindingReq>{

	}
	export interface GetExchangeBindingReqBuilder extends Struct<GetExchangeBindingReqBuilder>{

			exchangeBindingId(exchangeBindingId:string):Ref<GetExchangeBindingReqBuilder>
			userIdType(userIdType:string):Ref<GetExchangeBindingReqBuilder>
			build():Ref<GetExchangeBindingReq>
	}
	export interface GetExchangeBindingResp extends Struct<GetExchangeBindingResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetExchangeBindingRespData>
			success():bool
	}
	export interface GetExchangeBindingRespData extends Struct<GetExchangeBindingRespData>{

			adminAccount:Ref<string>
			exchangeAccount:Ref<string>
			userId:Ref<string>
			status:Ref<string>
			exchangeBindingId:Ref<string>
	}
	export interface Instance extends Struct<Instance>{

			eventId:Ref<string>
			summary:Ref<string>
			description:Ref<string>
			startTime:Ref<TimeInfo>
			endTime:Ref<TimeInfo>
			status:Ref<string>
			isException:Ref<bool>
			appLink:Ref<string>
			organizerCalendarId:Ref<string>
			vchat:Ref<Vchat>
			visibility:Ref<string>
			attendeeAbility:Ref<string>
			freeBusyStatus:Ref<string>
			location:Ref<EventLocation>
			color:Ref<int>
			recurringEventId:Ref<string>
			eventOrganizer:Ref<EventOrganizer>
			attendees:Ref<CalendarEventAttendee>[]
	}
	export interface InstanceBuilder extends Struct<InstanceBuilder>{

			eventId(eventId:string):Ref<InstanceBuilder>
			summary(summary:string):Ref<InstanceBuilder>
			description(description:string):Ref<InstanceBuilder>
			startTime(startTime:Ref<TimeInfo>):Ref<InstanceBuilder>
			endTime(endTime:Ref<TimeInfo>):Ref<InstanceBuilder>
			status(status:string):Ref<InstanceBuilder>
			isException(isException:bool):Ref<InstanceBuilder>
			appLink(appLink:string):Ref<InstanceBuilder>
			organizerCalendarId(organizerCalendarId:string):Ref<InstanceBuilder>
			vchat(vchat:Ref<Vchat>):Ref<InstanceBuilder>
			visibility(visibility:string):Ref<InstanceBuilder>
			attendeeAbility(attendeeAbility:string):Ref<InstanceBuilder>
			freeBusyStatus(freeBusyStatus:string):Ref<InstanceBuilder>
			location(location:Ref<EventLocation>):Ref<InstanceBuilder>
			color(color:int):Ref<InstanceBuilder>
			recurringEventId(recurringEventId:string):Ref<InstanceBuilder>
			eventOrganizer(eventOrganizer:Ref<EventOrganizer>):Ref<InstanceBuilder>
			attendees(attendees:Ref<CalendarEventAttendee>[]):Ref<InstanceBuilder>
			build():Ref<Instance>
	}
	export interface InstanceViewCalendarEventReq extends Struct<InstanceViewCalendarEventReq>{

	}
	export interface InstanceViewCalendarEventReqBuilder extends Struct<InstanceViewCalendarEventReqBuilder>{

			calendarId(calendarId:string):Ref<InstanceViewCalendarEventReqBuilder>
			startTime(startTime:string):Ref<InstanceViewCalendarEventReqBuilder>
			endTime(endTime:string):Ref<InstanceViewCalendarEventReqBuilder>
			userIdType(userIdType:string):Ref<InstanceViewCalendarEventReqBuilder>
			build():Ref<InstanceViewCalendarEventReq>
	}
	export interface InstanceViewCalendarEventResp extends Struct<InstanceViewCalendarEventResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<InstanceViewCalendarEventRespData>
			success():bool
	}
	export interface InstanceViewCalendarEventRespData extends Struct<InstanceViewCalendarEventRespData>{

			items:Ref<Instance>[]
	}
	export interface InstancesCalendarEventReq extends Struct<InstancesCalendarEventReq>{

	}
	export interface InstancesCalendarEventReqBuilder extends Struct<InstancesCalendarEventReqBuilder>{

			calendarId(calendarId:string):Ref<InstancesCalendarEventReqBuilder>
			eventId(eventId:string):Ref<InstancesCalendarEventReqBuilder>
			startTime(startTime:string):Ref<InstancesCalendarEventReqBuilder>
			endTime(endTime:string):Ref<InstancesCalendarEventReqBuilder>
			pageSize(pageSize:int):Ref<InstancesCalendarEventReqBuilder>
			pageToken(pageToken:string):Ref<InstancesCalendarEventReqBuilder>
			build():Ref<InstancesCalendarEventReq>
	}
	export interface InstancesCalendarEventResp extends Struct<InstancesCalendarEventResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<InstancesCalendarEventRespData>
			success():bool
	}
	export interface InstancesCalendarEventRespData extends Struct<InstancesCalendarEventRespData>{

			items:Ref<Instance>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface ListCalendarAclIterator extends Struct<ListCalendarAclIterator>{

			next():[bool,Ref<CalendarAcl>]
			nextPageToken():Ref<string>
	}
	export interface ListCalendarAclReq extends Struct<ListCalendarAclReq>{

			limit:int
	}
	export interface ListCalendarAclReqBuilder extends Struct<ListCalendarAclReqBuilder>{

			limit(limit:int):Ref<ListCalendarAclReqBuilder>
			calendarId(calendarId:string):Ref<ListCalendarAclReqBuilder>
			userIdType(userIdType:string):Ref<ListCalendarAclReqBuilder>
			pageToken(pageToken:string):Ref<ListCalendarAclReqBuilder>
			pageSize(pageSize:int):Ref<ListCalendarAclReqBuilder>
			build():Ref<ListCalendarAclReq>
	}
	export interface ListCalendarAclResp extends Struct<ListCalendarAclResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListCalendarAclRespData>
			success():bool
	}
	export interface ListCalendarAclRespData extends Struct<ListCalendarAclRespData>{

			acls:Ref<CalendarAcl>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListCalendarEventAttendeeChatMemberIterator extends Struct<ListCalendarEventAttendeeChatMemberIterator>{

			next():[bool,Ref<CalendarEventAttendeeChatMember>]
			nextPageToken():Ref<string>
	}
	export interface ListCalendarEventAttendeeChatMemberReq extends Struct<ListCalendarEventAttendeeChatMemberReq>{

			limit:int
	}
	export interface ListCalendarEventAttendeeChatMemberReqBuilder extends Struct<ListCalendarEventAttendeeChatMemberReqBuilder>{

			limit(limit:int):Ref<ListCalendarEventAttendeeChatMemberReqBuilder>
			calendarId(calendarId:string):Ref<ListCalendarEventAttendeeChatMemberReqBuilder>
			eventId(eventId:string):Ref<ListCalendarEventAttendeeChatMemberReqBuilder>
			attendeeId(attendeeId:string):Ref<ListCalendarEventAttendeeChatMemberReqBuilder>
			pageToken(pageToken:string):Ref<ListCalendarEventAttendeeChatMemberReqBuilder>
			pageSize(pageSize:int):Ref<ListCalendarEventAttendeeChatMemberReqBuilder>
			userIdType(userIdType:string):Ref<ListCalendarEventAttendeeChatMemberReqBuilder>
			build():Ref<ListCalendarEventAttendeeChatMemberReq>
	}
	export interface ListCalendarEventAttendeeChatMemberResp extends Struct<ListCalendarEventAttendeeChatMemberResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListCalendarEventAttendeeChatMemberRespData>
			success():bool
	}
	export interface ListCalendarEventAttendeeChatMemberRespData extends Struct<ListCalendarEventAttendeeChatMemberRespData>{

			items:Ref<CalendarEventAttendeeChatMember>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListCalendarEventAttendeeIterator extends Struct<ListCalendarEventAttendeeIterator>{

			next():[bool,Ref<CalendarEventAttendee>]
			nextPageToken():Ref<string>
	}
	export interface ListCalendarEventAttendeeReq extends Struct<ListCalendarEventAttendeeReq>{

			limit:int
	}
	export interface ListCalendarEventAttendeeReqBuilder extends Struct<ListCalendarEventAttendeeReqBuilder>{

			limit(limit:int):Ref<ListCalendarEventAttendeeReqBuilder>
			calendarId(calendarId:string):Ref<ListCalendarEventAttendeeReqBuilder>
			eventId(eventId:string):Ref<ListCalendarEventAttendeeReqBuilder>
			userIdType(userIdType:string):Ref<ListCalendarEventAttendeeReqBuilder>
			needResourceCustomization(needResourceCustomization:bool):Ref<ListCalendarEventAttendeeReqBuilder>
			pageToken(pageToken:string):Ref<ListCalendarEventAttendeeReqBuilder>
			pageSize(pageSize:int):Ref<ListCalendarEventAttendeeReqBuilder>
			build():Ref<ListCalendarEventAttendeeReq>
	}
	export interface ListCalendarEventAttendeeResp extends Struct<ListCalendarEventAttendeeResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListCalendarEventAttendeeRespData>
			success():bool
	}
	export interface ListCalendarEventAttendeeRespData extends Struct<ListCalendarEventAttendeeRespData>{

			items:Ref<CalendarEventAttendee>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListCalendarEventReq extends Struct<ListCalendarEventReq>{

	}
	export interface ListCalendarEventReqBuilder extends Struct<ListCalendarEventReqBuilder>{

			calendarId(calendarId:string):Ref<ListCalendarEventReqBuilder>
			pageSize(pageSize:int):Ref<ListCalendarEventReqBuilder>
			anchorTime(anchorTime:string):Ref<ListCalendarEventReqBuilder>
			pageToken(pageToken:string):Ref<ListCalendarEventReqBuilder>
			syncToken(syncToken:string):Ref<ListCalendarEventReqBuilder>
			startTime(startTime:string):Ref<ListCalendarEventReqBuilder>
			endTime(endTime:string):Ref<ListCalendarEventReqBuilder>
			userIdType(userIdType:string):Ref<ListCalendarEventReqBuilder>
			build():Ref<ListCalendarEventReq>
	}
	export interface ListCalendarEventResp extends Struct<ListCalendarEventResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListCalendarEventRespData>
			success():bool
	}
	export interface ListCalendarEventRespData extends Struct<ListCalendarEventRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			syncToken:Ref<string>
			items:Ref<CalendarEvent>[]
	}
	export interface ListCalendarReq extends Struct<ListCalendarReq>{

	}
	export interface ListCalendarReqBuilder extends Struct<ListCalendarReqBuilder>{

			pageSize(pageSize:int):Ref<ListCalendarReqBuilder>
			pageToken(pageToken:string):Ref<ListCalendarReqBuilder>
			syncToken(syncToken:string):Ref<ListCalendarReqBuilder>
			build():Ref<ListCalendarReq>
	}
	export interface ListCalendarResp extends Struct<ListCalendarResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListCalendarRespData>
			success():bool
	}
	export interface ListCalendarRespData extends Struct<ListCalendarRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			syncToken:Ref<string>
			calendarList:Ref<Calendar>[]
	}
	export interface ListFreebusyPathReqBodyBuilder extends Struct<ListFreebusyPathReqBodyBuilder>{

			timeMin(timeMin:string):Ref<ListFreebusyPathReqBodyBuilder>
			timeMax(timeMax:string):Ref<ListFreebusyPathReqBodyBuilder>
			userId(userId:string):Ref<ListFreebusyPathReqBodyBuilder>
			roomId(roomId:string):Ref<ListFreebusyPathReqBodyBuilder>
			includeExternalCalendar(includeExternalCalendar:bool):Ref<ListFreebusyPathReqBodyBuilder>
			onlyBusy(onlyBusy:bool):Ref<ListFreebusyPathReqBodyBuilder>
			build():Ref<ListFreebusyReqBody>
	}
	export interface ListFreebusyReq extends Struct<ListFreebusyReq>{

			body:Ref<ListFreebusyReqBody>
	}
	export interface ListFreebusyReqBody extends Struct<ListFreebusyReqBody>{

			timeMin:Ref<string>
			timeMax:Ref<string>
			userId:Ref<string>
			roomId:Ref<string>
			includeExternalCalendar:Ref<bool>
			onlyBusy:Ref<bool>
	}
	export interface ListFreebusyReqBodyBuilder extends Struct<ListFreebusyReqBodyBuilder>{

			timeMin(timeMin:string):Ref<ListFreebusyReqBodyBuilder>
			timeMax(timeMax:string):Ref<ListFreebusyReqBodyBuilder>
			userId(userId:string):Ref<ListFreebusyReqBodyBuilder>
			roomId(roomId:string):Ref<ListFreebusyReqBodyBuilder>
			includeExternalCalendar(includeExternalCalendar:bool):Ref<ListFreebusyReqBodyBuilder>
			onlyBusy(onlyBusy:bool):Ref<ListFreebusyReqBodyBuilder>
			build():Ref<ListFreebusyReqBody>
	}
	export interface ListFreebusyReqBuilder extends Struct<ListFreebusyReqBuilder>{

			userIdType(userIdType:string):Ref<ListFreebusyReqBuilder>
			body(body:Ref<ListFreebusyReqBody>):Ref<ListFreebusyReqBuilder>
			build():Ref<ListFreebusyReq>
	}
	export interface ListFreebusyResp extends Struct<ListFreebusyResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListFreebusyRespData>
			success():bool
	}
	export interface ListFreebusyRespData extends Struct<ListFreebusyRespData>{

			freebusyList:Ref<Freebusy>[]
	}
	export interface MeetingChat extends Struct<MeetingChat>{

			meetingChatId:Ref<string>
			applink:Ref<string>
	}
	export interface MeetingChatBuilder extends Struct<MeetingChatBuilder>{

			meetingChatId(meetingChatId:string):Ref<MeetingChatBuilder>
			applink(applink:string):Ref<MeetingChatBuilder>
			build():Ref<MeetingChat>
	}
	export interface MeetingMinute extends Struct<MeetingMinute>{

			docToken:Ref<string>
			docUrl:Ref<string>
	}
	export interface MeetingMinuteBuilder extends Struct<MeetingMinuteBuilder>{

			docToken(docToken:string):Ref<MeetingMinuteBuilder>
			docUrl(docUrl:string):Ref<MeetingMinuteBuilder>
			build():Ref<MeetingMinute>
	}
	export interface MeetingSettings extends Struct<MeetingSettings>{

			ownerId:Ref<string>
			joinMeetingPermission:Ref<string>
			password:Ref<string>
			assignHosts:string[]
			autoRecord:Ref<bool>
			openLobby:Ref<bool>
			allowAttendeesStart:Ref<bool>
	}
	export interface MeetingSettingsBuilder extends Struct<MeetingSettingsBuilder>{

			ownerId(ownerId:string):Ref<MeetingSettingsBuilder>
			joinMeetingPermission(joinMeetingPermission:string):Ref<MeetingSettingsBuilder>
			password(password:string):Ref<MeetingSettingsBuilder>
			assignHosts(assignHosts:string[]):Ref<MeetingSettingsBuilder>
			autoRecord(autoRecord:bool):Ref<MeetingSettingsBuilder>
			openLobby(openLobby:bool):Ref<MeetingSettingsBuilder>
			allowAttendeesStart(allowAttendeesStart:bool):Ref<MeetingSettingsBuilder>
			build():Ref<MeetingSettings>
	}
	export interface MyAiEventDetail extends Struct<MyAiEventDetail>{

			eventId:Ref<string>
			summary:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			timezone:Ref<string>
			recurrenceRule:Ref<string>
			participants:Ref<UserMeta>[]
			rooms:Ref<RoomMeta>[]
			accessRole:Ref<string>
	}
	export interface MyAiEventDetailBuilder extends Struct<MyAiEventDetailBuilder>{

			eventId(eventId:string):Ref<MyAiEventDetailBuilder>
			summary(summary:string):Ref<MyAiEventDetailBuilder>
			startTime(startTime:string):Ref<MyAiEventDetailBuilder>
			endTime(endTime:string):Ref<MyAiEventDetailBuilder>
			timezone(timezone:string):Ref<MyAiEventDetailBuilder>
			recurrenceRule(recurrenceRule:string):Ref<MyAiEventDetailBuilder>
			participants(participants:Ref<UserMeta>[]):Ref<MyAiEventDetailBuilder>
			rooms(rooms:Ref<RoomMeta>[]):Ref<MyAiEventDetailBuilder>
			accessRole(accessRole:string):Ref<MyAiEventDetailBuilder>
			build():Ref<MyAiEventDetail>
	}
	export interface MyAiEventInfo extends Struct<MyAiEventInfo>{

			eventId:Ref<string>
			summary:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			startTimezone:Ref<string>
			recurrenceRule:Ref<string>
			participantIds:Ref<string>
			meetingRoomIds:Ref<string>
	}
	export interface MyAiEventInfoBuilder extends Struct<MyAiEventInfoBuilder>{

			eventId(eventId:string):Ref<MyAiEventInfoBuilder>
			summary(summary:string):Ref<MyAiEventInfoBuilder>
			startTime(startTime:string):Ref<MyAiEventInfoBuilder>
			endTime(endTime:string):Ref<MyAiEventInfoBuilder>
			startTimezone(startTimezone:string):Ref<MyAiEventInfoBuilder>
			recurrenceRule(recurrenceRule:string):Ref<MyAiEventInfoBuilder>
			participantIds(participantIds:string):Ref<MyAiEventInfoBuilder>
			meetingRoomIds(meetingRoomIds:string):Ref<MyAiEventInfoBuilder>
			build():Ref<MyAiEventInfo>
	}
	export interface MyaiCardStatus extends Struct<MyaiCardStatus>{

			fromStatus:Ref<string>
			toStatus:Ref<string>
	}
	export interface MyaiCardStatusBuilder extends Struct<MyaiCardStatusBuilder>{

			fromStatus(fromStatus:string):Ref<MyaiCardStatusBuilder>
			toStatus(toStatus:string):Ref<MyaiCardStatusBuilder>
			build():Ref<MyaiCardStatus>
	}
	export interface MyaiDocDetail extends Struct<MyaiDocDetail>{

			title:Ref<string>
			url:Ref<string>
			token:Ref<string>
			docType:Ref<string>
			extra:Ref<string>
	}
	export interface MyaiDocDetailBuilder extends Struct<MyaiDocDetailBuilder>{

			title(title:string):Ref<MyaiDocDetailBuilder>
			url(url:string):Ref<MyaiDocDetailBuilder>
			token(token:string):Ref<MyaiDocDetailBuilder>
			docType(docType:string):Ref<MyaiDocDetailBuilder>
			extra(extra:string):Ref<MyaiDocDetailBuilder>
			build():Ref<MyaiDocDetail>
	}
	export interface MyaiReply extends Struct<MyaiReply>{

			reply:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			rooms:Ref<RoomMeta>[]
			summary:Ref<string>
			participants:Ref<UserMeta>[]
			eventId:Ref<string>
			recurrenceRule:Ref<string>
	}
	export interface MyaiReplyBuilder extends Struct<MyaiReplyBuilder>{

			reply(reply:string):Ref<MyaiReplyBuilder>
			startTime(startTime:string):Ref<MyaiReplyBuilder>
			endTime(endTime:string):Ref<MyaiReplyBuilder>
			rooms(rooms:Ref<RoomMeta>[]):Ref<MyaiReplyBuilder>
			summary(summary:string):Ref<MyaiReplyBuilder>
			participants(participants:Ref<UserMeta>[]):Ref<MyaiReplyBuilder>
			eventId(eventId:string):Ref<MyaiReplyBuilder>
			recurrenceRule(recurrenceRule:string):Ref<MyaiReplyBuilder>
			build():Ref<MyaiReply>
	}
	export interface MyaiSearchDocResult extends Struct<MyaiSearchDocResult>{

			docItems:Ref<MyaiDocDetail>[]
			message:Ref<string>
	}
	export interface MyaiSearchDocResultBuilder extends Struct<MyaiSearchDocResultBuilder>{

			docItems(docItems:Ref<MyaiDocDetail>[]):Ref<MyaiSearchDocResultBuilder>
			message(message:string):Ref<MyaiSearchDocResultBuilder>
			build():Ref<MyaiSearchDocResult>
	}
	//"false"
	export const NeedNotificationFalse:string
	//"true"
	export const NeedNotificationTrue:string
	export function New(config:Ref<larkcore.Config>):Ref<V4>

	export function newAclScopeBuilder():Ref<AclScopeBuilder>

	export function newAclScopeEventBuilder():Ref<AclScopeEventBuilder>

	export function newAttachmentBuilder():Ref<AttachmentBuilder>

	export function newAttendeeChatMemberBuilder():Ref<AttendeeChatMemberBuilder>

	export function newBatchDeleteCalendarEventAttendeePathReqBodyBuilder():Ref<BatchDeleteCalendarEventAttendeePathReqBodyBuilder>

	export function newBatchDeleteCalendarEventAttendeeReqBodyBuilder():Ref<BatchDeleteCalendarEventAttendeeReqBodyBuilder>

	export function newBatchDeleteCalendarEventAttendeeReqBuilder():Ref<BatchDeleteCalendarEventAttendeeReqBuilder>

	export function newBookMeetingRoomDataBuilder():Ref<BookMeetingRoomDataBuilder>

	export function newCalendarAclBuilder():Ref<CalendarAclBuilder>

	export function newCalendarAclEventBuilder():Ref<CalendarAclEventBuilder>

	export function newCalendarAttendeeResourceCustomizationBuilder():Ref<CalendarAttendeeResourceCustomizationBuilder>

	export function newCalendarBuilder():Ref<CalendarBuilder>

	export function newCalendarEventAttendeeBuilder():Ref<CalendarEventAttendeeBuilder>

	export function newCalendarEventAttendeeChatMemberBuilder():Ref<CalendarEventAttendeeChatMemberBuilder>

	export function newCalendarEventAttendeeIdBuilder():Ref<CalendarEventAttendeeIdBuilder>

	export function newCalendarEventAttendeeRespBuilder():Ref<CalendarEventAttendeeRespBuilder>

	export function newCalendarEventBuilder():Ref<CalendarEventBuilder>

	export function newCalendarEventRespBuilder():Ref<CalendarEventRespBuilder>

	export function newCalendarFreebusyBuilder():Ref<CalendarFreebusyBuilder>

	export function newCalendarFreebusyErrorBuilder():Ref<CalendarFreebusyErrorBuilder>

	export function newCalendarPrimaryBatchReqBuilder():Ref<CalendarPrimaryBatchReqBuilder>

	export function newCalendarUnderstandExtraBuilder():Ref<CalendarUnderstandExtraBuilder>

	export function newCalendarUnderstandScenarioContextBuilder():Ref<CalendarUnderstandScenarioContextBuilder>

	export function newCardCallbackBuilder():Ref<CardCallbackBuilder>

	export function newCardPresentBuilder():Ref<CardPresentBuilder>

	export function newCreateCalendarAclReqBuilder():Ref<CreateCalendarAclReqBuilder>

	export function newCreateCalendarEventAttendeePathReqBodyBuilder():Ref<CreateCalendarEventAttendeePathReqBodyBuilder>

	export function newCreateCalendarEventAttendeeReqBodyBuilder():Ref<CreateCalendarEventAttendeeReqBodyBuilder>

	export function newCreateCalendarEventAttendeeReqBuilder():Ref<CreateCalendarEventAttendeeReqBuilder>

	export function newCreateCalendarEventMeetingChatReqBuilder():Ref<CreateCalendarEventMeetingChatReqBuilder>

	export function newCreateCalendarEventMeetingMinuteReqBuilder():Ref<CreateCalendarEventMeetingMinuteReqBuilder>

	export function newCreateCalendarEventReqBuilder():Ref<CreateCalendarEventReqBuilder>

	export function newCreateCalendarReqBuilder():Ref<CreateCalendarReqBuilder>

	export function newCreateExchangeBindingReqBuilder():Ref<CreateExchangeBindingReqBuilder>

	export function newCreateTimeoffEventReqBuilder():Ref<CreateTimeoffEventReqBuilder>

	export function newCustomizationOptionBuilder():Ref<CustomizationOptionBuilder>

	export function newDeleteCalendarAclReqBuilder():Ref<DeleteCalendarAclReqBuilder>

	export function newDeleteCalendarEventMeetingChatReqBuilder():Ref<DeleteCalendarEventMeetingChatReqBuilder>

	export function newDeleteCalendarEventReqBuilder():Ref<DeleteCalendarEventReqBuilder>

	export function newDeleteCalendarReqBuilder():Ref<DeleteCalendarReqBuilder>

	export function newDeleteExchangeBindingReqBuilder():Ref<DeleteExchangeBindingReqBuilder>

	export function newDeleteTimeoffEventReqBuilder():Ref<DeleteTimeoffEventReqBuilder>

	export function newDepartmentIdBuilder():Ref<DepartmentIdBuilder>

	export function newEventBriefInfoAiBuilder():Ref<EventBriefInfoAiBuilder>

	export function newEventCardBuilder():Ref<EventCardBuilder>

	export function newEventLocationBuilder():Ref<EventLocationBuilder>

	export function newEventOrganizerBuilder():Ref<EventOrganizerBuilder>

	export function newEventSearchFilterBuilder():Ref<EventSearchFilterBuilder>

	export function newEventTimeBuilder():Ref<EventTimeBuilder>

	export function newExchangeBindingBuilder():Ref<ExchangeBindingBuilder>

	export function newFileBuilder():Ref<FileBuilder>

	export function newFreeTimeAiBuilder():Ref<FreeTimeAiBuilder>

	export function newFreeTimeBuilder():Ref<FreeTimeBuilder>

	export function newFreeTimeSlotBuilder():Ref<FreeTimeSlotBuilder>

	export function newFreebusyBuilder():Ref<FreebusyBuilder>

	export function newGenerateCaldavConfSettingPathReqBodyBuilder():Ref<GenerateCaldavConfSettingPathReqBodyBuilder>

	export function newGenerateCaldavConfSettingReqBodyBuilder():Ref<GenerateCaldavConfSettingReqBodyBuilder>

	export function newGenerateCaldavConfSettingReqBuilder():Ref<GenerateCaldavConfSettingReqBuilder>

	export function newGetCalendarEventReqBuilder():Ref<GetCalendarEventReqBuilder>

	export function newGetCalendarReqBuilder():Ref<GetCalendarReqBuilder>

	export function newGetExchangeBindingReqBuilder():Ref<GetExchangeBindingReqBuilder>

	export function newInstanceBuilder():Ref<InstanceBuilder>

	export function newInstanceViewCalendarEventReqBuilder():Ref<InstanceViewCalendarEventReqBuilder>

	export function newInstancesCalendarEventReqBuilder():Ref<InstancesCalendarEventReqBuilder>

	export function newListCalendarAclReqBuilder():Ref<ListCalendarAclReqBuilder>

	export function newListCalendarEventAttendeeChatMemberReqBuilder():Ref<ListCalendarEventAttendeeChatMemberReqBuilder>

	export function newListCalendarEventAttendeeReqBuilder():Ref<ListCalendarEventAttendeeReqBuilder>

	export function newListCalendarEventReqBuilder():Ref<ListCalendarEventReqBuilder>

	export function newListCalendarReqBuilder():Ref<ListCalendarReqBuilder>

	export function newListFreebusyPathReqBodyBuilder():Ref<ListFreebusyPathReqBodyBuilder>

	export function newListFreebusyReqBodyBuilder():Ref<ListFreebusyReqBodyBuilder>

	export function newListFreebusyReqBuilder():Ref<ListFreebusyReqBuilder>

	export function newMeetingChatBuilder():Ref<MeetingChatBuilder>

	export function newMeetingMinuteBuilder():Ref<MeetingMinuteBuilder>

	export function newMeetingSettingsBuilder():Ref<MeetingSettingsBuilder>

	export function newMyAiEventDetailBuilder():Ref<MyAiEventDetailBuilder>

	export function newMyAiEventInfoBuilder():Ref<MyAiEventInfoBuilder>

	export function newMyaiCardStatusBuilder():Ref<MyaiCardStatusBuilder>

	export function newMyaiDocDetailBuilder():Ref<MyaiDocDetailBuilder>

	export function newMyaiReplyBuilder():Ref<MyaiReplyBuilder>

	export function newMyaiSearchDocResultBuilder():Ref<MyaiSearchDocResultBuilder>

	export function newOpenEventRsvpInfoBuilder():Ref<OpenEventRsvpInfoBuilder>

	export function newOperateCardDataBuilder():Ref<OperateCardDataBuilder>

	export function newP2CalendarAclCreatedV4Handler(v1:(v2:context.Context,v1:Ref<P2CalendarAclCreatedV4>)=>void/*error*/):Ref<P2CalendarAclCreatedV4Handler>

	export function newP2CalendarAclDeletedV4Handler(v1:(v2:context.Context,v1:Ref<P2CalendarAclDeletedV4>)=>void/*error*/):Ref<P2CalendarAclDeletedV4Handler>

	export function newP2CalendarChangedV4Handler(v1:(v2:context.Context,v1:Ref<P2CalendarChangedV4>)=>void/*error*/):Ref<P2CalendarChangedV4Handler>

	export function newP2CalendarEventChangedV4Handler(v1:(v2:context.Context,v1:Ref<P2CalendarEventChangedV4>)=>void/*error*/):Ref<P2CalendarEventChangedV4Handler>

	export function newPatchCalendarEventReqBuilder():Ref<PatchCalendarEventReqBuilder>

	export function newPatchCalendarReqBuilder():Ref<PatchCalendarReqBuilder>

	export function newPrimaryCalendarReqBuilder():Ref<PrimaryCalendarReqBuilder>

	export function newReminderBuilder():Ref<ReminderBuilder>

	export function newReplyCalendarEventPathReqBodyBuilder():Ref<ReplyCalendarEventPathReqBodyBuilder>

	export function newReplyCalendarEventReqBodyBuilder():Ref<ReplyCalendarEventReqBodyBuilder>

	export function newReplyCalendarEventReqBuilder():Ref<ReplyCalendarEventReqBuilder>

	export function newRoomMetaBuilder():Ref<RoomMetaBuilder>

	export function newSchemaBuilder():Ref<SchemaBuilder>

	export function newSearchCalendarEventPathReqBodyBuilder():Ref<SearchCalendarEventPathReqBodyBuilder>

	export function newSearchCalendarEventReqBodyBuilder():Ref<SearchCalendarEventReqBodyBuilder>

	export function newSearchCalendarEventReqBuilder():Ref<SearchCalendarEventReqBuilder>

	export function newSearchCalendarPathReqBodyBuilder():Ref<SearchCalendarPathReqBodyBuilder>

	export function newSearchCalendarReqBodyBuilder():Ref<SearchCalendarReqBodyBuilder>

	export function newSearchCalendarReqBuilder():Ref<SearchCalendarReqBuilder>

	export function newSearchEventDataBuilder():Ref<SearchEventDataBuilder>

	export function newSearchUserDataAiBuilder():Ref<SearchUserDataAiBuilder>

	export function newSearchUserResultAiBuilder():Ref<SearchUserResultAiBuilder>

	export function newSubscribeCalendarReqBuilder():Ref<SubscribeCalendarReqBuilder>

	export function newSubscriptionCalendarAclReqBuilder():Ref<SubscriptionCalendarAclReqBuilder>

	export function newSubscriptionCalendarEventReqBuilder():Ref<SubscriptionCalendarEventReqBuilder>

	export function newSystemInfoBuilder():Ref<SystemInfoBuilder>

	export function newTimeInfoBuilder():Ref<TimeInfoBuilder>

	export function newTimeSpanBuilder():Ref<TimeSpanBuilder>

	export function newTimeoffEventBuilder():Ref<TimeoffEventBuilder>

	export function newUnsubscribeCalendarReqBuilder():Ref<UnsubscribeCalendarReqBuilder>

	export function newUnsubscriptionCalendarAclReqBuilder():Ref<UnsubscriptionCalendarAclReqBuilder>

	export function newUnsubscriptionCalendarEventReqBuilder():Ref<UnsubscriptionCalendarEventReqBuilder>

	export function newUserCalendarBuilder():Ref<UserCalendarBuilder>

	export function newUserFreebusyBuilder():Ref<UserFreebusyBuilder>

	export function newUserIdBuilder():Ref<UserIdBuilder>

	export function newUserMetaBuilder():Ref<UserMetaBuilder>

	export function newVcInfoBuilder():Ref<VcInfoBuilder>

	export function newVchatBuilder():Ref<VchatBuilder>

	export function newWorkhourBuilder():Ref<WorkhourBuilder>

	export function newWorkhourSettingBuilder():Ref<WorkhourSettingBuilder>

	export interface OpenEventRsvpInfo extends Struct<OpenEventRsvpInfo>{

			fromUserId:Ref<UserId>
			rsvpStatus:Ref<string>
	}
	export interface OpenEventRsvpInfoBuilder extends Struct<OpenEventRsvpInfoBuilder>{

			fromUserId(fromUserId:Ref<UserId>):Ref<OpenEventRsvpInfoBuilder>
			rsvpStatus(rsvpStatus:string):Ref<OpenEventRsvpInfoBuilder>
			build():Ref<OpenEventRsvpInfo>
	}
	export interface OperateCardData extends Struct<OperateCardData>{

			meetingUrl:Ref<string>
			meetingNo:Ref<string>
	}
	export interface OperateCardDataBuilder extends Struct<OperateCardDataBuilder>{

			meetingUrl(meetingUrl:string):Ref<OperateCardDataBuilder>
			meetingNo(meetingNo:string):Ref<OperateCardDataBuilder>
			build():Ref<OperateCardData>
	}
	export interface P2CalendarAclCreatedV4 extends larkevent.EventHandlerModel,Struct<P2CalendarAclCreatedV4>{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2CalendarAclCreatedV4Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2CalendarAclCreatedV4Data extends Struct<P2CalendarAclCreatedV4Data>{

			aclId:Ref<string>
			role:Ref<string>
			scope:Ref<AclScopeEvent>
			userIdList:Ref<UserId>[]
	}
	export interface P2CalendarAclCreatedV4Handler extends Struct<P2CalendarAclCreatedV4Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2CalendarAclDeletedV4 extends Struct<P2CalendarAclDeletedV4>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2CalendarAclDeletedV4Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2CalendarAclDeletedV4Data extends Struct<P2CalendarAclDeletedV4Data>{

			aclId:Ref<string>
			role:Ref<string>
			scope:Ref<AclScopeEvent>
			userIdList:Ref<UserId>[]
	}
	export interface P2CalendarAclDeletedV4Handler extends Struct<P2CalendarAclDeletedV4Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2CalendarChangedV4 extends Struct<P2CalendarChangedV4>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2CalendarChangedV4Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2CalendarChangedV4Data extends Struct<P2CalendarChangedV4Data>{

			userIdList:Ref<UserId>[]
	}
	export interface P2CalendarChangedV4Handler extends Struct<P2CalendarChangedV4Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2CalendarEventChangedV4 extends larkevent.EventHandlerModel,Struct<P2CalendarEventChangedV4>{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2CalendarEventChangedV4Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2CalendarEventChangedV4Data extends Struct<P2CalendarEventChangedV4Data>{

			calendarId:Ref<string>
			userIdList:Ref<UserId>[]
			calendarEventId:Ref<string>
			changeType:Ref<string>
			rsvpInfos:Ref<OpenEventRsvpInfo>[]
	}
	export interface P2CalendarEventChangedV4Handler extends Struct<P2CalendarEventChangedV4Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface PatchCalendarEventReq extends Struct<PatchCalendarEventReq>{

			calendarEvent:Ref<CalendarEvent>
	}
	export interface PatchCalendarEventReqBuilder extends Struct<PatchCalendarEventReqBuilder>{

			calendarId(calendarId:string):Ref<PatchCalendarEventReqBuilder>
			eventId(eventId:string):Ref<PatchCalendarEventReqBuilder>
			userIdType(userIdType:string):Ref<PatchCalendarEventReqBuilder>
			calendarEvent(calendarEvent:Ref<CalendarEvent>):Ref<PatchCalendarEventReqBuilder>
			build():Ref<PatchCalendarEventReq>
	}
	export interface PatchCalendarEventResp extends Struct<PatchCalendarEventResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<PatchCalendarEventRespData>
			success():bool
	}
	export interface PatchCalendarEventRespData extends Struct<PatchCalendarEventRespData>{

			event:Ref<CalendarEvent>
	}
	export interface PatchCalendarReq extends Struct<PatchCalendarReq>{

			calendar:Ref<Calendar>
	}
	export interface PatchCalendarReqBuilder extends Struct<PatchCalendarReqBuilder>{

			calendarId(calendarId:string):Ref<PatchCalendarReqBuilder>
			calendar(calendar:Ref<Calendar>):Ref<PatchCalendarReqBuilder>
			build():Ref<PatchCalendarReq>
	}
	export interface PatchCalendarResp extends Struct<PatchCalendarResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<PatchCalendarRespData>
			success():bool
	}
	export interface PatchCalendarRespData extends Struct<PatchCalendarRespData>{

			calendar:Ref<Calendar>
	}
	export interface PrimaryCalendarReq extends Struct<PrimaryCalendarReq>{

	}
	export interface PrimaryCalendarReqBuilder extends Struct<PrimaryCalendarReqBuilder>{

			userIdType(userIdType:string):Ref<PrimaryCalendarReqBuilder>
			build():Ref<PrimaryCalendarReq>
	}
	export interface PrimaryCalendarResp extends Struct<PrimaryCalendarResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<PrimaryCalendarRespData>
			success():bool
	}
	export interface PrimaryCalendarRespData extends Struct<PrimaryCalendarRespData>{

			calendars:Ref<UserCalendar>[]
	}
	export interface Reminder extends Struct<Reminder>{

			minutes:Ref<int>
	}
	export interface ReminderBuilder extends Struct<ReminderBuilder>{

			minutes(minutes:int):Ref<ReminderBuilder>
			build():Ref<Reminder>
	}
	export interface ReplyCalendarEventPathReqBodyBuilder extends Struct<ReplyCalendarEventPathReqBodyBuilder>{

			rsvpStatus(rsvpStatus:string):Ref<ReplyCalendarEventPathReqBodyBuilder>
			build():Ref<ReplyCalendarEventReqBody>
	}
	export interface ReplyCalendarEventReq extends Struct<ReplyCalendarEventReq>{

			body:Ref<ReplyCalendarEventReqBody>
	}
	export interface ReplyCalendarEventReqBody extends Struct<ReplyCalendarEventReqBody>{

			rsvpStatus:Ref<string>
	}
	export interface ReplyCalendarEventReqBodyBuilder extends Struct<ReplyCalendarEventReqBodyBuilder>{

			rsvpStatus(rsvpStatus:string):Ref<ReplyCalendarEventReqBodyBuilder>
			build():Ref<ReplyCalendarEventReqBody>
	}
	export interface ReplyCalendarEventReqBuilder extends Struct<ReplyCalendarEventReqBuilder>{

			calendarId(calendarId:string):Ref<ReplyCalendarEventReqBuilder>
			eventId(eventId:string):Ref<ReplyCalendarEventReqBuilder>
			body(body:Ref<ReplyCalendarEventReqBody>):Ref<ReplyCalendarEventReqBuilder>
			build():Ref<ReplyCalendarEventReq>
	}
	export interface ReplyCalendarEventResp extends Struct<ReplyCalendarEventResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface RoomMeta extends Struct<RoomMeta>{

			name:Ref<string>
			roomId:Ref<string>
	}
	export interface RoomMetaBuilder extends Struct<RoomMetaBuilder>{

			name(name:string):Ref<RoomMetaBuilder>
			roomId(roomId:string):Ref<RoomMetaBuilder>
			build():Ref<RoomMeta>
	}
	//"accept"
	export const RsvpStatusAccept:string
	//"decline"
	export const RsvpStatusDecline:string
	//"tentative"
	export const RsvpStatusTentative:string
	export interface Schema extends Struct<Schema>{

			uiName:Ref<string>
			uiStatus:Ref<string>
			appLink:Ref<string>
	}
	export interface SchemaBuilder extends Struct<SchemaBuilder>{

			uiName(uiName:string):Ref<SchemaBuilder>
			uiStatus(uiStatus:string):Ref<SchemaBuilder>
			appLink(appLink:string):Ref<SchemaBuilder>
			build():Ref<Schema>
	}
	export interface SearchCalendarEventIterator extends Struct<SearchCalendarEventIterator>{

			next():[bool,Ref<CalendarEvent>]
			nextPageToken():Ref<string>
	}
	export interface SearchCalendarEventPathReqBodyBuilder extends Struct<SearchCalendarEventPathReqBodyBuilder>{

			query(query:string):Ref<SearchCalendarEventPathReqBodyBuilder>
			filter(filter:Ref<EventSearchFilter>):Ref<SearchCalendarEventPathReqBodyBuilder>
			build():Ref<SearchCalendarEventReqBody>
	}
	export interface SearchCalendarEventReq extends Struct<SearchCalendarEventReq>{

			body:Ref<SearchCalendarEventReqBody>
			limit:int
	}
	export interface SearchCalendarEventReqBody extends Struct<SearchCalendarEventReqBody>{

			query:Ref<string>
			filter:Ref<EventSearchFilter>
	}
	export interface SearchCalendarEventReqBodyBuilder extends Struct<SearchCalendarEventReqBodyBuilder>{

			query(query:string):Ref<SearchCalendarEventReqBodyBuilder>
			filter(filter:Ref<EventSearchFilter>):Ref<SearchCalendarEventReqBodyBuilder>
			build():Ref<SearchCalendarEventReqBody>
	}
	export interface SearchCalendarEventReqBuilder extends Struct<SearchCalendarEventReqBuilder>{

			limit(limit:int):Ref<SearchCalendarEventReqBuilder>
			calendarId(calendarId:string):Ref<SearchCalendarEventReqBuilder>
			userIdType(userIdType:string):Ref<SearchCalendarEventReqBuilder>
			pageToken(pageToken:string):Ref<SearchCalendarEventReqBuilder>
			pageSize(pageSize:int):Ref<SearchCalendarEventReqBuilder>
			body(body:Ref<SearchCalendarEventReqBody>):Ref<SearchCalendarEventReqBuilder>
			build():Ref<SearchCalendarEventReq>
	}
	export interface SearchCalendarEventResp extends Struct<SearchCalendarEventResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchCalendarEventRespData>
			success():bool
	}
	export interface SearchCalendarEventRespData extends Struct<SearchCalendarEventRespData>{

			items:Ref<CalendarEvent>[]
			pageToken:Ref<string>
	}
	export interface SearchCalendarIterator extends Struct<SearchCalendarIterator>{

			next():[bool,Ref<Calendar>]
			nextPageToken():Ref<string>
	}
	export interface SearchCalendarPathReqBodyBuilder extends Struct<SearchCalendarPathReqBodyBuilder>{

			query(query:string):Ref<SearchCalendarPathReqBodyBuilder>
			build():Ref<SearchCalendarReqBody>
	}
	export interface SearchCalendarReq extends Struct<SearchCalendarReq>{

			body:Ref<SearchCalendarReqBody>
			limit:int
	}
	export interface SearchCalendarReqBody extends Struct<SearchCalendarReqBody>{

			query:Ref<string>
	}
	export interface SearchCalendarReqBodyBuilder extends Struct<SearchCalendarReqBodyBuilder>{

			query(query:string):Ref<SearchCalendarReqBodyBuilder>
			build():Ref<SearchCalendarReqBody>
	}
	export interface SearchCalendarReqBuilder extends Struct<SearchCalendarReqBuilder>{

			limit(limit:int):Ref<SearchCalendarReqBuilder>
			pageToken(pageToken:string):Ref<SearchCalendarReqBuilder>
			pageSize(pageSize:int):Ref<SearchCalendarReqBuilder>
			body(body:Ref<SearchCalendarReqBody>):Ref<SearchCalendarReqBuilder>
			build():Ref<SearchCalendarReq>
	}
	export interface SearchCalendarResp extends Struct<SearchCalendarResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchCalendarRespData>
			success():bool
	}
	export interface SearchCalendarRespData extends Struct<SearchCalendarRespData>{

			items:Ref<Calendar>[]
			pageToken:Ref<string>
	}
	export interface SearchEventData extends Struct<SearchEventData>{

			events:Ref<EventBriefInfoAi>[]
			msg:Ref<string>
	}
	export interface SearchEventDataBuilder extends Struct<SearchEventDataBuilder>{

			events(events:Ref<EventBriefInfoAi>[]):Ref<SearchEventDataBuilder>
			msg(msg:string):Ref<SearchEventDataBuilder>
			build():Ref<SearchEventData>
	}
	export interface SearchUserDataAi extends Struct<SearchUserDataAi>{

			queryKeyword:Ref<string>
			userInfo:Ref<UserMeta>
	}
	export interface SearchUserDataAiBuilder extends Struct<SearchUserDataAiBuilder>{

			queryKeyword(queryKeyword:string):Ref<SearchUserDataAiBuilder>
			userInfo(userInfo:Ref<UserMeta>):Ref<SearchUserDataAiBuilder>
			build():Ref<SearchUserDataAi>
	}
	export interface SearchUserResultAi extends Struct<SearchUserResultAi>{

			searchResults:Ref<SearchUserDataAi>[]
	}
	export interface SearchUserResultAiBuilder extends Struct<SearchUserResultAiBuilder>{

			searchResults(searchResults:Ref<SearchUserDataAi>[]):Ref<SearchUserResultAiBuilder>
			build():Ref<SearchUserResultAi>
	}
	export interface Setting extends Alias<Nothing>{

	}
	export interface SubscribeCalendarReq extends Struct<SubscribeCalendarReq>{

	}
	export interface SubscribeCalendarReqBuilder extends Struct<SubscribeCalendarReqBuilder>{

			calendarId(calendarId:string):Ref<SubscribeCalendarReqBuilder>
			build():Ref<SubscribeCalendarReq>
	}
	export interface SubscribeCalendarResp extends Struct<SubscribeCalendarResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SubscribeCalendarRespData>
			success():bool
	}
	export interface SubscribeCalendarRespData extends Struct<SubscribeCalendarRespData>{

			calendar:Ref<Calendar>
	}
	export interface SubscriptionCalendarAclReq extends Struct<SubscriptionCalendarAclReq>{

	}
	export interface SubscriptionCalendarAclReqBuilder extends Struct<SubscriptionCalendarAclReqBuilder>{

			calendarId(calendarId:string):Ref<SubscriptionCalendarAclReqBuilder>
			build():Ref<SubscriptionCalendarAclReq>
	}
	export interface SubscriptionCalendarAclResp extends Struct<SubscriptionCalendarAclResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface SubscriptionCalendarEventReq extends Struct<SubscriptionCalendarEventReq>{

	}
	export interface SubscriptionCalendarEventReqBuilder extends Struct<SubscriptionCalendarEventReqBuilder>{

			calendarId(calendarId:string):Ref<SubscriptionCalendarEventReqBuilder>
			build():Ref<SubscriptionCalendarEventReq>
	}
	export interface SubscriptionCalendarEventResp extends Struct<SubscriptionCalendarEventResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface SubscriptionCalendarResp extends Struct<SubscriptionCalendarResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface SystemInfo extends Struct<SystemInfo>{

			sessionId:Ref<string>
			lang:Ref<string>
			locale:Ref<string>
	}
	export interface SystemInfoBuilder extends Struct<SystemInfoBuilder>{

			sessionId(sessionId:string):Ref<SystemInfoBuilder>
			lang(lang:string):Ref<SystemInfoBuilder>
			locale(locale:string):Ref<SystemInfoBuilder>
			build():Ref<SystemInfo>
	}
	export interface TimeInfo extends Struct<TimeInfo>{

			date:Ref<string>
			timestamp:Ref<string>
			timezone:Ref<string>
	}
	export interface TimeInfoBuilder extends Struct<TimeInfoBuilder>{

			date(date:string):Ref<TimeInfoBuilder>
			timestamp(timestamp:string):Ref<TimeInfoBuilder>
			timezone(timezone:string):Ref<TimeInfoBuilder>
			build():Ref<TimeInfo>
	}
	export interface TimeSpan extends Struct<TimeSpan>{

			startTime:Ref<string>
			endTime:Ref<string>
	}
	export interface TimeSpanBuilder extends Struct<TimeSpanBuilder>{

			startTime(startTime:string):Ref<TimeSpanBuilder>
			endTime(endTime:string):Ref<TimeSpanBuilder>
			build():Ref<TimeSpan>
	}
	export interface TimeoffEvent extends Struct<TimeoffEvent>{

			timeoffEventId:Ref<string>
			userId:Ref<string>
			timezone:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			title:Ref<string>
			description:Ref<string>
	}
	export interface TimeoffEventBuilder extends Struct<TimeoffEventBuilder>{

			timeoffEventId(timeoffEventId:string):Ref<TimeoffEventBuilder>
			userId(userId:string):Ref<TimeoffEventBuilder>
			timezone(timezone:string):Ref<TimeoffEventBuilder>
			startTime(startTime:string):Ref<TimeoffEventBuilder>
			endTime(endTime:string):Ref<TimeoffEventBuilder>
			title(title:string):Ref<TimeoffEventBuilder>
			description(description:string):Ref<TimeoffEventBuilder>
			build():Ref<TimeoffEvent>
	}
	export interface UnsubscribeCalendarReq extends Struct<UnsubscribeCalendarReq>{

	}
	export interface UnsubscribeCalendarReqBuilder extends Struct<UnsubscribeCalendarReqBuilder>{

			calendarId(calendarId:string):Ref<UnsubscribeCalendarReqBuilder>
			build():Ref<UnsubscribeCalendarReq>
	}
	export interface UnsubscribeCalendarResp extends Struct<UnsubscribeCalendarResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface UnsubscriptionCalendarAclReq extends Struct<UnsubscriptionCalendarAclReq>{

	}
	export interface UnsubscriptionCalendarAclReqBuilder extends Struct<UnsubscriptionCalendarAclReqBuilder>{

			calendarId(calendarId:string):Ref<UnsubscriptionCalendarAclReqBuilder>
			build():Ref<UnsubscriptionCalendarAclReq>
	}
	export interface UnsubscriptionCalendarAclResp extends Struct<UnsubscriptionCalendarAclResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface UnsubscriptionCalendarEventReq extends Struct<UnsubscriptionCalendarEventReq>{

	}
	export interface UnsubscriptionCalendarEventReqBuilder extends Struct<UnsubscriptionCalendarEventReqBuilder>{

			calendarId(calendarId:string):Ref<UnsubscriptionCalendarEventReqBuilder>
			build():Ref<UnsubscriptionCalendarEventReq>
	}
	export interface UnsubscriptionCalendarEventResp extends Struct<UnsubscriptionCalendarEventResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface UnsubscriptionCalendarResp extends Struct<UnsubscriptionCalendarResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface UserCalendar extends Struct<UserCalendar>{

			calendar:Ref<Calendar>
			userId:Ref<string>
	}
	export interface UserCalendarBuilder extends Struct<UserCalendarBuilder>{

			calendar(calendar:Ref<Calendar>):Ref<UserCalendarBuilder>
			userId(userId:string):Ref<UserCalendarBuilder>
			build():Ref<UserCalendar>
	}
	export interface UserFreebusy extends Struct<UserFreebusy>{

			freebusyItems:Ref<Freebusy>[]
			userId:Ref<string>
	}
	export interface UserFreebusyBuilder extends Struct<UserFreebusyBuilder>{

			freebusyItems(freebusyItems:Ref<Freebusy>[]):Ref<UserFreebusyBuilder>
			userId(userId:string):Ref<UserFreebusyBuilder>
			build():Ref<UserFreebusy>
	}
	export interface UserId extends Struct<UserId>{

			userId:Ref<string>
			openId:Ref<string>
			unionId:Ref<string>
	}
	export interface UserIdBuilder extends Struct<UserIdBuilder>{

			userId(userId:string):Ref<UserIdBuilder>
			openId(openId:string):Ref<UserIdBuilder>
			unionId(unionId:string):Ref<UserIdBuilder>
			build():Ref<UserId>
	}
	//"open_id"
	export const UserIdTypeBatchDeleteCalendarEventAttendeeOpenId:string
	//"union_id"
	export const UserIdTypeBatchDeleteCalendarEventAttendeeUnionId:string
	//"user_id"
	export const UserIdTypeBatchDeleteCalendarEventAttendeeUserId:string
	//"open_id"
	export const UserIdTypeCreateCalendarAclOpenId:string
	//"union_id"
	export const UserIdTypeCreateCalendarAclUnionId:string
	//"user_id"
	export const UserIdTypeCreateCalendarAclUserId:string
	//"open_id"
	export const UserIdTypeCreateCalendarEventAttendeeOpenId:string
	//"union_id"
	export const UserIdTypeCreateCalendarEventAttendeeUnionId:string
	//"user_id"
	export const UserIdTypeCreateCalendarEventAttendeeUserId:string
	//"open_id"
	export const UserIdTypeCreateCalendarEventOpenId:string
	//"union_id"
	export const UserIdTypeCreateCalendarEventUnionId:string
	//"user_id"
	export const UserIdTypeCreateCalendarEventUserId:string
	//"open_id"
	export const UserIdTypeCreateExchangeBindingOpenId:string
	//"union_id"
	export const UserIdTypeCreateExchangeBindingUnionId:string
	//"user_id"
	export const UserIdTypeCreateExchangeBindingUserId:string
	//"open_id"
	export const UserIdTypeCreateTimeoffEventOpenId:string
	//"union_id"
	export const UserIdTypeCreateTimeoffEventUnionId:string
	//"user_id"
	export const UserIdTypeCreateTimeoffEventUserId:string
	//"open_id"
	export const UserIdTypeGetCalendarEventOpenId:string
	//"union_id"
	export const UserIdTypeGetCalendarEventUnionId:string
	//"user_id"
	export const UserIdTypeGetCalendarEventUserId:string
	//"open_id"
	export const UserIdTypeGetExchangeBindingOpenId:string
	//"union_id"
	export const UserIdTypeGetExchangeBindingUnionId:string
	//"user_id"
	export const UserIdTypeGetExchangeBindingUserId:string
	//"open_id"
	export const UserIdTypeInstanceViewCalendarEventOpenId:string
	//"union_id"
	export const UserIdTypeInstanceViewCalendarEventUnionId:string
	//"user_id"
	export const UserIdTypeInstanceViewCalendarEventUserId:string
	//"open_id"
	export const UserIdTypeListCalendarAclOpenId:string
	//"union_id"
	export const UserIdTypeListCalendarAclUnionId:string
	//"user_id"
	export const UserIdTypeListCalendarAclUserId:string
	//"open_id"
	export const UserIdTypeListCalendarEventAttendeeChatMemberOpenId:string
	//"union_id"
	export const UserIdTypeListCalendarEventAttendeeChatMemberUnionId:string
	//"user_id"
	export const UserIdTypeListCalendarEventAttendeeChatMemberUserId:string
	//"open_id"
	export const UserIdTypeListCalendarEventAttendeeOpenId:string
	//"union_id"
	export const UserIdTypeListCalendarEventAttendeeUnionId:string
	//"user_id"
	export const UserIdTypeListCalendarEventAttendeeUserId:string
	//"open_id"
	export const UserIdTypeListCalendarEventOpenId:string
	//"union_id"
	export const UserIdTypeListCalendarEventUnionId:string
	//"user_id"
	export const UserIdTypeListCalendarEventUserId:string
	//"open_id"
	export const UserIdTypeListFreebusyOpenId:string
	//"union_id"
	export const UserIdTypeListFreebusyUnionId:string
	//"user_id"
	export const UserIdTypeListFreebusyUserId:string
	//"open_id"
	export const UserIdTypeOpenId:string
	//"open_id"
	export const UserIdTypePatchCalendarEventOpenId:string
	//"union_id"
	export const UserIdTypePatchCalendarEventUnionId:string
	//"user_id"
	export const UserIdTypePatchCalendarEventUserId:string
	//"open_id"
	export const UserIdTypeSearchCalendarEventOpenId:string
	//"union_id"
	export const UserIdTypeSearchCalendarEventUnionId:string
	//"user_id"
	export const UserIdTypeSearchCalendarEventUserId:string
	//"union_id"
	export const UserIdTypeUnionId:string
	//"user_id"
	export const UserIdTypeUserId:string
	export interface UserMeta extends Struct<UserMeta>{

			name:Ref<string>
			userId:Ref<string>
	}
	export interface UserMetaBuilder extends Struct<UserMetaBuilder>{

			name(name:string):Ref<UserMetaBuilder>
			userId(userId:string):Ref<UserMetaBuilder>
			build():Ref<UserMeta>
	}
	export interface V4 extends Struct<V4>{

			calendar:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateCalendarReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateCalendarResp>
				delete(ctx:context.Context,req:Ref<DeleteCalendarReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteCalendarResp>
				get(ctx:context.Context,req:Ref<GetCalendarReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetCalendarResp>
				list(ctx:context.Context,req:Ref<ListCalendarReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListCalendarResp>
				patch(ctx:context.Context,req:Ref<PatchCalendarReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchCalendarResp>
				primary(ctx:context.Context,req:Ref<PrimaryCalendarReq>,...options:larkcore.RequestOptionFunc[]):Ref<PrimaryCalendarResp>
				search(ctx:context.Context,req:Ref<SearchCalendarReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchCalendarResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchCalendarReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchCalendarIterator>
				subscribe(ctx:context.Context,req:Ref<SubscribeCalendarReq>,...options:larkcore.RequestOptionFunc[]):Ref<SubscribeCalendarResp>
				subscription(ctx:context.Context,...options:larkcore.RequestOptionFunc[]):Ref<SubscriptionCalendarResp>
				unsubscribe(ctx:context.Context,req:Ref<UnsubscribeCalendarReq>,...options:larkcore.RequestOptionFunc[]):Ref<UnsubscribeCalendarResp>
				unsubscription(ctx:context.Context,...options:larkcore.RequestOptionFunc[]):Ref<UnsubscriptionCalendarResp>
			}>
			calendarAcl:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateCalendarAclReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateCalendarAclResp>
				delete(ctx:context.Context,req:Ref<DeleteCalendarAclReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteCalendarAclResp>
				list(ctx:context.Context,req:Ref<ListCalendarAclReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListCalendarAclResp>
				listByIterator(ctx:context.Context,req:Ref<ListCalendarAclReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListCalendarAclIterator>
				subscription(ctx:context.Context,req:Ref<SubscriptionCalendarAclReq>,...options:larkcore.RequestOptionFunc[]):Ref<SubscriptionCalendarAclResp>
				unsubscription(ctx:context.Context,req:Ref<UnsubscriptionCalendarAclReq>,...options:larkcore.RequestOptionFunc[]):Ref<UnsubscriptionCalendarAclResp>
			}>
			calendarEvent:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateCalendarEventReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateCalendarEventResp>
				delete(ctx:context.Context,req:Ref<DeleteCalendarEventReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteCalendarEventResp>
				get(ctx:context.Context,req:Ref<GetCalendarEventReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetCalendarEventResp>
				instanceView(ctx:context.Context,req:Ref<InstanceViewCalendarEventReq>,...options:larkcore.RequestOptionFunc[]):Ref<InstanceViewCalendarEventResp>
				instances(ctx:context.Context,req:Ref<InstancesCalendarEventReq>,...options:larkcore.RequestOptionFunc[]):Ref<InstancesCalendarEventResp>
				list(ctx:context.Context,req:Ref<ListCalendarEventReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListCalendarEventResp>
				patch(ctx:context.Context,req:Ref<PatchCalendarEventReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchCalendarEventResp>
				reply(ctx:context.Context,req:Ref<ReplyCalendarEventReq>,...options:larkcore.RequestOptionFunc[]):Ref<ReplyCalendarEventResp>
				search(ctx:context.Context,req:Ref<SearchCalendarEventReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchCalendarEventResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchCalendarEventReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchCalendarEventIterator>
				subscription(ctx:context.Context,req:Ref<SubscriptionCalendarEventReq>,...options:larkcore.RequestOptionFunc[]):Ref<SubscriptionCalendarEventResp>
				unsubscription(ctx:context.Context,req:Ref<UnsubscriptionCalendarEventReq>,...options:larkcore.RequestOptionFunc[]):Ref<UnsubscriptionCalendarEventResp>
			}>
			calendarEventAttendee:Ref<{
			
				batchDelete(ctx:context.Context,req:Ref<BatchDeleteCalendarEventAttendeeReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchDeleteCalendarEventAttendeeResp>
				create(ctx:context.Context,req:Ref<CreateCalendarEventAttendeeReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateCalendarEventAttendeeResp>
				list(ctx:context.Context,req:Ref<ListCalendarEventAttendeeReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListCalendarEventAttendeeResp>
				listByIterator(ctx:context.Context,req:Ref<ListCalendarEventAttendeeReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListCalendarEventAttendeeIterator>
			}>
			calendarEventAttendeeChatMember:Ref<{
			
				list(ctx:context.Context,req:Ref<ListCalendarEventAttendeeChatMemberReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListCalendarEventAttendeeChatMemberResp>
				listByIterator(ctx:context.Context,req:Ref<ListCalendarEventAttendeeChatMemberReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListCalendarEventAttendeeChatMemberIterator>
			}>
			calendarEventMeetingChat:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateCalendarEventMeetingChatReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateCalendarEventMeetingChatResp>
				delete(ctx:context.Context,req:Ref<DeleteCalendarEventMeetingChatReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteCalendarEventMeetingChatResp>
			}>
			calendarEventMeetingMinute:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateCalendarEventMeetingMinuteReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateCalendarEventMeetingMinuteResp>
			}>
			exchangeBinding:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateExchangeBindingReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateExchangeBindingResp>
				delete(ctx:context.Context,req:Ref<DeleteExchangeBindingReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteExchangeBindingResp>
				get(ctx:context.Context,req:Ref<GetExchangeBindingReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetExchangeBindingResp>
			}>
			freebusy:Ref<{
			
				list(ctx:context.Context,req:Ref<ListFreebusyReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListFreebusyResp>
			}>
			setting:Ref<{
			
				generateCaldavConf(ctx:context.Context,req:Ref<GenerateCaldavConfSettingReq>,...options:larkcore.RequestOptionFunc[]):Ref<GenerateCaldavConfSettingResp>
			}>
			timeoffEvent:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateTimeoffEventReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateTimeoffEventResp>
				delete(ctx:context.Context,req:Ref<DeleteTimeoffEventReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteTimeoffEventResp>
			}>
	}
	export interface VcInfo extends Struct<VcInfo>{

			uniqueId:Ref<string>
			meetingNo:Ref<string>
	}
	export interface VcInfoBuilder extends Struct<VcInfoBuilder>{

			uniqueId(uniqueId:string):Ref<VcInfoBuilder>
			meetingNo(meetingNo:string):Ref<VcInfoBuilder>
			build():Ref<VcInfo>
	}
	export interface Vchat extends Struct<Vchat>{

			vcType:Ref<string>
			iconType:Ref<string>
			description:Ref<string>
			meetingUrl:Ref<string>
			meetingSettings:Ref<MeetingSettings>
	}
	export interface VchatBuilder extends Struct<VchatBuilder>{

			vcType(vcType:string):Ref<VchatBuilder>
			iconType(iconType:string):Ref<VchatBuilder>
			description(description:string):Ref<VchatBuilder>
			meetingUrl(meetingUrl:string):Ref<VchatBuilder>
			meetingSettings(meetingSettings:Ref<MeetingSettings>):Ref<VchatBuilder>
			build():Ref<Vchat>
	}
	export interface Workhour extends Struct<Workhour>{

			dayOfWeek:Ref<int>
			startTime:Ref<int>
			endTime:Ref<int>
	}
	export interface WorkhourBuilder extends Struct<WorkhourBuilder>{

			dayOfWeek(dayOfWeek:int):Ref<WorkhourBuilder>
			startTime(startTime:int):Ref<WorkhourBuilder>
			endTime(endTime:int):Ref<WorkhourBuilder>
			build():Ref<Workhour>
	}
	export interface WorkhourSetting extends Struct<WorkhourSetting>{

			timezone:Ref<string>
			workhours:Ref<Workhour>[]
			enableWorkHour:Ref<bool>
			userId:Ref<string>
	}
	export interface WorkhourSettingBuilder extends Struct<WorkhourSettingBuilder>{

			timezone(timezone:string):Ref<WorkhourSettingBuilder>
			workhours(workhours:Ref<Workhour>[]):Ref<WorkhourSettingBuilder>
			enableWorkHour(enableWorkHour:bool):Ref<WorkhourSettingBuilder>
			userId(userId:string):Ref<WorkhourSettingBuilder>
			build():Ref<WorkhourSetting>
	}
	export function emptyBatchDeleteCalendarEventAttendeeReqBody():BatchDeleteCalendarEventAttendeeReqBody
	export function emptyRefBatchDeleteCalendarEventAttendeeReqBody():Ref<BatchDeleteCalendarEventAttendeeReqBody>
	export function refOfBatchDeleteCalendarEventAttendeeReqBody(x:BatchDeleteCalendarEventAttendeeReqBody,v:Ref<BatchDeleteCalendarEventAttendeeReqBody>)
	export function unRefBatchDeleteCalendarEventAttendeeReqBody(v:Ref<BatchDeleteCalendarEventAttendeeReqBody>):BatchDeleteCalendarEventAttendeeReqBody
	export function emptyPrimaryCalendarReq():PrimaryCalendarReq
	export function emptyRefPrimaryCalendarReq():Ref<PrimaryCalendarReq>
	export function refOfPrimaryCalendarReq(x:PrimaryCalendarReq,v:Ref<PrimaryCalendarReq>)
	export function unRefPrimaryCalendarReq(v:Ref<PrimaryCalendarReq>):PrimaryCalendarReq
	export function emptyV4():V4
	export function emptyRefV4():Ref<V4>
	export function refOfV4(x:V4,v:Ref<V4>)
	export function unRefV4(v:Ref<V4>):V4
	export function emptyCalendarEvent():CalendarEvent
	export function emptyRefCalendarEvent():Ref<CalendarEvent>
	export function refOfCalendarEvent(x:CalendarEvent,v:Ref<CalendarEvent>)
	export function unRefCalendarEvent(v:Ref<CalendarEvent>):CalendarEvent
	export function emptyCreateCalendarEventAttendeeReq():CreateCalendarEventAttendeeReq
	export function emptyRefCreateCalendarEventAttendeeReq():Ref<CreateCalendarEventAttendeeReq>
	export function refOfCreateCalendarEventAttendeeReq(x:CreateCalendarEventAttendeeReq,v:Ref<CreateCalendarEventAttendeeReq>)
	export function unRefCreateCalendarEventAttendeeReq(v:Ref<CreateCalendarEventAttendeeReq>):CreateCalendarEventAttendeeReq
	export function emptyCreateCalendarEventMeetingChatReq():CreateCalendarEventMeetingChatReq
	export function emptyRefCreateCalendarEventMeetingChatReq():Ref<CreateCalendarEventMeetingChatReq>
	export function refOfCreateCalendarEventMeetingChatReq(x:CreateCalendarEventMeetingChatReq,v:Ref<CreateCalendarEventMeetingChatReq>)
	export function unRefCreateCalendarEventMeetingChatReq(v:Ref<CreateCalendarEventMeetingChatReq>):CreateCalendarEventMeetingChatReq
	export function emptyDeleteCalendarReq():DeleteCalendarReq
	export function emptyRefDeleteCalendarReq():Ref<DeleteCalendarReq>
	export function refOfDeleteCalendarReq(x:DeleteCalendarReq,v:Ref<DeleteCalendarReq>)
	export function unRefDeleteCalendarReq(v:Ref<DeleteCalendarReq>):DeleteCalendarReq
	export function emptyDeleteExchangeBindingResp():DeleteExchangeBindingResp
	export function emptyRefDeleteExchangeBindingResp():Ref<DeleteExchangeBindingResp>
	export function refOfDeleteExchangeBindingResp(x:DeleteExchangeBindingResp,v:Ref<DeleteExchangeBindingResp>)
	export function unRefDeleteExchangeBindingResp(v:Ref<DeleteExchangeBindingResp>):DeleteExchangeBindingResp
	export function emptyGetCalendarEventReq():GetCalendarEventReq
	export function emptyRefGetCalendarEventReq():Ref<GetCalendarEventReq>
	export function refOfGetCalendarEventReq(x:GetCalendarEventReq,v:Ref<GetCalendarEventReq>)
	export function unRefGetCalendarEventReq(v:Ref<GetCalendarEventReq>):GetCalendarEventReq
	export function emptyInstance():Instance
	export function emptyRefInstance():Ref<Instance>
	export function refOfInstance(x:Instance,v:Ref<Instance>)
	export function unRefInstance(v:Ref<Instance>):Instance
	export function emptyListCalendarEventAttendeeResp():ListCalendarEventAttendeeResp
	export function emptyRefListCalendarEventAttendeeResp():Ref<ListCalendarEventAttendeeResp>
	export function refOfListCalendarEventAttendeeResp(x:ListCalendarEventAttendeeResp,v:Ref<ListCalendarEventAttendeeResp>)
	export function unRefListCalendarEventAttendeeResp(v:Ref<ListCalendarEventAttendeeResp>):ListCalendarEventAttendeeResp
	export function emptyPatchCalendarEventRespData():PatchCalendarEventRespData
	export function emptyRefPatchCalendarEventRespData():Ref<PatchCalendarEventRespData>
	export function refOfPatchCalendarEventRespData(x:PatchCalendarEventRespData,v:Ref<PatchCalendarEventRespData>)
	export function unRefPatchCalendarEventRespData(v:Ref<PatchCalendarEventRespData>):PatchCalendarEventRespData
	export function emptyListFreebusyResp():ListFreebusyResp
	export function emptyRefListFreebusyResp():Ref<ListFreebusyResp>
	export function refOfListFreebusyResp(x:ListFreebusyResp,v:Ref<ListFreebusyResp>)
	export function unRefListFreebusyResp(v:Ref<ListFreebusyResp>):ListFreebusyResp
	export function emptyWorkhour():Workhour
	export function emptyRefWorkhour():Ref<Workhour>
	export function refOfWorkhour(x:Workhour,v:Ref<Workhour>)
	export function unRefWorkhour(v:Ref<Workhour>):Workhour
	export function emptyFreeTime():FreeTime
	export function emptyRefFreeTime():Ref<FreeTime>
	export function refOfFreeTime(x:FreeTime,v:Ref<FreeTime>)
	export function unRefFreeTime(v:Ref<FreeTime>):FreeTime
	export function emptyMyaiDocDetail():MyaiDocDetail
	export function emptyRefMyaiDocDetail():Ref<MyaiDocDetail>
	export function refOfMyaiDocDetail(x:MyaiDocDetail,v:Ref<MyaiDocDetail>)
	export function unRefMyaiDocDetail(v:Ref<MyaiDocDetail>):MyaiDocDetail
	export function emptyWorkhourSetting():WorkhourSetting
	export function emptyRefWorkhourSetting():Ref<WorkhourSetting>
	export function refOfWorkhourSetting(x:WorkhourSetting,v:Ref<WorkhourSetting>)
	export function unRefWorkhourSetting(v:Ref<WorkhourSetting>):WorkhourSetting
	export function emptyCreateExchangeBindingRespData():CreateExchangeBindingRespData
	export function emptyRefCreateExchangeBindingRespData():Ref<CreateExchangeBindingRespData>
	export function refOfCreateExchangeBindingRespData(x:CreateExchangeBindingRespData,v:Ref<CreateExchangeBindingRespData>)
	export function unRefCreateExchangeBindingRespData(v:Ref<CreateExchangeBindingRespData>):CreateExchangeBindingRespData
	export function emptyGetCalendarEventRespData():GetCalendarEventRespData
	export function emptyRefGetCalendarEventRespData():Ref<GetCalendarEventRespData>
	export function refOfGetCalendarEventRespData(x:GetCalendarEventRespData,v:Ref<GetCalendarEventRespData>)
	export function unRefGetCalendarEventRespData(v:Ref<GetCalendarEventRespData>):GetCalendarEventRespData
	export function emptyPatchCalendarEventResp():PatchCalendarEventResp
	export function emptyRefPatchCalendarEventResp():Ref<PatchCalendarEventResp>
	export function refOfPatchCalendarEventResp(x:PatchCalendarEventResp,v:Ref<PatchCalendarEventResp>)
	export function unRefPatchCalendarEventResp(v:Ref<PatchCalendarEventResp>):PatchCalendarEventResp
	export function emptyDeleteCalendarAclResp():DeleteCalendarAclResp
	export function emptyRefDeleteCalendarAclResp():Ref<DeleteCalendarAclResp>
	export function refOfDeleteCalendarAclResp(x:DeleteCalendarAclResp,v:Ref<DeleteCalendarAclResp>)
	export function unRefDeleteCalendarAclResp(v:Ref<DeleteCalendarAclResp>):DeleteCalendarAclResp
	export function emptyP2CalendarAclCreatedV4():P2CalendarAclCreatedV4
	export function emptyRefP2CalendarAclCreatedV4():Ref<P2CalendarAclCreatedV4>
	export function refOfP2CalendarAclCreatedV4(x:P2CalendarAclCreatedV4,v:Ref<P2CalendarAclCreatedV4>)
	export function unRefP2CalendarAclCreatedV4(v:Ref<P2CalendarAclCreatedV4>):P2CalendarAclCreatedV4
	export function emptyP2CalendarEventChangedV4Data():P2CalendarEventChangedV4Data
	export function emptyRefP2CalendarEventChangedV4Data():Ref<P2CalendarEventChangedV4Data>
	export function refOfP2CalendarEventChangedV4Data(x:P2CalendarEventChangedV4Data,v:Ref<P2CalendarEventChangedV4Data>)
	export function unRefP2CalendarEventChangedV4Data(v:Ref<P2CalendarEventChangedV4Data>):P2CalendarEventChangedV4Data
	export function emptySubscriptionCalendarResp():SubscriptionCalendarResp
	export function emptyRefSubscriptionCalendarResp():Ref<SubscriptionCalendarResp>
	export function refOfSubscriptionCalendarResp(x:SubscriptionCalendarResp,v:Ref<SubscriptionCalendarResp>)
	export function unRefSubscriptionCalendarResp(v:Ref<SubscriptionCalendarResp>):SubscriptionCalendarResp
	export function emptyCalendarEventAttendeeResp():CalendarEventAttendeeResp
	export function emptyRefCalendarEventAttendeeResp():Ref<CalendarEventAttendeeResp>
	export function refOfCalendarEventAttendeeResp(x:CalendarEventAttendeeResp,v:Ref<CalendarEventAttendeeResp>)
	export function unRefCalendarEventAttendeeResp(v:Ref<CalendarEventAttendeeResp>):CalendarEventAttendeeResp
	export function emptyEventSearchFilter():EventSearchFilter
	export function emptyRefEventSearchFilter():Ref<EventSearchFilter>
	export function refOfEventSearchFilter(x:EventSearchFilter,v:Ref<EventSearchFilter>)
	export function unRefEventSearchFilter(v:Ref<EventSearchFilter>):EventSearchFilter
	export function emptySearchCalendarEventRespData():SearchCalendarEventRespData
	export function emptyRefSearchCalendarEventRespData():Ref<SearchCalendarEventRespData>
	export function refOfSearchCalendarEventRespData(x:SearchCalendarEventRespData,v:Ref<SearchCalendarEventRespData>)
	export function unRefSearchCalendarEventRespData(v:Ref<SearchCalendarEventRespData>):SearchCalendarEventRespData
	export function emptyListCalendarEventAttendeeChatMemberReq():ListCalendarEventAttendeeChatMemberReq
	export function emptyRefListCalendarEventAttendeeChatMemberReq():Ref<ListCalendarEventAttendeeChatMemberReq>
	export function refOfListCalendarEventAttendeeChatMemberReq(x:ListCalendarEventAttendeeChatMemberReq,v:Ref<ListCalendarEventAttendeeChatMemberReq>)
	export function unRefListCalendarEventAttendeeChatMemberReq(v:Ref<ListCalendarEventAttendeeChatMemberReq>):ListCalendarEventAttendeeChatMemberReq
	export function emptySearchEventData():SearchEventData
	export function emptyRefSearchEventData():Ref<SearchEventData>
	export function refOfSearchEventData(x:SearchEventData,v:Ref<SearchEventData>)
	export function unRefSearchEventData(v:Ref<SearchEventData>):SearchEventData
	export function emptyUnsubscriptionCalendarAclReq():UnsubscriptionCalendarAclReq
	export function emptyRefUnsubscriptionCalendarAclReq():Ref<UnsubscriptionCalendarAclReq>
	export function refOfUnsubscriptionCalendarAclReq(x:UnsubscriptionCalendarAclReq,v:Ref<UnsubscriptionCalendarAclReq>)
	export function unRefUnsubscriptionCalendarAclReq(v:Ref<UnsubscriptionCalendarAclReq>):UnsubscriptionCalendarAclReq
	export function emptyCalendarUnderstandScenarioContext():CalendarUnderstandScenarioContext
	export function emptyRefCalendarUnderstandScenarioContext():Ref<CalendarUnderstandScenarioContext>
	export function refOfCalendarUnderstandScenarioContext(x:CalendarUnderstandScenarioContext,v:Ref<CalendarUnderstandScenarioContext>)
	export function unRefCalendarUnderstandScenarioContext(v:Ref<CalendarUnderstandScenarioContext>):CalendarUnderstandScenarioContext
	export function emptyCreateCalendarEventReq():CreateCalendarEventReq
	export function emptyRefCreateCalendarEventReq():Ref<CreateCalendarEventReq>
	export function refOfCreateCalendarEventReq(x:CreateCalendarEventReq,v:Ref<CreateCalendarEventReq>)
	export function unRefCreateCalendarEventReq(v:Ref<CreateCalendarEventReq>):CreateCalendarEventReq
	export function emptyDeleteCalendarResp():DeleteCalendarResp
	export function emptyRefDeleteCalendarResp():Ref<DeleteCalendarResp>
	export function refOfDeleteCalendarResp(x:DeleteCalendarResp,v:Ref<DeleteCalendarResp>)
	export function unRefDeleteCalendarResp(v:Ref<DeleteCalendarResp>):DeleteCalendarResp
	export function emptyInstanceViewCalendarEventReq():InstanceViewCalendarEventReq
	export function emptyRefInstanceViewCalendarEventReq():Ref<InstanceViewCalendarEventReq>
	export function refOfInstanceViewCalendarEventReq(x:InstanceViewCalendarEventReq,v:Ref<InstanceViewCalendarEventReq>)
	export function unRefInstanceViewCalendarEventReq(v:Ref<InstanceViewCalendarEventReq>):InstanceViewCalendarEventReq
	export function emptyInstanceViewCalendarEventRespData():InstanceViewCalendarEventRespData
	export function emptyRefInstanceViewCalendarEventRespData():Ref<InstanceViewCalendarEventRespData>
	export function refOfInstanceViewCalendarEventRespData(x:InstanceViewCalendarEventRespData,v:Ref<InstanceViewCalendarEventRespData>)
	export function unRefInstanceViewCalendarEventRespData(v:Ref<InstanceViewCalendarEventRespData>):InstanceViewCalendarEventRespData
	export function emptySearchCalendarRespData():SearchCalendarRespData
	export function emptyRefSearchCalendarRespData():Ref<SearchCalendarRespData>
	export function refOfSearchCalendarRespData(x:SearchCalendarRespData,v:Ref<SearchCalendarRespData>)
	export function unRefSearchCalendarRespData(v:Ref<SearchCalendarRespData>):SearchCalendarRespData
	export function emptyListCalendarAclReq():ListCalendarAclReq
	export function emptyRefListCalendarAclReq():Ref<ListCalendarAclReq>
	export function refOfListCalendarAclReq(x:ListCalendarAclReq,v:Ref<ListCalendarAclReq>)
	export function unRefListCalendarAclReq(v:Ref<ListCalendarAclReq>):ListCalendarAclReq
	export function emptyReminder():Reminder
	export function emptyRefReminder():Ref<Reminder>
	export function refOfReminder(x:Reminder,v:Ref<Reminder>)
	export function unRefReminder(v:Ref<Reminder>):Reminder
	export function emptyCreateTimeoffEventRespData():CreateTimeoffEventRespData
	export function emptyRefCreateTimeoffEventRespData():Ref<CreateTimeoffEventRespData>
	export function refOfCreateTimeoffEventRespData(x:CreateTimeoffEventRespData,v:Ref<CreateTimeoffEventRespData>)
	export function unRefCreateTimeoffEventRespData(v:Ref<CreateTimeoffEventRespData>):CreateTimeoffEventRespData
	export function emptyP2CalendarChangedV4():P2CalendarChangedV4
	export function emptyRefP2CalendarChangedV4():Ref<P2CalendarChangedV4>
	export function refOfP2CalendarChangedV4(x:P2CalendarChangedV4,v:Ref<P2CalendarChangedV4>)
	export function unRefP2CalendarChangedV4(v:Ref<P2CalendarChangedV4>):P2CalendarChangedV4
	export function emptyUnsubscribeCalendarReq():UnsubscribeCalendarReq
	export function emptyRefUnsubscribeCalendarReq():Ref<UnsubscribeCalendarReq>
	export function refOfUnsubscribeCalendarReq(x:UnsubscribeCalendarReq,v:Ref<UnsubscribeCalendarReq>)
	export function unRefUnsubscribeCalendarReq(v:Ref<UnsubscribeCalendarReq>):UnsubscribeCalendarReq
	export function emptyCreateCalendarEventAttendeeResp():CreateCalendarEventAttendeeResp
	export function emptyRefCreateCalendarEventAttendeeResp():Ref<CreateCalendarEventAttendeeResp>
	export function refOfCreateCalendarEventAttendeeResp(x:CreateCalendarEventAttendeeResp,v:Ref<CreateCalendarEventAttendeeResp>)
	export function unRefCreateCalendarEventAttendeeResp(v:Ref<CreateCalendarEventAttendeeResp>):CreateCalendarEventAttendeeResp
	export function emptyPatchCalendarResp():PatchCalendarResp
	export function emptyRefPatchCalendarResp():Ref<PatchCalendarResp>
	export function refOfPatchCalendarResp(x:PatchCalendarResp,v:Ref<PatchCalendarResp>)
	export function unRefPatchCalendarResp(v:Ref<PatchCalendarResp>):PatchCalendarResp
	export function emptyListCalendarEventAttendeeIterator():ListCalendarEventAttendeeIterator
	export function emptyRefListCalendarEventAttendeeIterator():Ref<ListCalendarEventAttendeeIterator>
	export function refOfListCalendarEventAttendeeIterator(x:ListCalendarEventAttendeeIterator,v:Ref<ListCalendarEventAttendeeIterator>)
	export function unRefListCalendarEventAttendeeIterator(v:Ref<ListCalendarEventAttendeeIterator>):ListCalendarEventAttendeeIterator
	export function emptyUnsubscribeCalendarResp():UnsubscribeCalendarResp
	export function emptyRefUnsubscribeCalendarResp():Ref<UnsubscribeCalendarResp>
	export function refOfUnsubscribeCalendarResp(x:UnsubscribeCalendarResp,v:Ref<UnsubscribeCalendarResp>)
	export function unRefUnsubscribeCalendarResp(v:Ref<UnsubscribeCalendarResp>):UnsubscribeCalendarResp
	export function emptyUserId():UserId
	export function emptyRefUserId():Ref<UserId>
	export function refOfUserId(x:UserId,v:Ref<UserId>)
	export function unRefUserId(v:Ref<UserId>):UserId
	export function emptyCalendarUnderstandExtra():CalendarUnderstandExtra
	export function emptyRefCalendarUnderstandExtra():Ref<CalendarUnderstandExtra>
	export function refOfCalendarUnderstandExtra(x:CalendarUnderstandExtra,v:Ref<CalendarUnderstandExtra>)
	export function unRefCalendarUnderstandExtra(v:Ref<CalendarUnderstandExtra>):CalendarUnderstandExtra
	export function emptyGetCalendarReq():GetCalendarReq
	export function emptyRefGetCalendarReq():Ref<GetCalendarReq>
	export function refOfGetCalendarReq(x:GetCalendarReq,v:Ref<GetCalendarReq>)
	export function unRefGetCalendarReq(v:Ref<GetCalendarReq>):GetCalendarReq
	export function emptyInstancesCalendarEventRespData():InstancesCalendarEventRespData
	export function emptyRefInstancesCalendarEventRespData():Ref<InstancesCalendarEventRespData>
	export function refOfInstancesCalendarEventRespData(x:InstancesCalendarEventRespData,v:Ref<InstancesCalendarEventRespData>)
	export function unRefInstancesCalendarEventRespData(v:Ref<InstancesCalendarEventRespData>):InstancesCalendarEventRespData
	export function emptyMeetingMinute():MeetingMinute
	export function emptyRefMeetingMinute():Ref<MeetingMinute>
	export function refOfMeetingMinute(x:MeetingMinute,v:Ref<MeetingMinute>)
	export function unRefMeetingMinute(v:Ref<MeetingMinute>):MeetingMinute
	export function emptyDeleteCalendarEventMeetingChatResp():DeleteCalendarEventMeetingChatResp
	export function emptyRefDeleteCalendarEventMeetingChatResp():Ref<DeleteCalendarEventMeetingChatResp>
	export function refOfDeleteCalendarEventMeetingChatResp(x:DeleteCalendarEventMeetingChatResp,v:Ref<DeleteCalendarEventMeetingChatResp>)
	export function unRefDeleteCalendarEventMeetingChatResp(v:Ref<DeleteCalendarEventMeetingChatResp>):DeleteCalendarEventMeetingChatResp
	export function emptyInstancesCalendarEventResp():InstancesCalendarEventResp
	export function emptyRefInstancesCalendarEventResp():Ref<InstancesCalendarEventResp>
	export function refOfInstancesCalendarEventResp(x:InstancesCalendarEventResp,v:Ref<InstancesCalendarEventResp>)
	export function unRefInstancesCalendarEventResp(v:Ref<InstancesCalendarEventResp>):InstancesCalendarEventResp
	export function emptyRoomMeta():RoomMeta
	export function emptyRefRoomMeta():Ref<RoomMeta>
	export function refOfRoomMeta(x:RoomMeta,v:Ref<RoomMeta>)
	export function unRefRoomMeta(v:Ref<RoomMeta>):RoomMeta
	export function emptyGetExchangeBindingReq():GetExchangeBindingReq
	export function emptyRefGetExchangeBindingReq():Ref<GetExchangeBindingReq>
	export function refOfGetExchangeBindingReq(x:GetExchangeBindingReq,v:Ref<GetExchangeBindingReq>)
	export function unRefGetExchangeBindingReq(v:Ref<GetExchangeBindingReq>):GetExchangeBindingReq
	export function emptySearchCalendarEventReqBody():SearchCalendarEventReqBody
	export function emptyRefSearchCalendarEventReqBody():Ref<SearchCalendarEventReqBody>
	export function refOfSearchCalendarEventReqBody(x:SearchCalendarEventReqBody,v:Ref<SearchCalendarEventReqBody>)
	export function unRefSearchCalendarEventReqBody(v:Ref<SearchCalendarEventReqBody>):SearchCalendarEventReqBody
	export function emptySearchUserResultAi():SearchUserResultAi
	export function emptyRefSearchUserResultAi():Ref<SearchUserResultAi>
	export function refOfSearchUserResultAi(x:SearchUserResultAi,v:Ref<SearchUserResultAi>)
	export function unRefSearchUserResultAi(v:Ref<SearchUserResultAi>):SearchUserResultAi
	export function emptyAclScope():AclScope
	export function emptyRefAclScope():Ref<AclScope>
	export function refOfAclScope(x:AclScope,v:Ref<AclScope>)
	export function unRefAclScope(v:Ref<AclScope>):AclScope
	export function emptyCalendarAcl():CalendarAcl
	export function emptyRefCalendarAcl():Ref<CalendarAcl>
	export function refOfCalendarAcl(x:CalendarAcl,v:Ref<CalendarAcl>)
	export function unRefCalendarAcl(v:Ref<CalendarAcl>):CalendarAcl
	export function emptyCreateCalendarRespData():CreateCalendarRespData
	export function emptyRefCreateCalendarRespData():Ref<CreateCalendarRespData>
	export function refOfCreateCalendarRespData(x:CreateCalendarRespData,v:Ref<CreateCalendarRespData>)
	export function unRefCreateCalendarRespData(v:Ref<CreateCalendarRespData>):CreateCalendarRespData
	export function emptyFile():File
	export function emptyRefFile():Ref<File>
	export function refOfFile(x:File,v:Ref<File>)
	export function unRefFile(v:Ref<File>):File
	export function emptyUnsubscriptionCalendarAclResp():UnsubscriptionCalendarAclResp
	export function emptyRefUnsubscriptionCalendarAclResp():Ref<UnsubscriptionCalendarAclResp>
	export function refOfUnsubscriptionCalendarAclResp(x:UnsubscriptionCalendarAclResp,v:Ref<UnsubscriptionCalendarAclResp>)
	export function unRefUnsubscriptionCalendarAclResp(v:Ref<UnsubscriptionCalendarAclResp>):UnsubscriptionCalendarAclResp
	export function emptyAclScopeEvent():AclScopeEvent
	export function emptyRefAclScopeEvent():Ref<AclScopeEvent>
	export function refOfAclScopeEvent(x:AclScopeEvent,v:Ref<AclScopeEvent>)
	export function unRefAclScopeEvent(v:Ref<AclScopeEvent>):AclScopeEvent
	export function emptyListCalendarEventReq():ListCalendarEventReq
	export function emptyRefListCalendarEventReq():Ref<ListCalendarEventReq>
	export function refOfListCalendarEventReq(x:ListCalendarEventReq,v:Ref<ListCalendarEventReq>)
	export function unRefListCalendarEventReq(v:Ref<ListCalendarEventReq>):ListCalendarEventReq
	export function emptyListCalendarEventResp():ListCalendarEventResp
	export function emptyRefListCalendarEventResp():Ref<ListCalendarEventResp>
	export function refOfListCalendarEventResp(x:ListCalendarEventResp,v:Ref<ListCalendarEventResp>)
	export function unRefListCalendarEventResp(v:Ref<ListCalendarEventResp>):ListCalendarEventResp
	export function emptyUserFreebusy():UserFreebusy
	export function emptyRefUserFreebusy():Ref<UserFreebusy>
	export function refOfUserFreebusy(x:UserFreebusy,v:Ref<UserFreebusy>)
	export function unRefUserFreebusy(v:Ref<UserFreebusy>):UserFreebusy
	export function emptyCreateCalendarEventRespData():CreateCalendarEventRespData
	export function emptyRefCreateCalendarEventRespData():Ref<CreateCalendarEventRespData>
	export function refOfCreateCalendarEventRespData(x:CreateCalendarEventRespData,v:Ref<CreateCalendarEventRespData>)
	export function unRefCreateCalendarEventRespData(v:Ref<CreateCalendarEventRespData>):CreateCalendarEventRespData
	export function emptyEventBriefInfoAi():EventBriefInfoAi
	export function emptyRefEventBriefInfoAi():Ref<EventBriefInfoAi>
	export function refOfEventBriefInfoAi(x:EventBriefInfoAi,v:Ref<EventBriefInfoAi>)
	export function unRefEventBriefInfoAi(v:Ref<EventBriefInfoAi>):EventBriefInfoAi
	export function emptyMyAiEventInfo():MyAiEventInfo
	export function emptyRefMyAiEventInfo():Ref<MyAiEventInfo>
	export function refOfMyAiEventInfo(x:MyAiEventInfo,v:Ref<MyAiEventInfo>)
	export function unRefMyAiEventInfo(v:Ref<MyAiEventInfo>):MyAiEventInfo
	export function emptyPatchCalendarReq():PatchCalendarReq
	export function emptyRefPatchCalendarReq():Ref<PatchCalendarReq>
	export function refOfPatchCalendarReq(x:PatchCalendarReq,v:Ref<PatchCalendarReq>)
	export function unRefPatchCalendarReq(v:Ref<PatchCalendarReq>):PatchCalendarReq
	export function emptyCalendarEventAttendeeChatMember():CalendarEventAttendeeChatMember
	export function emptyRefCalendarEventAttendeeChatMember():Ref<CalendarEventAttendeeChatMember>
	export function refOfCalendarEventAttendeeChatMember(x:CalendarEventAttendeeChatMember,v:Ref<CalendarEventAttendeeChatMember>)
	export function unRefCalendarEventAttendeeChatMember(v:Ref<CalendarEventAttendeeChatMember>):CalendarEventAttendeeChatMember
	export function emptyCalendarFreebusy():CalendarFreebusy
	export function emptyRefCalendarFreebusy():Ref<CalendarFreebusy>
	export function refOfCalendarFreebusy(x:CalendarFreebusy,v:Ref<CalendarFreebusy>)
	export function unRefCalendarFreebusy(v:Ref<CalendarFreebusy>):CalendarFreebusy
	export function emptyDepartmentId():DepartmentId
	export function emptyRefDepartmentId():Ref<DepartmentId>
	export function refOfDepartmentId(x:DepartmentId,v:Ref<DepartmentId>)
	export function unRefDepartmentId(v:Ref<DepartmentId>):DepartmentId
	export function emptyGetCalendarEventResp():GetCalendarEventResp
	export function emptyRefGetCalendarEventResp():Ref<GetCalendarEventResp>
	export function refOfGetCalendarEventResp(x:GetCalendarEventResp,v:Ref<GetCalendarEventResp>)
	export function unRefGetCalendarEventResp(v:Ref<GetCalendarEventResp>):GetCalendarEventResp
	export function emptyOperateCardData():OperateCardData
	export function emptyRefOperateCardData():Ref<OperateCardData>
	export function refOfOperateCardData(x:OperateCardData,v:Ref<OperateCardData>)
	export function unRefOperateCardData(v:Ref<OperateCardData>):OperateCardData
	export function emptySubscribeCalendarRespData():SubscribeCalendarRespData
	export function emptyRefSubscribeCalendarRespData():Ref<SubscribeCalendarRespData>
	export function refOfSubscribeCalendarRespData(x:SubscribeCalendarRespData,v:Ref<SubscribeCalendarRespData>)
	export function unRefSubscribeCalendarRespData(v:Ref<SubscribeCalendarRespData>):SubscribeCalendarRespData
	export function emptyAttendeeChatMember():AttendeeChatMember
	export function emptyRefAttendeeChatMember():Ref<AttendeeChatMember>
	export function refOfAttendeeChatMember(x:AttendeeChatMember,v:Ref<AttendeeChatMember>)
	export function unRefAttendeeChatMember(v:Ref<AttendeeChatMember>):AttendeeChatMember
	export function emptyEventTime():EventTime
	export function emptyRefEventTime():Ref<EventTime>
	export function refOfEventTime(x:EventTime,v:Ref<EventTime>)
	export function unRefEventTime(v:Ref<EventTime>):EventTime
	export function emptyBatchDeleteCalendarEventAttendeeReq():BatchDeleteCalendarEventAttendeeReq
	export function emptyRefBatchDeleteCalendarEventAttendeeReq():Ref<BatchDeleteCalendarEventAttendeeReq>
	export function refOfBatchDeleteCalendarEventAttendeeReq(x:BatchDeleteCalendarEventAttendeeReq,v:Ref<BatchDeleteCalendarEventAttendeeReq>)
	export function unRefBatchDeleteCalendarEventAttendeeReq(v:Ref<BatchDeleteCalendarEventAttendeeReq>):BatchDeleteCalendarEventAttendeeReq
	export function emptyCreateCalendarEventAttendeeReqBody():CreateCalendarEventAttendeeReqBody
	export function emptyRefCreateCalendarEventAttendeeReqBody():Ref<CreateCalendarEventAttendeeReqBody>
	export function refOfCreateCalendarEventAttendeeReqBody(x:CreateCalendarEventAttendeeReqBody,v:Ref<CreateCalendarEventAttendeeReqBody>)
	export function unRefCreateCalendarEventAttendeeReqBody(v:Ref<CreateCalendarEventAttendeeReqBody>):CreateCalendarEventAttendeeReqBody
	export function emptyCreateCalendarResp():CreateCalendarResp
	export function emptyRefCreateCalendarResp():Ref<CreateCalendarResp>
	export function refOfCreateCalendarResp(x:CreateCalendarResp,v:Ref<CreateCalendarResp>)
	export function unRefCreateCalendarResp(v:Ref<CreateCalendarResp>):CreateCalendarResp
	export function emptyListCalendarEventAttendeeReq():ListCalendarEventAttendeeReq
	export function emptyRefListCalendarEventAttendeeReq():Ref<ListCalendarEventAttendeeReq>
	export function refOfListCalendarEventAttendeeReq(x:ListCalendarEventAttendeeReq,v:Ref<ListCalendarEventAttendeeReq>)
	export function unRefListCalendarEventAttendeeReq(v:Ref<ListCalendarEventAttendeeReq>):ListCalendarEventAttendeeReq
	export function emptySubscriptionCalendarAclResp():SubscriptionCalendarAclResp
	export function emptyRefSubscriptionCalendarAclResp():Ref<SubscriptionCalendarAclResp>
	export function refOfSubscriptionCalendarAclResp(x:SubscriptionCalendarAclResp,v:Ref<SubscriptionCalendarAclResp>)
	export function unRefSubscriptionCalendarAclResp(v:Ref<SubscriptionCalendarAclResp>):SubscriptionCalendarAclResp
	export function emptyUserMeta():UserMeta
	export function emptyRefUserMeta():Ref<UserMeta>
	export function refOfUserMeta(x:UserMeta,v:Ref<UserMeta>)
	export function unRefUserMeta(v:Ref<UserMeta>):UserMeta
	export function emptyDeleteTimeoffEventResp():DeleteTimeoffEventResp
	export function emptyRefDeleteTimeoffEventResp():Ref<DeleteTimeoffEventResp>
	export function refOfDeleteTimeoffEventResp(x:DeleteTimeoffEventResp,v:Ref<DeleteTimeoffEventResp>)
	export function unRefDeleteTimeoffEventResp(v:Ref<DeleteTimeoffEventResp>):DeleteTimeoffEventResp
	export function emptyFreebusy():Freebusy
	export function emptyRefFreebusy():Ref<Freebusy>
	export function refOfFreebusy(x:Freebusy,v:Ref<Freebusy>)
	export function unRefFreebusy(v:Ref<Freebusy>):Freebusy
	export function emptyInstanceViewCalendarEventResp():InstanceViewCalendarEventResp
	export function emptyRefInstanceViewCalendarEventResp():Ref<InstanceViewCalendarEventResp>
	export function refOfInstanceViewCalendarEventResp(x:InstanceViewCalendarEventResp,v:Ref<InstanceViewCalendarEventResp>)
	export function unRefInstanceViewCalendarEventResp(v:Ref<InstanceViewCalendarEventResp>):InstanceViewCalendarEventResp
	export function emptyVcInfo():VcInfo
	export function emptyRefVcInfo():Ref<VcInfo>
	export function refOfVcInfo(x:VcInfo,v:Ref<VcInfo>)
	export function unRefVcInfo(v:Ref<VcInfo>):VcInfo
	export function emptyTimeoffEvent():TimeoffEvent
	export function emptyRefTimeoffEvent():Ref<TimeoffEvent>
	export function refOfTimeoffEvent(x:TimeoffEvent,v:Ref<TimeoffEvent>)
	export function unRefTimeoffEvent(v:Ref<TimeoffEvent>):TimeoffEvent
	export function emptyAttachment():Attachment
	export function emptyRefAttachment():Ref<Attachment>
	export function refOfAttachment(x:Attachment,v:Ref<Attachment>)
	export function unRefAttachment(v:Ref<Attachment>):Attachment
	export function emptyDeleteCalendarAclReq():DeleteCalendarAclReq
	export function emptyRefDeleteCalendarAclReq():Ref<DeleteCalendarAclReq>
	export function refOfDeleteCalendarAclReq(x:DeleteCalendarAclReq,v:Ref<DeleteCalendarAclReq>)
	export function unRefDeleteCalendarAclReq(v:Ref<DeleteCalendarAclReq>):DeleteCalendarAclReq
	export function emptySearchCalendarEventReq():SearchCalendarEventReq
	export function emptyRefSearchCalendarEventReq():Ref<SearchCalendarEventReq>
	export function refOfSearchCalendarEventReq(x:SearchCalendarEventReq,v:Ref<SearchCalendarEventReq>)
	export function unRefSearchCalendarEventReq(v:Ref<SearchCalendarEventReq>):SearchCalendarEventReq
	export function emptySearchCalendarResp():SearchCalendarResp
	export function emptyRefSearchCalendarResp():Ref<SearchCalendarResp>
	export function refOfSearchCalendarResp(x:SearchCalendarResp,v:Ref<SearchCalendarResp>)
	export function unRefSearchCalendarResp(v:Ref<SearchCalendarResp>):SearchCalendarResp
	export function emptyEventLocation():EventLocation
	export function emptyRefEventLocation():Ref<EventLocation>
	export function refOfEventLocation(x:EventLocation,v:Ref<EventLocation>)
	export function unRefEventLocation(v:Ref<EventLocation>):EventLocation
	export function emptySubscribeCalendarResp():SubscribeCalendarResp
	export function emptyRefSubscribeCalendarResp():Ref<SubscribeCalendarResp>
	export function refOfSubscribeCalendarResp(x:SubscribeCalendarResp,v:Ref<SubscribeCalendarResp>)
	export function unRefSubscribeCalendarResp(v:Ref<SubscribeCalendarResp>):SubscribeCalendarResp
	export function emptyP2CalendarAclCreatedV4Data():P2CalendarAclCreatedV4Data
	export function emptyRefP2CalendarAclCreatedV4Data():Ref<P2CalendarAclCreatedV4Data>
	export function refOfP2CalendarAclCreatedV4Data(x:P2CalendarAclCreatedV4Data,v:Ref<P2CalendarAclCreatedV4Data>)
	export function unRefP2CalendarAclCreatedV4Data(v:Ref<P2CalendarAclCreatedV4Data>):P2CalendarAclCreatedV4Data
	export function emptyReplyCalendarEventResp():ReplyCalendarEventResp
	export function emptyRefReplyCalendarEventResp():Ref<ReplyCalendarEventResp>
	export function refOfReplyCalendarEventResp(x:ReplyCalendarEventResp,v:Ref<ReplyCalendarEventResp>)
	export function unRefReplyCalendarEventResp(v:Ref<ReplyCalendarEventResp>):ReplyCalendarEventResp
	export function emptyListCalendarAclResp():ListCalendarAclResp
	export function emptyRefListCalendarAclResp():Ref<ListCalendarAclResp>
	export function refOfListCalendarAclResp(x:ListCalendarAclResp,v:Ref<ListCalendarAclResp>)
	export function unRefListCalendarAclResp(v:Ref<ListCalendarAclResp>):ListCalendarAclResp
	export function emptyListCalendarEventAttendeeChatMemberIterator():ListCalendarEventAttendeeChatMemberIterator
	export function emptyRefListCalendarEventAttendeeChatMemberIterator():Ref<ListCalendarEventAttendeeChatMemberIterator>
	export function refOfListCalendarEventAttendeeChatMemberIterator(x:ListCalendarEventAttendeeChatMemberIterator,v:Ref<ListCalendarEventAttendeeChatMemberIterator>)
	export function unRefListCalendarEventAttendeeChatMemberIterator(v:Ref<ListCalendarEventAttendeeChatMemberIterator>):ListCalendarEventAttendeeChatMemberIterator
	export function emptySchema():Schema
	export function emptyRefSchema():Ref<Schema>
	export function refOfSchema(x:Schema,v:Ref<Schema>)
	export function unRefSchema(v:Ref<Schema>):Schema
	export function emptySearchUserDataAi():SearchUserDataAi
	export function emptyRefSearchUserDataAi():Ref<SearchUserDataAi>
	export function refOfSearchUserDataAi(x:SearchUserDataAi,v:Ref<SearchUserDataAi>)
	export function unRefSearchUserDataAi(v:Ref<SearchUserDataAi>):SearchUserDataAi
	export function emptyGenerateCaldavConfSettingReqBody():GenerateCaldavConfSettingReqBody
	export function emptyRefGenerateCaldavConfSettingReqBody():Ref<GenerateCaldavConfSettingReqBody>
	export function refOfGenerateCaldavConfSettingReqBody(x:GenerateCaldavConfSettingReqBody,v:Ref<GenerateCaldavConfSettingReqBody>)
	export function unRefGenerateCaldavConfSettingReqBody(v:Ref<GenerateCaldavConfSettingReqBody>):GenerateCaldavConfSettingReqBody
	export function emptyOpenEventRsvpInfo():OpenEventRsvpInfo
	export function emptyRefOpenEventRsvpInfo():Ref<OpenEventRsvpInfo>
	export function refOfOpenEventRsvpInfo(x:OpenEventRsvpInfo,v:Ref<OpenEventRsvpInfo>)
	export function unRefOpenEventRsvpInfo(v:Ref<OpenEventRsvpInfo>):OpenEventRsvpInfo
	export function emptyUserCalendar():UserCalendar
	export function emptyRefUserCalendar():Ref<UserCalendar>
	export function refOfUserCalendar(x:UserCalendar,v:Ref<UserCalendar>)
	export function unRefUserCalendar(v:Ref<UserCalendar>):UserCalendar
	export function emptyCreateCalendarEventMeetingChatRespData():CreateCalendarEventMeetingChatRespData
	export function emptyRefCreateCalendarEventMeetingChatRespData():Ref<CreateCalendarEventMeetingChatRespData>
	export function refOfCreateCalendarEventMeetingChatRespData(x:CreateCalendarEventMeetingChatRespData,v:Ref<CreateCalendarEventMeetingChatRespData>)
	export function unRefCreateCalendarEventMeetingChatRespData(v:Ref<CreateCalendarEventMeetingChatRespData>):CreateCalendarEventMeetingChatRespData
	export function emptyGenerateCaldavConfSettingRespData():GenerateCaldavConfSettingRespData
	export function emptyRefGenerateCaldavConfSettingRespData():Ref<GenerateCaldavConfSettingRespData>
	export function refOfGenerateCaldavConfSettingRespData(x:GenerateCaldavConfSettingRespData,v:Ref<GenerateCaldavConfSettingRespData>)
	export function unRefGenerateCaldavConfSettingRespData(v:Ref<GenerateCaldavConfSettingRespData>):GenerateCaldavConfSettingRespData
	export function emptyListCalendarReq():ListCalendarReq
	export function emptyRefListCalendarReq():Ref<ListCalendarReq>
	export function refOfListCalendarReq(x:ListCalendarReq,v:Ref<ListCalendarReq>)
	export function unRefListCalendarReq(v:Ref<ListCalendarReq>):ListCalendarReq
	export function emptyCreateCalendarEventResp():CreateCalendarEventResp
	export function emptyRefCreateCalendarEventResp():Ref<CreateCalendarEventResp>
	export function refOfCreateCalendarEventResp(x:CreateCalendarEventResp,v:Ref<CreateCalendarEventResp>)
	export function unRefCreateCalendarEventResp(v:Ref<CreateCalendarEventResp>):CreateCalendarEventResp
	export function emptyP2CalendarChangedV4Data():P2CalendarChangedV4Data
	export function emptyRefP2CalendarChangedV4Data():Ref<P2CalendarChangedV4Data>
	export function refOfP2CalendarChangedV4Data(x:P2CalendarChangedV4Data,v:Ref<P2CalendarChangedV4Data>)
	export function unRefP2CalendarChangedV4Data(v:Ref<P2CalendarChangedV4Data>):P2CalendarChangedV4Data
	export function emptySystemInfo():SystemInfo
	export function emptyRefSystemInfo():Ref<SystemInfo>
	export function refOfSystemInfo(x:SystemInfo,v:Ref<SystemInfo>)
	export function unRefSystemInfo(v:Ref<SystemInfo>):SystemInfo
	export function emptyUnsubscriptionCalendarEventResp():UnsubscriptionCalendarEventResp
	export function emptyRefUnsubscriptionCalendarEventResp():Ref<UnsubscriptionCalendarEventResp>
	export function refOfUnsubscriptionCalendarEventResp(x:UnsubscriptionCalendarEventResp,v:Ref<UnsubscriptionCalendarEventResp>)
	export function unRefUnsubscriptionCalendarEventResp(v:Ref<UnsubscriptionCalendarEventResp>):UnsubscriptionCalendarEventResp
	export function emptyCreateExchangeBindingResp():CreateExchangeBindingResp
	export function emptyRefCreateExchangeBindingResp():Ref<CreateExchangeBindingResp>
	export function refOfCreateExchangeBindingResp(x:CreateExchangeBindingResp,v:Ref<CreateExchangeBindingResp>)
	export function unRefCreateExchangeBindingResp(v:Ref<CreateExchangeBindingResp>):CreateExchangeBindingResp
	export function emptyEventOrganizer():EventOrganizer
	export function emptyRefEventOrganizer():Ref<EventOrganizer>
	export function refOfEventOrganizer(x:EventOrganizer,v:Ref<EventOrganizer>)
	export function unRefEventOrganizer(v:Ref<EventOrganizer>):EventOrganizer
	export function emptyListCalendarAclRespData():ListCalendarAclRespData
	export function emptyRefListCalendarAclRespData():Ref<ListCalendarAclRespData>
	export function refOfListCalendarAclRespData(x:ListCalendarAclRespData,v:Ref<ListCalendarAclRespData>)
	export function unRefListCalendarAclRespData(v:Ref<ListCalendarAclRespData>):ListCalendarAclRespData
	export function emptyTimeInfo():TimeInfo
	export function emptyRefTimeInfo():Ref<TimeInfo>
	export function refOfTimeInfo(x:TimeInfo,v:Ref<TimeInfo>)
	export function unRefTimeInfo(v:Ref<TimeInfo>):TimeInfo
	export function emptyGenerateCaldavConfSettingResp():GenerateCaldavConfSettingResp
	export function emptyRefGenerateCaldavConfSettingResp():Ref<GenerateCaldavConfSettingResp>
	export function refOfGenerateCaldavConfSettingResp(x:GenerateCaldavConfSettingResp,v:Ref<GenerateCaldavConfSettingResp>)
	export function unRefGenerateCaldavConfSettingResp(v:Ref<GenerateCaldavConfSettingResp>):GenerateCaldavConfSettingResp
	export function emptyListCalendarRespData():ListCalendarRespData
	export function emptyRefListCalendarRespData():Ref<ListCalendarRespData>
	export function refOfListCalendarRespData(x:ListCalendarRespData,v:Ref<ListCalendarRespData>)
	export function unRefListCalendarRespData(v:Ref<ListCalendarRespData>):ListCalendarRespData
	export function emptyP2CalendarAclDeletedV4():P2CalendarAclDeletedV4
	export function emptyRefP2CalendarAclDeletedV4():Ref<P2CalendarAclDeletedV4>
	export function refOfP2CalendarAclDeletedV4(x:P2CalendarAclDeletedV4,v:Ref<P2CalendarAclDeletedV4>)
	export function unRefP2CalendarAclDeletedV4(v:Ref<P2CalendarAclDeletedV4>):P2CalendarAclDeletedV4
	export function emptySearchCalendarEventIterator():SearchCalendarEventIterator
	export function emptyRefSearchCalendarEventIterator():Ref<SearchCalendarEventIterator>
	export function refOfSearchCalendarEventIterator(x:SearchCalendarEventIterator,v:Ref<SearchCalendarEventIterator>)
	export function unRefSearchCalendarEventIterator(v:Ref<SearchCalendarEventIterator>):SearchCalendarEventIterator
	export function emptyGenerateCaldavConfSettingReq():GenerateCaldavConfSettingReq
	export function emptyRefGenerateCaldavConfSettingReq():Ref<GenerateCaldavConfSettingReq>
	export function refOfGenerateCaldavConfSettingReq(x:GenerateCaldavConfSettingReq,v:Ref<GenerateCaldavConfSettingReq>)
	export function unRefGenerateCaldavConfSettingReq(v:Ref<GenerateCaldavConfSettingReq>):GenerateCaldavConfSettingReq
	export function emptyGetCalendarRespData():GetCalendarRespData
	export function emptyRefGetCalendarRespData():Ref<GetCalendarRespData>
	export function refOfGetCalendarRespData(x:GetCalendarRespData,v:Ref<GetCalendarRespData>)
	export function unRefGetCalendarRespData(v:Ref<GetCalendarRespData>):GetCalendarRespData
	export function emptyReplyCalendarEventReqBody():ReplyCalendarEventReqBody
	export function emptyRefReplyCalendarEventReqBody():Ref<ReplyCalendarEventReqBody>
	export function refOfReplyCalendarEventReqBody(x:ReplyCalendarEventReqBody,v:Ref<ReplyCalendarEventReqBody>)
	export function unRefReplyCalendarEventReqBody(v:Ref<ReplyCalendarEventReqBody>):ReplyCalendarEventReqBody
	export function emptyUnsubscriptionCalendarEventReq():UnsubscriptionCalendarEventReq
	export function emptyRefUnsubscriptionCalendarEventReq():Ref<UnsubscriptionCalendarEventReq>
	export function refOfUnsubscriptionCalendarEventReq(x:UnsubscriptionCalendarEventReq,v:Ref<UnsubscriptionCalendarEventReq>)
	export function unRefUnsubscriptionCalendarEventReq(v:Ref<UnsubscriptionCalendarEventReq>):UnsubscriptionCalendarEventReq
	export function emptyCreateCalendarEventMeetingMinuteReq():CreateCalendarEventMeetingMinuteReq
	export function emptyRefCreateCalendarEventMeetingMinuteReq():Ref<CreateCalendarEventMeetingMinuteReq>
	export function refOfCreateCalendarEventMeetingMinuteReq(x:CreateCalendarEventMeetingMinuteReq,v:Ref<CreateCalendarEventMeetingMinuteReq>)
	export function unRefCreateCalendarEventMeetingMinuteReq(v:Ref<CreateCalendarEventMeetingMinuteReq>):CreateCalendarEventMeetingMinuteReq
	export function emptyCalendarAclEvent():CalendarAclEvent
	export function emptyRefCalendarAclEvent():Ref<CalendarAclEvent>
	export function refOfCalendarAclEvent(x:CalendarAclEvent,v:Ref<CalendarAclEvent>)
	export function unRefCalendarAclEvent(v:Ref<CalendarAclEvent>):CalendarAclEvent
	export function emptyListCalendarAclIterator():ListCalendarAclIterator
	export function emptyRefListCalendarAclIterator():Ref<ListCalendarAclIterator>
	export function refOfListCalendarAclIterator(x:ListCalendarAclIterator,v:Ref<ListCalendarAclIterator>)
	export function unRefListCalendarAclIterator(v:Ref<ListCalendarAclIterator>):ListCalendarAclIterator
	export function emptyBookMeetingRoomData():BookMeetingRoomData
	export function emptyRefBookMeetingRoomData():Ref<BookMeetingRoomData>
	export function refOfBookMeetingRoomData(x:BookMeetingRoomData,v:Ref<BookMeetingRoomData>)
	export function unRefBookMeetingRoomData(v:Ref<BookMeetingRoomData>):BookMeetingRoomData
	export function emptyCreateExchangeBindingReq():CreateExchangeBindingReq
	export function emptyRefCreateExchangeBindingReq():Ref<CreateExchangeBindingReq>
	export function refOfCreateExchangeBindingReq(x:CreateExchangeBindingReq,v:Ref<CreateExchangeBindingReq>)
	export function unRefCreateExchangeBindingReq(v:Ref<CreateExchangeBindingReq>):CreateExchangeBindingReq
	export function emptyCustomizationOption():CustomizationOption
	export function emptyRefCustomizationOption():Ref<CustomizationOption>
	export function refOfCustomizationOption(x:CustomizationOption,v:Ref<CustomizationOption>)
	export function unRefCustomizationOption(v:Ref<CustomizationOption>):CustomizationOption
	export function emptyCalendarPrimaryBatchReq():CalendarPrimaryBatchReq
	export function emptyRefCalendarPrimaryBatchReq():Ref<CalendarPrimaryBatchReq>
	export function refOfCalendarPrimaryBatchReq(x:CalendarPrimaryBatchReq,v:Ref<CalendarPrimaryBatchReq>)
	export function unRefCalendarPrimaryBatchReq(v:Ref<CalendarPrimaryBatchReq>):CalendarPrimaryBatchReq
	export function emptyCreateCalendarAclResp():CreateCalendarAclResp
	export function emptyRefCreateCalendarAclResp():Ref<CreateCalendarAclResp>
	export function refOfCreateCalendarAclResp(x:CreateCalendarAclResp,v:Ref<CreateCalendarAclResp>)
	export function unRefCreateCalendarAclResp(v:Ref<CreateCalendarAclResp>):CreateCalendarAclResp
	export function emptyGetExchangeBindingRespData():GetExchangeBindingRespData
	export function emptyRefGetExchangeBindingRespData():Ref<GetExchangeBindingRespData>
	export function refOfGetExchangeBindingRespData(x:GetExchangeBindingRespData,v:Ref<GetExchangeBindingRespData>)
	export function unRefGetExchangeBindingRespData(v:Ref<GetExchangeBindingRespData>):GetExchangeBindingRespData
	export function emptySubscriptionCalendarEventReq():SubscriptionCalendarEventReq
	export function emptyRefSubscriptionCalendarEventReq():Ref<SubscriptionCalendarEventReq>
	export function refOfSubscriptionCalendarEventReq(x:SubscriptionCalendarEventReq,v:Ref<SubscriptionCalendarEventReq>)
	export function unRefSubscriptionCalendarEventReq(v:Ref<SubscriptionCalendarEventReq>):SubscriptionCalendarEventReq
	export function emptyVchat():Vchat
	export function emptyRefVchat():Ref<Vchat>
	export function refOfVchat(x:Vchat,v:Ref<Vchat>)
	export function unRefVchat(v:Ref<Vchat>):Vchat
	export function emptyDeleteExchangeBindingReq():DeleteExchangeBindingReq
	export function emptyRefDeleteExchangeBindingReq():Ref<DeleteExchangeBindingReq>
	export function refOfDeleteExchangeBindingReq(x:DeleteExchangeBindingReq,v:Ref<DeleteExchangeBindingReq>)
	export function unRefDeleteExchangeBindingReq(v:Ref<DeleteExchangeBindingReq>):DeleteExchangeBindingReq
	export function emptyCardCallback():CardCallback
	export function emptyRefCardCallback():Ref<CardCallback>
	export function refOfCardCallback(x:CardCallback,v:Ref<CardCallback>)
	export function unRefCardCallback(v:Ref<CardCallback>):CardCallback
	export function emptyListCalendarEventAttendeeRespData():ListCalendarEventAttendeeRespData
	export function emptyRefListCalendarEventAttendeeRespData():Ref<ListCalendarEventAttendeeRespData>
	export function refOfListCalendarEventAttendeeRespData(x:ListCalendarEventAttendeeRespData,v:Ref<ListCalendarEventAttendeeRespData>)
	export function unRefListCalendarEventAttendeeRespData(v:Ref<ListCalendarEventAttendeeRespData>):ListCalendarEventAttendeeRespData
	export function emptyListFreebusyRespData():ListFreebusyRespData
	export function emptyRefListFreebusyRespData():Ref<ListFreebusyRespData>
	export function refOfListFreebusyRespData(x:ListFreebusyRespData,v:Ref<ListFreebusyRespData>)
	export function unRefListFreebusyRespData(v:Ref<ListFreebusyRespData>):ListFreebusyRespData
	export function emptyCreateCalendarEventMeetingMinuteRespData():CreateCalendarEventMeetingMinuteRespData
	export function emptyRefCreateCalendarEventMeetingMinuteRespData():Ref<CreateCalendarEventMeetingMinuteRespData>
	export function refOfCreateCalendarEventMeetingMinuteRespData(x:CreateCalendarEventMeetingMinuteRespData,v:Ref<CreateCalendarEventMeetingMinuteRespData>)
	export function unRefCreateCalendarEventMeetingMinuteRespData(v:Ref<CreateCalendarEventMeetingMinuteRespData>):CreateCalendarEventMeetingMinuteRespData
	export function emptyListCalendarEventAttendeeChatMemberRespData():ListCalendarEventAttendeeChatMemberRespData
	export function emptyRefListCalendarEventAttendeeChatMemberRespData():Ref<ListCalendarEventAttendeeChatMemberRespData>
	export function refOfListCalendarEventAttendeeChatMemberRespData(x:ListCalendarEventAttendeeChatMemberRespData,v:Ref<ListCalendarEventAttendeeChatMemberRespData>)
	export function unRefListCalendarEventAttendeeChatMemberRespData(v:Ref<ListCalendarEventAttendeeChatMemberRespData>):ListCalendarEventAttendeeChatMemberRespData
	export function emptyMyaiCardStatus():MyaiCardStatus
	export function emptyRefMyaiCardStatus():Ref<MyaiCardStatus>
	export function refOfMyaiCardStatus(x:MyaiCardStatus,v:Ref<MyaiCardStatus>)
	export function unRefMyaiCardStatus(v:Ref<MyaiCardStatus>):MyaiCardStatus
	export function emptyReplyCalendarEventReq():ReplyCalendarEventReq
	export function emptyRefReplyCalendarEventReq():Ref<ReplyCalendarEventReq>
	export function refOfReplyCalendarEventReq(x:ReplyCalendarEventReq,v:Ref<ReplyCalendarEventReq>)
	export function unRefReplyCalendarEventReq(v:Ref<ReplyCalendarEventReq>):ReplyCalendarEventReq
	export function emptyCreateCalendarAclRespData():CreateCalendarAclRespData
	export function emptyRefCreateCalendarAclRespData():Ref<CreateCalendarAclRespData>
	export function refOfCreateCalendarAclRespData(x:CreateCalendarAclRespData,v:Ref<CreateCalendarAclRespData>)
	export function unRefCreateCalendarAclRespData(v:Ref<CreateCalendarAclRespData>):CreateCalendarAclRespData
	export function emptyMyaiReply():MyaiReply
	export function emptyRefMyaiReply():Ref<MyaiReply>
	export function refOfMyaiReply(x:MyaiReply,v:Ref<MyaiReply>)
	export function unRefMyaiReply(v:Ref<MyaiReply>):MyaiReply
	export function emptyP2CalendarEventChangedV4():P2CalendarEventChangedV4
	export function emptyRefP2CalendarEventChangedV4():Ref<P2CalendarEventChangedV4>
	export function refOfP2CalendarEventChangedV4(x:P2CalendarEventChangedV4,v:Ref<P2CalendarEventChangedV4>)
	export function unRefP2CalendarEventChangedV4(v:Ref<P2CalendarEventChangedV4>):P2CalendarEventChangedV4
	export function emptyTimeSpan():TimeSpan
	export function emptyRefTimeSpan():Ref<TimeSpan>
	export function refOfTimeSpan(x:TimeSpan,v:Ref<TimeSpan>)
	export function unRefTimeSpan(v:Ref<TimeSpan>):TimeSpan
	export function emptyCreateCalendarEventAttendeeRespData():CreateCalendarEventAttendeeRespData
	export function emptyRefCreateCalendarEventAttendeeRespData():Ref<CreateCalendarEventAttendeeRespData>
	export function refOfCreateCalendarEventAttendeeRespData(x:CreateCalendarEventAttendeeRespData,v:Ref<CreateCalendarEventAttendeeRespData>)
	export function unRefCreateCalendarEventAttendeeRespData(v:Ref<CreateCalendarEventAttendeeRespData>):CreateCalendarEventAttendeeRespData
	export function emptyGetCalendarResp():GetCalendarResp
	export function emptyRefGetCalendarResp():Ref<GetCalendarResp>
	export function refOfGetCalendarResp(x:GetCalendarResp,v:Ref<GetCalendarResp>)
	export function unRefGetCalendarResp(v:Ref<GetCalendarResp>):GetCalendarResp
	export function emptyGetExchangeBindingResp():GetExchangeBindingResp
	export function emptyRefGetExchangeBindingResp():Ref<GetExchangeBindingResp>
	export function refOfGetExchangeBindingResp(x:GetExchangeBindingResp,v:Ref<GetExchangeBindingResp>)
	export function unRefGetExchangeBindingResp(v:Ref<GetExchangeBindingResp>):GetExchangeBindingResp
	export function emptyMyAiEventDetail():MyAiEventDetail
	export function emptyRefMyAiEventDetail():Ref<MyAiEventDetail>
	export function refOfMyAiEventDetail(x:MyAiEventDetail,v:Ref<MyAiEventDetail>)
	export function unRefMyAiEventDetail(v:Ref<MyAiEventDetail>):MyAiEventDetail
	export function emptyPrimaryCalendarResp():PrimaryCalendarResp
	export function emptyRefPrimaryCalendarResp():Ref<PrimaryCalendarResp>
	export function refOfPrimaryCalendarResp(x:PrimaryCalendarResp,v:Ref<PrimaryCalendarResp>)
	export function unRefPrimaryCalendarResp(v:Ref<PrimaryCalendarResp>):PrimaryCalendarResp
	export function emptySubscribeCalendarReq():SubscribeCalendarReq
	export function emptyRefSubscribeCalendarReq():Ref<SubscribeCalendarReq>
	export function refOfSubscribeCalendarReq(x:SubscribeCalendarReq,v:Ref<SubscribeCalendarReq>)
	export function unRefSubscribeCalendarReq(v:Ref<SubscribeCalendarReq>):SubscribeCalendarReq
	export function emptySubscriptionCalendarEventResp():SubscriptionCalendarEventResp
	export function emptyRefSubscriptionCalendarEventResp():Ref<SubscriptionCalendarEventResp>
	export function refOfSubscriptionCalendarEventResp(x:SubscriptionCalendarEventResp,v:Ref<SubscriptionCalendarEventResp>)
	export function unRefSubscriptionCalendarEventResp(v:Ref<SubscriptionCalendarEventResp>):SubscriptionCalendarEventResp
	export function emptyUnsubscriptionCalendarResp():UnsubscriptionCalendarResp
	export function emptyRefUnsubscriptionCalendarResp():Ref<UnsubscriptionCalendarResp>
	export function refOfUnsubscriptionCalendarResp(x:UnsubscriptionCalendarResp,v:Ref<UnsubscriptionCalendarResp>)
	export function unRefUnsubscriptionCalendarResp(v:Ref<UnsubscriptionCalendarResp>):UnsubscriptionCalendarResp
	export function emptyCreateCalendarReq():CreateCalendarReq
	export function emptyRefCreateCalendarReq():Ref<CreateCalendarReq>
	export function refOfCreateCalendarReq(x:CreateCalendarReq,v:Ref<CreateCalendarReq>)
	export function unRefCreateCalendarReq(v:Ref<CreateCalendarReq>):CreateCalendarReq
	export function emptyDeleteCalendarEventReq():DeleteCalendarEventReq
	export function emptyRefDeleteCalendarEventReq():Ref<DeleteCalendarEventReq>
	export function refOfDeleteCalendarEventReq(x:DeleteCalendarEventReq,v:Ref<DeleteCalendarEventReq>)
	export function unRefDeleteCalendarEventReq(v:Ref<DeleteCalendarEventReq>):DeleteCalendarEventReq
	export function emptyCalendar():Calendar
	export function emptyRefCalendar():Ref<Calendar>
	export function refOfCalendar(x:Calendar,v:Ref<Calendar>)
	export function unRefCalendar(v:Ref<Calendar>):Calendar
	export function emptyCalendarEventAttendeeId():CalendarEventAttendeeId
	export function emptyRefCalendarEventAttendeeId():Ref<CalendarEventAttendeeId>
	export function refOfCalendarEventAttendeeId(x:CalendarEventAttendeeId,v:Ref<CalendarEventAttendeeId>)
	export function unRefCalendarEventAttendeeId(v:Ref<CalendarEventAttendeeId>):CalendarEventAttendeeId
	export function emptyCreateTimeoffEventResp():CreateTimeoffEventResp
	export function emptyRefCreateTimeoffEventResp():Ref<CreateTimeoffEventResp>
	export function refOfCreateTimeoffEventResp(x:CreateTimeoffEventResp,v:Ref<CreateTimeoffEventResp>)
	export function unRefCreateTimeoffEventResp(v:Ref<CreateTimeoffEventResp>):CreateTimeoffEventResp
	export function emptyFreeTimeAi():FreeTimeAi
	export function emptyRefFreeTimeAi():Ref<FreeTimeAi>
	export function refOfFreeTimeAi(x:FreeTimeAi,v:Ref<FreeTimeAi>)
	export function unRefFreeTimeAi(v:Ref<FreeTimeAi>):FreeTimeAi
	export function emptyMeetingSettings():MeetingSettings
	export function emptyRefMeetingSettings():Ref<MeetingSettings>
	export function refOfMeetingSettings(x:MeetingSettings,v:Ref<MeetingSettings>)
	export function unRefMeetingSettings(v:Ref<MeetingSettings>):MeetingSettings
	export function emptyCalendarAttendeeResourceCustomization():CalendarAttendeeResourceCustomization
	export function emptyRefCalendarAttendeeResourceCustomization():Ref<CalendarAttendeeResourceCustomization>
	export function refOfCalendarAttendeeResourceCustomization(x:CalendarAttendeeResourceCustomization,v:Ref<CalendarAttendeeResourceCustomization>)
	export function unRefCalendarAttendeeResourceCustomization(v:Ref<CalendarAttendeeResourceCustomization>):CalendarAttendeeResourceCustomization
	export function emptyPatchCalendarRespData():PatchCalendarRespData
	export function emptyRefPatchCalendarRespData():Ref<PatchCalendarRespData>
	export function refOfPatchCalendarRespData(x:PatchCalendarRespData,v:Ref<PatchCalendarRespData>)
	export function unRefPatchCalendarRespData(v:Ref<PatchCalendarRespData>):PatchCalendarRespData
	export function emptySearchCalendarEventResp():SearchCalendarEventResp
	export function emptyRefSearchCalendarEventResp():Ref<SearchCalendarEventResp>
	export function refOfSearchCalendarEventResp(x:SearchCalendarEventResp,v:Ref<SearchCalendarEventResp>)
	export function unRefSearchCalendarEventResp(v:Ref<SearchCalendarEventResp>):SearchCalendarEventResp
	export function emptyCreateCalendarAclReq():CreateCalendarAclReq
	export function emptyRefCreateCalendarAclReq():Ref<CreateCalendarAclReq>
	export function refOfCreateCalendarAclReq(x:CreateCalendarAclReq,v:Ref<CreateCalendarAclReq>)
	export function unRefCreateCalendarAclReq(v:Ref<CreateCalendarAclReq>):CreateCalendarAclReq
	export function emptyListFreebusyReqBody():ListFreebusyReqBody
	export function emptyRefListFreebusyReqBody():Ref<ListFreebusyReqBody>
	export function refOfListFreebusyReqBody(x:ListFreebusyReqBody,v:Ref<ListFreebusyReqBody>)
	export function unRefListFreebusyReqBody(v:Ref<ListFreebusyReqBody>):ListFreebusyReqBody
	export function emptySearchCalendarReq():SearchCalendarReq
	export function emptyRefSearchCalendarReq():Ref<SearchCalendarReq>
	export function refOfSearchCalendarReq(x:SearchCalendarReq,v:Ref<SearchCalendarReq>)
	export function unRefSearchCalendarReq(v:Ref<SearchCalendarReq>):SearchCalendarReq
	export function emptyCreateCalendarEventMeetingMinuteResp():CreateCalendarEventMeetingMinuteResp
	export function emptyRefCreateCalendarEventMeetingMinuteResp():Ref<CreateCalendarEventMeetingMinuteResp>
	export function refOfCreateCalendarEventMeetingMinuteResp(x:CreateCalendarEventMeetingMinuteResp,v:Ref<CreateCalendarEventMeetingMinuteResp>)
	export function unRefCreateCalendarEventMeetingMinuteResp(v:Ref<CreateCalendarEventMeetingMinuteResp>):CreateCalendarEventMeetingMinuteResp
	export function emptyDeleteCalendarEventResp():DeleteCalendarEventResp
	export function emptyRefDeleteCalendarEventResp():Ref<DeleteCalendarEventResp>
	export function refOfDeleteCalendarEventResp(x:DeleteCalendarEventResp,v:Ref<DeleteCalendarEventResp>)
	export function unRefDeleteCalendarEventResp(v:Ref<DeleteCalendarEventResp>):DeleteCalendarEventResp
	export function emptyListCalendarEventAttendeeChatMemberResp():ListCalendarEventAttendeeChatMemberResp
	export function emptyRefListCalendarEventAttendeeChatMemberResp():Ref<ListCalendarEventAttendeeChatMemberResp>
	export function refOfListCalendarEventAttendeeChatMemberResp(x:ListCalendarEventAttendeeChatMemberResp,v:Ref<ListCalendarEventAttendeeChatMemberResp>)
	export function unRefListCalendarEventAttendeeChatMemberResp(v:Ref<ListCalendarEventAttendeeChatMemberResp>):ListCalendarEventAttendeeChatMemberResp
	export function emptyListCalendarResp():ListCalendarResp
	export function emptyRefListCalendarResp():Ref<ListCalendarResp>
	export function refOfListCalendarResp(x:ListCalendarResp,v:Ref<ListCalendarResp>)
	export function unRefListCalendarResp(v:Ref<ListCalendarResp>):ListCalendarResp
	export function emptyP2CalendarAclDeletedV4Data():P2CalendarAclDeletedV4Data
	export function emptyRefP2CalendarAclDeletedV4Data():Ref<P2CalendarAclDeletedV4Data>
	export function refOfP2CalendarAclDeletedV4Data(x:P2CalendarAclDeletedV4Data,v:Ref<P2CalendarAclDeletedV4Data>)
	export function unRefP2CalendarAclDeletedV4Data(v:Ref<P2CalendarAclDeletedV4Data>):P2CalendarAclDeletedV4Data
	export function emptyCalendarEventResp():CalendarEventResp
	export function emptyRefCalendarEventResp():Ref<CalendarEventResp>
	export function refOfCalendarEventResp(x:CalendarEventResp,v:Ref<CalendarEventResp>)
	export function unRefCalendarEventResp(v:Ref<CalendarEventResp>):CalendarEventResp
	export function emptyDeleteTimeoffEventReq():DeleteTimeoffEventReq
	export function emptyRefDeleteTimeoffEventReq():Ref<DeleteTimeoffEventReq>
	export function refOfDeleteTimeoffEventReq(x:DeleteTimeoffEventReq,v:Ref<DeleteTimeoffEventReq>)
	export function unRefDeleteTimeoffEventReq(v:Ref<DeleteTimeoffEventReq>):DeleteTimeoffEventReq
	export function emptyInstancesCalendarEventReq():InstancesCalendarEventReq
	export function emptyRefInstancesCalendarEventReq():Ref<InstancesCalendarEventReq>
	export function refOfInstancesCalendarEventReq(x:InstancesCalendarEventReq,v:Ref<InstancesCalendarEventReq>)
	export function unRefInstancesCalendarEventReq(v:Ref<InstancesCalendarEventReq>):InstancesCalendarEventReq
	export function emptyPrimaryCalendarRespData():PrimaryCalendarRespData
	export function emptyRefPrimaryCalendarRespData():Ref<PrimaryCalendarRespData>
	export function refOfPrimaryCalendarRespData(x:PrimaryCalendarRespData,v:Ref<PrimaryCalendarRespData>)
	export function unRefPrimaryCalendarRespData(v:Ref<PrimaryCalendarRespData>):PrimaryCalendarRespData
	export function emptySearchCalendarReqBody():SearchCalendarReqBody
	export function emptyRefSearchCalendarReqBody():Ref<SearchCalendarReqBody>
	export function refOfSearchCalendarReqBody(x:SearchCalendarReqBody,v:Ref<SearchCalendarReqBody>)
	export function unRefSearchCalendarReqBody(v:Ref<SearchCalendarReqBody>):SearchCalendarReqBody
	export function emptyBatchDeleteCalendarEventAttendeeResp():BatchDeleteCalendarEventAttendeeResp
	export function emptyRefBatchDeleteCalendarEventAttendeeResp():Ref<BatchDeleteCalendarEventAttendeeResp>
	export function refOfBatchDeleteCalendarEventAttendeeResp(x:BatchDeleteCalendarEventAttendeeResp,v:Ref<BatchDeleteCalendarEventAttendeeResp>)
	export function unRefBatchDeleteCalendarEventAttendeeResp(v:Ref<BatchDeleteCalendarEventAttendeeResp>):BatchDeleteCalendarEventAttendeeResp
	export function emptyCreateTimeoffEventReq():CreateTimeoffEventReq
	export function emptyRefCreateTimeoffEventReq():Ref<CreateTimeoffEventReq>
	export function refOfCreateTimeoffEventReq(x:CreateTimeoffEventReq,v:Ref<CreateTimeoffEventReq>)
	export function unRefCreateTimeoffEventReq(v:Ref<CreateTimeoffEventReq>):CreateTimeoffEventReq
	export function emptyExchangeBinding():ExchangeBinding
	export function emptyRefExchangeBinding():Ref<ExchangeBinding>
	export function refOfExchangeBinding(x:ExchangeBinding,v:Ref<ExchangeBinding>)
	export function unRefExchangeBinding(v:Ref<ExchangeBinding>):ExchangeBinding
	export function emptyListFreebusyReq():ListFreebusyReq
	export function emptyRefListFreebusyReq():Ref<ListFreebusyReq>
	export function refOfListFreebusyReq(x:ListFreebusyReq,v:Ref<ListFreebusyReq>)
	export function unRefListFreebusyReq(v:Ref<ListFreebusyReq>):ListFreebusyReq
	export function emptySubscriptionCalendarAclReq():SubscriptionCalendarAclReq
	export function emptyRefSubscriptionCalendarAclReq():Ref<SubscriptionCalendarAclReq>
	export function refOfSubscriptionCalendarAclReq(x:SubscriptionCalendarAclReq,v:Ref<SubscriptionCalendarAclReq>)
	export function unRefSubscriptionCalendarAclReq(v:Ref<SubscriptionCalendarAclReq>):SubscriptionCalendarAclReq
	export function emptyCardPresent():CardPresent
	export function emptyRefCardPresent():Ref<CardPresent>
	export function refOfCardPresent(x:CardPresent,v:Ref<CardPresent>)
	export function unRefCardPresent(v:Ref<CardPresent>):CardPresent
	export function emptyDeleteCalendarEventMeetingChatReq():DeleteCalendarEventMeetingChatReq
	export function emptyRefDeleteCalendarEventMeetingChatReq():Ref<DeleteCalendarEventMeetingChatReq>
	export function refOfDeleteCalendarEventMeetingChatReq(x:DeleteCalendarEventMeetingChatReq,v:Ref<DeleteCalendarEventMeetingChatReq>)
	export function unRefDeleteCalendarEventMeetingChatReq(v:Ref<DeleteCalendarEventMeetingChatReq>):DeleteCalendarEventMeetingChatReq
	export function emptyMyaiSearchDocResult():MyaiSearchDocResult
	export function emptyRefMyaiSearchDocResult():Ref<MyaiSearchDocResult>
	export function refOfMyaiSearchDocResult(x:MyaiSearchDocResult,v:Ref<MyaiSearchDocResult>)
	export function unRefMyaiSearchDocResult(v:Ref<MyaiSearchDocResult>):MyaiSearchDocResult
	export function emptyCalendarEventAttendee():CalendarEventAttendee
	export function emptyRefCalendarEventAttendee():Ref<CalendarEventAttendee>
	export function refOfCalendarEventAttendee(x:CalendarEventAttendee,v:Ref<CalendarEventAttendee>)
	export function unRefCalendarEventAttendee(v:Ref<CalendarEventAttendee>):CalendarEventAttendee
	export function emptyEventCard():EventCard
	export function emptyRefEventCard():Ref<EventCard>
	export function refOfEventCard(x:EventCard,v:Ref<EventCard>)
	export function unRefEventCard(v:Ref<EventCard>):EventCard
	export function emptyFreeTimeSlot():FreeTimeSlot
	export function emptyRefFreeTimeSlot():Ref<FreeTimeSlot>
	export function refOfFreeTimeSlot(x:FreeTimeSlot,v:Ref<FreeTimeSlot>)
	export function unRefFreeTimeSlot(v:Ref<FreeTimeSlot>):FreeTimeSlot
	export function emptyCreateCalendarEventMeetingChatResp():CreateCalendarEventMeetingChatResp
	export function emptyRefCreateCalendarEventMeetingChatResp():Ref<CreateCalendarEventMeetingChatResp>
	export function refOfCreateCalendarEventMeetingChatResp(x:CreateCalendarEventMeetingChatResp,v:Ref<CreateCalendarEventMeetingChatResp>)
	export function unRefCreateCalendarEventMeetingChatResp(v:Ref<CreateCalendarEventMeetingChatResp>):CreateCalendarEventMeetingChatResp
	export function emptyListCalendarEventRespData():ListCalendarEventRespData
	export function emptyRefListCalendarEventRespData():Ref<ListCalendarEventRespData>
	export function refOfListCalendarEventRespData(x:ListCalendarEventRespData,v:Ref<ListCalendarEventRespData>)
	export function unRefListCalendarEventRespData(v:Ref<ListCalendarEventRespData>):ListCalendarEventRespData
	export function emptyMeetingChat():MeetingChat
	export function emptyRefMeetingChat():Ref<MeetingChat>
	export function refOfMeetingChat(x:MeetingChat,v:Ref<MeetingChat>)
	export function unRefMeetingChat(v:Ref<MeetingChat>):MeetingChat
	export function emptyPatchCalendarEventReq():PatchCalendarEventReq
	export function emptyRefPatchCalendarEventReq():Ref<PatchCalendarEventReq>
	export function refOfPatchCalendarEventReq(x:PatchCalendarEventReq,v:Ref<PatchCalendarEventReq>)
	export function unRefPatchCalendarEventReq(v:Ref<PatchCalendarEventReq>):PatchCalendarEventReq
	export function emptySearchCalendarIterator():SearchCalendarIterator
	export function emptyRefSearchCalendarIterator():Ref<SearchCalendarIterator>
	export function refOfSearchCalendarIterator(x:SearchCalendarIterator,v:Ref<SearchCalendarIterator>)
	export function unRefSearchCalendarIterator(v:Ref<SearchCalendarIterator>):SearchCalendarIterator
}