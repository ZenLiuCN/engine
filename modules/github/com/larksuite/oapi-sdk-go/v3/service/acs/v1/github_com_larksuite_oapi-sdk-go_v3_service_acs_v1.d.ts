// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'github.com/larksuite/oapi-sdk-go/v3/service/acs/v1'{

	// @ts-ignore
	import * as context from 'golang/context'
	// @ts-ignore
	import * as larkevent from 'github.com/larksuite/oapi-sdk-go/v3/event'
	// @ts-ignore
	import * as larkcore from 'github.com/larksuite/oapi-sdk-go/v3/core'
	// @ts-ignore
	import * as io from 'golang/io'
	// @ts-ignore
	import type {Ref,bool,Struct,error,int} from 'go'
	export interface AccessRecord extends Struct<AccessRecord>{

			accessRecordId:Ref<string>
			userId:Ref<string>
			deviceId:Ref<string>
			isClockIn:Ref<bool>
			accessTime:Ref<string>
			accessType:Ref<string>
			accessData:Ref<string>
			isDoorOpen:Ref<bool>
	}
	export interface AccessRecordBuilder extends Struct<AccessRecordBuilder>{

			accessRecordId(accessRecordId:string):Ref<AccessRecordBuilder>
			userId(userId:string):Ref<AccessRecordBuilder>
			deviceId(deviceId:string):Ref<AccessRecordBuilder>
			isClockIn(isClockIn:bool):Ref<AccessRecordBuilder>
			accessTime(accessTime:string):Ref<AccessRecordBuilder>
			accessType(accessType:string):Ref<AccessRecordBuilder>
			accessData(accessData:string):Ref<AccessRecordBuilder>
			isDoorOpen(isDoorOpen:bool):Ref<AccessRecordBuilder>
			build():Ref<AccessRecord>
	}
	export interface CreateRuleExternalPathReqBodyBuilder extends Struct<CreateRuleExternalPathReqBodyBuilder>{

			rule(rule:Ref<Rule>):Ref<CreateRuleExternalPathReqBodyBuilder>
			build():Ref<CreateRuleExternalReqBody>
	}
	export interface CreateRuleExternalReq extends Struct<CreateRuleExternalReq>{

			body:Ref<CreateRuleExternalReqBody>
	}
	export interface CreateRuleExternalReqBody extends Struct<CreateRuleExternalReqBody>{

			rule:Ref<Rule>
	}
	export interface CreateRuleExternalReqBodyBuilder extends Struct<CreateRuleExternalReqBodyBuilder>{

			rule(rule:Ref<Rule>):Ref<CreateRuleExternalReqBodyBuilder>
			build():Ref<CreateRuleExternalReqBody>
	}
	export interface CreateRuleExternalReqBuilder extends Struct<CreateRuleExternalReqBuilder>{

			ruleId(ruleId:string):Ref<CreateRuleExternalReqBuilder>
			userIdType(userIdType:string):Ref<CreateRuleExternalReqBuilder>
			body(body:Ref<CreateRuleExternalReqBody>):Ref<CreateRuleExternalReqBuilder>
			build():Ref<CreateRuleExternalReq>
	}
	export interface CreateRuleExternalResp extends Struct<CreateRuleExternalResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateRuleExternalRespData>
			success():bool
	}
	export interface CreateRuleExternalRespData extends Struct<CreateRuleExternalRespData>{

			ruleId:Ref<string>
	}
	export interface CreateVisitorPathReqBodyBuilder extends Struct<CreateVisitorPathReqBodyBuilder>{

			user(user:Ref<UserExternal>):Ref<CreateVisitorPathReqBodyBuilder>
			build():Ref<CreateVisitorReqBody>
	}
	export interface CreateVisitorReq extends Struct<CreateVisitorReq>{

			body:Ref<CreateVisitorReqBody>
	}
	export interface CreateVisitorReqBody extends Struct<CreateVisitorReqBody>{

			user:Ref<UserExternal>
	}
	export interface CreateVisitorReqBodyBuilder extends Struct<CreateVisitorReqBodyBuilder>{

			user(user:Ref<UserExternal>):Ref<CreateVisitorReqBodyBuilder>
			build():Ref<CreateVisitorReqBody>
	}
	export interface CreateVisitorReqBuilder extends Struct<CreateVisitorReqBuilder>{

			userIdType(userIdType:string):Ref<CreateVisitorReqBuilder>
			body(body:Ref<CreateVisitorReqBody>):Ref<CreateVisitorReqBuilder>
			build():Ref<CreateVisitorReq>
	}
	export interface CreateVisitorResp extends Struct<CreateVisitorResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateVisitorRespData>
			success():bool
	}
	export interface CreateVisitorRespData extends Struct<CreateVisitorRespData>{

			visitorId:Ref<string>
	}
	export interface DeleteRuleExternalReq extends Struct<DeleteRuleExternalReq>{

	}
	export interface DeleteRuleExternalReqBuilder extends Struct<DeleteRuleExternalReqBuilder>{

			ruleId(ruleId:string):Ref<DeleteRuleExternalReqBuilder>
			build():Ref<DeleteRuleExternalReq>
	}
	export interface DeleteRuleExternalResp extends Struct<DeleteRuleExternalResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeleteVisitorReq extends Struct<DeleteVisitorReq>{

	}
	export interface DeleteVisitorReqBuilder extends Struct<DeleteVisitorReqBuilder>{

			visitorId(visitorId:string):Ref<DeleteVisitorReqBuilder>
			userIdType(userIdType:string):Ref<DeleteVisitorReqBuilder>
			build():Ref<DeleteVisitorReq>
	}
	export interface DeleteVisitorResp extends Struct<DeleteVisitorResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DepartmentId extends Struct<DepartmentId>{

			departmentId:Ref<string>
			openDepartmentId:Ref<string>
	}
	export interface DepartmentIdBuilder extends Struct<DepartmentIdBuilder>{

			departmentId(departmentId:string):Ref<DepartmentIdBuilder>
			openDepartmentId(openDepartmentId:string):Ref<DepartmentIdBuilder>
			build():Ref<DepartmentId>
	}
	export interface Device extends Struct<Device>{

			deviceId:Ref<string>
			deviceName:Ref<string>
			deviceSn:Ref<string>
			property:Ref<Property>
	}
	export interface DeviceBindRuleExternalPathReqBodyBuilder extends Struct<DeviceBindRuleExternalPathReqBodyBuilder>{

			deviceId(deviceId:string):Ref<DeviceBindRuleExternalPathReqBodyBuilder>
			ruleIds(ruleIds:string[]):Ref<DeviceBindRuleExternalPathReqBodyBuilder>
			build():Ref<DeviceBindRuleExternalReqBody>
	}
	export interface DeviceBindRuleExternalReq extends Struct<DeviceBindRuleExternalReq>{

			body:Ref<DeviceBindRuleExternalReqBody>
	}
	export interface DeviceBindRuleExternalReqBody extends Struct<DeviceBindRuleExternalReqBody>{

			deviceId:Ref<string>
			ruleIds:string[]
	}
	export interface DeviceBindRuleExternalReqBodyBuilder extends Struct<DeviceBindRuleExternalReqBodyBuilder>{

			deviceId(deviceId:string):Ref<DeviceBindRuleExternalReqBodyBuilder>
			ruleIds(ruleIds:string[]):Ref<DeviceBindRuleExternalReqBodyBuilder>
			build():Ref<DeviceBindRuleExternalReqBody>
	}
	export interface DeviceBindRuleExternalReqBuilder extends Struct<DeviceBindRuleExternalReqBuilder>{

			body(body:Ref<DeviceBindRuleExternalReqBody>):Ref<DeviceBindRuleExternalReqBuilder>
			build():Ref<DeviceBindRuleExternalReq>
	}
	export interface DeviceBindRuleExternalResp extends Struct<DeviceBindRuleExternalResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeviceBuilder extends Struct<DeviceBuilder>{

			deviceId(deviceId:string):Ref<DeviceBuilder>
			deviceName(deviceName:string):Ref<DeviceBuilder>
			deviceSn(deviceSn:string):Ref<DeviceBuilder>
			property(property:Ref<Property>):Ref<DeviceBuilder>
			build():Ref<Device>
	}
	export interface DeviceExternal extends Struct<DeviceExternal>{

			id:Ref<string>
			name:Ref<string>
	}
	export interface DeviceExternalBuilder extends Struct<DeviceExternalBuilder>{

			id(id:string):Ref<DeviceExternalBuilder>
			name(name:string):Ref<DeviceExternalBuilder>
			build():Ref<DeviceExternal>
	}
	export interface Feature extends Struct<Feature>{

			card:Ref<int>
			faceUploaded:Ref<bool>
	}
	export interface FeatureBuilder extends Struct<FeatureBuilder>{

			card(card:int):Ref<FeatureBuilder>
			faceUploaded(faceUploaded:bool):Ref<FeatureBuilder>
			build():Ref<Feature>
	}
	export interface File extends Struct<File>{

			files:io.Reader
			fileType:Ref<string>
			fileName:Ref<string>
	}
	export interface FileBuilder extends Struct<FileBuilder>{

			files(files:io.Reader):Ref<FileBuilder>
			fileType(fileType:string):Ref<FileBuilder>
			fileName(fileName:string):Ref<FileBuilder>
			build():Ref<File>
	}
	export interface GetAccessRecordAccessPhotoReq extends Struct<GetAccessRecordAccessPhotoReq>{

	}
	export interface GetAccessRecordAccessPhotoReqBuilder extends Struct<GetAccessRecordAccessPhotoReqBuilder>{

			accessRecordId(accessRecordId:string):Ref<GetAccessRecordAccessPhotoReqBuilder>
			build():Ref<GetAccessRecordAccessPhotoReq>
	}
	export interface GetAccessRecordAccessPhotoResp extends Struct<GetAccessRecordAccessPhotoResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			file:io.Reader
			fileName:string
			success():bool
			writeFile(fileName:string)/*error*/
	}
	export interface GetRuleExternalReq extends Struct<GetRuleExternalReq>{

	}
	export interface GetRuleExternalReqBuilder extends Struct<GetRuleExternalReqBuilder>{

			deviceId(deviceId:string):Ref<GetRuleExternalReqBuilder>
			userIdType(userIdType:string):Ref<GetRuleExternalReqBuilder>
			build():Ref<GetRuleExternalReq>
	}
	export interface GetRuleExternalResp extends Struct<GetRuleExternalResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetRuleExternalRespData>
			success():bool
	}
	export interface GetRuleExternalRespData extends Struct<GetRuleExternalRespData>{

			rules:Ref<Rule>[]
	}
	export interface GetUserFaceReq extends Struct<GetUserFaceReq>{

	}
	export interface GetUserFaceReqBuilder extends Struct<GetUserFaceReqBuilder>{

			userId(userId:string):Ref<GetUserFaceReqBuilder>
			isCropped(isCropped:bool):Ref<GetUserFaceReqBuilder>
			userIdType(userIdType:string):Ref<GetUserFaceReqBuilder>
			build():Ref<GetUserFaceReq>
	}
	export interface GetUserFaceResp extends Struct<GetUserFaceResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			file:io.Reader
			fileName:string
			success():bool
			writeFile(fileName:string)/*error*/
	}
	export interface GetUserReq extends Struct<GetUserReq>{

	}
	export interface GetUserReqBuilder extends Struct<GetUserReqBuilder>{

			userId(userId:string):Ref<GetUserReqBuilder>
			userIdType(userIdType:string):Ref<GetUserReqBuilder>
			build():Ref<GetUserReq>
	}
	export interface GetUserResp extends Struct<GetUserResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetUserRespData>
			success():bool
	}
	export interface GetUserRespData extends Struct<GetUserRespData>{

			user:Ref<User>
	}
	export interface ListAccessRecordIterator extends Struct<ListAccessRecordIterator>{

			next():[bool,Ref<AccessRecord>]
			nextPageToken():Ref<string>
	}
	export interface ListAccessRecordReq extends Struct<ListAccessRecordReq>{

			limit:int
	}
	export interface ListAccessRecordReqBuilder extends Struct<ListAccessRecordReqBuilder>{

			limit(limit:int):Ref<ListAccessRecordReqBuilder>
			pageSize(pageSize:int):Ref<ListAccessRecordReqBuilder>
			pageToken(pageToken:string):Ref<ListAccessRecordReqBuilder>
			from(from:int):Ref<ListAccessRecordReqBuilder>
			to(to:int):Ref<ListAccessRecordReqBuilder>
			deviceId(deviceId:string):Ref<ListAccessRecordReqBuilder>
			userIdType(userIdType:string):Ref<ListAccessRecordReqBuilder>
			build():Ref<ListAccessRecordReq>
	}
	export interface ListAccessRecordResp extends Struct<ListAccessRecordResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListAccessRecordRespData>
			success():bool
	}
	export interface ListAccessRecordRespData extends Struct<ListAccessRecordRespData>{

			items:Ref<AccessRecord>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface ListDeviceResp extends Struct<ListDeviceResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListDeviceRespData>
			success():bool
	}
	export interface ListDeviceRespData extends Struct<ListDeviceRespData>{

			items:Ref<Device>[]
	}
	export interface ListUserIterator extends Struct<ListUserIterator>{

			next():[bool,Ref<User>]
			nextPageToken():Ref<string>
	}
	export interface ListUserReq extends Struct<ListUserReq>{

			limit:int
	}
	export interface ListUserReqBuilder extends Struct<ListUserReqBuilder>{

			limit(limit:int):Ref<ListUserReqBuilder>
			pageSize(pageSize:int):Ref<ListUserReqBuilder>
			pageToken(pageToken:string):Ref<ListUserReqBuilder>
			userIdType(userIdType:string):Ref<ListUserReqBuilder>
			build():Ref<ListUserReq>
	}
	export interface ListUserResp extends Struct<ListUserResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListUserRespData>
			success():bool
	}
	export interface ListUserRespData extends Struct<ListUserRespData>{

			items:Ref<User>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export function New(config:Ref<larkcore.Config>):Ref<V1>

	export function newAccessRecordBuilder():Ref<AccessRecordBuilder>

	export function newCreateRuleExternalPathReqBodyBuilder():Ref<CreateRuleExternalPathReqBodyBuilder>

	export function newCreateRuleExternalReqBodyBuilder():Ref<CreateRuleExternalReqBodyBuilder>

	export function newCreateRuleExternalReqBuilder():Ref<CreateRuleExternalReqBuilder>

	export function newCreateVisitorPathReqBodyBuilder():Ref<CreateVisitorPathReqBodyBuilder>

	export function newCreateVisitorReqBodyBuilder():Ref<CreateVisitorReqBodyBuilder>

	export function newCreateVisitorReqBuilder():Ref<CreateVisitorReqBuilder>

	export function newDeleteRuleExternalReqBuilder():Ref<DeleteRuleExternalReqBuilder>

	export function newDeleteVisitorReqBuilder():Ref<DeleteVisitorReqBuilder>

	export function newDepartmentIdBuilder():Ref<DepartmentIdBuilder>

	export function newDeviceBindRuleExternalPathReqBodyBuilder():Ref<DeviceBindRuleExternalPathReqBodyBuilder>

	export function newDeviceBindRuleExternalReqBodyBuilder():Ref<DeviceBindRuleExternalReqBodyBuilder>

	export function newDeviceBindRuleExternalReqBuilder():Ref<DeviceBindRuleExternalReqBuilder>

	export function newDeviceBuilder():Ref<DeviceBuilder>

	export function newDeviceExternalBuilder():Ref<DeviceExternalBuilder>

	export function newFeatureBuilder():Ref<FeatureBuilder>

	export function newFileBuilder():Ref<FileBuilder>

	export function newGetAccessRecordAccessPhotoReqBuilder():Ref<GetAccessRecordAccessPhotoReqBuilder>

	export function newGetRuleExternalReqBuilder():Ref<GetRuleExternalReqBuilder>

	export function newGetUserFaceReqBuilder():Ref<GetUserFaceReqBuilder>

	export function newGetUserReqBuilder():Ref<GetUserReqBuilder>

	export function newListAccessRecordReqBuilder():Ref<ListAccessRecordReqBuilder>

	export function newListUserReqBuilder():Ref<ListUserReqBuilder>

	export function newOpeningTimeExternalBuilder():Ref<OpeningTimeExternalBuilder>

	export function newOpeningTimePeriodExternalBuilder():Ref<OpeningTimePeriodExternalBuilder>

	export function newOpeningTimeValidDayExternalBuilder():Ref<OpeningTimeValidDayExternalBuilder>

	export function newP2AccessRecordCreatedV1Handler(v1:(v2:context.Context,v1:Ref<P2AccessRecordCreatedV1>))=>void/*error*/):Ref<P2AccessRecordCreatedV1Handler>

	export function newP2UserUpdatedV1Handler(v1:(v2:context.Context,v1:Ref<P2UserUpdatedV1>))=>void/*error*/):Ref<P2UserUpdatedV1Handler>

	export function newPatchUserReqBuilder():Ref<PatchUserReqBuilder>

	export function newPropertyBuilder():Ref<PropertyBuilder>

	export function newRuleBuilder():Ref<RuleBuilder>

	export function newUpdateUserFaceReqBuilder():Ref<UpdateUserFaceReqBuilder>

	export function newUserBuilder():Ref<UserBuilder>

	export function newUserExternalBuilder():Ref<UserExternalBuilder>

	export function newUserIdBuilder():Ref<UserIdBuilder>

	export interface OpeningTimeExternal extends Struct<OpeningTimeExternal>{

			validDay:Ref<OpeningTimeValidDayExternal>
			weekdays:int[]
			dayTimes:Ref<OpeningTimePeriodExternal>[]
	}
	export interface OpeningTimeExternalBuilder extends Struct<OpeningTimeExternalBuilder>{

			validDay(validDay:Ref<OpeningTimeValidDayExternal>):Ref<OpeningTimeExternalBuilder>
			weekdays(weekdays:int[]):Ref<OpeningTimeExternalBuilder>
			dayTimes(dayTimes:Ref<OpeningTimePeriodExternal>[]):Ref<OpeningTimeExternalBuilder>
			build():Ref<OpeningTimeExternal>
	}
	export interface OpeningTimePeriodExternal extends Struct<OpeningTimePeriodExternal>{

			startHhmm:Ref<int>
			endHhmm:Ref<int>
	}
	export interface OpeningTimePeriodExternalBuilder extends Struct<OpeningTimePeriodExternalBuilder>{

			startHhmm(startHhmm:int):Ref<OpeningTimePeriodExternalBuilder>
			endHhmm(endHhmm:int):Ref<OpeningTimePeriodExternalBuilder>
			build():Ref<OpeningTimePeriodExternal>
	}
	export interface OpeningTimeValidDayExternal extends Struct<OpeningTimeValidDayExternal>{

			startDay:Ref<int>
			endDay:Ref<int>
	}
	export interface OpeningTimeValidDayExternalBuilder extends Struct<OpeningTimeValidDayExternalBuilder>{

			startDay(startDay:int):Ref<OpeningTimeValidDayExternalBuilder>
			endDay(endDay:int):Ref<OpeningTimeValidDayExternalBuilder>
			build():Ref<OpeningTimeValidDayExternal>
	}
	export interface P2AccessRecordCreatedV1 extends Struct<P2AccessRecordCreatedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2AccessRecordCreatedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2AccessRecordCreatedV1Data extends Struct<P2AccessRecordCreatedV1Data>{

			accessRecordId:Ref<string>
			userId:Ref<UserId>
			deviceId:Ref<string>
			isClockIn:Ref<bool>
			isDoorOpen:Ref<bool>
			accessTime:Ref<string>
	}
	export interface P2AccessRecordCreatedV1Handler extends Struct<P2AccessRecordCreatedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2UserUpdatedV1 extends Struct<P2UserUpdatedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2UserUpdatedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2UserUpdatedV1Data extends Struct<P2UserUpdatedV1Data>{

			userId:Ref<UserId>
			card:Ref<int>
			faceUploaded:Ref<bool>
	}
	export interface P2UserUpdatedV1Handler extends Struct<P2UserUpdatedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface PatchUserReq extends Struct<PatchUserReq>{

			user:Ref<User>
	}
	export interface PatchUserReqBuilder extends Struct<PatchUserReqBuilder>{

			userId(userId:string):Ref<PatchUserReqBuilder>
			userIdType(userIdType:string):Ref<PatchUserReqBuilder>
			user(user:Ref<User>):Ref<PatchUserReqBuilder>
			build():Ref<PatchUserReq>
	}
	export interface PatchUserResp extends Struct<PatchUserResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface Property extends Struct<Property>{

			version:Ref<string>
			currentDeviceFaceCount:Ref<int>
			maxFaceCapacity:Ref<int>
			onlineStatus:Ref<int>
			deviceName:Ref<string>
			isClockIn:Ref<bool>
	}
	export interface PropertyBuilder extends Struct<PropertyBuilder>{

			version(version:string):Ref<PropertyBuilder>
			currentDeviceFaceCount(currentDeviceFaceCount:int):Ref<PropertyBuilder>
			maxFaceCapacity(maxFaceCapacity:int):Ref<PropertyBuilder>
			onlineStatus(onlineStatus:int):Ref<PropertyBuilder>
			deviceName(deviceName:string):Ref<PropertyBuilder>
			isClockIn(isClockIn:bool):Ref<PropertyBuilder>
			build():Ref<Property>
	}
	export interface Rule extends Struct<Rule>{

			id:Ref<string>
			name:Ref<string>
			devices:Ref<DeviceExternal>[]
			userCount:Ref<string>
			users:Ref<UserExternal>[]
			visitorCount:Ref<string>
			visitors:Ref<UserExternal>[]
			remindFace:Ref<bool>
			openingTime:Ref<OpeningTimeExternal>
			isTemp:Ref<bool>
	}
	export interface RuleBuilder extends Struct<RuleBuilder>{

			id(id:string):Ref<RuleBuilder>
			name(name:string):Ref<RuleBuilder>
			devices(devices:Ref<DeviceExternal>[]):Ref<RuleBuilder>
			userCount(userCount:string):Ref<RuleBuilder>
			users(users:Ref<UserExternal>[]):Ref<RuleBuilder>
			visitorCount(visitorCount:string):Ref<RuleBuilder>
			visitors(visitors:Ref<UserExternal>[]):Ref<RuleBuilder>
			remindFace(remindFace:bool):Ref<RuleBuilder>
			openingTime(openingTime:Ref<OpeningTimeExternal>):Ref<RuleBuilder>
			isTemp(isTemp:bool):Ref<RuleBuilder>
			build():Ref<Rule>
	}
	export interface UpdateUserFaceReq extends Struct<UpdateUserFaceReq>{

			file:Ref<File>
	}
	export interface UpdateUserFaceReqBuilder extends Struct<UpdateUserFaceReqBuilder>{

			userId(userId:string):Ref<UpdateUserFaceReqBuilder>
			userIdType(userIdType:string):Ref<UpdateUserFaceReqBuilder>
			file(file:Ref<File>):Ref<UpdateUserFaceReqBuilder>
			build():Ref<UpdateUserFaceReq>
	}
	export interface UpdateUserFaceResp extends Struct<UpdateUserFaceResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface User extends Struct<User>{

			feature:Ref<Feature>
			userId:Ref<string>
	}
	export interface UserBuilder extends Struct<UserBuilder>{

			feature(feature:Ref<Feature>):Ref<UserBuilder>
			userId(userId:string):Ref<UserBuilder>
			build():Ref<User>
	}
	export interface UserExternal extends Struct<UserExternal>{

			userType:Ref<int>
			userId:Ref<string>
			userName:Ref<string>
			phoneNum:Ref<string>
			departmentId:Ref<string>
	}
	export interface UserExternalBuilder extends Struct<UserExternalBuilder>{

			userType(userType:int):Ref<UserExternalBuilder>
			userId(userId:string):Ref<UserExternalBuilder>
			userName(userName:string):Ref<UserExternalBuilder>
			phoneNum(phoneNum:string):Ref<UserExternalBuilder>
			departmentId(departmentId:string):Ref<UserExternalBuilder>
			build():Ref<UserExternal>
	}
	export interface UserId extends Struct<UserId>{

			userId:Ref<string>
			openId:Ref<string>
			unionId:Ref<string>
	}
	export interface UserIdBuilder extends Struct<UserIdBuilder>{

			userId(userId:string):Ref<UserIdBuilder>
			openId(openId:string):Ref<UserIdBuilder>
			unionId(unionId:string):Ref<UserIdBuilder>
			build():Ref<UserId>
	}
	//"open_id"
	export const UserIdTypeCreateRuleExternalOpenId:string
	//"union_id"
	export const UserIdTypeCreateRuleExternalUnionId:string
	//"user_id"
	export const UserIdTypeCreateRuleExternalUserId:string
	//"open_id"
	export const UserIdTypeCreateVisitorOpenId:string
	//"union_id"
	export const UserIdTypeCreateVisitorUnionId:string
	//"user_id"
	export const UserIdTypeCreateVisitorUserId:string
	//"open_id"
	export const UserIdTypeDeleteVisitorOpenId:string
	//"union_id"
	export const UserIdTypeDeleteVisitorUnionId:string
	//"user_id"
	export const UserIdTypeDeleteVisitorUserId:string
	//"open_id"
	export const UserIdTypeGetRuleExternalOpenId:string
	//"union_id"
	export const UserIdTypeGetRuleExternalUnionId:string
	//"user_id"
	export const UserIdTypeGetRuleExternalUserId:string
	//"open_id"
	export const UserIdTypeGetUserFaceOpenId:string
	//"union_id"
	export const UserIdTypeGetUserFaceUnionId:string
	//"user_id"
	export const UserIdTypeGetUserFaceUserId:string
	//"open_id"
	export const UserIdTypeGetUserOpenId:string
	//"union_id"
	export const UserIdTypeGetUserUnionId:string
	//"user_id"
	export const UserIdTypeGetUserUserId:string
	//"open_id"
	export const UserIdTypeListUserOpenId:string
	//"union_id"
	export const UserIdTypeListUserUnionId:string
	//"user_id"
	export const UserIdTypeListUserUserId:string
	//"open_id"
	export const UserIdTypeOpenId:string
	//"open_id"
	export const UserIdTypePatchUserOpenId:string
	//"union_id"
	export const UserIdTypePatchUserUnionId:string
	//"user_id"
	export const UserIdTypePatchUserUserId:string
	//"union_id"
	export const UserIdTypeUnionId:string
	//"open_id"
	export const UserIdTypeUpdateUserFaceOpenId:string
	//"union_id"
	export const UserIdTypeUpdateUserFaceUnionId:string
	//"user_id"
	export const UserIdTypeUpdateUserFaceUserId:string
	//"user_id"
	export const UserIdTypeUserId:string
	export interface V1 extends Struct<V1>{

			accessRecord:Ref<{
			
				list(ctx:context.Context,req:Ref<ListAccessRecordReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListAccessRecordResp>
				listByIterator(ctx:context.Context,req:Ref<ListAccessRecordReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListAccessRecordIterator>
			}>
			accessRecordAccessPhoto:Ref<{
			
				get(ctx:context.Context,req:Ref<GetAccessRecordAccessPhotoReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetAccessRecordAccessPhotoResp>
			}>
			device:Ref<{
			
				list(ctx:context.Context,...options:larkcore.RequestOptionFunc[]):Ref<ListDeviceResp>
			}>
			ruleExternal:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateRuleExternalReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateRuleExternalResp>
				delete(ctx:context.Context,req:Ref<DeleteRuleExternalReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteRuleExternalResp>
				deviceBind(ctx:context.Context,req:Ref<DeviceBindRuleExternalReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeviceBindRuleExternalResp>
				get(ctx:context.Context,req:Ref<GetRuleExternalReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetRuleExternalResp>
			}>
			user:Ref<{
			
				get(ctx:context.Context,req:Ref<GetUserReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetUserResp>
				list(ctx:context.Context,req:Ref<ListUserReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListUserResp>
				listByIterator(ctx:context.Context,req:Ref<ListUserReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListUserIterator>
				patch(ctx:context.Context,req:Ref<PatchUserReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchUserResp>
			}>
			userFace:Ref<{
			
				get(ctx:context.Context,req:Ref<GetUserFaceReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetUserFaceResp>
				update(ctx:context.Context,req:Ref<UpdateUserFaceReq>,...options:larkcore.RequestOptionFunc[]):Ref<UpdateUserFaceResp>
			}>
			visitor:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateVisitorReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateVisitorResp>
				delete(ctx:context.Context,req:Ref<DeleteVisitorReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteVisitorResp>
			}>
	}
	export function emptyCreateRuleExternalRespData():CreateRuleExternalRespData
	export function emptyRefCreateRuleExternalRespData():Ref<CreateRuleExternalRespData>
	export function refOfCreateRuleExternalRespData(x:CreateRuleExternalRespData,v:Ref<CreateRuleExternalRespData>)
	export function unRefCreateRuleExternalRespData(v:Ref<CreateRuleExternalRespData>):CreateRuleExternalRespData
	export function emptyCreateVisitorPathReqBodyBuilder():CreateVisitorPathReqBodyBuilder
	export function emptyRefCreateVisitorPathReqBodyBuilder():Ref<CreateVisitorPathReqBodyBuilder>
	export function refOfCreateVisitorPathReqBodyBuilder(x:CreateVisitorPathReqBodyBuilder,v:Ref<CreateVisitorPathReqBodyBuilder>)
	export function unRefCreateVisitorPathReqBodyBuilder(v:Ref<CreateVisitorPathReqBodyBuilder>):CreateVisitorPathReqBodyBuilder
	export function emptyDeviceExternalBuilder():DeviceExternalBuilder
	export function emptyRefDeviceExternalBuilder():Ref<DeviceExternalBuilder>
	export function refOfDeviceExternalBuilder(x:DeviceExternalBuilder,v:Ref<DeviceExternalBuilder>)
	export function unRefDeviceExternalBuilder(v:Ref<DeviceExternalBuilder>):DeviceExternalBuilder
	export function emptyGetRuleExternalReq():GetRuleExternalReq
	export function emptyRefGetRuleExternalReq():Ref<GetRuleExternalReq>
	export function refOfGetRuleExternalReq(x:GetRuleExternalReq,v:Ref<GetRuleExternalReq>)
	export function unRefGetRuleExternalReq(v:Ref<GetRuleExternalReq>):GetRuleExternalReq
	export function emptyListAccessRecordIterator():ListAccessRecordIterator
	export function emptyRefListAccessRecordIterator():Ref<ListAccessRecordIterator>
	export function refOfListAccessRecordIterator(x:ListAccessRecordIterator,v:Ref<ListAccessRecordIterator>)
	export function unRefListAccessRecordIterator(v:Ref<ListAccessRecordIterator>):ListAccessRecordIterator
	export function emptyP2UserUpdatedV1Data():P2UserUpdatedV1Data
	export function emptyRefP2UserUpdatedV1Data():Ref<P2UserUpdatedV1Data>
	export function refOfP2UserUpdatedV1Data(x:P2UserUpdatedV1Data,v:Ref<P2UserUpdatedV1Data>)
	export function unRefP2UserUpdatedV1Data(v:Ref<P2UserUpdatedV1Data>):P2UserUpdatedV1Data
	export function emptyUserExternal():UserExternal
	export function emptyRefUserExternal():Ref<UserExternal>
	export function refOfUserExternal(x:UserExternal,v:Ref<UserExternal>)
	export function unRefUserExternal(v:Ref<UserExternal>):UserExternal
	export function emptyUserId():UserId
	export function emptyRefUserId():Ref<UserId>
	export function refOfUserId(x:UserId,v:Ref<UserId>)
	export function unRefUserId(v:Ref<UserId>):UserId
	export function emptyCreateRuleExternalReq():CreateRuleExternalReq
	export function emptyRefCreateRuleExternalReq():Ref<CreateRuleExternalReq>
	export function refOfCreateRuleExternalReq(x:CreateRuleExternalReq,v:Ref<CreateRuleExternalReq>)
	export function unRefCreateRuleExternalReq(v:Ref<CreateRuleExternalReq>):CreateRuleExternalReq
	export function emptyDepartmentId():DepartmentId
	export function emptyRefDepartmentId():Ref<DepartmentId>
	export function refOfDepartmentId(x:DepartmentId,v:Ref<DepartmentId>)
	export function unRefDepartmentId(v:Ref<DepartmentId>):DepartmentId
	export function emptyListAccessRecordReqBuilder():ListAccessRecordReqBuilder
	export function emptyRefListAccessRecordReqBuilder():Ref<ListAccessRecordReqBuilder>
	export function refOfListAccessRecordReqBuilder(x:ListAccessRecordReqBuilder,v:Ref<ListAccessRecordReqBuilder>)
	export function unRefListAccessRecordReqBuilder(v:Ref<ListAccessRecordReqBuilder>):ListAccessRecordReqBuilder
	export function emptyCreateRuleExternalReqBodyBuilder():CreateRuleExternalReqBodyBuilder
	export function emptyRefCreateRuleExternalReqBodyBuilder():Ref<CreateRuleExternalReqBodyBuilder>
	export function refOfCreateRuleExternalReqBodyBuilder(x:CreateRuleExternalReqBodyBuilder,v:Ref<CreateRuleExternalReqBodyBuilder>)
	export function unRefCreateRuleExternalReqBodyBuilder(v:Ref<CreateRuleExternalReqBodyBuilder>):CreateRuleExternalReqBodyBuilder
	export function emptyDeleteVisitorReqBuilder():DeleteVisitorReqBuilder
	export function emptyRefDeleteVisitorReqBuilder():Ref<DeleteVisitorReqBuilder>
	export function refOfDeleteVisitorReqBuilder(x:DeleteVisitorReqBuilder,v:Ref<DeleteVisitorReqBuilder>)
	export function unRefDeleteVisitorReqBuilder(v:Ref<DeleteVisitorReqBuilder>):DeleteVisitorReqBuilder
	export function emptyGetRuleExternalResp():GetRuleExternalResp
	export function emptyRefGetRuleExternalResp():Ref<GetRuleExternalResp>
	export function refOfGetRuleExternalResp(x:GetRuleExternalResp,v:Ref<GetRuleExternalResp>)
	export function unRefGetRuleExternalResp(v:Ref<GetRuleExternalResp>):GetRuleExternalResp
	export function emptyOpeningTimeValidDayExternal():OpeningTimeValidDayExternal
	export function emptyRefOpeningTimeValidDayExternal():Ref<OpeningTimeValidDayExternal>
	export function refOfOpeningTimeValidDayExternal(x:OpeningTimeValidDayExternal,v:Ref<OpeningTimeValidDayExternal>)
	export function unRefOpeningTimeValidDayExternal(v:Ref<OpeningTimeValidDayExternal>):OpeningTimeValidDayExternal
	export function emptyOpeningTimeValidDayExternalBuilder():OpeningTimeValidDayExternalBuilder
	export function emptyRefOpeningTimeValidDayExternalBuilder():Ref<OpeningTimeValidDayExternalBuilder>
	export function refOfOpeningTimeValidDayExternalBuilder(x:OpeningTimeValidDayExternalBuilder,v:Ref<OpeningTimeValidDayExternalBuilder>)
	export function unRefOpeningTimeValidDayExternalBuilder(v:Ref<OpeningTimeValidDayExternalBuilder>):OpeningTimeValidDayExternalBuilder
	export function emptyUpdateUserFaceResp():UpdateUserFaceResp
	export function emptyRefUpdateUserFaceResp():Ref<UpdateUserFaceResp>
	export function refOfUpdateUserFaceResp(x:UpdateUserFaceResp,v:Ref<UpdateUserFaceResp>)
	export function unRefUpdateUserFaceResp(v:Ref<UpdateUserFaceResp>):UpdateUserFaceResp
	export function emptyCreateVisitorReq():CreateVisitorReq
	export function emptyRefCreateVisitorReq():Ref<CreateVisitorReq>
	export function refOfCreateVisitorReq(x:CreateVisitorReq,v:Ref<CreateVisitorReq>)
	export function unRefCreateVisitorReq(v:Ref<CreateVisitorReq>):CreateVisitorReq
	export function emptyDeviceBindRuleExternalReqBody():DeviceBindRuleExternalReqBody
	export function emptyRefDeviceBindRuleExternalReqBody():Ref<DeviceBindRuleExternalReqBody>
	export function refOfDeviceBindRuleExternalReqBody(x:DeviceBindRuleExternalReqBody,v:Ref<DeviceBindRuleExternalReqBody>)
	export function unRefDeviceBindRuleExternalReqBody(v:Ref<DeviceBindRuleExternalReqBody>):DeviceBindRuleExternalReqBody
	export function emptyDeviceBindRuleExternalReqBodyBuilder():DeviceBindRuleExternalReqBodyBuilder
	export function emptyRefDeviceBindRuleExternalReqBodyBuilder():Ref<DeviceBindRuleExternalReqBodyBuilder>
	export function refOfDeviceBindRuleExternalReqBodyBuilder(x:DeviceBindRuleExternalReqBodyBuilder,v:Ref<DeviceBindRuleExternalReqBodyBuilder>)
	export function unRefDeviceBindRuleExternalReqBodyBuilder(v:Ref<DeviceBindRuleExternalReqBodyBuilder>):DeviceBindRuleExternalReqBodyBuilder
	export function emptyListDeviceRespData():ListDeviceRespData
	export function emptyRefListDeviceRespData():Ref<ListDeviceRespData>
	export function refOfListDeviceRespData(x:ListDeviceRespData,v:Ref<ListDeviceRespData>)
	export function unRefListDeviceRespData(v:Ref<ListDeviceRespData>):ListDeviceRespData
	export function emptyUser():User
	export function emptyRefUser():Ref<User>
	export function refOfUser(x:User,v:Ref<User>)
	export function unRefUser(v:Ref<User>):User
	export function emptyCreateRuleExternalReqBody():CreateRuleExternalReqBody
	export function emptyRefCreateRuleExternalReqBody():Ref<CreateRuleExternalReqBody>
	export function refOfCreateRuleExternalReqBody(x:CreateRuleExternalReqBody,v:Ref<CreateRuleExternalReqBody>)
	export function unRefCreateRuleExternalReqBody(v:Ref<CreateRuleExternalReqBody>):CreateRuleExternalReqBody
	export function emptyFile():File
	export function emptyRefFile():Ref<File>
	export function refOfFile(x:File,v:Ref<File>)
	export function unRefFile(v:Ref<File>):File
	export function emptyGetUserFaceReq():GetUserFaceReq
	export function emptyRefGetUserFaceReq():Ref<GetUserFaceReq>
	export function refOfGetUserFaceReq(x:GetUserFaceReq,v:Ref<GetUserFaceReq>)
	export function unRefGetUserFaceReq(v:Ref<GetUserFaceReq>):GetUserFaceReq
	export function emptyOpeningTimePeriodExternal():OpeningTimePeriodExternal
	export function emptyRefOpeningTimePeriodExternal():Ref<OpeningTimePeriodExternal>
	export function refOfOpeningTimePeriodExternal(x:OpeningTimePeriodExternal,v:Ref<OpeningTimePeriodExternal>)
	export function unRefOpeningTimePeriodExternal(v:Ref<OpeningTimePeriodExternal>):OpeningTimePeriodExternal
	export function emptyP2AccessRecordCreatedV1Data():P2AccessRecordCreatedV1Data
	export function emptyRefP2AccessRecordCreatedV1Data():Ref<P2AccessRecordCreatedV1Data>
	export function refOfP2AccessRecordCreatedV1Data(x:P2AccessRecordCreatedV1Data,v:Ref<P2AccessRecordCreatedV1Data>)
	export function unRefP2AccessRecordCreatedV1Data(v:Ref<P2AccessRecordCreatedV1Data>):P2AccessRecordCreatedV1Data
	export function emptyUpdateUserFaceReq():UpdateUserFaceReq
	export function emptyRefUpdateUserFaceReq():Ref<UpdateUserFaceReq>
	export function refOfUpdateUserFaceReq(x:UpdateUserFaceReq,v:Ref<UpdateUserFaceReq>)
	export function unRefUpdateUserFaceReq(v:Ref<UpdateUserFaceReq>):UpdateUserFaceReq
	export function emptyUserBuilder():UserBuilder
	export function emptyRefUserBuilder():Ref<UserBuilder>
	export function refOfUserBuilder(x:UserBuilder,v:Ref<UserBuilder>)
	export function unRefUserBuilder(v:Ref<UserBuilder>):UserBuilder
	export function emptyCreateRuleExternalResp():CreateRuleExternalResp
	export function emptyRefCreateRuleExternalResp():Ref<CreateRuleExternalResp>
	export function refOfCreateRuleExternalResp(x:CreateRuleExternalResp,v:Ref<CreateRuleExternalResp>)
	export function unRefCreateRuleExternalResp(v:Ref<CreateRuleExternalResp>):CreateRuleExternalResp
	export function emptyDeleteRuleExternalResp():DeleteRuleExternalResp
	export function emptyRefDeleteRuleExternalResp():Ref<DeleteRuleExternalResp>
	export function refOfDeleteRuleExternalResp(x:DeleteRuleExternalResp,v:Ref<DeleteRuleExternalResp>)
	export function unRefDeleteRuleExternalResp(v:Ref<DeleteRuleExternalResp>):DeleteRuleExternalResp
	export function emptyDeleteVisitorResp():DeleteVisitorResp
	export function emptyRefDeleteVisitorResp():Ref<DeleteVisitorResp>
	export function refOfDeleteVisitorResp(x:DeleteVisitorResp,v:Ref<DeleteVisitorResp>)
	export function unRefDeleteVisitorResp(v:Ref<DeleteVisitorResp>):DeleteVisitorResp
	export function emptyListUserRespData():ListUserRespData
	export function emptyRefListUserRespData():Ref<ListUserRespData>
	export function refOfListUserRespData(x:ListUserRespData,v:Ref<ListUserRespData>)
	export function unRefListUserRespData(v:Ref<ListUserRespData>):ListUserRespData
	export function emptyP2AccessRecordCreatedV1():P2AccessRecordCreatedV1
	export function emptyRefP2AccessRecordCreatedV1():Ref<P2AccessRecordCreatedV1>
	export function refOfP2AccessRecordCreatedV1(x:P2AccessRecordCreatedV1,v:Ref<P2AccessRecordCreatedV1>)
	export function unRefP2AccessRecordCreatedV1(v:Ref<P2AccessRecordCreatedV1>):P2AccessRecordCreatedV1
	export function emptyP2UserUpdatedV1Handler():P2UserUpdatedV1Handler
	export function emptyRefP2UserUpdatedV1Handler():Ref<P2UserUpdatedV1Handler>
	export function refOfP2UserUpdatedV1Handler(x:P2UserUpdatedV1Handler,v:Ref<P2UserUpdatedV1Handler>)
	export function unRefP2UserUpdatedV1Handler(v:Ref<P2UserUpdatedV1Handler>):P2UserUpdatedV1Handler
	export function emptyPatchUserResp():PatchUserResp
	export function emptyRefPatchUserResp():Ref<PatchUserResp>
	export function refOfPatchUserResp(x:PatchUserResp,v:Ref<PatchUserResp>)
	export function unRefPatchUserResp(v:Ref<PatchUserResp>):PatchUserResp
	export function emptyUpdateUserFaceReqBuilder():UpdateUserFaceReqBuilder
	export function emptyRefUpdateUserFaceReqBuilder():Ref<UpdateUserFaceReqBuilder>
	export function refOfUpdateUserFaceReqBuilder(x:UpdateUserFaceReqBuilder,v:Ref<UpdateUserFaceReqBuilder>)
	export function unRefUpdateUserFaceReqBuilder(v:Ref<UpdateUserFaceReqBuilder>):UpdateUserFaceReqBuilder
	export function emptyCreateRuleExternalPathReqBodyBuilder():CreateRuleExternalPathReqBodyBuilder
	export function emptyRefCreateRuleExternalPathReqBodyBuilder():Ref<CreateRuleExternalPathReqBodyBuilder>
	export function refOfCreateRuleExternalPathReqBodyBuilder(x:CreateRuleExternalPathReqBodyBuilder,v:Ref<CreateRuleExternalPathReqBodyBuilder>)
	export function unRefCreateRuleExternalPathReqBodyBuilder(v:Ref<CreateRuleExternalPathReqBodyBuilder>):CreateRuleExternalPathReqBodyBuilder
	export function emptyDeleteRuleExternalReqBuilder():DeleteRuleExternalReqBuilder
	export function emptyRefDeleteRuleExternalReqBuilder():Ref<DeleteRuleExternalReqBuilder>
	export function refOfDeleteRuleExternalReqBuilder(x:DeleteRuleExternalReqBuilder,v:Ref<DeleteRuleExternalReqBuilder>)
	export function unRefDeleteRuleExternalReqBuilder(v:Ref<DeleteRuleExternalReqBuilder>):DeleteRuleExternalReqBuilder
	export function emptyDevice():Device
	export function emptyRefDevice():Ref<Device>
	export function refOfDevice(x:Device,v:Ref<Device>)
	export function unRefDevice(v:Ref<Device>):Device
	export function emptyDeviceBindRuleExternalReq():DeviceBindRuleExternalReq
	export function emptyRefDeviceBindRuleExternalReq():Ref<DeviceBindRuleExternalReq>
	export function refOfDeviceBindRuleExternalReq(x:DeviceBindRuleExternalReq,v:Ref<DeviceBindRuleExternalReq>)
	export function unRefDeviceBindRuleExternalReq(v:Ref<DeviceBindRuleExternalReq>):DeviceBindRuleExternalReq
	export function emptyDeviceBindRuleExternalReqBuilder():DeviceBindRuleExternalReqBuilder
	export function emptyRefDeviceBindRuleExternalReqBuilder():Ref<DeviceBindRuleExternalReqBuilder>
	export function refOfDeviceBindRuleExternalReqBuilder(x:DeviceBindRuleExternalReqBuilder,v:Ref<DeviceBindRuleExternalReqBuilder>)
	export function unRefDeviceBindRuleExternalReqBuilder(v:Ref<DeviceBindRuleExternalReqBuilder>):DeviceBindRuleExternalReqBuilder
	export function emptyGetUserReqBuilder():GetUserReqBuilder
	export function emptyRefGetUserReqBuilder():Ref<GetUserReqBuilder>
	export function refOfGetUserReqBuilder(x:GetUserReqBuilder,v:Ref<GetUserReqBuilder>)
	export function unRefGetUserReqBuilder(v:Ref<GetUserReqBuilder>):GetUserReqBuilder
	export function emptyPatchUserReq():PatchUserReq
	export function emptyRefPatchUserReq():Ref<PatchUserReq>
	export function refOfPatchUserReq(x:PatchUserReq,v:Ref<PatchUserReq>)
	export function unRefPatchUserReq(v:Ref<PatchUserReq>):PatchUserReq
	export function emptyRuleBuilder():RuleBuilder
	export function emptyRefRuleBuilder():Ref<RuleBuilder>
	export function refOfRuleBuilder(x:RuleBuilder,v:Ref<RuleBuilder>)
	export function unRefRuleBuilder(v:Ref<RuleBuilder>):RuleBuilder
	export function emptyFeature():Feature
	export function emptyRefFeature():Ref<Feature>
	export function refOfFeature(x:Feature,v:Ref<Feature>)
	export function unRefFeature(v:Ref<Feature>):Feature
	export function emptyGetRuleExternalRespData():GetRuleExternalRespData
	export function emptyRefGetRuleExternalRespData():Ref<GetRuleExternalRespData>
	export function refOfGetRuleExternalRespData(x:GetRuleExternalRespData,v:Ref<GetRuleExternalRespData>)
	export function unRefGetRuleExternalRespData(v:Ref<GetRuleExternalRespData>):GetRuleExternalRespData
	export function emptyCreateVisitorReqBodyBuilder():CreateVisitorReqBodyBuilder
	export function emptyRefCreateVisitorReqBodyBuilder():Ref<CreateVisitorReqBodyBuilder>
	export function refOfCreateVisitorReqBodyBuilder(x:CreateVisitorReqBodyBuilder,v:Ref<CreateVisitorReqBodyBuilder>)
	export function unRefCreateVisitorReqBodyBuilder(v:Ref<CreateVisitorReqBodyBuilder>):CreateVisitorReqBodyBuilder
	export function emptyCreateVisitorReqBuilder():CreateVisitorReqBuilder
	export function emptyRefCreateVisitorReqBuilder():Ref<CreateVisitorReqBuilder>
	export function refOfCreateVisitorReqBuilder(x:CreateVisitorReqBuilder,v:Ref<CreateVisitorReqBuilder>)
	export function unRefCreateVisitorReqBuilder(v:Ref<CreateVisitorReqBuilder>):CreateVisitorReqBuilder
	export function emptyGetUserResp():GetUserResp
	export function emptyRefGetUserResp():Ref<GetUserResp>
	export function refOfGetUserResp(x:GetUserResp,v:Ref<GetUserResp>)
	export function unRefGetUserResp(v:Ref<GetUserResp>):GetUserResp
	export function emptyListUserIterator():ListUserIterator
	export function emptyRefListUserIterator():Ref<ListUserIterator>
	export function refOfListUserIterator(x:ListUserIterator,v:Ref<ListUserIterator>)
	export function unRefListUserIterator(v:Ref<ListUserIterator>):ListUserIterator
	export function emptyOpeningTimePeriodExternalBuilder():OpeningTimePeriodExternalBuilder
	export function emptyRefOpeningTimePeriodExternalBuilder():Ref<OpeningTimePeriodExternalBuilder>
	export function refOfOpeningTimePeriodExternalBuilder(x:OpeningTimePeriodExternalBuilder,v:Ref<OpeningTimePeriodExternalBuilder>)
	export function unRefOpeningTimePeriodExternalBuilder(v:Ref<OpeningTimePeriodExternalBuilder>):OpeningTimePeriodExternalBuilder
	export function emptyDeleteVisitorReq():DeleteVisitorReq
	export function emptyRefDeleteVisitorReq():Ref<DeleteVisitorReq>
	export function refOfDeleteVisitorReq(x:DeleteVisitorReq,v:Ref<DeleteVisitorReq>)
	export function unRefDeleteVisitorReq(v:Ref<DeleteVisitorReq>):DeleteVisitorReq
	export function emptyDeviceBindRuleExternalPathReqBodyBuilder():DeviceBindRuleExternalPathReqBodyBuilder
	export function emptyRefDeviceBindRuleExternalPathReqBodyBuilder():Ref<DeviceBindRuleExternalPathReqBodyBuilder>
	export function refOfDeviceBindRuleExternalPathReqBodyBuilder(x:DeviceBindRuleExternalPathReqBodyBuilder,v:Ref<DeviceBindRuleExternalPathReqBodyBuilder>)
	export function unRefDeviceBindRuleExternalPathReqBodyBuilder(v:Ref<DeviceBindRuleExternalPathReqBodyBuilder>):DeviceBindRuleExternalPathReqBodyBuilder
	export function emptyFeatureBuilder():FeatureBuilder
	export function emptyRefFeatureBuilder():Ref<FeatureBuilder>
	export function refOfFeatureBuilder(x:FeatureBuilder,v:Ref<FeatureBuilder>)
	export function unRefFeatureBuilder(v:Ref<FeatureBuilder>):FeatureBuilder
	export function emptyGetAccessRecordAccessPhotoReqBuilder():GetAccessRecordAccessPhotoReqBuilder
	export function emptyRefGetAccessRecordAccessPhotoReqBuilder():Ref<GetAccessRecordAccessPhotoReqBuilder>
	export function refOfGetAccessRecordAccessPhotoReqBuilder(x:GetAccessRecordAccessPhotoReqBuilder,v:Ref<GetAccessRecordAccessPhotoReqBuilder>)
	export function unRefGetAccessRecordAccessPhotoReqBuilder(v:Ref<GetAccessRecordAccessPhotoReqBuilder>):GetAccessRecordAccessPhotoReqBuilder
	export function emptyListAccessRecordRespData():ListAccessRecordRespData
	export function emptyRefListAccessRecordRespData():Ref<ListAccessRecordRespData>
	export function refOfListAccessRecordRespData(x:ListAccessRecordRespData,v:Ref<ListAccessRecordRespData>)
	export function unRefListAccessRecordRespData(v:Ref<ListAccessRecordRespData>):ListAccessRecordRespData
	export function emptyListUserReqBuilder():ListUserReqBuilder
	export function emptyRefListUserReqBuilder():Ref<ListUserReqBuilder>
	export function refOfListUserReqBuilder(x:ListUserReqBuilder,v:Ref<ListUserReqBuilder>)
	export function unRefListUserReqBuilder(v:Ref<ListUserReqBuilder>):ListUserReqBuilder
	export function emptyP2AccessRecordCreatedV1Handler():P2AccessRecordCreatedV1Handler
	export function emptyRefP2AccessRecordCreatedV1Handler():Ref<P2AccessRecordCreatedV1Handler>
	export function refOfP2AccessRecordCreatedV1Handler(x:P2AccessRecordCreatedV1Handler,v:Ref<P2AccessRecordCreatedV1Handler>)
	export function unRefP2AccessRecordCreatedV1Handler(v:Ref<P2AccessRecordCreatedV1Handler>):P2AccessRecordCreatedV1Handler
	export function emptyP2UserUpdatedV1():P2UserUpdatedV1
	export function emptyRefP2UserUpdatedV1():Ref<P2UserUpdatedV1>
	export function refOfP2UserUpdatedV1(x:P2UserUpdatedV1,v:Ref<P2UserUpdatedV1>)
	export function unRefP2UserUpdatedV1(v:Ref<P2UserUpdatedV1>):P2UserUpdatedV1
	export function emptyProperty():Property
	export function emptyRefProperty():Ref<Property>
	export function refOfProperty(x:Property,v:Ref<Property>)
	export function unRefProperty(v:Ref<Property>):Property
	export function emptyV1():V1
	export function emptyRefV1():Ref<V1>
	export function refOfV1(x:V1,v:Ref<V1>)
	export function unRefV1(v:Ref<V1>):V1
	export function emptyCreateVisitorResp():CreateVisitorResp
	export function emptyRefCreateVisitorResp():Ref<CreateVisitorResp>
	export function refOfCreateVisitorResp(x:CreateVisitorResp,v:Ref<CreateVisitorResp>)
	export function unRefCreateVisitorResp(v:Ref<CreateVisitorResp>):CreateVisitorResp
	export function emptyDeviceBindRuleExternalResp():DeviceBindRuleExternalResp
	export function emptyRefDeviceBindRuleExternalResp():Ref<DeviceBindRuleExternalResp>
	export function refOfDeviceBindRuleExternalResp(x:DeviceBindRuleExternalResp,v:Ref<DeviceBindRuleExternalResp>)
	export function unRefDeviceBindRuleExternalResp(v:Ref<DeviceBindRuleExternalResp>):DeviceBindRuleExternalResp
	export function emptyGetUserFaceReqBuilder():GetUserFaceReqBuilder
	export function emptyRefGetUserFaceReqBuilder():Ref<GetUserFaceReqBuilder>
	export function refOfGetUserFaceReqBuilder(x:GetUserFaceReqBuilder,v:Ref<GetUserFaceReqBuilder>)
	export function unRefGetUserFaceReqBuilder(v:Ref<GetUserFaceReqBuilder>):GetUserFaceReqBuilder
	export function emptyGetUserRespData():GetUserRespData
	export function emptyRefGetUserRespData():Ref<GetUserRespData>
	export function refOfGetUserRespData(x:GetUserRespData,v:Ref<GetUserRespData>)
	export function unRefGetUserRespData(v:Ref<GetUserRespData>):GetUserRespData
	export function emptyListDeviceResp():ListDeviceResp
	export function emptyRefListDeviceResp():Ref<ListDeviceResp>
	export function refOfListDeviceResp(x:ListDeviceResp,v:Ref<ListDeviceResp>)
	export function unRefListDeviceResp(v:Ref<ListDeviceResp>):ListDeviceResp
	export function emptyListUserReq():ListUserReq
	export function emptyRefListUserReq():Ref<ListUserReq>
	export function refOfListUserReq(x:ListUserReq,v:Ref<ListUserReq>)
	export function unRefListUserReq(v:Ref<ListUserReq>):ListUserReq
	export function emptyOpeningTimeExternalBuilder():OpeningTimeExternalBuilder
	export function emptyRefOpeningTimeExternalBuilder():Ref<OpeningTimeExternalBuilder>
	export function refOfOpeningTimeExternalBuilder(x:OpeningTimeExternalBuilder,v:Ref<OpeningTimeExternalBuilder>)
	export function unRefOpeningTimeExternalBuilder(v:Ref<OpeningTimeExternalBuilder>):OpeningTimeExternalBuilder
	export function emptyPropertyBuilder():PropertyBuilder
	export function emptyRefPropertyBuilder():Ref<PropertyBuilder>
	export function refOfPropertyBuilder(x:PropertyBuilder,v:Ref<PropertyBuilder>)
	export function unRefPropertyBuilder(v:Ref<PropertyBuilder>):PropertyBuilder
	export function emptyRule():Rule
	export function emptyRefRule():Ref<Rule>
	export function refOfRule(x:Rule,v:Ref<Rule>)
	export function unRefRule(v:Ref<Rule>):Rule
	export function emptyAccessRecord():AccessRecord
	export function emptyRefAccessRecord():Ref<AccessRecord>
	export function refOfAccessRecord(x:AccessRecord,v:Ref<AccessRecord>)
	export function unRefAccessRecord(v:Ref<AccessRecord>):AccessRecord
	export function emptyDepartmentIdBuilder():DepartmentIdBuilder
	export function emptyRefDepartmentIdBuilder():Ref<DepartmentIdBuilder>
	export function refOfDepartmentIdBuilder(x:DepartmentIdBuilder,v:Ref<DepartmentIdBuilder>)
	export function unRefDepartmentIdBuilder(v:Ref<DepartmentIdBuilder>):DepartmentIdBuilder
	export function emptyGetUserFaceResp():GetUserFaceResp
	export function emptyRefGetUserFaceResp():Ref<GetUserFaceResp>
	export function refOfGetUserFaceResp(x:GetUserFaceResp,v:Ref<GetUserFaceResp>)
	export function unRefGetUserFaceResp(v:Ref<GetUserFaceResp>):GetUserFaceResp
	export function emptyListAccessRecordReq():ListAccessRecordReq
	export function emptyRefListAccessRecordReq():Ref<ListAccessRecordReq>
	export function refOfListAccessRecordReq(x:ListAccessRecordReq,v:Ref<ListAccessRecordReq>)
	export function unRefListAccessRecordReq(v:Ref<ListAccessRecordReq>):ListAccessRecordReq
	export function emptyOpeningTimeExternal():OpeningTimeExternal
	export function emptyRefOpeningTimeExternal():Ref<OpeningTimeExternal>
	export function refOfOpeningTimeExternal(x:OpeningTimeExternal,v:Ref<OpeningTimeExternal>)
	export function unRefOpeningTimeExternal(v:Ref<OpeningTimeExternal>):OpeningTimeExternal
	export function emptyAccessRecordBuilder():AccessRecordBuilder
	export function emptyRefAccessRecordBuilder():Ref<AccessRecordBuilder>
	export function refOfAccessRecordBuilder(x:AccessRecordBuilder,v:Ref<AccessRecordBuilder>)
	export function unRefAccessRecordBuilder(v:Ref<AccessRecordBuilder>):AccessRecordBuilder
	export function emptyDeviceBuilder():DeviceBuilder
	export function emptyRefDeviceBuilder():Ref<DeviceBuilder>
	export function refOfDeviceBuilder(x:DeviceBuilder,v:Ref<DeviceBuilder>)
	export function unRefDeviceBuilder(v:Ref<DeviceBuilder>):DeviceBuilder
	export function emptyGetAccessRecordAccessPhotoResp():GetAccessRecordAccessPhotoResp
	export function emptyRefGetAccessRecordAccessPhotoResp():Ref<GetAccessRecordAccessPhotoResp>
	export function refOfGetAccessRecordAccessPhotoResp(x:GetAccessRecordAccessPhotoResp,v:Ref<GetAccessRecordAccessPhotoResp>)
	export function unRefGetAccessRecordAccessPhotoResp(v:Ref<GetAccessRecordAccessPhotoResp>):GetAccessRecordAccessPhotoResp
	export function emptyGetRuleExternalReqBuilder():GetRuleExternalReqBuilder
	export function emptyRefGetRuleExternalReqBuilder():Ref<GetRuleExternalReqBuilder>
	export function refOfGetRuleExternalReqBuilder(x:GetRuleExternalReqBuilder,v:Ref<GetRuleExternalReqBuilder>)
	export function unRefGetRuleExternalReqBuilder(v:Ref<GetRuleExternalReqBuilder>):GetRuleExternalReqBuilder
	export function emptyGetUserReq():GetUserReq
	export function emptyRefGetUserReq():Ref<GetUserReq>
	export function refOfGetUserReq(x:GetUserReq,v:Ref<GetUserReq>)
	export function unRefGetUserReq(v:Ref<GetUserReq>):GetUserReq
	export function emptyListAccessRecordResp():ListAccessRecordResp
	export function emptyRefListAccessRecordResp():Ref<ListAccessRecordResp>
	export function refOfListAccessRecordResp(x:ListAccessRecordResp,v:Ref<ListAccessRecordResp>)
	export function unRefListAccessRecordResp(v:Ref<ListAccessRecordResp>):ListAccessRecordResp
	export function emptyPatchUserReqBuilder():PatchUserReqBuilder
	export function emptyRefPatchUserReqBuilder():Ref<PatchUserReqBuilder>
	export function refOfPatchUserReqBuilder(x:PatchUserReqBuilder,v:Ref<PatchUserReqBuilder>)
	export function unRefPatchUserReqBuilder(v:Ref<PatchUserReqBuilder>):PatchUserReqBuilder
	export function emptyCreateVisitorReqBody():CreateVisitorReqBody
	export function emptyRefCreateVisitorReqBody():Ref<CreateVisitorReqBody>
	export function refOfCreateVisitorReqBody(x:CreateVisitorReqBody,v:Ref<CreateVisitorReqBody>)
	export function unRefCreateVisitorReqBody(v:Ref<CreateVisitorReqBody>):CreateVisitorReqBody
	export function emptyDeviceExternal():DeviceExternal
	export function emptyRefDeviceExternal():Ref<DeviceExternal>
	export function refOfDeviceExternal(x:DeviceExternal,v:Ref<DeviceExternal>)
	export function unRefDeviceExternal(v:Ref<DeviceExternal>):DeviceExternal
	export function emptyFileBuilder():FileBuilder
	export function emptyRefFileBuilder():Ref<FileBuilder>
	export function refOfFileBuilder(x:FileBuilder,v:Ref<FileBuilder>)
	export function unRefFileBuilder(v:Ref<FileBuilder>):FileBuilder
	export function emptyGetAccessRecordAccessPhotoReq():GetAccessRecordAccessPhotoReq
	export function emptyRefGetAccessRecordAccessPhotoReq():Ref<GetAccessRecordAccessPhotoReq>
	export function refOfGetAccessRecordAccessPhotoReq(x:GetAccessRecordAccessPhotoReq,v:Ref<GetAccessRecordAccessPhotoReq>)
	export function unRefGetAccessRecordAccessPhotoReq(v:Ref<GetAccessRecordAccessPhotoReq>):GetAccessRecordAccessPhotoReq
	export function emptyListUserResp():ListUserResp
	export function emptyRefListUserResp():Ref<ListUserResp>
	export function refOfListUserResp(x:ListUserResp,v:Ref<ListUserResp>)
	export function unRefListUserResp(v:Ref<ListUserResp>):ListUserResp
	export function emptyCreateRuleExternalReqBuilder():CreateRuleExternalReqBuilder
	export function emptyRefCreateRuleExternalReqBuilder():Ref<CreateRuleExternalReqBuilder>
	export function refOfCreateRuleExternalReqBuilder(x:CreateRuleExternalReqBuilder,v:Ref<CreateRuleExternalReqBuilder>)
	export function unRefCreateRuleExternalReqBuilder(v:Ref<CreateRuleExternalReqBuilder>):CreateRuleExternalReqBuilder
	export function emptyCreateVisitorRespData():CreateVisitorRespData
	export function emptyRefCreateVisitorRespData():Ref<CreateVisitorRespData>
	export function refOfCreateVisitorRespData(x:CreateVisitorRespData,v:Ref<CreateVisitorRespData>)
	export function unRefCreateVisitorRespData(v:Ref<CreateVisitorRespData>):CreateVisitorRespData
	export function emptyDeleteRuleExternalReq():DeleteRuleExternalReq
	export function emptyRefDeleteRuleExternalReq():Ref<DeleteRuleExternalReq>
	export function refOfDeleteRuleExternalReq(x:DeleteRuleExternalReq,v:Ref<DeleteRuleExternalReq>)
	export function unRefDeleteRuleExternalReq(v:Ref<DeleteRuleExternalReq>):DeleteRuleExternalReq
	export function emptyUserExternalBuilder():UserExternalBuilder
	export function emptyRefUserExternalBuilder():Ref<UserExternalBuilder>
	export function refOfUserExternalBuilder(x:UserExternalBuilder,v:Ref<UserExternalBuilder>)
	export function unRefUserExternalBuilder(v:Ref<UserExternalBuilder>):UserExternalBuilder
	export function emptyUserIdBuilder():UserIdBuilder
	export function emptyRefUserIdBuilder():Ref<UserIdBuilder>
	export function refOfUserIdBuilder(x:UserIdBuilder,v:Ref<UserIdBuilder>)
	export function unRefUserIdBuilder(v:Ref<UserIdBuilder>):UserIdBuilder
}