// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'github.com/larksuite/oapi-sdk-go/v3/service/corehr/v2'{

	// @ts-ignore
	import * as larkcore from 'github.com/larksuite/oapi-sdk-go/v3/core'
	// @ts-ignore
	import * as context from 'golang/context'
	// @ts-ignore
	import * as larkevent from 'github.com/larksuite/oapi-sdk-go/v3/event'
	// @ts-ignore
	import type {Nothing,Ref,int,Struct,bool,float64,error,Alias} from 'go'
	export interface AbnormalReason extends Struct<AbnormalReason>{

			id:Ref<string>
			type:Ref<int>
			i18nElements:Ref<AbnormalReasonI18nElement>[]
	}
	export interface AbnormalReasonBuilder extends Struct<AbnormalReasonBuilder>{

			id(id:string):Ref<AbnormalReasonBuilder>
			type(type_:int):Ref<AbnormalReasonBuilder>
			i18nElements(i18nElements:Ref<AbnormalReasonI18nElement>[]):Ref<AbnormalReasonBuilder>
			build():Ref<AbnormalReason>
	}
	export interface AbnormalReasonElement extends Struct<AbnormalReasonElement>{

			tag:Ref<string>
			text:Ref<string>
			href:Ref<string>
	}
	export interface AbnormalReasonElementBuilder extends Struct<AbnormalReasonElementBuilder>{

			tag(tag:string):Ref<AbnormalReasonElementBuilder>
			text(text:string):Ref<AbnormalReasonElementBuilder>
			href(href:string):Ref<AbnormalReasonElementBuilder>
			build():Ref<AbnormalReasonElement>
	}
	export interface AbnormalReasonI18nElement extends Struct<AbnormalReasonI18nElement>{

			lang:Ref<string>
			elements:Ref<AbnormalReasonElement>[]
	}
	export interface AbnormalReasonI18nElementBuilder extends Struct<AbnormalReasonI18nElementBuilder>{

			lang(lang:string):Ref<AbnormalReasonI18nElementBuilder>
			elements(elements:Ref<AbnormalReasonElement>[]):Ref<AbnormalReasonI18nElementBuilder>
			build():Ref<AbnormalReasonI18nElement>
	}
	export interface Address extends Struct<Address>{

			fullAddressLocalScript:Ref<string>
			fullAddressWesternScript:Ref<string>
			addressId:Ref<string>
			countryRegionId:Ref<string>
			regionId:Ref<string>
			cityIdV2:Ref<string>
			districtIdV2:Ref<string>
			localAddressLine1:Ref<string>
			localAddressLine2:Ref<string>
			localAddressLine3:Ref<string>
			localAddressLine4:Ref<string>
			localAddressLine5:Ref<string>
			localAddressLine6:Ref<string>
			localAddressLine7:Ref<string>
			localAddressLine8:Ref<string>
			localAddressLine9:Ref<string>
			postalCode:Ref<string>
			addressTypeList:Ref<Enum>[]
			isPrimary:Ref<bool>
			isPublic:Ref<bool>
			customFields:Ref<CustomFieldData>[]
	}
	export interface AddressBuilder extends Struct<AddressBuilder>{

			fullAddressLocalScript(fullAddressLocalScript:string):Ref<AddressBuilder>
			fullAddressWesternScript(fullAddressWesternScript:string):Ref<AddressBuilder>
			addressId(addressId:string):Ref<AddressBuilder>
			countryRegionId(countryRegionId:string):Ref<AddressBuilder>
			regionId(regionId:string):Ref<AddressBuilder>
			cityIdV2(cityIdV2:string):Ref<AddressBuilder>
			districtIdV2(districtIdV2:string):Ref<AddressBuilder>
			localAddressLine1(localAddressLine1:string):Ref<AddressBuilder>
			localAddressLine2(localAddressLine2:string):Ref<AddressBuilder>
			localAddressLine3(localAddressLine3:string):Ref<AddressBuilder>
			localAddressLine4(localAddressLine4:string):Ref<AddressBuilder>
			localAddressLine5(localAddressLine5:string):Ref<AddressBuilder>
			localAddressLine6(localAddressLine6:string):Ref<AddressBuilder>
			localAddressLine7(localAddressLine7:string):Ref<AddressBuilder>
			localAddressLine8(localAddressLine8:string):Ref<AddressBuilder>
			localAddressLine9(localAddressLine9:string):Ref<AddressBuilder>
			postalCode(postalCode:string):Ref<AddressBuilder>
			addressTypeList(addressTypeList:Ref<Enum>[]):Ref<AddressBuilder>
			isPrimary(isPrimary:bool):Ref<AddressBuilder>
			isPublic(isPublic:bool):Ref<AddressBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<AddressBuilder>
			build():Ref<Address>
	}
	export interface ApprovalGroup extends Struct<ApprovalGroup>{

			approvalGroupId:Ref<string>
			processId:Ref<string>
			approvalGroupStatus:Ref<string>
			topic:Ref<string>
			adjustReason:Ref<string>
			effectiveDate:Ref<string>
			createdBy:Ref<string>
			draftId:Ref<string>
			draftStatus:Ref<string>
			departmentChanges:string[]
			jobChanges:string[]
	}
	export interface ApprovalGroupBuilder extends Struct<ApprovalGroupBuilder>{

			approvalGroupId(approvalGroupId:string):Ref<ApprovalGroupBuilder>
			processId(processId:string):Ref<ApprovalGroupBuilder>
			approvalGroupStatus(approvalGroupStatus:string):Ref<ApprovalGroupBuilder>
			topic(topic:string):Ref<ApprovalGroupBuilder>
			adjustReason(adjustReason:string):Ref<ApprovalGroupBuilder>
			effectiveDate(effectiveDate:string):Ref<ApprovalGroupBuilder>
			createdBy(createdBy:string):Ref<ApprovalGroupBuilder>
			draftId(draftId:string):Ref<ApprovalGroupBuilder>
			draftStatus(draftStatus:string):Ref<ApprovalGroupBuilder>
			departmentChanges(departmentChanges:string[]):Ref<ApprovalGroupBuilder>
			jobChanges(jobChanges:string[]):Ref<ApprovalGroupBuilder>
			build():Ref<ApprovalGroup>
	}
	export interface Assessment extends Struct<Assessment>{

			assessmentId:Ref<string>
			assessmentStatus:Ref<Enum>
			assessmentResult:Ref<Enum>
			assessmentScore:Ref<float64>
			assessmentGrade:Ref<Enum>
			assessmentComment:Ref<string>
			assessmentDetail:Ref<string>
			isFinalAsssessment:Ref<bool>
	}
	export interface AssessmentBuilder extends Struct<AssessmentBuilder>{

			assessmentId(assessmentId:string):Ref<AssessmentBuilder>
			assessmentStatus(assessmentStatus:Ref<Enum>):Ref<AssessmentBuilder>
			assessmentResult(assessmentResult:Ref<Enum>):Ref<AssessmentBuilder>
			assessmentScore(assessmentScore:float64):Ref<AssessmentBuilder>
			assessmentGrade(assessmentGrade:Ref<Enum>):Ref<AssessmentBuilder>
			assessmentComment(assessmentComment:string):Ref<AssessmentBuilder>
			assessmentDetail(assessmentDetail:string):Ref<AssessmentBuilder>
			isFinalAsssessment(isFinalAsssessment:bool):Ref<AssessmentBuilder>
			build():Ref<Assessment>
	}
	export interface AssessmentForCreate extends Struct<AssessmentForCreate>{

			assessmentStatus:Ref<string>
			assessmentResult:Ref<string>
			assessmentScore:Ref<float64>
			assessmentGrade:Ref<string>
			assessmentComment:Ref<string>
			assessmentDetail:Ref<string>
			isFinalAsssessment:Ref<bool>
	}
	export interface AssessmentForCreateBuilder extends Struct<AssessmentForCreateBuilder>{

			assessmentStatus(assessmentStatus:string):Ref<AssessmentForCreateBuilder>
			assessmentResult(assessmentResult:string):Ref<AssessmentForCreateBuilder>
			assessmentScore(assessmentScore:float64):Ref<AssessmentForCreateBuilder>
			assessmentGrade(assessmentGrade:string):Ref<AssessmentForCreateBuilder>
			assessmentComment(assessmentComment:string):Ref<AssessmentForCreateBuilder>
			assessmentDetail(assessmentDetail:string):Ref<AssessmentForCreateBuilder>
			isFinalAsssessment(isFinalAsssessment:bool):Ref<AssessmentForCreateBuilder>
			build():Ref<AssessmentForCreate>
	}
	//"approved"
	export const AssessmentResultApproved:string
	//"rejected"
	export const AssessmentResultRejected:string
	//"completed"
	export const AssessmentStatusCompleted:string
	//"in_process"
	export const AssessmentStatusInProcess:string
	//"no_need"
	export const AssessmentStatusNoNeed:string
	//"not_started"
	export const AssessmentStatusNotStarted:string
	export interface Bank extends Struct<Bank>{

			bankId:Ref<string>
			bankName:Ref<I18n>[]
			bankCode:Ref<string>
			countryRegionId:Ref<string>
			status:Ref<int>
			createTime:Ref<string>
			updateTime:Ref<string>
	}
	export interface BankAccount extends Struct<BankAccount>{

			bankName:Ref<string>
			bankAccountNumber:Ref<string>
			accountHolder:Ref<string>
			branchName:Ref<string>
			bankIdV2:Ref<string>
			branchIdV2:Ref<string>
			countryRegionId:Ref<string>
			bankAccountUsage:Ref<Enum>[]
			bankAccountType:Ref<Enum>
			currencyId:Ref<string>
			iban:Ref<string>
			customFields:Ref<CustomFieldData>[]
	}
	export interface BankAccountBuilder extends Struct<BankAccountBuilder>{

			bankName(bankName:string):Ref<BankAccountBuilder>
			bankAccountNumber(bankAccountNumber:string):Ref<BankAccountBuilder>
			accountHolder(accountHolder:string):Ref<BankAccountBuilder>
			branchName(branchName:string):Ref<BankAccountBuilder>
			bankIdV2(bankIdV2:string):Ref<BankAccountBuilder>
			branchIdV2(branchIdV2:string):Ref<BankAccountBuilder>
			countryRegionId(countryRegionId:string):Ref<BankAccountBuilder>
			bankAccountUsage(bankAccountUsage:Ref<Enum>[]):Ref<BankAccountBuilder>
			bankAccountType(bankAccountType:Ref<Enum>):Ref<BankAccountBuilder>
			currencyId(currencyId:string):Ref<BankAccountBuilder>
			iban(iBAN:string):Ref<BankAccountBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<BankAccountBuilder>
			build():Ref<BankAccount>
	}
	export interface BankBranch extends Struct<BankBranch>{

			bankBranchId:Ref<string>
			bankBranchName:Ref<I18n>[]
			bankId:Ref<string>
			code:Ref<string>
			swiftCode:Ref<string>
			status:Ref<int>
			bankBranchCode:Ref<string>
			registerPlace:Ref<string>
			bankAddress:Ref<string>
			createTime:Ref<string>
			updateTime:Ref<string>
	}
	export interface BankBranchBuilder extends Struct<BankBranchBuilder>{

			bankBranchId(bankBranchId:string):Ref<BankBranchBuilder>
			bankBranchName(bankBranchName:Ref<I18n>[]):Ref<BankBranchBuilder>
			bankId(bankId:string):Ref<BankBranchBuilder>
			code(code:string):Ref<BankBranchBuilder>
			swiftCode(swiftCode:string):Ref<BankBranchBuilder>
			status(status:int):Ref<BankBranchBuilder>
			bankBranchCode(bankBranchCode:string):Ref<BankBranchBuilder>
			registerPlace(registerPlace:string):Ref<BankBranchBuilder>
			bankAddress(bankAddress:string):Ref<BankBranchBuilder>
			createTime(createTime:string):Ref<BankBranchBuilder>
			updateTime(updateTime:string):Ref<BankBranchBuilder>
			build():Ref<BankBranch>
	}
	export interface BankBuilder extends Struct<BankBuilder>{

			bankId(bankId:string):Ref<BankBuilder>
			bankName(bankName:Ref<I18n>[]):Ref<BankBuilder>
			bankCode(bankCode:string):Ref<BankBuilder>
			countryRegionId(countryRegionId:string):Ref<BankBuilder>
			status(status:int):Ref<BankBuilder>
			createTime(createTime:string):Ref<BankBuilder>
			updateTime(updateTime:string):Ref<BankBuilder>
			build():Ref<Bank>
	}
	export interface BasicDepartment extends Struct<BasicDepartment>{

			id:Ref<string>
			departmentName:Ref<I18n>[]
	}
	export interface BasicDepartmentBuilder extends Struct<BasicDepartmentBuilder>{

			id(id:string):Ref<BasicDepartmentBuilder>
			departmentName(departmentName:Ref<I18n>[]):Ref<BasicDepartmentBuilder>
			build():Ref<BasicDepartment>
	}
	export interface BasicEmployee extends Struct<BasicEmployee>{

			employmentId:Ref<string>
			employeeNumber:Ref<string>
			emailAddress:Ref<string>
			personInfo:Ref<BasicPersonInfo>
	}
	export interface BasicEmployeeBuilder extends Struct<BasicEmployeeBuilder>{

			employmentId(employmentId:string):Ref<BasicEmployeeBuilder>
			employeeNumber(employeeNumber:string):Ref<BasicEmployeeBuilder>
			emailAddress(emailAddress:string):Ref<BasicEmployeeBuilder>
			personInfo(personInfo:Ref<BasicPersonInfo>):Ref<BasicEmployeeBuilder>
			build():Ref<BasicEmployee>
	}
	export interface BasicInfo extends Struct<BasicInfo>{

			name:Ref<Name>
			phoneNumber:Ref<string>
			internationalAreaCode:Ref<string>
			email:Ref<string>
			dateOfBirth:Ref<string>
			personalIdNumber:Ref<string>
			personalIdType:Ref<string>
			dateEnteredWorkforce:Ref<string>
			genderId:Ref<string>
			nationalityId:Ref<string>
			additionalNationalityIdList:string[]
			citizenshipStatusIdList:string[]
			homeAddress:Ref<string>
			workerId:Ref<string>
			userGeo:Ref<string>
			legalName:Ref<Name>
	}
	export interface BasicInfoBuilder extends Struct<BasicInfoBuilder>{

			name(name:Ref<Name>):Ref<BasicInfoBuilder>
			phoneNumber(phoneNumber:string):Ref<BasicInfoBuilder>
			internationalAreaCode(internationalAreaCode:string):Ref<BasicInfoBuilder>
			email(email:string):Ref<BasicInfoBuilder>
			dateOfBirth(dateOfBirth:string):Ref<BasicInfoBuilder>
			personalIdNumber(personalIdNumber:string):Ref<BasicInfoBuilder>
			personalIdType(personalIdType:string):Ref<BasicInfoBuilder>
			dateEnteredWorkforce(dateEnteredWorkforce:string):Ref<BasicInfoBuilder>
			genderId(genderId:string):Ref<BasicInfoBuilder>
			nationalityId(nationalityId:string):Ref<BasicInfoBuilder>
			additionalNationalityIdList(additionalNationalityIdList:string[]):Ref<BasicInfoBuilder>
			citizenshipStatusIdList(citizenshipStatusIdList:string[]):Ref<BasicInfoBuilder>
			homeAddress(homeAddress:string):Ref<BasicInfoBuilder>
			workerId(workerId:string):Ref<BasicInfoBuilder>
			userGeo(userGeo:string):Ref<BasicInfoBuilder>
			legalName(legalName:Ref<Name>):Ref<BasicInfoBuilder>
			build():Ref<BasicInfo>
	}
	export interface BasicInfoUpdate extends Struct<BasicInfoUpdate>{

			names:Ref<NameForUpdate>[]
			phones:Ref<PhoneForUpdate>[]
			emails:Ref<EmailForUpdate>[]
	}
	export interface BasicInfoUpdateBuilder extends Struct<BasicInfoUpdateBuilder>{

			names(names:Ref<NameForUpdate>[]):Ref<BasicInfoUpdateBuilder>
			phones(phones:Ref<PhoneForUpdate>[]):Ref<BasicInfoUpdateBuilder>
			emails(emails:Ref<EmailForUpdate>[]):Ref<BasicInfoUpdateBuilder>
			build():Ref<BasicInfoUpdate>
	}
	export interface BasicJobData extends Struct<BasicJobData>{

			jobDataId:Ref<string>
			employmentId:Ref<string>
	}
	export interface BasicJobDataBuilder extends Struct<BasicJobDataBuilder>{

			jobDataId(jobDataId:string):Ref<BasicJobDataBuilder>
			employmentId(employmentId:string):Ref<BasicJobDataBuilder>
			build():Ref<BasicJobData>
	}
	export interface BasicPersonInfo extends Struct<BasicPersonInfo>{

			personId:Ref<string>
			preferredName:Ref<string>
			preferredLocalFullName:Ref<string>
			preferredEnglishFullName:Ref<string>
	}
	export interface BasicPersonInfoBuilder extends Struct<BasicPersonInfoBuilder>{

			personId(personId:string):Ref<BasicPersonInfoBuilder>
			preferredName(preferredName:string):Ref<BasicPersonInfoBuilder>
			preferredLocalFullName(preferredLocalFullName:string):Ref<BasicPersonInfoBuilder>
			preferredEnglishFullName(preferredEnglishFullName:string):Ref<BasicPersonInfoBuilder>
			build():Ref<BasicPersonInfo>
	}
	export interface BatchGetCompanyPathReqBodyBuilder extends Struct<BatchGetCompanyPathReqBodyBuilder>{

			companyIds(companyIds:string[]):Ref<BatchGetCompanyPathReqBodyBuilder>
			build():Ref<BatchGetCompanyReqBody>
	}
	export interface BatchGetCompanyReq extends Struct<BatchGetCompanyReq>{

			body:Ref<BatchGetCompanyReqBody>
	}
	export interface BatchGetCompanyReqBody extends Struct<BatchGetCompanyReqBody>{

			companyIds:string[]
	}
	export interface BatchGetCompanyReqBodyBuilder extends Struct<BatchGetCompanyReqBodyBuilder>{

			companyIds(companyIds:string[]):Ref<BatchGetCompanyReqBodyBuilder>
			build():Ref<BatchGetCompanyReqBody>
	}
	export interface BatchGetCompanyReqBuilder extends Struct<BatchGetCompanyReqBuilder>{

			body(body:Ref<BatchGetCompanyReqBody>):Ref<BatchGetCompanyReqBuilder>
			build():Ref<BatchGetCompanyReq>
	}
	export interface BatchGetCompanyResp extends Struct<BatchGetCompanyResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<BatchGetCompanyRespData>
			success():bool
	}
	export interface BatchGetCompanyRespData extends Struct<BatchGetCompanyRespData>{

			items:Ref<Company>[]
	}
	export interface BatchGetDepartmentPathReqBodyBuilder extends Struct<BatchGetDepartmentPathReqBodyBuilder>{

			departmentIdList(departmentIdList:string[]):Ref<BatchGetDepartmentPathReqBodyBuilder>
			fields(fields:string[]):Ref<BatchGetDepartmentPathReqBodyBuilder>
			departmentNameList(departmentNameList:string[]):Ref<BatchGetDepartmentPathReqBodyBuilder>
			build():Ref<BatchGetDepartmentReqBody>
	}
	export interface BatchGetDepartmentReq extends Struct<BatchGetDepartmentReq>{

			body:Ref<BatchGetDepartmentReqBody>
	}
	export interface BatchGetDepartmentReqBody extends Struct<BatchGetDepartmentReqBody>{

			departmentIdList:string[]
			fields:string[]
			departmentNameList:string[]
	}
	export interface BatchGetDepartmentReqBodyBuilder extends Struct<BatchGetDepartmentReqBodyBuilder>{

			departmentIdList(departmentIdList:string[]):Ref<BatchGetDepartmentReqBodyBuilder>
			fields(fields:string[]):Ref<BatchGetDepartmentReqBodyBuilder>
			departmentNameList(departmentNameList:string[]):Ref<BatchGetDepartmentReqBodyBuilder>
			build():Ref<BatchGetDepartmentReqBody>
	}
	export interface BatchGetDepartmentReqBuilder extends Struct<BatchGetDepartmentReqBuilder>{

			userIdType(userIdType:string):Ref<BatchGetDepartmentReqBuilder>
			departmentIdType(departmentIdType:string):Ref<BatchGetDepartmentReqBuilder>
			body(body:Ref<BatchGetDepartmentReqBody>):Ref<BatchGetDepartmentReqBuilder>
			build():Ref<BatchGetDepartmentReq>
	}
	export interface BatchGetDepartmentResp extends Struct<BatchGetDepartmentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<BatchGetDepartmentRespData>
			success():bool
	}
	export interface BatchGetDepartmentRespData extends Struct<BatchGetDepartmentRespData>{

			items:Ref<Department>[]
	}
	export interface BatchGetEmployeePathReqBodyBuilder extends Struct<BatchGetEmployeePathReqBodyBuilder>{

			fields(fields:string[]):Ref<BatchGetEmployeePathReqBodyBuilder>
			employmentIds(employmentIds:string[]):Ref<BatchGetEmployeePathReqBodyBuilder>
			personIds(personIds:string[]):Ref<BatchGetEmployeePathReqBodyBuilder>
			workEmails(workEmails:string[]):Ref<BatchGetEmployeePathReqBodyBuilder>
			build():Ref<BatchGetEmployeeReqBody>
	}
	export interface BatchGetEmployeeReq extends Struct<BatchGetEmployeeReq>{

			body:Ref<BatchGetEmployeeReqBody>
	}
	export interface BatchGetEmployeeReqBody extends Struct<BatchGetEmployeeReqBody>{

			fields:string[]
			employmentIds:string[]
			personIds:string[]
			workEmails:string[]
	}
	export interface BatchGetEmployeeReqBodyBuilder extends Struct<BatchGetEmployeeReqBodyBuilder>{

			fields(fields:string[]):Ref<BatchGetEmployeeReqBodyBuilder>
			employmentIds(employmentIds:string[]):Ref<BatchGetEmployeeReqBodyBuilder>
			personIds(personIds:string[]):Ref<BatchGetEmployeeReqBodyBuilder>
			workEmails(workEmails:string[]):Ref<BatchGetEmployeeReqBodyBuilder>
			build():Ref<BatchGetEmployeeReqBody>
	}
	export interface BatchGetEmployeeReqBuilder extends Struct<BatchGetEmployeeReqBuilder>{

			userIdType(userIdType:string):Ref<BatchGetEmployeeReqBuilder>
			departmentIdType(departmentIdType:string):Ref<BatchGetEmployeeReqBuilder>
			body(body:Ref<BatchGetEmployeeReqBody>):Ref<BatchGetEmployeeReqBuilder>
			build():Ref<BatchGetEmployeeReq>
	}
	export interface BatchGetEmployeeResp extends Struct<BatchGetEmployeeResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<BatchGetEmployeeRespData>
			success():bool
	}
	export interface BatchGetEmployeeRespData extends Struct<BatchGetEmployeeRespData>{

			items:Ref<Employee>[]
	}
	export interface BatchGetEmployeesBpPathReqBodyBuilder extends Struct<BatchGetEmployeesBpPathReqBodyBuilder>{

			employmentIds(employmentIds:string[]):Ref<BatchGetEmployeesBpPathReqBodyBuilder>
			getAll(getAll:bool):Ref<BatchGetEmployeesBpPathReqBodyBuilder>
			build():Ref<BatchGetEmployeesBpReqBody>
	}
	export interface BatchGetEmployeesBpReq extends Struct<BatchGetEmployeesBpReq>{

			body:Ref<BatchGetEmployeesBpReqBody>
	}
	export interface BatchGetEmployeesBpReqBody extends Struct<BatchGetEmployeesBpReqBody>{

			employmentIds:string[]
			getAll:Ref<bool>
	}
	export interface BatchGetEmployeesBpReqBodyBuilder extends Struct<BatchGetEmployeesBpReqBodyBuilder>{

			employmentIds(employmentIds:string[]):Ref<BatchGetEmployeesBpReqBodyBuilder>
			getAll(getAll:bool):Ref<BatchGetEmployeesBpReqBodyBuilder>
			build():Ref<BatchGetEmployeesBpReqBody>
	}
	export interface BatchGetEmployeesBpReqBuilder extends Struct<BatchGetEmployeesBpReqBuilder>{

			userIdType(userIdType:string):Ref<BatchGetEmployeesBpReqBuilder>
			body(body:Ref<BatchGetEmployeesBpReqBody>):Ref<BatchGetEmployeesBpReqBuilder>
			build():Ref<BatchGetEmployeesBpReq>
	}
	export interface BatchGetEmployeesBpResp extends Struct<BatchGetEmployeesBpResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<BatchGetEmployeesBpRespData>
			success():bool
	}
	export interface BatchGetEmployeesBpRespData extends Struct<BatchGetEmployeesBpRespData>{

			employmentDirectBps:Ref<EmploymentBp>[]
			employmentAllBps:Ref<EmploymentBp>[]
	}
	export interface BatchGetEmployeesJobDataPathReqBodyBuilder extends Struct<BatchGetEmployeesJobDataPathReqBodyBuilder>{

			employmentIds(employmentIds:string[]):Ref<BatchGetEmployeesJobDataPathReqBodyBuilder>
			getAllVersion(getAllVersion:bool):Ref<BatchGetEmployeesJobDataPathReqBodyBuilder>
			effectiveDateStart(effectiveDateStart:string):Ref<BatchGetEmployeesJobDataPathReqBodyBuilder>
			effectiveDateEnd(effectiveDateEnd:string):Ref<BatchGetEmployeesJobDataPathReqBodyBuilder>
			dataDate(dataDate:string):Ref<BatchGetEmployeesJobDataPathReqBodyBuilder>
			build():Ref<BatchGetEmployeesJobDataReqBody>
	}
	export interface BatchGetEmployeesJobDataReq extends Struct<BatchGetEmployeesJobDataReq>{

			body:Ref<BatchGetEmployeesJobDataReqBody>
	}
	export interface BatchGetEmployeesJobDataReqBody extends Struct<BatchGetEmployeesJobDataReqBody>{

			employmentIds:string[]
			getAllVersion:Ref<bool>
			effectiveDateStart:Ref<string>
			effectiveDateEnd:Ref<string>
			dataDate:Ref<string>
	}
	export interface BatchGetEmployeesJobDataReqBodyBuilder extends Struct<BatchGetEmployeesJobDataReqBodyBuilder>{

			employmentIds(employmentIds:string[]):Ref<BatchGetEmployeesJobDataReqBodyBuilder>
			getAllVersion(getAllVersion:bool):Ref<BatchGetEmployeesJobDataReqBodyBuilder>
			effectiveDateStart(effectiveDateStart:string):Ref<BatchGetEmployeesJobDataReqBodyBuilder>
			effectiveDateEnd(effectiveDateEnd:string):Ref<BatchGetEmployeesJobDataReqBodyBuilder>
			dataDate(dataDate:string):Ref<BatchGetEmployeesJobDataReqBodyBuilder>
			build():Ref<BatchGetEmployeesJobDataReqBody>
	}
	export interface BatchGetEmployeesJobDataReqBuilder extends Struct<BatchGetEmployeesJobDataReqBuilder>{

			userIdType(userIdType:string):Ref<BatchGetEmployeesJobDataReqBuilder>
			departmentIdType(departmentIdType:string):Ref<BatchGetEmployeesJobDataReqBuilder>
			body(body:Ref<BatchGetEmployeesJobDataReqBody>):Ref<BatchGetEmployeesJobDataReqBuilder>
			build():Ref<BatchGetEmployeesJobDataReq>
	}
	export interface BatchGetEmployeesJobDataResp extends Struct<BatchGetEmployeesJobDataResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<BatchGetEmployeesJobDataRespData>
			success():bool
	}
	export interface BatchGetEmployeesJobDataRespData extends Struct<BatchGetEmployeesJobDataRespData>{

			items:Ref<EmployeeJobData>[]
	}
	export interface BatchGetJobFamilyPathReqBodyBuilder extends Struct<BatchGetJobFamilyPathReqBodyBuilder>{

			jobFamilyIds(jobFamilyIds:string[]):Ref<BatchGetJobFamilyPathReqBodyBuilder>
			build():Ref<BatchGetJobFamilyReqBody>
	}
	export interface BatchGetJobFamilyReq extends Struct<BatchGetJobFamilyReq>{

			body:Ref<BatchGetJobFamilyReqBody>
	}
	export interface BatchGetJobFamilyReqBody extends Struct<BatchGetJobFamilyReqBody>{

			jobFamilyIds:string[]
	}
	export interface BatchGetJobFamilyReqBodyBuilder extends Struct<BatchGetJobFamilyReqBodyBuilder>{

			jobFamilyIds(jobFamilyIds:string[]):Ref<BatchGetJobFamilyReqBodyBuilder>
			build():Ref<BatchGetJobFamilyReqBody>
	}
	export interface BatchGetJobFamilyReqBuilder extends Struct<BatchGetJobFamilyReqBuilder>{

			body(body:Ref<BatchGetJobFamilyReqBody>):Ref<BatchGetJobFamilyReqBuilder>
			build():Ref<BatchGetJobFamilyReq>
	}
	export interface BatchGetJobFamilyResp extends Struct<BatchGetJobFamilyResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<BatchGetJobFamilyRespData>
			success():bool
	}
	export interface BatchGetJobFamilyRespData extends Struct<BatchGetJobFamilyRespData>{

			items:Ref<JobFamily>[]
	}
	export interface BatchGetJobLevelPathReqBodyBuilder extends Struct<BatchGetJobLevelPathReqBodyBuilder>{

			jobLevelIds(jobLevelIds:string[]):Ref<BatchGetJobLevelPathReqBodyBuilder>
			build():Ref<BatchGetJobLevelReqBody>
	}
	export interface BatchGetJobLevelReq extends Struct<BatchGetJobLevelReq>{

			body:Ref<BatchGetJobLevelReqBody>
	}
	export interface BatchGetJobLevelReqBody extends Struct<BatchGetJobLevelReqBody>{

			jobLevelIds:string[]
	}
	export interface BatchGetJobLevelReqBodyBuilder extends Struct<BatchGetJobLevelReqBodyBuilder>{

			jobLevelIds(jobLevelIds:string[]):Ref<BatchGetJobLevelReqBodyBuilder>
			build():Ref<BatchGetJobLevelReqBody>
	}
	export interface BatchGetJobLevelReqBuilder extends Struct<BatchGetJobLevelReqBuilder>{

			body(body:Ref<BatchGetJobLevelReqBody>):Ref<BatchGetJobLevelReqBuilder>
			build():Ref<BatchGetJobLevelReq>
	}
	export interface BatchGetJobLevelResp extends Struct<BatchGetJobLevelResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<BatchGetJobLevelRespData>
			success():bool
	}
	export interface BatchGetJobLevelRespData extends Struct<BatchGetJobLevelRespData>{

			items:Ref<JobLevel>[]
	}
	export interface BatchGetLocationPathReqBodyBuilder extends Struct<BatchGetLocationPathReqBodyBuilder>{

			locationIds(locationIds:string[]):Ref<BatchGetLocationPathReqBodyBuilder>
			build():Ref<BatchGetLocationReqBody>
	}
	export interface BatchGetLocationReq extends Struct<BatchGetLocationReq>{

			body:Ref<BatchGetLocationReqBody>
	}
	export interface BatchGetLocationReqBody extends Struct<BatchGetLocationReqBody>{

			locationIds:string[]
	}
	export interface BatchGetLocationReqBodyBuilder extends Struct<BatchGetLocationReqBodyBuilder>{

			locationIds(locationIds:string[]):Ref<BatchGetLocationReqBodyBuilder>
			build():Ref<BatchGetLocationReqBody>
	}
	export interface BatchGetLocationReqBuilder extends Struct<BatchGetLocationReqBuilder>{

			body(body:Ref<BatchGetLocationReqBody>):Ref<BatchGetLocationReqBuilder>
			build():Ref<BatchGetLocationReq>
	}
	export interface BatchGetLocationResp extends Struct<BatchGetLocationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<BatchGetLocationRespData>
			success():bool
	}
	export interface BatchGetLocationRespData extends Struct<BatchGetLocationRespData>{

			items:Ref<Location>[]
	}
	export interface Bp extends Struct<Bp>{

			departmentId:Ref<string>
			hrbpId:Ref<string>
	}
	export interface BpBuilder extends Struct<BpBuilder>{

			departmentId(departmentId:string):Ref<BpBuilder>
			hrbpId(hrbpId:string):Ref<BpBuilder>
			build():Ref<Bp>
	}
	export interface BpmDataengineI18n extends Struct<BpmDataengineI18n>{

			zhCn:Ref<string>
			enUs:Ref<string>
	}
	export interface BpmDataengineI18nBuilder extends Struct<BpmDataengineI18nBuilder>{

			zhCn(zhCn:string):Ref<BpmDataengineI18nBuilder>
			enUs(enUs:string):Ref<BpmDataengineI18nBuilder>
			build():Ref<BpmDataengineI18n>
	}
	export interface CalculateParam extends Struct<CalculateParam>{

			departmentId:Ref<string>
			employeeTypeId:Ref<string>
			workLocationId:Ref<string>
			socialSecurityCityId:Ref<string>
			jobFamilyId:Ref<string>
			jobLevelId:Ref<string>
			jobId:Ref<string>
			matchingRuleDimension:Ref<DimensionValue>[]
	}
	export interface CalculateParamBuilder extends Struct<CalculateParamBuilder>{

			departmentId(departmentId:string):Ref<CalculateParamBuilder>
			employeeTypeId(employeeTypeId:string):Ref<CalculateParamBuilder>
			workLocationId(workLocationId:string):Ref<CalculateParamBuilder>
			socialSecurityCityId(socialSecurityCityId:string):Ref<CalculateParamBuilder>
			jobFamilyId(jobFamilyId:string):Ref<CalculateParamBuilder>
			jobLevelId(jobLevelId:string):Ref<CalculateParamBuilder>
			jobId(jobId:string):Ref<CalculateParamBuilder>
			matchingRuleDimension(matchingRuleDimension:Ref<DimensionValue>[]):Ref<CalculateParamBuilder>
			build():Ref<CalculateParam>
	}
	export interface ChangeFieldPair extends Struct<ChangeFieldPair>{

			originValue:Ref<CustomFieldData>
			targetValue:Ref<CustomFieldData>
	}
	export interface ChangeFieldPairBuilder extends Struct<ChangeFieldPairBuilder>{

			originValue(originValue:Ref<CustomFieldData>):Ref<ChangeFieldPairBuilder>
			targetValue(targetValue:Ref<CustomFieldData>):Ref<ChangeFieldPairBuilder>
			build():Ref<ChangeFieldPair>
	}
	export interface CitizenshipStatus extends Struct<CitizenshipStatus>{

			id:Ref<string>
			countryRegionId:Ref<string>
			active:Ref<bool>
			name:Ref<I18n>[]
			citizenshipStatus:Ref<I18n>[]
			viewOrder:Ref<string>
	}
	export interface CitizenshipStatusBuilder extends Struct<CitizenshipStatusBuilder>{

			id(id:string):Ref<CitizenshipStatusBuilder>
			countryRegionId(countryRegionId:string):Ref<CitizenshipStatusBuilder>
			active(active:bool):Ref<CitizenshipStatusBuilder>
			name(name:Ref<I18n>[]):Ref<CitizenshipStatusBuilder>
			citizenshipStatus(citizenshipStatus:Ref<I18n>[]):Ref<CitizenshipStatusBuilder>
			viewOrder(viewOrder:string):Ref<CitizenshipStatusBuilder>
			build():Ref<CitizenshipStatus>
	}
	export interface City extends Struct<City>{

			cityId:Ref<string>
			name:Ref<I18n>[]
			countryRegionSubdivisionId:Ref<string>
			code:Ref<string>
			status:Ref<int>
	}
	export interface CityBuilder extends Struct<CityBuilder>{

			cityId(cityId:string):Ref<CityBuilder>
			name(name:Ref<I18n>[]):Ref<CityBuilder>
			countryRegionSubdivisionId(countryRegionSubdivisionId:string):Ref<CityBuilder>
			code(code:string):Ref<CityBuilder>
			status(status:int):Ref<CityBuilder>
			build():Ref<City>
	}
	export interface Company extends Struct<Company>{

			companyId:Ref<string>
			hiberarchyCommon:Ref<HiberarchyCommon>
			type:Ref<Enum>
			industryList:Ref<Enum>[]
			legalRepresentative:Ref<I18n>[]
			postCode:Ref<string>
			taxPayerId:Ref<string>
			confidential:Ref<bool>
			subTypeList:Ref<Enum>[]
			branchCompany:Ref<bool>
			primaryManager:Ref<I18n>[]
			currency:Ref<Currency>
			phone:Ref<PhoneNumberAndAreaCode>
			fax:Ref<PhoneNumberAndAreaCode>
			registeredOfficeAddress:Ref<I18n>[]
			officeAddress:Ref<I18n>[]
			registeredOfficeAddressInfo:Ref<Address>
			officeAddressInfo:Ref<Address>
			customFields:Ref<CustomFieldData>[]
	}
	export interface CompanyBuilder extends Struct<CompanyBuilder>{

			companyId(companyId:string):Ref<CompanyBuilder>
			hiberarchyCommon(hiberarchyCommon:Ref<HiberarchyCommon>):Ref<CompanyBuilder>
			type(type_:Ref<Enum>):Ref<CompanyBuilder>
			industryList(industryList:Ref<Enum>[]):Ref<CompanyBuilder>
			legalRepresentative(legalRepresentative:Ref<I18n>[]):Ref<CompanyBuilder>
			postCode(postCode:string):Ref<CompanyBuilder>
			taxPayerId(taxPayerId:string):Ref<CompanyBuilder>
			confidential(confidential:bool):Ref<CompanyBuilder>
			subTypeList(subTypeList:Ref<Enum>[]):Ref<CompanyBuilder>
			branchCompany(branchCompany:bool):Ref<CompanyBuilder>
			primaryManager(primaryManager:Ref<I18n>[]):Ref<CompanyBuilder>
			currency(currency:Ref<Currency>):Ref<CompanyBuilder>
			phone(phone:Ref<PhoneNumberAndAreaCode>):Ref<CompanyBuilder>
			fax(fax:Ref<PhoneNumberAndAreaCode>):Ref<CompanyBuilder>
			registeredOfficeAddress(registeredOfficeAddress:Ref<I18n>[]):Ref<CompanyBuilder>
			officeAddress(officeAddress:Ref<I18n>[]):Ref<CompanyBuilder>
			registeredOfficeAddressInfo(registeredOfficeAddressInfo:Ref<Address>):Ref<CompanyBuilder>
			officeAddressInfo(officeAddressInfo:Ref<Address>):Ref<CompanyBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<CompanyBuilder>
			build():Ref<Company>
	}
	export interface CompanyIdAndName extends Struct<CompanyIdAndName>{

			companyId:Ref<string>
			companyName:Ref<I18n>[]
	}
	export interface CompanyIdAndNameBuilder extends Struct<CompanyIdAndNameBuilder>{

			companyId(companyId:string):Ref<CompanyIdAndNameBuilder>
			companyName(companyName:Ref<I18n>[]):Ref<CompanyIdAndNameBuilder>
			build():Ref<CompanyIdAndName>
	}
	export interface Contract extends Struct<Contract>{

			id:Ref<string>
			effectiveTime:Ref<string>
			contractEndDate:Ref<string>
			expirationTime:Ref<string>
			employmentId:Ref<string>
			contractType:Ref<Enum>
			firstPartyCompanyId:Ref<string>
			personId:Ref<string>
			durationType:Ref<Enum>
			contractNumber:Ref<string>
			signingType:Ref<Enum>
	}
	export interface ContractBuilder extends Struct<ContractBuilder>{

			id(id:string):Ref<ContractBuilder>
			effectiveTime(effectiveTime:string):Ref<ContractBuilder>
			contractEndDate(contractEndDate:string):Ref<ContractBuilder>
			expirationTime(expirationTime:string):Ref<ContractBuilder>
			employmentId(employmentId:string):Ref<ContractBuilder>
			contractType(contractType:Ref<Enum>):Ref<ContractBuilder>
			firstPartyCompanyId(firstPartyCompanyId:string):Ref<ContractBuilder>
			personId(personId:string):Ref<ContractBuilder>
			durationType(durationType:Ref<Enum>):Ref<ContractBuilder>
			contractNumber(contractNumber:string):Ref<ContractBuilder>
			signingType(signingType:Ref<Enum>):Ref<ContractBuilder>
			build():Ref<Contract>
	}
	export interface CostCenter extends Struct<CostCenter>{

			costCenterId:Ref<string>
			name:Ref<I18n>[]
			code:Ref<string>
			parentCostCenterId:Ref<string>
			managers:string[]
			description:Ref<I18n>[]
			effectiveTime:Ref<string>
			expirationTime:Ref<string>
			active:Ref<bool>
			operationReason:Ref<string>
	}
	export interface CostCenterBuilder extends Struct<CostCenterBuilder>{

			costCenterId(costCenterId:string):Ref<CostCenterBuilder>
			name(name:Ref<I18n>[]):Ref<CostCenterBuilder>
			code(code:string):Ref<CostCenterBuilder>
			parentCostCenterId(parentCostCenterId:string):Ref<CostCenterBuilder>
			managers(managers:string[]):Ref<CostCenterBuilder>
			description(description:Ref<I18n>[]):Ref<CostCenterBuilder>
			effectiveTime(effectiveTime:string):Ref<CostCenterBuilder>
			expirationTime(expirationTime:string):Ref<CostCenterBuilder>
			active(active:bool):Ref<CostCenterBuilder>
			operationReason(operationReason:string):Ref<CostCenterBuilder>
			build():Ref<CostCenter>
	}
	export interface CostCenterVersion extends Struct<CostCenterVersion>{

			costCenterId:Ref<string>
			versionId:Ref<string>
			name:Ref<I18n>[]
			code:Ref<string>
			parentCostCenterId:Ref<string>
			managers:string[]
			description:Ref<I18n>[]
			effectiveTime:Ref<string>
			expirationTime:Ref<string>
			active:Ref<bool>
			operationReason:Ref<string>
	}
	export interface CostCenterVersionBuilder extends Struct<CostCenterVersionBuilder>{

			costCenterId(costCenterId:string):Ref<CostCenterVersionBuilder>
			versionId(versionId:string):Ref<CostCenterVersionBuilder>
			name(name:Ref<I18n>[]):Ref<CostCenterVersionBuilder>
			code(code:string):Ref<CostCenterVersionBuilder>
			parentCostCenterId(parentCostCenterId:string):Ref<CostCenterVersionBuilder>
			managers(managers:string[]):Ref<CostCenterVersionBuilder>
			description(description:Ref<I18n>[]):Ref<CostCenterVersionBuilder>
			effectiveTime(effectiveTime:string):Ref<CostCenterVersionBuilder>
			expirationTime(expirationTime:string):Ref<CostCenterVersionBuilder>
			active(active:bool):Ref<CostCenterVersionBuilder>
			operationReason(operationReason:string):Ref<CostCenterVersionBuilder>
			build():Ref<CostCenterVersion>
	}
	export interface CountryRegion extends Struct<CountryRegion>{

			countryRegionId:Ref<string>
			name:Ref<I18n>[]
			fullName:Ref<I18n>[]
			alpha2Code:Ref<string>
			alpha3Code:Ref<string>
			globalCode:Ref<string>
			status:Ref<int>
	}
	export interface CountryRegionBuilder extends Struct<CountryRegionBuilder>{

			countryRegionId(countryRegionId:string):Ref<CountryRegionBuilder>
			name(name:Ref<I18n>[]):Ref<CountryRegionBuilder>
			fullName(fullName:Ref<I18n>[]):Ref<CountryRegionBuilder>
			alpha2Code(alpha2Code:string):Ref<CountryRegionBuilder>
			alpha3Code(alpha3Code:string):Ref<CountryRegionBuilder>
			globalCode(globalCode:string):Ref<CountryRegionBuilder>
			status(status:int):Ref<CountryRegionBuilder>
			build():Ref<CountryRegion>
	}
	export interface CountryRegionSubdivision extends Struct<CountryRegionSubdivision>{

			countryRegionSubdivisionId:Ref<string>
			name:Ref<I18n>[]
			countryRegionId:Ref<string>
			subdivisionType:Ref<Enum>
			isoCode:Ref<string>
			status:Ref<int>
	}
	export interface CountryRegionSubdivisionBuilder extends Struct<CountryRegionSubdivisionBuilder>{

			countryRegionSubdivisionId(countryRegionSubdivisionId:string):Ref<CountryRegionSubdivisionBuilder>
			name(name:Ref<I18n>[]):Ref<CountryRegionSubdivisionBuilder>
			countryRegionId(countryRegionId:string):Ref<CountryRegionSubdivisionBuilder>
			subdivisionType(subdivisionType:Ref<Enum>):Ref<CountryRegionSubdivisionBuilder>
			isoCode(isoCode:string):Ref<CountryRegionSubdivisionBuilder>
			status(status:int):Ref<CountryRegionSubdivisionBuilder>
			build():Ref<CountryRegionSubdivision>
	}
	export interface CreateCostCenterReq extends Struct<CreateCostCenterReq>{

			costCenter:Ref<CostCenter>
	}
	export interface CreateCostCenterReqBuilder extends Struct<CreateCostCenterReqBuilder>{

			userIdType(userIdType:string):Ref<CreateCostCenterReqBuilder>
			costCenter(costCenter:Ref<CostCenter>):Ref<CreateCostCenterReqBuilder>
			build():Ref<CreateCostCenterReq>
	}
	export interface CreateCostCenterResp extends Struct<CreateCostCenterResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateCostCenterRespData>
			success():bool
	}
	export interface CreateCostCenterRespData extends Struct<CreateCostCenterRespData>{

			costCenter:Ref<CostCenter>
	}
	export interface CreateCostCenterVersionReq extends Struct<CreateCostCenterVersionReq>{

			costCenterVersion:Ref<CostCenterVersion>
	}
	export interface CreateCostCenterVersionReqBuilder extends Struct<CreateCostCenterVersionReqBuilder>{

			costCenterId(costCenterId:string):Ref<CreateCostCenterVersionReqBuilder>
			userIdType(userIdType:string):Ref<CreateCostCenterVersionReqBuilder>
			costCenterVersion(costCenterVersion:Ref<CostCenterVersion>):Ref<CreateCostCenterVersionReqBuilder>
			build():Ref<CreateCostCenterVersionReq>
	}
	export interface CreateCostCenterVersionResp extends Struct<CreateCostCenterVersionResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateCostCenterVersionRespData>
			success():bool
	}
	export interface CreateCostCenterVersionRespData extends Struct<CreateCostCenterVersionRespData>{

			version:Ref<CostCenterVersion>
	}
	export interface CreatePersonReq extends Struct<CreatePersonReq>{

			personInfo:Ref<PersonInfo>
	}
	export interface CreatePersonReqBuilder extends Struct<CreatePersonReqBuilder>{

			clientToken(clientToken:string):Ref<CreatePersonReqBuilder>
			personInfo(personInfo:Ref<PersonInfo>):Ref<CreatePersonReqBuilder>
			build():Ref<CreatePersonReq>
	}
	export interface CreatePersonResp extends Struct<CreatePersonResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreatePersonRespData>
			success():bool
	}
	export interface CreatePersonRespData extends Struct<CreatePersonRespData>{

			person:Ref<PersonInfo>
	}
	export interface CreatePreHireReq extends Struct<CreatePreHireReq>{

			prehireCreate:Ref<PrehireCreate>
	}
	export interface CreatePreHireReqBuilder extends Struct<CreatePreHireReqBuilder>{

			prehireCreate(prehireCreate:Ref<PrehireCreate>):Ref<CreatePreHireReqBuilder>
			build():Ref<CreatePreHireReq>
	}
	export interface CreatePreHireResp extends Struct<CreatePreHireResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreatePreHireRespData>
			success():bool
	}
	export interface CreatePreHireRespData extends Struct<CreatePreHireRespData>{

			preHireId:Ref<string>
	}
	export interface CreateProbationAssessmentPathReqBodyBuilder extends Struct<CreateProbationAssessmentPathReqBodyBuilder>{

			employmentId(employmentId:string):Ref<CreateProbationAssessmentPathReqBodyBuilder>
			assessments(assessments:Ref<AssessmentForCreate>[]):Ref<CreateProbationAssessmentPathReqBodyBuilder>
			build():Ref<CreateProbationAssessmentReqBody>
	}
	export interface CreateProbationAssessmentReq extends Struct<CreateProbationAssessmentReq>{

			body:Ref<CreateProbationAssessmentReqBody>
	}
	export interface CreateProbationAssessmentReqBody extends Struct<CreateProbationAssessmentReqBody>{

			employmentId:Ref<string>
			assessments:Ref<AssessmentForCreate>[]
	}
	export interface CreateProbationAssessmentReqBodyBuilder extends Struct<CreateProbationAssessmentReqBodyBuilder>{

			employmentId(employmentId:string):Ref<CreateProbationAssessmentReqBodyBuilder>
			assessments(assessments:Ref<AssessmentForCreate>[]):Ref<CreateProbationAssessmentReqBodyBuilder>
			build():Ref<CreateProbationAssessmentReqBody>
	}
	export interface CreateProbationAssessmentReqBuilder extends Struct<CreateProbationAssessmentReqBuilder>{

			clientToken(clientToken:string):Ref<CreateProbationAssessmentReqBuilder>
			userIdType(userIdType:string):Ref<CreateProbationAssessmentReqBuilder>
			body(body:Ref<CreateProbationAssessmentReqBody>):Ref<CreateProbationAssessmentReqBuilder>
			build():Ref<CreateProbationAssessmentReq>
	}
	export interface CreateProbationAssessmentResp extends Struct<CreateProbationAssessmentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateProbationAssessmentRespData>
			success():bool
	}
	export interface CreateProbationAssessmentRespData extends Struct<CreateProbationAssessmentRespData>{

			assessmentIds:string[]
	}
	export interface Currency extends Struct<Currency>{

			currencyId:Ref<string>
			countryRegionId:Ref<string>
			currencyName:Ref<I18n>[]
			numericCode:Ref<int>
			currencyAlpha3Code:Ref<string>
			status:Ref<int>
	}
	export interface CurrencyBuilder extends Struct<CurrencyBuilder>{

			currencyId(currencyId:string):Ref<CurrencyBuilder>
			countryRegionId(countryRegionId:string):Ref<CurrencyBuilder>
			currencyName(currencyName:Ref<I18n>[]):Ref<CurrencyBuilder>
			numericCode(numericCode:int):Ref<CurrencyBuilder>
			currencyAlpha3Code(currencyAlpha3Code:string):Ref<CurrencyBuilder>
			status(status:int):Ref<CurrencyBuilder>
			build():Ref<Currency>
	}
	export interface CustomFieldData extends Struct<CustomFieldData>{

			customApiName:Ref<string>
			name:Ref<CustomName>
			type:Ref<int>
			value:Ref<string>
	}
	export interface CustomFieldDataBuilder extends Struct<CustomFieldDataBuilder>{

			customApiName(customApiName:string):Ref<CustomFieldDataBuilder>
			name(name:Ref<CustomName>):Ref<CustomFieldDataBuilder>
			type(type_:int):Ref<CustomFieldDataBuilder>
			value(value:string):Ref<CustomFieldDataBuilder>
			build():Ref<CustomFieldData>
	}
	export interface CustomName extends Struct<CustomName>{

			zhCn:Ref<string>
			enUs:Ref<string>
	}
	export interface CustomNameBuilder extends Struct<CustomNameBuilder>{

			zhCn(zhCn:string):Ref<CustomNameBuilder>
			enUs(enUs:string):Ref<CustomNameBuilder>
			build():Ref<CustomName>
	}
	export interface CustomOrg extends Struct<CustomOrg>{

			objectApiName:Ref<string>
			names:Ref<I18n>[]
			code:Ref<string>
			parentId:Ref<string>
			managerIds:string[]
			description:Ref<I18n>[]
			effectiveTime:Ref<string>
			orgRoles:Ref<OrgRole>[]
			matchRuleGroups:Ref<MatchRules>[]
			active:Ref<bool>
			orgId:Ref<string>
	}
	export interface CustomOrgBuilder extends Struct<CustomOrgBuilder>{

			objectApiName(objectApiName:string):Ref<CustomOrgBuilder>
			names(names:Ref<I18n>[]):Ref<CustomOrgBuilder>
			code(code:string):Ref<CustomOrgBuilder>
			parentId(parentId:string):Ref<CustomOrgBuilder>
			managerIds(managerIds:string[]):Ref<CustomOrgBuilder>
			description(description:Ref<I18n>[]):Ref<CustomOrgBuilder>
			effectiveTime(effectiveTime:string):Ref<CustomOrgBuilder>
			orgRoles(orgRoles:Ref<OrgRole>[]):Ref<CustomOrgBuilder>
			matchRuleGroups(matchRuleGroups:Ref<MatchRules>[]):Ref<CustomOrgBuilder>
			active(active:bool):Ref<CustomOrgBuilder>
			orgId(orgId:string):Ref<CustomOrgBuilder>
			build():Ref<CustomOrg>
	}
	export interface CustomOrgCreate extends Struct<CustomOrgCreate>{

			objectApiName:Ref<string>
			names:Ref<I18n>[]
			code:Ref<string>
			parentId:Ref<string>
			managerIds:string[]
			description:Ref<I18n>[]
			effectiveTime:Ref<string>
			orgRoles:Ref<OrgRoleUpdate>[]
			matchRuleGroups:Ref<MatchRules>[]
	}
	export interface CustomOrgCreateBuilder extends Struct<CustomOrgCreateBuilder>{

			objectApiName(objectApiName:string):Ref<CustomOrgCreateBuilder>
			names(names:Ref<I18n>[]):Ref<CustomOrgCreateBuilder>
			code(code:string):Ref<CustomOrgCreateBuilder>
			parentId(parentId:string):Ref<CustomOrgCreateBuilder>
			managerIds(managerIds:string[]):Ref<CustomOrgCreateBuilder>
			description(description:Ref<I18n>[]):Ref<CustomOrgCreateBuilder>
			effectiveTime(effectiveTime:string):Ref<CustomOrgCreateBuilder>
			orgRoles(orgRoles:Ref<OrgRoleUpdate>[]):Ref<CustomOrgCreateBuilder>
			matchRuleGroups(matchRuleGroups:Ref<MatchRules>[]):Ref<CustomOrgCreateBuilder>
			build():Ref<CustomOrgCreate>
	}
	export interface CustomOrgUpdate extends Struct<CustomOrgUpdate>{

			objectApiName:Ref<string>
			names:Ref<I18n>[]
			code:Ref<string>
			parentId:Ref<string>
			managerIds:string[]
			description:Ref<I18n>[]
			effectiveTime:Ref<string>
			orgRoles:Ref<OrgRoleUpdate>[]
	}
	export interface CustomOrgUpdateBuilder extends Struct<CustomOrgUpdateBuilder>{

			objectApiName(objectApiName:string):Ref<CustomOrgUpdateBuilder>
			names(names:Ref<I18n>[]):Ref<CustomOrgUpdateBuilder>
			code(code:string):Ref<CustomOrgUpdateBuilder>
			parentId(parentId:string):Ref<CustomOrgUpdateBuilder>
			managerIds(managerIds:string[]):Ref<CustomOrgUpdateBuilder>
			description(description:Ref<I18n>[]):Ref<CustomOrgUpdateBuilder>
			effectiveTime(effectiveTime:string):Ref<CustomOrgUpdateBuilder>
			orgRoles(orgRoles:Ref<OrgRoleUpdate>[]):Ref<CustomOrgUpdateBuilder>
			build():Ref<CustomOrgUpdate>
	}
	export interface CustomValue extends Struct<CustomValue>{

			valueBoolean:Ref<bool>
			valueEnumId:Ref<string>
	}
	export interface CustomValueBuilder extends Struct<CustomValueBuilder>{

			valueBoolean(valueBoolean:bool):Ref<CustomValueBuilder>
			valueEnumId(valueEnumId:string):Ref<CustomValueBuilder>
			build():Ref<CustomValue>
	}
	export interface DataengineI18n extends Struct<DataengineI18n>{

			zhCn:Ref<string>
			enUs:Ref<string>
	}
	export interface DataengineI18nBuilder extends Struct<DataengineI18nBuilder>{

			zhCn(zhCn:string):Ref<DataengineI18nBuilder>
			enUs(enUs:string):Ref<DataengineI18nBuilder>
			build():Ref<DataengineI18n>
	}
	export interface DeleteCostCenterPathReqBodyBuilder extends Struct<DeleteCostCenterPathReqBodyBuilder>{

			operationReason(operationReason:string):Ref<DeleteCostCenterPathReqBodyBuilder>
			build():Ref<DeleteCostCenterReqBody>
	}
	export interface DeleteCostCenterReq extends Struct<DeleteCostCenterReq>{

			body:Ref<DeleteCostCenterReqBody>
	}
	export interface DeleteCostCenterReqBody extends Struct<DeleteCostCenterReqBody>{

			operationReason:Ref<string>
	}
	export interface DeleteCostCenterReqBodyBuilder extends Struct<DeleteCostCenterReqBodyBuilder>{

			operationReason(operationReason:string):Ref<DeleteCostCenterReqBodyBuilder>
			build():Ref<DeleteCostCenterReqBody>
	}
	export interface DeleteCostCenterReqBuilder extends Struct<DeleteCostCenterReqBuilder>{

			costCenterId(costCenterId:string):Ref<DeleteCostCenterReqBuilder>
			body(body:Ref<DeleteCostCenterReqBody>):Ref<DeleteCostCenterReqBuilder>
			build():Ref<DeleteCostCenterReq>
	}
	export interface DeleteCostCenterResp extends Struct<DeleteCostCenterResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeleteCostCenterVersionPathReqBodyBuilder extends Struct<DeleteCostCenterVersionPathReqBodyBuilder>{

			operationReason(operationReason:string):Ref<DeleteCostCenterVersionPathReqBodyBuilder>
			build():Ref<DeleteCostCenterVersionReqBody>
	}
	export interface DeleteCostCenterVersionReq extends Struct<DeleteCostCenterVersionReq>{

			body:Ref<DeleteCostCenterVersionReqBody>
	}
	export interface DeleteCostCenterVersionReqBody extends Struct<DeleteCostCenterVersionReqBody>{

			operationReason:Ref<string>
	}
	export interface DeleteCostCenterVersionReqBodyBuilder extends Struct<DeleteCostCenterVersionReqBodyBuilder>{

			operationReason(operationReason:string):Ref<DeleteCostCenterVersionReqBodyBuilder>
			build():Ref<DeleteCostCenterVersionReqBody>
	}
	export interface DeleteCostCenterVersionReqBuilder extends Struct<DeleteCostCenterVersionReqBuilder>{

			costCenterId(costCenterId:string):Ref<DeleteCostCenterVersionReqBuilder>
			versionId(versionId:string):Ref<DeleteCostCenterVersionReqBuilder>
			body(body:Ref<DeleteCostCenterVersionReqBody>):Ref<DeleteCostCenterVersionReqBuilder>
			build():Ref<DeleteCostCenterVersionReq>
	}
	export interface DeleteCostCenterVersionResp extends Struct<DeleteCostCenterVersionResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeletePreHireReq extends Struct<DeletePreHireReq>{

	}
	export interface DeletePreHireReqBuilder extends Struct<DeletePreHireReqBuilder>{

			preHireId(preHireId:string):Ref<DeletePreHireReqBuilder>
			build():Ref<DeletePreHireReq>
	}
	export interface DeletePreHireResp extends Struct<DeletePreHireResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeleteProbationAssessmentReq extends Struct<DeleteProbationAssessmentReq>{

	}
	export interface DeleteProbationAssessmentReqBuilder extends Struct<DeleteProbationAssessmentReqBuilder>{

			assessmentId(assessmentId:string):Ref<DeleteProbationAssessmentReqBuilder>
			build():Ref<DeleteProbationAssessmentReq>
	}
	export interface DeleteProbationAssessmentResp extends Struct<DeleteProbationAssessmentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface Department extends Struct<Department>{

			id:Ref<string>
			versionId:Ref<string>
			departmentName:Ref<I18n>[]
			subType:Ref<Enum>
			parentDepartmentId:Ref<string>
			manager:Ref<string>
			treeOrder:Ref<string>
			listOrder:Ref<string>
			code:Ref<string>
			isRoot:Ref<bool>
			isConfidential:Ref<bool>
			effectiveDate:Ref<string>
			expirationDate:Ref<string>
			active:Ref<bool>
			description:Ref<I18n>[]
			customFields:Ref<CustomFieldData>[]
			staffingModel:Ref<Enum>
	}
	export interface DepartmentBuilder extends Struct<DepartmentBuilder>{

			id(id:string):Ref<DepartmentBuilder>
			versionId(versionId:string):Ref<DepartmentBuilder>
			departmentName(departmentName:Ref<I18n>[]):Ref<DepartmentBuilder>
			subType(subType:Ref<Enum>):Ref<DepartmentBuilder>
			parentDepartmentId(parentDepartmentId:string):Ref<DepartmentBuilder>
			manager(manager:string):Ref<DepartmentBuilder>
			treeOrder(treeOrder:string):Ref<DepartmentBuilder>
			listOrder(listOrder:string):Ref<DepartmentBuilder>
			code(code:string):Ref<DepartmentBuilder>
			isRoot(isRoot:bool):Ref<DepartmentBuilder>
			isConfidential(isConfidential:bool):Ref<DepartmentBuilder>
			effectiveDate(effectiveDate:string):Ref<DepartmentBuilder>
			expirationDate(expirationDate:string):Ref<DepartmentBuilder>
			active(active:bool):Ref<DepartmentBuilder>
			description(description:Ref<I18n>[]):Ref<DepartmentBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<DepartmentBuilder>
			staffingModel(staffingModel:Ref<Enum>):Ref<DepartmentBuilder>
			build():Ref<Department>
	}
	export interface DepartmentChange extends Struct<DepartmentChange>{

			departmentChangeId:Ref<string>
			departmentId:Ref<string>
			draftDepartmentId:Ref<string>
			departmentChangeType:Ref<string>
			reorganizationInfo:Ref<ReorganizationInfo>
	}
	export interface DepartmentChangeBuilder extends Struct<DepartmentChangeBuilder>{

			departmentChangeId(departmentChangeId:string):Ref<DepartmentChangeBuilder>
			departmentId(departmentId:string):Ref<DepartmentChangeBuilder>
			draftDepartmentId(draftDepartmentId:string):Ref<DepartmentChangeBuilder>
			departmentChangeType(departmentChangeType:string):Ref<DepartmentChangeBuilder>
			reorganizationInfo(reorganizationInfo:Ref<ReorganizationInfo>):Ref<DepartmentChangeBuilder>
			build():Ref<DepartmentChange>
	}
	export interface DepartmentForPatch extends Struct<DepartmentForPatch>{

			id:Ref<string>
			subType:Ref<Enum>
			manager:Ref<string>
			isConfidential:Ref<bool>
			hiberarchyCommon:Ref<HiberarchyCommon>
			effectiveTime:Ref<string>
			customFields:Ref<ObjectFieldData>[]
			costCenterId:Ref<string>
			staffingModel:Ref<Enum>
	}
	export interface DepartmentForPatchBuilder extends Struct<DepartmentForPatchBuilder>{

			id(id:string):Ref<DepartmentForPatchBuilder>
			subType(subType:Ref<Enum>):Ref<DepartmentForPatchBuilder>
			manager(manager:string):Ref<DepartmentForPatchBuilder>
			isConfidential(isConfidential:bool):Ref<DepartmentForPatchBuilder>
			hiberarchyCommon(hiberarchyCommon:Ref<HiberarchyCommon>):Ref<DepartmentForPatchBuilder>
			effectiveTime(effectiveTime:string):Ref<DepartmentForPatchBuilder>
			customFields(customFields:Ref<ObjectFieldData>[]):Ref<DepartmentForPatchBuilder>
			costCenterId(costCenterId:string):Ref<DepartmentForPatchBuilder>
			staffingModel(staffingModel:Ref<Enum>):Ref<DepartmentForPatchBuilder>
			build():Ref<DepartmentForPatch>
	}
	export interface DepartmentHrbp extends Struct<DepartmentHrbp>{

			departmentId:Ref<string>
			hrbpIds:string[]
	}
	export interface DepartmentHrbpBuilder extends Struct<DepartmentHrbpBuilder>{

			departmentId(departmentId:string):Ref<DepartmentHrbpBuilder>
			hrbpIds(hrbpIds:string[]):Ref<DepartmentHrbpBuilder>
			build():Ref<DepartmentHrbp>
	}
	export interface DepartmentId extends Struct<DepartmentId>{

			departmentId:Ref<string>
			openDepartmentId:Ref<string>
	}
	export interface DepartmentIdBuilder extends Struct<DepartmentIdBuilder>{

			departmentId(departmentId:string):Ref<DepartmentIdBuilder>
			openDepartmentId(openDepartmentId:string):Ref<DepartmentIdBuilder>
			build():Ref<DepartmentId>
	}
	//"department_id"
	export const DepartmentIdTypeBatchGetDepartmentDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeBatchGetDepartmentOpenDepartmentId:string
	//"people_corehr_department_id"
	export const DepartmentIdTypeBatchGetDepartmentPeopleCorehrDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeBatchGetEmployeeDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeBatchGetEmployeeOpenDepartmentId:string
	//"people_corehr_department_id"
	export const DepartmentIdTypeBatchGetEmployeePeopleCorehrDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeBatchGetEmployeesJobDataDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeBatchGetEmployeesJobDataOpenDepartmentId:string
	//"people_corehr_department_id"
	export const DepartmentIdTypeBatchGetEmployeesJobDataPeopleCorehrDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeGetProcessFormVariableDataDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeGetProcessFormVariableDataOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeListBpDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeListBpOpenDepartmentId:string
	//"people_corehr_department_id"
	export const DepartmentIdTypeListBpPeopleCorehrDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeParentsDepartmentDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeParentsDepartmentOpenDepartmentId:string
	//"people_corehr_department_id"
	export const DepartmentIdTypeParentsDepartmentPeopleCorehrDepartmentId:string
	//"people_corehr_department_id"
	export const DepartmentIdTypePeopleCorehrDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeQueryEmployeesJobDataDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeQueryEmployeesJobDataOpenDepartmentId:string
	//"people_corehr_department_id"
	export const DepartmentIdTypeQueryEmployeesJobDataPeopleCorehrDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeQueryTimelineDepartmentDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeQueryTimelineDepartmentOpenDepartmentId:string
	//"people_corehr_department_id"
	export const DepartmentIdTypeQueryTimelineDepartmentPeopleCorehrDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeSearchDepartmentDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeSearchDepartmentOpenDepartmentId:string
	//"people_corehr_department_id"
	export const DepartmentIdTypeSearchDepartmentPeopleCorehrDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeSearchEmployeeDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeSearchEmployeeOpenDepartmentId:string
	//"people_corehr_department_id"
	export const DepartmentIdTypeSearchEmployeePeopleCorehrDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeSearchJobChangeDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeSearchJobChangeOpenDepartmentId:string
	//"people_corehr_department_id"
	export const DepartmentIdTypeSearchJobChangePeopleCorehrDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeSearchPreHireDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeSearchPreHireOpenDepartmentId:string
	//"people_corehr_department_id"
	export const DepartmentIdTypeSearchPreHirePeopleCorehrDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeSearchProbationDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeSearchProbationOpenDepartmentId:string
	//"people_corehr_department_id"
	export const DepartmentIdTypeSearchProbationPeopleCorehrDepartmentId:string
	export interface DepartmentParentInfo extends Struct<DepartmentParentInfo>{

			departmentId:Ref<string>
			departmentName:Ref<I18n>[]
			parentDepartmentId:Ref<string>
			active:Ref<bool>
			isRoot:Ref<bool>
	}
	export interface DepartmentParentInfoBuilder extends Struct<DepartmentParentInfoBuilder>{

			departmentId(departmentId:string):Ref<DepartmentParentInfoBuilder>
			departmentName(departmentName:Ref<I18n>[]):Ref<DepartmentParentInfoBuilder>
			parentDepartmentId(parentDepartmentId:string):Ref<DepartmentParentInfoBuilder>
			active(active:bool):Ref<DepartmentParentInfoBuilder>
			isRoot(isRoot:bool):Ref<DepartmentParentInfoBuilder>
			build():Ref<DepartmentParentInfo>
	}
	export interface DepartmentParents extends Struct<DepartmentParents>{

			departmentId:Ref<string>
			parentDepartmentList:Ref<DepartmentParentInfo>[]
	}
	export interface DepartmentParentsBuilder extends Struct<DepartmentParentsBuilder>{

			departmentId(departmentId:string):Ref<DepartmentParentsBuilder>
			parentDepartmentList(parentDepartmentList:Ref<DepartmentParentInfo>[]):Ref<DepartmentParentsBuilder>
			build():Ref<DepartmentParents>
	}
	export interface DepartmentTimeline extends Struct<DepartmentTimeline>{

			id:Ref<string>
			names:Ref<I18n>[]
			parentDepartmentId:Ref<string>
			manager:Ref<string>
			code:Ref<string>
			effectiveDate:Ref<string>
			active:Ref<bool>
			descriptions:Ref<I18n>[]
	}
	export interface DepartmentTimelineBuilder extends Struct<DepartmentTimelineBuilder>{

			id(id:string):Ref<DepartmentTimelineBuilder>
			names(names:Ref<I18n>[]):Ref<DepartmentTimelineBuilder>
			parentDepartmentId(parentDepartmentId:string):Ref<DepartmentTimelineBuilder>
			manager(manager:string):Ref<DepartmentTimelineBuilder>
			code(code:string):Ref<DepartmentTimelineBuilder>
			effectiveDate(effectiveDate:string):Ref<DepartmentTimelineBuilder>
			active(active:bool):Ref<DepartmentTimelineBuilder>
			descriptions(descriptions:Ref<I18n>[]):Ref<DepartmentTimelineBuilder>
			build():Ref<DepartmentTimeline>
	}
	export interface Dependent extends Struct<Dependent>{

			name:Ref<PersonName>
			relationship:Ref<Enum>
			gender:Ref<Enum>
			dateOfBirth:Ref<string>
			nationalityIdV2:Ref<string>
			nationalIdList:Ref<NationalId>[]
			spousesWorkingStatus:Ref<Enum>
			isThisPersonCoveredByHealthInsurance:Ref<bool>
			isThisPersonAllowedForTaxDeduction:Ref<bool>
			customFields:Ref<CustomFieldData>[]
			dependentName:Ref<string>
			employer:Ref<string>
			job:Ref<string>
			phone:Ref<Phone>
			address:Ref<Address>
			birthCertificateOfChild:Ref<File>[]
	}
	export interface DependentBuilder extends Struct<DependentBuilder>{

			name(name:Ref<PersonName>):Ref<DependentBuilder>
			relationship(relationship:Ref<Enum>):Ref<DependentBuilder>
			gender(gender:Ref<Enum>):Ref<DependentBuilder>
			dateOfBirth(dateOfBirth:string):Ref<DependentBuilder>
			nationalityIdV2(nationalityIdV2:string):Ref<DependentBuilder>
			nationalIdList(nationalIdList:Ref<NationalId>[]):Ref<DependentBuilder>
			spousesWorkingStatus(spousesWorkingStatus:Ref<Enum>):Ref<DependentBuilder>
			isThisPersonCoveredByHealthInsurance(isThisPersonCoveredByHealthInsurance:bool):Ref<DependentBuilder>
			isThisPersonAllowedForTaxDeduction(isThisPersonAllowedForTaxDeduction:bool):Ref<DependentBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<DependentBuilder>
			dependentName(dependentName:string):Ref<DependentBuilder>
			employer(employer:string):Ref<DependentBuilder>
			job(job:string):Ref<DependentBuilder>
			phone(phone:Ref<Phone>):Ref<DependentBuilder>
			address(address:Ref<Address>):Ref<DependentBuilder>
			birthCertificateOfChild(birthCertificateOfChild:Ref<File>[]):Ref<DependentBuilder>
			build():Ref<Dependent>
	}
	export interface Dimension extends Struct<Dimension>{

			name:Ref<I18n>[]
			apiName:Ref<string>
			fieldType:Ref<string>
			required:Ref<bool>
			enumValue:Ref<Enum>[]
	}
	export interface DimensionBuilder extends Struct<DimensionBuilder>{

			name(name:Ref<I18n>[]):Ref<DimensionBuilder>
			apiName(apiName:string):Ref<DimensionBuilder>
			fieldType(fieldType:string):Ref<DimensionBuilder>
			required(required:bool):Ref<DimensionBuilder>
			enumValue(enumValue:Ref<Enum>[]):Ref<DimensionBuilder>
			build():Ref<Dimension>
	}
	export interface DimensionIdInData extends Struct<DimensionIdInData>{

			dimensionKey:Ref<string>
			dimensionIds:string[]
	}
	export interface DimensionIdInDataBuilder extends Struct<DimensionIdInDataBuilder>{

			dimensionKey(dimensionKey:string):Ref<DimensionIdInDataBuilder>
			dimensionIds(dimensionIds:string[]):Ref<DimensionIdInDataBuilder>
			build():Ref<DimensionIdInData>
	}
	export interface DimensionInfo extends Struct<DimensionInfo>{

			id:Ref<string>
			name:Ref<I18n>[]
	}
	export interface DimensionInfoBuilder extends Struct<DimensionInfoBuilder>{

			id(id:string):Ref<DimensionInfoBuilder>
			name(name:Ref<I18n>[]):Ref<DimensionInfoBuilder>
			build():Ref<DimensionInfo>
	}
	export interface DimensionInfoData extends Struct<DimensionInfoData>{

			dimensionKey:Ref<string>
			dimensionInfo:Ref<DimensionInfo>
	}
	export interface DimensionInfoDataBuilder extends Struct<DimensionInfoDataBuilder>{

			dimensionKey(dimensionKey:string):Ref<DimensionInfoDataBuilder>
			dimensionInfo(dimensionInfo:Ref<DimensionInfo>):Ref<DimensionInfoDataBuilder>
			build():Ref<DimensionInfoData>
	}
	export interface DimensionValue extends Struct<DimensionValue>{

			dimensionApiName:Ref<string>
			dimensionValue:Ref<CustomValue>
	}
	export interface DimensionValueBuilder extends Struct<DimensionValueBuilder>{

			dimensionApiName(dimensionApiName:string):Ref<DimensionValueBuilder>
			dimensionValue(dimensionValue:Ref<CustomValue>):Ref<DimensionValueBuilder>
			build():Ref<DimensionValue>
	}
	export interface District extends Struct<District>{

			districtId:Ref<string>
			name:Ref<I18n>[]
			cityId:Ref<string>
			status:Ref<int>
	}
	export interface DistrictBuilder extends Struct<DistrictBuilder>{

			districtId(districtId:string):Ref<DistrictBuilder>
			name(name:Ref<I18n>[]):Ref<DistrictBuilder>
			cityId(cityId:string):Ref<DistrictBuilder>
			status(status:int):Ref<DistrictBuilder>
			build():Ref<District>
	}
	export interface Education extends Struct<Education>{

			school:Ref<I18n>[]
			levelOfEducation:Ref<Enum>
			startDate:Ref<string>
			endDate:Ref<string>
			fieldOfStudy:Ref<I18n>[]
			degree:Ref<Enum>
			schoolName:Ref<Enum>
			fieldOfStudyName:Ref<Enum>
			countryRegionId:Ref<string>
			expectedEndDate:Ref<string>
			customFields:Ref<CustomFieldData>[]
	}
	export interface EducationBuilder extends Struct<EducationBuilder>{

			school(school:Ref<I18n>[]):Ref<EducationBuilder>
			levelOfEducation(levelOfEducation:Ref<Enum>):Ref<EducationBuilder>
			startDate(startDate:string):Ref<EducationBuilder>
			endDate(endDate:string):Ref<EducationBuilder>
			fieldOfStudy(fieldOfStudy:Ref<I18n>[]):Ref<EducationBuilder>
			degree(degree:Ref<Enum>):Ref<EducationBuilder>
			schoolName(schoolName:Ref<Enum>):Ref<EducationBuilder>
			fieldOfStudyName(fieldOfStudyName:Ref<Enum>):Ref<EducationBuilder>
			countryRegionId(countryRegionId:string):Ref<EducationBuilder>
			expectedEndDate(expectedEndDate:string):Ref<EducationBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<EducationBuilder>
			build():Ref<Education>
	}
	export interface EducationInfo extends Struct<EducationInfo>{

			schoolName:Ref<string>
			education:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			fieldOfStudy:Ref<string>
	}
	export interface EducationInfoBuilder extends Struct<EducationInfoBuilder>{

			schoolName(schoolName:string):Ref<EducationInfoBuilder>
			education(education:string):Ref<EducationInfoBuilder>
			startTime(startTime:string):Ref<EducationInfoBuilder>
			endTime(endTime:string):Ref<EducationInfoBuilder>
			fieldOfStudy(fieldOfStudy:string):Ref<EducationInfoBuilder>
			build():Ref<EducationInfo>
	}
	export interface Email extends Struct<Email>{

			email:Ref<string>
			isPrimary:Ref<bool>
			isPublic:Ref<bool>
			emailUsage:Ref<Enum>
	}
	export interface EmailBuilder extends Struct<EmailBuilder>{

			email(email:string):Ref<EmailBuilder>
			isPrimary(isPrimary:bool):Ref<EmailBuilder>
			isPublic(isPublic:bool):Ref<EmailBuilder>
			emailUsage(emailUsage:Ref<Enum>):Ref<EmailBuilder>
			build():Ref<Email>
	}
	export interface EmailForUpdate extends Struct<EmailForUpdate>{

			email:Ref<string>
			isPrimary:Ref<bool>
			isPublic:Ref<bool>
			emailUsage:Ref<string>
	}
	export interface EmailForUpdateBuilder extends Struct<EmailForUpdateBuilder>{

			email(email:string):Ref<EmailForUpdateBuilder>
			isPrimary(isPrimary:bool):Ref<EmailForUpdateBuilder>
			isPublic(isPublic:bool):Ref<EmailForUpdateBuilder>
			emailUsage(emailUsage:string):Ref<EmailForUpdateBuilder>
			build():Ref<EmailForUpdate>
	}
	export interface EmergencyContact extends Struct<EmergencyContact>{

			name:Ref<PersonName>
			relationship:Ref<Enum>
			phoneIst:Ref<Phone>[]
			phoneList:Ref<Phone>[]
			legalName:Ref<string>
			customFields:Ref<CustomFieldData>[]
			address:Ref<Address>
			email:Ref<Email>
	}
	export interface EmergencyContactBuilder extends Struct<EmergencyContactBuilder>{

			name(name:Ref<PersonName>):Ref<EmergencyContactBuilder>
			relationship(relationship:Ref<Enum>):Ref<EmergencyContactBuilder>
			phoneIst(phoneIst:Ref<Phone>[]):Ref<EmergencyContactBuilder>
			phoneList(phoneList:Ref<Phone>[]):Ref<EmergencyContactBuilder>
			legalName(legalName:string):Ref<EmergencyContactBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<EmergencyContactBuilder>
			address(address:Ref<Address>):Ref<EmergencyContactBuilder>
			email(email:Ref<Email>):Ref<EmergencyContactBuilder>
			build():Ref<EmergencyContact>
	}
	export interface Employee extends Struct<Employee>{

			employmentId:Ref<string>
			atsApplicationId:Ref<string>
			prehireId:Ref<string>
			employeeNumber:Ref<string>
			employeeTypeId:Ref<string>
			departmentId:Ref<string>
			jobLevelId:Ref<string>
			jobLevel:Ref<JobLevel>
			jobGradeId:Ref<string>
			workLocationId:Ref<string>
			jobFamilyId:Ref<string>
			jobFamily:Ref<JobFamily>
			jobId:Ref<string>
			job:Ref<Job>
			companyId:Ref<string>
			workingHoursTypeId:Ref<string>
			tenure:Ref<string>
			seniorityDate:Ref<string>
			effectiveDate:Ref<string>
			primaryEmployment:Ref<bool>
			probationPeriod:Ref<int>
			onProbation:Ref<bool>
			probationEndDate:Ref<string>
			directManagerId:Ref<string>
			dottedLineManagerId:Ref<string>
			employmentType:Ref<Enum>
			employmentStatus:Ref<Enum>
			expirationDate:Ref<string>
			reasonForOffboarding:Ref<Enum>
			emailAddress:Ref<string>
			workEmailList:Ref<WorkEmail>[]
			costCenterList:Ref<JobDataCostCenter>[]
			rehire:Ref<Enum>
			rehireEmploymentId:Ref<string>
			personInfo:Ref<PersonInfo>
			customFields:Ref<CustomFieldData>[]
			noncompeteStatus:Ref<Enum>
			pastOffboarding:Ref<bool>
			regularEmployeeStartDate:Ref<string>
			externalId:Ref<string>
			timesEmployed:Ref<int>
			recruitmentType:Ref<Enum>
			avatarUrl:Ref<string>
			primaryContractId:Ref<string>
			contractStartDate:Ref<string>
			contractEndDate:Ref<string>
			contractExpectedEndDate:Ref<string>
			payGroupId:Ref<string>
			internationalAssignment:Ref<bool>
			workCalendarId:Ref<string>
			department:Ref<BasicDepartment>
			directManager:Ref<BasicEmployee>
			dottedLineManager:Ref<BasicEmployee>
			timeZone:Ref<string>
			serviceCompany:Ref<string>
			compensationType:Ref<Enum>
			workShift:Ref<Enum>
	}
	export interface EmployeeBuilder extends Struct<EmployeeBuilder>{

			employmentId(employmentId:string):Ref<EmployeeBuilder>
			atsApplicationId(atsApplicationId:string):Ref<EmployeeBuilder>
			prehireId(prehireId:string):Ref<EmployeeBuilder>
			employeeNumber(employeeNumber:string):Ref<EmployeeBuilder>
			employeeTypeId(employeeTypeId:string):Ref<EmployeeBuilder>
			departmentId(departmentId:string):Ref<EmployeeBuilder>
			jobLevelId(jobLevelId:string):Ref<EmployeeBuilder>
			jobLevel(jobLevel:Ref<JobLevel>):Ref<EmployeeBuilder>
			jobGradeId(jobGradeId:string):Ref<EmployeeBuilder>
			workLocationId(workLocationId:string):Ref<EmployeeBuilder>
			jobFamilyId(jobFamilyId:string):Ref<EmployeeBuilder>
			jobFamily(jobFamily:Ref<JobFamily>):Ref<EmployeeBuilder>
			jobId(jobId:string):Ref<EmployeeBuilder>
			job(job:Ref<Job>):Ref<EmployeeBuilder>
			companyId(companyId:string):Ref<EmployeeBuilder>
			workingHoursTypeId(workingHoursTypeId:string):Ref<EmployeeBuilder>
			tenure(tenure:string):Ref<EmployeeBuilder>
			seniorityDate(seniorityDate:string):Ref<EmployeeBuilder>
			effectiveDate(effectiveDate:string):Ref<EmployeeBuilder>
			primaryEmployment(primaryEmployment:bool):Ref<EmployeeBuilder>
			probationPeriod(probationPeriod:int):Ref<EmployeeBuilder>
			onProbation(onProbation:bool):Ref<EmployeeBuilder>
			probationEndDate(probationEndDate:string):Ref<EmployeeBuilder>
			directManagerId(directManagerId:string):Ref<EmployeeBuilder>
			dottedLineManagerId(dottedLineManagerId:string):Ref<EmployeeBuilder>
			employmentType(employmentType:Ref<Enum>):Ref<EmployeeBuilder>
			employmentStatus(employmentStatus:Ref<Enum>):Ref<EmployeeBuilder>
			expirationDate(expirationDate:string):Ref<EmployeeBuilder>
			reasonForOffboarding(reasonForOffboarding:Ref<Enum>):Ref<EmployeeBuilder>
			emailAddress(emailAddress:string):Ref<EmployeeBuilder>
			workEmailList(workEmailList:Ref<WorkEmail>[]):Ref<EmployeeBuilder>
			costCenterList(costCenterList:Ref<JobDataCostCenter>[]):Ref<EmployeeBuilder>
			rehire(rehire:Ref<Enum>):Ref<EmployeeBuilder>
			rehireEmploymentId(rehireEmploymentId:string):Ref<EmployeeBuilder>
			personInfo(personInfo:Ref<PersonInfo>):Ref<EmployeeBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<EmployeeBuilder>
			noncompeteStatus(noncompeteStatus:Ref<Enum>):Ref<EmployeeBuilder>
			pastOffboarding(pastOffboarding:bool):Ref<EmployeeBuilder>
			regularEmployeeStartDate(regularEmployeeStartDate:string):Ref<EmployeeBuilder>
			externalId(externalId:string):Ref<EmployeeBuilder>
			timesEmployed(timesEmployed:int):Ref<EmployeeBuilder>
			recruitmentType(recruitmentType:Ref<Enum>):Ref<EmployeeBuilder>
			avatarUrl(avatarUrl:string):Ref<EmployeeBuilder>
			primaryContractId(primaryContractId:string):Ref<EmployeeBuilder>
			contractStartDate(contractStartDate:string):Ref<EmployeeBuilder>
			contractEndDate(contractEndDate:string):Ref<EmployeeBuilder>
			contractExpectedEndDate(contractExpectedEndDate:string):Ref<EmployeeBuilder>
			payGroupId(payGroupId:string):Ref<EmployeeBuilder>
			internationalAssignment(internationalAssignment:bool):Ref<EmployeeBuilder>
			workCalendarId(workCalendarId:string):Ref<EmployeeBuilder>
			department(department:Ref<BasicDepartment>):Ref<EmployeeBuilder>
			directManager(directManager:Ref<BasicEmployee>):Ref<EmployeeBuilder>
			dottedLineManager(dottedLineManager:Ref<BasicEmployee>):Ref<EmployeeBuilder>
			timeZone(timeZone:string):Ref<EmployeeBuilder>
			serviceCompany(serviceCompany:string):Ref<EmployeeBuilder>
			compensationType(compensationType:Ref<Enum>):Ref<EmployeeBuilder>
			workShift(workShift:Ref<Enum>):Ref<EmployeeBuilder>
			build():Ref<Employee>
	}
	export interface EmployeeDomainEventData extends Struct<EmployeeDomainEventData>{

			id:Ref<string>
			entity:Ref<string>
			aggEntity:Ref<string>
			aggEntityId:Ref<string>
			optType:Ref<int>
			fields:string[]
	}
	export interface EmployeeDomainEventDataBuilder extends Struct<EmployeeDomainEventDataBuilder>{

			id(id:string):Ref<EmployeeDomainEventDataBuilder>
			entity(entity:string):Ref<EmployeeDomainEventDataBuilder>
			aggEntity(aggEntity:string):Ref<EmployeeDomainEventDataBuilder>
			aggEntityId(aggEntityId:string):Ref<EmployeeDomainEventDataBuilder>
			optType(optType:int):Ref<EmployeeDomainEventDataBuilder>
			fields(fields:string[]):Ref<EmployeeDomainEventDataBuilder>
			build():Ref<EmployeeDomainEventData>
	}
	export interface EmployeeInternationalAssignment extends Struct<EmployeeInternationalAssignment>{

			employmentId:Ref<string>
			internationalAssignments:Ref<InternationalAssignmentV2>[]
	}
	export interface EmployeeInternationalAssignmentBuilder extends Struct<EmployeeInternationalAssignmentBuilder>{

			employmentId(employmentId:string):Ref<EmployeeInternationalAssignmentBuilder>
			internationalAssignments(internationalAssignments:Ref<InternationalAssignmentV2>[]):Ref<EmployeeInternationalAssignmentBuilder>
			build():Ref<EmployeeInternationalAssignment>
	}
	export interface EmployeeJobData extends Struct<EmployeeJobData>{

			employmentId:Ref<string>
			jobDatas:Ref<JobData>[]
	}
	export interface EmployeeJobDataBuilder extends Struct<EmployeeJobDataBuilder>{

			employmentId(employmentId:string):Ref<EmployeeJobDataBuilder>
			jobDatas(jobDatas:Ref<JobData>[]):Ref<EmployeeJobDataBuilder>
			build():Ref<EmployeeJobData>
	}
	export interface Employment extends Struct<Employment>{

			prehireId:Ref<string>
			employeeTypeId:Ref<string>
			tenure:Ref<string>
			departmentId:Ref<string>
			jobLevelId:Ref<string>
			workLocationId:Ref<string>
			jobFamilyId:Ref<string>
			jobId:Ref<string>
			companyId:Ref<string>
			workingHoursTypeId:Ref<string>
			id:Ref<string>
			seniorityDate:Ref<string>
			employeeNumber:Ref<string>
			effectiveDate:Ref<string>
			expirationDate:Ref<string>
			employmentType:Ref<Enum>
			personId:Ref<string>
			probationPeriod:Ref<int>
			onProbation:Ref<string>
			probationEndDate:Ref<string>
			primaryEmployment:Ref<bool>
			employmentStatus:Ref<Enum>
			workEmailList:Ref<Email>[]
			emailAddress:Ref<string>
			reasonForOffboarding:Ref<Enum>
			costCenterList:Ref<JobDataCostCenter>[]
			atsApplicationId:Ref<string>
			customFields:Ref<ObjectFieldData>[]
	}
	export interface EmploymentBp extends Struct<EmploymentBp>{

			employmentId:Ref<string>
			hrbpIds:string[]
			locationBpIds:string[]
	}
	export interface EmploymentBpBuilder extends Struct<EmploymentBpBuilder>{

			employmentId(employmentId:string):Ref<EmploymentBpBuilder>
			hrbpIds(hrbpIds:string[]):Ref<EmploymentBpBuilder>
			locationBpIds(locationBpIds:string[]):Ref<EmploymentBpBuilder>
			build():Ref<EmploymentBp>
	}
	export interface EmploymentBuilder extends Struct<EmploymentBuilder>{

			prehireId(prehireId:string):Ref<EmploymentBuilder>
			employeeTypeId(employeeTypeId:string):Ref<EmploymentBuilder>
			tenure(tenure:string):Ref<EmploymentBuilder>
			departmentId(departmentId:string):Ref<EmploymentBuilder>
			jobLevelId(jobLevelId:string):Ref<EmploymentBuilder>
			workLocationId(workLocationId:string):Ref<EmploymentBuilder>
			jobFamilyId(jobFamilyId:string):Ref<EmploymentBuilder>
			jobId(jobId:string):Ref<EmploymentBuilder>
			companyId(companyId:string):Ref<EmploymentBuilder>
			workingHoursTypeId(workingHoursTypeId:string):Ref<EmploymentBuilder>
			id(id:string):Ref<EmploymentBuilder>
			seniorityDate(seniorityDate:string):Ref<EmploymentBuilder>
			employeeNumber(employeeNumber:string):Ref<EmploymentBuilder>
			effectiveDate(effectiveDate:string):Ref<EmploymentBuilder>
			expirationDate(expirationDate:string):Ref<EmploymentBuilder>
			employmentType(employmentType:Ref<Enum>):Ref<EmploymentBuilder>
			personId(personId:string):Ref<EmploymentBuilder>
			probationPeriod(probationPeriod:int):Ref<EmploymentBuilder>
			onProbation(onProbation:string):Ref<EmploymentBuilder>
			probationEndDate(probationEndDate:string):Ref<EmploymentBuilder>
			primaryEmployment(primaryEmployment:bool):Ref<EmploymentBuilder>
			employmentStatus(employmentStatus:Ref<Enum>):Ref<EmploymentBuilder>
			workEmailList(workEmailList:Ref<Email>[]):Ref<EmploymentBuilder>
			emailAddress(emailAddress:string):Ref<EmploymentBuilder>
			reasonForOffboarding(reasonForOffboarding:Ref<Enum>):Ref<EmploymentBuilder>
			costCenterList(costCenterList:Ref<JobDataCostCenter>[]):Ref<EmploymentBuilder>
			atsApplicationId(atsApplicationId:string):Ref<EmploymentBuilder>
			customFields(customFields:Ref<ObjectFieldData>[]):Ref<EmploymentBuilder>
			build():Ref<Employment>
	}
	export interface EmploymentLeaveBalance extends Struct<EmploymentLeaveBalance>{

			employmentId:Ref<string>
			employmentName:Ref<I18n>[]
			asOfDate:Ref<string>
			leaveBalanceList:Ref<LeaveBalance>[]
	}
	export interface EmploymentLeaveBalanceBuilder extends Struct<EmploymentLeaveBalanceBuilder>{

			employmentId(employmentId:string):Ref<EmploymentLeaveBalanceBuilder>
			employmentName(employmentName:Ref<I18n>[]):Ref<EmploymentLeaveBalanceBuilder>
			asOfDate(asOfDate:string):Ref<EmploymentLeaveBalanceBuilder>
			leaveBalanceList(leaveBalanceList:Ref<LeaveBalance>[]):Ref<EmploymentLeaveBalanceBuilder>
			build():Ref<EmploymentLeaveBalance>
	}
	//"hired"
	export const EmploymentStatusHired:string
	//"terminated"
	export const EmploymentStatusTerminated:string
	export interface EnableDisableAssessmentProbationPathReqBodyBuilder extends Struct<EnableDisableAssessmentProbationPathReqBodyBuilder>{

			active(active:bool):Ref<EnableDisableAssessmentProbationPathReqBodyBuilder>
			appUrl(appUrl:string):Ref<EnableDisableAssessmentProbationPathReqBodyBuilder>
			build():Ref<EnableDisableAssessmentProbationReqBody>
	}
	export interface EnableDisableAssessmentProbationReq extends Struct<EnableDisableAssessmentProbationReq>{

			body:Ref<EnableDisableAssessmentProbationReqBody>
	}
	export interface EnableDisableAssessmentProbationReqBody extends Struct<EnableDisableAssessmentProbationReqBody>{

			active:Ref<bool>
			appUrl:Ref<string>
	}
	export interface EnableDisableAssessmentProbationReqBodyBuilder extends Struct<EnableDisableAssessmentProbationReqBodyBuilder>{

			active(active:bool):Ref<EnableDisableAssessmentProbationReqBodyBuilder>
			appUrl(appUrl:string):Ref<EnableDisableAssessmentProbationReqBodyBuilder>
			build():Ref<EnableDisableAssessmentProbationReqBody>
	}
	export interface EnableDisableAssessmentProbationReqBuilder extends Struct<EnableDisableAssessmentProbationReqBuilder>{

			body(body:Ref<EnableDisableAssessmentProbationReqBody>):Ref<EnableDisableAssessmentProbationReqBuilder>
			build():Ref<EnableDisableAssessmentProbationReq>
	}
	export interface EnableDisableAssessmentProbationResp extends Struct<EnableDisableAssessmentProbationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface Enum extends Struct<Enum>{

			enumName:Ref<string>
			display:Ref<I18n>[]
	}
	export interface EnumBuilder extends Struct<EnumBuilder>{

			enumName(enumName:string):Ref<EnumBuilder>
			display(display:Ref<I18n>[]):Ref<EnumBuilder>
			build():Ref<Enum>
	}
	export interface FieldVariableSubVlaue extends Struct<FieldVariableSubVlaue>{

			key:Ref<string>
			value:Ref<FieldVariableValueTo>
	}
	export interface FieldVariableSubVlaueBuilder extends Struct<FieldVariableSubVlaueBuilder>{

			key(key:string):Ref<FieldVariableSubVlaueBuilder>
			value(value:Ref<FieldVariableValueTo>):Ref<FieldVariableSubVlaueBuilder>
			build():Ref<FieldVariableSubVlaue>
	}
	export interface FieldVariableSubVlaueForReview extends Struct<FieldVariableSubVlaueForReview>{

			key:Ref<string>
			value:Ref<FieldVariableValueToForReview>
	}
	export interface FieldVariableSubVlaueForReviewBuilder extends Struct<FieldVariableSubVlaueForReviewBuilder>{

			key(key:string):Ref<FieldVariableSubVlaueForReviewBuilder>
			value(value:Ref<FieldVariableValueToForReview>):Ref<FieldVariableSubVlaueForReviewBuilder>
			build():Ref<FieldVariableSubVlaueForReview>
	}
	export interface FieldVariableValue extends Struct<FieldVariableValue>{

			variableApiName:Ref<string>
			variableName:Ref<FieldVariableValueI18n>
			variableValue:Ref<FieldVariableValueTo>
			subValues:Ref<FieldVariableSubVlaue>[]
	}
	export interface FieldVariableValueBuilder extends Struct<FieldVariableValueBuilder>{

			variableApiName(variableApiName:string):Ref<FieldVariableValueBuilder>
			variableName(variableName:Ref<FieldVariableValueI18n>):Ref<FieldVariableValueBuilder>
			variableValue(variableValue:Ref<FieldVariableValueTo>):Ref<FieldVariableValueBuilder>
			subValues(subValues:Ref<FieldVariableSubVlaue>[]):Ref<FieldVariableValueBuilder>
			build():Ref<FieldVariableValue>
	}
	export interface FieldVariableValueI18n extends Struct<FieldVariableValueI18n>{

			zhCn:Ref<string>
			enUs:Ref<string>
	}
	export interface FieldVariableValueI18nBuilder extends Struct<FieldVariableValueI18nBuilder>{

			zhCn(zhCn:string):Ref<FieldVariableValueI18nBuilder>
			enUs(enUs:string):Ref<FieldVariableValueI18nBuilder>
			build():Ref<FieldVariableValueI18n>
	}
	export interface FieldVariableValueTo extends Struct<FieldVariableValueTo>{

			textValue:Ref<string>
			boolValue:Ref<bool>
			numberValue:Ref<string>
			enumValue:Ref<string>
			dateValue:Ref<string>
			dateTimeValue:Ref<string>
			i18nValue:Ref<FieldVariableValueI18n>
			objectValue:Ref<FieldVariableValueToObject>
			userValue:Ref<string>
			departmentValue:Ref<string>
			recordValue:Ref<FieldVariableValueToRecord>
			employmentValue:Ref<string>
			listValues:string[]
	}
	export interface FieldVariableValueToBuilder extends Struct<FieldVariableValueToBuilder>{

			textValue(textValue:string):Ref<FieldVariableValueToBuilder>
			boolValue(boolValue:bool):Ref<FieldVariableValueToBuilder>
			numberValue(numberValue:string):Ref<FieldVariableValueToBuilder>
			enumValue(enumValue:string):Ref<FieldVariableValueToBuilder>
			dateValue(dateValue:string):Ref<FieldVariableValueToBuilder>
			dateTimeValue(dateTimeValue:string):Ref<FieldVariableValueToBuilder>
			i18nValue(i18nValue:Ref<FieldVariableValueI18n>):Ref<FieldVariableValueToBuilder>
			objectValue(objectValue:Ref<FieldVariableValueToObject>):Ref<FieldVariableValueToBuilder>
			userValue(userValue:string):Ref<FieldVariableValueToBuilder>
			departmentValue(departmentValue:string):Ref<FieldVariableValueToBuilder>
			recordValue(recordValue:Ref<FieldVariableValueToRecord>):Ref<FieldVariableValueToBuilder>
			employmentValue(employmentValue:string):Ref<FieldVariableValueToBuilder>
			listValues(listValues:string[]):Ref<FieldVariableValueToBuilder>
			build():Ref<FieldVariableValueTo>
	}
	export interface FieldVariableValueToEnum extends Struct<FieldVariableValueToEnum>{

			value:Ref<string>
			name:Ref<FieldVariableValueI18n>
	}
	export interface FieldVariableValueToEnumBuilder extends Struct<FieldVariableValueToEnumBuilder>{

			value(value:string):Ref<FieldVariableValueToEnumBuilder>
			name(name:Ref<FieldVariableValueI18n>):Ref<FieldVariableValueToEnumBuilder>
			build():Ref<FieldVariableValueToEnum>
	}
	export interface FieldVariableValueToForReview extends Struct<FieldVariableValueToForReview>{

			textValue:Ref<string>
			boolValue:Ref<bool>
			numberValue:Ref<string>
			enumValue:Ref<string>
			dateValue:Ref<string>
			dateTimeValue:Ref<string>
			i18nValue:Ref<FieldVariableValueI18n>
			objectValue:Ref<FieldVariableValueToObject>
			departmentValue:Ref<string>
			employmentValue:Ref<string>
			listValues:string[]
	}
	export interface FieldVariableValueToForReviewBuilder extends Struct<FieldVariableValueToForReviewBuilder>{

			textValue(textValue:string):Ref<FieldVariableValueToForReviewBuilder>
			boolValue(boolValue:bool):Ref<FieldVariableValueToForReviewBuilder>
			numberValue(numberValue:string):Ref<FieldVariableValueToForReviewBuilder>
			enumValue(enumValue:string):Ref<FieldVariableValueToForReviewBuilder>
			dateValue(dateValue:string):Ref<FieldVariableValueToForReviewBuilder>
			dateTimeValue(dateTimeValue:string):Ref<FieldVariableValueToForReviewBuilder>
			i18nValue(i18nValue:Ref<FieldVariableValueI18n>):Ref<FieldVariableValueToForReviewBuilder>
			objectValue(objectValue:Ref<FieldVariableValueToObject>):Ref<FieldVariableValueToForReviewBuilder>
			departmentValue(departmentValue:string):Ref<FieldVariableValueToForReviewBuilder>
			employmentValue(employmentValue:string):Ref<FieldVariableValueToForReviewBuilder>
			listValues(listValues:string[]):Ref<FieldVariableValueToForReviewBuilder>
			build():Ref<FieldVariableValueToForReview>
	}
	export interface FieldVariableValueToObject extends Struct<FieldVariableValueToObject>{

			wkId:Ref<string>
			wkApiName:Ref<string>
	}
	export interface FieldVariableValueToObjectBuilder extends Struct<FieldVariableValueToObjectBuilder>{

			wkId(wkId:string):Ref<FieldVariableValueToObjectBuilder>
			wkApiName(wkApiName:string):Ref<FieldVariableValueToObjectBuilder>
			build():Ref<FieldVariableValueToObject>
	}
	export interface FieldVariableValueToRecord extends Struct<FieldVariableValueToRecord>{

			variableApiName:Ref<string>
			variableValue:Ref<string>
	}
	export interface FieldVariableValueToRecordBuilder extends Struct<FieldVariableValueToRecordBuilder>{

			variableApiName(variableApiName:string):Ref<FieldVariableValueToRecordBuilder>
			variableValue(variableValue:string):Ref<FieldVariableValueToRecordBuilder>
			build():Ref<FieldVariableValueToRecord>
	}
	export interface File extends Struct<File>{

			id:Ref<string>
			name:Ref<string>
	}
	export interface FileBuilder extends Struct<FileBuilder>{

			id(id:string):Ref<FileBuilder>
			name(name:string):Ref<FileBuilder>
			build():Ref<File>
	}
	//"approved"
	export const FinalAssessmentResultApproved:string
	//"rejected"
	export const FinalAssessmentResultRejected:string
	export interface FormFieldVariableBoolValue extends Struct<FormFieldVariableBoolValue>{

			value:Ref<bool>
	}
	export interface FormFieldVariableBoolValueBuilder extends Struct<FormFieldVariableBoolValueBuilder>{

			value(value:bool):Ref<FormFieldVariableBoolValueBuilder>
			build():Ref<FormFieldVariableBoolValue>
	}
	export interface FormFieldVariableI18nValue extends Struct<FormFieldVariableI18nValue>{

			value:Ref<BpmDataengineI18n>
	}
	export interface FormFieldVariableI18nValueBuilder extends Struct<FormFieldVariableI18nValueBuilder>{

			value(value:Ref<BpmDataengineI18n>):Ref<FormFieldVariableI18nValueBuilder>
			build():Ref<FormFieldVariableI18nValue>
	}
	export interface FormFieldVariableNullValue extends Alias<Nothing>{

	}
	export interface FormFieldVariableNumberValue extends Struct<FormFieldVariableNumberValue>{

			value:Ref<int>
	}
	export interface FormFieldVariableNumberValueBuilder extends Struct<FormFieldVariableNumberValueBuilder>{

			value(value:int):Ref<FormFieldVariableNumberValueBuilder>
			build():Ref<FormFieldVariableNumberValue>
	}
	export interface FormFieldVariableStringValue extends Struct<FormFieldVariableStringValue>{

			value:Ref<string>
	}
	export interface FormFieldVariableStringValueBuilder extends Struct<FormFieldVariableStringValueBuilder>{

			value(value:string):Ref<FormFieldVariableStringValueBuilder>
			build():Ref<FormFieldVariableStringValue>
	}
	export interface FormVariableValueInfo extends Struct<FormVariableValueInfo>{

			textValue:Ref<FormFieldVariableStringValue>
			numberValue:Ref<FormFieldVariableStringValue>
			dateValue:Ref<FormFieldVariableNumberValue>
			employmentValue:Ref<FormFieldVariableStringValue>
			dateTimeValue:Ref<FormFieldVariableNumberValue>
			enumValue:Ref<FormFieldVariableStringValue>
			nullValue:Ref<FormFieldVariableNullValue>
			boolValue:Ref<FormFieldVariableBoolValue>
			departmentValue:Ref<FormFieldVariableStringValue>
			i18nValue:Ref<FormFieldVariableI18nValue>
			objectValue:Ref<FormFieldVariableStringValue>
	}
	export interface FormVariableValueInfoBuilder extends Struct<FormVariableValueInfoBuilder>{

			textValue(textValue:Ref<FormFieldVariableStringValue>):Ref<FormVariableValueInfoBuilder>
			numberValue(numberValue:Ref<FormFieldVariableStringValue>):Ref<FormVariableValueInfoBuilder>
			dateValue(dateValue:Ref<FormFieldVariableNumberValue>):Ref<FormVariableValueInfoBuilder>
			employmentValue(employmentValue:Ref<FormFieldVariableStringValue>):Ref<FormVariableValueInfoBuilder>
			dateTimeValue(dateTimeValue:Ref<FormFieldVariableNumberValue>):Ref<FormVariableValueInfoBuilder>
			enumValue(enumValue:Ref<FormFieldVariableStringValue>):Ref<FormVariableValueInfoBuilder>
			nullValue(nullValue:Ref<FormFieldVariableNullValue>):Ref<FormVariableValueInfoBuilder>
			boolValue(boolValue:Ref<FormFieldVariableBoolValue>):Ref<FormVariableValueInfoBuilder>
			departmentValue(departmentValue:Ref<FormFieldVariableStringValue>):Ref<FormVariableValueInfoBuilder>
			i18nValue(i18nValue:Ref<FormFieldVariableI18nValue>):Ref<FormVariableValueInfoBuilder>
			objectValue(objectValue:Ref<FormFieldVariableStringValue>):Ref<FormVariableValueInfoBuilder>
			build():Ref<FormVariableValueInfo>
	}
	export interface GetByDepartmentBpPathReqBodyBuilder extends Struct<GetByDepartmentBpPathReqBodyBuilder>{

			departmentId(departmentId:string):Ref<GetByDepartmentBpPathReqBodyBuilder>
			build():Ref<GetByDepartmentBpReqBody>
	}
	export interface GetByDepartmentBpReq extends Struct<GetByDepartmentBpReq>{

			body:Ref<GetByDepartmentBpReqBody>
	}
	export interface GetByDepartmentBpReqBody extends Struct<GetByDepartmentBpReqBody>{

			departmentId:Ref<string>
	}
	export interface GetByDepartmentBpReqBodyBuilder extends Struct<GetByDepartmentBpReqBodyBuilder>{

			departmentId(departmentId:string):Ref<GetByDepartmentBpReqBodyBuilder>
			build():Ref<GetByDepartmentBpReqBody>
	}
	export interface GetByDepartmentBpReqBuilder extends Struct<GetByDepartmentBpReqBuilder>{

			userIdType(userIdType:string):Ref<GetByDepartmentBpReqBuilder>
			departmentIdType(departmentIdType:string):Ref<GetByDepartmentBpReqBuilder>
			body(body:Ref<GetByDepartmentBpReqBody>):Ref<GetByDepartmentBpReqBuilder>
			build():Ref<GetByDepartmentBpReq>
	}
	export interface GetByDepartmentBpResp extends Struct<GetByDepartmentBpResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetByDepartmentBpRespData>
			success():bool
	}
	export interface GetByDepartmentBpRespData extends Struct<GetByDepartmentBpRespData>{

			items:Ref<DepartmentHrbp>[]
	}
	export interface GetJobReq extends Struct<GetJobReq>{

	}
	export interface GetJobReqBuilder extends Struct<GetJobReqBuilder>{

			jobId(jobId:string):Ref<GetJobReqBuilder>
			build():Ref<GetJobReq>
	}
	export interface GetJobResp extends Struct<GetJobResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetJobRespData>
			success():bool
	}
	export interface GetJobRespData extends Struct<GetJobRespData>{

			job:Ref<Job>
	}
	export interface GetProcessFormVariableDataReq extends Struct<GetProcessFormVariableDataReq>{

	}
	export interface GetProcessFormVariableDataReqBuilder extends Struct<GetProcessFormVariableDataReqBuilder>{

			processId(processId:string):Ref<GetProcessFormVariableDataReqBuilder>
			userIdType(userIdType:string):Ref<GetProcessFormVariableDataReqBuilder>
			departmentIdType(departmentIdType:string):Ref<GetProcessFormVariableDataReqBuilder>
			build():Ref<GetProcessFormVariableDataReq>
	}
	export interface GetProcessFormVariableDataResp extends Struct<GetProcessFormVariableDataResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetProcessFormVariableDataRespData>
			success():bool
	}
	export interface GetProcessFormVariableDataRespData extends Struct<GetProcessFormVariableDataRespData>{

			fieldVariableValues:Ref<FieldVariableValue>[]
	}
	export interface GetProcessReq extends Struct<GetProcessReq>{

	}
	export interface GetProcessReqBuilder extends Struct<GetProcessReqBuilder>{

			processId(processId:string):Ref<GetProcessReqBuilder>
			userIdType(userIdType:string):Ref<GetProcessReqBuilder>
			build():Ref<GetProcessReq>
	}
	export interface GetProcessResp extends Struct<GetProcessResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetProcessRespData>
			success():bool
	}
	export interface GetProcessRespData extends Struct<GetProcessRespData>{

			processId:Ref<string>
			status:Ref<int>
			flowTemplateId:Ref<string>
			flowTemplateName:Ref<DataengineI18n>
			flowDefinitionId:Ref<string>
			flowDefinitionName:Ref<DataengineI18n>
			initiatorId:Ref<string>
			initiatorName:Ref<DataengineI18n>
			createTime:Ref<string>
			completeTime:Ref<string>
			startLinks:Ref<ProcessLink>
			abstracts:Ref<ProcessAbstractItem>[]
			todos:Ref<ProcessTodoItem>[]
			ccList:Ref<ProcessCcItem>[]
			doneList:Ref<ProcessDoneItem>[]
	}
	export interface HiberarchyCommon extends Struct<HiberarchyCommon>{

			parentId:Ref<string>
			name:Ref<I18n>[]
			type:Ref<Enum>
			active:Ref<bool>
			effectiveTime:Ref<string>
			expirationTime:Ref<string>
			code:Ref<string>
			description:Ref<I18n>[]
			treeOrder:Ref<string>
			listOrder:Ref<string>
			customFields:Ref<ObjectFieldData>[]
	}
	export interface HiberarchyCommonBuilder extends Struct<HiberarchyCommonBuilder>{

			parentId(parentId:string):Ref<HiberarchyCommonBuilder>
			name(name:Ref<I18n>[]):Ref<HiberarchyCommonBuilder>
			type(type_:Ref<Enum>):Ref<HiberarchyCommonBuilder>
			active(active:bool):Ref<HiberarchyCommonBuilder>
			effectiveTime(effectiveTime:string):Ref<HiberarchyCommonBuilder>
			expirationTime(expirationTime:string):Ref<HiberarchyCommonBuilder>
			code(code:string):Ref<HiberarchyCommonBuilder>
			description(description:Ref<I18n>[]):Ref<HiberarchyCommonBuilder>
			treeOrder(treeOrder:string):Ref<HiberarchyCommonBuilder>
			listOrder(listOrder:string):Ref<HiberarchyCommonBuilder>
			customFields(customFields:Ref<ObjectFieldData>[]):Ref<HiberarchyCommonBuilder>
			build():Ref<HiberarchyCommon>
	}
	export interface I18n extends Struct<I18n>{

			lang:Ref<string>
			value:Ref<string>
	}
	export interface I18nBuilder extends Struct<I18nBuilder>{

			lang(lang:string):Ref<I18nBuilder>
			value(value:string):Ref<I18nBuilder>
			build():Ref<I18n>
	}
	export interface I18nV2 extends Struct<I18nV2>{

			zhCn:Ref<string>
			enUs:Ref<string>
	}
	export interface I18nV2Builder extends Struct<I18nV2Builder>{

			zhCn(zhCn:string):Ref<I18nV2Builder>
			enUs(enUs:string):Ref<I18nV2Builder>
			build():Ref<I18nV2>
	}
	export interface InternationalAssignment extends Struct<InternationalAssignment>{

			id:Ref<string>
			assignmentCityId:Ref<string>
			assignmentCompanyId:Ref<string>
			assignmentCountryId:Ref<string>
			assignmentReason:Ref<I18n>
			effectiveTime:Ref<string>
			startAssignmentProcessId:Ref<string>
			endAssignmentProcessId:Ref<string>
			expirationTime:Ref<string>
			internationalAssignmentStatus:Ref<Enum>
			internationalAssignmentType:Ref<Enum>
	}
	export interface InternationalAssignmentBuilder extends Struct<InternationalAssignmentBuilder>{

			id(id:string):Ref<InternationalAssignmentBuilder>
			assignmentCityId(assignmentCityId:string):Ref<InternationalAssignmentBuilder>
			assignmentCompanyId(assignmentCompanyId:string):Ref<InternationalAssignmentBuilder>
			assignmentCountryId(assignmentCountryId:string):Ref<InternationalAssignmentBuilder>
			assignmentReason(assignmentReason:Ref<I18n>):Ref<InternationalAssignmentBuilder>
			effectiveTime(effectiveTime:string):Ref<InternationalAssignmentBuilder>
			startAssignmentProcessId(startAssignmentProcessId:string):Ref<InternationalAssignmentBuilder>
			endAssignmentProcessId(endAssignmentProcessId:string):Ref<InternationalAssignmentBuilder>
			expirationTime(expirationTime:string):Ref<InternationalAssignmentBuilder>
			internationalAssignmentStatus(internationalAssignmentStatus:Ref<Enum>):Ref<InternationalAssignmentBuilder>
			internationalAssignmentType(internationalAssignmentType:Ref<Enum>):Ref<InternationalAssignmentBuilder>
			build():Ref<InternationalAssignment>
	}
	export interface InternationalAssignmentV2 extends Struct<InternationalAssignmentV2>{

			id:Ref<string>
			employmentId:Ref<string>
			createdBy:Ref<string>
			createdAt:Ref<string>
			effectiveTime:Ref<string>
			internationalAssignmentExpectedEndDate:Ref<string>
			expirationTime:Ref<string>
			deletedAt:Ref<string>
			updatedAt:Ref<string>
			updatedBy:Ref<string>
			assignmentCountry:Ref<string>
			assignmentCity:Ref<string>
			assignmentCompany:Ref<string>
			internationalAssignmentStatus:Ref<Enum>
			internationalAssignmentType:Ref<Enum>
			internationalAssignmentAllowance:Ref<bool>
			accommodation:Ref<bool>
			description:Ref<string>
	}
	export interface InternationalAssignmentV2Builder extends Struct<InternationalAssignmentV2Builder>{

			id(id:string):Ref<InternationalAssignmentV2Builder>
			employmentId(employmentId:string):Ref<InternationalAssignmentV2Builder>
			createdBy(createdBy:string):Ref<InternationalAssignmentV2Builder>
			createdAt(createdAt:string):Ref<InternationalAssignmentV2Builder>
			effectiveTime(effectiveTime:string):Ref<InternationalAssignmentV2Builder>
			internationalAssignmentExpectedEndDate(internationalAssignmentExpectedEndDate:string):Ref<InternationalAssignmentV2Builder>
			expirationTime(expirationTime:string):Ref<InternationalAssignmentV2Builder>
			deletedAt(deletedAt:string):Ref<InternationalAssignmentV2Builder>
			updatedAt(updatedAt:string):Ref<InternationalAssignmentV2Builder>
			updatedBy(updatedBy:string):Ref<InternationalAssignmentV2Builder>
			assignmentCountry(assignmentCountry:string):Ref<InternationalAssignmentV2Builder>
			assignmentCity(assignmentCity:string):Ref<InternationalAssignmentV2Builder>
			assignmentCompany(assignmentCompany:string):Ref<InternationalAssignmentV2Builder>
			internationalAssignmentStatus(internationalAssignmentStatus:Ref<Enum>):Ref<InternationalAssignmentV2Builder>
			internationalAssignmentType(internationalAssignmentType:Ref<Enum>):Ref<InternationalAssignmentV2Builder>
			internationalAssignmentAllowance(internationalAssignmentAllowance:bool):Ref<InternationalAssignmentV2Builder>
			accommodation(accommodation:bool):Ref<InternationalAssignmentV2Builder>
			description(description:string):Ref<InternationalAssignmentV2Builder>
			build():Ref<InternationalAssignmentV2>
	}
	export interface InternationalAssignmentV2ForCreate extends Struct<InternationalAssignmentV2ForCreate>{

			employmentId:Ref<string>
			effectiveTime:Ref<string>
			internationalAssignmentExpectedEndDate:Ref<string>
			expirationTime:Ref<string>
			assignmentCountry:Ref<string>
			assignmentCity:Ref<string>
			assignmentCompany:Ref<string>
			internationalAssignmentStatus:Ref<Enum>
			internationalAssignmentType:Ref<Enum>
			internationalAssignmentAllowance:Ref<bool>
			accommodation:Ref<bool>
			description:Ref<string>
	}
	export interface InternationalAssignmentV2ForCreateBuilder extends Struct<InternationalAssignmentV2ForCreateBuilder>{

			employmentId(employmentId:string):Ref<InternationalAssignmentV2ForCreateBuilder>
			effectiveTime(effectiveTime:string):Ref<InternationalAssignmentV2ForCreateBuilder>
			internationalAssignmentExpectedEndDate(internationalAssignmentExpectedEndDate:string):Ref<InternationalAssignmentV2ForCreateBuilder>
			expirationTime(expirationTime:string):Ref<InternationalAssignmentV2ForCreateBuilder>
			assignmentCountry(assignmentCountry:string):Ref<InternationalAssignmentV2ForCreateBuilder>
			assignmentCity(assignmentCity:string):Ref<InternationalAssignmentV2ForCreateBuilder>
			assignmentCompany(assignmentCompany:string):Ref<InternationalAssignmentV2ForCreateBuilder>
			internationalAssignmentStatus(internationalAssignmentStatus:Ref<Enum>):Ref<InternationalAssignmentV2ForCreateBuilder>
			internationalAssignmentType(internationalAssignmentType:Ref<Enum>):Ref<InternationalAssignmentV2ForCreateBuilder>
			internationalAssignmentAllowance(internationalAssignmentAllowance:bool):Ref<InternationalAssignmentV2ForCreateBuilder>
			accommodation(accommodation:bool):Ref<InternationalAssignmentV2ForCreateBuilder>
			description(description:string):Ref<InternationalAssignmentV2ForCreateBuilder>
			build():Ref<InternationalAssignmentV2ForCreate>
	}
	export interface InternationalAssignmentV2ForPatch extends Struct<InternationalAssignmentV2ForPatch>{

			effectiveTime:Ref<string>
			internationalAssignmentExpectedEndDate:Ref<string>
			expirationTime:Ref<string>
			assignmentCountry:Ref<string>
			assignmentCity:Ref<string>
			assignmentCompany:Ref<string>
			internationalAssignmentStatus:Ref<Enum>
			internationalAssignmentType:Ref<Enum>
			internationalAssignmentAllowance:Ref<bool>
			accommodation:Ref<bool>
			description:Ref<string>
	}
	export interface InternationalAssignmentV2ForPatchBuilder extends Struct<InternationalAssignmentV2ForPatchBuilder>{

			effectiveTime(effectiveTime:string):Ref<InternationalAssignmentV2ForPatchBuilder>
			internationalAssignmentExpectedEndDate(internationalAssignmentExpectedEndDate:string):Ref<InternationalAssignmentV2ForPatchBuilder>
			expirationTime(expirationTime:string):Ref<InternationalAssignmentV2ForPatchBuilder>
			assignmentCountry(assignmentCountry:string):Ref<InternationalAssignmentV2ForPatchBuilder>
			assignmentCity(assignmentCity:string):Ref<InternationalAssignmentV2ForPatchBuilder>
			assignmentCompany(assignmentCompany:string):Ref<InternationalAssignmentV2ForPatchBuilder>
			internationalAssignmentStatus(internationalAssignmentStatus:Ref<Enum>):Ref<InternationalAssignmentV2ForPatchBuilder>
			internationalAssignmentType(internationalAssignmentType:Ref<Enum>):Ref<InternationalAssignmentV2ForPatchBuilder>
			internationalAssignmentAllowance(internationalAssignmentAllowance:bool):Ref<InternationalAssignmentV2ForPatchBuilder>
			accommodation(accommodation:bool):Ref<InternationalAssignmentV2ForPatchBuilder>
			description(description:string):Ref<InternationalAssignmentV2ForPatchBuilder>
			build():Ref<InternationalAssignmentV2ForPatch>
	}
	export interface Job extends Struct<Job>{

			id:Ref<string>
			code:Ref<string>
			name:Ref<I18n>[]
			description:Ref<I18n>[]
			active:Ref<bool>
			jobTitle:Ref<I18n>[]
			jobFamilyIdList:string[]
			jobLevelIdList:string[]
			workingHoursTypeId:Ref<string>
			effectiveTime:Ref<string>
			expirationTime:Ref<string>
			customFields:Ref<ObjectFieldData>[]
	}
	export interface JobBuilder extends Struct<JobBuilder>{

			id(id:string):Ref<JobBuilder>
			code(code:string):Ref<JobBuilder>
			name(name:Ref<I18n>[]):Ref<JobBuilder>
			description(description:Ref<I18n>[]):Ref<JobBuilder>
			active(active:bool):Ref<JobBuilder>
			jobTitle(jobTitle:Ref<I18n>[]):Ref<JobBuilder>
			jobFamilyIdList(jobFamilyIdList:string[]):Ref<JobBuilder>
			jobLevelIdList(jobLevelIdList:string[]):Ref<JobBuilder>
			workingHoursTypeId(workingHoursTypeId:string):Ref<JobBuilder>
			effectiveTime(effectiveTime:string):Ref<JobBuilder>
			expirationTime(expirationTime:string):Ref<JobBuilder>
			customFields(customFields:Ref<ObjectFieldData>[]):Ref<JobBuilder>
			build():Ref<Job>
	}
	export interface JobChange extends Struct<JobChange>{

			jobChangeId:Ref<string>
			employmentId:Ref<string>
			status:Ref<string>
			transferTypeUniqueIdentifier:Ref<string>
			transferReasonUniqueIdentifier:Ref<string>
			processId:Ref<string>
			effectiveDate:Ref<string>
			createdTime:Ref<string>
			updatedTime:Ref<string>
			transferInfo:Ref<TransferInfo>
	}
	export interface JobChangeBuilder extends Struct<JobChangeBuilder>{

			jobChangeId(jobChangeId:string):Ref<JobChangeBuilder>
			employmentId(employmentId:string):Ref<JobChangeBuilder>
			status(status:string):Ref<JobChangeBuilder>
			transferTypeUniqueIdentifier(transferTypeUniqueIdentifier:string):Ref<JobChangeBuilder>
			transferReasonUniqueIdentifier(transferReasonUniqueIdentifier:string):Ref<JobChangeBuilder>
			processId(processId:string):Ref<JobChangeBuilder>
			effectiveDate(effectiveDate:string):Ref<JobChangeBuilder>
			createdTime(createdTime:string):Ref<JobChangeBuilder>
			updatedTime(updatedTime:string):Ref<JobChangeBuilder>
			transferInfo(transferInfo:Ref<TransferInfo>):Ref<JobChangeBuilder>
			build():Ref<JobChange>
	}
	export interface JobData extends Struct<JobData>{

			jobDataId:Ref<string>
			versionId:Ref<string>
			employeeTypeId:Ref<string>
			workingHoursTypeId:Ref<string>
			workLocationId:Ref<string>
			departmentId:Ref<string>
			jobId:Ref<string>
			jobLevelId:Ref<string>
			jobGradeId:Ref<string>
			jobFamilyId:Ref<string>
			probationStartDate:Ref<string>
			probationEndDate:Ref<string>
			primaryJobData:Ref<bool>
			employmentId:Ref<string>
			effectiveTime:Ref<string>
			expirationTime:Ref<string>
			assignmentStartReason:Ref<Enum>
			probationExpectedEndDate:Ref<string>
			probationOutcome:Ref<Enum>
			directManager:Ref<BasicJobData>
			dottedLineManagers:Ref<BasicJobData>[]
			secondDirectManager:Ref<BasicJobData>
			costCenterRates:Ref<JobDataCostCenter>[]
			workShift:Ref<Enum>
			compensationType:Ref<Enum>
			serviceCompany:Ref<string>
	}
	export interface JobDataBuilder extends Struct<JobDataBuilder>{

			jobDataId(jobDataId:string):Ref<JobDataBuilder>
			versionId(versionId:string):Ref<JobDataBuilder>
			employeeTypeId(employeeTypeId:string):Ref<JobDataBuilder>
			workingHoursTypeId(workingHoursTypeId:string):Ref<JobDataBuilder>
			workLocationId(workLocationId:string):Ref<JobDataBuilder>
			departmentId(departmentId:string):Ref<JobDataBuilder>
			jobId(jobId:string):Ref<JobDataBuilder>
			jobLevelId(jobLevelId:string):Ref<JobDataBuilder>
			jobGradeId(jobGradeId:string):Ref<JobDataBuilder>
			jobFamilyId(jobFamilyId:string):Ref<JobDataBuilder>
			probationStartDate(probationStartDate:string):Ref<JobDataBuilder>
			probationEndDate(probationEndDate:string):Ref<JobDataBuilder>
			primaryJobData(primaryJobData:bool):Ref<JobDataBuilder>
			employmentId(employmentId:string):Ref<JobDataBuilder>
			effectiveTime(effectiveTime:string):Ref<JobDataBuilder>
			expirationTime(expirationTime:string):Ref<JobDataBuilder>
			assignmentStartReason(assignmentStartReason:Ref<Enum>):Ref<JobDataBuilder>
			probationExpectedEndDate(probationExpectedEndDate:string):Ref<JobDataBuilder>
			probationOutcome(probationOutcome:Ref<Enum>):Ref<JobDataBuilder>
			directManager(directManager:Ref<BasicJobData>):Ref<JobDataBuilder>
			dottedLineManagers(dottedLineManagers:Ref<BasicJobData>[]):Ref<JobDataBuilder>
			secondDirectManager(secondDirectManager:Ref<BasicJobData>):Ref<JobDataBuilder>
			costCenterRates(costCenterRates:Ref<JobDataCostCenter>[]):Ref<JobDataBuilder>
			workShift(workShift:Ref<Enum>):Ref<JobDataBuilder>
			compensationType(compensationType:Ref<Enum>):Ref<JobDataBuilder>
			serviceCompany(serviceCompany:string):Ref<JobDataBuilder>
			build():Ref<JobData>
	}
	export interface JobDataCostCenter extends Struct<JobDataCostCenter>{

			costCenterId:Ref<string>
			rate:Ref<int>
	}
	export interface JobDataCostCenterBuilder extends Struct<JobDataCostCenterBuilder>{

			costCenterId(costCenterId:string):Ref<JobDataCostCenterBuilder>
			rate(rate:int):Ref<JobDataCostCenterBuilder>
			build():Ref<JobDataCostCenter>
	}
	export interface JobFamily extends Struct<JobFamily>{

			jobFamilyId:Ref<string>
			name:Ref<I18n>[]
			active:Ref<bool>
			parentId:Ref<string>
			effectiveTime:Ref<string>
			expirationTime:Ref<string>
			code:Ref<string>
			customFields:Ref<CustomFieldData>[]
	}
	export interface JobFamilyBuilder extends Struct<JobFamilyBuilder>{

			jobFamilyId(jobFamilyId:string):Ref<JobFamilyBuilder>
			name(name:Ref<I18n>[]):Ref<JobFamilyBuilder>
			active(active:bool):Ref<JobFamilyBuilder>
			parentId(parentId:string):Ref<JobFamilyBuilder>
			effectiveTime(effectiveTime:string):Ref<JobFamilyBuilder>
			expirationTime(expirationTime:string):Ref<JobFamilyBuilder>
			code(code:string):Ref<JobFamilyBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<JobFamilyBuilder>
			build():Ref<JobFamily>
	}
	export interface JobGrade extends Struct<JobGrade>{

			jobGradeId:Ref<string>
			gradeOrder:Ref<int>
			code:Ref<string>
			names:Ref<I18n>[]
			descriptions:Ref<I18n>[]
			active:Ref<bool>
	}
	export interface JobGradeBuilder extends Struct<JobGradeBuilder>{

			jobGradeId(jobGradeId:string):Ref<JobGradeBuilder>
			gradeOrder(gradeOrder:int):Ref<JobGradeBuilder>
			code(code:string):Ref<JobGradeBuilder>
			names(names:Ref<I18n>[]):Ref<JobGradeBuilder>
			descriptions(descriptions:Ref<I18n>[]):Ref<JobGradeBuilder>
			active(active:bool):Ref<JobGradeBuilder>
			build():Ref<JobGrade>
	}
	export interface JobLevel extends Struct<JobLevel>{

			jobLevelId:Ref<string>
			levelOrder:Ref<int>
			code:Ref<string>
			name:Ref<I18n>[]
			description:Ref<I18n>[]
			active:Ref<bool>
			customFields:Ref<CustomFieldData>[]
	}
	export interface JobLevelBuilder extends Struct<JobLevelBuilder>{

			jobLevelId(jobLevelId:string):Ref<JobLevelBuilder>
			levelOrder(levelOrder:int):Ref<JobLevelBuilder>
			code(code:string):Ref<JobLevelBuilder>
			name(name:Ref<I18n>[]):Ref<JobLevelBuilder>
			description(description:Ref<I18n>[]):Ref<JobLevelBuilder>
			active(active:bool):Ref<JobLevelBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<JobLevelBuilder>
			build():Ref<JobLevel>
	}
	export interface LangText extends Struct<LangText>{

			lang:Ref<string>
			value:Ref<string>
	}
	export interface LangTextBuilder extends Struct<LangTextBuilder>{

			lang(lang:string):Ref<LangTextBuilder>
			value(value:string):Ref<LangTextBuilder>
			build():Ref<LangText>
	}
	export interface LeaveAccrualRecord extends Struct<LeaveAccrualRecord>{

			id:Ref<string>
			employmentId:Ref<string>
			leaveTypeId:Ref<string>
			grantingQuantity:Ref<string>
			grantingUnit:Ref<int>
			effectiveDate:Ref<string>
			expirationDate:Ref<string>
			grantedBy:Ref<int>
			reason:Ref<LangText>[]
			createdAt:Ref<string>
			createdBy:Ref<string>
			updatedAt:Ref<string>
			updatedBy:Ref<string>
	}
	export interface LeaveAccrualRecordBuilder extends Struct<LeaveAccrualRecordBuilder>{

			id(id:string):Ref<LeaveAccrualRecordBuilder>
			employmentId(employmentId:string):Ref<LeaveAccrualRecordBuilder>
			leaveTypeId(leaveTypeId:string):Ref<LeaveAccrualRecordBuilder>
			grantingQuantity(grantingQuantity:string):Ref<LeaveAccrualRecordBuilder>
			grantingUnit(grantingUnit:int):Ref<LeaveAccrualRecordBuilder>
			effectiveDate(effectiveDate:string):Ref<LeaveAccrualRecordBuilder>
			expirationDate(expirationDate:string):Ref<LeaveAccrualRecordBuilder>
			grantedBy(grantedBy:int):Ref<LeaveAccrualRecordBuilder>
			reason(reason:Ref<LangText>[]):Ref<LeaveAccrualRecordBuilder>
			createdAt(createdAt:string):Ref<LeaveAccrualRecordBuilder>
			createdBy(createdBy:string):Ref<LeaveAccrualRecordBuilder>
			updatedAt(updatedAt:string):Ref<LeaveAccrualRecordBuilder>
			updatedBy(updatedBy:string):Ref<LeaveAccrualRecordBuilder>
			build():Ref<LeaveAccrualRecord>
	}
	export interface LeaveBalance extends Struct<LeaveBalance>{

			leaveTypeId:Ref<string>
			leaveTypeName:Ref<I18n>[]
			historicalCyclesLeft:Ref<string>
			thisCycleTotal:Ref<string>
			thisCycleTaken:Ref<string>
			leaveBalance:Ref<string>
			leaveDurationUnit:Ref<int>
	}
	export interface LeaveBalanceBuilder extends Struct<LeaveBalanceBuilder>{

			leaveTypeId(leaveTypeId:string):Ref<LeaveBalanceBuilder>
			leaveTypeName(leaveTypeName:Ref<I18n>[]):Ref<LeaveBalanceBuilder>
			historicalCyclesLeft(historicalCyclesLeft:string):Ref<LeaveBalanceBuilder>
			thisCycleTotal(thisCycleTotal:string):Ref<LeaveBalanceBuilder>
			thisCycleTaken(thisCycleTaken:string):Ref<LeaveBalanceBuilder>
			leaveBalance(leaveBalance:string):Ref<LeaveBalanceBuilder>
			leaveDurationUnit(leaveDurationUnit:int):Ref<LeaveBalanceBuilder>
			build():Ref<LeaveBalance>
	}
	export interface LeaveEmployExpireRecord extends Struct<LeaveEmployExpireRecord>{

			id:Ref<string>
			employmentId:Ref<string>
			leaveTypeId:Ref<string>
			grantingQuantity:Ref<string>
			leftGrantingQuantity:Ref<string>
			grantingUnit:Ref<int>
			effectiveDate:Ref<string>
			expirationDate:Ref<string>
			reason:Ref<LangText>[]
			isUpdateByExternal:Ref<bool>
			accrualSource:Ref<int>
			leaveSubTypeId:Ref<string>
	}
	export interface LeaveEmployExpireRecordBuilder extends Struct<LeaveEmployExpireRecordBuilder>{

			id(id:string):Ref<LeaveEmployExpireRecordBuilder>
			employmentId(employmentId:string):Ref<LeaveEmployExpireRecordBuilder>
			leaveTypeId(leaveTypeId:string):Ref<LeaveEmployExpireRecordBuilder>
			grantingQuantity(grantingQuantity:string):Ref<LeaveEmployExpireRecordBuilder>
			leftGrantingQuantity(leftGrantingQuantity:string):Ref<LeaveEmployExpireRecordBuilder>
			grantingUnit(grantingUnit:int):Ref<LeaveEmployExpireRecordBuilder>
			effectiveDate(effectiveDate:string):Ref<LeaveEmployExpireRecordBuilder>
			expirationDate(expirationDate:string):Ref<LeaveEmployExpireRecordBuilder>
			reason(reason:Ref<LangText>[]):Ref<LeaveEmployExpireRecordBuilder>
			isUpdateByExternal(isUpdateByExternal:bool):Ref<LeaveEmployExpireRecordBuilder>
			accrualSource(accrualSource:int):Ref<LeaveEmployExpireRecordBuilder>
			leaveSubTypeId(leaveSubTypeId:string):Ref<LeaveEmployExpireRecordBuilder>
			build():Ref<LeaveEmployExpireRecord>
	}
	export interface LeaveGrantingRecord extends Struct<LeaveGrantingRecord>{

			id:Ref<string>
			employmentId:Ref<string>
			leaveTypeId:Ref<string>
			grantingQuantity:Ref<string>
			grantingUnit:Ref<int>
			effectiveDate:Ref<string>
			expirationDate:Ref<string>
			grantedBy:Ref<int>
			reason:Ref<I18n>[]
			createdAt:Ref<string>
			createdBy:Ref<string>
			updatedAt:Ref<string>
			updatedBy:Ref<string>
			sectionType:Ref<int>
	}
	export interface LeaveGrantingRecordBuilder extends Struct<LeaveGrantingRecordBuilder>{

			id(id:string):Ref<LeaveGrantingRecordBuilder>
			employmentId(employmentId:string):Ref<LeaveGrantingRecordBuilder>
			leaveTypeId(leaveTypeId:string):Ref<LeaveGrantingRecordBuilder>
			grantingQuantity(grantingQuantity:string):Ref<LeaveGrantingRecordBuilder>
			grantingUnit(grantingUnit:int):Ref<LeaveGrantingRecordBuilder>
			effectiveDate(effectiveDate:string):Ref<LeaveGrantingRecordBuilder>
			expirationDate(expirationDate:string):Ref<LeaveGrantingRecordBuilder>
			grantedBy(grantedBy:int):Ref<LeaveGrantingRecordBuilder>
			reason(reason:Ref<I18n>[]):Ref<LeaveGrantingRecordBuilder>
			createdAt(createdAt:string):Ref<LeaveGrantingRecordBuilder>
			createdBy(createdBy:string):Ref<LeaveGrantingRecordBuilder>
			updatedAt(updatedAt:string):Ref<LeaveGrantingRecordBuilder>
			updatedBy(updatedBy:string):Ref<LeaveGrantingRecordBuilder>
			sectionType(sectionType:int):Ref<LeaveGrantingRecordBuilder>
			build():Ref<LeaveGrantingRecord>
	}
	export interface LeaveRequest extends Struct<LeaveRequest>{

			leaveRequestId:Ref<string>
			employmentId:Ref<string>
			employmentName:Ref<I18n>[]
			leaveTypeId:Ref<string>
			leaveTypeName:Ref<I18n>[]
			startTime:Ref<string>
			endTime:Ref<string>
			leaveDuration:Ref<string>
			leaveDurationUnit:Ref<int>
			leaveRequestStatus:Ref<int>
			grantSource:Ref<string>
			returnTime:Ref<string>
			submittedAt:Ref<string>
			submittedBy:Ref<string>
			notes:Ref<string>
			approvalDate:Ref<string>
			isDeducted:Ref<bool>
			detail:Ref<LeaveRequestDetail>[]
			leaveTypeCode:Ref<string>
			actualEndDate:Ref<string>
			estimatedEndDate:Ref<string>
			timeZone:Ref<string>
			dataSource:Ref<int>
			leaveProcessId:string[]
			leaveCorrectProcessId:string[]
			leaveCancelProcessId:string[]
			leaveReturnProcessId:string[]
			wdPaidType:Ref<int>
	}
	export interface LeaveRequestBuilder extends Struct<LeaveRequestBuilder>{

			leaveRequestId(leaveRequestId:string):Ref<LeaveRequestBuilder>
			employmentId(employmentId:string):Ref<LeaveRequestBuilder>
			employmentName(employmentName:Ref<I18n>[]):Ref<LeaveRequestBuilder>
			leaveTypeId(leaveTypeId:string):Ref<LeaveRequestBuilder>
			leaveTypeName(leaveTypeName:Ref<I18n>[]):Ref<LeaveRequestBuilder>
			startTime(startTime:string):Ref<LeaveRequestBuilder>
			endTime(endTime:string):Ref<LeaveRequestBuilder>
			leaveDuration(leaveDuration:string):Ref<LeaveRequestBuilder>
			leaveDurationUnit(leaveDurationUnit:int):Ref<LeaveRequestBuilder>
			leaveRequestStatus(leaveRequestStatus:int):Ref<LeaveRequestBuilder>
			grantSource(grantSource:string):Ref<LeaveRequestBuilder>
			returnTime(returnTime:string):Ref<LeaveRequestBuilder>
			submittedAt(submittedAt:string):Ref<LeaveRequestBuilder>
			submittedBy(submittedBy:string):Ref<LeaveRequestBuilder>
			notes(notes:string):Ref<LeaveRequestBuilder>
			approvalDate(approvalDate:string):Ref<LeaveRequestBuilder>
			isDeducted(isDeducted:bool):Ref<LeaveRequestBuilder>
			detail(detail:Ref<LeaveRequestDetail>[]):Ref<LeaveRequestBuilder>
			leaveTypeCode(leaveTypeCode:string):Ref<LeaveRequestBuilder>
			actualEndDate(actualEndDate:string):Ref<LeaveRequestBuilder>
			estimatedEndDate(estimatedEndDate:string):Ref<LeaveRequestBuilder>
			timeZone(timeZone:string):Ref<LeaveRequestBuilder>
			dataSource(dataSource:int):Ref<LeaveRequestBuilder>
			leaveProcessId(leaveProcessId:string[]):Ref<LeaveRequestBuilder>
			leaveCorrectProcessId(leaveCorrectProcessId:string[]):Ref<LeaveRequestBuilder>
			leaveCancelProcessId(leaveCancelProcessId:string[]):Ref<LeaveRequestBuilder>
			leaveReturnProcessId(leaveReturnProcessId:string[]):Ref<LeaveRequestBuilder>
			wdPaidType(wdPaidType:int):Ref<LeaveRequestBuilder>
			build():Ref<LeaveRequest>
	}
	export interface LeaveRequestDetail extends Struct<LeaveRequestDetail>{

			leaveRequestId:Ref<string>
			leaveDate:Ref<string>
			leaveDuration:Ref<string>
			leaveDurationUnit:Ref<int>
			paidType:Ref<int>
	}
	export interface LeaveRequestDetailBuilder extends Struct<LeaveRequestDetailBuilder>{

			leaveRequestId(leaveRequestId:string):Ref<LeaveRequestDetailBuilder>
			leaveDate(leaveDate:string):Ref<LeaveRequestDetailBuilder>
			leaveDuration(leaveDuration:string):Ref<LeaveRequestDetailBuilder>
			leaveDurationUnit(leaveDurationUnit:int):Ref<LeaveRequestDetailBuilder>
			paidType(paidType:int):Ref<LeaveRequestDetailBuilder>
			build():Ref<LeaveRequestDetail>
	}
	export interface ListBpIterator extends Struct<ListBpIterator>{

			next():[bool,Ref<Bp>]
			nextPageToken():Ref<string>
	}
	export interface ListBpReq extends Struct<ListBpReq>{

			limit:int
	}
	export interface ListBpReqBuilder extends Struct<ListBpReqBuilder>{

			limit(limit:int):Ref<ListBpReqBuilder>
			pageSize(pageSize:int):Ref<ListBpReqBuilder>
			pageToken(pageToken:string):Ref<ListBpReqBuilder>
			userIdType(userIdType:string):Ref<ListBpReqBuilder>
			departmentIdType(departmentIdType:string):Ref<ListBpReqBuilder>
			build():Ref<ListBpReq>
	}
	export interface ListBpResp extends Struct<ListBpResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListBpRespData>
			success():bool
	}
	export interface ListBpRespData extends Struct<ListBpRespData>{

			items:Ref<Bp>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface ListJobReq extends Struct<ListJobReq>{

	}
	export interface ListJobReqBuilder extends Struct<ListJobReqBuilder>{

			pageToken(pageToken:string):Ref<ListJobReqBuilder>
			pageSize(pageSize:string):Ref<ListJobReqBuilder>
			name(name:string):Ref<ListJobReqBuilder>
			queryLanguage(queryLanguage:string):Ref<ListJobReqBuilder>
			build():Ref<ListJobReq>
	}
	export interface ListJobResp extends Struct<ListJobResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListJobRespData>
			success():bool
	}
	export interface ListJobRespData extends Struct<ListJobRespData>{

			items:Ref<Job>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListProcessIterator extends Struct<ListProcessIterator>{

			next():[bool,string]
			nextPageToken():Ref<string>
	}
	export interface ListProcessReq extends Struct<ListProcessReq>{

			limit:int
	}
	export interface ListProcessReqBuilder extends Struct<ListProcessReqBuilder>{

			limit(limit:int):Ref<ListProcessReqBuilder>
			modifyTimeTo(modifyTimeTo:string):Ref<ListProcessReqBuilder>
			statuses(statuses:int[]):Ref<ListProcessReqBuilder>
			pageToken(pageToken:string):Ref<ListProcessReqBuilder>
			pageSize(pageSize:int):Ref<ListProcessReqBuilder>
			modifyTimeFrom(modifyTimeFrom:string):Ref<ListProcessReqBuilder>
			flowDefinitionId(flowDefinitionId:string):Ref<ListProcessReqBuilder>
			build():Ref<ListProcessReq>
	}
	export interface ListProcessResp extends Struct<ListProcessResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListProcessRespData>
			success():bool
	}
	export interface ListProcessRespData extends Struct<ListProcessRespData>{

			processIds:string[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface Location extends Struct<Location>{

			locationId:Ref<string>
			hiberarchyCommon:Ref<HiberarchyCommon>
			locationUsageList:Ref<Enum>[]
			address:Ref<Address>[]
			workingHoursTypeId:Ref<string>
			effectiveTime:Ref<string>
			expirationTime:Ref<string>
			customFields:Ref<CustomFieldData>[]
			locale:Ref<Enum>
			timeZoneId:Ref<string>
			displayLanguageId:Ref<string>
	}
	export interface LocationBuilder extends Struct<LocationBuilder>{

			locationId(locationId:string):Ref<LocationBuilder>
			hiberarchyCommon(hiberarchyCommon:Ref<HiberarchyCommon>):Ref<LocationBuilder>
			locationUsageList(locationUsageList:Ref<Enum>[]):Ref<LocationBuilder>
			address(address:Ref<Address>[]):Ref<LocationBuilder>
			workingHoursTypeId(workingHoursTypeId:string):Ref<LocationBuilder>
			effectiveTime(effectiveTime:string):Ref<LocationBuilder>
			expirationTime(expirationTime:string):Ref<LocationBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<LocationBuilder>
			locale(locale:Ref<Enum>):Ref<LocationBuilder>
			timeZoneId(timeZoneId:string):Ref<LocationBuilder>
			displayLanguageId(displayLanguageId:string):Ref<LocationBuilder>
			build():Ref<Location>
	}
	export interface LocationV2 extends Struct<LocationV2>{

			locationId:Ref<string>
			parentLocationId:Ref<string>
			names:Ref<I18n>[]
			code:Ref<string>
			active:Ref<bool>
			locationUsages:Ref<Enum>[]
			addresses:Ref<Address>[]
			workingHoursTypeId:Ref<string>
			effectiveTime:Ref<string>
			expirationTime:Ref<string>
			customFields:Ref<CustomFieldData>[]
			locale:Ref<Enum>
			timeZoneId:Ref<string>
			displayLanguageId:Ref<string>
	}
	export interface LocationV2Builder extends Struct<LocationV2Builder>{

			locationId(locationId:string):Ref<LocationV2Builder>
			parentLocationId(parentLocationId:string):Ref<LocationV2Builder>
			names(names:Ref<I18n>[]):Ref<LocationV2Builder>
			code(code:string):Ref<LocationV2Builder>
			active(active:bool):Ref<LocationV2Builder>
			locationUsages(locationUsages:Ref<Enum>[]):Ref<LocationV2Builder>
			addresses(addresses:Ref<Address>[]):Ref<LocationV2Builder>
			workingHoursTypeId(workingHoursTypeId:string):Ref<LocationV2Builder>
			effectiveTime(effectiveTime:string):Ref<LocationV2Builder>
			expirationTime(expirationTime:string):Ref<LocationV2Builder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<LocationV2Builder>
			locale(locale:Ref<Enum>):Ref<LocationV2Builder>
			timeZoneId(timeZoneId:string):Ref<LocationV2Builder>
			displayLanguageId(displayLanguageId:string):Ref<LocationV2Builder>
			build():Ref<LocationV2>
	}
	export interface MatchRule extends Struct<MatchRule>{

			leftValue:Ref<string>
			operator:Ref<string>
			rightValues:string[]
	}
	export interface MatchRuleBuilder extends Struct<MatchRuleBuilder>{

			leftValue(leftValue:string):Ref<MatchRuleBuilder>
			operator(operator:string):Ref<MatchRuleBuilder>
			rightValues(rightValues:string[]):Ref<MatchRuleBuilder>
			build():Ref<MatchRule>
	}
	export interface MatchRules extends Struct<MatchRules>{

			matchRules:Ref<MatchRule>[]
	}
	export interface MatchRulesBuilder extends Struct<MatchRulesBuilder>{

			matchRules(matchRules:Ref<MatchRule>[]):Ref<MatchRulesBuilder>
			build():Ref<MatchRules>
	}
	export interface Name extends Struct<Name>{

			fullName:Ref<string>
			firstName:Ref<string>
			middleName:Ref<string>
			namePrimary:Ref<string>
			localFirstName:Ref<string>
			localMiddleName:Ref<string>
			localPrimary:Ref<string>
			countryRegionId:Ref<string>
			customLocalName:Ref<string>
			customWesternName:Ref<string>
	}
	export interface NameBuilder extends Struct<NameBuilder>{

			fullName(fullName:string):Ref<NameBuilder>
			firstName(firstName:string):Ref<NameBuilder>
			middleName(middleName:string):Ref<NameBuilder>
			namePrimary(namePrimary:string):Ref<NameBuilder>
			localFirstName(localFirstName:string):Ref<NameBuilder>
			localMiddleName(localMiddleName:string):Ref<NameBuilder>
			localPrimary(localPrimary:string):Ref<NameBuilder>
			countryRegionId(countryRegionId:string):Ref<NameBuilder>
			customLocalName(customLocalName:string):Ref<NameBuilder>
			customWesternName(customWesternName:string):Ref<NameBuilder>
			build():Ref<Name>
	}
	export interface NameForUpdate extends Struct<NameForUpdate>{

			fullName:Ref<string>
			firstName:Ref<string>
			middleName:Ref<string>
			namePrimary:Ref<string>
			localFirstName:Ref<string>
			localMiddleName:Ref<string>
			localPrimary:Ref<string>
			customLocalName:Ref<string>
			customWesternName:Ref<string>
			countryRegion:Ref<string>
			nameType:Ref<string>
	}
	export interface NameForUpdateBuilder extends Struct<NameForUpdateBuilder>{

			fullName(fullName:string):Ref<NameForUpdateBuilder>
			firstName(firstName:string):Ref<NameForUpdateBuilder>
			middleName(middleName:string):Ref<NameForUpdateBuilder>
			namePrimary(namePrimary:string):Ref<NameForUpdateBuilder>
			localFirstName(localFirstName:string):Ref<NameForUpdateBuilder>
			localMiddleName(localMiddleName:string):Ref<NameForUpdateBuilder>
			localPrimary(localPrimary:string):Ref<NameForUpdateBuilder>
			customLocalName(customLocalName:string):Ref<NameForUpdateBuilder>
			customWesternName(customWesternName:string):Ref<NameForUpdateBuilder>
			countryRegion(countryRegion:string):Ref<NameForUpdateBuilder>
			nameType(nameType:string):Ref<NameForUpdateBuilder>
			build():Ref<NameForUpdate>
	}
	export interface NationalId extends Struct<NationalId>{

			nationalIdTypeId:Ref<string>
			nationalIdNumber:Ref<string>
			issueDate:Ref<string>
			expirationDate:Ref<string>
			countryRegionId:Ref<string>
			issuedBy:Ref<string>
			customFields:Ref<CustomFieldData>[]
	}
	export interface NationalIdBuilder extends Struct<NationalIdBuilder>{

			nationalIdTypeId(nationalIdTypeId:string):Ref<NationalIdBuilder>
			nationalIdNumber(nationalIdNumber:string):Ref<NationalIdBuilder>
			issueDate(issueDate:string):Ref<NationalIdBuilder>
			expirationDate(expirationDate:string):Ref<NationalIdBuilder>
			countryRegionId(countryRegionId:string):Ref<NationalIdBuilder>
			issuedBy(issuedBy:string):Ref<NationalIdBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<NationalIdBuilder>
			build():Ref<NationalId>
	}
	export interface Nationality extends Struct<Nationality>{

			nationalityId:Ref<string>
			name:Ref<I18n>[]
			alpha2Code:Ref<string>
			alpha3Code:Ref<string>
			numericCode:Ref<int>
			countryRegionId:Ref<string>
			status:Ref<int>
	}
	export interface NationalityBuilder extends Struct<NationalityBuilder>{

			nationalityId(nationalityId:string):Ref<NationalityBuilder>
			name(name:Ref<I18n>[]):Ref<NationalityBuilder>
			alpha2Code(alpha2Code:string):Ref<NationalityBuilder>
			alpha3Code(alpha3Code:string):Ref<NationalityBuilder>
			numericCode(numericCode:int):Ref<NationalityBuilder>
			countryRegionId(countryRegionId:string):Ref<NationalityBuilder>
			status(status:int):Ref<NationalityBuilder>
			build():Ref<Nationality>
	}
	export function New(config:Ref<larkcore.Config>):Ref<V2>

	export function newAbnormalReasonBuilder():Ref<AbnormalReasonBuilder>

	export function newAbnormalReasonElementBuilder():Ref<AbnormalReasonElementBuilder>

	export function newAbnormalReasonI18nElementBuilder():Ref<AbnormalReasonI18nElementBuilder>

	export function newAddressBuilder():Ref<AddressBuilder>

	export function newApprovalGroupBuilder():Ref<ApprovalGroupBuilder>

	export function newAssessmentBuilder():Ref<AssessmentBuilder>

	export function newAssessmentForCreateBuilder():Ref<AssessmentForCreateBuilder>

	export function newBankAccountBuilder():Ref<BankAccountBuilder>

	export function newBankBranchBuilder():Ref<BankBranchBuilder>

	export function newBankBuilder():Ref<BankBuilder>

	export function newBasicDepartmentBuilder():Ref<BasicDepartmentBuilder>

	export function newBasicEmployeeBuilder():Ref<BasicEmployeeBuilder>

	export function newBasicInfoBuilder():Ref<BasicInfoBuilder>

	export function newBasicInfoUpdateBuilder():Ref<BasicInfoUpdateBuilder>

	export function newBasicJobDataBuilder():Ref<BasicJobDataBuilder>

	export function newBasicPersonInfoBuilder():Ref<BasicPersonInfoBuilder>

	export function newBatchGetCompanyPathReqBodyBuilder():Ref<BatchGetCompanyPathReqBodyBuilder>

	export function newBatchGetCompanyReqBodyBuilder():Ref<BatchGetCompanyReqBodyBuilder>

	export function newBatchGetCompanyReqBuilder():Ref<BatchGetCompanyReqBuilder>

	export function newBatchGetDepartmentPathReqBodyBuilder():Ref<BatchGetDepartmentPathReqBodyBuilder>

	export function newBatchGetDepartmentReqBodyBuilder():Ref<BatchGetDepartmentReqBodyBuilder>

	export function newBatchGetDepartmentReqBuilder():Ref<BatchGetDepartmentReqBuilder>

	export function newBatchGetEmployeePathReqBodyBuilder():Ref<BatchGetEmployeePathReqBodyBuilder>

	export function newBatchGetEmployeeReqBodyBuilder():Ref<BatchGetEmployeeReqBodyBuilder>

	export function newBatchGetEmployeeReqBuilder():Ref<BatchGetEmployeeReqBuilder>

	export function newBatchGetEmployeesBpPathReqBodyBuilder():Ref<BatchGetEmployeesBpPathReqBodyBuilder>

	export function newBatchGetEmployeesBpReqBodyBuilder():Ref<BatchGetEmployeesBpReqBodyBuilder>

	export function newBatchGetEmployeesBpReqBuilder():Ref<BatchGetEmployeesBpReqBuilder>

	export function newBatchGetEmployeesJobDataPathReqBodyBuilder():Ref<BatchGetEmployeesJobDataPathReqBodyBuilder>

	export function newBatchGetEmployeesJobDataReqBodyBuilder():Ref<BatchGetEmployeesJobDataReqBodyBuilder>

	export function newBatchGetEmployeesJobDataReqBuilder():Ref<BatchGetEmployeesJobDataReqBuilder>

	export function newBatchGetJobFamilyPathReqBodyBuilder():Ref<BatchGetJobFamilyPathReqBodyBuilder>

	export function newBatchGetJobFamilyReqBodyBuilder():Ref<BatchGetJobFamilyReqBodyBuilder>

	export function newBatchGetJobFamilyReqBuilder():Ref<BatchGetJobFamilyReqBuilder>

	export function newBatchGetJobLevelPathReqBodyBuilder():Ref<BatchGetJobLevelPathReqBodyBuilder>

	export function newBatchGetJobLevelReqBodyBuilder():Ref<BatchGetJobLevelReqBodyBuilder>

	export function newBatchGetJobLevelReqBuilder():Ref<BatchGetJobLevelReqBuilder>

	export function newBatchGetLocationPathReqBodyBuilder():Ref<BatchGetLocationPathReqBodyBuilder>

	export function newBatchGetLocationReqBodyBuilder():Ref<BatchGetLocationReqBodyBuilder>

	export function newBatchGetLocationReqBuilder():Ref<BatchGetLocationReqBuilder>

	export function newBpBuilder():Ref<BpBuilder>

	export function newBpmDataengineI18nBuilder():Ref<BpmDataengineI18nBuilder>

	export function newCalculateParamBuilder():Ref<CalculateParamBuilder>

	export function newChangeFieldPairBuilder():Ref<ChangeFieldPairBuilder>

	export function newCitizenshipStatusBuilder():Ref<CitizenshipStatusBuilder>

	export function newCityBuilder():Ref<CityBuilder>

	export function newCompanyBuilder():Ref<CompanyBuilder>

	export function newCompanyIdAndNameBuilder():Ref<CompanyIdAndNameBuilder>

	export function newContractBuilder():Ref<ContractBuilder>

	export function newCostCenterBuilder():Ref<CostCenterBuilder>

	export function newCostCenterVersionBuilder():Ref<CostCenterVersionBuilder>

	export function newCountryRegionBuilder():Ref<CountryRegionBuilder>

	export function newCountryRegionSubdivisionBuilder():Ref<CountryRegionSubdivisionBuilder>

	export function newCreateCostCenterReqBuilder():Ref<CreateCostCenterReqBuilder>

	export function newCreateCostCenterVersionReqBuilder():Ref<CreateCostCenterVersionReqBuilder>

	export function newCreatePersonReqBuilder():Ref<CreatePersonReqBuilder>

	export function newCreatePreHireReqBuilder():Ref<CreatePreHireReqBuilder>

	export function newCreateProbationAssessmentPathReqBodyBuilder():Ref<CreateProbationAssessmentPathReqBodyBuilder>

	export function newCreateProbationAssessmentReqBodyBuilder():Ref<CreateProbationAssessmentReqBodyBuilder>

	export function newCreateProbationAssessmentReqBuilder():Ref<CreateProbationAssessmentReqBuilder>

	export function newCurrencyBuilder():Ref<CurrencyBuilder>

	export function newCustomFieldDataBuilder():Ref<CustomFieldDataBuilder>

	export function newCustomNameBuilder():Ref<CustomNameBuilder>

	export function newCustomOrgBuilder():Ref<CustomOrgBuilder>

	export function newCustomOrgCreateBuilder():Ref<CustomOrgCreateBuilder>

	export function newCustomOrgUpdateBuilder():Ref<CustomOrgUpdateBuilder>

	export function newCustomValueBuilder():Ref<CustomValueBuilder>

	export function newDataengineI18nBuilder():Ref<DataengineI18nBuilder>

	export function newDeleteCostCenterPathReqBodyBuilder():Ref<DeleteCostCenterPathReqBodyBuilder>

	export function newDeleteCostCenterReqBodyBuilder():Ref<DeleteCostCenterReqBodyBuilder>

	export function newDeleteCostCenterReqBuilder():Ref<DeleteCostCenterReqBuilder>

	export function newDeleteCostCenterVersionPathReqBodyBuilder():Ref<DeleteCostCenterVersionPathReqBodyBuilder>

	export function newDeleteCostCenterVersionReqBodyBuilder():Ref<DeleteCostCenterVersionReqBodyBuilder>

	export function newDeleteCostCenterVersionReqBuilder():Ref<DeleteCostCenterVersionReqBuilder>

	export function newDeletePreHireReqBuilder():Ref<DeletePreHireReqBuilder>

	export function newDeleteProbationAssessmentReqBuilder():Ref<DeleteProbationAssessmentReqBuilder>

	export function newDepartmentBuilder():Ref<DepartmentBuilder>

	export function newDepartmentChangeBuilder():Ref<DepartmentChangeBuilder>

	export function newDepartmentForPatchBuilder():Ref<DepartmentForPatchBuilder>

	export function newDepartmentHrbpBuilder():Ref<DepartmentHrbpBuilder>

	export function newDepartmentIdBuilder():Ref<DepartmentIdBuilder>

	export function newDepartmentParentInfoBuilder():Ref<DepartmentParentInfoBuilder>

	export function newDepartmentParentsBuilder():Ref<DepartmentParentsBuilder>

	export function newDepartmentTimelineBuilder():Ref<DepartmentTimelineBuilder>

	export function newDependentBuilder():Ref<DependentBuilder>

	export function newDimensionBuilder():Ref<DimensionBuilder>

	export function newDimensionIdInDataBuilder():Ref<DimensionIdInDataBuilder>

	export function newDimensionInfoBuilder():Ref<DimensionInfoBuilder>

	export function newDimensionInfoDataBuilder():Ref<DimensionInfoDataBuilder>

	export function newDimensionValueBuilder():Ref<DimensionValueBuilder>

	export function newDistrictBuilder():Ref<DistrictBuilder>

	export function newEducationBuilder():Ref<EducationBuilder>

	export function newEducationInfoBuilder():Ref<EducationInfoBuilder>

	export function newEmailBuilder():Ref<EmailBuilder>

	export function newEmailForUpdateBuilder():Ref<EmailForUpdateBuilder>

	export function newEmergencyContactBuilder():Ref<EmergencyContactBuilder>

	export function newEmployeeBuilder():Ref<EmployeeBuilder>

	export function newEmployeeDomainEventDataBuilder():Ref<EmployeeDomainEventDataBuilder>

	export function newEmployeeInternationalAssignmentBuilder():Ref<EmployeeInternationalAssignmentBuilder>

	export function newEmployeeJobDataBuilder():Ref<EmployeeJobDataBuilder>

	export function newEmploymentBpBuilder():Ref<EmploymentBpBuilder>

	export function newEmploymentBuilder():Ref<EmploymentBuilder>

	export function newEmploymentLeaveBalanceBuilder():Ref<EmploymentLeaveBalanceBuilder>

	export function newEnableDisableAssessmentProbationPathReqBodyBuilder():Ref<EnableDisableAssessmentProbationPathReqBodyBuilder>

	export function newEnableDisableAssessmentProbationReqBodyBuilder():Ref<EnableDisableAssessmentProbationReqBodyBuilder>

	export function newEnableDisableAssessmentProbationReqBuilder():Ref<EnableDisableAssessmentProbationReqBuilder>

	export function newEnumBuilder():Ref<EnumBuilder>

	export function newFieldVariableSubVlaueBuilder():Ref<FieldVariableSubVlaueBuilder>

	export function newFieldVariableSubVlaueForReviewBuilder():Ref<FieldVariableSubVlaueForReviewBuilder>

	export function newFieldVariableValueBuilder():Ref<FieldVariableValueBuilder>

	export function newFieldVariableValueI18nBuilder():Ref<FieldVariableValueI18nBuilder>

	export function newFieldVariableValueToBuilder():Ref<FieldVariableValueToBuilder>

	export function newFieldVariableValueToEnumBuilder():Ref<FieldVariableValueToEnumBuilder>

	export function newFieldVariableValueToForReviewBuilder():Ref<FieldVariableValueToForReviewBuilder>

	export function newFieldVariableValueToObjectBuilder():Ref<FieldVariableValueToObjectBuilder>

	export function newFieldVariableValueToRecordBuilder():Ref<FieldVariableValueToRecordBuilder>

	export function newFileBuilder():Ref<FileBuilder>

	export function newFormFieldVariableBoolValueBuilder():Ref<FormFieldVariableBoolValueBuilder>

	export function newFormFieldVariableI18nValueBuilder():Ref<FormFieldVariableI18nValueBuilder>

	export function newFormFieldVariableNumberValueBuilder():Ref<FormFieldVariableNumberValueBuilder>

	export function newFormFieldVariableStringValueBuilder():Ref<FormFieldVariableStringValueBuilder>

	export function newFormVariableValueInfoBuilder():Ref<FormVariableValueInfoBuilder>

	export function newGetByDepartmentBpPathReqBodyBuilder():Ref<GetByDepartmentBpPathReqBodyBuilder>

	export function newGetByDepartmentBpReqBodyBuilder():Ref<GetByDepartmentBpReqBodyBuilder>

	export function newGetByDepartmentBpReqBuilder():Ref<GetByDepartmentBpReqBuilder>

	export function newGetJobReqBuilder():Ref<GetJobReqBuilder>

	export function newGetProcessFormVariableDataReqBuilder():Ref<GetProcessFormVariableDataReqBuilder>

	export function newGetProcessReqBuilder():Ref<GetProcessReqBuilder>

	export function newHiberarchyCommonBuilder():Ref<HiberarchyCommonBuilder>

	export function newI18nBuilder():Ref<I18nBuilder>

	export function newI18nV2Builder():Ref<I18nV2Builder>

	export function newInternationalAssignmentBuilder():Ref<InternationalAssignmentBuilder>

	export function newInternationalAssignmentV2Builder():Ref<InternationalAssignmentV2Builder>

	export function newInternationalAssignmentV2ForCreateBuilder():Ref<InternationalAssignmentV2ForCreateBuilder>

	export function newInternationalAssignmentV2ForPatchBuilder():Ref<InternationalAssignmentV2ForPatchBuilder>

	export function newJobBuilder():Ref<JobBuilder>

	export function newJobChangeBuilder():Ref<JobChangeBuilder>

	export function newJobDataBuilder():Ref<JobDataBuilder>

	export function newJobDataCostCenterBuilder():Ref<JobDataCostCenterBuilder>

	export function newJobFamilyBuilder():Ref<JobFamilyBuilder>

	export function newJobGradeBuilder():Ref<JobGradeBuilder>

	export function newJobLevelBuilder():Ref<JobLevelBuilder>

	export function newLangTextBuilder():Ref<LangTextBuilder>

	export function newLeaveAccrualRecordBuilder():Ref<LeaveAccrualRecordBuilder>

	export function newLeaveBalanceBuilder():Ref<LeaveBalanceBuilder>

	export function newLeaveEmployExpireRecordBuilder():Ref<LeaveEmployExpireRecordBuilder>

	export function newLeaveGrantingRecordBuilder():Ref<LeaveGrantingRecordBuilder>

	export function newLeaveRequestBuilder():Ref<LeaveRequestBuilder>

	export function newLeaveRequestDetailBuilder():Ref<LeaveRequestDetailBuilder>

	export function newListBpReqBuilder():Ref<ListBpReqBuilder>

	export function newListJobReqBuilder():Ref<ListJobReqBuilder>

	export function newListProcessReqBuilder():Ref<ListProcessReqBuilder>

	export function newLocationBuilder():Ref<LocationBuilder>

	export function newLocationV2Builder():Ref<LocationV2Builder>

	export function newMatchRuleBuilder():Ref<MatchRuleBuilder>

	export function newMatchRulesBuilder():Ref<MatchRulesBuilder>

	export function newNameBuilder():Ref<NameBuilder>

	export function newNameForUpdateBuilder():Ref<NameForUpdateBuilder>

	export function newNationalIdBuilder():Ref<NationalIdBuilder>

	export function newNationalityBuilder():Ref<NationalityBuilder>

	export function newObjectFieldDataBuilder():Ref<ObjectFieldDataBuilder>

	export function newOfferInfoBuilder():Ref<OfferInfoBuilder>

	export function newOfferInfoUpdateBuilder():Ref<OfferInfoUpdateBuilder>

	export function newOnboardingFlowBuilder():Ref<OnboardingFlowBuilder>

	export function newOnboardingFlowChangeBuilder():Ref<OnboardingFlowChangeBuilder>

	export function newOnboardingQrCodeBuilder():Ref<OnboardingQrCodeBuilder>

	export function newOnboardingTaskBuilder():Ref<OnboardingTaskBuilder>

	export function newOnboardingTaskChangeBuilder():Ref<OnboardingTaskChangeBuilder>

	export function newOrgRoleBuilder():Ref<OrgRoleBuilder>

	export function newOrgRoleUpdateBuilder():Ref<OrgRoleUpdateBuilder>

	export function newOrgdraftDepartmentIdBuilder():Ref<OrgdraftDepartmentIdBuilder>

	export function newP2ProbationUpdatedV2Handler(v1:(v2:context.Context,v1:Ref<P2ProbationUpdatedV2>))=>void/*error*/):Ref<P2ProbationUpdatedV2Handler>

	export function newP2ProcessApproverUpdatedV2Handler(v1:(v2:context.Context,v1:Ref<P2ProcessApproverUpdatedV2>))=>void/*error*/):Ref<P2ProcessApproverUpdatedV2Handler>

	export function newP2ProcessCcUpdatedV2Handler(v1:(v2:context.Context,v1:Ref<P2ProcessCcUpdatedV2>))=>void/*error*/):Ref<P2ProcessCcUpdatedV2Handler>

	export function newP2ProcessNodeUpdatedV2Handler(v1:(v2:context.Context,v1:Ref<P2ProcessNodeUpdatedV2>))=>void/*error*/):Ref<P2ProcessNodeUpdatedV2Handler>

	export function newP2ProcessUpdatedV2Handler(v1:(v2:context.Context,v1:Ref<P2ProcessUpdatedV2>))=>void/*error*/):Ref<P2ProcessUpdatedV2Handler>

	export function newParentsDepartmentPathReqBodyBuilder():Ref<ParentsDepartmentPathReqBodyBuilder>

	export function newParentsDepartmentReqBodyBuilder():Ref<ParentsDepartmentReqBodyBuilder>

	export function newParentsDepartmentReqBuilder():Ref<ParentsDepartmentReqBuilder>

	export function newPatchCostCenterPathReqBodyBuilder():Ref<PatchCostCenterPathReqBodyBuilder>

	export function newPatchCostCenterReqBodyBuilder():Ref<PatchCostCenterReqBodyBuilder>

	export function newPatchCostCenterReqBuilder():Ref<PatchCostCenterReqBuilder>

	export function newPatchCostCenterVersionPathReqBodyBuilder():Ref<PatchCostCenterVersionPathReqBodyBuilder>

	export function newPatchCostCenterVersionReqBodyBuilder():Ref<PatchCostCenterVersionReqBodyBuilder>

	export function newPatchCostCenterVersionReqBuilder():Ref<PatchCostCenterVersionReqBuilder>

	export function newPatchPersonReqBuilder():Ref<PatchPersonReqBuilder>

	export function newPatchPreHireReqBuilder():Ref<PatchPreHireReqBuilder>

	export function newPatchProbationAssessmentReqBuilder():Ref<PatchProbationAssessmentReqBuilder>

	export function newPersonInfoBuilder():Ref<PersonInfoBuilder>

	export function newPersonInfoChnBuilder():Ref<PersonInfoChnBuilder>

	export function newPersonNameBuilder():Ref<PersonNameBuilder>

	export function newPersonalProfileBuilder():Ref<PersonalProfileBuilder>

	export function newPhoneBuilder():Ref<PhoneBuilder>

	export function newPhoneForUpdateBuilder():Ref<PhoneForUpdateBuilder>

	export function newPhoneNumberAndAreaCodeBuilder():Ref<PhoneNumberAndAreaCodeBuilder>

	export function newPreHireBuilder():Ref<PreHireBuilder>

	export function newPreHireContractInfoBuilder():Ref<PreHireContractInfoBuilder>

	export function newPreHireEmploymentInfoBuilder():Ref<PreHireEmploymentInfoBuilder>

	export function newPreHireOnboardingInfoBuilder():Ref<PreHireOnboardingInfoBuilder>

	export function newPreHireProbationInfoBuilder():Ref<PreHireProbationInfoBuilder>

	export function newPrehireCreateBuilder():Ref<PrehireCreateBuilder>

	export function newPrehireUpdateBuilder():Ref<PrehireUpdateBuilder>

	export function newProbationInfoBuilder():Ref<ProbationInfoBuilder>

	export function newProbationInfoForSubmitBuilder():Ref<ProbationInfoForSubmitBuilder>

	export function newProcessAbstractItemBuilder():Ref<ProcessAbstractItemBuilder>

	export function newProcessApproverBuilder():Ref<ProcessApproverBuilder>

	export function newProcessCcItemBuilder():Ref<ProcessCcItemBuilder>

	export function newProcessDoneItemBuilder():Ref<ProcessDoneItemBuilder>

	export function newProcessFormVariableBuilder():Ref<ProcessFormVariableBuilder>

	export function newProcessFormVariableV2Builder():Ref<ProcessFormVariableV2Builder>

	export function newProcessLinkBuilder():Ref<ProcessLinkBuilder>

	export function newProcessTodoItemBuilder():Ref<ProcessTodoItemBuilder>

	export function newProfileSettingAddressBuilder():Ref<ProfileSettingAddressBuilder>

	export function newProfileSettingBankAccountBuilder():Ref<ProfileSettingBankAccountBuilder>

	export function newProfileSettingCareerBuilder():Ref<ProfileSettingCareerBuilder>

	export function newProfileSettingCostCenterBuilder():Ref<ProfileSettingCostCenterBuilder>

	export function newProfileSettingCustomFieldBuilder():Ref<ProfileSettingCustomFieldBuilder>

	export function newProfileSettingCustomGroupBuilder():Ref<ProfileSettingCustomGroupBuilder>

	export function newProfileSettingCustomGroupItemBuilder():Ref<ProfileSettingCustomGroupItemBuilder>

	export function newProfileSettingDataAttachmentBuilder():Ref<ProfileSettingDataAttachmentBuilder>

	export function newProfileSettingDependentBuilder():Ref<ProfileSettingDependentBuilder>

	export function newProfileSettingEducationBuilder():Ref<ProfileSettingEducationBuilder>

	export function newProfileSettingEmergencyContactBuilder():Ref<ProfileSettingEmergencyContactBuilder>

	export function newProfileSettingEmpBasicInfoForUpdateBuilder():Ref<ProfileSettingEmpBasicInfoForUpdateBuilder>

	export function newProfileSettingEmpContractRecordBuilder():Ref<ProfileSettingEmpContractRecordBuilder>

	export function newProfileSettingEmpInfoForUpdateBuilder():Ref<ProfileSettingEmpInfoForUpdateBuilder>

	export function newProfileSettingEmploymentBasicInfoBuilder():Ref<ProfileSettingEmploymentBasicInfoBuilder>

	export function newProfileSettingEmploymentInfoBuilder():Ref<ProfileSettingEmploymentInfoBuilder>

	export function newProfileSettingEmploymentRecordBuilder():Ref<ProfileSettingEmploymentRecordBuilder>

	export function newProfileSettingFieldErrorBuilder():Ref<ProfileSettingFieldErrorBuilder>

	export function newProfileSettingFileBuilder():Ref<ProfileSettingFileBuilder>

	export function newProfileSettingHukouBuilder():Ref<ProfileSettingHukouBuilder>

	export function newProfileSettingI18nBuilder():Ref<ProfileSettingI18nBuilder>

	export function newProfileSettingNameBuilder():Ref<ProfileSettingNameBuilder>

	export function newProfileSettingNationalBuilder():Ref<ProfileSettingNationalBuilder>

	export function newProfileSettingPersonalBasicInfoBuilder():Ref<ProfileSettingPersonalBasicInfoBuilder>

	export function newProfileSettingPersonalInfoBuilder():Ref<ProfileSettingPersonalInfoBuilder>

	export function newProfileSettingPersonalRecordBuilder():Ref<ProfileSettingPersonalRecordBuilder>

	export function newProfileSettingPhoneBuilder():Ref<ProfileSettingPhoneBuilder>

	export function newProfileSettingProbationInfoBuilder():Ref<ProfileSettingProbationInfoBuilder>

	export function newProfileSettingResidentTaxBuilder():Ref<ProfileSettingResidentTaxBuilder>

	export function newProfileSettingWorkExperienceBuilder():Ref<ProfileSettingWorkExperienceBuilder>

	export function newQrCodeBuilder():Ref<QrCodeBuilder>

	export function newQrCodeDimensionBuilder():Ref<QrCodeDimensionBuilder>

	export function newQrCodeDimensionValueBuilder():Ref<QrCodeDimensionValueBuilder>

	export function newQrCodeValueBuilder():Ref<QrCodeValueBuilder>

	export function newQueryEmployeesJobDataPathReqBodyBuilder():Ref<QueryEmployeesJobDataPathReqBodyBuilder>

	export function newQueryEmployeesJobDataReqBodyBuilder():Ref<QueryEmployeesJobDataReqBodyBuilder>

	export function newQueryEmployeesJobDataReqBuilder():Ref<QueryEmployeesJobDataReqBuilder>

	export function newQueryTimelineDepartmentPathReqBodyBuilder():Ref<QueryTimelineDepartmentPathReqBodyBuilder>

	export function newQueryTimelineDepartmentReqBodyBuilder():Ref<QueryTimelineDepartmentReqBodyBuilder>

	export function newQueryTimelineDepartmentReqBuilder():Ref<QueryTimelineDepartmentReqBuilder>

	export function newReorganizationInfoBuilder():Ref<ReorganizationInfoBuilder>

	export function newResidentTaxBuilder():Ref<ResidentTaxBuilder>

	export function newSearchBasicInfoBankBranchPathReqBodyBuilder():Ref<SearchBasicInfoBankBranchPathReqBodyBuilder>

	export function newSearchBasicInfoBankBranchReqBodyBuilder():Ref<SearchBasicInfoBankBranchReqBodyBuilder>

	export function newSearchBasicInfoBankBranchReqBuilder():Ref<SearchBasicInfoBankBranchReqBuilder>

	export function newSearchBasicInfoBankPathReqBodyBuilder():Ref<SearchBasicInfoBankPathReqBodyBuilder>

	export function newSearchBasicInfoBankReqBodyBuilder():Ref<SearchBasicInfoBankReqBodyBuilder>

	export function newSearchBasicInfoBankReqBuilder():Ref<SearchBasicInfoBankReqBuilder>

	export function newSearchBasicInfoCityPathReqBodyBuilder():Ref<SearchBasicInfoCityPathReqBodyBuilder>

	export function newSearchBasicInfoCityReqBodyBuilder():Ref<SearchBasicInfoCityReqBodyBuilder>

	export function newSearchBasicInfoCityReqBuilder():Ref<SearchBasicInfoCityReqBuilder>

	export function newSearchBasicInfoCountryRegionPathReqBodyBuilder():Ref<SearchBasicInfoCountryRegionPathReqBodyBuilder>

	export function newSearchBasicInfoCountryRegionReqBodyBuilder():Ref<SearchBasicInfoCountryRegionReqBodyBuilder>

	export function newSearchBasicInfoCountryRegionReqBuilder():Ref<SearchBasicInfoCountryRegionReqBuilder>

	export function newSearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder():Ref<SearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder>

	export function newSearchBasicInfoCountryRegionSubdivisionReqBodyBuilder():Ref<SearchBasicInfoCountryRegionSubdivisionReqBodyBuilder>

	export function newSearchBasicInfoCountryRegionSubdivisionReqBuilder():Ref<SearchBasicInfoCountryRegionSubdivisionReqBuilder>

	export function newSearchBasicInfoCurrencyPathReqBodyBuilder():Ref<SearchBasicInfoCurrencyPathReqBodyBuilder>

	export function newSearchBasicInfoCurrencyReqBodyBuilder():Ref<SearchBasicInfoCurrencyReqBodyBuilder>

	export function newSearchBasicInfoCurrencyReqBuilder():Ref<SearchBasicInfoCurrencyReqBuilder>

	export function newSearchBasicInfoDistrictPathReqBodyBuilder():Ref<SearchBasicInfoDistrictPathReqBodyBuilder>

	export function newSearchBasicInfoDistrictReqBodyBuilder():Ref<SearchBasicInfoDistrictReqBodyBuilder>

	export function newSearchBasicInfoDistrictReqBuilder():Ref<SearchBasicInfoDistrictReqBuilder>

	export function newSearchBasicInfoNationalityPathReqBodyBuilder():Ref<SearchBasicInfoNationalityPathReqBodyBuilder>

	export function newSearchBasicInfoNationalityReqBodyBuilder():Ref<SearchBasicInfoNationalityReqBodyBuilder>

	export function newSearchBasicInfoNationalityReqBuilder():Ref<SearchBasicInfoNationalityReqBuilder>

	export function newSearchContractPathReqBodyBuilder():Ref<SearchContractPathReqBodyBuilder>

	export function newSearchContractReqBodyBuilder():Ref<SearchContractReqBodyBuilder>

	export function newSearchContractReqBuilder():Ref<SearchContractReqBuilder>

	export function newSearchCostCenterPathReqBodyBuilder():Ref<SearchCostCenterPathReqBodyBuilder>

	export function newSearchCostCenterReqBodyBuilder():Ref<SearchCostCenterReqBodyBuilder>

	export function newSearchCostCenterReqBuilder():Ref<SearchCostCenterReqBuilder>

	export function newSearchDepartmentPathReqBodyBuilder():Ref<SearchDepartmentPathReqBodyBuilder>

	export function newSearchDepartmentReqBodyBuilder():Ref<SearchDepartmentReqBodyBuilder>

	export function newSearchDepartmentReqBuilder():Ref<SearchDepartmentReqBuilder>

	export function newSearchEmployeePathReqBodyBuilder():Ref<SearchEmployeePathReqBodyBuilder>

	export function newSearchEmployeeReqBodyBuilder():Ref<SearchEmployeeReqBodyBuilder>

	export function newSearchEmployeeReqBuilder():Ref<SearchEmployeeReqBuilder>

	export function newSearchJobChangePathReqBodyBuilder():Ref<SearchJobChangePathReqBodyBuilder>

	export function newSearchJobChangeReqBodyBuilder():Ref<SearchJobChangeReqBodyBuilder>

	export function newSearchJobChangeReqBuilder():Ref<SearchJobChangeReqBuilder>

	export function newSearchPreHirePathReqBodyBuilder():Ref<SearchPreHirePathReqBodyBuilder>

	export function newSearchPreHireReqBodyBuilder():Ref<SearchPreHireReqBodyBuilder>

	export function newSearchPreHireReqBuilder():Ref<SearchPreHireReqBuilder>

	export function newSearchProbationPathReqBodyBuilder():Ref<SearchProbationPathReqBodyBuilder>

	export function newSearchProbationReqBodyBuilder():Ref<SearchProbationReqBodyBuilder>

	export function newSearchProbationReqBuilder():Ref<SearchProbationReqBuilder>

	export function newSignatureFileBuilder():Ref<SignatureFileBuilder>

	export function newTranferEmploymentInfoBuilder():Ref<TranferEmploymentInfoBuilder>

	export function newTransferInfoBuilder():Ref<TransferInfoBuilder>

	export function newUserContactBuilder():Ref<UserContactBuilder>

	export function newUserInfoBuilder():Ref<UserInfoBuilder>

	export function newWorkEmailBuilder():Ref<WorkEmailBuilder>

	export function newWorkEmailCheckResultBuilder():Ref<WorkEmailCheckResultBuilder>

	export function newWorkEmailInfoListBuilder():Ref<WorkEmailInfoListBuilder>

	export function newWorkExperienceBuilder():Ref<WorkExperienceBuilder>

	export function newWorkExperienceInfoBuilder():Ref<WorkExperienceInfoBuilder>

	export function newWorkforcePlanBuilder():Ref<WorkforcePlanBuilder>

	export function newWorkforcePlanDetailBuilder():Ref<WorkforcePlanDetailBuilder>

	export function newWorkforcePlanDetailV2Builder():Ref<WorkforcePlanDetailV2Builder>

	export function newWorkforcePlanEaiDetailBuilder():Ref<WorkforcePlanEaiDetailBuilder>

	export interface ObjectFieldData extends Struct<ObjectFieldData>{

			fieldName:Ref<string>
			value:Ref<string>
	}
	export interface ObjectFieldDataBuilder extends Struct<ObjectFieldDataBuilder>{

			fieldName(fieldName:string):Ref<ObjectFieldDataBuilder>
			value(value:string):Ref<ObjectFieldDataBuilder>
			build():Ref<ObjectFieldData>
	}
	export interface OfferInfo extends Struct<OfferInfo>{

			offerId:Ref<string>
			offerHrId:Ref<string>
			departmentId:Ref<string>
			directLeaderId:Ref<string>
			jobId:Ref<string>
			jobFamilyId:Ref<string>
			jobLevelId:Ref<string>
			jobTitle:Ref<string>
			probationStartDate:Ref<string>
			probationEndDate:Ref<string>
			contractStartDate:Ref<string>
			contractEndDate:Ref<string>
			durationPeriod:Ref<float64>
			durationUnit:Ref<string>
			onboardingDate:Ref<string>
			onboardingLocationId:Ref<string>
			officeLocationId:Ref<string>
			recruitmentTypeId:Ref<string>
			probationPeriod:Ref<string>
			employeeTypeId:Ref<string>
			employmentTypeId:Ref<string>
			workEmail:Ref<string>
			durationTypeId:Ref<string>
			signingTypeId:Ref<string>
			entryMode:Ref<string>
			socialSecurityCityId:Ref<string>
			contractType:Ref<string>
			company:Ref<string>
			costCenterRate:Ref<JobDataCostCenter>[]
			jobGradeId:Ref<string>
			customFields:Ref<ObjectFieldData>[]
			serviceCompany:Ref<string>
			workShift:Ref<string>
			compensationType:Ref<string>
			workLocationId:Ref<string>
			onboardingAddressId:Ref<string>
			officeAddressId:Ref<string>
	}
	export interface OfferInfoBuilder extends Struct<OfferInfoBuilder>{

			offerId(offerId:string):Ref<OfferInfoBuilder>
			offerHrId(offerHrId:string):Ref<OfferInfoBuilder>
			departmentId(departmentId:string):Ref<OfferInfoBuilder>
			directLeaderId(directLeaderId:string):Ref<OfferInfoBuilder>
			jobId(jobId:string):Ref<OfferInfoBuilder>
			jobFamilyId(jobFamilyId:string):Ref<OfferInfoBuilder>
			jobLevelId(jobLevelId:string):Ref<OfferInfoBuilder>
			jobTitle(jobTitle:string):Ref<OfferInfoBuilder>
			probationStartDate(probationStartDate:string):Ref<OfferInfoBuilder>
			probationEndDate(probationEndDate:string):Ref<OfferInfoBuilder>
			contractStartDate(contractStartDate:string):Ref<OfferInfoBuilder>
			contractEndDate(contractEndDate:string):Ref<OfferInfoBuilder>
			durationPeriod(durationPeriod:float64):Ref<OfferInfoBuilder>
			durationUnit(durationUnit:string):Ref<OfferInfoBuilder>
			onboardingDate(onboardingDate:string):Ref<OfferInfoBuilder>
			onboardingLocationId(onboardingLocationId:string):Ref<OfferInfoBuilder>
			officeLocationId(officeLocationId:string):Ref<OfferInfoBuilder>
			recruitmentTypeId(recruitmentTypeId:string):Ref<OfferInfoBuilder>
			probationPeriod(probationPeriod:string):Ref<OfferInfoBuilder>
			employeeTypeId(employeeTypeId:string):Ref<OfferInfoBuilder>
			employmentTypeId(employmentTypeId:string):Ref<OfferInfoBuilder>
			workEmail(workEmail:string):Ref<OfferInfoBuilder>
			durationTypeId(durationTypeId:string):Ref<OfferInfoBuilder>
			signingTypeId(signingTypeId:string):Ref<OfferInfoBuilder>
			entryMode(entryMode:string):Ref<OfferInfoBuilder>
			socialSecurityCityId(socialSecurityCityId:string):Ref<OfferInfoBuilder>
			contractType(contractType:string):Ref<OfferInfoBuilder>
			company(company:string):Ref<OfferInfoBuilder>
			costCenterRate(costCenterRate:Ref<JobDataCostCenter>[]):Ref<OfferInfoBuilder>
			jobGradeId(jobGradeId:string):Ref<OfferInfoBuilder>
			customFields(customFields:Ref<ObjectFieldData>[]):Ref<OfferInfoBuilder>
			serviceCompany(serviceCompany:string):Ref<OfferInfoBuilder>
			workShift(workShift:string):Ref<OfferInfoBuilder>
			compensationType(compensationType:string):Ref<OfferInfoBuilder>
			workLocationId(workLocationId:string):Ref<OfferInfoBuilder>
			onboardingAddressId(onboardingAddressId:string):Ref<OfferInfoBuilder>
			officeAddressId(officeAddressId:string):Ref<OfferInfoBuilder>
			build():Ref<OfferInfo>
	}
	export interface OfferInfoUpdate extends Struct<OfferInfoUpdate>{

			onboardingDate:Ref<string>
			atsApplicationId:Ref<string>
			onboardingLocationId:Ref<string>
			onboardingAddressId:Ref<string>
			officeLocationId:Ref<string>
			officeAddressId:Ref<string>
			employmentType:Ref<string>
			onboardingMethod:Ref<string>
			workEmails:Ref<EmailForUpdate>[]
			costCenterRates:Ref<JobDataCostCenter>[]
			customFields:Ref<ObjectFieldData>[]
	}
	export interface OfferInfoUpdateBuilder extends Struct<OfferInfoUpdateBuilder>{

			onboardingDate(onboardingDate:string):Ref<OfferInfoUpdateBuilder>
			atsApplicationId(atsApplicationId:string):Ref<OfferInfoUpdateBuilder>
			onboardingLocationId(onboardingLocationId:string):Ref<OfferInfoUpdateBuilder>
			onboardingAddressId(onboardingAddressId:string):Ref<OfferInfoUpdateBuilder>
			officeLocationId(officeLocationId:string):Ref<OfferInfoUpdateBuilder>
			officeAddressId(officeAddressId:string):Ref<OfferInfoUpdateBuilder>
			employmentType(employmentType:string):Ref<OfferInfoUpdateBuilder>
			onboardingMethod(onboardingMethod:string):Ref<OfferInfoUpdateBuilder>
			workEmails(workEmails:Ref<EmailForUpdate>[]):Ref<OfferInfoUpdateBuilder>
			costCenterRates(costCenterRates:Ref<JobDataCostCenter>[]):Ref<OfferInfoUpdateBuilder>
			customFields(customFields:Ref<ObjectFieldData>[]):Ref<OfferInfoUpdateBuilder>
			build():Ref<OfferInfoUpdate>
	}
	export interface OnboardingFlow extends Struct<OnboardingFlow>{

			id:Ref<string>
			name:Ref<I18nV2>
	}
	export interface OnboardingFlowBuilder extends Struct<OnboardingFlowBuilder>{

			id(id:string):Ref<OnboardingFlowBuilder>
			name(name:Ref<I18nV2>):Ref<OnboardingFlowBuilder>
			build():Ref<OnboardingFlow>
	}
	export interface OnboardingFlowChange extends Struct<OnboardingFlowChange>{

			afterStatus:Ref<string>
	}
	export interface OnboardingFlowChangeBuilder extends Struct<OnboardingFlowChangeBuilder>{

			afterStatus(afterStatus:string):Ref<OnboardingFlowChangeBuilder>
			build():Ref<OnboardingFlowChange>
	}
	export interface OnboardingQrCode extends Struct<OnboardingQrCode>{

			id:Ref<string>
			pngs:string[]
			url:Ref<string>
			active:Ref<bool>
			createdBy:Ref<string>
			updatedBy:Ref<string>
			createdAt:Ref<int>
			updatedAt:Ref<int>
			dimensionValues:Ref<QrCodeDimensionValue>[]
	}
	export interface OnboardingQrCodeBuilder extends Struct<OnboardingQrCodeBuilder>{

			id(id:string):Ref<OnboardingQrCodeBuilder>
			pngs(pngs:string[]):Ref<OnboardingQrCodeBuilder>
			url(url:string):Ref<OnboardingQrCodeBuilder>
			active(active:bool):Ref<OnboardingQrCodeBuilder>
			createdBy(createdBy:string):Ref<OnboardingQrCodeBuilder>
			updatedBy(updatedBy:string):Ref<OnboardingQrCodeBuilder>
			createdAt(createdAt:int):Ref<OnboardingQrCodeBuilder>
			updatedAt(updatedAt:int):Ref<OnboardingQrCodeBuilder>
			dimensionValues(dimensionValues:Ref<QrCodeDimensionValue>[]):Ref<OnboardingQrCodeBuilder>
			build():Ref<OnboardingQrCode>
	}
	//"completed"
	export const OnboardingStatusCompleted:string
	//"day_one"
	export const OnboardingStatusDayOne:string
	//"deleted"
	export const OnboardingStatusDeleted:string
	//"preboarding"
	export const OnboardingStatusPreboarding:string
	//"withdrawn"
	export const OnboardingStatusWithdrawn:string
	export interface OnboardingTask extends Struct<OnboardingTask>{

			taskName:Ref<string>
			taskStatus:Ref<string>
			operatorId:Ref<string>
			taskCode:Ref<string>
	}
	export interface OnboardingTaskBuilder extends Struct<OnboardingTaskBuilder>{

			taskName(taskName:string):Ref<OnboardingTaskBuilder>
			taskStatus(taskStatus:string):Ref<OnboardingTaskBuilder>
			operatorId(operatorId:string):Ref<OnboardingTaskBuilder>
			taskCode(taskCode:string):Ref<OnboardingTaskBuilder>
			build():Ref<OnboardingTask>
	}
	export interface OnboardingTaskChange extends Struct<OnboardingTaskChange>{

			afterStatus:Ref<string>
			taskCode:Ref<string>
	}
	export interface OnboardingTaskChangeBuilder extends Struct<OnboardingTaskChangeBuilder>{

			afterStatus(afterStatus:string):Ref<OnboardingTaskChangeBuilder>
			taskCode(taskCode:string):Ref<OnboardingTaskChangeBuilder>
			build():Ref<OnboardingTaskChange>
	}
	export interface OrgRole extends Struct<OrgRole>{

			apiName:Ref<string>
			employmentIds:string[]
			inheritEmploymentIds:string[]
	}
	export interface OrgRoleBuilder extends Struct<OrgRoleBuilder>{

			apiName(apiName:string):Ref<OrgRoleBuilder>
			employmentIds(employmentIds:string[]):Ref<OrgRoleBuilder>
			inheritEmploymentIds(inheritEmploymentIds:string[]):Ref<OrgRoleBuilder>
			build():Ref<OrgRole>
	}
	export interface OrgRoleUpdate extends Struct<OrgRoleUpdate>{

			apiName:Ref<string>
			employmentIds:string[]
	}
	export interface OrgRoleUpdateBuilder extends Struct<OrgRoleUpdateBuilder>{

			apiName(apiName:string):Ref<OrgRoleUpdateBuilder>
			employmentIds(employmentIds:string[]):Ref<OrgRoleUpdateBuilder>
			build():Ref<OrgRoleUpdate>
	}
	export interface OrgdraftDepartmentId extends Struct<OrgdraftDepartmentId>{

			departmentId:Ref<string>
			draftDepartmentId:Ref<string>
	}
	export interface OrgdraftDepartmentIdBuilder extends Struct<OrgdraftDepartmentIdBuilder>{

			departmentId(departmentId:string):Ref<OrgdraftDepartmentIdBuilder>
			draftDepartmentId(draftDepartmentId:string):Ref<OrgdraftDepartmentIdBuilder>
			build():Ref<OrgdraftDepartmentId>
	}
	export interface P2ProbationUpdatedV2 extends Struct<P2ProbationUpdatedV2>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ProbationUpdatedV2Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ProbationUpdatedV2Data extends Struct<P2ProbationUpdatedV2Data>{

			employmentId:Ref<string>
			probationStatus:Ref<string>
			actualProbationEndDate:Ref<string>
	}
	export interface P2ProbationUpdatedV2Handler extends Struct<P2ProbationUpdatedV2Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2ProcessApproverUpdatedV2 extends Struct<P2ProcessApproverUpdatedV2>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ProcessApproverUpdatedV2Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ProcessApproverUpdatedV2Data extends Struct<P2ProcessApproverUpdatedV2Data>{

			processId:Ref<string>
			approverId:Ref<string>
			type:Ref<int>
			status:Ref<int>
			bizType:Ref<string>
	}
	export interface P2ProcessApproverUpdatedV2Handler extends Struct<P2ProcessApproverUpdatedV2Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2ProcessCcUpdatedV2 extends Struct<P2ProcessCcUpdatedV2>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ProcessCcUpdatedV2Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ProcessCcUpdatedV2Data extends Struct<P2ProcessCcUpdatedV2Data>{

			processId:Ref<string>
			approverId:Ref<string>
			status:Ref<int>
			bizType:Ref<string>
	}
	export interface P2ProcessCcUpdatedV2Handler extends Struct<P2ProcessCcUpdatedV2Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2ProcessNodeUpdatedV2 extends Struct<P2ProcessNodeUpdatedV2>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ProcessNodeUpdatedV2Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ProcessNodeUpdatedV2Data extends Struct<P2ProcessNodeUpdatedV2Data>{

			flowDefinitionId:Ref<string>
			nodeDefinitionId:Ref<string>
			processId:Ref<string>
			processNodeId:Ref<string>
			nodeType:Ref<int>
			nodeStatus:Ref<int>
			bizType:Ref<string>
	}
	export interface P2ProcessNodeUpdatedV2Handler extends Struct<P2ProcessNodeUpdatedV2Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2ProcessUpdatedV2 extends Struct<P2ProcessUpdatedV2>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ProcessUpdatedV2Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ProcessUpdatedV2Data extends Struct<P2ProcessUpdatedV2Data>{

			processId:Ref<string>
			status:Ref<int>
			bizType:Ref<string>
	}
	export interface P2ProcessUpdatedV2Handler extends Struct<P2ProcessUpdatedV2Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface ParentsDepartmentPathReqBodyBuilder extends Struct<ParentsDepartmentPathReqBodyBuilder>{

			departmentIdList(departmentIdList:string[]):Ref<ParentsDepartmentPathReqBodyBuilder>
			build():Ref<ParentsDepartmentReqBody>
	}
	export interface ParentsDepartmentReq extends Struct<ParentsDepartmentReq>{

			body:Ref<ParentsDepartmentReqBody>
	}
	export interface ParentsDepartmentReqBody extends Struct<ParentsDepartmentReqBody>{

			departmentIdList:string[]
	}
	export interface ParentsDepartmentReqBodyBuilder extends Struct<ParentsDepartmentReqBodyBuilder>{

			departmentIdList(departmentIdList:string[]):Ref<ParentsDepartmentReqBodyBuilder>
			build():Ref<ParentsDepartmentReqBody>
	}
	export interface ParentsDepartmentReqBuilder extends Struct<ParentsDepartmentReqBuilder>{

			departmentIdType(departmentIdType:string):Ref<ParentsDepartmentReqBuilder>
			body(body:Ref<ParentsDepartmentReqBody>):Ref<ParentsDepartmentReqBuilder>
			build():Ref<ParentsDepartmentReq>
	}
	export interface ParentsDepartmentResp extends Struct<ParentsDepartmentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ParentsDepartmentRespData>
			success():bool
	}
	export interface ParentsDepartmentRespData extends Struct<ParentsDepartmentRespData>{

			items:Ref<DepartmentParents>[]
	}
	export interface PatchCostCenterPathReqBodyBuilder extends Struct<PatchCostCenterPathReqBodyBuilder>{

			effectiveTime(effectiveTime:string):Ref<PatchCostCenterPathReqBodyBuilder>
			active(active:bool):Ref<PatchCostCenterPathReqBodyBuilder>
			operationReason(operationReason:string):Ref<PatchCostCenterPathReqBodyBuilder>
			build():Ref<PatchCostCenterReqBody>
	}
	export interface PatchCostCenterReq extends Struct<PatchCostCenterReq>{

			body:Ref<PatchCostCenterReqBody>
	}
	export interface PatchCostCenterReqBody extends Struct<PatchCostCenterReqBody>{

			effectiveTime:Ref<string>
			active:Ref<bool>
			operationReason:Ref<string>
	}
	export interface PatchCostCenterReqBodyBuilder extends Struct<PatchCostCenterReqBodyBuilder>{

			effectiveTime(effectiveTime:string):Ref<PatchCostCenterReqBodyBuilder>
			active(active:bool):Ref<PatchCostCenterReqBodyBuilder>
			operationReason(operationReason:string):Ref<PatchCostCenterReqBodyBuilder>
			build():Ref<PatchCostCenterReqBody>
	}
	export interface PatchCostCenterReqBuilder extends Struct<PatchCostCenterReqBuilder>{

			costCenterId(costCenterId:string):Ref<PatchCostCenterReqBuilder>
			userIdType(userIdType:string):Ref<PatchCostCenterReqBuilder>
			body(body:Ref<PatchCostCenterReqBody>):Ref<PatchCostCenterReqBuilder>
			build():Ref<PatchCostCenterReq>
	}
	export interface PatchCostCenterResp extends Struct<PatchCostCenterResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<PatchCostCenterRespData>
			success():bool
	}
	export interface PatchCostCenterRespData extends Struct<PatchCostCenterRespData>{

			costCenter:Ref<CostCenter>
	}
	export interface PatchCostCenterVersionPathReqBodyBuilder extends Struct<PatchCostCenterVersionPathReqBodyBuilder>{

			name(name:Ref<I18n>[]):Ref<PatchCostCenterVersionPathReqBodyBuilder>
			parentCostCenterId(parentCostCenterId:string):Ref<PatchCostCenterVersionPathReqBodyBuilder>
			managers(managers:string[]):Ref<PatchCostCenterVersionPathReqBodyBuilder>
			description(description:Ref<I18n>[]):Ref<PatchCostCenterVersionPathReqBodyBuilder>
			effectiveTime(effectiveTime:string):Ref<PatchCostCenterVersionPathReqBodyBuilder>
			operationReason(operationReason:string):Ref<PatchCostCenterVersionPathReqBodyBuilder>
			build():Ref<PatchCostCenterVersionReqBody>
	}
	export interface PatchCostCenterVersionReq extends Struct<PatchCostCenterVersionReq>{

			body:Ref<PatchCostCenterVersionReqBody>
	}
	export interface PatchCostCenterVersionReqBody extends Struct<PatchCostCenterVersionReqBody>{

			name:Ref<I18n>[]
			parentCostCenterId:Ref<string>
			managers:string[]
			description:Ref<I18n>[]
			effectiveTime:Ref<string>
			operationReason:Ref<string>
	}
	export interface PatchCostCenterVersionReqBodyBuilder extends Struct<PatchCostCenterVersionReqBodyBuilder>{

			name(name:Ref<I18n>[]):Ref<PatchCostCenterVersionReqBodyBuilder>
			parentCostCenterId(parentCostCenterId:string):Ref<PatchCostCenterVersionReqBodyBuilder>
			managers(managers:string[]):Ref<PatchCostCenterVersionReqBodyBuilder>
			description(description:Ref<I18n>[]):Ref<PatchCostCenterVersionReqBodyBuilder>
			effectiveTime(effectiveTime:string):Ref<PatchCostCenterVersionReqBodyBuilder>
			operationReason(operationReason:string):Ref<PatchCostCenterVersionReqBodyBuilder>
			build():Ref<PatchCostCenterVersionReqBody>
	}
	export interface PatchCostCenterVersionReqBuilder extends Struct<PatchCostCenterVersionReqBuilder>{

			costCenterId(costCenterId:string):Ref<PatchCostCenterVersionReqBuilder>
			versionId(versionId:string):Ref<PatchCostCenterVersionReqBuilder>
			userIdType(userIdType:string):Ref<PatchCostCenterVersionReqBuilder>
			body(body:Ref<PatchCostCenterVersionReqBody>):Ref<PatchCostCenterVersionReqBuilder>
			build():Ref<PatchCostCenterVersionReq>
	}
	export interface PatchCostCenterVersionResp extends Struct<PatchCostCenterVersionResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<PatchCostCenterVersionRespData>
			success():bool
	}
	export interface PatchCostCenterVersionRespData extends Struct<PatchCostCenterVersionRespData>{

			version:Ref<CostCenterVersion>
	}
	export interface PatchPersonReq extends Struct<PatchPersonReq>{

			personInfo:Ref<PersonInfo>
	}
	export interface PatchPersonReqBuilder extends Struct<PatchPersonReqBuilder>{

			personId(personId:string):Ref<PatchPersonReqBuilder>
			clientToken(clientToken:string):Ref<PatchPersonReqBuilder>
			noNeedQuery(noNeedQuery:bool):Ref<PatchPersonReqBuilder>
			personInfo(personInfo:Ref<PersonInfo>):Ref<PatchPersonReqBuilder>
			build():Ref<PatchPersonReq>
	}
	export interface PatchPersonResp extends Struct<PatchPersonResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<PatchPersonRespData>
			success():bool
	}
	export interface PatchPersonRespData extends Struct<PatchPersonRespData>{

			person:Ref<PersonInfo>
	}
	export interface PatchPreHireReq extends Struct<PatchPreHireReq>{

			prehireUpdate:Ref<PrehireUpdate>
	}
	export interface PatchPreHireReqBuilder extends Struct<PatchPreHireReqBuilder>{

			preHireId(preHireId:string):Ref<PatchPreHireReqBuilder>
			prehireUpdate(prehireUpdate:Ref<PrehireUpdate>):Ref<PatchPreHireReqBuilder>
			build():Ref<PatchPreHireReq>
	}
	export interface PatchPreHireResp extends Struct<PatchPreHireResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<PatchPreHireRespData>
			success():bool
	}
	export interface PatchPreHireRespData extends Struct<PatchPreHireRespData>{

			preHireId:Ref<string>
	}
	export interface PatchProbationAssessmentReq extends Struct<PatchProbationAssessmentReq>{

			assessmentForCreate:Ref<AssessmentForCreate>
	}
	export interface PatchProbationAssessmentReqBuilder extends Struct<PatchProbationAssessmentReqBuilder>{

			assessmentId(assessmentId:string):Ref<PatchProbationAssessmentReqBuilder>
			clientToken(clientToken:string):Ref<PatchProbationAssessmentReqBuilder>
			assessmentForCreate(assessmentForCreate:Ref<AssessmentForCreate>):Ref<PatchProbationAssessmentReqBuilder>
			build():Ref<PatchProbationAssessmentReq>
	}
	export interface PatchProbationAssessmentResp extends Struct<PatchProbationAssessmentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface PersonInfo extends Struct<PersonInfo>{

			personId:Ref<string>
			phoneNumber:Ref<string>
			legalName:Ref<string>
			preferredName:Ref<string>
			preferredLocalFullName:Ref<string>
			preferredEnglishFullName:Ref<string>
			nameList:Ref<PersonName>[]
			gender:Ref<Enum>
			dateOfBirth:Ref<string>
			nationalityIdV2:Ref<string>
			race:Ref<Enum>
			maritalStatus:Ref<Enum>
			phoneList:Ref<Phone>[]
			addressList:Ref<Address>[]
			emailList:Ref<Email>[]
			workExperienceList:Ref<WorkExperienceInfo>[]
			educationList:Ref<Education>[]
			bankAccountList:Ref<BankAccount>[]
			nationalIdList:Ref<NationalId>[]
			dependentList:Ref<Dependent>[]
			emergencyContactList:Ref<EmergencyContact>[]
			dateEnteredWorkforce:Ref<string>
			workingYears:Ref<int>
			profileImageId:Ref<string>
			emailAddress:Ref<string>
			age:Ref<int>
			highestLevelOfEducation:Ref<Education>
			highestDegreeOfEducation:Ref<Education>
			personalProfile:Ref<PersonalProfile>[]
			nativeRegion:Ref<string>
			hukouType:Ref<Enum>
			hukouLocation:Ref<string>
			politicalAffiliations:Ref<Enum>[]
			talentId:Ref<string>
			customFields:Ref<CustomFieldData>[]
			nationalIdNumber:Ref<string>
			familyAddress:Ref<string>
			personInfoChns:Ref<PersonInfoChn>[]
			bornCountryRegion:Ref<string>
			isDisabled:Ref<bool>
			disableCardNumber:Ref<string>
			isMartyrFamily:Ref<bool>
			martyrCardNumber:Ref<string>
			isOldAlone:Ref<bool>
			residentTaxes:Ref<ResidentTax>[]
			firstEntryTime:Ref<string>
			leaveTime:Ref<string>
			religion:Ref<Enum>
	}
	export interface PersonInfoBuilder extends Struct<PersonInfoBuilder>{

			personId(personId:string):Ref<PersonInfoBuilder>
			phoneNumber(phoneNumber:string):Ref<PersonInfoBuilder>
			legalName(legalName:string):Ref<PersonInfoBuilder>
			preferredName(preferredName:string):Ref<PersonInfoBuilder>
			preferredLocalFullName(preferredLocalFullName:string):Ref<PersonInfoBuilder>
			preferredEnglishFullName(preferredEnglishFullName:string):Ref<PersonInfoBuilder>
			nameList(nameList:Ref<PersonName>[]):Ref<PersonInfoBuilder>
			gender(gender:Ref<Enum>):Ref<PersonInfoBuilder>
			dateOfBirth(dateOfBirth:string):Ref<PersonInfoBuilder>
			nationalityIdV2(nationalityIdV2:string):Ref<PersonInfoBuilder>
			race(race:Ref<Enum>):Ref<PersonInfoBuilder>
			maritalStatus(maritalStatus:Ref<Enum>):Ref<PersonInfoBuilder>
			phoneList(phoneList:Ref<Phone>[]):Ref<PersonInfoBuilder>
			addressList(addressList:Ref<Address>[]):Ref<PersonInfoBuilder>
			emailList(emailList:Ref<Email>[]):Ref<PersonInfoBuilder>
			workExperienceList(workExperienceList:Ref<WorkExperienceInfo>[]):Ref<PersonInfoBuilder>
			educationList(educationList:Ref<Education>[]):Ref<PersonInfoBuilder>
			bankAccountList(bankAccountList:Ref<BankAccount>[]):Ref<PersonInfoBuilder>
			nationalIdList(nationalIdList:Ref<NationalId>[]):Ref<PersonInfoBuilder>
			dependentList(dependentList:Ref<Dependent>[]):Ref<PersonInfoBuilder>
			emergencyContactList(emergencyContactList:Ref<EmergencyContact>[]):Ref<PersonInfoBuilder>
			dateEnteredWorkforce(dateEnteredWorkforce:string):Ref<PersonInfoBuilder>
			workingYears(workingYears:int):Ref<PersonInfoBuilder>
			profileImageId(profileImageId:string):Ref<PersonInfoBuilder>
			emailAddress(emailAddress:string):Ref<PersonInfoBuilder>
			age(age:int):Ref<PersonInfoBuilder>
			highestLevelOfEducation(highestLevelOfEducation:Ref<Education>):Ref<PersonInfoBuilder>
			highestDegreeOfEducation(highestDegreeOfEducation:Ref<Education>):Ref<PersonInfoBuilder>
			personalProfile(personalProfile:Ref<PersonalProfile>[]):Ref<PersonInfoBuilder>
			nativeRegion(nativeRegion:string):Ref<PersonInfoBuilder>
			hukouType(hukouType:Ref<Enum>):Ref<PersonInfoBuilder>
			hukouLocation(hukouLocation:string):Ref<PersonInfoBuilder>
			politicalAffiliations(politicalAffiliations:Ref<Enum>[]):Ref<PersonInfoBuilder>
			talentId(talentId:string):Ref<PersonInfoBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<PersonInfoBuilder>
			nationalIdNumber(nationalIdNumber:string):Ref<PersonInfoBuilder>
			familyAddress(familyAddress:string):Ref<PersonInfoBuilder>
			personInfoChns(personInfoChns:Ref<PersonInfoChn>[]):Ref<PersonInfoBuilder>
			bornCountryRegion(bornCountryRegion:string):Ref<PersonInfoBuilder>
			isDisabled(isDisabled:bool):Ref<PersonInfoBuilder>
			disableCardNumber(disableCardNumber:string):Ref<PersonInfoBuilder>
			isMartyrFamily(isMartyrFamily:bool):Ref<PersonInfoBuilder>
			martyrCardNumber(martyrCardNumber:string):Ref<PersonInfoBuilder>
			isOldAlone(isOldAlone:bool):Ref<PersonInfoBuilder>
			residentTaxes(residentTaxes:Ref<ResidentTax>[]):Ref<PersonInfoBuilder>
			firstEntryTime(firstEntryTime:string):Ref<PersonInfoBuilder>
			leaveTime(leaveTime:string):Ref<PersonInfoBuilder>
			religion(religion:Ref<Enum>):Ref<PersonInfoBuilder>
			build():Ref<PersonInfo>
	}
	export interface PersonInfoChn extends Struct<PersonInfoChn>{

			nativeRegion:Ref<string>
			hukouType:Ref<Enum>
			hukouLocation:Ref<string>
			firstEntryTime:Ref<string>
			leaveTime:Ref<string>
			politicalAffiliations:Ref<Enum>[]
	}
	export interface PersonInfoChnBuilder extends Struct<PersonInfoChnBuilder>{

			nativeRegion(nativeRegion:string):Ref<PersonInfoChnBuilder>
			hukouType(hukouType:Ref<Enum>):Ref<PersonInfoChnBuilder>
			hukouLocation(hukouLocation:string):Ref<PersonInfoChnBuilder>
			firstEntryTime(firstEntryTime:string):Ref<PersonInfoChnBuilder>
			leaveTime(leaveTime:string):Ref<PersonInfoChnBuilder>
			politicalAffiliations(politicalAffiliations:Ref<Enum>[]):Ref<PersonInfoChnBuilder>
			build():Ref<PersonInfoChn>
	}
	export interface PersonName extends Struct<PersonName>{

			localPrimary:Ref<string>
			localFirstName:Ref<string>
			countryRegionId:Ref<string>
			nameType:Ref<Enum>
			localFirstName2:Ref<string>
			localPrimary2:Ref<string>
			additionalNameType:Ref<Enum>
			firstName:Ref<string>
			fullName:Ref<string>
			hereditary:Ref<string>
			customName:Ref<string>
			customLocalName:Ref<string>
			middleName:Ref<string>
			namePrimary:Ref<string>
			secondary:Ref<string>
			social:Ref<Enum>
			tertiary:Ref<string>
			title:Ref<Enum>
			localMiddleName:Ref<string>
			localSecondary:Ref<string>
			displayNameLocalAndWesternScript:Ref<string>
			displayNameLocalScript:Ref<string>
			displayNameWesternScript:Ref<string>
	}
	export interface PersonNameBuilder extends Struct<PersonNameBuilder>{

			localPrimary(localPrimary:string):Ref<PersonNameBuilder>
			localFirstName(localFirstName:string):Ref<PersonNameBuilder>
			countryRegionId(countryRegionId:string):Ref<PersonNameBuilder>
			nameType(nameType:Ref<Enum>):Ref<PersonNameBuilder>
			localFirstName2(localFirstName2:string):Ref<PersonNameBuilder>
			localPrimary2(localPrimary2:string):Ref<PersonNameBuilder>
			additionalNameType(additionalNameType:Ref<Enum>):Ref<PersonNameBuilder>
			firstName(firstName:string):Ref<PersonNameBuilder>
			fullName(fullName:string):Ref<PersonNameBuilder>
			hereditary(hereditary:string):Ref<PersonNameBuilder>
			customName(customName:string):Ref<PersonNameBuilder>
			customLocalName(customLocalName:string):Ref<PersonNameBuilder>
			middleName(middleName:string):Ref<PersonNameBuilder>
			namePrimary(namePrimary:string):Ref<PersonNameBuilder>
			secondary(secondary:string):Ref<PersonNameBuilder>
			social(social:Ref<Enum>):Ref<PersonNameBuilder>
			tertiary(tertiary:string):Ref<PersonNameBuilder>
			title(title:Ref<Enum>):Ref<PersonNameBuilder>
			localMiddleName(localMiddleName:string):Ref<PersonNameBuilder>
			localSecondary(localSecondary:string):Ref<PersonNameBuilder>
			displayNameLocalAndWesternScript(displayNameLocalAndWesternScript:string):Ref<PersonNameBuilder>
			displayNameLocalScript(displayNameLocalScript:string):Ref<PersonNameBuilder>
			displayNameWesternScript(displayNameWesternScript:string):Ref<PersonNameBuilder>
			build():Ref<PersonName>
	}
	export interface PersonalProfile extends Struct<PersonalProfile>{

			personalProfileType:Ref<Enum>
			files:Ref<File>[]
	}
	export interface PersonalProfileBuilder extends Struct<PersonalProfileBuilder>{

			personalProfileType(personalProfileType:Ref<Enum>):Ref<PersonalProfileBuilder>
			files(files:Ref<File>[]):Ref<PersonalProfileBuilder>
			build():Ref<PersonalProfile>
	}
	export interface Phone extends Struct<Phone>{

			internationalAreaCode:Ref<Enum>
			phoneNumber:Ref<string>
			formattedPhoneNumber:Ref<string>
			deviceType:Ref<Enum>
			phoneUsage:Ref<Enum>
			isPrimary:Ref<bool>
			isPublic:Ref<bool>
	}
	export interface PhoneBuilder extends Struct<PhoneBuilder>{

			internationalAreaCode(internationalAreaCode:Ref<Enum>):Ref<PhoneBuilder>
			phoneNumber(phoneNumber:string):Ref<PhoneBuilder>
			formattedPhoneNumber(formattedPhoneNumber:string):Ref<PhoneBuilder>
			deviceType(deviceType:Ref<Enum>):Ref<PhoneBuilder>
			phoneUsage(phoneUsage:Ref<Enum>):Ref<PhoneBuilder>
			isPrimary(isPrimary:bool):Ref<PhoneBuilder>
			isPublic(isPublic:bool):Ref<PhoneBuilder>
			build():Ref<Phone>
	}
	export interface PhoneForUpdate extends Struct<PhoneForUpdate>{

			internationalAreaCode:Ref<string>
			phoneNumber:Ref<string>
			deviceType:Ref<string>
			phoneUsage:Ref<string>
			isPrimary:Ref<bool>
			isPublic:Ref<bool>
	}
	export interface PhoneForUpdateBuilder extends Struct<PhoneForUpdateBuilder>{

			internationalAreaCode(internationalAreaCode:string):Ref<PhoneForUpdateBuilder>
			phoneNumber(phoneNumber:string):Ref<PhoneForUpdateBuilder>
			deviceType(deviceType:string):Ref<PhoneForUpdateBuilder>
			phoneUsage(phoneUsage:string):Ref<PhoneForUpdateBuilder>
			isPrimary(isPrimary:bool):Ref<PhoneForUpdateBuilder>
			isPublic(isPublic:bool):Ref<PhoneForUpdateBuilder>
			build():Ref<PhoneForUpdate>
	}
	export interface PhoneNumberAndAreaCode extends Struct<PhoneNumberAndAreaCode>{

			areaCode:Ref<Enum>
			phoneNumber:Ref<string>
	}
	export interface PhoneNumberAndAreaCodeBuilder extends Struct<PhoneNumberAndAreaCodeBuilder>{

			areaCode(areaCode:Ref<Enum>):Ref<PhoneNumberAndAreaCodeBuilder>
			phoneNumber(phoneNumber:string):Ref<PhoneNumberAndAreaCodeBuilder>
			build():Ref<PhoneNumberAndAreaCode>
	}
	export interface PreHire extends Struct<PreHire>{

			personInfo:Ref<PersonInfo>
			employmentInfo:Ref<PreHireEmploymentInfo>
			onboardingInfo:Ref<PreHireOnboardingInfo>
			probationInfo:Ref<PreHireProbationInfo>
			contractInfo:Ref<PreHireContractInfo>
			preHireId:Ref<string>
	}
	export interface PreHireBuilder extends Struct<PreHireBuilder>{

			personInfo(personInfo:Ref<PersonInfo>):Ref<PreHireBuilder>
			employmentInfo(employmentInfo:Ref<PreHireEmploymentInfo>):Ref<PreHireBuilder>
			onboardingInfo(onboardingInfo:Ref<PreHireOnboardingInfo>):Ref<PreHireBuilder>
			probationInfo(probationInfo:Ref<PreHireProbationInfo>):Ref<PreHireBuilder>
			contractInfo(contractInfo:Ref<PreHireContractInfo>):Ref<PreHireBuilder>
			preHireId(preHireId:string):Ref<PreHireBuilder>
			build():Ref<PreHire>
	}
	export interface PreHireContractInfo extends Struct<PreHireContractInfo>{

			contractStartDate:Ref<string>
			contractEndDate:Ref<string>
			contractType:Ref<string>
			durationType:Ref<string>
			signingType:Ref<string>
	}
	export interface PreHireContractInfoBuilder extends Struct<PreHireContractInfoBuilder>{

			contractStartDate(contractStartDate:string):Ref<PreHireContractInfoBuilder>
			contractEndDate(contractEndDate:string):Ref<PreHireContractInfoBuilder>
			contractType(contractType:string):Ref<PreHireContractInfoBuilder>
			durationType(durationType:string):Ref<PreHireContractInfoBuilder>
			signingType(signingType:string):Ref<PreHireContractInfoBuilder>
			build():Ref<PreHireContractInfo>
	}
	export interface PreHireEmploymentInfo extends Struct<PreHireEmploymentInfo>{

			departmentId:Ref<string>
			costCenterRates:Ref<JobDataCostCenter>[]
			officeLocationId:Ref<string>
			workLocationId:Ref<string>
			workStation:Ref<string>
			workerId:Ref<string>
			compensationType:Ref<Enum>
			directLeaderId:Ref<string>
			jobId:Ref<string>
			jobFamilyId:Ref<string>
			jobLevelId:Ref<string>
			jobGradeId:Ref<string>
			jobTitle:Ref<string>
			employeeTypeId:Ref<string>
			employmentType:Ref<string>
			workEmail:Ref<string>
			companyId:Ref<string>
			socialSecurityCityId:Ref<string>
			nonCompeteCovenant:Ref<bool>
			weeklyWorkingHours:Ref<int>
			rehire:Ref<string>
			rehireEmploymentId:Ref<string>
			workingHoursType:Ref<string>
			weeklyWorkingHoursV2:Ref<float64>
			officeAddress:Ref<Address>
			workingCalendarId:Ref<string>
			updatedAt:Ref<string>
			suspectedRehiring:Ref<bool>
			customFields:Ref<CustomFieldData>[]
	}
	export interface PreHireEmploymentInfoBuilder extends Struct<PreHireEmploymentInfoBuilder>{

			departmentId(departmentId:string):Ref<PreHireEmploymentInfoBuilder>
			costCenterRates(costCenterRates:Ref<JobDataCostCenter>[]):Ref<PreHireEmploymentInfoBuilder>
			officeLocationId(officeLocationId:string):Ref<PreHireEmploymentInfoBuilder>
			workLocationId(workLocationId:string):Ref<PreHireEmploymentInfoBuilder>
			workStation(workStation:string):Ref<PreHireEmploymentInfoBuilder>
			workerId(workerId:string):Ref<PreHireEmploymentInfoBuilder>
			compensationType(compensationType:Ref<Enum>):Ref<PreHireEmploymentInfoBuilder>
			directLeaderId(directLeaderId:string):Ref<PreHireEmploymentInfoBuilder>
			jobId(jobId:string):Ref<PreHireEmploymentInfoBuilder>
			jobFamilyId(jobFamilyId:string):Ref<PreHireEmploymentInfoBuilder>
			jobLevelId(jobLevelId:string):Ref<PreHireEmploymentInfoBuilder>
			jobGradeId(jobGradeId:string):Ref<PreHireEmploymentInfoBuilder>
			jobTitle(jobTitle:string):Ref<PreHireEmploymentInfoBuilder>
			employeeTypeId(employeeTypeId:string):Ref<PreHireEmploymentInfoBuilder>
			employmentType(employmentType:string):Ref<PreHireEmploymentInfoBuilder>
			workEmail(workEmail:string):Ref<PreHireEmploymentInfoBuilder>
			companyId(companyId:string):Ref<PreHireEmploymentInfoBuilder>
			socialSecurityCityId(socialSecurityCityId:string):Ref<PreHireEmploymentInfoBuilder>
			nonCompeteCovenant(nonCompeteCovenant:bool):Ref<PreHireEmploymentInfoBuilder>
			weeklyWorkingHours(weeklyWorkingHours:int):Ref<PreHireEmploymentInfoBuilder>
			rehire(rehire:string):Ref<PreHireEmploymentInfoBuilder>
			rehireEmploymentId(rehireEmploymentId:string):Ref<PreHireEmploymentInfoBuilder>
			workingHoursType(workingHoursType:string):Ref<PreHireEmploymentInfoBuilder>
			weeklyWorkingHoursV2(weeklyWorkingHoursV2:float64):Ref<PreHireEmploymentInfoBuilder>
			officeAddress(officeAddress:Ref<Address>):Ref<PreHireEmploymentInfoBuilder>
			workingCalendarId(workingCalendarId:string):Ref<PreHireEmploymentInfoBuilder>
			updatedAt(updatedAt:string):Ref<PreHireEmploymentInfoBuilder>
			suspectedRehiring(suspectedRehiring:bool):Ref<PreHireEmploymentInfoBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<PreHireEmploymentInfoBuilder>
			build():Ref<PreHireEmploymentInfo>
	}
	export interface PreHireOnboardingInfo extends Struct<PreHireOnboardingInfo>{

			offerId:Ref<string>
			offerHrId:Ref<string>
			entryMode:Ref<string>
			onboardingDate:Ref<string>
			atsApplicationId:Ref<string>
			recruitmentType:Ref<string>
			onboardingLocationId:Ref<string>
			companySponsoredVisa:Ref<bool>
			onboardingStatus:Ref<string>
			onboardingTaskList:Ref<OnboardingTask>[]
			onboardingAddress:Ref<Address>
			flowName:Ref<I18n>[]
	}
	export interface PreHireOnboardingInfoBuilder extends Struct<PreHireOnboardingInfoBuilder>{

			offerId(offerId:string):Ref<PreHireOnboardingInfoBuilder>
			offerHrId(offerHrId:string):Ref<PreHireOnboardingInfoBuilder>
			entryMode(entryMode:string):Ref<PreHireOnboardingInfoBuilder>
			onboardingDate(onboardingDate:string):Ref<PreHireOnboardingInfoBuilder>
			atsApplicationId(atsApplicationId:string):Ref<PreHireOnboardingInfoBuilder>
			recruitmentType(recruitmentType:string):Ref<PreHireOnboardingInfoBuilder>
			onboardingLocationId(onboardingLocationId:string):Ref<PreHireOnboardingInfoBuilder>
			companySponsoredVisa(companySponsoredVisa:bool):Ref<PreHireOnboardingInfoBuilder>
			onboardingStatus(onboardingStatus:string):Ref<PreHireOnboardingInfoBuilder>
			onboardingTaskList(onboardingTaskList:Ref<OnboardingTask>[]):Ref<PreHireOnboardingInfoBuilder>
			onboardingAddress(onboardingAddress:Ref<Address>):Ref<PreHireOnboardingInfoBuilder>
			flowName(flowName:Ref<I18n>[]):Ref<PreHireOnboardingInfoBuilder>
			build():Ref<PreHireOnboardingInfo>
	}
	export interface PreHireProbationInfo extends Struct<PreHireProbationInfo>{

			probationStartDate:Ref<string>
			probationEndDate:Ref<string>
			probationPeriod:Ref<int>
	}
	export interface PreHireProbationInfoBuilder extends Struct<PreHireProbationInfoBuilder>{

			probationStartDate(probationStartDate:string):Ref<PreHireProbationInfoBuilder>
			probationEndDate(probationEndDate:string):Ref<PreHireProbationInfoBuilder>
			probationPeriod(probationPeriod:int):Ref<PreHireProbationInfoBuilder>
			build():Ref<PreHireProbationInfo>
	}
	export interface PrehireCreate extends Struct<PrehireCreate>{

			basicInfo:Ref<BasicInfo>
			offerInfo:Ref<OfferInfo>
			educationInfo:Ref<EducationInfo>[]
			workExperience:Ref<WorkExperience>[]
			atsApplicationId:Ref<string>
	}
	export interface PrehireCreateBuilder extends Struct<PrehireCreateBuilder>{

			basicInfo(basicInfo:Ref<BasicInfo>):Ref<PrehireCreateBuilder>
			offerInfo(offerInfo:Ref<OfferInfo>):Ref<PrehireCreateBuilder>
			educationInfo(educationInfo:Ref<EducationInfo>[]):Ref<PrehireCreateBuilder>
			workExperience(workExperience:Ref<WorkExperience>[]):Ref<PrehireCreateBuilder>
			atsApplicationId(atsApplicationId:string):Ref<PrehireCreateBuilder>
			build():Ref<PrehireCreate>
	}
	export interface PrehireUpdate extends Struct<PrehireUpdate>{

			basicInfoUpdate:Ref<BasicInfoUpdate>
			offerInfoUpdate:Ref<OfferInfoUpdate>
			standardUpdateFields:string[]
			customUpdateFields:string[]
	}
	export interface PrehireUpdateBuilder extends Struct<PrehireUpdateBuilder>{

			basicInfoUpdate(basicInfoUpdate:Ref<BasicInfoUpdate>):Ref<PrehireUpdateBuilder>
			offerInfoUpdate(offerInfoUpdate:Ref<OfferInfoUpdate>):Ref<PrehireUpdateBuilder>
			standardUpdateFields(standardUpdateFields:string[]):Ref<PrehireUpdateBuilder>
			customUpdateFields(customUpdateFields:string[]):Ref<PrehireUpdateBuilder>
			build():Ref<PrehireUpdate>
	}
	export interface ProbationInfo extends Struct<ProbationInfo>{

			employmentId:Ref<string>
			probationId:Ref<string>
			probationStartDate:Ref<string>
			probationExpectedEndDate:Ref<string>
			actualProbationEndDate:Ref<string>
			initiatingTime:Ref<string>
			submissionType:Ref<Enum>
			initiatorId:Ref<string>
			probationStatus:Ref<Enum>
			selfReview:Ref<string>
			notes:Ref<string>
			processId:Ref<string>
			convertedViaBpm:Ref<bool>
			customFields:Ref<CustomFieldData>[]
			finalAssessmentStatus:Ref<Enum>
			finalAssessmentResult:Ref<Enum>
			finalAssessmentScore:Ref<float64>
			finalAssessmentGrade:Ref<Enum>
			finalAssessmentComment:Ref<string>
			finalAssessmentDetail:Ref<string>
			assessments:Ref<Assessment>[]
	}
	export interface ProbationInfoBuilder extends Struct<ProbationInfoBuilder>{

			employmentId(employmentId:string):Ref<ProbationInfoBuilder>
			probationId(probationId:string):Ref<ProbationInfoBuilder>
			probationStartDate(probationStartDate:string):Ref<ProbationInfoBuilder>
			probationExpectedEndDate(probationExpectedEndDate:string):Ref<ProbationInfoBuilder>
			actualProbationEndDate(actualProbationEndDate:string):Ref<ProbationInfoBuilder>
			initiatingTime(initiatingTime:string):Ref<ProbationInfoBuilder>
			submissionType(submissionType:Ref<Enum>):Ref<ProbationInfoBuilder>
			initiatorId(initiatorId:string):Ref<ProbationInfoBuilder>
			probationStatus(probationStatus:Ref<Enum>):Ref<ProbationInfoBuilder>
			selfReview(selfReview:string):Ref<ProbationInfoBuilder>
			notes(notes:string):Ref<ProbationInfoBuilder>
			processId(processId:string):Ref<ProbationInfoBuilder>
			convertedViaBpm(convertedViaBpm:bool):Ref<ProbationInfoBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<ProbationInfoBuilder>
			finalAssessmentStatus(finalAssessmentStatus:Ref<Enum>):Ref<ProbationInfoBuilder>
			finalAssessmentResult(finalAssessmentResult:Ref<Enum>):Ref<ProbationInfoBuilder>
			finalAssessmentScore(finalAssessmentScore:float64):Ref<ProbationInfoBuilder>
			finalAssessmentGrade(finalAssessmentGrade:Ref<Enum>):Ref<ProbationInfoBuilder>
			finalAssessmentComment(finalAssessmentComment:string):Ref<ProbationInfoBuilder>
			finalAssessmentDetail(finalAssessmentDetail:string):Ref<ProbationInfoBuilder>
			assessments(assessments:Ref<Assessment>[]):Ref<ProbationInfoBuilder>
			build():Ref<ProbationInfo>
	}
	export interface ProbationInfoForSubmit extends Struct<ProbationInfoForSubmit>{

			employmentId:Ref<string>
			probationId:Ref<string>
			probationStartDate:Ref<string>
			probationExpectedEndDate:Ref<string>
			actualProbationEndDate:Ref<string>
			initiatingTime:Ref<string>
			submissionType:Ref<Enum>
			initiatorId:Ref<string>
			probationStatus:Ref<Enum>
			selfReview:Ref<string>
			notes:Ref<string>
			processId:Ref<string>
			convertedViaBpm:Ref<bool>
			customFields:Ref<CustomFieldData>[]
			finalAssessmentStatus:Ref<Enum>
			finalAssessmentResult:Ref<Enum>
			finalAssessmentScore:Ref<float64>
			finalAssessmentGrade:Ref<Enum>
			finalAssessmentComment:Ref<string>
			finalAssessmentDetail:Ref<string>
	}
	export interface ProbationInfoForSubmitBuilder extends Struct<ProbationInfoForSubmitBuilder>{

			employmentId(employmentId:string):Ref<ProbationInfoForSubmitBuilder>
			probationId(probationId:string):Ref<ProbationInfoForSubmitBuilder>
			probationStartDate(probationStartDate:string):Ref<ProbationInfoForSubmitBuilder>
			probationExpectedEndDate(probationExpectedEndDate:string):Ref<ProbationInfoForSubmitBuilder>
			actualProbationEndDate(actualProbationEndDate:string):Ref<ProbationInfoForSubmitBuilder>
			initiatingTime(initiatingTime:string):Ref<ProbationInfoForSubmitBuilder>
			submissionType(submissionType:Ref<Enum>):Ref<ProbationInfoForSubmitBuilder>
			initiatorId(initiatorId:string):Ref<ProbationInfoForSubmitBuilder>
			probationStatus(probationStatus:Ref<Enum>):Ref<ProbationInfoForSubmitBuilder>
			selfReview(selfReview:string):Ref<ProbationInfoForSubmitBuilder>
			notes(notes:string):Ref<ProbationInfoForSubmitBuilder>
			processId(processId:string):Ref<ProbationInfoForSubmitBuilder>
			convertedViaBpm(convertedViaBpm:bool):Ref<ProbationInfoForSubmitBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<ProbationInfoForSubmitBuilder>
			finalAssessmentStatus(finalAssessmentStatus:Ref<Enum>):Ref<ProbationInfoForSubmitBuilder>
			finalAssessmentResult(finalAssessmentResult:Ref<Enum>):Ref<ProbationInfoForSubmitBuilder>
			finalAssessmentScore(finalAssessmentScore:float64):Ref<ProbationInfoForSubmitBuilder>
			finalAssessmentGrade(finalAssessmentGrade:Ref<Enum>):Ref<ProbationInfoForSubmitBuilder>
			finalAssessmentComment(finalAssessmentComment:string):Ref<ProbationInfoForSubmitBuilder>
			finalAssessmentDetail(finalAssessmentDetail:string):Ref<ProbationInfoForSubmitBuilder>
			build():Ref<ProbationInfoForSubmit>
	}
	//"approved"
	export const ProbationStatusApproved:string
	//"converted"
	export const ProbationStatusConverted:string
	//"offboarded"
	export const ProbationStatusOffboarded:string
	//"pending"
	export const ProbationStatusPending:string
	//"rejected"
	export const ProbationStatusRejected:string
	//"waiting"
	export const ProbationStatusWaiting:string
	export interface ProcessAbstractItem extends Struct<ProcessAbstractItem>{

			name:Ref<DataengineI18n>
			value:Ref<DataengineI18n>
	}
	export interface ProcessAbstractItemBuilder extends Struct<ProcessAbstractItemBuilder>{

			name(name:Ref<DataengineI18n>):Ref<ProcessAbstractItemBuilder>
			value(value:Ref<DataengineI18n>):Ref<ProcessAbstractItemBuilder>
			build():Ref<ProcessAbstractItem>
	}
	export interface ProcessApprover extends Struct<ProcessApprover>{

			status:Ref<int>
			userId:Ref<string>
			systemApproval:Ref<bool>
			reason:Ref<string>
			fieldValuesV2:Ref<ProcessFormVariableV2>[]
	}
	export interface ProcessApproverBuilder extends Struct<ProcessApproverBuilder>{

			status(status:int):Ref<ProcessApproverBuilder>
			userId(userId:string):Ref<ProcessApproverBuilder>
			systemApproval(systemApproval:bool):Ref<ProcessApproverBuilder>
			reason(reason:string):Ref<ProcessApproverBuilder>
			fieldValuesV2(fieldValuesV2:Ref<ProcessFormVariableV2>[]):Ref<ProcessApproverBuilder>
			build():Ref<ProcessApprover>
	}
	export interface ProcessCcItem extends Struct<ProcessCcItem>{

			approverId:Ref<string>
			links:Ref<ProcessLink>
			operatorId:Ref<string>
			operatorName:Ref<DataengineI18n>
			nodeName:Ref<DataengineI18n>
			createTime:Ref<string>
			nodeDefinitionId:Ref<string>
	}
	export interface ProcessCcItemBuilder extends Struct<ProcessCcItemBuilder>{

			approverId(approverId:string):Ref<ProcessCcItemBuilder>
			links(links:Ref<ProcessLink>):Ref<ProcessCcItemBuilder>
			operatorId(operatorId:string):Ref<ProcessCcItemBuilder>
			operatorName(operatorName:Ref<DataengineI18n>):Ref<ProcessCcItemBuilder>
			nodeName(nodeName:Ref<DataengineI18n>):Ref<ProcessCcItemBuilder>
			createTime(createTime:string):Ref<ProcessCcItemBuilder>
			nodeDefinitionId(nodeDefinitionId:string):Ref<ProcessCcItemBuilder>
			build():Ref<ProcessCcItem>
	}
	export interface ProcessDoneItem extends Struct<ProcessDoneItem>{

			approverId:Ref<string>
			type:Ref<int>
			status:Ref<int>
			links:Ref<ProcessLink>
			operatorId:Ref<string>
			operatorName:Ref<DataengineI18n>
			nodeName:Ref<DataengineI18n>
			createTime:Ref<string>
			completeTime:Ref<string>
			nodeDefinitionId:Ref<string>
	}
	export interface ProcessDoneItemBuilder extends Struct<ProcessDoneItemBuilder>{

			approverId(approverId:string):Ref<ProcessDoneItemBuilder>
			type(type_:int):Ref<ProcessDoneItemBuilder>
			status(status:int):Ref<ProcessDoneItemBuilder>
			links(links:Ref<ProcessLink>):Ref<ProcessDoneItemBuilder>
			operatorId(operatorId:string):Ref<ProcessDoneItemBuilder>
			operatorName(operatorName:Ref<DataengineI18n>):Ref<ProcessDoneItemBuilder>
			nodeName(nodeName:Ref<DataengineI18n>):Ref<ProcessDoneItemBuilder>
			createTime(createTime:string):Ref<ProcessDoneItemBuilder>
			completeTime(completeTime:string):Ref<ProcessDoneItemBuilder>
			nodeDefinitionId(nodeDefinitionId:string):Ref<ProcessDoneItemBuilder>
			build():Ref<ProcessDoneItem>
	}
	export interface ProcessFormVariable extends Struct<ProcessFormVariable>{

			variableApiName:Ref<string>
			variableValue:Ref<FormVariableValueInfo>
	}
	export interface ProcessFormVariableBuilder extends Struct<ProcessFormVariableBuilder>{

			variableApiName(variableApiName:string):Ref<ProcessFormVariableBuilder>
			variableValue(variableValue:Ref<FormVariableValueInfo>):Ref<ProcessFormVariableBuilder>
			build():Ref<ProcessFormVariable>
	}
	export interface ProcessFormVariableV2 extends Struct<ProcessFormVariableV2>{

			variableApiName:Ref<string>
			variableValue:Ref<FieldVariableValueToForReview>
			subValues:Ref<FieldVariableSubVlaueForReview>[]
	}
	export interface ProcessFormVariableV2Builder extends Struct<ProcessFormVariableV2Builder>{

			variableApiName(variableApiName:string):Ref<ProcessFormVariableV2Builder>
			variableValue(variableValue:Ref<FieldVariableValueToForReview>):Ref<ProcessFormVariableV2Builder>
			subValues(subValues:Ref<FieldVariableSubVlaueForReview>[]):Ref<ProcessFormVariableV2Builder>
			build():Ref<ProcessFormVariableV2>
	}
	export interface ProcessLink extends Struct<ProcessLink>{

			webLink:Ref<string>
			pcLink:Ref<string>
			mobileLink:Ref<string>
	}
	export interface ProcessLinkBuilder extends Struct<ProcessLinkBuilder>{

			webLink(webLink:string):Ref<ProcessLinkBuilder>
			pcLink(pcLink:string):Ref<ProcessLinkBuilder>
			mobileLink(mobileLink:string):Ref<ProcessLinkBuilder>
			build():Ref<ProcessLink>
	}
	export interface ProcessTodoItem extends Struct<ProcessTodoItem>{

			approverId:Ref<string>
			type:Ref<int>
			links:Ref<ProcessLink>
			operatorId:Ref<string>
			operatorName:Ref<DataengineI18n>
			nodeName:Ref<DataengineI18n>
			createTime:Ref<string>
			nodeDefinitionId:Ref<string>
	}
	export interface ProcessTodoItemBuilder extends Struct<ProcessTodoItemBuilder>{

			approverId(approverId:string):Ref<ProcessTodoItemBuilder>
			type(type_:int):Ref<ProcessTodoItemBuilder>
			links(links:Ref<ProcessLink>):Ref<ProcessTodoItemBuilder>
			operatorId(operatorId:string):Ref<ProcessTodoItemBuilder>
			operatorName(operatorName:Ref<DataengineI18n>):Ref<ProcessTodoItemBuilder>
			nodeName(nodeName:Ref<DataengineI18n>):Ref<ProcessTodoItemBuilder>
			createTime(createTime:string):Ref<ProcessTodoItemBuilder>
			nodeDefinitionId(nodeDefinitionId:string):Ref<ProcessTodoItemBuilder>
			build():Ref<ProcessTodoItem>
	}
	export interface ProfileSettingAddress extends Struct<ProfileSettingAddress>{

			addressType:Ref<string>
			countryRegion:Ref<string>
			region:Ref<string>
			regionSubdivision1:Ref<string>
			regionSubdivision2:Ref<string>
			cityV2:Ref<string>
			cityText:Ref<string>
			localCityText:Ref<string>
			citySubdivision1:Ref<string>
			citySubdivision2:Ref<string>
			districtV2:Ref<string>
			postalCode:Ref<string>
			addressLine1:Ref<string>
			localAddressLine1:Ref<string>
			addressLine2:Ref<string>
			localAddressLine2:Ref<string>
			addressLine3:Ref<string>
			localAddressLine3:Ref<string>
			addressLine4:Ref<string>
			localAddressLine5:Ref<string>
			addressLine6:Ref<string>
			localAddressLine6:Ref<string>
			addressLine7:Ref<string>
			localAddressLine7:Ref<string>
			addressLine8:Ref<string>
			localAddressLine8:Ref<string>
			addressLine9:Ref<string>
			localAddressLine9:Ref<string>
			localAddressLine4:Ref<string>
			addressLine5:Ref<string>
	}
	export interface ProfileSettingAddressBuilder extends Struct<ProfileSettingAddressBuilder>{

			addressType(addressType:string):Ref<ProfileSettingAddressBuilder>
			countryRegion(countryRegion:string):Ref<ProfileSettingAddressBuilder>
			region(region:string):Ref<ProfileSettingAddressBuilder>
			regionSubdivision1(regionSubdivision1:string):Ref<ProfileSettingAddressBuilder>
			regionSubdivision2(regionSubdivision2:string):Ref<ProfileSettingAddressBuilder>
			cityV2(cityV2:string):Ref<ProfileSettingAddressBuilder>
			cityText(cityText:string):Ref<ProfileSettingAddressBuilder>
			localCityText(localCityText:string):Ref<ProfileSettingAddressBuilder>
			citySubdivision1(citySubdivision1:string):Ref<ProfileSettingAddressBuilder>
			citySubdivision2(citySubdivision2:string):Ref<ProfileSettingAddressBuilder>
			districtV2(districtV2:string):Ref<ProfileSettingAddressBuilder>
			postalCode(postalCode:string):Ref<ProfileSettingAddressBuilder>
			addressLine1(addressLine1:string):Ref<ProfileSettingAddressBuilder>
			localAddressLine1(localAddressLine1:string):Ref<ProfileSettingAddressBuilder>
			addressLine2(addressLine2:string):Ref<ProfileSettingAddressBuilder>
			localAddressLine2(localAddressLine2:string):Ref<ProfileSettingAddressBuilder>
			addressLine3(addressLine3:string):Ref<ProfileSettingAddressBuilder>
			localAddressLine3(localAddressLine3:string):Ref<ProfileSettingAddressBuilder>
			addressLine4(addressLine4:string):Ref<ProfileSettingAddressBuilder>
			localAddressLine5(localAddressLine5:string):Ref<ProfileSettingAddressBuilder>
			addressLine6(addressLine6:string):Ref<ProfileSettingAddressBuilder>
			localAddressLine6(localAddressLine6:string):Ref<ProfileSettingAddressBuilder>
			addressLine7(addressLine7:string):Ref<ProfileSettingAddressBuilder>
			localAddressLine7(localAddressLine7:string):Ref<ProfileSettingAddressBuilder>
			addressLine8(addressLine8:string):Ref<ProfileSettingAddressBuilder>
			localAddressLine8(localAddressLine8:string):Ref<ProfileSettingAddressBuilder>
			addressLine9(addressLine9:string):Ref<ProfileSettingAddressBuilder>
			localAddressLine9(localAddressLine9:string):Ref<ProfileSettingAddressBuilder>
			localAddressLine4(localAddressLine4:string):Ref<ProfileSettingAddressBuilder>
			addressLine5(addressLine5:string):Ref<ProfileSettingAddressBuilder>
			build():Ref<ProfileSettingAddress>
	}
	export interface ProfileSettingBankAccount extends Struct<ProfileSettingBankAccount>{

			countryRegion:Ref<string>
			bankName:Ref<string>
			branchName:Ref<string>
			accountHolder:Ref<string>
			bankAccountNumber:Ref<string>
			bankAccountUsages:string[]
			bankAccountType:Ref<string>
			bankId:Ref<string>
			branchId:Ref<string>
	}
	export interface ProfileSettingBankAccountBuilder extends Struct<ProfileSettingBankAccountBuilder>{

			countryRegion(countryRegion:string):Ref<ProfileSettingBankAccountBuilder>
			bankName(bankName:string):Ref<ProfileSettingBankAccountBuilder>
			branchName(branchName:string):Ref<ProfileSettingBankAccountBuilder>
			accountHolder(accountHolder:string):Ref<ProfileSettingBankAccountBuilder>
			bankAccountNumber(bankAccountNumber:string):Ref<ProfileSettingBankAccountBuilder>
			bankAccountUsages(bankAccountUsages:string[]):Ref<ProfileSettingBankAccountBuilder>
			bankAccountType(bankAccountType:string):Ref<ProfileSettingBankAccountBuilder>
			bankId(bankId:string):Ref<ProfileSettingBankAccountBuilder>
			branchId(branchId:string):Ref<ProfileSettingBankAccountBuilder>
			build():Ref<ProfileSettingBankAccount>
	}
	export interface ProfileSettingCareer extends Struct<ProfileSettingCareer>{

			educations:Ref<ProfileSettingEducation>[]
			workExperiences:Ref<ProfileSettingWorkExperience>[]
			customGroups:Ref<ProfileSettingCustomGroup>[]
	}
	export interface ProfileSettingCareerBuilder extends Struct<ProfileSettingCareerBuilder>{

			educations(educations:Ref<ProfileSettingEducation>[]):Ref<ProfileSettingCareerBuilder>
			workExperiences(workExperiences:Ref<ProfileSettingWorkExperience>[]):Ref<ProfileSettingCareerBuilder>
			customGroups(customGroups:Ref<ProfileSettingCustomGroup>[]):Ref<ProfileSettingCareerBuilder>
			build():Ref<ProfileSettingCareer>
	}
	export interface ProfileSettingCostCenter extends Struct<ProfileSettingCostCenter>{

			id:Ref<string>
			rate:Ref<int>
	}
	export interface ProfileSettingCostCenterBuilder extends Struct<ProfileSettingCostCenterBuilder>{

			id(id:string):Ref<ProfileSettingCostCenterBuilder>
			rate(rate:int):Ref<ProfileSettingCostCenterBuilder>
			build():Ref<ProfileSettingCostCenter>
	}
	export interface ProfileSettingCustomField extends Struct<ProfileSettingCustomField>{

			fieldName:Ref<string>
			value:Ref<string>
	}
	export interface ProfileSettingCustomFieldBuilder extends Struct<ProfileSettingCustomFieldBuilder>{

			fieldName(fieldName:string):Ref<ProfileSettingCustomFieldBuilder>
			value(value:string):Ref<ProfileSettingCustomFieldBuilder>
			build():Ref<ProfileSettingCustomField>
	}
	export interface ProfileSettingCustomGroup extends Struct<ProfileSettingCustomGroup>{

			groupName:Ref<string>
			items:Ref<ProfileSettingCustomGroupItem>[]
	}
	export interface ProfileSettingCustomGroupBuilder extends Struct<ProfileSettingCustomGroupBuilder>{

			groupName(groupName:string):Ref<ProfileSettingCustomGroupBuilder>
			items(items:Ref<ProfileSettingCustomGroupItem>[]):Ref<ProfileSettingCustomGroupBuilder>
			build():Ref<ProfileSettingCustomGroup>
	}
	export interface ProfileSettingCustomGroupItem extends Struct<ProfileSettingCustomGroupItem>{

			customFields:Ref<ProfileSettingCustomField>[]
	}
	export interface ProfileSettingCustomGroupItemBuilder extends Struct<ProfileSettingCustomGroupItemBuilder>{

			customFields(customFields:Ref<ProfileSettingCustomField>[]):Ref<ProfileSettingCustomGroupItemBuilder>
			build():Ref<ProfileSettingCustomGroupItem>
	}
	export interface ProfileSettingDataAttachment extends Struct<ProfileSettingDataAttachment>{

			personalRecords:Ref<ProfileSettingPersonalRecord>[]
			customGroups:Ref<ProfileSettingCustomGroup>[]
	}
	export interface ProfileSettingDataAttachmentBuilder extends Struct<ProfileSettingDataAttachmentBuilder>{

			personalRecords(personalRecords:Ref<ProfileSettingPersonalRecord>[]):Ref<ProfileSettingDataAttachmentBuilder>
			customGroups(customGroups:Ref<ProfileSettingCustomGroup>[]):Ref<ProfileSettingDataAttachmentBuilder>
			build():Ref<ProfileSettingDataAttachment>
	}
	export interface ProfileSettingDependent extends Struct<ProfileSettingDependent>{

			legalName:Ref<string>
			dateOfBirth:Ref<string>
			relationshipWithDependent:Ref<string>
			gender:Ref<string>
			phone:Ref<ProfileSettingPhone>
			job:Ref<string>
			childBirthCertificates:Ref<ProfileSettingFile>[]
			employer:Ref<string>
			customFields:Ref<ProfileSettingCustomField>[]
			address:Ref<ProfileSettingAddress>
	}
	export interface ProfileSettingDependentBuilder extends Struct<ProfileSettingDependentBuilder>{

			legalName(legalName:string):Ref<ProfileSettingDependentBuilder>
			dateOfBirth(dateOfBirth:string):Ref<ProfileSettingDependentBuilder>
			relationshipWithDependent(relationshipWithDependent:string):Ref<ProfileSettingDependentBuilder>
			gender(gender:string):Ref<ProfileSettingDependentBuilder>
			phone(phone:Ref<ProfileSettingPhone>):Ref<ProfileSettingDependentBuilder>
			job(job:string):Ref<ProfileSettingDependentBuilder>
			childBirthCertificates(childBirthCertificates:Ref<ProfileSettingFile>[]):Ref<ProfileSettingDependentBuilder>
			employer(employer:string):Ref<ProfileSettingDependentBuilder>
			customFields(customFields:Ref<ProfileSettingCustomField>[]):Ref<ProfileSettingDependentBuilder>
			address(address:Ref<ProfileSettingAddress>):Ref<ProfileSettingDependentBuilder>
			build():Ref<ProfileSettingDependent>
	}
	export interface ProfileSettingEducation extends Struct<ProfileSettingEducation>{

			school:Ref<string>
			schoolEnum:Ref<string>
			startDate:Ref<string>
			endDate:Ref<string>
			levelOfEducation:Ref<string>
			fieldOfStudy:Ref<string>
			degree:Ref<string>
			fieldOfStudyEnum:Ref<string>
			customFields:Ref<ProfileSettingCustomField>[]
	}
	export interface ProfileSettingEducationBuilder extends Struct<ProfileSettingEducationBuilder>{

			school(school:string):Ref<ProfileSettingEducationBuilder>
			schoolEnum(schoolEnum:string):Ref<ProfileSettingEducationBuilder>
			startDate(startDate:string):Ref<ProfileSettingEducationBuilder>
			endDate(endDate:string):Ref<ProfileSettingEducationBuilder>
			levelOfEducation(levelOfEducation:string):Ref<ProfileSettingEducationBuilder>
			fieldOfStudy(fieldOfStudy:string):Ref<ProfileSettingEducationBuilder>
			degree(degree:string):Ref<ProfileSettingEducationBuilder>
			fieldOfStudyEnum(fieldOfStudyEnum:string):Ref<ProfileSettingEducationBuilder>
			customFields(customFields:Ref<ProfileSettingCustomField>[]):Ref<ProfileSettingEducationBuilder>
			build():Ref<ProfileSettingEducation>
	}
	export interface ProfileSettingEmergencyContact extends Struct<ProfileSettingEmergencyContact>{

			legalName:Ref<string>
			relationship:Ref<string>
			isPrimary:Ref<bool>
			phone:Ref<ProfileSettingPhone>
			email:Ref<string>
			address:Ref<ProfileSettingAddress>
			customFields:Ref<ProfileSettingCustomField>[]
	}
	export interface ProfileSettingEmergencyContactBuilder extends Struct<ProfileSettingEmergencyContactBuilder>{

			legalName(legalName:string):Ref<ProfileSettingEmergencyContactBuilder>
			relationship(relationship:string):Ref<ProfileSettingEmergencyContactBuilder>
			isPrimary(isPrimary:bool):Ref<ProfileSettingEmergencyContactBuilder>
			phone(phone:Ref<ProfileSettingPhone>):Ref<ProfileSettingEmergencyContactBuilder>
			email(email:string):Ref<ProfileSettingEmergencyContactBuilder>
			address(address:Ref<ProfileSettingAddress>):Ref<ProfileSettingEmergencyContactBuilder>
			customFields(customFields:Ref<ProfileSettingCustomField>[]):Ref<ProfileSettingEmergencyContactBuilder>
			build():Ref<ProfileSettingEmergencyContact>
	}
	export interface ProfileSettingEmpBasicInfoForUpdate extends Struct<ProfileSettingEmpBasicInfoForUpdate>{

			employeeNumber:Ref<string>
			regularEmployeeStartDate:Ref<string>
			seniorityDate:Ref<string>
			workEmail:Ref<string>
			phone:Ref<ProfileSettingPhone>
			customFields:Ref<ProfileSettingCustomField>[]
	}
	export interface ProfileSettingEmpBasicInfoForUpdateBuilder extends Struct<ProfileSettingEmpBasicInfoForUpdateBuilder>{

			employeeNumber(employeeNumber:string):Ref<ProfileSettingEmpBasicInfoForUpdateBuilder>
			regularEmployeeStartDate(regularEmployeeStartDate:string):Ref<ProfileSettingEmpBasicInfoForUpdateBuilder>
			seniorityDate(seniorityDate:string):Ref<ProfileSettingEmpBasicInfoForUpdateBuilder>
			workEmail(workEmail:string):Ref<ProfileSettingEmpBasicInfoForUpdateBuilder>
			phone(phone:Ref<ProfileSettingPhone>):Ref<ProfileSettingEmpBasicInfoForUpdateBuilder>
			customFields(customFields:Ref<ProfileSettingCustomField>[]):Ref<ProfileSettingEmpBasicInfoForUpdateBuilder>
			build():Ref<ProfileSettingEmpBasicInfoForUpdate>
	}
	export interface ProfileSettingEmpContractRecord extends Struct<ProfileSettingEmpContractRecord>{

			contractNumber:Ref<string>
			contractType:Ref<string>
			firstParty:Ref<string>
			effectiveTime:Ref<string>
			durationType:Ref<string>
			contractEndDate:Ref<string>
	}
	export interface ProfileSettingEmpContractRecordBuilder extends Struct<ProfileSettingEmpContractRecordBuilder>{

			contractNumber(contractNumber:string):Ref<ProfileSettingEmpContractRecordBuilder>
			contractType(contractType:string):Ref<ProfileSettingEmpContractRecordBuilder>
			firstParty(firstParty:string):Ref<ProfileSettingEmpContractRecordBuilder>
			effectiveTime(effectiveTime:string):Ref<ProfileSettingEmpContractRecordBuilder>
			durationType(durationType:string):Ref<ProfileSettingEmpContractRecordBuilder>
			contractEndDate(contractEndDate:string):Ref<ProfileSettingEmpContractRecordBuilder>
			build():Ref<ProfileSettingEmpContractRecord>
	}
	export interface ProfileSettingEmpInfoForUpdate extends Struct<ProfileSettingEmpInfoForUpdate>{

			basicInfo:Ref<ProfileSettingEmpBasicInfoForUpdate>
			probationInfo:Ref<ProfileSettingProbationInfo>
			customGroups:Ref<ProfileSettingCustomGroup>[]
	}
	export interface ProfileSettingEmpInfoForUpdateBuilder extends Struct<ProfileSettingEmpInfoForUpdateBuilder>{

			basicInfo(basicInfo:Ref<ProfileSettingEmpBasicInfoForUpdate>):Ref<ProfileSettingEmpInfoForUpdateBuilder>
			probationInfo(probationInfo:Ref<ProfileSettingProbationInfo>):Ref<ProfileSettingEmpInfoForUpdateBuilder>
			customGroups(customGroups:Ref<ProfileSettingCustomGroup>[]):Ref<ProfileSettingEmpInfoForUpdateBuilder>
			build():Ref<ProfileSettingEmpInfoForUpdate>
	}
	export interface ProfileSettingEmploymentBasicInfo extends Struct<ProfileSettingEmploymentBasicInfo>{

			employeeNumber:Ref<string>
			effectiveTime:Ref<string>
			regularEmployeeStartDate:Ref<string>
			seniorityDate:Ref<string>
			workEmail:Ref<string>
			phone:Ref<ProfileSettingPhone>
			userGeo:Ref<string>
			customFields:Ref<ProfileSettingCustomField>[]
	}
	export interface ProfileSettingEmploymentBasicInfoBuilder extends Struct<ProfileSettingEmploymentBasicInfoBuilder>{

			employeeNumber(employeeNumber:string):Ref<ProfileSettingEmploymentBasicInfoBuilder>
			effectiveTime(effectiveTime:string):Ref<ProfileSettingEmploymentBasicInfoBuilder>
			regularEmployeeStartDate(regularEmployeeStartDate:string):Ref<ProfileSettingEmploymentBasicInfoBuilder>
			seniorityDate(seniorityDate:string):Ref<ProfileSettingEmploymentBasicInfoBuilder>
			workEmail(workEmail:string):Ref<ProfileSettingEmploymentBasicInfoBuilder>
			phone(phone:Ref<ProfileSettingPhone>):Ref<ProfileSettingEmploymentBasicInfoBuilder>
			userGeo(userGeo:string):Ref<ProfileSettingEmploymentBasicInfoBuilder>
			customFields(customFields:Ref<ProfileSettingCustomField>[]):Ref<ProfileSettingEmploymentBasicInfoBuilder>
			build():Ref<ProfileSettingEmploymentBasicInfo>
	}
	export interface ProfileSettingEmploymentInfo extends Struct<ProfileSettingEmploymentInfo>{

			basicInfo:Ref<ProfileSettingEmploymentBasicInfo>
			probationInfo:Ref<ProfileSettingProbationInfo>
			employmentRecord:Ref<ProfileSettingEmploymentRecord>
			empContractRecord:Ref<ProfileSettingEmpContractRecord>
			customGroups:Ref<ProfileSettingCustomGroup>[]
	}
	export interface ProfileSettingEmploymentInfoBuilder extends Struct<ProfileSettingEmploymentInfoBuilder>{

			basicInfo(basicInfo:Ref<ProfileSettingEmploymentBasicInfo>):Ref<ProfileSettingEmploymentInfoBuilder>
			probationInfo(probationInfo:Ref<ProfileSettingProbationInfo>):Ref<ProfileSettingEmploymentInfoBuilder>
			employmentRecord(employmentRecord:Ref<ProfileSettingEmploymentRecord>):Ref<ProfileSettingEmploymentInfoBuilder>
			empContractRecord(empContractRecord:Ref<ProfileSettingEmpContractRecord>):Ref<ProfileSettingEmploymentInfoBuilder>
			customGroups(customGroups:Ref<ProfileSettingCustomGroup>[]):Ref<ProfileSettingEmploymentInfoBuilder>
			build():Ref<ProfileSettingEmploymentInfo>
	}
	export interface ProfileSettingEmploymentRecord extends Struct<ProfileSettingEmploymentRecord>{

			employeeType:Ref<string>
			department:Ref<string>
			directManager:Ref<string>
			workingHoursType:Ref<string>
			costCenters:Ref<ProfileSettingCostCenter>[]
			directManagerEffectiveTime:Ref<string>
			dottedLineManager:Ref<string>
			dottedLineManagerEffectiveTime:Ref<string>
			job:Ref<string>
			jobFamily:Ref<string>
			jobLevel:Ref<string>
			jobGrade:Ref<string>
			workLocation:Ref<string>
			weeklyWorkingHours:Ref<int>
	}
	export interface ProfileSettingEmploymentRecordBuilder extends Struct<ProfileSettingEmploymentRecordBuilder>{

			employeeType(employeeType:string):Ref<ProfileSettingEmploymentRecordBuilder>
			department(department:string):Ref<ProfileSettingEmploymentRecordBuilder>
			directManager(directManager:string):Ref<ProfileSettingEmploymentRecordBuilder>
			workingHoursType(workingHoursType:string):Ref<ProfileSettingEmploymentRecordBuilder>
			costCenters(costCenters:Ref<ProfileSettingCostCenter>[]):Ref<ProfileSettingEmploymentRecordBuilder>
			directManagerEffectiveTime(directManagerEffectiveTime:string):Ref<ProfileSettingEmploymentRecordBuilder>
			dottedLineManager(dottedLineManager:string):Ref<ProfileSettingEmploymentRecordBuilder>
			dottedLineManagerEffectiveTime(dottedLineManagerEffectiveTime:string):Ref<ProfileSettingEmploymentRecordBuilder>
			job(job:string):Ref<ProfileSettingEmploymentRecordBuilder>
			jobFamily(jobFamily:string):Ref<ProfileSettingEmploymentRecordBuilder>
			jobLevel(jobLevel:string):Ref<ProfileSettingEmploymentRecordBuilder>
			jobGrade(jobGrade:string):Ref<ProfileSettingEmploymentRecordBuilder>
			workLocation(workLocation:string):Ref<ProfileSettingEmploymentRecordBuilder>
			weeklyWorkingHours(weeklyWorkingHours:int):Ref<ProfileSettingEmploymentRecordBuilder>
			build():Ref<ProfileSettingEmploymentRecord>
	}
	export interface ProfileSettingFieldError extends Error,Struct<ProfileSettingFieldError>{

			fieldName:Ref<string>
			errorMsg:Ref<string>
	}
	export interface ProfileSettingFieldErrorBuilder extends Struct<ProfileSettingFieldErrorBuilder>,Error{

			fieldName(fieldName:string):Ref<ProfileSettingFieldErrorBuilder>
			errorMsg(errorMsg:string):Ref<ProfileSettingFieldErrorBuilder>
			build():Ref<ProfileSettingFieldError>
	}
	export interface ProfileSettingFile extends Struct<ProfileSettingFile>{

			fileId:Ref<string>
			mimeType:Ref<string>
			name:Ref<string>
			size:Ref<string>
			token:Ref<string>
	}
	export interface ProfileSettingFileBuilder extends Struct<ProfileSettingFileBuilder>{

			fileId(fileId:string):Ref<ProfileSettingFileBuilder>
			mimeType(mimeType:string):Ref<ProfileSettingFileBuilder>
			name(name:string):Ref<ProfileSettingFileBuilder>
			size(size:string):Ref<ProfileSettingFileBuilder>
			token(token:string):Ref<ProfileSettingFileBuilder>
			build():Ref<ProfileSettingFile>
	}
	export interface ProfileSettingHukou extends Struct<ProfileSettingHukou>{

			hukouType:Ref<string>
			hukouLocation:Ref<string>
			customFields:Ref<ProfileSettingCustomField>[]
	}
	export interface ProfileSettingHukouBuilder extends Struct<ProfileSettingHukouBuilder>{

			hukouType(hukouType:string):Ref<ProfileSettingHukouBuilder>
			hukouLocation(hukouLocation:string):Ref<ProfileSettingHukouBuilder>
			customFields(customFields:Ref<ProfileSettingCustomField>[]):Ref<ProfileSettingHukouBuilder>
			build():Ref<ProfileSettingHukou>
	}
	export interface ProfileSettingI18n extends Struct<ProfileSettingI18n>{

			zhCn:Ref<string>
			enUs:Ref<string>
	}
	export interface ProfileSettingI18nBuilder extends Struct<ProfileSettingI18nBuilder>{

			zhCn(zhCn:string):Ref<ProfileSettingI18nBuilder>
			enUs(enUs:string):Ref<ProfileSettingI18nBuilder>
			build():Ref<ProfileSettingI18n>
	}
	export interface ProfileSettingName extends Struct<ProfileSettingName>{

			additionalNameType:Ref<string>
			countryRegion:Ref<string>
			fullName:Ref<string>
			hereditary:Ref<string>
			middleName:Ref<string>
			secondary:Ref<string>
			social:Ref<string>
			tertiary:Ref<string>
			localFirstName2:Ref<string>
			localMiddleName:Ref<string>
			localPrimary:Ref<string>
			localPrimary2:Ref<string>
			localSecondary:Ref<string>
			title:Ref<string>
			localFirstName:Ref<string>
			customLocalName:Ref<string>
			customWesternName:Ref<string>
			nameType:Ref<string>
			firstName:Ref<string>
			namePrimary:Ref<string>
	}
	export interface ProfileSettingNameBuilder extends Struct<ProfileSettingNameBuilder>{

			additionalNameType(additionalNameType:string):Ref<ProfileSettingNameBuilder>
			countryRegion(countryRegion:string):Ref<ProfileSettingNameBuilder>
			fullName(fullName:string):Ref<ProfileSettingNameBuilder>
			hereditary(hereditary:string):Ref<ProfileSettingNameBuilder>
			middleName(middleName:string):Ref<ProfileSettingNameBuilder>
			secondary(secondary:string):Ref<ProfileSettingNameBuilder>
			social(social:string):Ref<ProfileSettingNameBuilder>
			tertiary(tertiary:string):Ref<ProfileSettingNameBuilder>
			localFirstName2(localFirstName2:string):Ref<ProfileSettingNameBuilder>
			localMiddleName(localMiddleName:string):Ref<ProfileSettingNameBuilder>
			localPrimary(localPrimary:string):Ref<ProfileSettingNameBuilder>
			localPrimary2(localPrimary2:string):Ref<ProfileSettingNameBuilder>
			localSecondary(localSecondary:string):Ref<ProfileSettingNameBuilder>
			title(title:string):Ref<ProfileSettingNameBuilder>
			localFirstName(localFirstName:string):Ref<ProfileSettingNameBuilder>
			customLocalName(customLocalName:string):Ref<ProfileSettingNameBuilder>
			customWesternName(customWesternName:string):Ref<ProfileSettingNameBuilder>
			nameType(nameType:string):Ref<ProfileSettingNameBuilder>
			firstName(firstName:string):Ref<ProfileSettingNameBuilder>
			namePrimary(namePrimary:string):Ref<ProfileSettingNameBuilder>
			build():Ref<ProfileSettingName>
	}
	export interface ProfileSettingNational extends Struct<ProfileSettingNational>{

			countryRegion:Ref<string>
			nationalIdType:Ref<string>
			nationalIdNumber:Ref<string>
			issuedDate:Ref<string>
			issuedBy:Ref<string>
			expirationDate:Ref<string>
			customFields:Ref<ProfileSettingCustomField>[]
	}
	export interface ProfileSettingNationalBuilder extends Struct<ProfileSettingNationalBuilder>{

			countryRegion(countryRegion:string):Ref<ProfileSettingNationalBuilder>
			nationalIdType(nationalIdType:string):Ref<ProfileSettingNationalBuilder>
			nationalIdNumber(nationalIdNumber:string):Ref<ProfileSettingNationalBuilder>
			issuedDate(issuedDate:string):Ref<ProfileSettingNationalBuilder>
			issuedBy(issuedBy:string):Ref<ProfileSettingNationalBuilder>
			expirationDate(expirationDate:string):Ref<ProfileSettingNationalBuilder>
			customFields(customFields:Ref<ProfileSettingCustomField>[]):Ref<ProfileSettingNationalBuilder>
			build():Ref<ProfileSettingNational>
	}
	export interface ProfileSettingPersonalBasicInfo extends Struct<ProfileSettingPersonalBasicInfo>{

			legalName:Ref<ProfileSettingName>
			preferredName:Ref<ProfileSettingName>
			gender:Ref<string>
			nationalityV2:Ref<string>
			ethnicityRace:Ref<string>
			phone:Ref<ProfileSettingPhone>
			email:Ref<string>
			dateOfBirth:Ref<string>
			maritalStatus:Ref<string>
			isDisabled:Ref<bool>
			disableCardNumber:Ref<string>
			isMartyrFamily:Ref<bool>
			martyrCardNumber:Ref<string>
			isOldAlone:Ref<bool>
			bornCountryRegion:Ref<string>
			politicalAffiliation:Ref<string>
			nativeRegion:Ref<string>
			dateEnteredWorkforce:Ref<string>
			firstEntryTime:Ref<string>
			leaveTime:Ref<string>
			customFields:Ref<ProfileSettingCustomField>[]
	}
	export interface ProfileSettingPersonalBasicInfoBuilder extends Struct<ProfileSettingPersonalBasicInfoBuilder>{

			legalName(legalName:Ref<ProfileSettingName>):Ref<ProfileSettingPersonalBasicInfoBuilder>
			preferredName(preferredName:Ref<ProfileSettingName>):Ref<ProfileSettingPersonalBasicInfoBuilder>
			gender(gender:string):Ref<ProfileSettingPersonalBasicInfoBuilder>
			nationalityV2(nationalityV2:string):Ref<ProfileSettingPersonalBasicInfoBuilder>
			ethnicityRace(ethnicityRace:string):Ref<ProfileSettingPersonalBasicInfoBuilder>
			phone(phone:Ref<ProfileSettingPhone>):Ref<ProfileSettingPersonalBasicInfoBuilder>
			email(email:string):Ref<ProfileSettingPersonalBasicInfoBuilder>
			dateOfBirth(dateOfBirth:string):Ref<ProfileSettingPersonalBasicInfoBuilder>
			maritalStatus(maritalStatus:string):Ref<ProfileSettingPersonalBasicInfoBuilder>
			isDisabled(isDisabled:bool):Ref<ProfileSettingPersonalBasicInfoBuilder>
			disableCardNumber(disableCardNumber:string):Ref<ProfileSettingPersonalBasicInfoBuilder>
			isMartyrFamily(isMartyrFamily:bool):Ref<ProfileSettingPersonalBasicInfoBuilder>
			martyrCardNumber(martyrCardNumber:string):Ref<ProfileSettingPersonalBasicInfoBuilder>
			isOldAlone(isOldAlone:bool):Ref<ProfileSettingPersonalBasicInfoBuilder>
			bornCountryRegion(bornCountryRegion:string):Ref<ProfileSettingPersonalBasicInfoBuilder>
			politicalAffiliation(politicalAffiliation:string):Ref<ProfileSettingPersonalBasicInfoBuilder>
			nativeRegion(nativeRegion:string):Ref<ProfileSettingPersonalBasicInfoBuilder>
			dateEnteredWorkforce(dateEnteredWorkforce:string):Ref<ProfileSettingPersonalBasicInfoBuilder>
			firstEntryTime(firstEntryTime:string):Ref<ProfileSettingPersonalBasicInfoBuilder>
			leaveTime(leaveTime:string):Ref<ProfileSettingPersonalBasicInfoBuilder>
			customFields(customFields:Ref<ProfileSettingCustomField>[]):Ref<ProfileSettingPersonalBasicInfoBuilder>
			build():Ref<ProfileSettingPersonalBasicInfo>
	}
	export interface ProfileSettingPersonalInfo extends Struct<ProfileSettingPersonalInfo>{

			personalBasicInfo:Ref<ProfileSettingPersonalBasicInfo>
			emergencyContacts:Ref<ProfileSettingEmergencyContact>[]
			bankAccounts:Ref<ProfileSettingBankAccount>[]
			nationals:Ref<ProfileSettingNational>[]
			residentTaxes:Ref<ProfileSettingResidentTax>[]
			dependents:Ref<ProfileSettingDependent>[]
			hukou:Ref<ProfileSettingHukou>
			contactAddresses:Ref<ProfileSettingAddress>[]
			customGroups:Ref<ProfileSettingCustomGroup>[]
	}
	export interface ProfileSettingPersonalInfoBuilder extends Struct<ProfileSettingPersonalInfoBuilder>{

			personalBasicInfo(personalBasicInfo:Ref<ProfileSettingPersonalBasicInfo>):Ref<ProfileSettingPersonalInfoBuilder>
			emergencyContacts(emergencyContacts:Ref<ProfileSettingEmergencyContact>[]):Ref<ProfileSettingPersonalInfoBuilder>
			bankAccounts(bankAccounts:Ref<ProfileSettingBankAccount>[]):Ref<ProfileSettingPersonalInfoBuilder>
			nationals(nationals:Ref<ProfileSettingNational>[]):Ref<ProfileSettingPersonalInfoBuilder>
			residentTaxes(residentTaxes:Ref<ProfileSettingResidentTax>[]):Ref<ProfileSettingPersonalInfoBuilder>
			dependents(dependents:Ref<ProfileSettingDependent>[]):Ref<ProfileSettingPersonalInfoBuilder>
			hukou(hukou:Ref<ProfileSettingHukou>):Ref<ProfileSettingPersonalInfoBuilder>
			contactAddresses(contactAddresses:Ref<ProfileSettingAddress>[]):Ref<ProfileSettingPersonalInfoBuilder>
			customGroups(customGroups:Ref<ProfileSettingCustomGroup>[]):Ref<ProfileSettingPersonalInfoBuilder>
			build():Ref<ProfileSettingPersonalInfo>
	}
	export interface ProfileSettingPersonalRecord extends Struct<ProfileSettingPersonalRecord>{

			profileType:Ref<string>
			files:Ref<ProfileSettingFile>[]
	}
	export interface ProfileSettingPersonalRecordBuilder extends Struct<ProfileSettingPersonalRecordBuilder>{

			profileType(profileType:string):Ref<ProfileSettingPersonalRecordBuilder>
			files(files:Ref<ProfileSettingFile>[]):Ref<ProfileSettingPersonalRecordBuilder>
			build():Ref<ProfileSettingPersonalRecord>
	}
	export interface ProfileSettingPhone extends Struct<ProfileSettingPhone>{

			internationalAreaCode:Ref<string>
			phoneNumber:Ref<string>
	}
	export interface ProfileSettingPhoneBuilder extends Struct<ProfileSettingPhoneBuilder>{

			internationalAreaCode(internationalAreaCode:string):Ref<ProfileSettingPhoneBuilder>
			phoneNumber(phoneNumber:string):Ref<ProfileSettingPhoneBuilder>
			build():Ref<ProfileSettingPhone>
	}
	export interface ProfileSettingProbationInfo extends Struct<ProfileSettingProbationInfo>{

			probationStartDate:Ref<string>
			probationExpectedEndDate:Ref<string>
			actualProbationEndDate:Ref<string>
	}
	export interface ProfileSettingProbationInfoBuilder extends Struct<ProfileSettingProbationInfoBuilder>{

			probationStartDate(probationStartDate:string):Ref<ProfileSettingProbationInfoBuilder>
			probationExpectedEndDate(probationExpectedEndDate:string):Ref<ProfileSettingProbationInfoBuilder>
			actualProbationEndDate(actualProbationEndDate:string):Ref<ProfileSettingProbationInfoBuilder>
			build():Ref<ProfileSettingProbationInfo>
	}
	export interface ProfileSettingResidentTax extends Struct<ProfileSettingResidentTax>{

			yearResidentTax:Ref<string>
			taxCountryRegion:Ref<string>
			residentStatus:Ref<string>
			customFields:Ref<ProfileSettingCustomField>[]
	}
	export interface ProfileSettingResidentTaxBuilder extends Struct<ProfileSettingResidentTaxBuilder>{

			yearResidentTax(yearResidentTax:string):Ref<ProfileSettingResidentTaxBuilder>
			taxCountryRegion(taxCountryRegion:string):Ref<ProfileSettingResidentTaxBuilder>
			residentStatus(residentStatus:string):Ref<ProfileSettingResidentTaxBuilder>
			customFields(customFields:Ref<ProfileSettingCustomField>[]):Ref<ProfileSettingResidentTaxBuilder>
			build():Ref<ProfileSettingResidentTax>
	}
	export interface ProfileSettingWorkExperience extends Struct<ProfileSettingWorkExperience>{

			companyOrganization:Ref<ProfileSettingI18n>
			department:Ref<ProfileSettingI18n>
			startDate:Ref<string>
			endDate:Ref<string>
			job:Ref<ProfileSettingI18n>
			description:Ref<ProfileSettingI18n>
			customFields:Ref<ProfileSettingCustomField>[]
	}
	export interface ProfileSettingWorkExperienceBuilder extends Struct<ProfileSettingWorkExperienceBuilder>{

			companyOrganization(companyOrganization:Ref<ProfileSettingI18n>):Ref<ProfileSettingWorkExperienceBuilder>
			department(department:Ref<ProfileSettingI18n>):Ref<ProfileSettingWorkExperienceBuilder>
			startDate(startDate:string):Ref<ProfileSettingWorkExperienceBuilder>
			endDate(endDate:string):Ref<ProfileSettingWorkExperienceBuilder>
			job(job:Ref<ProfileSettingI18n>):Ref<ProfileSettingWorkExperienceBuilder>
			description(description:Ref<ProfileSettingI18n>):Ref<ProfileSettingWorkExperienceBuilder>
			customFields(customFields:Ref<ProfileSettingCustomField>[]):Ref<ProfileSettingWorkExperienceBuilder>
			build():Ref<ProfileSettingWorkExperience>
	}
	export interface QrCode extends Struct<QrCode>{

			id:Ref<string>
			png:Ref<string>
			url:Ref<string>
			active:Ref<bool>
			createdBy:Ref<string>
			updatedBy:Ref<string>
			createdAt:Ref<int>
			updatedAt:Ref<int>
			dimensionValueList:Ref<QrCodeDimensionValue>[]
	}
	export interface QrCodeBuilder extends Struct<QrCodeBuilder>{

			id(id:string):Ref<QrCodeBuilder>
			png(png:string):Ref<QrCodeBuilder>
			url(url:string):Ref<QrCodeBuilder>
			active(active:bool):Ref<QrCodeBuilder>
			createdBy(createdBy:string):Ref<QrCodeBuilder>
			updatedBy(updatedBy:string):Ref<QrCodeBuilder>
			createdAt(createdAt:int):Ref<QrCodeBuilder>
			updatedAt(updatedAt:int):Ref<QrCodeBuilder>
			dimensionValueList(dimensionValueList:Ref<QrCodeDimensionValue>[]):Ref<QrCodeBuilder>
			build():Ref<QrCode>
	}
	export interface QrCodeDimension extends Struct<QrCodeDimension>{

			apiName:Ref<string>
			displayName:Ref<I18nV2>
			type:Ref<int>
	}
	export interface QrCodeDimensionBuilder extends Struct<QrCodeDimensionBuilder>{

			apiName(apiName:string):Ref<QrCodeDimensionBuilder>
			displayName(displayName:Ref<I18nV2>):Ref<QrCodeDimensionBuilder>
			type(type_:int):Ref<QrCodeDimensionBuilder>
			build():Ref<QrCodeDimension>
	}
	export interface QrCodeDimensionValue extends Struct<QrCodeDimensionValue>{

			dimension:Ref<QrCodeDimension>
			value:Ref<QrCodeValue>
	}
	export interface QrCodeDimensionValueBuilder extends Struct<QrCodeDimensionValueBuilder>{

			dimension(dimension:Ref<QrCodeDimension>):Ref<QrCodeDimensionValueBuilder>
			value(value:Ref<QrCodeValue>):Ref<QrCodeDimensionValueBuilder>
			build():Ref<QrCodeDimensionValue>
	}
	export interface QrCodeValue extends Struct<QrCodeValue>{

			selectValue:Ref<string>
			multiSelectValue:string[]
			boolValue:Ref<bool>
	}
	export interface QrCodeValueBuilder extends Struct<QrCodeValueBuilder>{

			selectValue(selectValue:string):Ref<QrCodeValueBuilder>
			multiSelectValue(multiSelectValue:string[]):Ref<QrCodeValueBuilder>
			boolValue(boolValue:bool):Ref<QrCodeValueBuilder>
			build():Ref<QrCodeValue>
	}
	export interface QueryEmployeesJobDataPathReqBodyBuilder extends Struct<QueryEmployeesJobDataPathReqBodyBuilder>{

			getAllVersion(getAllVersion:bool):Ref<QueryEmployeesJobDataPathReqBodyBuilder>
			dataDate(dataDate:string):Ref<QueryEmployeesJobDataPathReqBodyBuilder>
			effectiveDateStart(effectiveDateStart:string):Ref<QueryEmployeesJobDataPathReqBodyBuilder>
			effectiveDateEnd(effectiveDateEnd:string):Ref<QueryEmployeesJobDataPathReqBodyBuilder>
			build():Ref<QueryEmployeesJobDataReqBody>
	}
	export interface QueryEmployeesJobDataReq extends Struct<QueryEmployeesJobDataReq>{

			body:Ref<QueryEmployeesJobDataReqBody>
	}
	export interface QueryEmployeesJobDataReqBody extends Struct<QueryEmployeesJobDataReqBody>{

			getAllVersion:Ref<bool>
			dataDate:Ref<string>
			effectiveDateStart:Ref<string>
			effectiveDateEnd:Ref<string>
	}
	export interface QueryEmployeesJobDataReqBodyBuilder extends Struct<QueryEmployeesJobDataReqBodyBuilder>{

			getAllVersion(getAllVersion:bool):Ref<QueryEmployeesJobDataReqBodyBuilder>
			dataDate(dataDate:string):Ref<QueryEmployeesJobDataReqBodyBuilder>
			effectiveDateStart(effectiveDateStart:string):Ref<QueryEmployeesJobDataReqBodyBuilder>
			effectiveDateEnd(effectiveDateEnd:string):Ref<QueryEmployeesJobDataReqBodyBuilder>
			build():Ref<QueryEmployeesJobDataReqBody>
	}
	export interface QueryEmployeesJobDataReqBuilder extends Struct<QueryEmployeesJobDataReqBuilder>{

			pageSize(pageSize:int):Ref<QueryEmployeesJobDataReqBuilder>
			pageToken(pageToken:string):Ref<QueryEmployeesJobDataReqBuilder>
			userIdType(userIdType:string):Ref<QueryEmployeesJobDataReqBuilder>
			departmentIdType(departmentIdType:string):Ref<QueryEmployeesJobDataReqBuilder>
			body(body:Ref<QueryEmployeesJobDataReqBody>):Ref<QueryEmployeesJobDataReqBuilder>
			build():Ref<QueryEmployeesJobDataReq>
	}
	export interface QueryEmployeesJobDataResp extends Struct<QueryEmployeesJobDataResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<QueryEmployeesJobDataRespData>
			success():bool
	}
	export interface QueryEmployeesJobDataRespData extends Struct<QueryEmployeesJobDataRespData>{

			items:Ref<EmployeeJobData>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface QueryTimelineDepartmentPathReqBodyBuilder extends Struct<QueryTimelineDepartmentPathReqBodyBuilder>{

			departmentIds(departmentIds:string[]):Ref<QueryTimelineDepartmentPathReqBodyBuilder>
			effectiveDate(effectiveDate:string):Ref<QueryTimelineDepartmentPathReqBodyBuilder>
			fields(fields:string[]):Ref<QueryTimelineDepartmentPathReqBodyBuilder>
			build():Ref<QueryTimelineDepartmentReqBody>
	}
	export interface QueryTimelineDepartmentReq extends Struct<QueryTimelineDepartmentReq>{

			body:Ref<QueryTimelineDepartmentReqBody>
	}
	export interface QueryTimelineDepartmentReqBody extends Struct<QueryTimelineDepartmentReqBody>{

			departmentIds:string[]
			effectiveDate:Ref<string>
			fields:string[]
	}
	export interface QueryTimelineDepartmentReqBodyBuilder extends Struct<QueryTimelineDepartmentReqBodyBuilder>{

			departmentIds(departmentIds:string[]):Ref<QueryTimelineDepartmentReqBodyBuilder>
			effectiveDate(effectiveDate:string):Ref<QueryTimelineDepartmentReqBodyBuilder>
			fields(fields:string[]):Ref<QueryTimelineDepartmentReqBodyBuilder>
			build():Ref<QueryTimelineDepartmentReqBody>
	}
	export interface QueryTimelineDepartmentReqBuilder extends Struct<QueryTimelineDepartmentReqBuilder>{

			userIdType(userIdType:string):Ref<QueryTimelineDepartmentReqBuilder>
			departmentIdType(departmentIdType:string):Ref<QueryTimelineDepartmentReqBuilder>
			body(body:Ref<QueryTimelineDepartmentReqBody>):Ref<QueryTimelineDepartmentReqBuilder>
			build():Ref<QueryTimelineDepartmentReq>
	}
	export interface QueryTimelineDepartmentResp extends Struct<QueryTimelineDepartmentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<QueryTimelineDepartmentRespData>
			success():bool
	}
	export interface QueryTimelineDepartmentRespData extends Struct<QueryTimelineDepartmentRespData>{

			items:Ref<DepartmentTimeline>[]
	}
	//"no"
	export const RehireNo:string
	//"to_be_confirmed"
	export const RehireToBeConfirmed:string
	//"yes"
	export const RehireYes:string
	export interface ReorganizationInfo extends Struct<ReorganizationInfo>{

			originalDepartmentNames:Ref<I18n>[]
			targetDepartmentNames:Ref<I18n>[]
			originalDepartmentCode:Ref<string>
			targetDepartmentCode:Ref<string>
			originalSubType:Ref<Enum>
			targetSubType:Ref<Enum>
			originalDepartmentManager:Ref<string>
			targetDepartmentManager:Ref<string>
			originalDescriptions:Ref<I18n>[]
			targetDescriptions:Ref<I18n>[]
			originalCostCenter:Ref<CostCenter>
			targetCostCenter:Ref<CostCenter>
			originalIsConfidential:Ref<bool>
			targetIsConfidential:Ref<bool>
			originalStaffingModel:Ref<bool>
			targetStaffingModel:Ref<bool>
			originalParentDepartmentId:Ref<string>
			targetParentDepartmentId:Ref<string>
			draftTargetParentDepartmentId:Ref<string>
			originalDepartmentIdPath:Ref<OrgdraftDepartmentId>[]
			targetDepartmentIdPath:Ref<OrgdraftDepartmentId>[]
			customFields:Ref<ChangeFieldPair>[]
	}
	export interface ReorganizationInfoBuilder extends Struct<ReorganizationInfoBuilder>{

			originalDepartmentNames(originalDepartmentNames:Ref<I18n>[]):Ref<ReorganizationInfoBuilder>
			targetDepartmentNames(targetDepartmentNames:Ref<I18n>[]):Ref<ReorganizationInfoBuilder>
			originalDepartmentCode(originalDepartmentCode:string):Ref<ReorganizationInfoBuilder>
			targetDepartmentCode(targetDepartmentCode:string):Ref<ReorganizationInfoBuilder>
			originalSubType(originalSubType:Ref<Enum>):Ref<ReorganizationInfoBuilder>
			targetSubType(targetSubType:Ref<Enum>):Ref<ReorganizationInfoBuilder>
			originalDepartmentManager(originalDepartmentManager:string):Ref<ReorganizationInfoBuilder>
			targetDepartmentManager(targetDepartmentManager:string):Ref<ReorganizationInfoBuilder>
			originalDescriptions(originalDescriptions:Ref<I18n>[]):Ref<ReorganizationInfoBuilder>
			targetDescriptions(targetDescriptions:Ref<I18n>[]):Ref<ReorganizationInfoBuilder>
			originalCostCenter(originalCostCenter:Ref<CostCenter>):Ref<ReorganizationInfoBuilder>
			targetCostCenter(targetCostCenter:Ref<CostCenter>):Ref<ReorganizationInfoBuilder>
			originalIsConfidential(originalIsConfidential:bool):Ref<ReorganizationInfoBuilder>
			targetIsConfidential(targetIsConfidential:bool):Ref<ReorganizationInfoBuilder>
			originalStaffingModel(originalStaffingModel:bool):Ref<ReorganizationInfoBuilder>
			targetStaffingModel(targetStaffingModel:bool):Ref<ReorganizationInfoBuilder>
			originalParentDepartmentId(originalParentDepartmentId:string):Ref<ReorganizationInfoBuilder>
			targetParentDepartmentId(targetParentDepartmentId:string):Ref<ReorganizationInfoBuilder>
			draftTargetParentDepartmentId(draftTargetParentDepartmentId:string):Ref<ReorganizationInfoBuilder>
			originalDepartmentIdPath(originalDepartmentIdPath:Ref<OrgdraftDepartmentId>[]):Ref<ReorganizationInfoBuilder>
			targetDepartmentIdPath(targetDepartmentIdPath:Ref<OrgdraftDepartmentId>[]):Ref<ReorganizationInfoBuilder>
			customFields(customFields:Ref<ChangeFieldPair>[]):Ref<ReorganizationInfoBuilder>
			build():Ref<ReorganizationInfo>
	}
	export interface ResidentTax extends Struct<ResidentTax>{

			yearResidentTax:Ref<string>
			residentStatus:Ref<Enum>
			taxCountryRegionId:Ref<string>
			customFields:Ref<ObjectFieldData>[]
	}
	export interface ResidentTaxBuilder extends Struct<ResidentTaxBuilder>{

			yearResidentTax(yearResidentTax:string):Ref<ResidentTaxBuilder>
			residentStatus(residentStatus:Ref<Enum>):Ref<ResidentTaxBuilder>
			taxCountryRegionId(taxCountryRegionId:string):Ref<ResidentTaxBuilder>
			customFields(customFields:Ref<ObjectFieldData>[]):Ref<ResidentTaxBuilder>
			build():Ref<ResidentTax>
	}
	export interface SearchBasicInfoBankBranchIterator extends Struct<SearchBasicInfoBankBranchIterator>{

			next():[bool,Ref<BankBranch>]
			nextPageToken():Ref<string>
	}
	export interface SearchBasicInfoBankBranchPathReqBodyBuilder extends Struct<SearchBasicInfoBankBranchPathReqBodyBuilder>{

			bankIdList(bankIdList:string[]):Ref<SearchBasicInfoBankBranchPathReqBodyBuilder>
			bankBranchIdList(bankBranchIdList:string[]):Ref<SearchBasicInfoBankBranchPathReqBodyBuilder>
			bankBranchNameList(bankBranchNameList:string[]):Ref<SearchBasicInfoBankBranchPathReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoBankBranchPathReqBodyBuilder>
			updateStartTime(updateStartTime:string):Ref<SearchBasicInfoBankBranchPathReqBodyBuilder>
			updateEndTime(updateEndTime:string):Ref<SearchBasicInfoBankBranchPathReqBodyBuilder>
			build():Ref<SearchBasicInfoBankBranchReqBody>
	}
	export interface SearchBasicInfoBankBranchReq extends Struct<SearchBasicInfoBankBranchReq>{

			body:Ref<SearchBasicInfoBankBranchReqBody>
			limit:int
	}
	export interface SearchBasicInfoBankBranchReqBody extends Struct<SearchBasicInfoBankBranchReqBody>{

			bankIdList:string[]
			bankBranchIdList:string[]
			bankBranchNameList:string[]
			statusList:int[]
			updateStartTime:Ref<string>
			updateEndTime:Ref<string>
	}
	export interface SearchBasicInfoBankBranchReqBodyBuilder extends Struct<SearchBasicInfoBankBranchReqBodyBuilder>{

			bankIdList(bankIdList:string[]):Ref<SearchBasicInfoBankBranchReqBodyBuilder>
			bankBranchIdList(bankBranchIdList:string[]):Ref<SearchBasicInfoBankBranchReqBodyBuilder>
			bankBranchNameList(bankBranchNameList:string[]):Ref<SearchBasicInfoBankBranchReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoBankBranchReqBodyBuilder>
			updateStartTime(updateStartTime:string):Ref<SearchBasicInfoBankBranchReqBodyBuilder>
			updateEndTime(updateEndTime:string):Ref<SearchBasicInfoBankBranchReqBodyBuilder>
			build():Ref<SearchBasicInfoBankBranchReqBody>
	}
	export interface SearchBasicInfoBankBranchReqBuilder extends Struct<SearchBasicInfoBankBranchReqBuilder>{

			limit(limit:int):Ref<SearchBasicInfoBankBranchReqBuilder>
			pageSize(pageSize:int):Ref<SearchBasicInfoBankBranchReqBuilder>
			pageToken(pageToken:string):Ref<SearchBasicInfoBankBranchReqBuilder>
			body(body:Ref<SearchBasicInfoBankBranchReqBody>):Ref<SearchBasicInfoBankBranchReqBuilder>
			build():Ref<SearchBasicInfoBankBranchReq>
	}
	export interface SearchBasicInfoBankBranchResp extends Struct<SearchBasicInfoBankBranchResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchBasicInfoBankBranchRespData>
			success():bool
	}
	export interface SearchBasicInfoBankBranchRespData extends Struct<SearchBasicInfoBankBranchRespData>{

			items:Ref<BankBranch>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SearchBasicInfoBankIterator extends Struct<SearchBasicInfoBankIterator>{

			next():[bool,Ref<Bank>]
			nextPageToken():Ref<string>
	}
	export interface SearchBasicInfoBankPathReqBodyBuilder extends Struct<SearchBasicInfoBankPathReqBodyBuilder>{

			bankIdList(bankIdList:string[]):Ref<SearchBasicInfoBankPathReqBodyBuilder>
			bankNameList(bankNameList:string[]):Ref<SearchBasicInfoBankPathReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoBankPathReqBodyBuilder>
			updateStartTime(updateStartTime:string):Ref<SearchBasicInfoBankPathReqBodyBuilder>
			updateEndTime(updateEndTime:string):Ref<SearchBasicInfoBankPathReqBodyBuilder>
			build():Ref<SearchBasicInfoBankReqBody>
	}
	export interface SearchBasicInfoBankReq extends Struct<SearchBasicInfoBankReq>{

			body:Ref<SearchBasicInfoBankReqBody>
			limit:int
	}
	export interface SearchBasicInfoBankReqBody extends Struct<SearchBasicInfoBankReqBody>{

			bankIdList:string[]
			bankNameList:string[]
			statusList:int[]
			updateStartTime:Ref<string>
			updateEndTime:Ref<string>
	}
	export interface SearchBasicInfoBankReqBodyBuilder extends Struct<SearchBasicInfoBankReqBodyBuilder>{

			bankIdList(bankIdList:string[]):Ref<SearchBasicInfoBankReqBodyBuilder>
			bankNameList(bankNameList:string[]):Ref<SearchBasicInfoBankReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoBankReqBodyBuilder>
			updateStartTime(updateStartTime:string):Ref<SearchBasicInfoBankReqBodyBuilder>
			updateEndTime(updateEndTime:string):Ref<SearchBasicInfoBankReqBodyBuilder>
			build():Ref<SearchBasicInfoBankReqBody>
	}
	export interface SearchBasicInfoBankReqBuilder extends Struct<SearchBasicInfoBankReqBuilder>{

			limit(limit:int):Ref<SearchBasicInfoBankReqBuilder>
			pageSize(pageSize:int):Ref<SearchBasicInfoBankReqBuilder>
			pageToken(pageToken:string):Ref<SearchBasicInfoBankReqBuilder>
			body(body:Ref<SearchBasicInfoBankReqBody>):Ref<SearchBasicInfoBankReqBuilder>
			build():Ref<SearchBasicInfoBankReq>
	}
	export interface SearchBasicInfoBankResp extends Struct<SearchBasicInfoBankResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchBasicInfoBankRespData>
			success():bool
	}
	export interface SearchBasicInfoBankRespData extends Struct<SearchBasicInfoBankRespData>{

			items:Ref<Bank>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SearchBasicInfoCityIterator extends Struct<SearchBasicInfoCityIterator>{

			next():[bool,Ref<City>]
			nextPageToken():Ref<string>
	}
	export interface SearchBasicInfoCityPathReqBodyBuilder extends Struct<SearchBasicInfoCityPathReqBodyBuilder>{

			countryRegionSubdivisionIdList(countryRegionSubdivisionIdList:string[]):Ref<SearchBasicInfoCityPathReqBodyBuilder>
			cityIdList(cityIdList:string[]):Ref<SearchBasicInfoCityPathReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoCityPathReqBodyBuilder>
			build():Ref<SearchBasicInfoCityReqBody>
	}
	export interface SearchBasicInfoCityReq extends Struct<SearchBasicInfoCityReq>{

			body:Ref<SearchBasicInfoCityReqBody>
			limit:int
	}
	export interface SearchBasicInfoCityReqBody extends Struct<SearchBasicInfoCityReqBody>{

			countryRegionSubdivisionIdList:string[]
			cityIdList:string[]
			statusList:int[]
	}
	export interface SearchBasicInfoCityReqBodyBuilder extends Struct<SearchBasicInfoCityReqBodyBuilder>{

			countryRegionSubdivisionIdList(countryRegionSubdivisionIdList:string[]):Ref<SearchBasicInfoCityReqBodyBuilder>
			cityIdList(cityIdList:string[]):Ref<SearchBasicInfoCityReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoCityReqBodyBuilder>
			build():Ref<SearchBasicInfoCityReqBody>
	}
	export interface SearchBasicInfoCityReqBuilder extends Struct<SearchBasicInfoCityReqBuilder>{

			limit(limit:int):Ref<SearchBasicInfoCityReqBuilder>
			pageSize(pageSize:int):Ref<SearchBasicInfoCityReqBuilder>
			pageToken(pageToken:string):Ref<SearchBasicInfoCityReqBuilder>
			body(body:Ref<SearchBasicInfoCityReqBody>):Ref<SearchBasicInfoCityReqBuilder>
			build():Ref<SearchBasicInfoCityReq>
	}
	export interface SearchBasicInfoCityResp extends Struct<SearchBasicInfoCityResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchBasicInfoCityRespData>
			success():bool
	}
	export interface SearchBasicInfoCityRespData extends Struct<SearchBasicInfoCityRespData>{

			items:Ref<City>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SearchBasicInfoCountryRegionIterator extends Struct<SearchBasicInfoCountryRegionIterator>{

			next():[bool,Ref<CountryRegion>]
			nextPageToken():Ref<string>
	}
	export interface SearchBasicInfoCountryRegionPathReqBodyBuilder extends Struct<SearchBasicInfoCountryRegionPathReqBodyBuilder>{

			countryRegionIdList(countryRegionIdList:string[]):Ref<SearchBasicInfoCountryRegionPathReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoCountryRegionPathReqBodyBuilder>
			build():Ref<SearchBasicInfoCountryRegionReqBody>
	}
	export interface SearchBasicInfoCountryRegionReq extends Struct<SearchBasicInfoCountryRegionReq>{

			body:Ref<SearchBasicInfoCountryRegionReqBody>
			limit:int
	}
	export interface SearchBasicInfoCountryRegionReqBody extends Struct<SearchBasicInfoCountryRegionReqBody>{

			countryRegionIdList:string[]
			statusList:int[]
	}
	export interface SearchBasicInfoCountryRegionReqBodyBuilder extends Struct<SearchBasicInfoCountryRegionReqBodyBuilder>{

			countryRegionIdList(countryRegionIdList:string[]):Ref<SearchBasicInfoCountryRegionReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoCountryRegionReqBodyBuilder>
			build():Ref<SearchBasicInfoCountryRegionReqBody>
	}
	export interface SearchBasicInfoCountryRegionReqBuilder extends Struct<SearchBasicInfoCountryRegionReqBuilder>{

			limit(limit:int):Ref<SearchBasicInfoCountryRegionReqBuilder>
			pageSize(pageSize:int):Ref<SearchBasicInfoCountryRegionReqBuilder>
			pageToken(pageToken:string):Ref<SearchBasicInfoCountryRegionReqBuilder>
			body(body:Ref<SearchBasicInfoCountryRegionReqBody>):Ref<SearchBasicInfoCountryRegionReqBuilder>
			build():Ref<SearchBasicInfoCountryRegionReq>
	}
	export interface SearchBasicInfoCountryRegionResp extends Struct<SearchBasicInfoCountryRegionResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchBasicInfoCountryRegionRespData>
			success():bool
	}
	export interface SearchBasicInfoCountryRegionRespData extends Struct<SearchBasicInfoCountryRegionRespData>{

			items:Ref<CountryRegion>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SearchBasicInfoCountryRegionSubdivisionIterator extends Struct<SearchBasicInfoCountryRegionSubdivisionIterator>{

			next():[bool,Ref<CountryRegionSubdivision>]
			nextPageToken():Ref<string>
	}
	export interface SearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder extends Struct<SearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder>{

			countryRegionIdList(countryRegionIdList:string[]):Ref<SearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder>
			countryRegionSubdivisionIdList(countryRegionSubdivisionIdList:string[]):Ref<SearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder>
			build():Ref<SearchBasicInfoCountryRegionSubdivisionReqBody>
	}
	export interface SearchBasicInfoCountryRegionSubdivisionReq extends Struct<SearchBasicInfoCountryRegionSubdivisionReq>{

			body:Ref<SearchBasicInfoCountryRegionSubdivisionReqBody>
			limit:int
	}
	export interface SearchBasicInfoCountryRegionSubdivisionReqBody extends Struct<SearchBasicInfoCountryRegionSubdivisionReqBody>{

			countryRegionIdList:string[]
			countryRegionSubdivisionIdList:string[]
			statusList:int[]
	}
	export interface SearchBasicInfoCountryRegionSubdivisionReqBodyBuilder extends Struct<SearchBasicInfoCountryRegionSubdivisionReqBodyBuilder>{

			countryRegionIdList(countryRegionIdList:string[]):Ref<SearchBasicInfoCountryRegionSubdivisionReqBodyBuilder>
			countryRegionSubdivisionIdList(countryRegionSubdivisionIdList:string[]):Ref<SearchBasicInfoCountryRegionSubdivisionReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoCountryRegionSubdivisionReqBodyBuilder>
			build():Ref<SearchBasicInfoCountryRegionSubdivisionReqBody>
	}
	export interface SearchBasicInfoCountryRegionSubdivisionReqBuilder extends Struct<SearchBasicInfoCountryRegionSubdivisionReqBuilder>{

			limit(limit:int):Ref<SearchBasicInfoCountryRegionSubdivisionReqBuilder>
			pageSize(pageSize:int):Ref<SearchBasicInfoCountryRegionSubdivisionReqBuilder>
			pageToken(pageToken:string):Ref<SearchBasicInfoCountryRegionSubdivisionReqBuilder>
			body(body:Ref<SearchBasicInfoCountryRegionSubdivisionReqBody>):Ref<SearchBasicInfoCountryRegionSubdivisionReqBuilder>
			build():Ref<SearchBasicInfoCountryRegionSubdivisionReq>
	}
	export interface SearchBasicInfoCountryRegionSubdivisionResp extends Struct<SearchBasicInfoCountryRegionSubdivisionResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchBasicInfoCountryRegionSubdivisionRespData>
			success():bool
	}
	export interface SearchBasicInfoCountryRegionSubdivisionRespData extends Struct<SearchBasicInfoCountryRegionSubdivisionRespData>{

			items:Ref<CountryRegionSubdivision>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SearchBasicInfoCurrencyIterator extends Struct<SearchBasicInfoCurrencyIterator>{

			next():[bool,Ref<Currency>]
			nextPageToken():Ref<string>
	}
	export interface SearchBasicInfoCurrencyPathReqBodyBuilder extends Struct<SearchBasicInfoCurrencyPathReqBodyBuilder>{

			currencyIdList(currencyIdList:string[]):Ref<SearchBasicInfoCurrencyPathReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoCurrencyPathReqBodyBuilder>
			build():Ref<SearchBasicInfoCurrencyReqBody>
	}
	export interface SearchBasicInfoCurrencyReq extends Struct<SearchBasicInfoCurrencyReq>{

			body:Ref<SearchBasicInfoCurrencyReqBody>
			limit:int
	}
	export interface SearchBasicInfoCurrencyReqBody extends Struct<SearchBasicInfoCurrencyReqBody>{

			currencyIdList:string[]
			statusList:int[]
	}
	export interface SearchBasicInfoCurrencyReqBodyBuilder extends Struct<SearchBasicInfoCurrencyReqBodyBuilder>{

			currencyIdList(currencyIdList:string[]):Ref<SearchBasicInfoCurrencyReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoCurrencyReqBodyBuilder>
			build():Ref<SearchBasicInfoCurrencyReqBody>
	}
	export interface SearchBasicInfoCurrencyReqBuilder extends Struct<SearchBasicInfoCurrencyReqBuilder>{

			limit(limit:int):Ref<SearchBasicInfoCurrencyReqBuilder>
			pageSize(pageSize:int):Ref<SearchBasicInfoCurrencyReqBuilder>
			pageToken(pageToken:string):Ref<SearchBasicInfoCurrencyReqBuilder>
			body(body:Ref<SearchBasicInfoCurrencyReqBody>):Ref<SearchBasicInfoCurrencyReqBuilder>
			build():Ref<SearchBasicInfoCurrencyReq>
	}
	export interface SearchBasicInfoCurrencyResp extends Struct<SearchBasicInfoCurrencyResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchBasicInfoCurrencyRespData>
			success():bool
	}
	export interface SearchBasicInfoCurrencyRespData extends Struct<SearchBasicInfoCurrencyRespData>{

			items:Ref<Currency>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SearchBasicInfoDistrictIterator extends Struct<SearchBasicInfoDistrictIterator>{

			next():[bool,Ref<District>]
			nextPageToken():Ref<string>
	}
	export interface SearchBasicInfoDistrictPathReqBodyBuilder extends Struct<SearchBasicInfoDistrictPathReqBodyBuilder>{

			cityIdList(cityIdList:string[]):Ref<SearchBasicInfoDistrictPathReqBodyBuilder>
			districtIdList(districtIdList:string[]):Ref<SearchBasicInfoDistrictPathReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoDistrictPathReqBodyBuilder>
			build():Ref<SearchBasicInfoDistrictReqBody>
	}
	export interface SearchBasicInfoDistrictReq extends Struct<SearchBasicInfoDistrictReq>{

			body:Ref<SearchBasicInfoDistrictReqBody>
			limit:int
	}
	export interface SearchBasicInfoDistrictReqBody extends Struct<SearchBasicInfoDistrictReqBody>{

			cityIdList:string[]
			districtIdList:string[]
			statusList:int[]
	}
	export interface SearchBasicInfoDistrictReqBodyBuilder extends Struct<SearchBasicInfoDistrictReqBodyBuilder>{

			cityIdList(cityIdList:string[]):Ref<SearchBasicInfoDistrictReqBodyBuilder>
			districtIdList(districtIdList:string[]):Ref<SearchBasicInfoDistrictReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoDistrictReqBodyBuilder>
			build():Ref<SearchBasicInfoDistrictReqBody>
	}
	export interface SearchBasicInfoDistrictReqBuilder extends Struct<SearchBasicInfoDistrictReqBuilder>{

			limit(limit:int):Ref<SearchBasicInfoDistrictReqBuilder>
			pageSize(pageSize:int):Ref<SearchBasicInfoDistrictReqBuilder>
			pageToken(pageToken:string):Ref<SearchBasicInfoDistrictReqBuilder>
			body(body:Ref<SearchBasicInfoDistrictReqBody>):Ref<SearchBasicInfoDistrictReqBuilder>
			build():Ref<SearchBasicInfoDistrictReq>
	}
	export interface SearchBasicInfoDistrictResp extends Struct<SearchBasicInfoDistrictResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchBasicInfoDistrictRespData>
			success():bool
	}
	export interface SearchBasicInfoDistrictRespData extends Struct<SearchBasicInfoDistrictRespData>{

			items:Ref<District>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SearchBasicInfoNationalityIterator extends Struct<SearchBasicInfoNationalityIterator>{

			next():[bool,Ref<Nationality>]
			nextPageToken():Ref<string>
	}
	export interface SearchBasicInfoNationalityPathReqBodyBuilder extends Struct<SearchBasicInfoNationalityPathReqBodyBuilder>{

			nationalityIdList(nationalityIdList:string[]):Ref<SearchBasicInfoNationalityPathReqBodyBuilder>
			countryRegionIdList(countryRegionIdList:string[]):Ref<SearchBasicInfoNationalityPathReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoNationalityPathReqBodyBuilder>
			build():Ref<SearchBasicInfoNationalityReqBody>
	}
	export interface SearchBasicInfoNationalityReq extends Struct<SearchBasicInfoNationalityReq>{

			body:Ref<SearchBasicInfoNationalityReqBody>
			limit:int
	}
	export interface SearchBasicInfoNationalityReqBody extends Struct<SearchBasicInfoNationalityReqBody>{

			nationalityIdList:string[]
			countryRegionIdList:string[]
			statusList:int[]
	}
	export interface SearchBasicInfoNationalityReqBodyBuilder extends Struct<SearchBasicInfoNationalityReqBodyBuilder>{

			nationalityIdList(nationalityIdList:string[]):Ref<SearchBasicInfoNationalityReqBodyBuilder>
			countryRegionIdList(countryRegionIdList:string[]):Ref<SearchBasicInfoNationalityReqBodyBuilder>
			statusList(statusList:int[]):Ref<SearchBasicInfoNationalityReqBodyBuilder>
			build():Ref<SearchBasicInfoNationalityReqBody>
	}
	export interface SearchBasicInfoNationalityReqBuilder extends Struct<SearchBasicInfoNationalityReqBuilder>{

			limit(limit:int):Ref<SearchBasicInfoNationalityReqBuilder>
			pageSize(pageSize:int):Ref<SearchBasicInfoNationalityReqBuilder>
			pageToken(pageToken:string):Ref<SearchBasicInfoNationalityReqBuilder>
			body(body:Ref<SearchBasicInfoNationalityReqBody>):Ref<SearchBasicInfoNationalityReqBuilder>
			build():Ref<SearchBasicInfoNationalityReq>
	}
	export interface SearchBasicInfoNationalityResp extends Struct<SearchBasicInfoNationalityResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchBasicInfoNationalityRespData>
			success():bool
	}
	export interface SearchBasicInfoNationalityRespData extends Struct<SearchBasicInfoNationalityRespData>{

			items:Ref<Nationality>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SearchContractIterator extends Struct<SearchContractIterator>{

			next():[bool,Ref<Contract>]
			nextPageToken():Ref<string>
	}
	export interface SearchContractPathReqBodyBuilder extends Struct<SearchContractPathReqBodyBuilder>{

			employmentIdList(employmentIdList:string[]):Ref<SearchContractPathReqBodyBuilder>
			contractIdList(contractIdList:string[]):Ref<SearchContractPathReqBodyBuilder>
			build():Ref<SearchContractReqBody>
	}
	export interface SearchContractReq extends Struct<SearchContractReq>{

			body:Ref<SearchContractReqBody>
			limit:int
	}
	export interface SearchContractReqBody extends Struct<SearchContractReqBody>{

			employmentIdList:string[]
			contractIdList:string[]
	}
	export interface SearchContractReqBodyBuilder extends Struct<SearchContractReqBodyBuilder>{

			employmentIdList(employmentIdList:string[]):Ref<SearchContractReqBodyBuilder>
			contractIdList(contractIdList:string[]):Ref<SearchContractReqBodyBuilder>
			build():Ref<SearchContractReqBody>
	}
	export interface SearchContractReqBuilder extends Struct<SearchContractReqBuilder>{

			limit(limit:int):Ref<SearchContractReqBuilder>
			pageSize(pageSize:int):Ref<SearchContractReqBuilder>
			pageToken(pageToken:string):Ref<SearchContractReqBuilder>
			userIdType(userIdType:string):Ref<SearchContractReqBuilder>
			body(body:Ref<SearchContractReqBody>):Ref<SearchContractReqBuilder>
			build():Ref<SearchContractReq>
	}
	export interface SearchContractResp extends Struct<SearchContractResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchContractRespData>
			success():bool
	}
	export interface SearchContractRespData extends Struct<SearchContractRespData>{

			items:Ref<Contract>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SearchCostCenterPathReqBodyBuilder extends Struct<SearchCostCenterPathReqBodyBuilder>{

			costCenterIdList(costCenterIdList:string[]):Ref<SearchCostCenterPathReqBodyBuilder>
			nameList(nameList:string[]):Ref<SearchCostCenterPathReqBodyBuilder>
			code(code:string):Ref<SearchCostCenterPathReqBodyBuilder>
			parentCostCenterId(parentCostCenterId:string):Ref<SearchCostCenterPathReqBodyBuilder>
			getAllVersion(getAllVersion:bool):Ref<SearchCostCenterPathReqBodyBuilder>
			build():Ref<SearchCostCenterReqBody>
	}
	export interface SearchCostCenterReq extends Struct<SearchCostCenterReq>{

			body:Ref<SearchCostCenterReqBody>
	}
	export interface SearchCostCenterReqBody extends Struct<SearchCostCenterReqBody>{

			costCenterIdList:string[]
			nameList:string[]
			code:Ref<string>
			parentCostCenterId:Ref<string>
			getAllVersion:Ref<bool>
	}
	export interface SearchCostCenterReqBodyBuilder extends Struct<SearchCostCenterReqBodyBuilder>{

			costCenterIdList(costCenterIdList:string[]):Ref<SearchCostCenterReqBodyBuilder>
			nameList(nameList:string[]):Ref<SearchCostCenterReqBodyBuilder>
			code(code:string):Ref<SearchCostCenterReqBodyBuilder>
			parentCostCenterId(parentCostCenterId:string):Ref<SearchCostCenterReqBodyBuilder>
			getAllVersion(getAllVersion:bool):Ref<SearchCostCenterReqBodyBuilder>
			build():Ref<SearchCostCenterReqBody>
	}
	export interface SearchCostCenterReqBuilder extends Struct<SearchCostCenterReqBuilder>{

			pageSize(pageSize:int):Ref<SearchCostCenterReqBuilder>
			pageToken(pageToken:string):Ref<SearchCostCenterReqBuilder>
			userIdType(userIdType:string):Ref<SearchCostCenterReqBuilder>
			body(body:Ref<SearchCostCenterReqBody>):Ref<SearchCostCenterReqBuilder>
			build():Ref<SearchCostCenterReq>
	}
	export interface SearchCostCenterResp extends Struct<SearchCostCenterResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchCostCenterRespData>
			success():bool
	}
	export interface SearchCostCenterRespData extends Struct<SearchCostCenterRespData>{

			items:Ref<CostCenterVersion>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SearchDepartmentIterator extends Struct<SearchDepartmentIterator>{

			next():[bool,Ref<Department>]
			nextPageToken():Ref<string>
	}
	export interface SearchDepartmentPathReqBodyBuilder extends Struct<SearchDepartmentPathReqBodyBuilder>{

			active(active:bool):Ref<SearchDepartmentPathReqBodyBuilder>
			getAllChildren(getAllChildren:bool):Ref<SearchDepartmentPathReqBodyBuilder>
			managerList(managerList:string[]):Ref<SearchDepartmentPathReqBodyBuilder>
			departmentIdList(departmentIdList:string[]):Ref<SearchDepartmentPathReqBodyBuilder>
			nameList(nameList:string[]):Ref<SearchDepartmentPathReqBodyBuilder>
			parentDepartmentId(parentDepartmentId:string):Ref<SearchDepartmentPathReqBodyBuilder>
			codeList(codeList:string[]):Ref<SearchDepartmentPathReqBodyBuilder>
			fields(fields:string[]):Ref<SearchDepartmentPathReqBodyBuilder>
			build():Ref<SearchDepartmentReqBody>
	}
	export interface SearchDepartmentReq extends Struct<SearchDepartmentReq>{

			body:Ref<SearchDepartmentReqBody>
			limit:int
	}
	export interface SearchDepartmentReqBody extends Struct<SearchDepartmentReqBody>{

			active:Ref<bool>
			getAllChildren:Ref<bool>
			managerList:string[]
			departmentIdList:string[]
			nameList:string[]
			parentDepartmentId:Ref<string>
			codeList:string[]
			fields:string[]
	}
	export interface SearchDepartmentReqBodyBuilder extends Struct<SearchDepartmentReqBodyBuilder>{

			active(active:bool):Ref<SearchDepartmentReqBodyBuilder>
			getAllChildren(getAllChildren:bool):Ref<SearchDepartmentReqBodyBuilder>
			managerList(managerList:string[]):Ref<SearchDepartmentReqBodyBuilder>
			departmentIdList(departmentIdList:string[]):Ref<SearchDepartmentReqBodyBuilder>
			nameList(nameList:string[]):Ref<SearchDepartmentReqBodyBuilder>
			parentDepartmentId(parentDepartmentId:string):Ref<SearchDepartmentReqBodyBuilder>
			codeList(codeList:string[]):Ref<SearchDepartmentReqBodyBuilder>
			fields(fields:string[]):Ref<SearchDepartmentReqBodyBuilder>
			build():Ref<SearchDepartmentReqBody>
	}
	export interface SearchDepartmentReqBuilder extends Struct<SearchDepartmentReqBuilder>{

			limit(limit:int):Ref<SearchDepartmentReqBuilder>
			pageSize(pageSize:int):Ref<SearchDepartmentReqBuilder>
			pageToken(pageToken:string):Ref<SearchDepartmentReqBuilder>
			userIdType(userIdType:string):Ref<SearchDepartmentReqBuilder>
			departmentIdType(departmentIdType:string):Ref<SearchDepartmentReqBuilder>
			body(body:Ref<SearchDepartmentReqBody>):Ref<SearchDepartmentReqBuilder>
			build():Ref<SearchDepartmentReq>
	}
	export interface SearchDepartmentResp extends Struct<SearchDepartmentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchDepartmentRespData>
			success():bool
	}
	export interface SearchDepartmentRespData extends Struct<SearchDepartmentRespData>{

			items:Ref<Department>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SearchEmployeeIterator extends Struct<SearchEmployeeIterator>{

			next():[bool,Ref<Employee>]
			nextPageToken():Ref<string>
	}
	export interface SearchEmployeePathReqBodyBuilder extends Struct<SearchEmployeePathReqBodyBuilder>{

			fields(fields:string[]):Ref<SearchEmployeePathReqBodyBuilder>
			employmentIdList(employmentIdList:string[]):Ref<SearchEmployeePathReqBodyBuilder>
			employeeNumberList(employeeNumberList:string[]):Ref<SearchEmployeePathReqBodyBuilder>
			workEmail(workEmail:string):Ref<SearchEmployeePathReqBodyBuilder>
			phoneNumber(phoneNumber:string):Ref<SearchEmployeePathReqBodyBuilder>
			keyWord(keyWord:string):Ref<SearchEmployeePathReqBodyBuilder>
			employmentStatus(employmentStatus:string):Ref<SearchEmployeePathReqBodyBuilder>
			employeeTypeId(employeeTypeId:string):Ref<SearchEmployeePathReqBodyBuilder>
			departmentIdList(departmentIdList:string[]):Ref<SearchEmployeePathReqBodyBuilder>
			directManagerIdList(directManagerIdList:string[]):Ref<SearchEmployeePathReqBodyBuilder>
			dottedLineManagerIdList(dottedLineManagerIdList:string[]):Ref<SearchEmployeePathReqBodyBuilder>
			regularEmployeeStartDateStart(regularEmployeeStartDateStart:string):Ref<SearchEmployeePathReqBodyBuilder>
			regularEmployeeStartDateEnd(regularEmployeeStartDateEnd:string):Ref<SearchEmployeePathReqBodyBuilder>
			effectiveTimeStart(effectiveTimeStart:string):Ref<SearchEmployeePathReqBodyBuilder>
			effectiveTimeEnd(effectiveTimeEnd:string):Ref<SearchEmployeePathReqBodyBuilder>
			workLocationIdListIncludeSub(workLocationIdListIncludeSub:string[]):Ref<SearchEmployeePathReqBodyBuilder>
			preferredEnglishFullNameList(preferredEnglishFullNameList:string[]):Ref<SearchEmployeePathReqBodyBuilder>
			preferredLocalFullNameList(preferredLocalFullNameList:string[]):Ref<SearchEmployeePathReqBodyBuilder>
			nationalIdNumberList(nationalIdNumberList:string[]):Ref<SearchEmployeePathReqBodyBuilder>
			phoneNumberList(phoneNumberList:string[]):Ref<SearchEmployeePathReqBodyBuilder>
			emailAddressList(emailAddressList:string[]):Ref<SearchEmployeePathReqBodyBuilder>
			departmentIdListIncludeSub(departmentIdListIncludeSub:string[]):Ref<SearchEmployeePathReqBodyBuilder>
			build():Ref<SearchEmployeeReqBody>
	}
	export interface SearchEmployeeReq extends Struct<SearchEmployeeReq>{

			body:Ref<SearchEmployeeReqBody>
			limit:int
	}
	export interface SearchEmployeeReqBody extends Struct<SearchEmployeeReqBody>{

			fields:string[]
			employmentIdList:string[]
			employeeNumberList:string[]
			workEmail:Ref<string>
			phoneNumber:Ref<string>
			keyWord:Ref<string>
			employmentStatus:Ref<string>
			employeeTypeId:Ref<string>
			departmentIdList:string[]
			directManagerIdList:string[]
			dottedLineManagerIdList:string[]
			regularEmployeeStartDateStart:Ref<string>
			regularEmployeeStartDateEnd:Ref<string>
			effectiveTimeStart:Ref<string>
			effectiveTimeEnd:Ref<string>
			workLocationIdListIncludeSub:string[]
			preferredEnglishFullNameList:string[]
			preferredLocalFullNameList:string[]
			nationalIdNumberList:string[]
			phoneNumberList:string[]
			emailAddressList:string[]
			departmentIdListIncludeSub:string[]
	}
	export interface SearchEmployeeReqBodyBuilder extends Struct<SearchEmployeeReqBodyBuilder>{

			fields(fields:string[]):Ref<SearchEmployeeReqBodyBuilder>
			employmentIdList(employmentIdList:string[]):Ref<SearchEmployeeReqBodyBuilder>
			employeeNumberList(employeeNumberList:string[]):Ref<SearchEmployeeReqBodyBuilder>
			workEmail(workEmail:string):Ref<SearchEmployeeReqBodyBuilder>
			phoneNumber(phoneNumber:string):Ref<SearchEmployeeReqBodyBuilder>
			keyWord(keyWord:string):Ref<SearchEmployeeReqBodyBuilder>
			employmentStatus(employmentStatus:string):Ref<SearchEmployeeReqBodyBuilder>
			employeeTypeId(employeeTypeId:string):Ref<SearchEmployeeReqBodyBuilder>
			departmentIdList(departmentIdList:string[]):Ref<SearchEmployeeReqBodyBuilder>
			directManagerIdList(directManagerIdList:string[]):Ref<SearchEmployeeReqBodyBuilder>
			dottedLineManagerIdList(dottedLineManagerIdList:string[]):Ref<SearchEmployeeReqBodyBuilder>
			regularEmployeeStartDateStart(regularEmployeeStartDateStart:string):Ref<SearchEmployeeReqBodyBuilder>
			regularEmployeeStartDateEnd(regularEmployeeStartDateEnd:string):Ref<SearchEmployeeReqBodyBuilder>
			effectiveTimeStart(effectiveTimeStart:string):Ref<SearchEmployeeReqBodyBuilder>
			effectiveTimeEnd(effectiveTimeEnd:string):Ref<SearchEmployeeReqBodyBuilder>
			workLocationIdListIncludeSub(workLocationIdListIncludeSub:string[]):Ref<SearchEmployeeReqBodyBuilder>
			preferredEnglishFullNameList(preferredEnglishFullNameList:string[]):Ref<SearchEmployeeReqBodyBuilder>
			preferredLocalFullNameList(preferredLocalFullNameList:string[]):Ref<SearchEmployeeReqBodyBuilder>
			nationalIdNumberList(nationalIdNumberList:string[]):Ref<SearchEmployeeReqBodyBuilder>
			phoneNumberList(phoneNumberList:string[]):Ref<SearchEmployeeReqBodyBuilder>
			emailAddressList(emailAddressList:string[]):Ref<SearchEmployeeReqBodyBuilder>
			departmentIdListIncludeSub(departmentIdListIncludeSub:string[]):Ref<SearchEmployeeReqBodyBuilder>
			build():Ref<SearchEmployeeReqBody>
	}
	export interface SearchEmployeeReqBuilder extends Struct<SearchEmployeeReqBuilder>{

			limit(limit:int):Ref<SearchEmployeeReqBuilder>
			pageSize(pageSize:int):Ref<SearchEmployeeReqBuilder>
			pageToken(pageToken:string):Ref<SearchEmployeeReqBuilder>
			userIdType(userIdType:string):Ref<SearchEmployeeReqBuilder>
			departmentIdType(departmentIdType:string):Ref<SearchEmployeeReqBuilder>
			body(body:Ref<SearchEmployeeReqBody>):Ref<SearchEmployeeReqBuilder>
			build():Ref<SearchEmployeeReq>
	}
	export interface SearchEmployeeResp extends Struct<SearchEmployeeResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchEmployeeRespData>
			success():bool
	}
	export interface SearchEmployeeRespData extends Struct<SearchEmployeeRespData>{

			items:Ref<Employee>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SearchJobChangeIterator extends Struct<SearchJobChangeIterator>{

			next():[bool,Ref<JobChange>]
			nextPageToken():Ref<string>
	}
	export interface SearchJobChangePathReqBodyBuilder extends Struct<SearchJobChangePathReqBodyBuilder>{

			employmentIds(employmentIds:string[]):Ref<SearchJobChangePathReqBodyBuilder>
			jobChangeIds(jobChangeIds:string[]):Ref<SearchJobChangePathReqBodyBuilder>
			statuses(statuses:string[]):Ref<SearchJobChangePathReqBodyBuilder>
			effectiveDateStart(effectiveDateStart:string):Ref<SearchJobChangePathReqBodyBuilder>
			effectiveDateEnd(effectiveDateEnd:string):Ref<SearchJobChangePathReqBodyBuilder>
			updatedTimeStart(updatedTimeStart:string):Ref<SearchJobChangePathReqBodyBuilder>
			updatedTimeEnd(updatedTimeEnd:string):Ref<SearchJobChangePathReqBodyBuilder>
			build():Ref<SearchJobChangeReqBody>
	}
	export interface SearchJobChangeReq extends Struct<SearchJobChangeReq>{

			body:Ref<SearchJobChangeReqBody>
			limit:int
	}
	export interface SearchJobChangeReqBody extends Struct<SearchJobChangeReqBody>{

			employmentIds:string[]
			jobChangeIds:string[]
			statuses:string[]
			effectiveDateStart:Ref<string>
			effectiveDateEnd:Ref<string>
			updatedTimeStart:Ref<string>
			updatedTimeEnd:Ref<string>
	}
	export interface SearchJobChangeReqBodyBuilder extends Struct<SearchJobChangeReqBodyBuilder>{

			employmentIds(employmentIds:string[]):Ref<SearchJobChangeReqBodyBuilder>
			jobChangeIds(jobChangeIds:string[]):Ref<SearchJobChangeReqBodyBuilder>
			statuses(statuses:string[]):Ref<SearchJobChangeReqBodyBuilder>
			effectiveDateStart(effectiveDateStart:string):Ref<SearchJobChangeReqBodyBuilder>
			effectiveDateEnd(effectiveDateEnd:string):Ref<SearchJobChangeReqBodyBuilder>
			updatedTimeStart(updatedTimeStart:string):Ref<SearchJobChangeReqBodyBuilder>
			updatedTimeEnd(updatedTimeEnd:string):Ref<SearchJobChangeReqBodyBuilder>
			build():Ref<SearchJobChangeReqBody>
	}
	export interface SearchJobChangeReqBuilder extends Struct<SearchJobChangeReqBuilder>{

			limit(limit:int):Ref<SearchJobChangeReqBuilder>
			pageSize(pageSize:int):Ref<SearchJobChangeReqBuilder>
			pageToken(pageToken:string):Ref<SearchJobChangeReqBuilder>
			userIdType(userIdType:string):Ref<SearchJobChangeReqBuilder>
			departmentIdType(departmentIdType:string):Ref<SearchJobChangeReqBuilder>
			body(body:Ref<SearchJobChangeReqBody>):Ref<SearchJobChangeReqBuilder>
			build():Ref<SearchJobChangeReq>
	}
	export interface SearchJobChangeResp extends Struct<SearchJobChangeResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchJobChangeRespData>
			success():bool
	}
	export interface SearchJobChangeRespData extends Struct<SearchJobChangeRespData>{

			items:Ref<JobChange>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface SearchPreHireIterator extends Struct<SearchPreHireIterator>{

			next():[bool,Ref<PreHire>]
			nextPageToken():Ref<string>
	}
	export interface SearchPreHirePathReqBodyBuilder extends Struct<SearchPreHirePathReqBodyBuilder>{

			workerIds(workerIds:string[]):Ref<SearchPreHirePathReqBodyBuilder>
			preHireIds(preHireIds:string[]):Ref<SearchPreHirePathReqBodyBuilder>
			onboardingDateStart(onboardingDateStart:string):Ref<SearchPreHirePathReqBodyBuilder>
			onboardingDateEnd(onboardingDateEnd:string):Ref<SearchPreHirePathReqBodyBuilder>
			onboardingLocationIds(onboardingLocationIds:string[]):Ref<SearchPreHirePathReqBodyBuilder>
			onboardingStatus(onboardingStatus:string):Ref<SearchPreHirePathReqBodyBuilder>
			departmentIds(departmentIds:string[]):Ref<SearchPreHirePathReqBodyBuilder>
			directManagerIds(directManagerIds:string[]):Ref<SearchPreHirePathReqBodyBuilder>
			employeeTypeIds(employeeTypeIds:string[]):Ref<SearchPreHirePathReqBodyBuilder>
			jobFamilyIds(jobFamilyIds:string[]):Ref<SearchPreHirePathReqBodyBuilder>
			keyWord(keyWord:string):Ref<SearchPreHirePathReqBodyBuilder>
			rehire(rehire:string):Ref<SearchPreHirePathReqBodyBuilder>
			fields(fields:string[]):Ref<SearchPreHirePathReqBodyBuilder>
			build():Ref<SearchPreHireReqBody>
	}
	export interface SearchPreHireReq extends Struct<SearchPreHireReq>{

			body:Ref<SearchPreHireReqBody>
			limit:int
	}
	export interface SearchPreHireReqBody extends Struct<SearchPreHireReqBody>{

			workerIds:string[]
			preHireIds:string[]
			onboardingDateStart:Ref<string>
			onboardingDateEnd:Ref<string>
			onboardingLocationIds:string[]
			onboardingStatus:Ref<string>
			departmentIds:string[]
			directManagerIds:string[]
			employeeTypeIds:string[]
			jobFamilyIds:string[]
			keyWord:Ref<string>
			rehire:Ref<string>
			fields:string[]
	}
	export interface SearchPreHireReqBodyBuilder extends Struct<SearchPreHireReqBodyBuilder>{

			workerIds(workerIds:string[]):Ref<SearchPreHireReqBodyBuilder>
			preHireIds(preHireIds:string[]):Ref<SearchPreHireReqBodyBuilder>
			onboardingDateStart(onboardingDateStart:string):Ref<SearchPreHireReqBodyBuilder>
			onboardingDateEnd(onboardingDateEnd:string):Ref<SearchPreHireReqBodyBuilder>
			onboardingLocationIds(onboardingLocationIds:string[]):Ref<SearchPreHireReqBodyBuilder>
			onboardingStatus(onboardingStatus:string):Ref<SearchPreHireReqBodyBuilder>
			departmentIds(departmentIds:string[]):Ref<SearchPreHireReqBodyBuilder>
			directManagerIds(directManagerIds:string[]):Ref<SearchPreHireReqBodyBuilder>
			employeeTypeIds(employeeTypeIds:string[]):Ref<SearchPreHireReqBodyBuilder>
			jobFamilyIds(jobFamilyIds:string[]):Ref<SearchPreHireReqBodyBuilder>
			keyWord(keyWord:string):Ref<SearchPreHireReqBodyBuilder>
			rehire(rehire:string):Ref<SearchPreHireReqBodyBuilder>
			fields(fields:string[]):Ref<SearchPreHireReqBodyBuilder>
			build():Ref<SearchPreHireReqBody>
	}
	export interface SearchPreHireReqBuilder extends Struct<SearchPreHireReqBuilder>{

			limit(limit:int):Ref<SearchPreHireReqBuilder>
			pageSize(pageSize:int):Ref<SearchPreHireReqBuilder>
			pageToken(pageToken:string):Ref<SearchPreHireReqBuilder>
			userIdType(userIdType:string):Ref<SearchPreHireReqBuilder>
			departmentIdType(departmentIdType:string):Ref<SearchPreHireReqBuilder>
			body(body:Ref<SearchPreHireReqBody>):Ref<SearchPreHireReqBuilder>
			build():Ref<SearchPreHireReq>
	}
	export interface SearchPreHireResp extends Struct<SearchPreHireResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchPreHireRespData>
			success():bool
	}
	export interface SearchPreHireRespData extends Struct<SearchPreHireRespData>{

			items:Ref<PreHire>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SearchProbationIterator extends Struct<SearchProbationIterator>{

			next():[bool,Ref<ProbationInfo>]
			nextPageToken():Ref<string>
	}
	export interface SearchProbationPathReqBodyBuilder extends Struct<SearchProbationPathReqBodyBuilder>{

			employmentIds(employmentIds:string[]):Ref<SearchProbationPathReqBodyBuilder>
			departmentIds(departmentIds:string[]):Ref<SearchProbationPathReqBodyBuilder>
			probationStartDateStart(probationStartDateStart:string):Ref<SearchProbationPathReqBodyBuilder>
			probationStartDateEnd(probationStartDateEnd:string):Ref<SearchProbationPathReqBodyBuilder>
			probationExpectedEndDateStart(probationExpectedEndDateStart:string):Ref<SearchProbationPathReqBodyBuilder>
			probationExpectedEndDateEnd(probationExpectedEndDateEnd:string):Ref<SearchProbationPathReqBodyBuilder>
			actualProbationEndDateStart(actualProbationEndDateStart:string):Ref<SearchProbationPathReqBodyBuilder>
			actualProbationEndDateEnd(actualProbationEndDateEnd:string):Ref<SearchProbationPathReqBodyBuilder>
			initiatingTimeStart(initiatingTimeStart:string):Ref<SearchProbationPathReqBodyBuilder>
			initiatingTimeEnd(initiatingTimeEnd:string):Ref<SearchProbationPathReqBodyBuilder>
			probationStatus(probationStatus:string):Ref<SearchProbationPathReqBodyBuilder>
			finalAssessmentResult(finalAssessmentResult:string):Ref<SearchProbationPathReqBodyBuilder>
			finalAssessmentGrade(finalAssessmentGrade:string):Ref<SearchProbationPathReqBodyBuilder>
			build():Ref<SearchProbationReqBody>
	}
	export interface SearchProbationReq extends Struct<SearchProbationReq>{

			body:Ref<SearchProbationReqBody>
			limit:int
	}
	export interface SearchProbationReqBody extends Struct<SearchProbationReqBody>{

			employmentIds:string[]
			departmentIds:string[]
			probationStartDateStart:Ref<string>
			probationStartDateEnd:Ref<string>
			probationExpectedEndDateStart:Ref<string>
			probationExpectedEndDateEnd:Ref<string>
			actualProbationEndDateStart:Ref<string>
			actualProbationEndDateEnd:Ref<string>
			initiatingTimeStart:Ref<string>
			initiatingTimeEnd:Ref<string>
			probationStatus:Ref<string>
			finalAssessmentResult:Ref<string>
			finalAssessmentGrade:Ref<string>
	}
	export interface SearchProbationReqBodyBuilder extends Struct<SearchProbationReqBodyBuilder>{

			employmentIds(employmentIds:string[]):Ref<SearchProbationReqBodyBuilder>
			departmentIds(departmentIds:string[]):Ref<SearchProbationReqBodyBuilder>
			probationStartDateStart(probationStartDateStart:string):Ref<SearchProbationReqBodyBuilder>
			probationStartDateEnd(probationStartDateEnd:string):Ref<SearchProbationReqBodyBuilder>
			probationExpectedEndDateStart(probationExpectedEndDateStart:string):Ref<SearchProbationReqBodyBuilder>
			probationExpectedEndDateEnd(probationExpectedEndDateEnd:string):Ref<SearchProbationReqBodyBuilder>
			actualProbationEndDateStart(actualProbationEndDateStart:string):Ref<SearchProbationReqBodyBuilder>
			actualProbationEndDateEnd(actualProbationEndDateEnd:string):Ref<SearchProbationReqBodyBuilder>
			initiatingTimeStart(initiatingTimeStart:string):Ref<SearchProbationReqBodyBuilder>
			initiatingTimeEnd(initiatingTimeEnd:string):Ref<SearchProbationReqBodyBuilder>
			probationStatus(probationStatus:string):Ref<SearchProbationReqBodyBuilder>
			finalAssessmentResult(finalAssessmentResult:string):Ref<SearchProbationReqBodyBuilder>
			finalAssessmentGrade(finalAssessmentGrade:string):Ref<SearchProbationReqBodyBuilder>
			build():Ref<SearchProbationReqBody>
	}
	export interface SearchProbationReqBuilder extends Struct<SearchProbationReqBuilder>{

			limit(limit:int):Ref<SearchProbationReqBuilder>
			pageSize(pageSize:int):Ref<SearchProbationReqBuilder>
			pageToken(pageToken:string):Ref<SearchProbationReqBuilder>
			userIdType(userIdType:string):Ref<SearchProbationReqBuilder>
			departmentIdType(departmentIdType:string):Ref<SearchProbationReqBuilder>
			body(body:Ref<SearchProbationReqBody>):Ref<SearchProbationReqBuilder>
			build():Ref<SearchProbationReq>
	}
	export interface SearchProbationResp extends Struct<SearchProbationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchProbationRespData>
			success():bool
	}
	export interface SearchProbationRespData extends Struct<SearchProbationRespData>{

			items:Ref<ProbationInfo>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SignatureFile extends Struct<SignatureFile>{

			signatureFileId:Ref<string>
			names:Ref<I18n>[]
			createTime:Ref<string>
			updateTime:Ref<string>
			employmentId:Ref<string>
			signatureFileState:Ref<Enum>
			contractCode:Ref<string>
	}
	export interface SignatureFileBuilder extends Struct<SignatureFileBuilder>{

			signatureFileId(signatureFileId:string):Ref<SignatureFileBuilder>
			names(names:Ref<I18n>[]):Ref<SignatureFileBuilder>
			createTime(createTime:string):Ref<SignatureFileBuilder>
			updateTime(updateTime:string):Ref<SignatureFileBuilder>
			employmentId(employmentId:string):Ref<SignatureFileBuilder>
			signatureFileState(signatureFileState:Ref<Enum>):Ref<SignatureFileBuilder>
			contractCode(contractCode:string):Ref<SignatureFileBuilder>
			build():Ref<SignatureFile>
	}
	export interface TranferEmploymentInfo extends Struct<TranferEmploymentInfo>{

			regularEmployeeStartDate:Ref<string>
			seniorityDate:Ref<string>
			employeeNumber:Ref<string>
			customFields:Ref<CustomFieldData>[]
	}
	export interface TranferEmploymentInfoBuilder extends Struct<TranferEmploymentInfoBuilder>{

			regularEmployeeStartDate(regularEmployeeStartDate:string):Ref<TranferEmploymentInfoBuilder>
			seniorityDate(seniorityDate:string):Ref<TranferEmploymentInfoBuilder>
			employeeNumber(employeeNumber:string):Ref<TranferEmploymentInfoBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<TranferEmploymentInfoBuilder>
			build():Ref<TranferEmploymentInfo>
	}
	export interface TransferInfo extends Struct<TransferInfo>{

			remark:Ref<string>
			offerInfo:Ref<string>
			targetDottedManagerClean:Ref<bool>
			probationExist:Ref<bool>
			originalDepartment:Ref<string>
			targetDepartment:Ref<string>
			targetDraftDepartment:Ref<string>
			originalDepartmentIdPath:Ref<OrgdraftDepartmentId>[]
			targetDepartmentIdPath:Ref<OrgdraftDepartmentId>[]
			originalWorkLocation:Ref<string>
			targetWorkLocation:Ref<string>
			originalDirectManager:Ref<string>
			targetDirectManager:Ref<string>
			originalDottedManager:Ref<string>
			targetDottedManager:Ref<string>
			originalJob:Ref<string>
			targetJob:Ref<string>
			originalJobFamily:Ref<string>
			targetJobFamily:Ref<string>
			originalJobLevel:Ref<string>
			targetJobLevel:Ref<string>
			originalWorkforceType:Ref<string>
			targetWorkforceType:Ref<string>
			originalCompany:Ref<string>
			targetCompany:Ref<string>
			originalContractNumber:Ref<string>
			targetContractNumber:Ref<string>
			originalContractType:Ref<string>
			targetContractType:Ref<string>
			originalDurationType:Ref<string>
			targetDurationType:Ref<string>
			originalSigningType:Ref<string>
			targetSigningType:Ref<string>
			originalContractStartDate:Ref<string>
			targetContractStartDate:Ref<string>
			originalContractEndDate:Ref<string>
			targetContractEndDate:Ref<string>
			originalWorkingHoursType:Ref<string>
			targetWorkingHoursType:Ref<string>
			originalWorkingCalendar:Ref<string>
			targetWorkingCalendar:Ref<string>
			originalProbationEndDate:Ref<string>
			targetProbationEndDate:Ref<string>
			originalWeeklyWorkingHours:Ref<string>
			targetWeeklyWorkingHours:Ref<string>
			originalWorkShift:Ref<string>
			targetWorkShift:Ref<string>
			originalCostCenterRate:Ref<JobDataCostCenter>[]
			targetCostCenterRate:Ref<JobDataCostCenter>[]
			originalEmploymentChange:Ref<TranferEmploymentInfo>
			targetEmploymentChange:Ref<TranferEmploymentInfo>
			originalJobGrade:Ref<string>
			targetJobGrade:Ref<string>
			originalCompensationType:Ref<string>
			targetCompensationType:Ref<string>
			originalServiceCompany:Ref<string>
			targetServiceCompany:Ref<string>
	}
	export interface TransferInfoBuilder extends Struct<TransferInfoBuilder>{

			remark(remark:string):Ref<TransferInfoBuilder>
			offerInfo(offerInfo:string):Ref<TransferInfoBuilder>
			targetDottedManagerClean(targetDottedManagerClean:bool):Ref<TransferInfoBuilder>
			probationExist(probationExist:bool):Ref<TransferInfoBuilder>
			originalDepartment(originalDepartment:string):Ref<TransferInfoBuilder>
			targetDepartment(targetDepartment:string):Ref<TransferInfoBuilder>
			targetDraftDepartment(targetDraftDepartment:string):Ref<TransferInfoBuilder>
			originalDepartmentIdPath(originalDepartmentIdPath:Ref<OrgdraftDepartmentId>[]):Ref<TransferInfoBuilder>
			targetDepartmentIdPath(targetDepartmentIdPath:Ref<OrgdraftDepartmentId>[]):Ref<TransferInfoBuilder>
			originalWorkLocation(originalWorkLocation:string):Ref<TransferInfoBuilder>
			targetWorkLocation(targetWorkLocation:string):Ref<TransferInfoBuilder>
			originalDirectManager(originalDirectManager:string):Ref<TransferInfoBuilder>
			targetDirectManager(targetDirectManager:string):Ref<TransferInfoBuilder>
			originalDottedManager(originalDottedManager:string):Ref<TransferInfoBuilder>
			targetDottedManager(targetDottedManager:string):Ref<TransferInfoBuilder>
			originalJob(originalJob:string):Ref<TransferInfoBuilder>
			targetJob(targetJob:string):Ref<TransferInfoBuilder>
			originalJobFamily(originalJobFamily:string):Ref<TransferInfoBuilder>
			targetJobFamily(targetJobFamily:string):Ref<TransferInfoBuilder>
			originalJobLevel(originalJobLevel:string):Ref<TransferInfoBuilder>
			targetJobLevel(targetJobLevel:string):Ref<TransferInfoBuilder>
			originalWorkforceType(originalWorkforceType:string):Ref<TransferInfoBuilder>
			targetWorkforceType(targetWorkforceType:string):Ref<TransferInfoBuilder>
			originalCompany(originalCompany:string):Ref<TransferInfoBuilder>
			targetCompany(targetCompany:string):Ref<TransferInfoBuilder>
			originalContractNumber(originalContractNumber:string):Ref<TransferInfoBuilder>
			targetContractNumber(targetContractNumber:string):Ref<TransferInfoBuilder>
			originalContractType(originalContractType:string):Ref<TransferInfoBuilder>
			targetContractType(targetContractType:string):Ref<TransferInfoBuilder>
			originalDurationType(originalDurationType:string):Ref<TransferInfoBuilder>
			targetDurationType(targetDurationType:string):Ref<TransferInfoBuilder>
			originalSigningType(originalSigningType:string):Ref<TransferInfoBuilder>
			targetSigningType(targetSigningType:string):Ref<TransferInfoBuilder>
			originalContractStartDate(originalContractStartDate:string):Ref<TransferInfoBuilder>
			targetContractStartDate(targetContractStartDate:string):Ref<TransferInfoBuilder>
			originalContractEndDate(originalContractEndDate:string):Ref<TransferInfoBuilder>
			targetContractEndDate(targetContractEndDate:string):Ref<TransferInfoBuilder>
			originalWorkingHoursType(originalWorkingHoursType:string):Ref<TransferInfoBuilder>
			targetWorkingHoursType(targetWorkingHoursType:string):Ref<TransferInfoBuilder>
			originalWorkingCalendar(originalWorkingCalendar:string):Ref<TransferInfoBuilder>
			targetWorkingCalendar(targetWorkingCalendar:string):Ref<TransferInfoBuilder>
			originalProbationEndDate(originalProbationEndDate:string):Ref<TransferInfoBuilder>
			targetProbationEndDate(targetProbationEndDate:string):Ref<TransferInfoBuilder>
			originalWeeklyWorkingHours(originalWeeklyWorkingHours:string):Ref<TransferInfoBuilder>
			targetWeeklyWorkingHours(targetWeeklyWorkingHours:string):Ref<TransferInfoBuilder>
			originalWorkShift(originalWorkShift:string):Ref<TransferInfoBuilder>
			targetWorkShift(targetWorkShift:string):Ref<TransferInfoBuilder>
			originalCostCenterRate(originalCostCenterRate:Ref<JobDataCostCenter>[]):Ref<TransferInfoBuilder>
			targetCostCenterRate(targetCostCenterRate:Ref<JobDataCostCenter>[]):Ref<TransferInfoBuilder>
			originalEmploymentChange(originalEmploymentChange:Ref<TranferEmploymentInfo>):Ref<TransferInfoBuilder>
			targetEmploymentChange(targetEmploymentChange:Ref<TranferEmploymentInfo>):Ref<TransferInfoBuilder>
			originalJobGrade(originalJobGrade:string):Ref<TransferInfoBuilder>
			targetJobGrade(targetJobGrade:string):Ref<TransferInfoBuilder>
			originalCompensationType(originalCompensationType:string):Ref<TransferInfoBuilder>
			targetCompensationType(targetCompensationType:string):Ref<TransferInfoBuilder>
			originalServiceCompany(originalServiceCompany:string):Ref<TransferInfoBuilder>
			targetServiceCompany(targetServiceCompany:string):Ref<TransferInfoBuilder>
			build():Ref<TransferInfo>
	}
	export interface UserContact extends Struct<UserContact>{

			userIds:string[]
			mobile:Ref<string>
	}
	export interface UserContactBuilder extends Struct<UserContactBuilder>{

			userIds(userIds:string[]):Ref<UserContactBuilder>
			mobile(mobile:string):Ref<UserContactBuilder>
			build():Ref<UserContact>
	}
	//"open_id"
	export const UserIdTypeBatchGetDepartmentOpenId:string
	//"people_corehr_id"
	export const UserIdTypeBatchGetDepartmentPeopleCorehrId:string
	//"union_id"
	export const UserIdTypeBatchGetDepartmentUnionId:string
	//"user_id"
	export const UserIdTypeBatchGetDepartmentUserId:string
	//"open_id"
	export const UserIdTypeBatchGetEmployeeOpenId:string
	//"people_corehr_id"
	export const UserIdTypeBatchGetEmployeePeopleCorehrId:string
	//"union_id"
	export const UserIdTypeBatchGetEmployeeUnionId:string
	//"user_id"
	export const UserIdTypeBatchGetEmployeeUserId:string
	//"open_id"
	export const UserIdTypeBatchGetEmployeesBpOpenId:string
	//"people_corehr_id"
	export const UserIdTypeBatchGetEmployeesBpPeopleCorehrId:string
	//"union_id"
	export const UserIdTypeBatchGetEmployeesBpUnionId:string
	//"user_id"
	export const UserIdTypeBatchGetEmployeesBpUserId:string
	//"open_id"
	export const UserIdTypeBatchGetEmployeesJobDataOpenId:string
	//"people_corehr_id"
	export const UserIdTypeBatchGetEmployeesJobDataPeopleCorehrId:string
	//"union_id"
	export const UserIdTypeBatchGetEmployeesJobDataUnionId:string
	//"user_id"
	export const UserIdTypeBatchGetEmployeesJobDataUserId:string
	//"open_id"
	export const UserIdTypeCreateCostCenterOpenId:string
	//"people_corehr_id"
	export const UserIdTypeCreateCostCenterPeopleCorehrId:string
	//"union_id"
	export const UserIdTypeCreateCostCenterUnionId:string
	//"user_id"
	export const UserIdTypeCreateCostCenterUserId:string
	//"open_id"
	export const UserIdTypeCreateCostCenterVersionOpenId:string
	//"people_corehr_id"
	export const UserIdTypeCreateCostCenterVersionPeopleCorehrId:string
	//"union_id"
	export const UserIdTypeCreateCostCenterVersionUnionId:string
	//"user_id"
	export const UserIdTypeCreateCostCenterVersionUserId:string
	//"open_id"
	export const UserIdTypeCreateProbationAssessmentOpenId:string
	//"people_corehr_id"
	export const UserIdTypeCreateProbationAssessmentPeopleCorehrId:string
	//"union_id"
	export const UserIdTypeCreateProbationAssessmentUnionId:string
	//"user_id"
	export const UserIdTypeCreateProbationAssessmentUserId:string
	//"open_id"
	export const UserIdTypeGetProcessFormVariableDataOpenId:string
	//"union_id"
	export const UserIdTypeGetProcessFormVariableDataUnionId:string
	//"user_id"
	export const UserIdTypeGetProcessFormVariableDataUserId:string
	//"open_id"
	export const UserIdTypeGetProcessOpenId:string
	//"union_id"
	export const UserIdTypeGetProcessUnionId:string
	//"user_id"
	export const UserIdTypeGetProcessUserId:string
	//"open_id"
	export const UserIdTypeListBpOpenId:string
	//"people_corehr_id"
	export const UserIdTypeListBpPeopleCorehrId:string
	//"union_id"
	export const UserIdTypeListBpUnionId:string
	//"user_id"
	export const UserIdTypeListBpUserId:string
	//"open_id"
	export const UserIdTypeOpenId:string
	//"open_id"
	export const UserIdTypePatchCostCenterOpenId:string
	//"people_corehr_id"
	export const UserIdTypePatchCostCenterPeopleCorehrId:string
	//"union_id"
	export const UserIdTypePatchCostCenterUnionId:string
	//"user_id"
	export const UserIdTypePatchCostCenterUserId:string
	//"open_id"
	export const UserIdTypePatchCostCenterVersionOpenId:string
	//"people_corehr_id"
	export const UserIdTypePatchCostCenterVersionPeopleCorehrId:string
	//"union_id"
	export const UserIdTypePatchCostCenterVersionUnionId:string
	//"user_id"
	export const UserIdTypePatchCostCenterVersionUserId:string
	//"people_corehr_id"
	export const UserIdTypePeopleCorehrId:string
	//"open_id"
	export const UserIdTypeQueryEmployeesJobDataOpenId:string
	//"people_corehr_id"
	export const UserIdTypeQueryEmployeesJobDataPeopleCorehrId:string
	//"union_id"
	export const UserIdTypeQueryEmployeesJobDataUnionId:string
	//"user_id"
	export const UserIdTypeQueryEmployeesJobDataUserId:string
	//"open_id"
	export const UserIdTypeQueryTimelineDepartmentOpenId:string
	//"people_corehr_id"
	export const UserIdTypeQueryTimelineDepartmentPeopleCorehrId:string
	//"union_id"
	export const UserIdTypeQueryTimelineDepartmentUnionId:string
	//"user_id"
	export const UserIdTypeQueryTimelineDepartmentUserId:string
	//"open_id"
	export const UserIdTypeSearchContractOpenId:string
	//"people_corehr_id"
	export const UserIdTypeSearchContractPeopleCorehrId:string
	//"union_id"
	export const UserIdTypeSearchContractUnionId:string
	//"user_id"
	export const UserIdTypeSearchContractUserId:string
	//"open_id"
	export const UserIdTypeSearchCostCenterOpenId:string
	//"people_corehr_id"
	export const UserIdTypeSearchCostCenterPeopleCorehrId:string
	//"union_id"
	export const UserIdTypeSearchCostCenterUnionId:string
	//"user_id"
	export const UserIdTypeSearchCostCenterUserId:string
	//"open_id"
	export const UserIdTypeSearchDepartmentOpenId:string
	//"people_corehr_id"
	export const UserIdTypeSearchDepartmentPeopleCorehrId:string
	//"union_id"
	export const UserIdTypeSearchDepartmentUnionId:string
	//"user_id"
	export const UserIdTypeSearchDepartmentUserId:string
	//"open_id"
	export const UserIdTypeSearchEmployeeOpenId:string
	//"people_corehr_id"
	export const UserIdTypeSearchEmployeePeopleCorehrId:string
	//"union_id"
	export const UserIdTypeSearchEmployeeUnionId:string
	//"user_id"
	export const UserIdTypeSearchEmployeeUserId:string
	//"open_id"
	export const UserIdTypeSearchJobChangeOpenId:string
	//"people_corehr_id"
	export const UserIdTypeSearchJobChangePeopleCorehrId:string
	//"union_id"
	export const UserIdTypeSearchJobChangeUnionId:string
	//"user_id"
	export const UserIdTypeSearchJobChangeUserId:string
	//"open_id"
	export const UserIdTypeSearchPreHireOpenId:string
	//"people_corehr_id"
	export const UserIdTypeSearchPreHirePeopleCorehrId:string
	//"union_id"
	export const UserIdTypeSearchPreHireUnionId:string
	//"user_id"
	export const UserIdTypeSearchPreHireUserId:string
	//"open_id"
	export const UserIdTypeSearchProbationOpenId:string
	//"people_corehr_id"
	export const UserIdTypeSearchProbationPeopleCorehrId:string
	//"union_id"
	export const UserIdTypeSearchProbationUnionId:string
	//"user_id"
	export const UserIdTypeSearchProbationUserId:string
	//"union_id"
	export const UserIdTypeUnionId:string
	//"user_id"
	export const UserIdTypeUserId:string
	export interface UserInfo extends Struct<UserInfo>{

			userId:Ref<string>
			name:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
			mobile:Ref<string>
			employeeNo:Ref<string>
			email:Ref<string>
			isResigned:Ref<bool>
			resignTime:Ref<string>
			resignDate:Ref<string>
	}
	export interface UserInfoBuilder extends Struct<UserInfoBuilder>{

			userId(userId:string):Ref<UserInfoBuilder>
			name(name:string):Ref<UserInfoBuilder>
			zhName(zhName:string):Ref<UserInfoBuilder>
			enName(enName:string):Ref<UserInfoBuilder>
			mobile(mobile:string):Ref<UserInfoBuilder>
			employeeNo(employeeNo:string):Ref<UserInfoBuilder>
			email(email:string):Ref<UserInfoBuilder>
			isResigned(isResigned:bool):Ref<UserInfoBuilder>
			resignTime(resignTime:string):Ref<UserInfoBuilder>
			resignDate(resignDate:string):Ref<UserInfoBuilder>
			build():Ref<UserInfo>
	}
	export interface V2 extends Struct<V2>{

			basicInfoBank:Ref<{
			
				search(ctx:context.Context,req:Ref<SearchBasicInfoBankReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoBankResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchBasicInfoBankReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoBankIterator>
			}>
			basicInfoBankBranch:Ref<{
			
				search(ctx:context.Context,req:Ref<SearchBasicInfoBankBranchReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoBankBranchResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchBasicInfoBankBranchReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoBankBranchIterator>
			}>
			basicInfoCity:Ref<{
			
				search(ctx:context.Context,req:Ref<SearchBasicInfoCityReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoCityResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchBasicInfoCityReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoCityIterator>
			}>
			basicInfoCountryRegion:Ref<{
			
				search(ctx:context.Context,req:Ref<SearchBasicInfoCountryRegionReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoCountryRegionResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchBasicInfoCountryRegionReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoCountryRegionIterator>
			}>
			basicInfoCountryRegionSubdivision:Ref<{
			
				search(ctx:context.Context,req:Ref<SearchBasicInfoCountryRegionSubdivisionReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoCountryRegionSubdivisionResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchBasicInfoCountryRegionSubdivisionReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoCountryRegionSubdivisionIterator>
			}>
			basicInfoCurrency:Ref<{
			
				search(ctx:context.Context,req:Ref<SearchBasicInfoCurrencyReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoCurrencyResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchBasicInfoCurrencyReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoCurrencyIterator>
			}>
			basicInfoDistrict:Ref<{
			
				search(ctx:context.Context,req:Ref<SearchBasicInfoDistrictReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoDistrictResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchBasicInfoDistrictReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoDistrictIterator>
			}>
			basicInfoNationality:Ref<{
			
				search(ctx:context.Context,req:Ref<SearchBasicInfoNationalityReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoNationalityResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchBasicInfoNationalityReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchBasicInfoNationalityIterator>
			}>
			bp:Ref<{
			
				getByDepartment(ctx:context.Context,req:Ref<GetByDepartmentBpReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetByDepartmentBpResp>
				list(ctx:context.Context,req:Ref<ListBpReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListBpResp>
				listByIterator(ctx:context.Context,req:Ref<ListBpReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListBpIterator>
			}>
			company:Ref<{
			
				batchGet(ctx:context.Context,req:Ref<BatchGetCompanyReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchGetCompanyResp>
			}>
			contract:Ref<{
			
				search(ctx:context.Context,req:Ref<SearchContractReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchContractResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchContractReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchContractIterator>
			}>
			costCenter:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateCostCenterReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateCostCenterResp>
				delete(ctx:context.Context,req:Ref<DeleteCostCenterReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteCostCenterResp>
				patch(ctx:context.Context,req:Ref<PatchCostCenterReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchCostCenterResp>
				search(ctx:context.Context,req:Ref<SearchCostCenterReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchCostCenterResp>
			}>
			costCenterVersion:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateCostCenterVersionReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateCostCenterVersionResp>
				delete(ctx:context.Context,req:Ref<DeleteCostCenterVersionReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteCostCenterVersionResp>
				patch(ctx:context.Context,req:Ref<PatchCostCenterVersionReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchCostCenterVersionResp>
			}>
			department:Ref<{
			
				batchGet(ctx:context.Context,req:Ref<BatchGetDepartmentReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchGetDepartmentResp>
				parents(ctx:context.Context,req:Ref<ParentsDepartmentReq>,...options:larkcore.RequestOptionFunc[]):Ref<ParentsDepartmentResp>
				queryTimeline(ctx:context.Context,req:Ref<QueryTimelineDepartmentReq>,...options:larkcore.RequestOptionFunc[]):Ref<QueryTimelineDepartmentResp>
				search(ctx:context.Context,req:Ref<SearchDepartmentReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchDepartmentResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchDepartmentReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchDepartmentIterator>
			}>
			employee:Ref<{
			
				batchGet(ctx:context.Context,req:Ref<BatchGetEmployeeReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchGetEmployeeResp>
				search(ctx:context.Context,req:Ref<SearchEmployeeReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchEmployeeResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchEmployeeReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchEmployeeIterator>
			}>
			employeesBp:Ref<{
			
				batchGet(ctx:context.Context,req:Ref<BatchGetEmployeesBpReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchGetEmployeesBpResp>
			}>
			employeesJobData:Ref<{
			
				batchGet(ctx:context.Context,req:Ref<BatchGetEmployeesJobDataReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchGetEmployeesJobDataResp>
				query(ctx:context.Context,req:Ref<QueryEmployeesJobDataReq>,...options:larkcore.RequestOptionFunc[]):Ref<QueryEmployeesJobDataResp>
			}>
			job:Ref<{
			
				get(ctx:context.Context,req:Ref<GetJobReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetJobResp>
				list(ctx:context.Context,req:Ref<ListJobReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListJobResp>
			}>
			jobChange:Ref<{
			
				search(ctx:context.Context,req:Ref<SearchJobChangeReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchJobChangeResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchJobChangeReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchJobChangeIterator>
			}>
			jobFamily:Ref<{
			
				batchGet(ctx:context.Context,req:Ref<BatchGetJobFamilyReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchGetJobFamilyResp>
			}>
			jobLevel:Ref<{
			
				batchGet(ctx:context.Context,req:Ref<BatchGetJobLevelReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchGetJobLevelResp>
			}>
			location:Ref<{
			
				batchGet(ctx:context.Context,req:Ref<BatchGetLocationReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchGetLocationResp>
			}>
			person:Ref<{
			
				create(ctx:context.Context,req:Ref<CreatePersonReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreatePersonResp>
				patch(ctx:context.Context,req:Ref<PatchPersonReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchPersonResp>
			}>
			preHire:Ref<{
			
				create(ctx:context.Context,req:Ref<CreatePreHireReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreatePreHireResp>
				delete(ctx:context.Context,req:Ref<DeletePreHireReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeletePreHireResp>
				patch(ctx:context.Context,req:Ref<PatchPreHireReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchPreHireResp>
				search(ctx:context.Context,req:Ref<SearchPreHireReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchPreHireResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchPreHireReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchPreHireIterator>
			}>
			probation:Ref<{
			
				enableDisableAssessment(ctx:context.Context,req:Ref<EnableDisableAssessmentProbationReq>,...options:larkcore.RequestOptionFunc[]):Ref<EnableDisableAssessmentProbationResp>
				search(ctx:context.Context,req:Ref<SearchProbationReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchProbationResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchProbationReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchProbationIterator>
			}>
			probationAssessment:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateProbationAssessmentReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateProbationAssessmentResp>
				delete(ctx:context.Context,req:Ref<DeleteProbationAssessmentReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteProbationAssessmentResp>
				patch(ctx:context.Context,req:Ref<PatchProbationAssessmentReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchProbationAssessmentResp>
			}>
			process:Ref<{
			
				get(ctx:context.Context,req:Ref<GetProcessReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetProcessResp>
				list(ctx:context.Context,req:Ref<ListProcessReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListProcessResp>
				listByIterator(ctx:context.Context,req:Ref<ListProcessReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListProcessIterator>
			}>
			processFormVariableData:Ref<{
			
				get(ctx:context.Context,req:Ref<GetProcessFormVariableDataReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetProcessFormVariableDataResp>
			}>
	}
	export interface WorkEmail extends Struct<WorkEmail>{

			email:Ref<string>
			emailUsage:Ref<Enum>
	}
	export interface WorkEmailBuilder extends Struct<WorkEmailBuilder>{

			email(email:string):Ref<WorkEmailBuilder>
			emailUsage(emailUsage:Ref<Enum>):Ref<WorkEmailBuilder>
			build():Ref<WorkEmail>
	}
	export interface WorkEmailCheckResult extends Struct<WorkEmailCheckResult>{

			workEmail:Ref<string>
			success:Ref<bool>
	}
	export interface WorkEmailCheckResultBuilder extends Struct<WorkEmailCheckResultBuilder>{

			workEmail(workEmail:string):Ref<WorkEmailCheckResultBuilder>
			success(success:bool):Ref<WorkEmailCheckResultBuilder>
			build():Ref<WorkEmailCheckResult>
	}
	export interface WorkEmailInfoList extends Struct<WorkEmailInfoList>{

			workEmail:Ref<string>
			countryRegionAlpha3Code:Ref<string>
			pinyin:Ref<string>
	}
	export interface WorkEmailInfoListBuilder extends Struct<WorkEmailInfoListBuilder>{

			workEmail(workEmail:string):Ref<WorkEmailInfoListBuilder>
			countryRegionAlpha3Code(countryRegionAlpha3Code:string):Ref<WorkEmailInfoListBuilder>
			pinyin(pinyin:string):Ref<WorkEmailInfoListBuilder>
			build():Ref<WorkEmailInfoList>
	}
	export interface WorkExperience extends Struct<WorkExperience>{

			companyName:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			jobTitle:Ref<string>
			description:Ref<string>
	}
	export interface WorkExperienceBuilder extends Struct<WorkExperienceBuilder>{

			companyName(companyName:string):Ref<WorkExperienceBuilder>
			startTime(startTime:string):Ref<WorkExperienceBuilder>
			endTime(endTime:string):Ref<WorkExperienceBuilder>
			jobTitle(jobTitle:string):Ref<WorkExperienceBuilder>
			description(description:string):Ref<WorkExperienceBuilder>
			build():Ref<WorkExperience>
	}
	export interface WorkExperienceInfo extends Struct<WorkExperienceInfo>{

			companyOrganization:Ref<I18n>[]
			department:Ref<I18n>[]
			job:Ref<I18n>[]
			description:Ref<I18n>[]
			startDate:Ref<string>
			endDate:Ref<string>
			customFields:Ref<CustomFieldData>[]
	}
	export interface WorkExperienceInfoBuilder extends Struct<WorkExperienceInfoBuilder>{

			companyOrganization(companyOrganization:Ref<I18n>[]):Ref<WorkExperienceInfoBuilder>
			department(department:Ref<I18n>[]):Ref<WorkExperienceInfoBuilder>
			job(job:Ref<I18n>[]):Ref<WorkExperienceInfoBuilder>
			description(description:Ref<I18n>[]):Ref<WorkExperienceInfoBuilder>
			startDate(startDate:string):Ref<WorkExperienceInfoBuilder>
			endDate(endDate:string):Ref<WorkExperienceInfoBuilder>
			customFields(customFields:Ref<CustomFieldData>[]):Ref<WorkExperienceInfoBuilder>
			build():Ref<WorkExperienceInfo>
	}
	export interface WorkforcePlan extends Struct<WorkforcePlan>{

			workforcePlanId:Ref<string>
			workforcePlanName:Ref<I18n>[]
			startDate:Ref<string>
			endDate:Ref<string>
			active:Ref<bool>
	}
	export interface WorkforcePlanBuilder extends Struct<WorkforcePlanBuilder>{

			workforcePlanId(workforcePlanId:string):Ref<WorkforcePlanBuilder>
			workforcePlanName(workforcePlanName:Ref<I18n>[]):Ref<WorkforcePlanBuilder>
			startDate(startDate:string):Ref<WorkforcePlanBuilder>
			endDate(endDate:string):Ref<WorkforcePlanBuilder>
			active(active:bool):Ref<WorkforcePlanBuilder>
			build():Ref<WorkforcePlan>
	}
	export interface WorkforcePlanDetail extends Struct<WorkforcePlanDetail>{

			workforcePlanDetailId:Ref<string>
			department:Ref<DimensionInfo>
			employeeType:Ref<DimensionInfo>
			workLocation:Ref<DimensionInfo>
			jobFamily:Ref<DimensionInfo>
			jobLevel:Ref<DimensionInfo>
			job:Ref<DimensionInfo>
			costCenter:Ref<DimensionInfo>
			workforcePlan:Ref<string>
			estimatedActiveIndividualsDetail:Ref<WorkforcePlanEaiDetail>[]
	}
	export interface WorkforcePlanDetailBuilder extends Struct<WorkforcePlanDetailBuilder>{

			workforcePlanDetailId(workforcePlanDetailId:string):Ref<WorkforcePlanDetailBuilder>
			department(department:Ref<DimensionInfo>):Ref<WorkforcePlanDetailBuilder>
			employeeType(employeeType:Ref<DimensionInfo>):Ref<WorkforcePlanDetailBuilder>
			workLocation(workLocation:Ref<DimensionInfo>):Ref<WorkforcePlanDetailBuilder>
			jobFamily(jobFamily:Ref<DimensionInfo>):Ref<WorkforcePlanDetailBuilder>
			jobLevel(jobLevel:Ref<DimensionInfo>):Ref<WorkforcePlanDetailBuilder>
			job(job:Ref<DimensionInfo>):Ref<WorkforcePlanDetailBuilder>
			costCenter(costCenter:Ref<DimensionInfo>):Ref<WorkforcePlanDetailBuilder>
			workforcePlan(workforcePlan:string):Ref<WorkforcePlanDetailBuilder>
			estimatedActiveIndividualsDetail(estimatedActiveIndividualsDetail:Ref<WorkforcePlanEaiDetail>[]):Ref<WorkforcePlanDetailBuilder>
			build():Ref<WorkforcePlanDetail>
	}
	export interface WorkforcePlanDetailV2 extends Struct<WorkforcePlanDetailV2>{

			workforcePlanDetailId:Ref<string>
			dimensionInfoDatas:Ref<DimensionInfoData>[]
			workforcePlan:Ref<string>
			estimatedActiveIndividualsDetails:Ref<WorkforcePlanEaiDetail>[]
	}
	export interface WorkforcePlanDetailV2Builder extends Struct<WorkforcePlanDetailV2Builder>{

			workforcePlanDetailId(workforcePlanDetailId:string):Ref<WorkforcePlanDetailV2Builder>
			dimensionInfoDatas(dimensionInfoDatas:Ref<DimensionInfoData>[]):Ref<WorkforcePlanDetailV2Builder>
			workforcePlan(workforcePlan:string):Ref<WorkforcePlanDetailV2Builder>
			estimatedActiveIndividualsDetails(estimatedActiveIndividualsDetails:Ref<WorkforcePlanEaiDetail>[]):Ref<WorkforcePlanDetailV2Builder>
			build():Ref<WorkforcePlanDetailV2>
	}
	export interface WorkforcePlanEaiDetail extends Struct<WorkforcePlanEaiDetail>{

			date:Ref<string>
			estimatedActiveIndividuals:Ref<string>
	}
	export interface WorkforcePlanEaiDetailBuilder extends Struct<WorkforcePlanEaiDetailBuilder>{

			date(date:string):Ref<WorkforcePlanEaiDetailBuilder>
			estimatedActiveIndividuals(estimatedActiveIndividuals:string):Ref<WorkforcePlanEaiDetailBuilder>
			build():Ref<WorkforcePlanEaiDetail>
	}
	export function emptyGetJobResp():GetJobResp
	export function emptyRefGetJobResp():Ref<GetJobResp>
	export function refOfGetJobResp(x:GetJobResp,v:Ref<GetJobResp>)
	export function unRefGetJobResp(v:Ref<GetJobResp>):GetJobResp
	export function emptyNameBuilder():NameBuilder
	export function emptyRefNameBuilder():Ref<NameBuilder>
	export function refOfNameBuilder(x:NameBuilder,v:Ref<NameBuilder>)
	export function unRefNameBuilder(v:Ref<NameBuilder>):NameBuilder
	export function emptyPatchCostCenterVersionReq():PatchCostCenterVersionReq
	export function emptyRefPatchCostCenterVersionReq():Ref<PatchCostCenterVersionReq>
	export function refOfPatchCostCenterVersionReq(x:PatchCostCenterVersionReq,v:Ref<PatchCostCenterVersionReq>)
	export function unRefPatchCostCenterVersionReq(v:Ref<PatchCostCenterVersionReq>):PatchCostCenterVersionReq
	export function emptyTransferInfo():TransferInfo
	export function emptyRefTransferInfo():Ref<TransferInfo>
	export function refOfTransferInfo(x:TransferInfo,v:Ref<TransferInfo>)
	export function unRefTransferInfo(v:Ref<TransferInfo>):TransferInfo
	export function emptyBasicInfoBuilder():BasicInfoBuilder
	export function emptyRefBasicInfoBuilder():Ref<BasicInfoBuilder>
	export function refOfBasicInfoBuilder(x:BasicInfoBuilder,v:Ref<BasicInfoBuilder>)
	export function unRefBasicInfoBuilder(v:Ref<BasicInfoBuilder>):BasicInfoBuilder
	export function emptyCostCenterVersion():CostCenterVersion
	export function emptyRefCostCenterVersion():Ref<CostCenterVersion>
	export function refOfCostCenterVersion(x:CostCenterVersion,v:Ref<CostCenterVersion>)
	export function unRefCostCenterVersion(v:Ref<CostCenterVersion>):CostCenterVersion
	export function emptyCreateCostCenterReqBuilder():CreateCostCenterReqBuilder
	export function emptyRefCreateCostCenterReqBuilder():Ref<CreateCostCenterReqBuilder>
	export function refOfCreateCostCenterReqBuilder(x:CreateCostCenterReqBuilder,v:Ref<CreateCostCenterReqBuilder>)
	export function unRefCreateCostCenterReqBuilder(v:Ref<CreateCostCenterReqBuilder>):CreateCostCenterReqBuilder
	export function emptyJobDataCostCenterBuilder():JobDataCostCenterBuilder
	export function emptyRefJobDataCostCenterBuilder():Ref<JobDataCostCenterBuilder>
	export function refOfJobDataCostCenterBuilder(x:JobDataCostCenterBuilder,v:Ref<JobDataCostCenterBuilder>)
	export function unRefJobDataCostCenterBuilder(v:Ref<JobDataCostCenterBuilder>):JobDataCostCenterBuilder
	export function emptyProfileSettingAddress():ProfileSettingAddress
	export function emptyRefProfileSettingAddress():Ref<ProfileSettingAddress>
	export function refOfProfileSettingAddress(x:ProfileSettingAddress,v:Ref<ProfileSettingAddress>)
	export function unRefProfileSettingAddress(v:Ref<ProfileSettingAddress>):ProfileSettingAddress
	export function emptySearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder():SearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder
	export function emptyRefSearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder():Ref<SearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder>
	export function refOfSearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder(x:SearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder,v:Ref<SearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder>)
	export function unRefSearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder(v:Ref<SearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder>):SearchBasicInfoCountryRegionSubdivisionPathReqBodyBuilder
	export function emptyWorkExperienceBuilder():WorkExperienceBuilder
	export function emptyRefWorkExperienceBuilder():Ref<WorkExperienceBuilder>
	export function refOfWorkExperienceBuilder(x:WorkExperienceBuilder,v:Ref<WorkExperienceBuilder>)
	export function unRefWorkExperienceBuilder(v:Ref<WorkExperienceBuilder>):WorkExperienceBuilder
	export function emptyBankAccountBuilder():BankAccountBuilder
	export function emptyRefBankAccountBuilder():Ref<BankAccountBuilder>
	export function refOfBankAccountBuilder(x:BankAccountBuilder,v:Ref<BankAccountBuilder>)
	export function unRefBankAccountBuilder(v:Ref<BankAccountBuilder>):BankAccountBuilder
	export function emptyEmergencyContact():EmergencyContact
	export function emptyRefEmergencyContact():Ref<EmergencyContact>
	export function refOfEmergencyContact(x:EmergencyContact,v:Ref<EmergencyContact>)
	export function unRefEmergencyContact(v:Ref<EmergencyContact>):EmergencyContact
	export function emptyFieldVariableSubVlaueForReview():FieldVariableSubVlaueForReview
	export function emptyRefFieldVariableSubVlaueForReview():Ref<FieldVariableSubVlaueForReview>
	export function refOfFieldVariableSubVlaueForReview(x:FieldVariableSubVlaueForReview,v:Ref<FieldVariableSubVlaueForReview>)
	export function unRefFieldVariableSubVlaueForReview(v:Ref<FieldVariableSubVlaueForReview>):FieldVariableSubVlaueForReview
	export function emptyPreHireProbationInfoBuilder():PreHireProbationInfoBuilder
	export function emptyRefPreHireProbationInfoBuilder():Ref<PreHireProbationInfoBuilder>
	export function refOfPreHireProbationInfoBuilder(x:PreHireProbationInfoBuilder,v:Ref<PreHireProbationInfoBuilder>)
	export function unRefPreHireProbationInfoBuilder(v:Ref<PreHireProbationInfoBuilder>):PreHireProbationInfoBuilder
	export function emptyProfileSettingCustomGroupBuilder():ProfileSettingCustomGroupBuilder
	export function emptyRefProfileSettingCustomGroupBuilder():Ref<ProfileSettingCustomGroupBuilder>
	export function refOfProfileSettingCustomGroupBuilder(x:ProfileSettingCustomGroupBuilder,v:Ref<ProfileSettingCustomGroupBuilder>)
	export function unRefProfileSettingCustomGroupBuilder(v:Ref<ProfileSettingCustomGroupBuilder>):ProfileSettingCustomGroupBuilder
	export function emptyBatchGetCompanyReqBody():BatchGetCompanyReqBody
	export function emptyRefBatchGetCompanyReqBody():Ref<BatchGetCompanyReqBody>
	export function refOfBatchGetCompanyReqBody(x:BatchGetCompanyReqBody,v:Ref<BatchGetCompanyReqBody>)
	export function unRefBatchGetCompanyReqBody(v:Ref<BatchGetCompanyReqBody>):BatchGetCompanyReqBody
	export function emptyEmployee():Employee
	export function emptyRefEmployee():Ref<Employee>
	export function refOfEmployee(x:Employee,v:Ref<Employee>)
	export function unRefEmployee(v:Ref<Employee>):Employee
	export function emptyGetByDepartmentBpPathReqBodyBuilder():GetByDepartmentBpPathReqBodyBuilder
	export function emptyRefGetByDepartmentBpPathReqBodyBuilder():Ref<GetByDepartmentBpPathReqBodyBuilder>
	export function refOfGetByDepartmentBpPathReqBodyBuilder(x:GetByDepartmentBpPathReqBodyBuilder,v:Ref<GetByDepartmentBpPathReqBodyBuilder>)
	export function unRefGetByDepartmentBpPathReqBodyBuilder(v:Ref<GetByDepartmentBpPathReqBodyBuilder>):GetByDepartmentBpPathReqBodyBuilder
	export function emptyDepartmentParentInfo():DepartmentParentInfo
	export function emptyRefDepartmentParentInfo():Ref<DepartmentParentInfo>
	export function refOfDepartmentParentInfo(x:DepartmentParentInfo,v:Ref<DepartmentParentInfo>)
	export function unRefDepartmentParentInfo(v:Ref<DepartmentParentInfo>):DepartmentParentInfo
	export function emptyP2ProcessNodeUpdatedV2Data():P2ProcessNodeUpdatedV2Data
	export function emptyRefP2ProcessNodeUpdatedV2Data():Ref<P2ProcessNodeUpdatedV2Data>
	export function refOfP2ProcessNodeUpdatedV2Data(x:P2ProcessNodeUpdatedV2Data,v:Ref<P2ProcessNodeUpdatedV2Data>)
	export function unRefP2ProcessNodeUpdatedV2Data(v:Ref<P2ProcessNodeUpdatedV2Data>):P2ProcessNodeUpdatedV2Data
	export function emptyBatchGetCompanyReqBodyBuilder():BatchGetCompanyReqBodyBuilder
	export function emptyRefBatchGetCompanyReqBodyBuilder():Ref<BatchGetCompanyReqBodyBuilder>
	export function refOfBatchGetCompanyReqBodyBuilder(x:BatchGetCompanyReqBodyBuilder,v:Ref<BatchGetCompanyReqBodyBuilder>)
	export function unRefBatchGetCompanyReqBodyBuilder(v:Ref<BatchGetCompanyReqBodyBuilder>):BatchGetCompanyReqBodyBuilder
	export function emptyCalculateParam():CalculateParam
	export function emptyRefCalculateParam():Ref<CalculateParam>
	export function refOfCalculateParam(x:CalculateParam,v:Ref<CalculateParam>)
	export function unRefCalculateParam(v:Ref<CalculateParam>):CalculateParam
	export function emptyCurrencyBuilder():CurrencyBuilder
	export function emptyRefCurrencyBuilder():Ref<CurrencyBuilder>
	export function refOfCurrencyBuilder(x:CurrencyBuilder,v:Ref<CurrencyBuilder>)
	export function unRefCurrencyBuilder(v:Ref<CurrencyBuilder>):CurrencyBuilder
	export function emptyProcessDoneItem():ProcessDoneItem
	export function emptyRefProcessDoneItem():Ref<ProcessDoneItem>
	export function refOfProcessDoneItem(x:ProcessDoneItem,v:Ref<ProcessDoneItem>)
	export function unRefProcessDoneItem(v:Ref<ProcessDoneItem>):ProcessDoneItem
	export function emptyQueryTimelineDepartmentReq():QueryTimelineDepartmentReq
	export function emptyRefQueryTimelineDepartmentReq():Ref<QueryTimelineDepartmentReq>
	export function refOfQueryTimelineDepartmentReq(x:QueryTimelineDepartmentReq,v:Ref<QueryTimelineDepartmentReq>)
	export function unRefQueryTimelineDepartmentReq(v:Ref<QueryTimelineDepartmentReq>):QueryTimelineDepartmentReq
	export function emptySearchJobChangeIterator():SearchJobChangeIterator
	export function emptyRefSearchJobChangeIterator():Ref<SearchJobChangeIterator>
	export function refOfSearchJobChangeIterator(x:SearchJobChangeIterator,v:Ref<SearchJobChangeIterator>)
	export function unRefSearchJobChangeIterator(v:Ref<SearchJobChangeIterator>):SearchJobChangeIterator
	export function emptyUserInfoBuilder():UserInfoBuilder
	export function emptyRefUserInfoBuilder():Ref<UserInfoBuilder>
	export function refOfUserInfoBuilder(x:UserInfoBuilder,v:Ref<UserInfoBuilder>)
	export function unRefUserInfoBuilder(v:Ref<UserInfoBuilder>):UserInfoBuilder
	export function emptyBatchGetCompanyRespData():BatchGetCompanyRespData
	export function emptyRefBatchGetCompanyRespData():Ref<BatchGetCompanyRespData>
	export function refOfBatchGetCompanyRespData(x:BatchGetCompanyRespData,v:Ref<BatchGetCompanyRespData>)
	export function unRefBatchGetCompanyRespData(v:Ref<BatchGetCompanyRespData>):BatchGetCompanyRespData
	export function emptyDeleteCostCenterReqBuilder():DeleteCostCenterReqBuilder
	export function emptyRefDeleteCostCenterReqBuilder():Ref<DeleteCostCenterReqBuilder>
	export function refOfDeleteCostCenterReqBuilder(x:DeleteCostCenterReqBuilder,v:Ref<DeleteCostCenterReqBuilder>)
	export function unRefDeleteCostCenterReqBuilder(v:Ref<DeleteCostCenterReqBuilder>):DeleteCostCenterReqBuilder
	export function emptyP2ProcessCcUpdatedV2Handler():P2ProcessCcUpdatedV2Handler
	export function emptyRefP2ProcessCcUpdatedV2Handler():Ref<P2ProcessCcUpdatedV2Handler>
	export function refOfP2ProcessCcUpdatedV2Handler(x:P2ProcessCcUpdatedV2Handler,v:Ref<P2ProcessCcUpdatedV2Handler>)
	export function unRefP2ProcessCcUpdatedV2Handler(v:Ref<P2ProcessCcUpdatedV2Handler>):P2ProcessCcUpdatedV2Handler
	export function emptyPatchCostCenterVersionReqBuilder():PatchCostCenterVersionReqBuilder
	export function emptyRefPatchCostCenterVersionReqBuilder():Ref<PatchCostCenterVersionReqBuilder>
	export function refOfPatchCostCenterVersionReqBuilder(x:PatchCostCenterVersionReqBuilder,v:Ref<PatchCostCenterVersionReqBuilder>)
	export function unRefPatchCostCenterVersionReqBuilder(v:Ref<PatchCostCenterVersionReqBuilder>):PatchCostCenterVersionReqBuilder
	export function emptyProfileSettingWorkExperienceBuilder():ProfileSettingWorkExperienceBuilder
	export function emptyRefProfileSettingWorkExperienceBuilder():Ref<ProfileSettingWorkExperienceBuilder>
	export function refOfProfileSettingWorkExperienceBuilder(x:ProfileSettingWorkExperienceBuilder,v:Ref<ProfileSettingWorkExperienceBuilder>)
	export function unRefProfileSettingWorkExperienceBuilder(v:Ref<ProfileSettingWorkExperienceBuilder>):ProfileSettingWorkExperienceBuilder
	export function emptySearchBasicInfoCurrencyReqBuilder():SearchBasicInfoCurrencyReqBuilder
	export function emptyRefSearchBasicInfoCurrencyReqBuilder():Ref<SearchBasicInfoCurrencyReqBuilder>
	export function refOfSearchBasicInfoCurrencyReqBuilder(x:SearchBasicInfoCurrencyReqBuilder,v:Ref<SearchBasicInfoCurrencyReqBuilder>)
	export function unRefSearchBasicInfoCurrencyReqBuilder(v:Ref<SearchBasicInfoCurrencyReqBuilder>):SearchBasicInfoCurrencyReqBuilder
	export function emptySearchDepartmentReq():SearchDepartmentReq
	export function emptyRefSearchDepartmentReq():Ref<SearchDepartmentReq>
	export function refOfSearchDepartmentReq(x:SearchDepartmentReq,v:Ref<SearchDepartmentReq>)
	export function unRefSearchDepartmentReq(v:Ref<SearchDepartmentReq>):SearchDepartmentReq
	export function emptyWorkExperienceInfoBuilder():WorkExperienceInfoBuilder
	export function emptyRefWorkExperienceInfoBuilder():Ref<WorkExperienceInfoBuilder>
	export function refOfWorkExperienceInfoBuilder(x:WorkExperienceInfoBuilder,v:Ref<WorkExperienceInfoBuilder>)
	export function unRefWorkExperienceInfoBuilder(v:Ref<WorkExperienceInfoBuilder>):WorkExperienceInfoBuilder
	export function emptyBatchGetEmployeesJobDataReqBody():BatchGetEmployeesJobDataReqBody
	export function emptyRefBatchGetEmployeesJobDataReqBody():Ref<BatchGetEmployeesJobDataReqBody>
	export function refOfBatchGetEmployeesJobDataReqBody(x:BatchGetEmployeesJobDataReqBody,v:Ref<BatchGetEmployeesJobDataReqBody>)
	export function unRefBatchGetEmployeesJobDataReqBody(v:Ref<BatchGetEmployeesJobDataReqBody>):BatchGetEmployeesJobDataReqBody
	export function emptyGetJobReqBuilder():GetJobReqBuilder
	export function emptyRefGetJobReqBuilder():Ref<GetJobReqBuilder>
	export function refOfGetJobReqBuilder(x:GetJobReqBuilder,v:Ref<GetJobReqBuilder>)
	export function unRefGetJobReqBuilder(v:Ref<GetJobReqBuilder>):GetJobReqBuilder
	export function emptyInternationalAssignment():InternationalAssignment
	export function emptyRefInternationalAssignment():Ref<InternationalAssignment>
	export function refOfInternationalAssignment(x:InternationalAssignment,v:Ref<InternationalAssignment>)
	export function unRefInternationalAssignment(v:Ref<InternationalAssignment>):InternationalAssignment
	export function emptyJobLevel():JobLevel
	export function emptyRefJobLevel():Ref<JobLevel>
	export function refOfJobLevel(x:JobLevel,v:Ref<JobLevel>)
	export function unRefJobLevel(v:Ref<JobLevel>):JobLevel
	export function emptyPatchCostCenterRespData():PatchCostCenterRespData
	export function emptyRefPatchCostCenterRespData():Ref<PatchCostCenterRespData>
	export function refOfPatchCostCenterRespData(x:PatchCostCenterRespData,v:Ref<PatchCostCenterRespData>)
	export function unRefPatchCostCenterRespData(v:Ref<PatchCostCenterRespData>):PatchCostCenterRespData
	export function emptyProfileSettingDependent():ProfileSettingDependent
	export function emptyRefProfileSettingDependent():Ref<ProfileSettingDependent>
	export function refOfProfileSettingDependent(x:ProfileSettingDependent,v:Ref<ProfileSettingDependent>)
	export function unRefProfileSettingDependent(v:Ref<ProfileSettingDependent>):ProfileSettingDependent
	export function emptyQueryTimelineDepartmentReqBodyBuilder():QueryTimelineDepartmentReqBodyBuilder
	export function emptyRefQueryTimelineDepartmentReqBodyBuilder():Ref<QueryTimelineDepartmentReqBodyBuilder>
	export function refOfQueryTimelineDepartmentReqBodyBuilder(x:QueryTimelineDepartmentReqBodyBuilder,v:Ref<QueryTimelineDepartmentReqBodyBuilder>)
	export function unRefQueryTimelineDepartmentReqBodyBuilder(v:Ref<QueryTimelineDepartmentReqBodyBuilder>):QueryTimelineDepartmentReqBodyBuilder
	export function emptyBatchGetEmployeesBpReqBodyBuilder():BatchGetEmployeesBpReqBodyBuilder
	export function emptyRefBatchGetEmployeesBpReqBodyBuilder():Ref<BatchGetEmployeesBpReqBodyBuilder>
	export function refOfBatchGetEmployeesBpReqBodyBuilder(x:BatchGetEmployeesBpReqBodyBuilder,v:Ref<BatchGetEmployeesBpReqBodyBuilder>)
	export function unRefBatchGetEmployeesBpReqBodyBuilder(v:Ref<BatchGetEmployeesBpReqBodyBuilder>):BatchGetEmployeesBpReqBodyBuilder
	export function emptyCustomOrg():CustomOrg
	export function emptyRefCustomOrg():Ref<CustomOrg>
	export function refOfCustomOrg(x:CustomOrg,v:Ref<CustomOrg>)
	export function unRefCustomOrg(v:Ref<CustomOrg>):CustomOrg
	export function emptyFormFieldVariableStringValueBuilder():FormFieldVariableStringValueBuilder
	export function emptyRefFormFieldVariableStringValueBuilder():Ref<FormFieldVariableStringValueBuilder>
	export function refOfFormFieldVariableStringValueBuilder(x:FormFieldVariableStringValueBuilder,v:Ref<FormFieldVariableStringValueBuilder>)
	export function unRefFormFieldVariableStringValueBuilder(v:Ref<FormFieldVariableStringValueBuilder>):FormFieldVariableStringValueBuilder
	export function emptyProfileSettingHukouBuilder():ProfileSettingHukouBuilder
	export function emptyRefProfileSettingHukouBuilder():Ref<ProfileSettingHukouBuilder>
	export function refOfProfileSettingHukouBuilder(x:ProfileSettingHukouBuilder,v:Ref<ProfileSettingHukouBuilder>)
	export function unRefProfileSettingHukouBuilder(v:Ref<ProfileSettingHukouBuilder>):ProfileSettingHukouBuilder
	export function emptyAbnormalReasonElementBuilder():AbnormalReasonElementBuilder
	export function emptyRefAbnormalReasonElementBuilder():Ref<AbnormalReasonElementBuilder>
	export function refOfAbnormalReasonElementBuilder(x:AbnormalReasonElementBuilder,v:Ref<AbnormalReasonElementBuilder>)
	export function unRefAbnormalReasonElementBuilder(v:Ref<AbnormalReasonElementBuilder>):AbnormalReasonElementBuilder
	export function emptyContractBuilder():ContractBuilder
	export function emptyRefContractBuilder():Ref<ContractBuilder>
	export function refOfContractBuilder(x:ContractBuilder,v:Ref<ContractBuilder>)
	export function unRefContractBuilder(v:Ref<ContractBuilder>):ContractBuilder
	export function emptyDeleteProbationAssessmentResp():DeleteProbationAssessmentResp
	export function emptyRefDeleteProbationAssessmentResp():Ref<DeleteProbationAssessmentResp>
	export function refOfDeleteProbationAssessmentResp(x:DeleteProbationAssessmentResp,v:Ref<DeleteProbationAssessmentResp>)
	export function unRefDeleteProbationAssessmentResp(v:Ref<DeleteProbationAssessmentResp>):DeleteProbationAssessmentResp
	export function emptySearchBasicInfoCurrencyReqBodyBuilder():SearchBasicInfoCurrencyReqBodyBuilder
	export function emptyRefSearchBasicInfoCurrencyReqBodyBuilder():Ref<SearchBasicInfoCurrencyReqBodyBuilder>
	export function refOfSearchBasicInfoCurrencyReqBodyBuilder(x:SearchBasicInfoCurrencyReqBodyBuilder,v:Ref<SearchBasicInfoCurrencyReqBodyBuilder>)
	export function unRefSearchBasicInfoCurrencyReqBodyBuilder(v:Ref<SearchBasicInfoCurrencyReqBodyBuilder>):SearchBasicInfoCurrencyReqBodyBuilder
	export function emptyJobGradeBuilder():JobGradeBuilder
	export function emptyRefJobGradeBuilder():Ref<JobGradeBuilder>
	export function refOfJobGradeBuilder(x:JobGradeBuilder,v:Ref<JobGradeBuilder>)
	export function unRefJobGradeBuilder(v:Ref<JobGradeBuilder>):JobGradeBuilder
	export function emptyLocationV2Builder():LocationV2Builder
	export function emptyRefLocationV2Builder():Ref<LocationV2Builder>
	export function refOfLocationV2Builder(x:LocationV2Builder,v:Ref<LocationV2Builder>)
	export function unRefLocationV2Builder(v:Ref<LocationV2Builder>):LocationV2Builder
	export function emptyQrCodeValue():QrCodeValue
	export function emptyRefQrCodeValue():Ref<QrCodeValue>
	export function refOfQrCodeValue(x:QrCodeValue,v:Ref<QrCodeValue>)
	export function unRefQrCodeValue(v:Ref<QrCodeValue>):QrCodeValue
	export function emptySearchBasicInfoBankBranchResp():SearchBasicInfoBankBranchResp
	export function emptyRefSearchBasicInfoBankBranchResp():Ref<SearchBasicInfoBankBranchResp>
	export function refOfSearchBasicInfoBankBranchResp(x:SearchBasicInfoBankBranchResp,v:Ref<SearchBasicInfoBankBranchResp>)
	export function unRefSearchBasicInfoBankBranchResp(v:Ref<SearchBasicInfoBankBranchResp>):SearchBasicInfoBankBranchResp
	export function emptyOfferInfoBuilder():OfferInfoBuilder
	export function emptyRefOfferInfoBuilder():Ref<OfferInfoBuilder>
	export function refOfOfferInfoBuilder(x:OfferInfoBuilder,v:Ref<OfferInfoBuilder>)
	export function unRefOfferInfoBuilder(v:Ref<OfferInfoBuilder>):OfferInfoBuilder
	export function emptyProfileSettingEmpBasicInfoForUpdateBuilder():ProfileSettingEmpBasicInfoForUpdateBuilder
	export function emptyRefProfileSettingEmpBasicInfoForUpdateBuilder():Ref<ProfileSettingEmpBasicInfoForUpdateBuilder>
	export function refOfProfileSettingEmpBasicInfoForUpdateBuilder(x:ProfileSettingEmpBasicInfoForUpdateBuilder,v:Ref<ProfileSettingEmpBasicInfoForUpdateBuilder>)
	export function unRefProfileSettingEmpBasicInfoForUpdateBuilder(v:Ref<ProfileSettingEmpBasicInfoForUpdateBuilder>):ProfileSettingEmpBasicInfoForUpdateBuilder
	export function emptyQrCodeDimensionValueBuilder():QrCodeDimensionValueBuilder
	export function emptyRefQrCodeDimensionValueBuilder():Ref<QrCodeDimensionValueBuilder>
	export function refOfQrCodeDimensionValueBuilder(x:QrCodeDimensionValueBuilder,v:Ref<QrCodeDimensionValueBuilder>)
	export function unRefQrCodeDimensionValueBuilder(v:Ref<QrCodeDimensionValueBuilder>):QrCodeDimensionValueBuilder
	export function emptySearchJobChangeRespData():SearchJobChangeRespData
	export function emptyRefSearchJobChangeRespData():Ref<SearchJobChangeRespData>
	export function refOfSearchJobChangeRespData(x:SearchJobChangeRespData,v:Ref<SearchJobChangeRespData>)
	export function unRefSearchJobChangeRespData(v:Ref<SearchJobChangeRespData>):SearchJobChangeRespData
	export function emptyBatchGetJobFamilyReqBuilder():BatchGetJobFamilyReqBuilder
	export function emptyRefBatchGetJobFamilyReqBuilder():Ref<BatchGetJobFamilyReqBuilder>
	export function refOfBatchGetJobFamilyReqBuilder(x:BatchGetJobFamilyReqBuilder,v:Ref<BatchGetJobFamilyReqBuilder>)
	export function unRefBatchGetJobFamilyReqBuilder(v:Ref<BatchGetJobFamilyReqBuilder>):BatchGetJobFamilyReqBuilder
	export function emptyDimensionBuilder():DimensionBuilder
	export function emptyRefDimensionBuilder():Ref<DimensionBuilder>
	export function refOfDimensionBuilder(x:DimensionBuilder,v:Ref<DimensionBuilder>)
	export function unRefDimensionBuilder(v:Ref<DimensionBuilder>):DimensionBuilder
	export function emptyLeaveRequestDetailBuilder():LeaveRequestDetailBuilder
	export function emptyRefLeaveRequestDetailBuilder():Ref<LeaveRequestDetailBuilder>
	export function refOfLeaveRequestDetailBuilder(x:LeaveRequestDetailBuilder,v:Ref<LeaveRequestDetailBuilder>)
	export function unRefLeaveRequestDetailBuilder(v:Ref<LeaveRequestDetailBuilder>):LeaveRequestDetailBuilder
	export function emptyGetProcessFormVariableDataReqBuilder():GetProcessFormVariableDataReqBuilder
	export function emptyRefGetProcessFormVariableDataReqBuilder():Ref<GetProcessFormVariableDataReqBuilder>
	export function refOfGetProcessFormVariableDataReqBuilder(x:GetProcessFormVariableDataReqBuilder,v:Ref<GetProcessFormVariableDataReqBuilder>)
	export function unRefGetProcessFormVariableDataReqBuilder(v:Ref<GetProcessFormVariableDataReqBuilder>):GetProcessFormVariableDataReqBuilder
	export function emptyAbnormalReasonI18nElement():AbnormalReasonI18nElement
	export function emptyRefAbnormalReasonI18nElement():Ref<AbnormalReasonI18nElement>
	export function refOfAbnormalReasonI18nElement(x:AbnormalReasonI18nElement,v:Ref<AbnormalReasonI18nElement>)
	export function unRefAbnormalReasonI18nElement(v:Ref<AbnormalReasonI18nElement>):AbnormalReasonI18nElement
	export function emptyDeletePreHireResp():DeletePreHireResp
	export function emptyRefDeletePreHireResp():Ref<DeletePreHireResp>
	export function refOfDeletePreHireResp(x:DeletePreHireResp,v:Ref<DeletePreHireResp>)
	export function unRefDeletePreHireResp(v:Ref<DeletePreHireResp>):DeletePreHireResp
	export function emptyDepartmentHrbp():DepartmentHrbp
	export function emptyRefDepartmentHrbp():Ref<DepartmentHrbp>
	export function refOfDepartmentHrbp(x:DepartmentHrbp,v:Ref<DepartmentHrbp>)
	export function unRefDepartmentHrbp(v:Ref<DepartmentHrbp>):DepartmentHrbp
	export function emptyPatchCostCenterPathReqBodyBuilder():PatchCostCenterPathReqBodyBuilder
	export function emptyRefPatchCostCenterPathReqBodyBuilder():Ref<PatchCostCenterPathReqBodyBuilder>
	export function refOfPatchCostCenterPathReqBodyBuilder(x:PatchCostCenterPathReqBodyBuilder,v:Ref<PatchCostCenterPathReqBodyBuilder>)
	export function unRefPatchCostCenterPathReqBodyBuilder(v:Ref<PatchCostCenterPathReqBodyBuilder>):PatchCostCenterPathReqBodyBuilder
	export function emptySearchBasicInfoCountryRegionSubdivisionIterator():SearchBasicInfoCountryRegionSubdivisionIterator
	export function emptyRefSearchBasicInfoCountryRegionSubdivisionIterator():Ref<SearchBasicInfoCountryRegionSubdivisionIterator>
	export function refOfSearchBasicInfoCountryRegionSubdivisionIterator(x:SearchBasicInfoCountryRegionSubdivisionIterator,v:Ref<SearchBasicInfoCountryRegionSubdivisionIterator>)
	export function unRefSearchBasicInfoCountryRegionSubdivisionIterator(v:Ref<SearchBasicInfoCountryRegionSubdivisionIterator>):SearchBasicInfoCountryRegionSubdivisionIterator
	export function emptySearchDepartmentPathReqBodyBuilder():SearchDepartmentPathReqBodyBuilder
	export function emptyRefSearchDepartmentPathReqBodyBuilder():Ref<SearchDepartmentPathReqBodyBuilder>
	export function refOfSearchDepartmentPathReqBodyBuilder(x:SearchDepartmentPathReqBodyBuilder,v:Ref<SearchDepartmentPathReqBodyBuilder>)
	export function unRefSearchDepartmentPathReqBodyBuilder(v:Ref<SearchDepartmentPathReqBodyBuilder>):SearchDepartmentPathReqBodyBuilder
	export function emptyQrCodeDimensionBuilder():QrCodeDimensionBuilder
	export function emptyRefQrCodeDimensionBuilder():Ref<QrCodeDimensionBuilder>
	export function refOfQrCodeDimensionBuilder(x:QrCodeDimensionBuilder,v:Ref<QrCodeDimensionBuilder>)
	export function unRefQrCodeDimensionBuilder(v:Ref<QrCodeDimensionBuilder>):QrCodeDimensionBuilder
	export function emptyBatchGetEmployeesJobDataReqBuilder():BatchGetEmployeesJobDataReqBuilder
	export function emptyRefBatchGetEmployeesJobDataReqBuilder():Ref<BatchGetEmployeesJobDataReqBuilder>
	export function refOfBatchGetEmployeesJobDataReqBuilder(x:BatchGetEmployeesJobDataReqBuilder,v:Ref<BatchGetEmployeesJobDataReqBuilder>)
	export function unRefBatchGetEmployeesJobDataReqBuilder(v:Ref<BatchGetEmployeesJobDataReqBuilder>):BatchGetEmployeesJobDataReqBuilder
	export function emptyDeleteCostCenterResp():DeleteCostCenterResp
	export function emptyRefDeleteCostCenterResp():Ref<DeleteCostCenterResp>
	export function refOfDeleteCostCenterResp(x:DeleteCostCenterResp,v:Ref<DeleteCostCenterResp>)
	export function unRefDeleteCostCenterResp(v:Ref<DeleteCostCenterResp>):DeleteCostCenterResp
	export function emptyI18nV2():I18nV2
	export function emptyRefI18nV2():Ref<I18nV2>
	export function refOfI18nV2(x:I18nV2,v:Ref<I18nV2>)
	export function unRefI18nV2(v:Ref<I18nV2>):I18nV2
	export function emptyOrgdraftDepartmentIdBuilder():OrgdraftDepartmentIdBuilder
	export function emptyRefOrgdraftDepartmentIdBuilder():Ref<OrgdraftDepartmentIdBuilder>
	export function refOfOrgdraftDepartmentIdBuilder(x:OrgdraftDepartmentIdBuilder,v:Ref<OrgdraftDepartmentIdBuilder>)
	export function unRefOrgdraftDepartmentIdBuilder(v:Ref<OrgdraftDepartmentIdBuilder>):OrgdraftDepartmentIdBuilder
	export function emptySearchPreHireReq():SearchPreHireReq
	export function emptyRefSearchPreHireReq():Ref<SearchPreHireReq>
	export function refOfSearchPreHireReq(x:SearchPreHireReq,v:Ref<SearchPreHireReq>)
	export function unRefSearchPreHireReq(v:Ref<SearchPreHireReq>):SearchPreHireReq
	export function emptySearchProbationIterator():SearchProbationIterator
	export function emptyRefSearchProbationIterator():Ref<SearchProbationIterator>
	export function refOfSearchProbationIterator(x:SearchProbationIterator,v:Ref<SearchProbationIterator>)
	export function unRefSearchProbationIterator(v:Ref<SearchProbationIterator>):SearchProbationIterator
	export function emptyCurrency():Currency
	export function emptyRefCurrency():Ref<Currency>
	export function refOfCurrency(x:Currency,v:Ref<Currency>)
	export function unRefCurrency(v:Ref<Currency>):Currency
	export function emptyDimensionInfoDataBuilder():DimensionInfoDataBuilder
	export function emptyRefDimensionInfoDataBuilder():Ref<DimensionInfoDataBuilder>
	export function refOfDimensionInfoDataBuilder(x:DimensionInfoDataBuilder,v:Ref<DimensionInfoDataBuilder>)
	export function unRefDimensionInfoDataBuilder(v:Ref<DimensionInfoDataBuilder>):DimensionInfoDataBuilder
	export function emptyEmployeeInternationalAssignmentBuilder():EmployeeInternationalAssignmentBuilder
	export function emptyRefEmployeeInternationalAssignmentBuilder():Ref<EmployeeInternationalAssignmentBuilder>
	export function refOfEmployeeInternationalAssignmentBuilder(x:EmployeeInternationalAssignmentBuilder,v:Ref<EmployeeInternationalAssignmentBuilder>)
	export function unRefEmployeeInternationalAssignmentBuilder(v:Ref<EmployeeInternationalAssignmentBuilder>):EmployeeInternationalAssignmentBuilder
	export function emptyCreateCostCenterVersionResp():CreateCostCenterVersionResp
	export function emptyRefCreateCostCenterVersionResp():Ref<CreateCostCenterVersionResp>
	export function refOfCreateCostCenterVersionResp(x:CreateCostCenterVersionResp,v:Ref<CreateCostCenterVersionResp>)
	export function unRefCreateCostCenterVersionResp(v:Ref<CreateCostCenterVersionResp>):CreateCostCenterVersionResp
	export function emptyJobFamily():JobFamily
	export function emptyRefJobFamily():Ref<JobFamily>
	export function refOfJobFamily(x:JobFamily,v:Ref<JobFamily>)
	export function unRefJobFamily(v:Ref<JobFamily>):JobFamily
	export function emptySearchJobChangeReq():SearchJobChangeReq
	export function emptyRefSearchJobChangeReq():Ref<SearchJobChangeReq>
	export function refOfSearchJobChangeReq(x:SearchJobChangeReq,v:Ref<SearchJobChangeReq>)
	export function unRefSearchJobChangeReq(v:Ref<SearchJobChangeReq>):SearchJobChangeReq
	export function emptyCustomFieldData():CustomFieldData
	export function emptyRefCustomFieldData():Ref<CustomFieldData>
	export function refOfCustomFieldData(x:CustomFieldData,v:Ref<CustomFieldData>)
	export function unRefCustomFieldData(v:Ref<CustomFieldData>):CustomFieldData
	export function emptyGetByDepartmentBpRespData():GetByDepartmentBpRespData
	export function emptyRefGetByDepartmentBpRespData():Ref<GetByDepartmentBpRespData>
	export function refOfGetByDepartmentBpRespData(x:GetByDepartmentBpRespData,v:Ref<GetByDepartmentBpRespData>)
	export function unRefGetByDepartmentBpRespData(v:Ref<GetByDepartmentBpRespData>):GetByDepartmentBpRespData
	export function emptyP2ProcessApproverUpdatedV2Data():P2ProcessApproverUpdatedV2Data
	export function emptyRefP2ProcessApproverUpdatedV2Data():Ref<P2ProcessApproverUpdatedV2Data>
	export function refOfP2ProcessApproverUpdatedV2Data(x:P2ProcessApproverUpdatedV2Data,v:Ref<P2ProcessApproverUpdatedV2Data>)
	export function unRefP2ProcessApproverUpdatedV2Data(v:Ref<P2ProcessApproverUpdatedV2Data>):P2ProcessApproverUpdatedV2Data
	export function emptyListProcessResp():ListProcessResp
	export function emptyRefListProcessResp():Ref<ListProcessResp>
	export function refOfListProcessResp(x:ListProcessResp,v:Ref<ListProcessResp>)
	export function unRefListProcessResp(v:Ref<ListProcessResp>):ListProcessResp
	export function emptyListProcessRespData():ListProcessRespData
	export function emptyRefListProcessRespData():Ref<ListProcessRespData>
	export function refOfListProcessRespData(x:ListProcessRespData,v:Ref<ListProcessRespData>)
	export function unRefListProcessRespData(v:Ref<ListProcessRespData>):ListProcessRespData
	export function emptyProfileSettingI18nBuilder():ProfileSettingI18nBuilder
	export function emptyRefProfileSettingI18nBuilder():Ref<ProfileSettingI18nBuilder>
	export function refOfProfileSettingI18nBuilder(x:ProfileSettingI18nBuilder,v:Ref<ProfileSettingI18nBuilder>)
	export function unRefProfileSettingI18nBuilder(v:Ref<ProfileSettingI18nBuilder>):ProfileSettingI18nBuilder
	export function emptySearchBasicInfoCountryRegionReqBody():SearchBasicInfoCountryRegionReqBody
	export function emptyRefSearchBasicInfoCountryRegionReqBody():Ref<SearchBasicInfoCountryRegionReqBody>
	export function refOfSearchBasicInfoCountryRegionReqBody(x:SearchBasicInfoCountryRegionReqBody,v:Ref<SearchBasicInfoCountryRegionReqBody>)
	export function unRefSearchBasicInfoCountryRegionReqBody(v:Ref<SearchBasicInfoCountryRegionReqBody>):SearchBasicInfoCountryRegionReqBody
	export function emptyBatchGetEmployeeResp():BatchGetEmployeeResp
	export function emptyRefBatchGetEmployeeResp():Ref<BatchGetEmployeeResp>
	export function refOfBatchGetEmployeeResp(x:BatchGetEmployeeResp,v:Ref<BatchGetEmployeeResp>)
	export function unRefBatchGetEmployeeResp(v:Ref<BatchGetEmployeeResp>):BatchGetEmployeeResp
	export function emptyBatchGetLocationResp():BatchGetLocationResp
	export function emptyRefBatchGetLocationResp():Ref<BatchGetLocationResp>
	export function refOfBatchGetLocationResp(x:BatchGetLocationResp,v:Ref<BatchGetLocationResp>)
	export function unRefBatchGetLocationResp(v:Ref<BatchGetLocationResp>):BatchGetLocationResp
	export function emptyEnableDisableAssessmentProbationResp():EnableDisableAssessmentProbationResp
	export function emptyRefEnableDisableAssessmentProbationResp():Ref<EnableDisableAssessmentProbationResp>
	export function refOfEnableDisableAssessmentProbationResp(x:EnableDisableAssessmentProbationResp,v:Ref<EnableDisableAssessmentProbationResp>)
	export function unRefEnableDisableAssessmentProbationResp(v:Ref<EnableDisableAssessmentProbationResp>):EnableDisableAssessmentProbationResp
	export function emptySearchBasicInfoCityPathReqBodyBuilder():SearchBasicInfoCityPathReqBodyBuilder
	export function emptyRefSearchBasicInfoCityPathReqBodyBuilder():Ref<SearchBasicInfoCityPathReqBodyBuilder>
	export function refOfSearchBasicInfoCityPathReqBodyBuilder(x:SearchBasicInfoCityPathReqBodyBuilder,v:Ref<SearchBasicInfoCityPathReqBodyBuilder>)
	export function unRefSearchBasicInfoCityPathReqBodyBuilder(v:Ref<SearchBasicInfoCityPathReqBodyBuilder>):SearchBasicInfoCityPathReqBodyBuilder
	export function emptySearchJobChangeReqBodyBuilder():SearchJobChangeReqBodyBuilder
	export function emptyRefSearchJobChangeReqBodyBuilder():Ref<SearchJobChangeReqBodyBuilder>
	export function refOfSearchJobChangeReqBodyBuilder(x:SearchJobChangeReqBodyBuilder,v:Ref<SearchJobChangeReqBodyBuilder>)
	export function unRefSearchJobChangeReqBodyBuilder(v:Ref<SearchJobChangeReqBodyBuilder>):SearchJobChangeReqBodyBuilder
	export function emptySearchProbationReq():SearchProbationReq
	export function emptyRefSearchProbationReq():Ref<SearchProbationReq>
	export function refOfSearchProbationReq(x:SearchProbationReq,v:Ref<SearchProbationReq>)
	export function unRefSearchProbationReq(v:Ref<SearchProbationReq>):SearchProbationReq
	export function emptyCostCenterVersionBuilder():CostCenterVersionBuilder
	export function emptyRefCostCenterVersionBuilder():Ref<CostCenterVersionBuilder>
	export function refOfCostCenterVersionBuilder(x:CostCenterVersionBuilder,v:Ref<CostCenterVersionBuilder>)
	export function unRefCostCenterVersionBuilder(v:Ref<CostCenterVersionBuilder>):CostCenterVersionBuilder
	export function emptyFormFieldVariableNumberValue():FormFieldVariableNumberValue
	export function emptyRefFormFieldVariableNumberValue():Ref<FormFieldVariableNumberValue>
	export function refOfFormFieldVariableNumberValue(x:FormFieldVariableNumberValue,v:Ref<FormFieldVariableNumberValue>)
	export function unRefFormFieldVariableNumberValue(v:Ref<FormFieldVariableNumberValue>):FormFieldVariableNumberValue
	export function emptyProfileSettingPersonalRecord():ProfileSettingPersonalRecord
	export function emptyRefProfileSettingPersonalRecord():Ref<ProfileSettingPersonalRecord>
	export function refOfProfileSettingPersonalRecord(x:ProfileSettingPersonalRecord,v:Ref<ProfileSettingPersonalRecord>)
	export function unRefProfileSettingPersonalRecord(v:Ref<ProfileSettingPersonalRecord>):ProfileSettingPersonalRecord
	export function emptyEnumBuilder():EnumBuilder
	export function emptyRefEnumBuilder():Ref<EnumBuilder>
	export function refOfEnumBuilder(x:EnumBuilder,v:Ref<EnumBuilder>)
	export function unRefEnumBuilder(v:Ref<EnumBuilder>):EnumBuilder
	export function emptyFieldVariableSubVlaue():FieldVariableSubVlaue
	export function emptyRefFieldVariableSubVlaue():Ref<FieldVariableSubVlaue>
	export function refOfFieldVariableSubVlaue(x:FieldVariableSubVlaue,v:Ref<FieldVariableSubVlaue>)
	export function unRefFieldVariableSubVlaue(v:Ref<FieldVariableSubVlaue>):FieldVariableSubVlaue
	export function emptyInternationalAssignmentV2ForCreate():InternationalAssignmentV2ForCreate
	export function emptyRefInternationalAssignmentV2ForCreate():Ref<InternationalAssignmentV2ForCreate>
	export function refOfInternationalAssignmentV2ForCreate(x:InternationalAssignmentV2ForCreate,v:Ref<InternationalAssignmentV2ForCreate>)
	export function unRefInternationalAssignmentV2ForCreate(v:Ref<InternationalAssignmentV2ForCreate>):InternationalAssignmentV2ForCreate
	export function emptyP2ProcessCcUpdatedV2Data():P2ProcessCcUpdatedV2Data
	export function emptyRefP2ProcessCcUpdatedV2Data():Ref<P2ProcessCcUpdatedV2Data>
	export function refOfP2ProcessCcUpdatedV2Data(x:P2ProcessCcUpdatedV2Data,v:Ref<P2ProcessCcUpdatedV2Data>)
	export function unRefP2ProcessCcUpdatedV2Data(v:Ref<P2ProcessCcUpdatedV2Data>):P2ProcessCcUpdatedV2Data
	export function emptyQrCodeBuilder():QrCodeBuilder
	export function emptyRefQrCodeBuilder():Ref<QrCodeBuilder>
	export function refOfQrCodeBuilder(x:QrCodeBuilder,v:Ref<QrCodeBuilder>)
	export function unRefQrCodeBuilder(v:Ref<QrCodeBuilder>):QrCodeBuilder
	export function emptyAbnormalReasonElement():AbnormalReasonElement
	export function emptyRefAbnormalReasonElement():Ref<AbnormalReasonElement>
	export function refOfAbnormalReasonElement(x:AbnormalReasonElement,v:Ref<AbnormalReasonElement>)
	export function unRefAbnormalReasonElement(v:Ref<AbnormalReasonElement>):AbnormalReasonElement
	export function emptyBatchGetEmployeeRespData():BatchGetEmployeeRespData
	export function emptyRefBatchGetEmployeeRespData():Ref<BatchGetEmployeeRespData>
	export function refOfBatchGetEmployeeRespData(x:BatchGetEmployeeRespData,v:Ref<BatchGetEmployeeRespData>)
	export function unRefBatchGetEmployeeRespData(v:Ref<BatchGetEmployeeRespData>):BatchGetEmployeeRespData
	export function emptyCompany():Company
	export function emptyRefCompany():Ref<Company>
	export function refOfCompany(x:Company,v:Ref<Company>)
	export function unRefCompany(v:Ref<Company>):Company
	export function emptyQueryEmployeesJobDataResp():QueryEmployeesJobDataResp
	export function emptyRefQueryEmployeesJobDataResp():Ref<QueryEmployeesJobDataResp>
	export function refOfQueryEmployeesJobDataResp(x:QueryEmployeesJobDataResp,v:Ref<QueryEmployeesJobDataResp>)
	export function unRefQueryEmployeesJobDataResp(v:Ref<QueryEmployeesJobDataResp>):QueryEmployeesJobDataResp
	export function emptySearchBasicInfoCityReqBuilder():SearchBasicInfoCityReqBuilder
	export function emptyRefSearchBasicInfoCityReqBuilder():Ref<SearchBasicInfoCityReqBuilder>
	export function refOfSearchBasicInfoCityReqBuilder(x:SearchBasicInfoCityReqBuilder,v:Ref<SearchBasicInfoCityReqBuilder>)
	export function unRefSearchBasicInfoCityReqBuilder(v:Ref<SearchBasicInfoCityReqBuilder>):SearchBasicInfoCityReqBuilder
	export function emptyFormFieldVariableI18nValue():FormFieldVariableI18nValue
	export function emptyRefFormFieldVariableI18nValue():Ref<FormFieldVariableI18nValue>
	export function refOfFormFieldVariableI18nValue(x:FormFieldVariableI18nValue,v:Ref<FormFieldVariableI18nValue>)
	export function unRefFormFieldVariableI18nValue(v:Ref<FormFieldVariableI18nValue>):FormFieldVariableI18nValue
	export function emptyGetJobReq():GetJobReq
	export function emptyRefGetJobReq():Ref<GetJobReq>
	export function refOfGetJobReq(x:GetJobReq,v:Ref<GetJobReq>)
	export function unRefGetJobReq(v:Ref<GetJobReq>):GetJobReq
	export function emptyLeaveAccrualRecord():LeaveAccrualRecord
	export function emptyRefLeaveAccrualRecord():Ref<LeaveAccrualRecord>
	export function refOfLeaveAccrualRecord(x:LeaveAccrualRecord,v:Ref<LeaveAccrualRecord>)
	export function unRefLeaveAccrualRecord(v:Ref<LeaveAccrualRecord>):LeaveAccrualRecord
	export function emptyP2ProcessUpdatedV2Data():P2ProcessUpdatedV2Data
	export function emptyRefP2ProcessUpdatedV2Data():Ref<P2ProcessUpdatedV2Data>
	export function refOfP2ProcessUpdatedV2Data(x:P2ProcessUpdatedV2Data,v:Ref<P2ProcessUpdatedV2Data>)
	export function unRefP2ProcessUpdatedV2Data(v:Ref<P2ProcessUpdatedV2Data>):P2ProcessUpdatedV2Data
	export function emptyPatchCostCenterVersionReqBodyBuilder():PatchCostCenterVersionReqBodyBuilder
	export function emptyRefPatchCostCenterVersionReqBodyBuilder():Ref<PatchCostCenterVersionReqBodyBuilder>
	export function refOfPatchCostCenterVersionReqBodyBuilder(x:PatchCostCenterVersionReqBodyBuilder,v:Ref<PatchCostCenterVersionReqBodyBuilder>)
	export function unRefPatchCostCenterVersionReqBodyBuilder(v:Ref<PatchCostCenterVersionReqBodyBuilder>):PatchCostCenterVersionReqBodyBuilder
	export function emptyEmploymentBpBuilder():EmploymentBpBuilder
	export function emptyRefEmploymentBpBuilder():Ref<EmploymentBpBuilder>
	export function refOfEmploymentBpBuilder(x:EmploymentBpBuilder,v:Ref<EmploymentBpBuilder>)
	export function unRefEmploymentBpBuilder(v:Ref<EmploymentBpBuilder>):EmploymentBpBuilder
	export function emptyFieldVariableValueToForReviewBuilder():FieldVariableValueToForReviewBuilder
	export function emptyRefFieldVariableValueToForReviewBuilder():Ref<FieldVariableValueToForReviewBuilder>
	export function refOfFieldVariableValueToForReviewBuilder(x:FieldVariableValueToForReviewBuilder,v:Ref<FieldVariableValueToForReviewBuilder>)
	export function unRefFieldVariableValueToForReviewBuilder(v:Ref<FieldVariableValueToForReviewBuilder>):FieldVariableValueToForReviewBuilder
	export function emptyFileBuilder():FileBuilder
	export function emptyRefFileBuilder():Ref<FileBuilder>
	export function refOfFileBuilder(x:FileBuilder,v:Ref<FileBuilder>)
	export function unRefFileBuilder(v:Ref<FileBuilder>):FileBuilder
	export function emptyDistrict():District
	export function emptyRefDistrict():Ref<District>
	export function refOfDistrict(x:District,v:Ref<District>)
	export function unRefDistrict(v:Ref<District>):District
	export function emptyProcessDoneItemBuilder():ProcessDoneItemBuilder
	export function emptyRefProcessDoneItemBuilder():Ref<ProcessDoneItemBuilder>
	export function refOfProcessDoneItemBuilder(x:ProcessDoneItemBuilder,v:Ref<ProcessDoneItemBuilder>)
	export function unRefProcessDoneItemBuilder(v:Ref<ProcessDoneItemBuilder>):ProcessDoneItemBuilder
	export function emptyQueryTimelineDepartmentRespData():QueryTimelineDepartmentRespData
	export function emptyRefQueryTimelineDepartmentRespData():Ref<QueryTimelineDepartmentRespData>
	export function refOfQueryTimelineDepartmentRespData(x:QueryTimelineDepartmentRespData,v:Ref<QueryTimelineDepartmentRespData>)
	export function unRefQueryTimelineDepartmentRespData(v:Ref<QueryTimelineDepartmentRespData>):QueryTimelineDepartmentRespData
	export function emptySearchBasicInfoCityRespData():SearchBasicInfoCityRespData
	export function emptyRefSearchBasicInfoCityRespData():Ref<SearchBasicInfoCityRespData>
	export function refOfSearchBasicInfoCityRespData(x:SearchBasicInfoCityRespData,v:Ref<SearchBasicInfoCityRespData>)
	export function unRefSearchBasicInfoCityRespData(v:Ref<SearchBasicInfoCityRespData>):SearchBasicInfoCityRespData
	export function emptyBank():Bank
	export function emptyRefBank():Ref<Bank>
	export function refOfBank(x:Bank,v:Ref<Bank>)
	export function unRefBank(v:Ref<Bank>):Bank
	export function emptyBatchGetLocationReqBody():BatchGetLocationReqBody
	export function emptyRefBatchGetLocationReqBody():Ref<BatchGetLocationReqBody>
	export function refOfBatchGetLocationReqBody(x:BatchGetLocationReqBody,v:Ref<BatchGetLocationReqBody>)
	export function unRefBatchGetLocationReqBody(v:Ref<BatchGetLocationReqBody>):BatchGetLocationReqBody
	export function emptyDepartmentTimeline():DepartmentTimeline
	export function emptyRefDepartmentTimeline():Ref<DepartmentTimeline>
	export function refOfDepartmentTimeline(x:DepartmentTimeline,v:Ref<DepartmentTimeline>)
	export function unRefDepartmentTimeline(v:Ref<DepartmentTimeline>):DepartmentTimeline
	export function emptyDimensionInfo():DimensionInfo
	export function emptyRefDimensionInfo():Ref<DimensionInfo>
	export function refOfDimensionInfo(x:DimensionInfo,v:Ref<DimensionInfo>)
	export function unRefDimensionInfo(v:Ref<DimensionInfo>):DimensionInfo
	export function emptyEmploymentLeaveBalance():EmploymentLeaveBalance
	export function emptyRefEmploymentLeaveBalance():Ref<EmploymentLeaveBalance>
	export function refOfEmploymentLeaveBalance(x:EmploymentLeaveBalance,v:Ref<EmploymentLeaveBalance>)
	export function unRefEmploymentLeaveBalance(v:Ref<EmploymentLeaveBalance>):EmploymentLeaveBalance
	export function emptyEnableDisableAssessmentProbationPathReqBodyBuilder():EnableDisableAssessmentProbationPathReqBodyBuilder
	export function emptyRefEnableDisableAssessmentProbationPathReqBodyBuilder():Ref<EnableDisableAssessmentProbationPathReqBodyBuilder>
	export function refOfEnableDisableAssessmentProbationPathReqBodyBuilder(x:EnableDisableAssessmentProbationPathReqBodyBuilder,v:Ref<EnableDisableAssessmentProbationPathReqBodyBuilder>)
	export function unRefEnableDisableAssessmentProbationPathReqBodyBuilder(v:Ref<EnableDisableAssessmentProbationPathReqBodyBuilder>):EnableDisableAssessmentProbationPathReqBodyBuilder
	export function emptyFieldVariableSubVlaueBuilder():FieldVariableSubVlaueBuilder
	export function emptyRefFieldVariableSubVlaueBuilder():Ref<FieldVariableSubVlaueBuilder>
	export function refOfFieldVariableSubVlaueBuilder(x:FieldVariableSubVlaueBuilder,v:Ref<FieldVariableSubVlaueBuilder>)
	export function unRefFieldVariableSubVlaueBuilder(v:Ref<FieldVariableSubVlaueBuilder>):FieldVariableSubVlaueBuilder
	export function emptyFile():File
	export function emptyRefFile():Ref<File>
	export function refOfFile(x:File,v:Ref<File>)
	export function unRefFile(v:Ref<File>):File
	export function emptyBasicJobDataBuilder():BasicJobDataBuilder
	export function emptyRefBasicJobDataBuilder():Ref<BasicJobDataBuilder>
	export function refOfBasicJobDataBuilder(x:BasicJobDataBuilder,v:Ref<BasicJobDataBuilder>)
	export function unRefBasicJobDataBuilder(v:Ref<BasicJobDataBuilder>):BasicJobDataBuilder
	export function emptyCompanyIdAndName():CompanyIdAndName
	export function emptyRefCompanyIdAndName():Ref<CompanyIdAndName>
	export function refOfCompanyIdAndName(x:CompanyIdAndName,v:Ref<CompanyIdAndName>)
	export function unRefCompanyIdAndName(v:Ref<CompanyIdAndName>):CompanyIdAndName
	export function emptyDepartmentHrbpBuilder():DepartmentHrbpBuilder
	export function emptyRefDepartmentHrbpBuilder():Ref<DepartmentHrbpBuilder>
	export function refOfDepartmentHrbpBuilder(x:DepartmentHrbpBuilder,v:Ref<DepartmentHrbpBuilder>)
	export function unRefDepartmentHrbpBuilder(v:Ref<DepartmentHrbpBuilder>):DepartmentHrbpBuilder
	export function emptyGetProcessResp():GetProcessResp
	export function emptyRefGetProcessResp():Ref<GetProcessResp>
	export function refOfGetProcessResp(x:GetProcessResp,v:Ref<GetProcessResp>)
	export function unRefGetProcessResp(v:Ref<GetProcessResp>):GetProcessResp
	export function emptyProfileSettingProbationInfoBuilder():ProfileSettingProbationInfoBuilder
	export function emptyRefProfileSettingProbationInfoBuilder():Ref<ProfileSettingProbationInfoBuilder>
	export function refOfProfileSettingProbationInfoBuilder(x:ProfileSettingProbationInfoBuilder,v:Ref<ProfileSettingProbationInfoBuilder>)
	export function unRefProfileSettingProbationInfoBuilder(v:Ref<ProfileSettingProbationInfoBuilder>):ProfileSettingProbationInfoBuilder
	export function emptySignatureFileBuilder():SignatureFileBuilder
	export function emptyRefSignatureFileBuilder():Ref<SignatureFileBuilder>
	export function refOfSignatureFileBuilder(x:SignatureFileBuilder,v:Ref<SignatureFileBuilder>)
	export function unRefSignatureFileBuilder(v:Ref<SignatureFileBuilder>):SignatureFileBuilder
	export function emptyFieldVariableSubVlaueForReviewBuilder():FieldVariableSubVlaueForReviewBuilder
	export function emptyRefFieldVariableSubVlaueForReviewBuilder():Ref<FieldVariableSubVlaueForReviewBuilder>
	export function refOfFieldVariableSubVlaueForReviewBuilder(x:FieldVariableSubVlaueForReviewBuilder,v:Ref<FieldVariableSubVlaueForReviewBuilder>)
	export function unRefFieldVariableSubVlaueForReviewBuilder(v:Ref<FieldVariableSubVlaueForReviewBuilder>):FieldVariableSubVlaueForReviewBuilder
	export function emptyNameForUpdate():NameForUpdate
	export function emptyRefNameForUpdate():Ref<NameForUpdate>
	export function refOfNameForUpdate(x:NameForUpdate,v:Ref<NameForUpdate>)
	export function unRefNameForUpdate(v:Ref<NameForUpdate>):NameForUpdate
	export function emptyProfileSettingPersonalBasicInfoBuilder():ProfileSettingPersonalBasicInfoBuilder
	export function emptyRefProfileSettingPersonalBasicInfoBuilder():Ref<ProfileSettingPersonalBasicInfoBuilder>
	export function refOfProfileSettingPersonalBasicInfoBuilder(x:ProfileSettingPersonalBasicInfoBuilder,v:Ref<ProfileSettingPersonalBasicInfoBuilder>)
	export function unRefProfileSettingPersonalBasicInfoBuilder(v:Ref<ProfileSettingPersonalBasicInfoBuilder>):ProfileSettingPersonalBasicInfoBuilder
	export function emptyBatchGetCompanyPathReqBodyBuilder():BatchGetCompanyPathReqBodyBuilder
	export function emptyRefBatchGetCompanyPathReqBodyBuilder():Ref<BatchGetCompanyPathReqBodyBuilder>
	export function refOfBatchGetCompanyPathReqBodyBuilder(x:BatchGetCompanyPathReqBodyBuilder,v:Ref<BatchGetCompanyPathReqBodyBuilder>)
	export function unRefBatchGetCompanyPathReqBodyBuilder(v:Ref<BatchGetCompanyPathReqBodyBuilder>):BatchGetCompanyPathReqBodyBuilder
	export function emptyDeletePreHireReqBuilder():DeletePreHireReqBuilder
	export function emptyRefDeletePreHireReqBuilder():Ref<DeletePreHireReqBuilder>
	export function refOfDeletePreHireReqBuilder(x:DeletePreHireReqBuilder,v:Ref<DeletePreHireReqBuilder>)
	export function unRefDeletePreHireReqBuilder(v:Ref<DeletePreHireReqBuilder>):DeletePreHireReqBuilder
	export function emptyEnableDisableAssessmentProbationReqBodyBuilder():EnableDisableAssessmentProbationReqBodyBuilder
	export function emptyRefEnableDisableAssessmentProbationReqBodyBuilder():Ref<EnableDisableAssessmentProbationReqBodyBuilder>
	export function refOfEnableDisableAssessmentProbationReqBodyBuilder(x:EnableDisableAssessmentProbationReqBodyBuilder,v:Ref<EnableDisableAssessmentProbationReqBodyBuilder>)
	export function unRefEnableDisableAssessmentProbationReqBodyBuilder(v:Ref<EnableDisableAssessmentProbationReqBodyBuilder>):EnableDisableAssessmentProbationReqBodyBuilder
	export function emptyPatchCostCenterVersionPathReqBodyBuilder():PatchCostCenterVersionPathReqBodyBuilder
	export function emptyRefPatchCostCenterVersionPathReqBodyBuilder():Ref<PatchCostCenterVersionPathReqBodyBuilder>
	export function refOfPatchCostCenterVersionPathReqBodyBuilder(x:PatchCostCenterVersionPathReqBodyBuilder,v:Ref<PatchCostCenterVersionPathReqBodyBuilder>)
	export function unRefPatchCostCenterVersionPathReqBodyBuilder(v:Ref<PatchCostCenterVersionPathReqBodyBuilder>):PatchCostCenterVersionPathReqBodyBuilder
	export function emptyPatchPersonRespData():PatchPersonRespData
	export function emptyRefPatchPersonRespData():Ref<PatchPersonRespData>
	export function refOfPatchPersonRespData(x:PatchPersonRespData,v:Ref<PatchPersonRespData>)
	export function unRefPatchPersonRespData(v:Ref<PatchPersonRespData>):PatchPersonRespData
	export function emptySearchBasicInfoCountryRegionPathReqBodyBuilder():SearchBasicInfoCountryRegionPathReqBodyBuilder
	export function emptyRefSearchBasicInfoCountryRegionPathReqBodyBuilder():Ref<SearchBasicInfoCountryRegionPathReqBodyBuilder>
	export function refOfSearchBasicInfoCountryRegionPathReqBodyBuilder(x:SearchBasicInfoCountryRegionPathReqBodyBuilder,v:Ref<SearchBasicInfoCountryRegionPathReqBodyBuilder>)
	export function unRefSearchBasicInfoCountryRegionPathReqBodyBuilder(v:Ref<SearchBasicInfoCountryRegionPathReqBodyBuilder>):SearchBasicInfoCountryRegionPathReqBodyBuilder
	export function emptyWorkforcePlanBuilder():WorkforcePlanBuilder
	export function emptyRefWorkforcePlanBuilder():Ref<WorkforcePlanBuilder>
	export function refOfWorkforcePlanBuilder(x:WorkforcePlanBuilder,v:Ref<WorkforcePlanBuilder>)
	export function unRefWorkforcePlanBuilder(v:Ref<WorkforcePlanBuilder>):WorkforcePlanBuilder
	export function emptyBasicDepartment():BasicDepartment
	export function emptyRefBasicDepartment():Ref<BasicDepartment>
	export function refOfBasicDepartment(x:BasicDepartment,v:Ref<BasicDepartment>)
	export function unRefBasicDepartment(v:Ref<BasicDepartment>):BasicDepartment
	export function emptyBasicPersonInfoBuilder():BasicPersonInfoBuilder
	export function emptyRefBasicPersonInfoBuilder():Ref<BasicPersonInfoBuilder>
	export function refOfBasicPersonInfoBuilder(x:BasicPersonInfoBuilder,v:Ref<BasicPersonInfoBuilder>)
	export function unRefBasicPersonInfoBuilder(v:Ref<BasicPersonInfoBuilder>):BasicPersonInfoBuilder
	export function emptyOnboardingFlowChangeBuilder():OnboardingFlowChangeBuilder
	export function emptyRefOnboardingFlowChangeBuilder():Ref<OnboardingFlowChangeBuilder>
	export function refOfOnboardingFlowChangeBuilder(x:OnboardingFlowChangeBuilder,v:Ref<OnboardingFlowChangeBuilder>)
	export function unRefOnboardingFlowChangeBuilder(v:Ref<OnboardingFlowChangeBuilder>):OnboardingFlowChangeBuilder
	export function emptyDepartmentParents():DepartmentParents
	export function emptyRefDepartmentParents():Ref<DepartmentParents>
	export function refOfDepartmentParents(x:DepartmentParents,v:Ref<DepartmentParents>)
	export function unRefDepartmentParents(v:Ref<DepartmentParents>):DepartmentParents
	export function emptyDepartmentParentsBuilder():DepartmentParentsBuilder
	export function emptyRefDepartmentParentsBuilder():Ref<DepartmentParentsBuilder>
	export function refOfDepartmentParentsBuilder(x:DepartmentParentsBuilder,v:Ref<DepartmentParentsBuilder>)
	export function unRefDepartmentParentsBuilder(v:Ref<DepartmentParentsBuilder>):DepartmentParentsBuilder
	export function emptyProfileSettingI18n():ProfileSettingI18n
	export function emptyRefProfileSettingI18n():Ref<ProfileSettingI18n>
	export function refOfProfileSettingI18n(x:ProfileSettingI18n,v:Ref<ProfileSettingI18n>)
	export function unRefProfileSettingI18n(v:Ref<ProfileSettingI18n>):ProfileSettingI18n
	export function emptyFormVariableValueInfoBuilder():FormVariableValueInfoBuilder
	export function emptyRefFormVariableValueInfoBuilder():Ref<FormVariableValueInfoBuilder>
	export function refOfFormVariableValueInfoBuilder(x:FormVariableValueInfoBuilder,v:Ref<FormVariableValueInfoBuilder>)
	export function unRefFormVariableValueInfoBuilder(v:Ref<FormVariableValueInfoBuilder>):FormVariableValueInfoBuilder
	export function emptyJob():Job
	export function emptyRefJob():Ref<Job>
	export function refOfJob(x:Job,v:Ref<Job>)
	export function unRefJob(v:Ref<Job>):Job
	export function emptyProcessFormVariable():ProcessFormVariable
	export function emptyRefProcessFormVariable():Ref<ProcessFormVariable>
	export function refOfProcessFormVariable(x:ProcessFormVariable,v:Ref<ProcessFormVariable>)
	export function unRefProcessFormVariable(v:Ref<ProcessFormVariable>):ProcessFormVariable
	export function emptySearchJobChangePathReqBodyBuilder():SearchJobChangePathReqBodyBuilder
	export function emptyRefSearchJobChangePathReqBodyBuilder():Ref<SearchJobChangePathReqBodyBuilder>
	export function refOfSearchJobChangePathReqBodyBuilder(x:SearchJobChangePathReqBodyBuilder,v:Ref<SearchJobChangePathReqBodyBuilder>)
	export function unRefSearchJobChangePathReqBodyBuilder(v:Ref<SearchJobChangePathReqBodyBuilder>):SearchJobChangePathReqBodyBuilder
	export function emptySearchPreHireReqBody():SearchPreHireReqBody
	export function emptyRefSearchPreHireReqBody():Ref<SearchPreHireReqBody>
	export function refOfSearchPreHireReqBody(x:SearchPreHireReqBody,v:Ref<SearchPreHireReqBody>)
	export function unRefSearchPreHireReqBody(v:Ref<SearchPreHireReqBody>):SearchPreHireReqBody
	export function emptyAbnormalReason():AbnormalReason
	export function emptyRefAbnormalReason():Ref<AbnormalReason>
	export function refOfAbnormalReason(x:AbnormalReason,v:Ref<AbnormalReason>)
	export function unRefAbnormalReason(v:Ref<AbnormalReason>):AbnormalReason
	export function emptyContract():Contract
	export function emptyRefContract():Ref<Contract>
	export function refOfContract(x:Contract,v:Ref<Contract>)
	export function unRefContract(v:Ref<Contract>):Contract
	export function emptyFormVariableValueInfo():FormVariableValueInfo
	export function emptyRefFormVariableValueInfo():Ref<FormVariableValueInfo>
	export function refOfFormVariableValueInfo(x:FormVariableValueInfo,v:Ref<FormVariableValueInfo>)
	export function unRefFormVariableValueInfo(v:Ref<FormVariableValueInfo>):FormVariableValueInfo
	export function emptyBatchGetEmployeesJobDataReqBodyBuilder():BatchGetEmployeesJobDataReqBodyBuilder
	export function emptyRefBatchGetEmployeesJobDataReqBodyBuilder():Ref<BatchGetEmployeesJobDataReqBodyBuilder>
	export function refOfBatchGetEmployeesJobDataReqBodyBuilder(x:BatchGetEmployeesJobDataReqBodyBuilder,v:Ref<BatchGetEmployeesJobDataReqBodyBuilder>)
	export function unRefBatchGetEmployeesJobDataReqBodyBuilder(v:Ref<BatchGetEmployeesJobDataReqBodyBuilder>):BatchGetEmployeesJobDataReqBodyBuilder
	export function emptyListProcessReqBuilder():ListProcessReqBuilder
	export function emptyRefListProcessReqBuilder():Ref<ListProcessReqBuilder>
	export function refOfListProcessReqBuilder(x:ListProcessReqBuilder,v:Ref<ListProcessReqBuilder>)
	export function unRefListProcessReqBuilder(v:Ref<ListProcessReqBuilder>):ListProcessReqBuilder
	export function emptySearchBasicInfoBankBranchPathReqBodyBuilder():SearchBasicInfoBankBranchPathReqBodyBuilder
	export function emptyRefSearchBasicInfoBankBranchPathReqBodyBuilder():Ref<SearchBasicInfoBankBranchPathReqBodyBuilder>
	export function refOfSearchBasicInfoBankBranchPathReqBodyBuilder(x:SearchBasicInfoBankBranchPathReqBodyBuilder,v:Ref<SearchBasicInfoBankBranchPathReqBodyBuilder>)
	export function unRefSearchBasicInfoBankBranchPathReqBodyBuilder(v:Ref<SearchBasicInfoBankBranchPathReqBodyBuilder>):SearchBasicInfoBankBranchPathReqBodyBuilder
	export function emptySearchBasicInfoCountryRegionSubdivisionReqBody():SearchBasicInfoCountryRegionSubdivisionReqBody
	export function emptyRefSearchBasicInfoCountryRegionSubdivisionReqBody():Ref<SearchBasicInfoCountryRegionSubdivisionReqBody>
	export function refOfSearchBasicInfoCountryRegionSubdivisionReqBody(x:SearchBasicInfoCountryRegionSubdivisionReqBody,v:Ref<SearchBasicInfoCountryRegionSubdivisionReqBody>)
	export function unRefSearchBasicInfoCountryRegionSubdivisionReqBody(v:Ref<SearchBasicInfoCountryRegionSubdivisionReqBody>):SearchBasicInfoCountryRegionSubdivisionReqBody
	export function emptySearchProbationReqBody():SearchProbationReqBody
	export function emptyRefSearchProbationReqBody():Ref<SearchProbationReqBody>
	export function refOfSearchProbationReqBody(x:SearchProbationReqBody,v:Ref<SearchProbationReqBody>)
	export function unRefSearchProbationReqBody(v:Ref<SearchProbationReqBody>):SearchProbationReqBody
	export function emptyWorkExperienceInfo():WorkExperienceInfo
	export function emptyRefWorkExperienceInfo():Ref<WorkExperienceInfo>
	export function refOfWorkExperienceInfo(x:WorkExperienceInfo,v:Ref<WorkExperienceInfo>)
	export function unRefWorkExperienceInfo(v:Ref<WorkExperienceInfo>):WorkExperienceInfo
	export function emptyBpBuilder():BpBuilder
	export function emptyRefBpBuilder():Ref<BpBuilder>
	export function refOfBpBuilder(x:BpBuilder,v:Ref<BpBuilder>)
	export function unRefBpBuilder(v:Ref<BpBuilder>):BpBuilder
	export function emptyDepartmentForPatchBuilder():DepartmentForPatchBuilder
	export function emptyRefDepartmentForPatchBuilder():Ref<DepartmentForPatchBuilder>
	export function refOfDepartmentForPatchBuilder(x:DepartmentForPatchBuilder,v:Ref<DepartmentForPatchBuilder>)
	export function unRefDepartmentForPatchBuilder(v:Ref<DepartmentForPatchBuilder>):DepartmentForPatchBuilder
	export function emptyProfileSettingEmpInfoForUpdateBuilder():ProfileSettingEmpInfoForUpdateBuilder
	export function emptyRefProfileSettingEmpInfoForUpdateBuilder():Ref<ProfileSettingEmpInfoForUpdateBuilder>
	export function refOfProfileSettingEmpInfoForUpdateBuilder(x:ProfileSettingEmpInfoForUpdateBuilder,v:Ref<ProfileSettingEmpInfoForUpdateBuilder>)
	export function unRefProfileSettingEmpInfoForUpdateBuilder(v:Ref<ProfileSettingEmpInfoForUpdateBuilder>):ProfileSettingEmpInfoForUpdateBuilder
	export function emptyNationalId():NationalId
	export function emptyRefNationalId():Ref<NationalId>
	export function refOfNationalId(x:NationalId,v:Ref<NationalId>)
	export function unRefNationalId(v:Ref<NationalId>):NationalId
	export function emptyPatchPersonReqBuilder():PatchPersonReqBuilder
	export function emptyRefPatchPersonReqBuilder():Ref<PatchPersonReqBuilder>
	export function refOfPatchPersonReqBuilder(x:PatchPersonReqBuilder,v:Ref<PatchPersonReqBuilder>)
	export function unRefPatchPersonReqBuilder(v:Ref<PatchPersonReqBuilder>):PatchPersonReqBuilder
	export function emptyPhoneForUpdateBuilder():PhoneForUpdateBuilder
	export function emptyRefPhoneForUpdateBuilder():Ref<PhoneForUpdateBuilder>
	export function refOfPhoneForUpdateBuilder(x:PhoneForUpdateBuilder,v:Ref<PhoneForUpdateBuilder>)
	export function unRefPhoneForUpdateBuilder(v:Ref<PhoneForUpdateBuilder>):PhoneForUpdateBuilder
	export function emptyPreHireOnboardingInfoBuilder():PreHireOnboardingInfoBuilder
	export function emptyRefPreHireOnboardingInfoBuilder():Ref<PreHireOnboardingInfoBuilder>
	export function refOfPreHireOnboardingInfoBuilder(x:PreHireOnboardingInfoBuilder,v:Ref<PreHireOnboardingInfoBuilder>)
	export function unRefPreHireOnboardingInfoBuilder(v:Ref<PreHireOnboardingInfoBuilder>):PreHireOnboardingInfoBuilder
	export function emptyProfileSettingNationalBuilder():ProfileSettingNationalBuilder
	export function emptyRefProfileSettingNationalBuilder():Ref<ProfileSettingNationalBuilder>
	export function refOfProfileSettingNationalBuilder(x:ProfileSettingNationalBuilder,v:Ref<ProfileSettingNationalBuilder>)
	export function unRefProfileSettingNationalBuilder(v:Ref<ProfileSettingNationalBuilder>):ProfileSettingNationalBuilder
	export function emptyCreatePersonReqBuilder():CreatePersonReqBuilder
	export function emptyRefCreatePersonReqBuilder():Ref<CreatePersonReqBuilder>
	export function refOfCreatePersonReqBuilder(x:CreatePersonReqBuilder,v:Ref<CreatePersonReqBuilder>)
	export function unRefCreatePersonReqBuilder(v:Ref<CreatePersonReqBuilder>):CreatePersonReqBuilder
	export function emptyEmploymentBp():EmploymentBp
	export function emptyRefEmploymentBp():Ref<EmploymentBp>
	export function refOfEmploymentBp(x:EmploymentBp,v:Ref<EmploymentBp>)
	export function unRefEmploymentBp(v:Ref<EmploymentBp>):EmploymentBp
	export function emptyListBpReqBuilder():ListBpReqBuilder
	export function emptyRefListBpReqBuilder():Ref<ListBpReqBuilder>
	export function refOfListBpReqBuilder(x:ListBpReqBuilder,v:Ref<ListBpReqBuilder>)
	export function unRefListBpReqBuilder(v:Ref<ListBpReqBuilder>):ListBpReqBuilder
	export function emptyPreHireProbationInfo():PreHireProbationInfo
	export function emptyRefPreHireProbationInfo():Ref<PreHireProbationInfo>
	export function refOfPreHireProbationInfo(x:PreHireProbationInfo,v:Ref<PreHireProbationInfo>)
	export function unRefPreHireProbationInfo(v:Ref<PreHireProbationInfo>):PreHireProbationInfo
	export function emptyProcessAbstractItem():ProcessAbstractItem
	export function emptyRefProcessAbstractItem():Ref<ProcessAbstractItem>
	export function refOfProcessAbstractItem(x:ProcessAbstractItem,v:Ref<ProcessAbstractItem>)
	export function unRefProcessAbstractItem(v:Ref<ProcessAbstractItem>):ProcessAbstractItem
	export function emptyQueryTimelineDepartmentResp():QueryTimelineDepartmentResp
	export function emptyRefQueryTimelineDepartmentResp():Ref<QueryTimelineDepartmentResp>
	export function refOfQueryTimelineDepartmentResp(x:QueryTimelineDepartmentResp,v:Ref<QueryTimelineDepartmentResp>)
	export function unRefQueryTimelineDepartmentResp(v:Ref<QueryTimelineDepartmentResp>):QueryTimelineDepartmentResp
	export function emptyCreatePersonResp():CreatePersonResp
	export function emptyRefCreatePersonResp():Ref<CreatePersonResp>
	export function refOfCreatePersonResp(x:CreatePersonResp,v:Ref<CreatePersonResp>)
	export function unRefCreatePersonResp(v:Ref<CreatePersonResp>):CreatePersonResp
	export function emptyJobBuilder():JobBuilder
	export function emptyRefJobBuilder():Ref<JobBuilder>
	export function refOfJobBuilder(x:JobBuilder,v:Ref<JobBuilder>)
	export function unRefJobBuilder(v:Ref<JobBuilder>):JobBuilder
	export function emptyPhoneNumberAndAreaCodeBuilder():PhoneNumberAndAreaCodeBuilder
	export function emptyRefPhoneNumberAndAreaCodeBuilder():Ref<PhoneNumberAndAreaCodeBuilder>
	export function refOfPhoneNumberAndAreaCodeBuilder(x:PhoneNumberAndAreaCodeBuilder,v:Ref<PhoneNumberAndAreaCodeBuilder>)
	export function unRefPhoneNumberAndAreaCodeBuilder(v:Ref<PhoneNumberAndAreaCodeBuilder>):PhoneNumberAndAreaCodeBuilder
	export function emptyProfileSettingEmpContractRecord():ProfileSettingEmpContractRecord
	export function emptyRefProfileSettingEmpContractRecord():Ref<ProfileSettingEmpContractRecord>
	export function refOfProfileSettingEmpContractRecord(x:ProfileSettingEmpContractRecord,v:Ref<ProfileSettingEmpContractRecord>)
	export function unRefProfileSettingEmpContractRecord(v:Ref<ProfileSettingEmpContractRecord>):ProfileSettingEmpContractRecord
	export function emptySearchBasicInfoBankResp():SearchBasicInfoBankResp
	export function emptyRefSearchBasicInfoBankResp():Ref<SearchBasicInfoBankResp>
	export function refOfSearchBasicInfoBankResp(x:SearchBasicInfoBankResp,v:Ref<SearchBasicInfoBankResp>)
	export function unRefSearchBasicInfoBankResp(v:Ref<SearchBasicInfoBankResp>):SearchBasicInfoBankResp
	export function emptySearchBasicInfoCountryRegionSubdivisionReqBuilder():SearchBasicInfoCountryRegionSubdivisionReqBuilder
	export function emptyRefSearchBasicInfoCountryRegionSubdivisionReqBuilder():Ref<SearchBasicInfoCountryRegionSubdivisionReqBuilder>
	export function refOfSearchBasicInfoCountryRegionSubdivisionReqBuilder(x:SearchBasicInfoCountryRegionSubdivisionReqBuilder,v:Ref<SearchBasicInfoCountryRegionSubdivisionReqBuilder>)
	export function unRefSearchBasicInfoCountryRegionSubdivisionReqBuilder(v:Ref<SearchBasicInfoCountryRegionSubdivisionReqBuilder>):SearchBasicInfoCountryRegionSubdivisionReqBuilder
	export function emptyBasicJobData():BasicJobData
	export function emptyRefBasicJobData():Ref<BasicJobData>
	export function refOfBasicJobData(x:BasicJobData,v:Ref<BasicJobData>)
	export function unRefBasicJobData(v:Ref<BasicJobData>):BasicJobData
	export function emptyDeleteCostCenterVersionResp():DeleteCostCenterVersionResp
	export function emptyRefDeleteCostCenterVersionResp():Ref<DeleteCostCenterVersionResp>
	export function refOfDeleteCostCenterVersionResp(x:DeleteCostCenterVersionResp,v:Ref<DeleteCostCenterVersionResp>)
	export function unRefDeleteCostCenterVersionResp(v:Ref<DeleteCostCenterVersionResp>):DeleteCostCenterVersionResp
	export function emptyGetByDepartmentBpReqBodyBuilder():GetByDepartmentBpReqBodyBuilder
	export function emptyRefGetByDepartmentBpReqBodyBuilder():Ref<GetByDepartmentBpReqBodyBuilder>
	export function refOfGetByDepartmentBpReqBodyBuilder(x:GetByDepartmentBpReqBodyBuilder,v:Ref<GetByDepartmentBpReqBodyBuilder>)
	export function unRefGetByDepartmentBpReqBodyBuilder(v:Ref<GetByDepartmentBpReqBodyBuilder>):GetByDepartmentBpReqBodyBuilder
	export function emptyProfileSettingPersonalInfoBuilder():ProfileSettingPersonalInfoBuilder
	export function emptyRefProfileSettingPersonalInfoBuilder():Ref<ProfileSettingPersonalInfoBuilder>
	export function refOfProfileSettingPersonalInfoBuilder(x:ProfileSettingPersonalInfoBuilder,v:Ref<ProfileSettingPersonalInfoBuilder>)
	export function unRefProfileSettingPersonalInfoBuilder(v:Ref<ProfileSettingPersonalInfoBuilder>):ProfileSettingPersonalInfoBuilder
	export function emptySearchCostCenterReqBodyBuilder():SearchCostCenterReqBodyBuilder
	export function emptyRefSearchCostCenterReqBodyBuilder():Ref<SearchCostCenterReqBodyBuilder>
	export function refOfSearchCostCenterReqBodyBuilder(x:SearchCostCenterReqBodyBuilder,v:Ref<SearchCostCenterReqBodyBuilder>)
	export function unRefSearchCostCenterReqBodyBuilder(v:Ref<SearchCostCenterReqBodyBuilder>):SearchCostCenterReqBodyBuilder
	export function emptyDeleteCostCenterReqBodyBuilder():DeleteCostCenterReqBodyBuilder
	export function emptyRefDeleteCostCenterReqBodyBuilder():Ref<DeleteCostCenterReqBodyBuilder>
	export function refOfDeleteCostCenterReqBodyBuilder(x:DeleteCostCenterReqBodyBuilder,v:Ref<DeleteCostCenterReqBodyBuilder>)
	export function unRefDeleteCostCenterReqBodyBuilder(v:Ref<DeleteCostCenterReqBodyBuilder>):DeleteCostCenterReqBodyBuilder
	export function emptyDepartmentChangeBuilder():DepartmentChangeBuilder
	export function emptyRefDepartmentChangeBuilder():Ref<DepartmentChangeBuilder>
	export function refOfDepartmentChangeBuilder(x:DepartmentChangeBuilder,v:Ref<DepartmentChangeBuilder>)
	export function unRefDepartmentChangeBuilder(v:Ref<DepartmentChangeBuilder>):DepartmentChangeBuilder
	export function emptyGetByDepartmentBpReqBuilder():GetByDepartmentBpReqBuilder
	export function emptyRefGetByDepartmentBpReqBuilder():Ref<GetByDepartmentBpReqBuilder>
	export function refOfGetByDepartmentBpReqBuilder(x:GetByDepartmentBpReqBuilder,v:Ref<GetByDepartmentBpReqBuilder>)
	export function unRefGetByDepartmentBpReqBuilder(v:Ref<GetByDepartmentBpReqBuilder>):GetByDepartmentBpReqBuilder
	export function emptyFieldVariableValueToRecordBuilder():FieldVariableValueToRecordBuilder
	export function emptyRefFieldVariableValueToRecordBuilder():Ref<FieldVariableValueToRecordBuilder>
	export function refOfFieldVariableValueToRecordBuilder(x:FieldVariableValueToRecordBuilder,v:Ref<FieldVariableValueToRecordBuilder>)
	export function unRefFieldVariableValueToRecordBuilder(v:Ref<FieldVariableValueToRecordBuilder>):FieldVariableValueToRecordBuilder
	export function emptyProfileSettingEmploymentInfoBuilder():ProfileSettingEmploymentInfoBuilder
	export function emptyRefProfileSettingEmploymentInfoBuilder():Ref<ProfileSettingEmploymentInfoBuilder>
	export function refOfProfileSettingEmploymentInfoBuilder(x:ProfileSettingEmploymentInfoBuilder,v:Ref<ProfileSettingEmploymentInfoBuilder>)
	export function unRefProfileSettingEmploymentInfoBuilder(v:Ref<ProfileSettingEmploymentInfoBuilder>):ProfileSettingEmploymentInfoBuilder
	export function emptyQrCode():QrCode
	export function emptyRefQrCode():Ref<QrCode>
	export function refOfQrCode(x:QrCode,v:Ref<QrCode>)
	export function unRefQrCode(v:Ref<QrCode>):QrCode
	export function emptyQrCodeValueBuilder():QrCodeValueBuilder
	export function emptyRefQrCodeValueBuilder():Ref<QrCodeValueBuilder>
	export function refOfQrCodeValueBuilder(x:QrCodeValueBuilder,v:Ref<QrCodeValueBuilder>)
	export function unRefQrCodeValueBuilder(v:Ref<QrCodeValueBuilder>):QrCodeValueBuilder
	export function emptySearchBasicInfoBankPathReqBodyBuilder():SearchBasicInfoBankPathReqBodyBuilder
	export function emptyRefSearchBasicInfoBankPathReqBodyBuilder():Ref<SearchBasicInfoBankPathReqBodyBuilder>
	export function refOfSearchBasicInfoBankPathReqBodyBuilder(x:SearchBasicInfoBankPathReqBodyBuilder,v:Ref<SearchBasicInfoBankPathReqBodyBuilder>)
	export function unRefSearchBasicInfoBankPathReqBodyBuilder(v:Ref<SearchBasicInfoBankPathReqBodyBuilder>):SearchBasicInfoBankPathReqBodyBuilder
	export function emptyBatchGetDepartmentReqBodyBuilder():BatchGetDepartmentReqBodyBuilder
	export function emptyRefBatchGetDepartmentReqBodyBuilder():Ref<BatchGetDepartmentReqBodyBuilder>
	export function refOfBatchGetDepartmentReqBodyBuilder(x:BatchGetDepartmentReqBodyBuilder,v:Ref<BatchGetDepartmentReqBodyBuilder>)
	export function unRefBatchGetDepartmentReqBodyBuilder(v:Ref<BatchGetDepartmentReqBodyBuilder>):BatchGetDepartmentReqBodyBuilder
	export function emptyBatchGetDepartmentResp():BatchGetDepartmentResp
	export function emptyRefBatchGetDepartmentResp():Ref<BatchGetDepartmentResp>
	export function refOfBatchGetDepartmentResp(x:BatchGetDepartmentResp,v:Ref<BatchGetDepartmentResp>)
	export function unRefBatchGetDepartmentResp(v:Ref<BatchGetDepartmentResp>):BatchGetDepartmentResp
	export function emptyFieldVariableValueToObjectBuilder():FieldVariableValueToObjectBuilder
	export function emptyRefFieldVariableValueToObjectBuilder():Ref<FieldVariableValueToObjectBuilder>
	export function refOfFieldVariableValueToObjectBuilder(x:FieldVariableValueToObjectBuilder,v:Ref<FieldVariableValueToObjectBuilder>)
	export function unRefFieldVariableValueToObjectBuilder(v:Ref<FieldVariableValueToObjectBuilder>):FieldVariableValueToObjectBuilder
	export function emptySearchBasicInfoDistrictReqBuilder():SearchBasicInfoDistrictReqBuilder
	export function emptyRefSearchBasicInfoDistrictReqBuilder():Ref<SearchBasicInfoDistrictReqBuilder>
	export function refOfSearchBasicInfoDistrictReqBuilder(x:SearchBasicInfoDistrictReqBuilder,v:Ref<SearchBasicInfoDistrictReqBuilder>)
	export function unRefSearchBasicInfoDistrictReqBuilder(v:Ref<SearchBasicInfoDistrictReqBuilder>):SearchBasicInfoDistrictReqBuilder
	export function emptySearchPreHireReqBodyBuilder():SearchPreHireReqBodyBuilder
	export function emptyRefSearchPreHireReqBodyBuilder():Ref<SearchPreHireReqBodyBuilder>
	export function refOfSearchPreHireReqBodyBuilder(x:SearchPreHireReqBodyBuilder,v:Ref<SearchPreHireReqBodyBuilder>)
	export function unRefSearchPreHireReqBodyBuilder(v:Ref<SearchPreHireReqBodyBuilder>):SearchPreHireReqBodyBuilder
	export function emptySearchBasicInfoCountryRegionReq():SearchBasicInfoCountryRegionReq
	export function emptyRefSearchBasicInfoCountryRegionReq():Ref<SearchBasicInfoCountryRegionReq>
	export function refOfSearchBasicInfoCountryRegionReq(x:SearchBasicInfoCountryRegionReq,v:Ref<SearchBasicInfoCountryRegionReq>)
	export function unRefSearchBasicInfoCountryRegionReq(v:Ref<SearchBasicInfoCountryRegionReq>):SearchBasicInfoCountryRegionReq
	export function emptySearchBasicInfoCountryRegionReqBuilder():SearchBasicInfoCountryRegionReqBuilder
	export function emptyRefSearchBasicInfoCountryRegionReqBuilder():Ref<SearchBasicInfoCountryRegionReqBuilder>
	export function refOfSearchBasicInfoCountryRegionReqBuilder(x:SearchBasicInfoCountryRegionReqBuilder,v:Ref<SearchBasicInfoCountryRegionReqBuilder>)
	export function unRefSearchBasicInfoCountryRegionReqBuilder(v:Ref<SearchBasicInfoCountryRegionReqBuilder>):SearchBasicInfoCountryRegionReqBuilder
	export function emptySearchProbationResp():SearchProbationResp
	export function emptyRefSearchProbationResp():Ref<SearchProbationResp>
	export function refOfSearchProbationResp(x:SearchProbationResp,v:Ref<SearchProbationResp>)
	export function unRefSearchProbationResp(v:Ref<SearchProbationResp>):SearchProbationResp
	export function emptyUserInfo():UserInfo
	export function emptyRefUserInfo():Ref<UserInfo>
	export function refOfUserInfo(x:UserInfo,v:Ref<UserInfo>)
	export function unRefUserInfo(v:Ref<UserInfo>):UserInfo
	export function emptyAddress():Address
	export function emptyRefAddress():Ref<Address>
	export function refOfAddress(x:Address,v:Ref<Address>)
	export function unRefAddress(v:Ref<Address>):Address
	export function emptyJobLevelBuilder():JobLevelBuilder
	export function emptyRefJobLevelBuilder():Ref<JobLevelBuilder>
	export function refOfJobLevelBuilder(x:JobLevelBuilder,v:Ref<JobLevelBuilder>)
	export function unRefJobLevelBuilder(v:Ref<JobLevelBuilder>):JobLevelBuilder
	export function emptyProfileSettingEmploymentRecord():ProfileSettingEmploymentRecord
	export function emptyRefProfileSettingEmploymentRecord():Ref<ProfileSettingEmploymentRecord>
	export function refOfProfileSettingEmploymentRecord(x:ProfileSettingEmploymentRecord,v:Ref<ProfileSettingEmploymentRecord>)
	export function unRefProfileSettingEmploymentRecord(v:Ref<ProfileSettingEmploymentRecord>):ProfileSettingEmploymentRecord
	export function emptyQueryEmployeesJobDataReqBodyBuilder():QueryEmployeesJobDataReqBodyBuilder
	export function emptyRefQueryEmployeesJobDataReqBodyBuilder():Ref<QueryEmployeesJobDataReqBodyBuilder>
	export function refOfQueryEmployeesJobDataReqBodyBuilder(x:QueryEmployeesJobDataReqBodyBuilder,v:Ref<QueryEmployeesJobDataReqBodyBuilder>)
	export function unRefQueryEmployeesJobDataReqBodyBuilder(v:Ref<QueryEmployeesJobDataReqBodyBuilder>):QueryEmployeesJobDataReqBodyBuilder
	export function emptySearchBasicInfoCurrencyResp():SearchBasicInfoCurrencyResp
	export function emptyRefSearchBasicInfoCurrencyResp():Ref<SearchBasicInfoCurrencyResp>
	export function refOfSearchBasicInfoCurrencyResp(x:SearchBasicInfoCurrencyResp,v:Ref<SearchBasicInfoCurrencyResp>)
	export function unRefSearchBasicInfoCurrencyResp(v:Ref<SearchBasicInfoCurrencyResp>):SearchBasicInfoCurrencyResp
	export function emptySearchBasicInfoDistrictPathReqBodyBuilder():SearchBasicInfoDistrictPathReqBodyBuilder
	export function emptyRefSearchBasicInfoDistrictPathReqBodyBuilder():Ref<SearchBasicInfoDistrictPathReqBodyBuilder>
	export function refOfSearchBasicInfoDistrictPathReqBodyBuilder(x:SearchBasicInfoDistrictPathReqBodyBuilder,v:Ref<SearchBasicInfoDistrictPathReqBodyBuilder>)
	export function unRefSearchBasicInfoDistrictPathReqBodyBuilder(v:Ref<SearchBasicInfoDistrictPathReqBodyBuilder>):SearchBasicInfoDistrictPathReqBodyBuilder
	export function emptyPersonName():PersonName
	export function emptyRefPersonName():Ref<PersonName>
	export function refOfPersonName(x:PersonName,v:Ref<PersonName>)
	export function unRefPersonName(v:Ref<PersonName>):PersonName
	export function emptyPhone():Phone
	export function emptyRefPhone():Ref<Phone>
	export function refOfPhone(x:Phone,v:Ref<Phone>)
	export function unRefPhone(v:Ref<Phone>):Phone
	export function emptyPhoneBuilder():PhoneBuilder
	export function emptyRefPhoneBuilder():Ref<PhoneBuilder>
	export function refOfPhoneBuilder(x:PhoneBuilder,v:Ref<PhoneBuilder>)
	export function unRefPhoneBuilder(v:Ref<PhoneBuilder>):PhoneBuilder
	export function emptyWorkforcePlanEaiDetailBuilder():WorkforcePlanEaiDetailBuilder
	export function emptyRefWorkforcePlanEaiDetailBuilder():Ref<WorkforcePlanEaiDetailBuilder>
	export function refOfWorkforcePlanEaiDetailBuilder(x:WorkforcePlanEaiDetailBuilder,v:Ref<WorkforcePlanEaiDetailBuilder>)
	export function unRefWorkforcePlanEaiDetailBuilder(v:Ref<WorkforcePlanEaiDetailBuilder>):WorkforcePlanEaiDetailBuilder
	export function emptyEnableDisableAssessmentProbationReqBuilder():EnableDisableAssessmentProbationReqBuilder
	export function emptyRefEnableDisableAssessmentProbationReqBuilder():Ref<EnableDisableAssessmentProbationReqBuilder>
	export function refOfEnableDisableAssessmentProbationReqBuilder(x:EnableDisableAssessmentProbationReqBuilder,v:Ref<EnableDisableAssessmentProbationReqBuilder>)
	export function unRefEnableDisableAssessmentProbationReqBuilder(v:Ref<EnableDisableAssessmentProbationReqBuilder>):EnableDisableAssessmentProbationReqBuilder
	export function emptyFieldVariableValueToEnum():FieldVariableValueToEnum
	export function emptyRefFieldVariableValueToEnum():Ref<FieldVariableValueToEnum>
	export function refOfFieldVariableValueToEnum(x:FieldVariableValueToEnum,v:Ref<FieldVariableValueToEnum>)
	export function unRefFieldVariableValueToEnum(v:Ref<FieldVariableValueToEnum>):FieldVariableValueToEnum
	export function emptyLocationBuilder():LocationBuilder
	export function emptyRefLocationBuilder():Ref<LocationBuilder>
	export function refOfLocationBuilder(x:LocationBuilder,v:Ref<LocationBuilder>)
	export function unRefLocationBuilder(v:Ref<LocationBuilder>):LocationBuilder
	export function emptyWorkEmailInfoList():WorkEmailInfoList
	export function emptyRefWorkEmailInfoList():Ref<WorkEmailInfoList>
	export function refOfWorkEmailInfoList(x:WorkEmailInfoList,v:Ref<WorkEmailInfoList>)
	export function unRefWorkEmailInfoList(v:Ref<WorkEmailInfoList>):WorkEmailInfoList
	export function emptyDepartmentParentInfoBuilder():DepartmentParentInfoBuilder
	export function emptyRefDepartmentParentInfoBuilder():Ref<DepartmentParentInfoBuilder>
	export function refOfDepartmentParentInfoBuilder(x:DepartmentParentInfoBuilder,v:Ref<DepartmentParentInfoBuilder>)
	export function unRefDepartmentParentInfoBuilder(v:Ref<DepartmentParentInfoBuilder>):DepartmentParentInfoBuilder
	export function emptyEmployeeJobDataBuilder():EmployeeJobDataBuilder
	export function emptyRefEmployeeJobDataBuilder():Ref<EmployeeJobDataBuilder>
	export function refOfEmployeeJobDataBuilder(x:EmployeeJobDataBuilder,v:Ref<EmployeeJobDataBuilder>)
	export function unRefEmployeeJobDataBuilder(v:Ref<EmployeeJobDataBuilder>):EmployeeJobDataBuilder
	export function emptyQueryEmployeesJobDataReq():QueryEmployeesJobDataReq
	export function emptyRefQueryEmployeesJobDataReq():Ref<QueryEmployeesJobDataReq>
	export function refOfQueryEmployeesJobDataReq(x:QueryEmployeesJobDataReq,v:Ref<QueryEmployeesJobDataReq>)
	export function unRefQueryEmployeesJobDataReq(v:Ref<QueryEmployeesJobDataReq>):QueryEmployeesJobDataReq
	export function emptyEmploymentBuilder():EmploymentBuilder
	export function emptyRefEmploymentBuilder():Ref<EmploymentBuilder>
	export function refOfEmploymentBuilder(x:EmploymentBuilder,v:Ref<EmploymentBuilder>)
	export function unRefEmploymentBuilder(v:Ref<EmploymentBuilder>):EmploymentBuilder
	export function emptyFieldVariableValueToForReview():FieldVariableValueToForReview
	export function emptyRefFieldVariableValueToForReview():Ref<FieldVariableValueToForReview>
	export function refOfFieldVariableValueToForReview(x:FieldVariableValueToForReview,v:Ref<FieldVariableValueToForReview>)
	export function unRefFieldVariableValueToForReview(v:Ref<FieldVariableValueToForReview>):FieldVariableValueToForReview
	export function emptyBatchGetJobFamilyPathReqBodyBuilder():BatchGetJobFamilyPathReqBodyBuilder
	export function emptyRefBatchGetJobFamilyPathReqBodyBuilder():Ref<BatchGetJobFamilyPathReqBodyBuilder>
	export function refOfBatchGetJobFamilyPathReqBodyBuilder(x:BatchGetJobFamilyPathReqBodyBuilder,v:Ref<BatchGetJobFamilyPathReqBodyBuilder>)
	export function unRefBatchGetJobFamilyPathReqBodyBuilder(v:Ref<BatchGetJobFamilyPathReqBodyBuilder>):BatchGetJobFamilyPathReqBodyBuilder
	export function emptyDeleteProbationAssessmentReq():DeleteProbationAssessmentReq
	export function emptyRefDeleteProbationAssessmentReq():Ref<DeleteProbationAssessmentReq>
	export function refOfDeleteProbationAssessmentReq(x:DeleteProbationAssessmentReq,v:Ref<DeleteProbationAssessmentReq>)
	export function unRefDeleteProbationAssessmentReq(v:Ref<DeleteProbationAssessmentReq>):DeleteProbationAssessmentReq
	export function emptyDependent():Dependent
	export function emptyRefDependent():Ref<Dependent>
	export function refOfDependent(x:Dependent,v:Ref<Dependent>)
	export function unRefDependent(v:Ref<Dependent>):Dependent
	export function emptyP2ProbationUpdatedV2Handler():P2ProbationUpdatedV2Handler
	export function emptyRefP2ProbationUpdatedV2Handler():Ref<P2ProbationUpdatedV2Handler>
	export function refOfP2ProbationUpdatedV2Handler(x:P2ProbationUpdatedV2Handler,v:Ref<P2ProbationUpdatedV2Handler>)
	export function unRefP2ProbationUpdatedV2Handler(v:Ref<P2ProbationUpdatedV2Handler>):P2ProbationUpdatedV2Handler
	export function emptySearchBasicInfoBankIterator():SearchBasicInfoBankIterator
	export function emptyRefSearchBasicInfoBankIterator():Ref<SearchBasicInfoBankIterator>
	export function refOfSearchBasicInfoBankIterator(x:SearchBasicInfoBankIterator,v:Ref<SearchBasicInfoBankIterator>)
	export function unRefSearchBasicInfoBankIterator(v:Ref<SearchBasicInfoBankIterator>):SearchBasicInfoBankIterator
	export function emptySearchBasicInfoCityIterator():SearchBasicInfoCityIterator
	export function emptyRefSearchBasicInfoCityIterator():Ref<SearchBasicInfoCityIterator>
	export function refOfSearchBasicInfoCityIterator(x:SearchBasicInfoCityIterator,v:Ref<SearchBasicInfoCityIterator>)
	export function unRefSearchBasicInfoCityIterator(v:Ref<SearchBasicInfoCityIterator>):SearchBasicInfoCityIterator
	export function emptySearchBasicInfoCityReqBodyBuilder():SearchBasicInfoCityReqBodyBuilder
	export function emptyRefSearchBasicInfoCityReqBodyBuilder():Ref<SearchBasicInfoCityReqBodyBuilder>
	export function refOfSearchBasicInfoCityReqBodyBuilder(x:SearchBasicInfoCityReqBodyBuilder,v:Ref<SearchBasicInfoCityReqBodyBuilder>)
	export function unRefSearchBasicInfoCityReqBodyBuilder(v:Ref<SearchBasicInfoCityReqBodyBuilder>):SearchBasicInfoCityReqBodyBuilder
	export function emptySearchContractReqBodyBuilder():SearchContractReqBodyBuilder
	export function emptyRefSearchContractReqBodyBuilder():Ref<SearchContractReqBodyBuilder>
	export function refOfSearchContractReqBodyBuilder(x:SearchContractReqBodyBuilder,v:Ref<SearchContractReqBodyBuilder>)
	export function unRefSearchContractReqBodyBuilder(v:Ref<SearchContractReqBodyBuilder>):SearchContractReqBodyBuilder
	export function emptyCustomValue():CustomValue
	export function emptyRefCustomValue():Ref<CustomValue>
	export function refOfCustomValue(x:CustomValue,v:Ref<CustomValue>)
	export function unRefCustomValue(v:Ref<CustomValue>):CustomValue
	export function emptyFormFieldVariableBoolValue():FormFieldVariableBoolValue
	export function emptyRefFormFieldVariableBoolValue():Ref<FormFieldVariableBoolValue>
	export function refOfFormFieldVariableBoolValue(x:FormFieldVariableBoolValue,v:Ref<FormFieldVariableBoolValue>)
	export function unRefFormFieldVariableBoolValue(v:Ref<FormFieldVariableBoolValue>):FormFieldVariableBoolValue
	export function emptyFormFieldVariableI18nValueBuilder():FormFieldVariableI18nValueBuilder
	export function emptyRefFormFieldVariableI18nValueBuilder():Ref<FormFieldVariableI18nValueBuilder>
	export function refOfFormFieldVariableI18nValueBuilder(x:FormFieldVariableI18nValueBuilder,v:Ref<FormFieldVariableI18nValueBuilder>)
	export function unRefFormFieldVariableI18nValueBuilder(v:Ref<FormFieldVariableI18nValueBuilder>):FormFieldVariableI18nValueBuilder
	export function emptyLocation():Location
	export function emptyRefLocation():Ref<Location>
	export function refOfLocation(x:Location,v:Ref<Location>)
	export function unRefLocation(v:Ref<Location>):Location
	export function emptyOnboardingTaskChangeBuilder():OnboardingTaskChangeBuilder
	export function emptyRefOnboardingTaskChangeBuilder():Ref<OnboardingTaskChangeBuilder>
	export function refOfOnboardingTaskChangeBuilder(x:OnboardingTaskChangeBuilder,v:Ref<OnboardingTaskChangeBuilder>)
	export function unRefOnboardingTaskChangeBuilder(v:Ref<OnboardingTaskChangeBuilder>):OnboardingTaskChangeBuilder
	export function emptySearchDepartmentResp():SearchDepartmentResp
	export function emptyRefSearchDepartmentResp():Ref<SearchDepartmentResp>
	export function refOfSearchDepartmentResp(x:SearchDepartmentResp,v:Ref<SearchDepartmentResp>)
	export function unRefSearchDepartmentResp(v:Ref<SearchDepartmentResp>):SearchDepartmentResp
	export function emptyBatchGetDepartmentRespData():BatchGetDepartmentRespData
	export function emptyRefBatchGetDepartmentRespData():Ref<BatchGetDepartmentRespData>
	export function refOfBatchGetDepartmentRespData(x:BatchGetDepartmentRespData,v:Ref<BatchGetDepartmentRespData>)
	export function unRefBatchGetDepartmentRespData(v:Ref<BatchGetDepartmentRespData>):BatchGetDepartmentRespData
	export function emptyChangeFieldPair():ChangeFieldPair
	export function emptyRefChangeFieldPair():Ref<ChangeFieldPair>
	export function refOfChangeFieldPair(x:ChangeFieldPair,v:Ref<ChangeFieldPair>)
	export function unRefChangeFieldPair(v:Ref<ChangeFieldPair>):ChangeFieldPair
	export function emptyFieldVariableValueToEnumBuilder():FieldVariableValueToEnumBuilder
	export function emptyRefFieldVariableValueToEnumBuilder():Ref<FieldVariableValueToEnumBuilder>
	export function refOfFieldVariableValueToEnumBuilder(x:FieldVariableValueToEnumBuilder,v:Ref<FieldVariableValueToEnumBuilder>)
	export function unRefFieldVariableValueToEnumBuilder(v:Ref<FieldVariableValueToEnumBuilder>):FieldVariableValueToEnumBuilder
	export function emptyProbationInfo():ProbationInfo
	export function emptyRefProbationInfo():Ref<ProbationInfo>
	export function refOfProbationInfo(x:ProbationInfo,v:Ref<ProbationInfo>)
	export function unRefProbationInfo(v:Ref<ProbationInfo>):ProbationInfo
	export function emptyProfileSettingFile():ProfileSettingFile
	export function emptyRefProfileSettingFile():Ref<ProfileSettingFile>
	export function refOfProfileSettingFile(x:ProfileSettingFile,v:Ref<ProfileSettingFile>)
	export function unRefProfileSettingFile(v:Ref<ProfileSettingFile>):ProfileSettingFile
	export function emptyBatchGetCompanyReqBuilder():BatchGetCompanyReqBuilder
	export function emptyRefBatchGetCompanyReqBuilder():Ref<BatchGetCompanyReqBuilder>
	export function refOfBatchGetCompanyReqBuilder(x:BatchGetCompanyReqBuilder,v:Ref<BatchGetCompanyReqBuilder>)
	export function unRefBatchGetCompanyReqBuilder(v:Ref<BatchGetCompanyReqBuilder>):BatchGetCompanyReqBuilder
	export function emptyLeaveGrantingRecord():LeaveGrantingRecord
	export function emptyRefLeaveGrantingRecord():Ref<LeaveGrantingRecord>
	export function refOfLeaveGrantingRecord(x:LeaveGrantingRecord,v:Ref<LeaveGrantingRecord>)
	export function unRefLeaveGrantingRecord(v:Ref<LeaveGrantingRecord>):LeaveGrantingRecord
	export function emptyListJobResp():ListJobResp
	export function emptyRefListJobResp():Ref<ListJobResp>
	export function refOfListJobResp(x:ListJobResp,v:Ref<ListJobResp>)
	export function unRefListJobResp(v:Ref<ListJobResp>):ListJobResp
	export function emptyBatchGetJobFamilyReqBody():BatchGetJobFamilyReqBody
	export function emptyRefBatchGetJobFamilyReqBody():Ref<BatchGetJobFamilyReqBody>
	export function refOfBatchGetJobFamilyReqBody(x:BatchGetJobFamilyReqBody,v:Ref<BatchGetJobFamilyReqBody>)
	export function unRefBatchGetJobFamilyReqBody(v:Ref<BatchGetJobFamilyReqBody>):BatchGetJobFamilyReqBody
	export function emptyInternationalAssignmentV2ForPatch():InternationalAssignmentV2ForPatch
	export function emptyRefInternationalAssignmentV2ForPatch():Ref<InternationalAssignmentV2ForPatch>
	export function refOfInternationalAssignmentV2ForPatch(x:InternationalAssignmentV2ForPatch,v:Ref<InternationalAssignmentV2ForPatch>)
	export function unRefInternationalAssignmentV2ForPatch(v:Ref<InternationalAssignmentV2ForPatch>):InternationalAssignmentV2ForPatch
	export function emptyPreHireEmploymentInfo():PreHireEmploymentInfo
	export function emptyRefPreHireEmploymentInfo():Ref<PreHireEmploymentInfo>
	export function refOfPreHireEmploymentInfo(x:PreHireEmploymentInfo,v:Ref<PreHireEmploymentInfo>)
	export function unRefPreHireEmploymentInfo(v:Ref<PreHireEmploymentInfo>):PreHireEmploymentInfo
	export function emptyBatchGetEmployeeReqBodyBuilder():BatchGetEmployeeReqBodyBuilder
	export function emptyRefBatchGetEmployeeReqBodyBuilder():Ref<BatchGetEmployeeReqBodyBuilder>
	export function refOfBatchGetEmployeeReqBodyBuilder(x:BatchGetEmployeeReqBodyBuilder,v:Ref<BatchGetEmployeeReqBodyBuilder>)
	export function unRefBatchGetEmployeeReqBodyBuilder(v:Ref<BatchGetEmployeeReqBodyBuilder>):BatchGetEmployeeReqBodyBuilder
	export function emptyCustomNameBuilder():CustomNameBuilder
	export function emptyRefCustomNameBuilder():Ref<CustomNameBuilder>
	export function refOfCustomNameBuilder(x:CustomNameBuilder,v:Ref<CustomNameBuilder>)
	export function unRefCustomNameBuilder(v:Ref<CustomNameBuilder>):CustomNameBuilder
	export function emptyDimensionIdInDataBuilder():DimensionIdInDataBuilder
	export function emptyRefDimensionIdInDataBuilder():Ref<DimensionIdInDataBuilder>
	export function refOfDimensionIdInDataBuilder(x:DimensionIdInDataBuilder,v:Ref<DimensionIdInDataBuilder>)
	export function unRefDimensionIdInDataBuilder(v:Ref<DimensionIdInDataBuilder>):DimensionIdInDataBuilder
	export function emptyBpmDataengineI18n():BpmDataengineI18n
	export function emptyRefBpmDataengineI18n():Ref<BpmDataengineI18n>
	export function refOfBpmDataengineI18n(x:BpmDataengineI18n,v:Ref<BpmDataengineI18n>)
	export function unRefBpmDataengineI18n(v:Ref<BpmDataengineI18n>):BpmDataengineI18n
	export function emptyLeaveBalanceBuilder():LeaveBalanceBuilder
	export function emptyRefLeaveBalanceBuilder():Ref<LeaveBalanceBuilder>
	export function refOfLeaveBalanceBuilder(x:LeaveBalanceBuilder,v:Ref<LeaveBalanceBuilder>)
	export function unRefLeaveBalanceBuilder(v:Ref<LeaveBalanceBuilder>):LeaveBalanceBuilder
	export function emptyProcessTodoItemBuilder():ProcessTodoItemBuilder
	export function emptyRefProcessTodoItemBuilder():Ref<ProcessTodoItemBuilder>
	export function refOfProcessTodoItemBuilder(x:ProcessTodoItemBuilder,v:Ref<ProcessTodoItemBuilder>)
	export function unRefProcessTodoItemBuilder(v:Ref<ProcessTodoItemBuilder>):ProcessTodoItemBuilder
	export function emptySearchBasicInfoCurrencyReq():SearchBasicInfoCurrencyReq
	export function emptyRefSearchBasicInfoCurrencyReq():Ref<SearchBasicInfoCurrencyReq>
	export function refOfSearchBasicInfoCurrencyReq(x:SearchBasicInfoCurrencyReq,v:Ref<SearchBasicInfoCurrencyReq>)
	export function unRefSearchBasicInfoCurrencyReq(v:Ref<SearchBasicInfoCurrencyReq>):SearchBasicInfoCurrencyReq
	export function emptySearchCostCenterResp():SearchCostCenterResp
	export function emptyRefSearchCostCenterResp():Ref<SearchCostCenterResp>
	export function refOfSearchCostCenterResp(x:SearchCostCenterResp,v:Ref<SearchCostCenterResp>)
	export function unRefSearchCostCenterResp(v:Ref<SearchCostCenterResp>):SearchCostCenterResp
	export function emptyBankBranch():BankBranch
	export function emptyRefBankBranch():Ref<BankBranch>
	export function refOfBankBranch(x:BankBranch,v:Ref<BankBranch>)
	export function unRefBankBranch(v:Ref<BankBranch>):BankBranch
	export function emptyBatchGetEmployeePathReqBodyBuilder():BatchGetEmployeePathReqBodyBuilder
	export function emptyRefBatchGetEmployeePathReqBodyBuilder():Ref<BatchGetEmployeePathReqBodyBuilder>
	export function refOfBatchGetEmployeePathReqBodyBuilder(x:BatchGetEmployeePathReqBodyBuilder,v:Ref<BatchGetEmployeePathReqBodyBuilder>)
	export function unRefBatchGetEmployeePathReqBodyBuilder(v:Ref<BatchGetEmployeePathReqBodyBuilder>):BatchGetEmployeePathReqBodyBuilder
	export function emptyBatchGetEmployeesBpRespData():BatchGetEmployeesBpRespData
	export function emptyRefBatchGetEmployeesBpRespData():Ref<BatchGetEmployeesBpRespData>
	export function refOfBatchGetEmployeesBpRespData(x:BatchGetEmployeesBpRespData,v:Ref<BatchGetEmployeesBpRespData>)
	export function unRefBatchGetEmployeesBpRespData(v:Ref<BatchGetEmployeesBpRespData>):BatchGetEmployeesBpRespData
	export function emptySearchDepartmentReqBodyBuilder():SearchDepartmentReqBodyBuilder
	export function emptyRefSearchDepartmentReqBodyBuilder():Ref<SearchDepartmentReqBodyBuilder>
	export function refOfSearchDepartmentReqBodyBuilder(x:SearchDepartmentReqBodyBuilder,v:Ref<SearchDepartmentReqBodyBuilder>)
	export function unRefSearchDepartmentReqBodyBuilder(v:Ref<SearchDepartmentReqBodyBuilder>):SearchDepartmentReqBodyBuilder
	export function emptyInternationalAssignmentV2ForPatchBuilder():InternationalAssignmentV2ForPatchBuilder
	export function emptyRefInternationalAssignmentV2ForPatchBuilder():Ref<InternationalAssignmentV2ForPatchBuilder>
	export function refOfInternationalAssignmentV2ForPatchBuilder(x:InternationalAssignmentV2ForPatchBuilder,v:Ref<InternationalAssignmentV2ForPatchBuilder>)
	export function unRefInternationalAssignmentV2ForPatchBuilder(v:Ref<InternationalAssignmentV2ForPatchBuilder>):InternationalAssignmentV2ForPatchBuilder
	export function emptyBasicInfoUpdateBuilder():BasicInfoUpdateBuilder
	export function emptyRefBasicInfoUpdateBuilder():Ref<BasicInfoUpdateBuilder>
	export function refOfBasicInfoUpdateBuilder(x:BasicInfoUpdateBuilder,v:Ref<BasicInfoUpdateBuilder>)
	export function unRefBasicInfoUpdateBuilder(v:Ref<BasicInfoUpdateBuilder>):BasicInfoUpdateBuilder
	export function emptyCalculateParamBuilder():CalculateParamBuilder
	export function emptyRefCalculateParamBuilder():Ref<CalculateParamBuilder>
	export function refOfCalculateParamBuilder(x:CalculateParamBuilder,v:Ref<CalculateParamBuilder>)
	export function unRefCalculateParamBuilder(v:Ref<CalculateParamBuilder>):CalculateParamBuilder
	export function emptyFieldVariableValueToBuilder():FieldVariableValueToBuilder
	export function emptyRefFieldVariableValueToBuilder():Ref<FieldVariableValueToBuilder>
	export function refOfFieldVariableValueToBuilder(x:FieldVariableValueToBuilder,v:Ref<FieldVariableValueToBuilder>)
	export function unRefFieldVariableValueToBuilder(v:Ref<FieldVariableValueToBuilder>):FieldVariableValueToBuilder
	export function emptySearchContractReqBody():SearchContractReqBody
	export function emptyRefSearchContractReqBody():Ref<SearchContractReqBody>
	export function refOfSearchContractReqBody(x:SearchContractReqBody,v:Ref<SearchContractReqBody>)
	export function unRefSearchContractReqBody(v:Ref<SearchContractReqBody>):SearchContractReqBody
	export function emptyCreatePreHireRespData():CreatePreHireRespData
	export function emptyRefCreatePreHireRespData():Ref<CreatePreHireRespData>
	export function refOfCreatePreHireRespData(x:CreatePreHireRespData,v:Ref<CreatePreHireRespData>)
	export function unRefCreatePreHireRespData(v:Ref<CreatePreHireRespData>):CreatePreHireRespData
	export function emptyDeleteCostCenterReqBody():DeleteCostCenterReqBody
	export function emptyRefDeleteCostCenterReqBody():Ref<DeleteCostCenterReqBody>
	export function refOfDeleteCostCenterReqBody(x:DeleteCostCenterReqBody,v:Ref<DeleteCostCenterReqBody>)
	export function unRefDeleteCostCenterReqBody(v:Ref<DeleteCostCenterReqBody>):DeleteCostCenterReqBody
	export function emptyPhoneForUpdate():PhoneForUpdate
	export function emptyRefPhoneForUpdate():Ref<PhoneForUpdate>
	export function refOfPhoneForUpdate(x:PhoneForUpdate,v:Ref<PhoneForUpdate>)
	export function unRefPhoneForUpdate(v:Ref<PhoneForUpdate>):PhoneForUpdate
	export function emptyPersonInfo():PersonInfo
	export function emptyRefPersonInfo():Ref<PersonInfo>
	export function refOfPersonInfo(x:PersonInfo,v:Ref<PersonInfo>)
	export function unRefPersonInfo(v:Ref<PersonInfo>):PersonInfo
	export function emptyProfileSettingDataAttachmentBuilder():ProfileSettingDataAttachmentBuilder
	export function emptyRefProfileSettingDataAttachmentBuilder():Ref<ProfileSettingDataAttachmentBuilder>
	export function refOfProfileSettingDataAttachmentBuilder(x:ProfileSettingDataAttachmentBuilder,v:Ref<ProfileSettingDataAttachmentBuilder>)
	export function unRefProfileSettingDataAttachmentBuilder(v:Ref<ProfileSettingDataAttachmentBuilder>):ProfileSettingDataAttachmentBuilder
	export function emptySearchBasicInfoBankBranchReqBodyBuilder():SearchBasicInfoBankBranchReqBodyBuilder
	export function emptyRefSearchBasicInfoBankBranchReqBodyBuilder():Ref<SearchBasicInfoBankBranchReqBodyBuilder>
	export function refOfSearchBasicInfoBankBranchReqBodyBuilder(x:SearchBasicInfoBankBranchReqBodyBuilder,v:Ref<SearchBasicInfoBankBranchReqBodyBuilder>)
	export function unRefSearchBasicInfoBankBranchReqBodyBuilder(v:Ref<SearchBasicInfoBankBranchReqBodyBuilder>):SearchBasicInfoBankBranchReqBodyBuilder
	export function emptySearchCostCenterRespData():SearchCostCenterRespData
	export function emptyRefSearchCostCenterRespData():Ref<SearchCostCenterRespData>
	export function refOfSearchCostCenterRespData(x:SearchCostCenterRespData,v:Ref<SearchCostCenterRespData>)
	export function unRefSearchCostCenterRespData(v:Ref<SearchCostCenterRespData>):SearchCostCenterRespData
	export function emptyAssessmentBuilder():AssessmentBuilder
	export function emptyRefAssessmentBuilder():Ref<AssessmentBuilder>
	export function refOfAssessmentBuilder(x:AssessmentBuilder,v:Ref<AssessmentBuilder>)
	export function unRefAssessmentBuilder(v:Ref<AssessmentBuilder>):AssessmentBuilder
	export function emptyInternationalAssignmentBuilder():InternationalAssignmentBuilder
	export function emptyRefInternationalAssignmentBuilder():Ref<InternationalAssignmentBuilder>
	export function refOfInternationalAssignmentBuilder(x:InternationalAssignmentBuilder,v:Ref<InternationalAssignmentBuilder>)
	export function unRefInternationalAssignmentBuilder(v:Ref<InternationalAssignmentBuilder>):InternationalAssignmentBuilder
	export function emptyPatchCostCenterReqBodyBuilder():PatchCostCenterReqBodyBuilder
	export function emptyRefPatchCostCenterReqBodyBuilder():Ref<PatchCostCenterReqBodyBuilder>
	export function refOfPatchCostCenterReqBodyBuilder(x:PatchCostCenterReqBodyBuilder,v:Ref<PatchCostCenterReqBodyBuilder>)
	export function unRefPatchCostCenterReqBodyBuilder(v:Ref<PatchCostCenterReqBodyBuilder>):PatchCostCenterReqBodyBuilder
	export function emptyWorkforcePlanDetailV2Builder():WorkforcePlanDetailV2Builder
	export function emptyRefWorkforcePlanDetailV2Builder():Ref<WorkforcePlanDetailV2Builder>
	export function refOfWorkforcePlanDetailV2Builder(x:WorkforcePlanDetailV2Builder,v:Ref<WorkforcePlanDetailV2Builder>)
	export function unRefWorkforcePlanDetailV2Builder(v:Ref<WorkforcePlanDetailV2Builder>):WorkforcePlanDetailV2Builder
	export function emptyBatchGetLocationReqBodyBuilder():BatchGetLocationReqBodyBuilder
	export function emptyRefBatchGetLocationReqBodyBuilder():Ref<BatchGetLocationReqBodyBuilder>
	export function refOfBatchGetLocationReqBodyBuilder(x:BatchGetLocationReqBodyBuilder,v:Ref<BatchGetLocationReqBodyBuilder>)
	export function unRefBatchGetLocationReqBodyBuilder(v:Ref<BatchGetLocationReqBodyBuilder>):BatchGetLocationReqBodyBuilder
	export function emptyCustomOrgUpdateBuilder():CustomOrgUpdateBuilder
	export function emptyRefCustomOrgUpdateBuilder():Ref<CustomOrgUpdateBuilder>
	export function refOfCustomOrgUpdateBuilder(x:CustomOrgUpdateBuilder,v:Ref<CustomOrgUpdateBuilder>)
	export function unRefCustomOrgUpdateBuilder(v:Ref<CustomOrgUpdateBuilder>):CustomOrgUpdateBuilder
	export function emptySearchDepartmentIterator():SearchDepartmentIterator
	export function emptyRefSearchDepartmentIterator():Ref<SearchDepartmentIterator>
	export function refOfSearchDepartmentIterator(x:SearchDepartmentIterator,v:Ref<SearchDepartmentIterator>)
	export function unRefSearchDepartmentIterator(v:Ref<SearchDepartmentIterator>):SearchDepartmentIterator
	export function emptySearchBasicInfoNationalityResp():SearchBasicInfoNationalityResp
	export function emptyRefSearchBasicInfoNationalityResp():Ref<SearchBasicInfoNationalityResp>
	export function refOfSearchBasicInfoNationalityResp(x:SearchBasicInfoNationalityResp,v:Ref<SearchBasicInfoNationalityResp>)
	export function unRefSearchBasicInfoNationalityResp(v:Ref<SearchBasicInfoNationalityResp>):SearchBasicInfoNationalityResp
	export function emptySearchEmployeeReq():SearchEmployeeReq
	export function emptyRefSearchEmployeeReq():Ref<SearchEmployeeReq>
	export function refOfSearchEmployeeReq(x:SearchEmployeeReq,v:Ref<SearchEmployeeReq>)
	export function unRefSearchEmployeeReq(v:Ref<SearchEmployeeReq>):SearchEmployeeReq
	export function emptyPersonNameBuilder():PersonNameBuilder
	export function emptyRefPersonNameBuilder():Ref<PersonNameBuilder>
	export function refOfPersonNameBuilder(x:PersonNameBuilder,v:Ref<PersonNameBuilder>)
	export function unRefPersonNameBuilder(v:Ref<PersonNameBuilder>):PersonNameBuilder
	export function emptyProfileSettingBankAccountBuilder():ProfileSettingBankAccountBuilder
	export function emptyRefProfileSettingBankAccountBuilder():Ref<ProfileSettingBankAccountBuilder>
	export function refOfProfileSettingBankAccountBuilder(x:ProfileSettingBankAccountBuilder,v:Ref<ProfileSettingBankAccountBuilder>)
	export function unRefProfileSettingBankAccountBuilder(v:Ref<ProfileSettingBankAccountBuilder>):ProfileSettingBankAccountBuilder
	export function emptyQueryTimelineDepartmentPathReqBodyBuilder():QueryTimelineDepartmentPathReqBodyBuilder
	export function emptyRefQueryTimelineDepartmentPathReqBodyBuilder():Ref<QueryTimelineDepartmentPathReqBodyBuilder>
	export function refOfQueryTimelineDepartmentPathReqBodyBuilder(x:QueryTimelineDepartmentPathReqBodyBuilder,v:Ref<QueryTimelineDepartmentPathReqBodyBuilder>)
	export function unRefQueryTimelineDepartmentPathReqBodyBuilder(v:Ref<QueryTimelineDepartmentPathReqBodyBuilder>):QueryTimelineDepartmentPathReqBodyBuilder
	export function emptyWorkEmailCheckResult():WorkEmailCheckResult
	export function emptyRefWorkEmailCheckResult():Ref<WorkEmailCheckResult>
	export function refOfWorkEmailCheckResult(x:WorkEmailCheckResult,v:Ref<WorkEmailCheckResult>)
	export function unRefWorkEmailCheckResult(v:Ref<WorkEmailCheckResult>):WorkEmailCheckResult
	export function emptyCreateCostCenterResp():CreateCostCenterResp
	export function emptyRefCreateCostCenterResp():Ref<CreateCostCenterResp>
	export function refOfCreateCostCenterResp(x:CreateCostCenterResp,v:Ref<CreateCostCenterResp>)
	export function unRefCreateCostCenterResp(v:Ref<CreateCostCenterResp>):CreateCostCenterResp
	export function emptyDimensionValue():DimensionValue
	export function emptyRefDimensionValue():Ref<DimensionValue>
	export function refOfDimensionValue(x:DimensionValue,v:Ref<DimensionValue>)
	export function unRefDimensionValue(v:Ref<DimensionValue>):DimensionValue
	export function emptyP2ProcessCcUpdatedV2():P2ProcessCcUpdatedV2
	export function emptyRefP2ProcessCcUpdatedV2():Ref<P2ProcessCcUpdatedV2>
	export function refOfP2ProcessCcUpdatedV2(x:P2ProcessCcUpdatedV2,v:Ref<P2ProcessCcUpdatedV2>)
	export function unRefP2ProcessCcUpdatedV2(v:Ref<P2ProcessCcUpdatedV2>):P2ProcessCcUpdatedV2
	export function emptySearchEmployeePathReqBodyBuilder():SearchEmployeePathReqBodyBuilder
	export function emptyRefSearchEmployeePathReqBodyBuilder():Ref<SearchEmployeePathReqBodyBuilder>
	export function refOfSearchEmployeePathReqBodyBuilder(x:SearchEmployeePathReqBodyBuilder,v:Ref<SearchEmployeePathReqBodyBuilder>)
	export function unRefSearchEmployeePathReqBodyBuilder(v:Ref<SearchEmployeePathReqBodyBuilder>):SearchEmployeePathReqBodyBuilder
	export function emptyAbnormalReasonI18nElementBuilder():AbnormalReasonI18nElementBuilder
	export function emptyRefAbnormalReasonI18nElementBuilder():Ref<AbnormalReasonI18nElementBuilder>
	export function refOfAbnormalReasonI18nElementBuilder(x:AbnormalReasonI18nElementBuilder,v:Ref<AbnormalReasonI18nElementBuilder>)
	export function unRefAbnormalReasonI18nElementBuilder(v:Ref<AbnormalReasonI18nElementBuilder>):AbnormalReasonI18nElementBuilder
	export function emptyBatchGetEmployeesBpReqBuilder():BatchGetEmployeesBpReqBuilder
	export function emptyRefBatchGetEmployeesBpReqBuilder():Ref<BatchGetEmployeesBpReqBuilder>
	export function refOfBatchGetEmployeesBpReqBuilder(x:BatchGetEmployeesBpReqBuilder,v:Ref<BatchGetEmployeesBpReqBuilder>)
	export function unRefBatchGetEmployeesBpReqBuilder(v:Ref<BatchGetEmployeesBpReqBuilder>):BatchGetEmployeesBpReqBuilder
	export function emptyEmailForUpdateBuilder():EmailForUpdateBuilder
	export function emptyRefEmailForUpdateBuilder():Ref<EmailForUpdateBuilder>
	export function refOfEmailForUpdateBuilder(x:EmailForUpdateBuilder,v:Ref<EmailForUpdateBuilder>)
	export function unRefEmailForUpdateBuilder(v:Ref<EmailForUpdateBuilder>):EmailForUpdateBuilder
	export function emptyProfileSettingAddressBuilder():ProfileSettingAddressBuilder
	export function emptyRefProfileSettingAddressBuilder():Ref<ProfileSettingAddressBuilder>
	export function refOfProfileSettingAddressBuilder(x:ProfileSettingAddressBuilder,v:Ref<ProfileSettingAddressBuilder>)
	export function unRefProfileSettingAddressBuilder(v:Ref<ProfileSettingAddressBuilder>):ProfileSettingAddressBuilder
	export function emptySearchBasicInfoBankBranchReqBuilder():SearchBasicInfoBankBranchReqBuilder
	export function emptyRefSearchBasicInfoBankBranchReqBuilder():Ref<SearchBasicInfoBankBranchReqBuilder>
	export function refOfSearchBasicInfoBankBranchReqBuilder(x:SearchBasicInfoBankBranchReqBuilder,v:Ref<SearchBasicInfoBankBranchReqBuilder>)
	export function unRefSearchBasicInfoBankBranchReqBuilder(v:Ref<SearchBasicInfoBankBranchReqBuilder>):SearchBasicInfoBankBranchReqBuilder
	export function emptySearchBasicInfoNationalityReqBody():SearchBasicInfoNationalityReqBody
	export function emptyRefSearchBasicInfoNationalityReqBody():Ref<SearchBasicInfoNationalityReqBody>
	export function refOfSearchBasicInfoNationalityReqBody(x:SearchBasicInfoNationalityReqBody,v:Ref<SearchBasicInfoNationalityReqBody>)
	export function unRefSearchBasicInfoNationalityReqBody(v:Ref<SearchBasicInfoNationalityReqBody>):SearchBasicInfoNationalityReqBody
	export function emptySearchContractRespData():SearchContractRespData
	export function emptyRefSearchContractRespData():Ref<SearchContractRespData>
	export function refOfSearchContractRespData(x:SearchContractRespData,v:Ref<SearchContractRespData>)
	export function unRefSearchContractRespData(v:Ref<SearchContractRespData>):SearchContractRespData
	export function emptyBatchGetLocationPathReqBodyBuilder():BatchGetLocationPathReqBodyBuilder
	export function emptyRefBatchGetLocationPathReqBodyBuilder():Ref<BatchGetLocationPathReqBodyBuilder>
	export function refOfBatchGetLocationPathReqBodyBuilder(x:BatchGetLocationPathReqBodyBuilder,v:Ref<BatchGetLocationPathReqBodyBuilder>)
	export function unRefBatchGetLocationPathReqBodyBuilder(v:Ref<BatchGetLocationPathReqBodyBuilder>):BatchGetLocationPathReqBodyBuilder
	export function emptyFormFieldVariableNumberValueBuilder():FormFieldVariableNumberValueBuilder
	export function emptyRefFormFieldVariableNumberValueBuilder():Ref<FormFieldVariableNumberValueBuilder>
	export function refOfFormFieldVariableNumberValueBuilder(x:FormFieldVariableNumberValueBuilder,v:Ref<FormFieldVariableNumberValueBuilder>)
	export function unRefFormFieldVariableNumberValueBuilder(v:Ref<FormFieldVariableNumberValueBuilder>):FormFieldVariableNumberValueBuilder
	export function emptyGetProcessReq():GetProcessReq
	export function emptyRefGetProcessReq():Ref<GetProcessReq>
	export function refOfGetProcessReq(x:GetProcessReq,v:Ref<GetProcessReq>)
	export function unRefGetProcessReq(v:Ref<GetProcessReq>):GetProcessReq
	export function emptyProfileSettingFileBuilder():ProfileSettingFileBuilder
	export function emptyRefProfileSettingFileBuilder():Ref<ProfileSettingFileBuilder>
	export function refOfProfileSettingFileBuilder(x:ProfileSettingFileBuilder,v:Ref<ProfileSettingFileBuilder>)
	export function unRefProfileSettingFileBuilder(v:Ref<ProfileSettingFileBuilder>):ProfileSettingFileBuilder
	export function emptySearchBasicInfoDistrictReqBody():SearchBasicInfoDistrictReqBody
	export function emptyRefSearchBasicInfoDistrictReqBody():Ref<SearchBasicInfoDistrictReqBody>
	export function refOfSearchBasicInfoDistrictReqBody(x:SearchBasicInfoDistrictReqBody,v:Ref<SearchBasicInfoDistrictReqBody>)
	export function unRefSearchBasicInfoDistrictReqBody(v:Ref<SearchBasicInfoDistrictReqBody>):SearchBasicInfoDistrictReqBody
	export function emptyApprovalGroupBuilder():ApprovalGroupBuilder
	export function emptyRefApprovalGroupBuilder():Ref<ApprovalGroupBuilder>
	export function refOfApprovalGroupBuilder(x:ApprovalGroupBuilder,v:Ref<ApprovalGroupBuilder>)
	export function unRefApprovalGroupBuilder(v:Ref<ApprovalGroupBuilder>):ApprovalGroupBuilder
	export function emptyEmailForUpdate():EmailForUpdate
	export function emptyRefEmailForUpdate():Ref<EmailForUpdate>
	export function refOfEmailForUpdate(x:EmailForUpdate,v:Ref<EmailForUpdate>)
	export function unRefEmailForUpdate(v:Ref<EmailForUpdate>):EmailForUpdate
	export function emptyPatchCostCenterReqBuilder():PatchCostCenterReqBuilder
	export function emptyRefPatchCostCenterReqBuilder():Ref<PatchCostCenterReqBuilder>
	export function refOfPatchCostCenterReqBuilder(x:PatchCostCenterReqBuilder,v:Ref<PatchCostCenterReqBuilder>)
	export function unRefPatchCostCenterReqBuilder(v:Ref<PatchCostCenterReqBuilder>):PatchCostCenterReqBuilder
	export function emptyEmailBuilder():EmailBuilder
	export function emptyRefEmailBuilder():Ref<EmailBuilder>
	export function refOfEmailBuilder(x:EmailBuilder,v:Ref<EmailBuilder>)
	export function unRefEmailBuilder(v:Ref<EmailBuilder>):EmailBuilder
	export function emptyQrCodeDimensionValue():QrCodeDimensionValue
	export function emptyRefQrCodeDimensionValue():Ref<QrCodeDimensionValue>
	export function refOfQrCodeDimensionValue(x:QrCodeDimensionValue,v:Ref<QrCodeDimensionValue>)
	export function unRefQrCodeDimensionValue(v:Ref<QrCodeDimensionValue>):QrCodeDimensionValue
	export function emptySearchProbationPathReqBodyBuilder():SearchProbationPathReqBodyBuilder
	export function emptyRefSearchProbationPathReqBodyBuilder():Ref<SearchProbationPathReqBodyBuilder>
	export function refOfSearchProbationPathReqBodyBuilder(x:SearchProbationPathReqBodyBuilder,v:Ref<SearchProbationPathReqBodyBuilder>)
	export function unRefSearchProbationPathReqBodyBuilder(v:Ref<SearchProbationPathReqBodyBuilder>):SearchProbationPathReqBodyBuilder
	export function emptyWorkforcePlanDetailBuilder():WorkforcePlanDetailBuilder
	export function emptyRefWorkforcePlanDetailBuilder():Ref<WorkforcePlanDetailBuilder>
	export function refOfWorkforcePlanDetailBuilder(x:WorkforcePlanDetailBuilder,v:Ref<WorkforcePlanDetailBuilder>)
	export function unRefWorkforcePlanDetailBuilder(v:Ref<WorkforcePlanDetailBuilder>):WorkforcePlanDetailBuilder
	export function emptyBatchGetEmployeesBpReq():BatchGetEmployeesBpReq
	export function emptyRefBatchGetEmployeesBpReq():Ref<BatchGetEmployeesBpReq>
	export function refOfBatchGetEmployeesBpReq(x:BatchGetEmployeesBpReq,v:Ref<BatchGetEmployeesBpReq>)
	export function unRefBatchGetEmployeesBpReq(v:Ref<BatchGetEmployeesBpReq>):BatchGetEmployeesBpReq
	export function emptyBatchGetJobLevelResp():BatchGetJobLevelResp
	export function emptyRefBatchGetJobLevelResp():Ref<BatchGetJobLevelResp>
	export function refOfBatchGetJobLevelResp(x:BatchGetJobLevelResp,v:Ref<BatchGetJobLevelResp>)
	export function unRefBatchGetJobLevelResp(v:Ref<BatchGetJobLevelResp>):BatchGetJobLevelResp
	export function emptyCreateProbationAssessmentReqBuilder():CreateProbationAssessmentReqBuilder
	export function emptyRefCreateProbationAssessmentReqBuilder():Ref<CreateProbationAssessmentReqBuilder>
	export function refOfCreateProbationAssessmentReqBuilder(x:CreateProbationAssessmentReqBuilder,v:Ref<CreateProbationAssessmentReqBuilder>)
	export function unRefCreateProbationAssessmentReqBuilder(v:Ref<CreateProbationAssessmentReqBuilder>):CreateProbationAssessmentReqBuilder
	export function emptyProcessTodoItem():ProcessTodoItem
	export function emptyRefProcessTodoItem():Ref<ProcessTodoItem>
	export function refOfProcessTodoItem(x:ProcessTodoItem,v:Ref<ProcessTodoItem>)
	export function unRefProcessTodoItem(v:Ref<ProcessTodoItem>):ProcessTodoItem
	export function emptyName():Name
	export function emptyRefName():Ref<Name>
	export function refOfName(x:Name,v:Ref<Name>)
	export function unRefName(v:Ref<Name>):Name
	export function emptyOfferInfoUpdateBuilder():OfferInfoUpdateBuilder
	export function emptyRefOfferInfoUpdateBuilder():Ref<OfferInfoUpdateBuilder>
	export function refOfOfferInfoUpdateBuilder(x:OfferInfoUpdateBuilder,v:Ref<OfferInfoUpdateBuilder>)
	export function unRefOfferInfoUpdateBuilder(v:Ref<OfferInfoUpdateBuilder>):OfferInfoUpdateBuilder
	export function emptyPersonInfoChnBuilder():PersonInfoChnBuilder
	export function emptyRefPersonInfoChnBuilder():Ref<PersonInfoChnBuilder>
	export function refOfPersonInfoChnBuilder(x:PersonInfoChnBuilder,v:Ref<PersonInfoChnBuilder>)
	export function unRefPersonInfoChnBuilder(v:Ref<PersonInfoChnBuilder>):PersonInfoChnBuilder
	export function emptyTranferEmploymentInfoBuilder():TranferEmploymentInfoBuilder
	export function emptyRefTranferEmploymentInfoBuilder():Ref<TranferEmploymentInfoBuilder>
	export function refOfTranferEmploymentInfoBuilder(x:TranferEmploymentInfoBuilder,v:Ref<TranferEmploymentInfoBuilder>)
	export function unRefTranferEmploymentInfoBuilder(v:Ref<TranferEmploymentInfoBuilder>):TranferEmploymentInfoBuilder
	export function emptyBatchGetEmployeeReq():BatchGetEmployeeReq
	export function emptyRefBatchGetEmployeeReq():Ref<BatchGetEmployeeReq>
	export function refOfBatchGetEmployeeReq(x:BatchGetEmployeeReq,v:Ref<BatchGetEmployeeReq>)
	export function unRefBatchGetEmployeeReq(v:Ref<BatchGetEmployeeReq>):BatchGetEmployeeReq
	export function emptyBatchGetLocationReq():BatchGetLocationReq
	export function emptyRefBatchGetLocationReq():Ref<BatchGetLocationReq>
	export function refOfBatchGetLocationReq(x:BatchGetLocationReq,v:Ref<BatchGetLocationReq>)
	export function unRefBatchGetLocationReq(v:Ref<BatchGetLocationReq>):BatchGetLocationReq
	export function emptyOfferInfoUpdate():OfferInfoUpdate
	export function emptyRefOfferInfoUpdate():Ref<OfferInfoUpdate>
	export function refOfOfferInfoUpdate(x:OfferInfoUpdate,v:Ref<OfferInfoUpdate>)
	export function unRefOfferInfoUpdate(v:Ref<OfferInfoUpdate>):OfferInfoUpdate
	export function emptyOrgRoleUpdateBuilder():OrgRoleUpdateBuilder
	export function emptyRefOrgRoleUpdateBuilder():Ref<OrgRoleUpdateBuilder>
	export function refOfOrgRoleUpdateBuilder(x:OrgRoleUpdateBuilder,v:Ref<OrgRoleUpdateBuilder>)
	export function unRefOrgRoleUpdateBuilder(v:Ref<OrgRoleUpdateBuilder>):OrgRoleUpdateBuilder
	export function emptyProfileSettingEmploymentInfo():ProfileSettingEmploymentInfo
	export function emptyRefProfileSettingEmploymentInfo():Ref<ProfileSettingEmploymentInfo>
	export function refOfProfileSettingEmploymentInfo(x:ProfileSettingEmploymentInfo,v:Ref<ProfileSettingEmploymentInfo>)
	export function unRefProfileSettingEmploymentInfo(v:Ref<ProfileSettingEmploymentInfo>):ProfileSettingEmploymentInfo
	export function emptyBatchGetEmployeeReqBuilder():BatchGetEmployeeReqBuilder
	export function emptyRefBatchGetEmployeeReqBuilder():Ref<BatchGetEmployeeReqBuilder>
	export function refOfBatchGetEmployeeReqBuilder(x:BatchGetEmployeeReqBuilder,v:Ref<BatchGetEmployeeReqBuilder>)
	export function unRefBatchGetEmployeeReqBuilder(v:Ref<BatchGetEmployeeReqBuilder>):BatchGetEmployeeReqBuilder
	export function emptyFieldVariableValueI18nBuilder():FieldVariableValueI18nBuilder
	export function emptyRefFieldVariableValueI18nBuilder():Ref<FieldVariableValueI18nBuilder>
	export function refOfFieldVariableValueI18nBuilder(x:FieldVariableValueI18nBuilder,v:Ref<FieldVariableValueI18nBuilder>)
	export function unRefFieldVariableValueI18nBuilder(v:Ref<FieldVariableValueI18nBuilder>):FieldVariableValueI18nBuilder
	export function emptyNationalityBuilder():NationalityBuilder
	export function emptyRefNationalityBuilder():Ref<NationalityBuilder>
	export function refOfNationalityBuilder(x:NationalityBuilder,v:Ref<NationalityBuilder>)
	export function unRefNationalityBuilder(v:Ref<NationalityBuilder>):NationalityBuilder
	export function emptySearchDepartmentRespData():SearchDepartmentRespData
	export function emptyRefSearchDepartmentRespData():Ref<SearchDepartmentRespData>
	export function refOfSearchDepartmentRespData(x:SearchDepartmentRespData,v:Ref<SearchDepartmentRespData>)
	export function unRefSearchDepartmentRespData(v:Ref<SearchDepartmentRespData>):SearchDepartmentRespData
	export function emptyGetByDepartmentBpReqBody():GetByDepartmentBpReqBody
	export function emptyRefGetByDepartmentBpReqBody():Ref<GetByDepartmentBpReqBody>
	export function refOfGetByDepartmentBpReqBody(x:GetByDepartmentBpReqBody,v:Ref<GetByDepartmentBpReqBody>)
	export function unRefGetByDepartmentBpReqBody(v:Ref<GetByDepartmentBpReqBody>):GetByDepartmentBpReqBody
	export function emptyQueryTimelineDepartmentReqBody():QueryTimelineDepartmentReqBody
	export function emptyRefQueryTimelineDepartmentReqBody():Ref<QueryTimelineDepartmentReqBody>
	export function refOfQueryTimelineDepartmentReqBody(x:QueryTimelineDepartmentReqBody,v:Ref<QueryTimelineDepartmentReqBody>)
	export function unRefQueryTimelineDepartmentReqBody(v:Ref<QueryTimelineDepartmentReqBody>):QueryTimelineDepartmentReqBody
	export function emptySearchBasicInfoNationalityIterator():SearchBasicInfoNationalityIterator
	export function emptyRefSearchBasicInfoNationalityIterator():Ref<SearchBasicInfoNationalityIterator>
	export function refOfSearchBasicInfoNationalityIterator(x:SearchBasicInfoNationalityIterator,v:Ref<SearchBasicInfoNationalityIterator>)
	export function unRefSearchBasicInfoNationalityIterator(v:Ref<SearchBasicInfoNationalityIterator>):SearchBasicInfoNationalityIterator
	export function emptyLeaveEmployExpireRecordBuilder():LeaveEmployExpireRecordBuilder
	export function emptyRefLeaveEmployExpireRecordBuilder():Ref<LeaveEmployExpireRecordBuilder>
	export function refOfLeaveEmployExpireRecordBuilder(x:LeaveEmployExpireRecordBuilder,v:Ref<LeaveEmployExpireRecordBuilder>)
	export function unRefLeaveEmployExpireRecordBuilder(v:Ref<LeaveEmployExpireRecordBuilder>):LeaveEmployExpireRecordBuilder
	export function emptyProfileSettingEmploymentRecordBuilder():ProfileSettingEmploymentRecordBuilder
	export function emptyRefProfileSettingEmploymentRecordBuilder():Ref<ProfileSettingEmploymentRecordBuilder>
	export function refOfProfileSettingEmploymentRecordBuilder(x:ProfileSettingEmploymentRecordBuilder,v:Ref<ProfileSettingEmploymentRecordBuilder>)
	export function unRefProfileSettingEmploymentRecordBuilder(v:Ref<ProfileSettingEmploymentRecordBuilder>):ProfileSettingEmploymentRecordBuilder
	export function emptyProfileSettingProbationInfo():ProfileSettingProbationInfo
	export function emptyRefProfileSettingProbationInfo():Ref<ProfileSettingProbationInfo>
	export function refOfProfileSettingProbationInfo(x:ProfileSettingProbationInfo,v:Ref<ProfileSettingProbationInfo>)
	export function unRefProfileSettingProbationInfo(v:Ref<ProfileSettingProbationInfo>):ProfileSettingProbationInfo
	export function emptyCustomFieldDataBuilder():CustomFieldDataBuilder
	export function emptyRefCustomFieldDataBuilder():Ref<CustomFieldDataBuilder>
	export function refOfCustomFieldDataBuilder(x:CustomFieldDataBuilder,v:Ref<CustomFieldDataBuilder>)
	export function unRefCustomFieldDataBuilder(v:Ref<CustomFieldDataBuilder>):CustomFieldDataBuilder
	export function emptyDeleteCostCenterVersionReqBodyBuilder():DeleteCostCenterVersionReqBodyBuilder
	export function emptyRefDeleteCostCenterVersionReqBodyBuilder():Ref<DeleteCostCenterVersionReqBodyBuilder>
	export function refOfDeleteCostCenterVersionReqBodyBuilder(x:DeleteCostCenterVersionReqBodyBuilder,v:Ref<DeleteCostCenterVersionReqBodyBuilder>)
	export function unRefDeleteCostCenterVersionReqBodyBuilder(v:Ref<DeleteCostCenterVersionReqBodyBuilder>):DeleteCostCenterVersionReqBodyBuilder
	export function emptyEmergencyContactBuilder():EmergencyContactBuilder
	export function emptyRefEmergencyContactBuilder():Ref<EmergencyContactBuilder>
	export function refOfEmergencyContactBuilder(x:EmergencyContactBuilder,v:Ref<EmergencyContactBuilder>)
	export function unRefEmergencyContactBuilder(v:Ref<EmergencyContactBuilder>):EmergencyContactBuilder
	export function emptyI18nV2Builder():I18nV2Builder
	export function emptyRefI18nV2Builder():Ref<I18nV2Builder>
	export function refOfI18nV2Builder(x:I18nV2Builder,v:Ref<I18nV2Builder>)
	export function unRefI18nV2Builder(v:Ref<I18nV2Builder>):I18nV2Builder
	export function emptyPatchPersonResp():PatchPersonResp
	export function emptyRefPatchPersonResp():Ref<PatchPersonResp>
	export function refOfPatchPersonResp(x:PatchPersonResp,v:Ref<PatchPersonResp>)
	export function unRefPatchPersonResp(v:Ref<PatchPersonResp>):PatchPersonResp
	export function emptyProbationInfoBuilder():ProbationInfoBuilder
	export function emptyRefProbationInfoBuilder():Ref<ProbationInfoBuilder>
	export function refOfProbationInfoBuilder(x:ProbationInfoBuilder,v:Ref<ProbationInfoBuilder>)
	export function unRefProbationInfoBuilder(v:Ref<ProbationInfoBuilder>):ProbationInfoBuilder
	export function emptyProfileSettingDataAttachment():ProfileSettingDataAttachment
	export function emptyRefProfileSettingDataAttachment():Ref<ProfileSettingDataAttachment>
	export function refOfProfileSettingDataAttachment(x:ProfileSettingDataAttachment,v:Ref<ProfileSettingDataAttachment>)
	export function unRefProfileSettingDataAttachment(v:Ref<ProfileSettingDataAttachment>):ProfileSettingDataAttachment
	export function emptySearchPreHirePathReqBodyBuilder():SearchPreHirePathReqBodyBuilder
	export function emptyRefSearchPreHirePathReqBodyBuilder():Ref<SearchPreHirePathReqBodyBuilder>
	export function refOfSearchPreHirePathReqBodyBuilder(x:SearchPreHirePathReqBodyBuilder,v:Ref<SearchPreHirePathReqBodyBuilder>)
	export function unRefSearchPreHirePathReqBodyBuilder(v:Ref<SearchPreHirePathReqBodyBuilder>):SearchPreHirePathReqBodyBuilder
	export function emptyBatchGetLocationReqBuilder():BatchGetLocationReqBuilder
	export function emptyRefBatchGetLocationReqBuilder():Ref<BatchGetLocationReqBuilder>
	export function refOfBatchGetLocationReqBuilder(x:BatchGetLocationReqBuilder,v:Ref<BatchGetLocationReqBuilder>)
	export function unRefBatchGetLocationReqBuilder(v:Ref<BatchGetLocationReqBuilder>):BatchGetLocationReqBuilder
	export function emptyDeleteCostCenterPathReqBodyBuilder():DeleteCostCenterPathReqBodyBuilder
	export function emptyRefDeleteCostCenterPathReqBodyBuilder():Ref<DeleteCostCenterPathReqBodyBuilder>
	export function refOfDeleteCostCenterPathReqBodyBuilder(x:DeleteCostCenterPathReqBodyBuilder,v:Ref<DeleteCostCenterPathReqBodyBuilder>)
	export function unRefDeleteCostCenterPathReqBodyBuilder(v:Ref<DeleteCostCenterPathReqBodyBuilder>):DeleteCostCenterPathReqBodyBuilder
	export function emptyDimensionIdInData():DimensionIdInData
	export function emptyRefDimensionIdInData():Ref<DimensionIdInData>
	export function refOfDimensionIdInData(x:DimensionIdInData,v:Ref<DimensionIdInData>)
	export function unRefDimensionIdInData(v:Ref<DimensionIdInData>):DimensionIdInData
	export function emptyWorkEmailInfoListBuilder():WorkEmailInfoListBuilder
	export function emptyRefWorkEmailInfoListBuilder():Ref<WorkEmailInfoListBuilder>
	export function refOfWorkEmailInfoListBuilder(x:WorkEmailInfoListBuilder,v:Ref<WorkEmailInfoListBuilder>)
	export function unRefWorkEmailInfoListBuilder(v:Ref<WorkEmailInfoListBuilder>):WorkEmailInfoListBuilder
	export function emptyDepartmentId():DepartmentId
	export function emptyRefDepartmentId():Ref<DepartmentId>
	export function refOfDepartmentId(x:DepartmentId,v:Ref<DepartmentId>)
	export function unRefDepartmentId(v:Ref<DepartmentId>):DepartmentId
	export function emptyDepartmentIdBuilder():DepartmentIdBuilder
	export function emptyRefDepartmentIdBuilder():Ref<DepartmentIdBuilder>
	export function refOfDepartmentIdBuilder(x:DepartmentIdBuilder,v:Ref<DepartmentIdBuilder>)
	export function unRefDepartmentIdBuilder(v:Ref<DepartmentIdBuilder>):DepartmentIdBuilder
	export function emptyPatchProbationAssessmentReq():PatchProbationAssessmentReq
	export function emptyRefPatchProbationAssessmentReq():Ref<PatchProbationAssessmentReq>
	export function refOfPatchProbationAssessmentReq(x:PatchProbationAssessmentReq,v:Ref<PatchProbationAssessmentReq>)
	export function unRefPatchProbationAssessmentReq(v:Ref<PatchProbationAssessmentReq>):PatchProbationAssessmentReq
	export function emptyPatchProbationAssessmentReqBuilder():PatchProbationAssessmentReqBuilder
	export function emptyRefPatchProbationAssessmentReqBuilder():Ref<PatchProbationAssessmentReqBuilder>
	export function refOfPatchProbationAssessmentReqBuilder(x:PatchProbationAssessmentReqBuilder,v:Ref<PatchProbationAssessmentReqBuilder>)
	export function unRefPatchProbationAssessmentReqBuilder(v:Ref<PatchProbationAssessmentReqBuilder>):PatchProbationAssessmentReqBuilder
	export function emptyPersonInfoBuilder():PersonInfoBuilder
	export function emptyRefPersonInfoBuilder():Ref<PersonInfoBuilder>
	export function refOfPersonInfoBuilder(x:PersonInfoBuilder,v:Ref<PersonInfoBuilder>)
	export function unRefPersonInfoBuilder(v:Ref<PersonInfoBuilder>):PersonInfoBuilder
	export function emptyAssessmentForCreateBuilder():AssessmentForCreateBuilder
	export function emptyRefAssessmentForCreateBuilder():Ref<AssessmentForCreateBuilder>
	export function refOfAssessmentForCreateBuilder(x:AssessmentForCreateBuilder,v:Ref<AssessmentForCreateBuilder>)
	export function unRefAssessmentForCreateBuilder(v:Ref<AssessmentForCreateBuilder>):AssessmentForCreateBuilder
	export function emptyBatchGetDepartmentReqBody():BatchGetDepartmentReqBody
	export function emptyRefBatchGetDepartmentReqBody():Ref<BatchGetDepartmentReqBody>
	export function refOfBatchGetDepartmentReqBody(x:BatchGetDepartmentReqBody,v:Ref<BatchGetDepartmentReqBody>)
	export function unRefBatchGetDepartmentReqBody(v:Ref<BatchGetDepartmentReqBody>):BatchGetDepartmentReqBody
	export function emptyCreatePersonRespData():CreatePersonRespData
	export function emptyRefCreatePersonRespData():Ref<CreatePersonRespData>
	export function refOfCreatePersonRespData(x:CreatePersonRespData,v:Ref<CreatePersonRespData>)
	export function unRefCreatePersonRespData(v:Ref<CreatePersonRespData>):CreatePersonRespData
	export function emptyPrehireUpdate():PrehireUpdate
	export function emptyRefPrehireUpdate():Ref<PrehireUpdate>
	export function refOfPrehireUpdate(x:PrehireUpdate,v:Ref<PrehireUpdate>)
	export function unRefPrehireUpdate(v:Ref<PrehireUpdate>):PrehireUpdate
	export function emptyReorganizationInfoBuilder():ReorganizationInfoBuilder
	export function emptyRefReorganizationInfoBuilder():Ref<ReorganizationInfoBuilder>
	export function refOfReorganizationInfoBuilder(x:ReorganizationInfoBuilder,v:Ref<ReorganizationInfoBuilder>)
	export function unRefReorganizationInfoBuilder(v:Ref<ReorganizationInfoBuilder>):ReorganizationInfoBuilder
	export function emptyPreHireOnboardingInfo():PreHireOnboardingInfo
	export function emptyRefPreHireOnboardingInfo():Ref<PreHireOnboardingInfo>
	export function refOfPreHireOnboardingInfo(x:PreHireOnboardingInfo,v:Ref<PreHireOnboardingInfo>)
	export function unRefPreHireOnboardingInfo(v:Ref<PreHireOnboardingInfo>):PreHireOnboardingInfo
	export function emptyProfileSettingPersonalBasicInfo():ProfileSettingPersonalBasicInfo
	export function emptyRefProfileSettingPersonalBasicInfo():Ref<ProfileSettingPersonalBasicInfo>
	export function refOfProfileSettingPersonalBasicInfo(x:ProfileSettingPersonalBasicInfo,v:Ref<ProfileSettingPersonalBasicInfo>)
	export function unRefProfileSettingPersonalBasicInfo(v:Ref<ProfileSettingPersonalBasicInfo>):ProfileSettingPersonalBasicInfo
	export function emptySearchEmployeeReqBody():SearchEmployeeReqBody
	export function emptyRefSearchEmployeeReqBody():Ref<SearchEmployeeReqBody>
	export function refOfSearchEmployeeReqBody(x:SearchEmployeeReqBody,v:Ref<SearchEmployeeReqBody>)
	export function unRefSearchEmployeeReqBody(v:Ref<SearchEmployeeReqBody>):SearchEmployeeReqBody
	export function emptyCustomValueBuilder():CustomValueBuilder
	export function emptyRefCustomValueBuilder():Ref<CustomValueBuilder>
	export function refOfCustomValueBuilder(x:CustomValueBuilder,v:Ref<CustomValueBuilder>)
	export function unRefCustomValueBuilder(v:Ref<CustomValueBuilder>):CustomValueBuilder
	export function emptyDeleteCostCenterVersionReqBody():DeleteCostCenterVersionReqBody
	export function emptyRefDeleteCostCenterVersionReqBody():Ref<DeleteCostCenterVersionReqBody>
	export function refOfDeleteCostCenterVersionReqBody(x:DeleteCostCenterVersionReqBody,v:Ref<DeleteCostCenterVersionReqBody>)
	export function unRefDeleteCostCenterVersionReqBody(v:Ref<DeleteCostCenterVersionReqBody>):DeleteCostCenterVersionReqBody
	export function emptyPatchPreHireReq():PatchPreHireReq
	export function emptyRefPatchPreHireReq():Ref<PatchPreHireReq>
	export function refOfPatchPreHireReq(x:PatchPreHireReq,v:Ref<PatchPreHireReq>)
	export function unRefPatchPreHireReq(v:Ref<PatchPreHireReq>):PatchPreHireReq
	export function emptyProfileSettingCareer():ProfileSettingCareer
	export function emptyRefProfileSettingCareer():Ref<ProfileSettingCareer>
	export function refOfProfileSettingCareer(x:ProfileSettingCareer,v:Ref<ProfileSettingCareer>)
	export function unRefProfileSettingCareer(v:Ref<ProfileSettingCareer>):ProfileSettingCareer
	export function emptySearchEmployeeReqBuilder():SearchEmployeeReqBuilder
	export function emptyRefSearchEmployeeReqBuilder():Ref<SearchEmployeeReqBuilder>
	export function refOfSearchEmployeeReqBuilder(x:SearchEmployeeReqBuilder,v:Ref<SearchEmployeeReqBuilder>)
	export function unRefSearchEmployeeReqBuilder(v:Ref<SearchEmployeeReqBuilder>):SearchEmployeeReqBuilder
	export function emptyLeaveEmployExpireRecord():LeaveEmployExpireRecord
	export function emptyRefLeaveEmployExpireRecord():Ref<LeaveEmployExpireRecord>
	export function refOfLeaveEmployExpireRecord(x:LeaveEmployExpireRecord,v:Ref<LeaveEmployExpireRecord>)
	export function unRefLeaveEmployExpireRecord(v:Ref<LeaveEmployExpireRecord>):LeaveEmployExpireRecord
	export function emptyNationalIdBuilder():NationalIdBuilder
	export function emptyRefNationalIdBuilder():Ref<NationalIdBuilder>
	export function refOfNationalIdBuilder(x:NationalIdBuilder,v:Ref<NationalIdBuilder>)
	export function unRefNationalIdBuilder(v:Ref<NationalIdBuilder>):NationalIdBuilder
	export function emptyP2ProbationUpdatedV2Data():P2ProbationUpdatedV2Data
	export function emptyRefP2ProbationUpdatedV2Data():Ref<P2ProbationUpdatedV2Data>
	export function refOfP2ProbationUpdatedV2Data(x:P2ProbationUpdatedV2Data,v:Ref<P2ProbationUpdatedV2Data>)
	export function unRefP2ProbationUpdatedV2Data(v:Ref<P2ProbationUpdatedV2Data>):P2ProbationUpdatedV2Data
	export function emptyResidentTaxBuilder():ResidentTaxBuilder
	export function emptyRefResidentTaxBuilder():Ref<ResidentTaxBuilder>
	export function refOfResidentTaxBuilder(x:ResidentTaxBuilder,v:Ref<ResidentTaxBuilder>)
	export function unRefResidentTaxBuilder(v:Ref<ResidentTaxBuilder>):ResidentTaxBuilder
	export function emptyCountryRegionSubdivision():CountryRegionSubdivision
	export function emptyRefCountryRegionSubdivision():Ref<CountryRegionSubdivision>
	export function refOfCountryRegionSubdivision(x:CountryRegionSubdivision,v:Ref<CountryRegionSubdivision>)
	export function unRefCountryRegionSubdivision(v:Ref<CountryRegionSubdivision>):CountryRegionSubdivision
	export function emptyProfileSettingCustomGroupItem():ProfileSettingCustomGroupItem
	export function emptyRefProfileSettingCustomGroupItem():Ref<ProfileSettingCustomGroupItem>
	export function refOfProfileSettingCustomGroupItem(x:ProfileSettingCustomGroupItem,v:Ref<ProfileSettingCustomGroupItem>)
	export function unRefProfileSettingCustomGroupItem(v:Ref<ProfileSettingCustomGroupItem>):ProfileSettingCustomGroupItem
	export function emptyQueryTimelineDepartmentReqBuilder():QueryTimelineDepartmentReqBuilder
	export function emptyRefQueryTimelineDepartmentReqBuilder():Ref<QueryTimelineDepartmentReqBuilder>
	export function refOfQueryTimelineDepartmentReqBuilder(x:QueryTimelineDepartmentReqBuilder,v:Ref<QueryTimelineDepartmentReqBuilder>)
	export function unRefQueryTimelineDepartmentReqBuilder(v:Ref<QueryTimelineDepartmentReqBuilder>):QueryTimelineDepartmentReqBuilder
	export function emptyProcessApproverBuilder():ProcessApproverBuilder
	export function emptyRefProcessApproverBuilder():Ref<ProcessApproverBuilder>
	export function refOfProcessApproverBuilder(x:ProcessApproverBuilder,v:Ref<ProcessApproverBuilder>)
	export function unRefProcessApproverBuilder(v:Ref<ProcessApproverBuilder>):ProcessApproverBuilder
	export function emptyBasicPersonInfo():BasicPersonInfo
	export function emptyRefBasicPersonInfo():Ref<BasicPersonInfo>
	export function refOfBasicPersonInfo(x:BasicPersonInfo,v:Ref<BasicPersonInfo>)
	export function unRefBasicPersonInfo(v:Ref<BasicPersonInfo>):BasicPersonInfo
	export function emptyBatchGetEmployeesJobDataReq():BatchGetEmployeesJobDataReq
	export function emptyRefBatchGetEmployeesJobDataReq():Ref<BatchGetEmployeesJobDataReq>
	export function refOfBatchGetEmployeesJobDataReq(x:BatchGetEmployeesJobDataReq,v:Ref<BatchGetEmployeesJobDataReq>)
	export function unRefBatchGetEmployeesJobDataReq(v:Ref<BatchGetEmployeesJobDataReq>):BatchGetEmployeesJobDataReq
	export function emptyFieldVariableValueBuilder():FieldVariableValueBuilder
	export function emptyRefFieldVariableValueBuilder():Ref<FieldVariableValueBuilder>
	export function refOfFieldVariableValueBuilder(x:FieldVariableValueBuilder,v:Ref<FieldVariableValueBuilder>)
	export function unRefFieldVariableValueBuilder(v:Ref<FieldVariableValueBuilder>):FieldVariableValueBuilder
	export function emptyPrehireUpdateBuilder():PrehireUpdateBuilder
	export function emptyRefPrehireUpdateBuilder():Ref<PrehireUpdateBuilder>
	export function refOfPrehireUpdateBuilder(x:PrehireUpdateBuilder,v:Ref<PrehireUpdateBuilder>)
	export function unRefPrehireUpdateBuilder(v:Ref<PrehireUpdateBuilder>):PrehireUpdateBuilder
	export function emptyProfileSettingPhoneBuilder():ProfileSettingPhoneBuilder
	export function emptyRefProfileSettingPhoneBuilder():Ref<ProfileSettingPhoneBuilder>
	export function refOfProfileSettingPhoneBuilder(x:ProfileSettingPhoneBuilder,v:Ref<ProfileSettingPhoneBuilder>)
	export function unRefProfileSettingPhoneBuilder(v:Ref<ProfileSettingPhoneBuilder>):ProfileSettingPhoneBuilder
	export function emptySearchEmployeeRespData():SearchEmployeeRespData
	export function emptyRefSearchEmployeeRespData():Ref<SearchEmployeeRespData>
	export function refOfSearchEmployeeRespData(x:SearchEmployeeRespData,v:Ref<SearchEmployeeRespData>)
	export function unRefSearchEmployeeRespData(v:Ref<SearchEmployeeRespData>):SearchEmployeeRespData
	export function emptyCreateProbationAssessmentPathReqBodyBuilder():CreateProbationAssessmentPathReqBodyBuilder
	export function emptyRefCreateProbationAssessmentPathReqBodyBuilder():Ref<CreateProbationAssessmentPathReqBodyBuilder>
	export function refOfCreateProbationAssessmentPathReqBodyBuilder(x:CreateProbationAssessmentPathReqBodyBuilder,v:Ref<CreateProbationAssessmentPathReqBodyBuilder>)
	export function unRefCreateProbationAssessmentPathReqBodyBuilder(v:Ref<CreateProbationAssessmentPathReqBodyBuilder>):CreateProbationAssessmentPathReqBodyBuilder
	export function emptyListBpReq():ListBpReq
	export function emptyRefListBpReq():Ref<ListBpReq>
	export function refOfListBpReq(x:ListBpReq,v:Ref<ListBpReq>)
	export function unRefListBpReq(v:Ref<ListBpReq>):ListBpReq
	export function emptyOfferInfo():OfferInfo
	export function emptyRefOfferInfo():Ref<OfferInfo>
	export function refOfOfferInfo(x:OfferInfo,v:Ref<OfferInfo>)
	export function unRefOfferInfo(v:Ref<OfferInfo>):OfferInfo
	export function emptyProfileSettingHukou():ProfileSettingHukou
	export function emptyRefProfileSettingHukou():Ref<ProfileSettingHukou>
	export function refOfProfileSettingHukou(x:ProfileSettingHukou,v:Ref<ProfileSettingHukou>)
	export function unRefProfileSettingHukou(v:Ref<ProfileSettingHukou>):ProfileSettingHukou
	export function emptySearchBasicInfoBankBranchRespData():SearchBasicInfoBankBranchRespData
	export function emptyRefSearchBasicInfoBankBranchRespData():Ref<SearchBasicInfoBankBranchRespData>
	export function refOfSearchBasicInfoBankBranchRespData(x:SearchBasicInfoBankBranchRespData,v:Ref<SearchBasicInfoBankBranchRespData>)
	export function unRefSearchBasicInfoBankBranchRespData(v:Ref<SearchBasicInfoBankBranchRespData>):SearchBasicInfoBankBranchRespData
	export function emptyCreatePersonReq():CreatePersonReq
	export function emptyRefCreatePersonReq():Ref<CreatePersonReq>
	export function refOfCreatePersonReq(x:CreatePersonReq,v:Ref<CreatePersonReq>)
	export function unRefCreatePersonReq(v:Ref<CreatePersonReq>):CreatePersonReq
	export function emptyOnboardingTask():OnboardingTask
	export function emptyRefOnboardingTask():Ref<OnboardingTask>
	export function refOfOnboardingTask(x:OnboardingTask,v:Ref<OnboardingTask>)
	export function unRefOnboardingTask(v:Ref<OnboardingTask>):OnboardingTask
	export function emptyProfileSettingEmergencyContact():ProfileSettingEmergencyContact
	export function emptyRefProfileSettingEmergencyContact():Ref<ProfileSettingEmergencyContact>
	export function refOfProfileSettingEmergencyContact(x:ProfileSettingEmergencyContact,v:Ref<ProfileSettingEmergencyContact>)
	export function unRefProfileSettingEmergencyContact(v:Ref<ProfileSettingEmergencyContact>):ProfileSettingEmergencyContact
	export function emptyFormFieldVariableBoolValueBuilder():FormFieldVariableBoolValueBuilder
	export function emptyRefFormFieldVariableBoolValueBuilder():Ref<FormFieldVariableBoolValueBuilder>
	export function refOfFormFieldVariableBoolValueBuilder(x:FormFieldVariableBoolValueBuilder,v:Ref<FormFieldVariableBoolValueBuilder>)
	export function unRefFormFieldVariableBoolValueBuilder(v:Ref<FormFieldVariableBoolValueBuilder>):FormFieldVariableBoolValueBuilder
	export function emptyHiberarchyCommon():HiberarchyCommon
	export function emptyRefHiberarchyCommon():Ref<HiberarchyCommon>
	export function refOfHiberarchyCommon(x:HiberarchyCommon,v:Ref<HiberarchyCommon>)
	export function unRefHiberarchyCommon(v:Ref<HiberarchyCommon>):HiberarchyCommon
	export function emptyJobDataCostCenter():JobDataCostCenter
	export function emptyRefJobDataCostCenter():Ref<JobDataCostCenter>
	export function refOfJobDataCostCenter(x:JobDataCostCenter,v:Ref<JobDataCostCenter>)
	export function unRefJobDataCostCenter(v:Ref<JobDataCostCenter>):JobDataCostCenter
	export function emptyParentsDepartmentReqBodyBuilder():ParentsDepartmentReqBodyBuilder
	export function emptyRefParentsDepartmentReqBodyBuilder():Ref<ParentsDepartmentReqBodyBuilder>
	export function refOfParentsDepartmentReqBodyBuilder(x:ParentsDepartmentReqBodyBuilder,v:Ref<ParentsDepartmentReqBodyBuilder>)
	export function unRefParentsDepartmentReqBodyBuilder(v:Ref<ParentsDepartmentReqBodyBuilder>):ParentsDepartmentReqBodyBuilder
	export function emptyPreHire():PreHire
	export function emptyRefPreHire():Ref<PreHire>
	export function refOfPreHire(x:PreHire,v:Ref<PreHire>)
	export function unRefPreHire(v:Ref<PreHire>):PreHire
	export function emptyDataengineI18n():DataengineI18n
	export function emptyRefDataengineI18n():Ref<DataengineI18n>
	export function refOfDataengineI18n(x:DataengineI18n,v:Ref<DataengineI18n>)
	export function unRefDataengineI18n(v:Ref<DataengineI18n>):DataengineI18n
	export function emptyDepartmentChange():DepartmentChange
	export function emptyRefDepartmentChange():Ref<DepartmentChange>
	export function refOfDepartmentChange(x:DepartmentChange,v:Ref<DepartmentChange>)
	export function unRefDepartmentChange(v:Ref<DepartmentChange>):DepartmentChange
	export function emptyEmployeeDomainEventDataBuilder():EmployeeDomainEventDataBuilder
	export function emptyRefEmployeeDomainEventDataBuilder():Ref<EmployeeDomainEventDataBuilder>
	export function refOfEmployeeDomainEventDataBuilder(x:EmployeeDomainEventDataBuilder,v:Ref<EmployeeDomainEventDataBuilder>)
	export function unRefEmployeeDomainEventDataBuilder(v:Ref<EmployeeDomainEventDataBuilder>):EmployeeDomainEventDataBuilder
	export function emptySearchJobChangeReqBody():SearchJobChangeReqBody
	export function emptyRefSearchJobChangeReqBody():Ref<SearchJobChangeReqBody>
	export function refOfSearchJobChangeReqBody(x:SearchJobChangeReqBody,v:Ref<SearchJobChangeReqBody>)
	export function unRefSearchJobChangeReqBody(v:Ref<SearchJobChangeReqBody>):SearchJobChangeReqBody
	export function emptyProfileSettingFieldErrorBuilder():ProfileSettingFieldErrorBuilder
	export function emptyRefProfileSettingFieldErrorBuilder():Ref<ProfileSettingFieldErrorBuilder>
	export function refOfProfileSettingFieldErrorBuilder(x:ProfileSettingFieldErrorBuilder,v:Ref<ProfileSettingFieldErrorBuilder>)
	export function unRefProfileSettingFieldErrorBuilder(v:Ref<ProfileSettingFieldErrorBuilder>):ProfileSettingFieldErrorBuilder
	export function emptyProfileSettingWorkExperience():ProfileSettingWorkExperience
	export function emptyRefProfileSettingWorkExperience():Ref<ProfileSettingWorkExperience>
	export function refOfProfileSettingWorkExperience(x:ProfileSettingWorkExperience,v:Ref<ProfileSettingWorkExperience>)
	export function unRefProfileSettingWorkExperience(v:Ref<ProfileSettingWorkExperience>):ProfileSettingWorkExperience
	export function emptySearchBasicInfoCurrencyReqBody():SearchBasicInfoCurrencyReqBody
	export function emptyRefSearchBasicInfoCurrencyReqBody():Ref<SearchBasicInfoCurrencyReqBody>
	export function refOfSearchBasicInfoCurrencyReqBody(x:SearchBasicInfoCurrencyReqBody,v:Ref<SearchBasicInfoCurrencyReqBody>)
	export function unRefSearchBasicInfoCurrencyReqBody(v:Ref<SearchBasicInfoCurrencyReqBody>):SearchBasicInfoCurrencyReqBody
	export function emptyProfileSettingPersonalRecordBuilder():ProfileSettingPersonalRecordBuilder
	export function emptyRefProfileSettingPersonalRecordBuilder():Ref<ProfileSettingPersonalRecordBuilder>
	export function refOfProfileSettingPersonalRecordBuilder(x:ProfileSettingPersonalRecordBuilder,v:Ref<ProfileSettingPersonalRecordBuilder>)
	export function unRefProfileSettingPersonalRecordBuilder(v:Ref<ProfileSettingPersonalRecordBuilder>):ProfileSettingPersonalRecordBuilder
	export function emptySearchContractPathReqBodyBuilder():SearchContractPathReqBodyBuilder
	export function emptyRefSearchContractPathReqBodyBuilder():Ref<SearchContractPathReqBodyBuilder>
	export function refOfSearchContractPathReqBodyBuilder(x:SearchContractPathReqBodyBuilder,v:Ref<SearchContractPathReqBodyBuilder>)
	export function unRefSearchContractPathReqBodyBuilder(v:Ref<SearchContractPathReqBodyBuilder>):SearchContractPathReqBodyBuilder
	export function emptyBp():Bp
	export function emptyRefBp():Ref<Bp>
	export function refOfBp(x:Bp,v:Ref<Bp>)
	export function unRefBp(v:Ref<Bp>):Bp
	export function emptyListBpResp():ListBpResp
	export function emptyRefListBpResp():Ref<ListBpResp>
	export function refOfListBpResp(x:ListBpResp,v:Ref<ListBpResp>)
	export function unRefListBpResp(v:Ref<ListBpResp>):ListBpResp
	export function emptyP2ProcessUpdatedV2():P2ProcessUpdatedV2
	export function emptyRefP2ProcessUpdatedV2():Ref<P2ProcessUpdatedV2>
	export function refOfP2ProcessUpdatedV2(x:P2ProcessUpdatedV2,v:Ref<P2ProcessUpdatedV2>)
	export function unRefP2ProcessUpdatedV2(v:Ref<P2ProcessUpdatedV2>):P2ProcessUpdatedV2
	export function emptyBasicInfo():BasicInfo
	export function emptyRefBasicInfo():Ref<BasicInfo>
	export function refOfBasicInfo(x:BasicInfo,v:Ref<BasicInfo>)
	export function unRefBasicInfo(v:Ref<BasicInfo>):BasicInfo
	export function emptyFieldVariableValueToRecord():FieldVariableValueToRecord
	export function emptyRefFieldVariableValueToRecord():Ref<FieldVariableValueToRecord>
	export function refOfFieldVariableValueToRecord(x:FieldVariableValueToRecord,v:Ref<FieldVariableValueToRecord>)
	export function unRefFieldVariableValueToRecord(v:Ref<FieldVariableValueToRecord>):FieldVariableValueToRecord
	export function emptyEmail():Email
	export function emptyRefEmail():Ref<Email>
	export function refOfEmail(x:Email,v:Ref<Email>)
	export function unRefEmail(v:Ref<Email>):Email
	export function emptyEnum():Enum
	export function emptyRefEnum():Ref<Enum>
	export function refOfEnum(x:Enum,v:Ref<Enum>)
	export function unRefEnum(v:Ref<Enum>):Enum
	export function emptyListBpRespData():ListBpRespData
	export function emptyRefListBpRespData():Ref<ListBpRespData>
	export function refOfListBpRespData(x:ListBpRespData,v:Ref<ListBpRespData>)
	export function unRefListBpRespData(v:Ref<ListBpRespData>):ListBpRespData
	export function emptyMatchRulesBuilder():MatchRulesBuilder
	export function emptyRefMatchRulesBuilder():Ref<MatchRulesBuilder>
	export function refOfMatchRulesBuilder(x:MatchRulesBuilder,v:Ref<MatchRulesBuilder>)
	export function unRefMatchRulesBuilder(v:Ref<MatchRulesBuilder>):MatchRulesBuilder
	export function emptyPreHireEmploymentInfoBuilder():PreHireEmploymentInfoBuilder
	export function emptyRefPreHireEmploymentInfoBuilder():Ref<PreHireEmploymentInfoBuilder>
	export function refOfPreHireEmploymentInfoBuilder(x:PreHireEmploymentInfoBuilder,v:Ref<PreHireEmploymentInfoBuilder>)
	export function unRefPreHireEmploymentInfoBuilder(v:Ref<PreHireEmploymentInfoBuilder>):PreHireEmploymentInfoBuilder
	export function emptyBasicEmployeeBuilder():BasicEmployeeBuilder
	export function emptyRefBasicEmployeeBuilder():Ref<BasicEmployeeBuilder>
	export function refOfBasicEmployeeBuilder(x:BasicEmployeeBuilder,v:Ref<BasicEmployeeBuilder>)
	export function unRefBasicEmployeeBuilder(v:Ref<BasicEmployeeBuilder>):BasicEmployeeBuilder
	export function emptyBatchGetJobFamilyResp():BatchGetJobFamilyResp
	export function emptyRefBatchGetJobFamilyResp():Ref<BatchGetJobFamilyResp>
	export function refOfBatchGetJobFamilyResp(x:BatchGetJobFamilyResp,v:Ref<BatchGetJobFamilyResp>)
	export function unRefBatchGetJobFamilyResp(v:Ref<BatchGetJobFamilyResp>):BatchGetJobFamilyResp
	export function emptyCustomOrgCreateBuilder():CustomOrgCreateBuilder
	export function emptyRefCustomOrgCreateBuilder():Ref<CustomOrgCreateBuilder>
	export function refOfCustomOrgCreateBuilder(x:CustomOrgCreateBuilder,v:Ref<CustomOrgCreateBuilder>)
	export function unRefCustomOrgCreateBuilder(v:Ref<CustomOrgCreateBuilder>):CustomOrgCreateBuilder
	export function emptySearchBasicInfoDistrictReq():SearchBasicInfoDistrictReq
	export function emptyRefSearchBasicInfoDistrictReq():Ref<SearchBasicInfoDistrictReq>
	export function refOfSearchBasicInfoDistrictReq(x:SearchBasicInfoDistrictReq,v:Ref<SearchBasicInfoDistrictReq>)
	export function unRefSearchBasicInfoDistrictReq(v:Ref<SearchBasicInfoDistrictReq>):SearchBasicInfoDistrictReq
	export function emptySearchEmployeeResp():SearchEmployeeResp
	export function emptyRefSearchEmployeeResp():Ref<SearchEmployeeResp>
	export function refOfSearchEmployeeResp(x:SearchEmployeeResp,v:Ref<SearchEmployeeResp>)
	export function unRefSearchEmployeeResp(v:Ref<SearchEmployeeResp>):SearchEmployeeResp
	export function emptyUserContact():UserContact
	export function emptyRefUserContact():Ref<UserContact>
	export function refOfUserContact(x:UserContact,v:Ref<UserContact>)
	export function unRefUserContact(v:Ref<UserContact>):UserContact
	export function emptyGetByDepartmentBpReq():GetByDepartmentBpReq
	export function emptyRefGetByDepartmentBpReq():Ref<GetByDepartmentBpReq>
	export function refOfGetByDepartmentBpReq(x:GetByDepartmentBpReq,v:Ref<GetByDepartmentBpReq>)
	export function unRefGetByDepartmentBpReq(v:Ref<GetByDepartmentBpReq>):GetByDepartmentBpReq
	export function emptyParentsDepartmentReq():ParentsDepartmentReq
	export function emptyRefParentsDepartmentReq():Ref<ParentsDepartmentReq>
	export function refOfParentsDepartmentReq(x:ParentsDepartmentReq,v:Ref<ParentsDepartmentReq>)
	export function unRefParentsDepartmentReq(v:Ref<ParentsDepartmentReq>):ParentsDepartmentReq
	export function emptyWorkEmail():WorkEmail
	export function emptyRefWorkEmail():Ref<WorkEmail>
	export function refOfWorkEmail(x:WorkEmail,v:Ref<WorkEmail>)
	export function unRefWorkEmail(v:Ref<WorkEmail>):WorkEmail
	export function emptySearchBasicInfoCityReqBody():SearchBasicInfoCityReqBody
	export function emptyRefSearchBasicInfoCityReqBody():Ref<SearchBasicInfoCityReqBody>
	export function refOfSearchBasicInfoCityReqBody(x:SearchBasicInfoCityReqBody,v:Ref<SearchBasicInfoCityReqBody>)
	export function unRefSearchBasicInfoCityReqBody(v:Ref<SearchBasicInfoCityReqBody>):SearchBasicInfoCityReqBody
	export function emptySearchBasicInfoDistrictIterator():SearchBasicInfoDistrictIterator
	export function emptyRefSearchBasicInfoDistrictIterator():Ref<SearchBasicInfoDistrictIterator>
	export function refOfSearchBasicInfoDistrictIterator(x:SearchBasicInfoDistrictIterator,v:Ref<SearchBasicInfoDistrictIterator>)
	export function unRefSearchBasicInfoDistrictIterator(v:Ref<SearchBasicInfoDistrictIterator>):SearchBasicInfoDistrictIterator
	export function emptyProfileSettingEmploymentBasicInfoBuilder():ProfileSettingEmploymentBasicInfoBuilder
	export function emptyRefProfileSettingEmploymentBasicInfoBuilder():Ref<ProfileSettingEmploymentBasicInfoBuilder>
	export function refOfProfileSettingEmploymentBasicInfoBuilder(x:ProfileSettingEmploymentBasicInfoBuilder,v:Ref<ProfileSettingEmploymentBasicInfoBuilder>)
	export function unRefProfileSettingEmploymentBasicInfoBuilder(v:Ref<ProfileSettingEmploymentBasicInfoBuilder>):ProfileSettingEmploymentBasicInfoBuilder
	export function emptyCityBuilder():CityBuilder
	export function emptyRefCityBuilder():Ref<CityBuilder>
	export function refOfCityBuilder(x:CityBuilder,v:Ref<CityBuilder>)
	export function unRefCityBuilder(v:Ref<CityBuilder>):CityBuilder
	export function emptyEducationBuilder():EducationBuilder
	export function emptyRefEducationBuilder():Ref<EducationBuilder>
	export function refOfEducationBuilder(x:EducationBuilder,v:Ref<EducationBuilder>)
	export function unRefEducationBuilder(v:Ref<EducationBuilder>):EducationBuilder
	export function emptyMatchRuleBuilder():MatchRuleBuilder
	export function emptyRefMatchRuleBuilder():Ref<MatchRuleBuilder>
	export function refOfMatchRuleBuilder(x:MatchRuleBuilder,v:Ref<MatchRuleBuilder>)
	export function unRefMatchRuleBuilder(v:Ref<MatchRuleBuilder>):MatchRuleBuilder
	export function emptyProfileSettingPersonalInfo():ProfileSettingPersonalInfo
	export function emptyRefProfileSettingPersonalInfo():Ref<ProfileSettingPersonalInfo>
	export function refOfProfileSettingPersonalInfo(x:ProfileSettingPersonalInfo,v:Ref<ProfileSettingPersonalInfo>)
	export function unRefProfileSettingPersonalInfo(v:Ref<ProfileSettingPersonalInfo>):ProfileSettingPersonalInfo
	export function emptyProfileSettingPhone():ProfileSettingPhone
	export function emptyRefProfileSettingPhone():Ref<ProfileSettingPhone>
	export function refOfProfileSettingPhone(x:ProfileSettingPhone,v:Ref<ProfileSettingPhone>)
	export function unRefProfileSettingPhone(v:Ref<ProfileSettingPhone>):ProfileSettingPhone
	export function emptySearchBasicInfoCountryRegionResp():SearchBasicInfoCountryRegionResp
	export function emptyRefSearchBasicInfoCountryRegionResp():Ref<SearchBasicInfoCountryRegionResp>
	export function refOfSearchBasicInfoCountryRegionResp(x:SearchBasicInfoCountryRegionResp,v:Ref<SearchBasicInfoCountryRegionResp>)
	export function unRefSearchBasicInfoCountryRegionResp(v:Ref<SearchBasicInfoCountryRegionResp>):SearchBasicInfoCountryRegionResp
	export function emptySearchPreHireRespData():SearchPreHireRespData
	export function emptyRefSearchPreHireRespData():Ref<SearchPreHireRespData>
	export function refOfSearchPreHireRespData(x:SearchPreHireRespData,v:Ref<SearchPreHireRespData>)
	export function unRefSearchPreHireRespData(v:Ref<SearchPreHireRespData>):SearchPreHireRespData
	export function emptyBatchGetCompanyReq():BatchGetCompanyReq
	export function emptyRefBatchGetCompanyReq():Ref<BatchGetCompanyReq>
	export function refOfBatchGetCompanyReq(x:BatchGetCompanyReq,v:Ref<BatchGetCompanyReq>)
	export function unRefBatchGetCompanyReq(v:Ref<BatchGetCompanyReq>):BatchGetCompanyReq
	export function emptyDimensionValueBuilder():DimensionValueBuilder
	export function emptyRefDimensionValueBuilder():Ref<DimensionValueBuilder>
	export function refOfDimensionValueBuilder(x:DimensionValueBuilder,v:Ref<DimensionValueBuilder>)
	export function unRefDimensionValueBuilder(v:Ref<DimensionValueBuilder>):DimensionValueBuilder
	export function emptyJobData():JobData
	export function emptyRefJobData():Ref<JobData>
	export function refOfJobData(x:JobData,v:Ref<JobData>)
	export function unRefJobData(v:Ref<JobData>):JobData
	export function emptyObjectFieldData():ObjectFieldData
	export function emptyRefObjectFieldData():Ref<ObjectFieldData>
	export function refOfObjectFieldData(x:ObjectFieldData,v:Ref<ObjectFieldData>)
	export function unRefObjectFieldData(v:Ref<ObjectFieldData>):ObjectFieldData
	export function emptyOnboardingFlowChange():OnboardingFlowChange
	export function emptyRefOnboardingFlowChange():Ref<OnboardingFlowChange>
	export function refOfOnboardingFlowChange(x:OnboardingFlowChange,v:Ref<OnboardingFlowChange>)
	export function unRefOnboardingFlowChange(v:Ref<OnboardingFlowChange>):OnboardingFlowChange
	export function emptyPreHireBuilder():PreHireBuilder
	export function emptyRefPreHireBuilder():Ref<PreHireBuilder>
	export function refOfPreHireBuilder(x:PreHireBuilder,v:Ref<PreHireBuilder>)
	export function unRefPreHireBuilder(v:Ref<PreHireBuilder>):PreHireBuilder
	export function emptySearchBasicInfoBankReqBuilder():SearchBasicInfoBankReqBuilder
	export function emptyRefSearchBasicInfoBankReqBuilder():Ref<SearchBasicInfoBankReqBuilder>
	export function refOfSearchBasicInfoBankReqBuilder(x:SearchBasicInfoBankReqBuilder,v:Ref<SearchBasicInfoBankReqBuilder>)
	export function unRefSearchBasicInfoBankReqBuilder(v:Ref<SearchBasicInfoBankReqBuilder>):SearchBasicInfoBankReqBuilder
	export function emptySearchBasicInfoCurrencyIterator():SearchBasicInfoCurrencyIterator
	export function emptyRefSearchBasicInfoCurrencyIterator():Ref<SearchBasicInfoCurrencyIterator>
	export function refOfSearchBasicInfoCurrencyIterator(x:SearchBasicInfoCurrencyIterator,v:Ref<SearchBasicInfoCurrencyIterator>)
	export function unRefSearchBasicInfoCurrencyIterator(v:Ref<SearchBasicInfoCurrencyIterator>):SearchBasicInfoCurrencyIterator
	export function emptyCreateProbationAssessmentRespData():CreateProbationAssessmentRespData
	export function emptyRefCreateProbationAssessmentRespData():Ref<CreateProbationAssessmentRespData>
	export function refOfCreateProbationAssessmentRespData(x:CreateProbationAssessmentRespData,v:Ref<CreateProbationAssessmentRespData>)
	export function unRefCreateProbationAssessmentRespData(v:Ref<CreateProbationAssessmentRespData>):CreateProbationAssessmentRespData
	export function emptyCustomOrgUpdate():CustomOrgUpdate
	export function emptyRefCustomOrgUpdate():Ref<CustomOrgUpdate>
	export function refOfCustomOrgUpdate(x:CustomOrgUpdate,v:Ref<CustomOrgUpdate>)
	export function unRefCustomOrgUpdate(v:Ref<CustomOrgUpdate>):CustomOrgUpdate
	export function emptyEducationInfo():EducationInfo
	export function emptyRefEducationInfo():Ref<EducationInfo>
	export function refOfEducationInfo(x:EducationInfo,v:Ref<EducationInfo>)
	export function unRefEducationInfo(v:Ref<EducationInfo>):EducationInfo
	export function emptyEducationInfoBuilder():EducationInfoBuilder
	export function emptyRefEducationInfoBuilder():Ref<EducationInfoBuilder>
	export function refOfEducationInfoBuilder(x:EducationInfoBuilder,v:Ref<EducationInfoBuilder>)
	export function unRefEducationInfoBuilder(v:Ref<EducationInfoBuilder>):EducationInfoBuilder
	export function emptySearchPreHireResp():SearchPreHireResp
	export function emptyRefSearchPreHireResp():Ref<SearchPreHireResp>
	export function refOfSearchPreHireResp(x:SearchPreHireResp,v:Ref<SearchPreHireResp>)
	export function unRefSearchPreHireResp(v:Ref<SearchPreHireResp>):SearchPreHireResp
	export function emptyDeleteProbationAssessmentReqBuilder():DeleteProbationAssessmentReqBuilder
	export function emptyRefDeleteProbationAssessmentReqBuilder():Ref<DeleteProbationAssessmentReqBuilder>
	export function refOfDeleteProbationAssessmentReqBuilder(x:DeleteProbationAssessmentReqBuilder,v:Ref<DeleteProbationAssessmentReqBuilder>)
	export function unRefDeleteProbationAssessmentReqBuilder(v:Ref<DeleteProbationAssessmentReqBuilder>):DeleteProbationAssessmentReqBuilder
	export function emptyDepartmentTimelineBuilder():DepartmentTimelineBuilder
	export function emptyRefDepartmentTimelineBuilder():Ref<DepartmentTimelineBuilder>
	export function refOfDepartmentTimelineBuilder(x:DepartmentTimelineBuilder,v:Ref<DepartmentTimelineBuilder>)
	export function unRefDepartmentTimelineBuilder(v:Ref<DepartmentTimelineBuilder>):DepartmentTimelineBuilder
	export function emptyDistrictBuilder():DistrictBuilder
	export function emptyRefDistrictBuilder():Ref<DistrictBuilder>
	export function refOfDistrictBuilder(x:DistrictBuilder,v:Ref<DistrictBuilder>)
	export function unRefDistrictBuilder(v:Ref<DistrictBuilder>):DistrictBuilder
	export function emptyBatchGetJobFamilyRespData():BatchGetJobFamilyRespData
	export function emptyRefBatchGetJobFamilyRespData():Ref<BatchGetJobFamilyRespData>
	export function refOfBatchGetJobFamilyRespData(x:BatchGetJobFamilyRespData,v:Ref<BatchGetJobFamilyRespData>)
	export function unRefBatchGetJobFamilyRespData(v:Ref<BatchGetJobFamilyRespData>):BatchGetJobFamilyRespData
	export function emptyGetProcessReqBuilder():GetProcessReqBuilder
	export function emptyRefGetProcessReqBuilder():Ref<GetProcessReqBuilder>
	export function refOfGetProcessReqBuilder(x:GetProcessReqBuilder,v:Ref<GetProcessReqBuilder>)
	export function unRefGetProcessReqBuilder(v:Ref<GetProcessReqBuilder>):GetProcessReqBuilder
	export function emptyGetProcessRespData():GetProcessRespData
	export function emptyRefGetProcessRespData():Ref<GetProcessRespData>
	export function refOfGetProcessRespData(x:GetProcessRespData,v:Ref<GetProcessRespData>)
	export function unRefGetProcessRespData(v:Ref<GetProcessRespData>):GetProcessRespData
	export function emptyLocationV2():LocationV2
	export function emptyRefLocationV2():Ref<LocationV2>
	export function refOfLocationV2(x:LocationV2,v:Ref<LocationV2>)
	export function unRefLocationV2(v:Ref<LocationV2>):LocationV2
	export function emptyPatchProbationAssessmentResp():PatchProbationAssessmentResp
	export function emptyRefPatchProbationAssessmentResp():Ref<PatchProbationAssessmentResp>
	export function refOfPatchProbationAssessmentResp(x:PatchProbationAssessmentResp,v:Ref<PatchProbationAssessmentResp>)
	export function unRefPatchProbationAssessmentResp(v:Ref<PatchProbationAssessmentResp>):PatchProbationAssessmentResp
	export function emptyPhoneNumberAndAreaCode():PhoneNumberAndAreaCode
	export function emptyRefPhoneNumberAndAreaCode():Ref<PhoneNumberAndAreaCode>
	export function refOfPhoneNumberAndAreaCode(x:PhoneNumberAndAreaCode,v:Ref<PhoneNumberAndAreaCode>)
	export function unRefPhoneNumberAndAreaCode(v:Ref<PhoneNumberAndAreaCode>):PhoneNumberAndAreaCode
	export function emptyProbationInfoForSubmit():ProbationInfoForSubmit
	export function emptyRefProbationInfoForSubmit():Ref<ProbationInfoForSubmit>
	export function refOfProbationInfoForSubmit(x:ProbationInfoForSubmit,v:Ref<ProbationInfoForSubmit>)
	export function unRefProbationInfoForSubmit(v:Ref<ProbationInfoForSubmit>):ProbationInfoForSubmit
	export function emptySearchBasicInfoBankReq():SearchBasicInfoBankReq
	export function emptyRefSearchBasicInfoBankReq():Ref<SearchBasicInfoBankReq>
	export function refOfSearchBasicInfoBankReq(x:SearchBasicInfoBankReq,v:Ref<SearchBasicInfoBankReq>)
	export function unRefSearchBasicInfoBankReq(v:Ref<SearchBasicInfoBankReq>):SearchBasicInfoBankReq
	export function emptyChangeFieldPairBuilder():ChangeFieldPairBuilder
	export function emptyRefChangeFieldPairBuilder():Ref<ChangeFieldPairBuilder>
	export function refOfChangeFieldPairBuilder(x:ChangeFieldPairBuilder,v:Ref<ChangeFieldPairBuilder>)
	export function unRefChangeFieldPairBuilder(v:Ref<ChangeFieldPairBuilder>):ChangeFieldPairBuilder
	export function emptyCitizenshipStatusBuilder():CitizenshipStatusBuilder
	export function emptyRefCitizenshipStatusBuilder():Ref<CitizenshipStatusBuilder>
	export function refOfCitizenshipStatusBuilder(x:CitizenshipStatusBuilder,v:Ref<CitizenshipStatusBuilder>)
	export function unRefCitizenshipStatusBuilder(v:Ref<CitizenshipStatusBuilder>):CitizenshipStatusBuilder
	export function emptyCreateCostCenterVersionRespData():CreateCostCenterVersionRespData
	export function emptyRefCreateCostCenterVersionRespData():Ref<CreateCostCenterVersionRespData>
	export function refOfCreateCostCenterVersionRespData(x:CreateCostCenterVersionRespData,v:Ref<CreateCostCenterVersionRespData>)
	export function unRefCreateCostCenterVersionRespData(v:Ref<CreateCostCenterVersionRespData>):CreateCostCenterVersionRespData
	export function emptyLeaveRequest():LeaveRequest
	export function emptyRefLeaveRequest():Ref<LeaveRequest>
	export function refOfLeaveRequest(x:LeaveRequest,v:Ref<LeaveRequest>)
	export function unRefLeaveRequest(v:Ref<LeaveRequest>):LeaveRequest
	export function emptyListJobRespData():ListJobRespData
	export function emptyRefListJobRespData():Ref<ListJobRespData>
	export function refOfListJobRespData(x:ListJobRespData,v:Ref<ListJobRespData>)
	export function unRefListJobRespData(v:Ref<ListJobRespData>):ListJobRespData
	export function emptyNameForUpdateBuilder():NameForUpdateBuilder
	export function emptyRefNameForUpdateBuilder():Ref<NameForUpdateBuilder>
	export function refOfNameForUpdateBuilder(x:NameForUpdateBuilder,v:Ref<NameForUpdateBuilder>)
	export function unRefNameForUpdateBuilder(v:Ref<NameForUpdateBuilder>):NameForUpdateBuilder
	export function emptySearchContractIterator():SearchContractIterator
	export function emptyRefSearchContractIterator():Ref<SearchContractIterator>
	export function refOfSearchContractIterator(x:SearchContractIterator,v:Ref<SearchContractIterator>)
	export function unRefSearchContractIterator(v:Ref<SearchContractIterator>):SearchContractIterator
	export function emptyCreatePreHireReq():CreatePreHireReq
	export function emptyRefCreatePreHireReq():Ref<CreatePreHireReq>
	export function refOfCreatePreHireReq(x:CreatePreHireReq,v:Ref<CreatePreHireReq>)
	export function unRefCreatePreHireReq(v:Ref<CreatePreHireReq>):CreatePreHireReq
	export function emptyCustomOrgBuilder():CustomOrgBuilder
	export function emptyRefCustomOrgBuilder():Ref<CustomOrgBuilder>
	export function refOfCustomOrgBuilder(x:CustomOrgBuilder,v:Ref<CustomOrgBuilder>)
	export function unRefCustomOrgBuilder(v:Ref<CustomOrgBuilder>):CustomOrgBuilder
	export function emptyLangTextBuilder():LangTextBuilder
	export function emptyRefLangTextBuilder():Ref<LangTextBuilder>
	export function refOfLangTextBuilder(x:LangTextBuilder,v:Ref<LangTextBuilder>)
	export function unRefLangTextBuilder(v:Ref<LangTextBuilder>):LangTextBuilder
	export function emptyPatchCostCenterVersionRespData():PatchCostCenterVersionRespData
	export function emptyRefPatchCostCenterVersionRespData():Ref<PatchCostCenterVersionRespData>
	export function refOfPatchCostCenterVersionRespData(x:PatchCostCenterVersionRespData,v:Ref<PatchCostCenterVersionRespData>)
	export function unRefPatchCostCenterVersionRespData(v:Ref<PatchCostCenterVersionRespData>):PatchCostCenterVersionRespData
	export function emptyProfileSettingEmergencyContactBuilder():ProfileSettingEmergencyContactBuilder
	export function emptyRefProfileSettingEmergencyContactBuilder():Ref<ProfileSettingEmergencyContactBuilder>
	export function refOfProfileSettingEmergencyContactBuilder(x:ProfileSettingEmergencyContactBuilder,v:Ref<ProfileSettingEmergencyContactBuilder>)
	export function unRefProfileSettingEmergencyContactBuilder(v:Ref<ProfileSettingEmergencyContactBuilder>):ProfileSettingEmergencyContactBuilder
	export function emptySearchBasicInfoDistrictRespData():SearchBasicInfoDistrictRespData
	export function emptyRefSearchBasicInfoDistrictRespData():Ref<SearchBasicInfoDistrictRespData>
	export function refOfSearchBasicInfoDistrictRespData(x:SearchBasicInfoDistrictRespData,v:Ref<SearchBasicInfoDistrictRespData>)
	export function unRefSearchBasicInfoDistrictRespData(v:Ref<SearchBasicInfoDistrictRespData>):SearchBasicInfoDistrictRespData
	export function emptyApprovalGroup():ApprovalGroup
	export function emptyRefApprovalGroup():Ref<ApprovalGroup>
	export function refOfApprovalGroup(x:ApprovalGroup,v:Ref<ApprovalGroup>)
	export function unRefApprovalGroup(v:Ref<ApprovalGroup>):ApprovalGroup
	export function emptyBatchGetEmployeesBpResp():BatchGetEmployeesBpResp
	export function emptyRefBatchGetEmployeesBpResp():Ref<BatchGetEmployeesBpResp>
	export function refOfBatchGetEmployeesBpResp(x:BatchGetEmployeesBpResp,v:Ref<BatchGetEmployeesBpResp>)
	export function unRefBatchGetEmployeesBpResp(v:Ref<BatchGetEmployeesBpResp>):BatchGetEmployeesBpResp
	export function emptyCountryRegionSubdivisionBuilder():CountryRegionSubdivisionBuilder
	export function emptyRefCountryRegionSubdivisionBuilder():Ref<CountryRegionSubdivisionBuilder>
	export function refOfCountryRegionSubdivisionBuilder(x:CountryRegionSubdivisionBuilder,v:Ref<CountryRegionSubdivisionBuilder>)
	export function unRefCountryRegionSubdivisionBuilder(v:Ref<CountryRegionSubdivisionBuilder>):CountryRegionSubdivisionBuilder
	export function emptyLeaveRequestBuilder():LeaveRequestBuilder
	export function emptyRefLeaveRequestBuilder():Ref<LeaveRequestBuilder>
	export function refOfLeaveRequestBuilder(x:LeaveRequestBuilder,v:Ref<LeaveRequestBuilder>)
	export function unRefLeaveRequestBuilder(v:Ref<LeaveRequestBuilder>):LeaveRequestBuilder
	export function emptyOnboardingTaskBuilder():OnboardingTaskBuilder
	export function emptyRefOnboardingTaskBuilder():Ref<OnboardingTaskBuilder>
	export function refOfOnboardingTaskBuilder(x:OnboardingTaskBuilder,v:Ref<OnboardingTaskBuilder>)
	export function unRefOnboardingTaskBuilder(v:Ref<OnboardingTaskBuilder>):OnboardingTaskBuilder
	export function emptyProfileSettingCustomFieldBuilder():ProfileSettingCustomFieldBuilder
	export function emptyRefProfileSettingCustomFieldBuilder():Ref<ProfileSettingCustomFieldBuilder>
	export function refOfProfileSettingCustomFieldBuilder(x:ProfileSettingCustomFieldBuilder,v:Ref<ProfileSettingCustomFieldBuilder>)
	export function unRefProfileSettingCustomFieldBuilder(v:Ref<ProfileSettingCustomFieldBuilder>):ProfileSettingCustomFieldBuilder
	export function emptyBankBranchBuilder():BankBranchBuilder
	export function emptyRefBankBranchBuilder():Ref<BankBranchBuilder>
	export function refOfBankBranchBuilder(x:BankBranchBuilder,v:Ref<BankBranchBuilder>)
	export function unRefBankBranchBuilder(v:Ref<BankBranchBuilder>):BankBranchBuilder
	export function emptyFieldVariableValue():FieldVariableValue
	export function emptyRefFieldVariableValue():Ref<FieldVariableValue>
	export function refOfFieldVariableValue(x:FieldVariableValue,v:Ref<FieldVariableValue>)
	export function unRefFieldVariableValue(v:Ref<FieldVariableValue>):FieldVariableValue
	export function emptyLeaveAccrualRecordBuilder():LeaveAccrualRecordBuilder
	export function emptyRefLeaveAccrualRecordBuilder():Ref<LeaveAccrualRecordBuilder>
	export function refOfLeaveAccrualRecordBuilder(x:LeaveAccrualRecordBuilder,v:Ref<LeaveAccrualRecordBuilder>)
	export function unRefLeaveAccrualRecordBuilder(v:Ref<LeaveAccrualRecordBuilder>):LeaveAccrualRecordBuilder
	export function emptyI18nBuilder():I18nBuilder
	export function emptyRefI18nBuilder():Ref<I18nBuilder>
	export function refOfI18nBuilder(x:I18nBuilder,v:Ref<I18nBuilder>)
	export function unRefI18nBuilder(v:Ref<I18nBuilder>):I18nBuilder
	export function emptyProfileSettingResidentTax():ProfileSettingResidentTax
	export function emptyRefProfileSettingResidentTax():Ref<ProfileSettingResidentTax>
	export function refOfProfileSettingResidentTax(x:ProfileSettingResidentTax,v:Ref<ProfileSettingResidentTax>)
	export function unRefProfileSettingResidentTax(v:Ref<ProfileSettingResidentTax>):ProfileSettingResidentTax
	export function emptySearchBasicInfoCurrencyRespData():SearchBasicInfoCurrencyRespData
	export function emptyRefSearchBasicInfoCurrencyRespData():Ref<SearchBasicInfoCurrencyRespData>
	export function refOfSearchBasicInfoCurrencyRespData(x:SearchBasicInfoCurrencyRespData,v:Ref<SearchBasicInfoCurrencyRespData>)
	export function unRefSearchBasicInfoCurrencyRespData(v:Ref<SearchBasicInfoCurrencyRespData>):SearchBasicInfoCurrencyRespData
	export function emptySearchCostCenterReq():SearchCostCenterReq
	export function emptyRefSearchCostCenterReq():Ref<SearchCostCenterReq>
	export function refOfSearchCostCenterReq(x:SearchCostCenterReq,v:Ref<SearchCostCenterReq>)
	export function unRefSearchCostCenterReq(v:Ref<SearchCostCenterReq>):SearchCostCenterReq
	export function emptyBankAccount():BankAccount
	export function emptyRefBankAccount():Ref<BankAccount>
	export function refOfBankAccount(x:BankAccount,v:Ref<BankAccount>)
	export function unRefBankAccount(v:Ref<BankAccount>):BankAccount
	export function emptyPatchPersonReq():PatchPersonReq
	export function emptyRefPatchPersonReq():Ref<PatchPersonReq>
	export function refOfPatchPersonReq(x:PatchPersonReq,v:Ref<PatchPersonReq>)
	export function unRefPatchPersonReq(v:Ref<PatchPersonReq>):PatchPersonReq
	export function emptySearchBasicInfoCountryRegionSubdivisionReq():SearchBasicInfoCountryRegionSubdivisionReq
	export function emptyRefSearchBasicInfoCountryRegionSubdivisionReq():Ref<SearchBasicInfoCountryRegionSubdivisionReq>
	export function refOfSearchBasicInfoCountryRegionSubdivisionReq(x:SearchBasicInfoCountryRegionSubdivisionReq,v:Ref<SearchBasicInfoCountryRegionSubdivisionReq>)
	export function unRefSearchBasicInfoCountryRegionSubdivisionReq(v:Ref<SearchBasicInfoCountryRegionSubdivisionReq>):SearchBasicInfoCountryRegionSubdivisionReq
	export function emptyQueryEmployeesJobDataRespData():QueryEmployeesJobDataRespData
	export function emptyRefQueryEmployeesJobDataRespData():Ref<QueryEmployeesJobDataRespData>
	export function refOfQueryEmployeesJobDataRespData(x:QueryEmployeesJobDataRespData,v:Ref<QueryEmployeesJobDataRespData>)
	export function unRefQueryEmployeesJobDataRespData(v:Ref<QueryEmployeesJobDataRespData>):QueryEmployeesJobDataRespData
	export function emptyBatchGetEmployeeReqBody():BatchGetEmployeeReqBody
	export function emptyRefBatchGetEmployeeReqBody():Ref<BatchGetEmployeeReqBody>
	export function refOfBatchGetEmployeeReqBody(x:BatchGetEmployeeReqBody,v:Ref<BatchGetEmployeeReqBody>)
	export function unRefBatchGetEmployeeReqBody(v:Ref<BatchGetEmployeeReqBody>):BatchGetEmployeeReqBody
	export function emptyListJobReqBuilder():ListJobReqBuilder
	export function emptyRefListJobReqBuilder():Ref<ListJobReqBuilder>
	export function refOfListJobReqBuilder(x:ListJobReqBuilder,v:Ref<ListJobReqBuilder>)
	export function unRefListJobReqBuilder(v:Ref<ListJobReqBuilder>):ListJobReqBuilder
	export function emptyProcessAbstractItemBuilder():ProcessAbstractItemBuilder
	export function emptyRefProcessAbstractItemBuilder():Ref<ProcessAbstractItemBuilder>
	export function refOfProcessAbstractItemBuilder(x:ProcessAbstractItemBuilder,v:Ref<ProcessAbstractItemBuilder>)
	export function unRefProcessAbstractItemBuilder(v:Ref<ProcessAbstractItemBuilder>):ProcessAbstractItemBuilder
	export function emptyProcessFormVariableBuilder():ProcessFormVariableBuilder
	export function emptyRefProcessFormVariableBuilder():Ref<ProcessFormVariableBuilder>
	export function refOfProcessFormVariableBuilder(x:ProcessFormVariableBuilder,v:Ref<ProcessFormVariableBuilder>)
	export function unRefProcessFormVariableBuilder(v:Ref<ProcessFormVariableBuilder>):ProcessFormVariableBuilder
	export function emptyProfileSettingResidentTaxBuilder():ProfileSettingResidentTaxBuilder
	export function emptyRefProfileSettingResidentTaxBuilder():Ref<ProfileSettingResidentTaxBuilder>
	export function refOfProfileSettingResidentTaxBuilder(x:ProfileSettingResidentTaxBuilder,v:Ref<ProfileSettingResidentTaxBuilder>)
	export function unRefProfileSettingResidentTaxBuilder(v:Ref<ProfileSettingResidentTaxBuilder>):ProfileSettingResidentTaxBuilder
	export function emptyQueryEmployeesJobDataReqBody():QueryEmployeesJobDataReqBody
	export function emptyRefQueryEmployeesJobDataReqBody():Ref<QueryEmployeesJobDataReqBody>
	export function refOfQueryEmployeesJobDataReqBody(x:QueryEmployeesJobDataReqBody,v:Ref<QueryEmployeesJobDataReqBody>)
	export function unRefQueryEmployeesJobDataReqBody(v:Ref<QueryEmployeesJobDataReqBody>):QueryEmployeesJobDataReqBody
	export function emptyQueryEmployeesJobDataPathReqBodyBuilder():QueryEmployeesJobDataPathReqBodyBuilder
	export function emptyRefQueryEmployeesJobDataPathReqBodyBuilder():Ref<QueryEmployeesJobDataPathReqBodyBuilder>
	export function refOfQueryEmployeesJobDataPathReqBodyBuilder(x:QueryEmployeesJobDataPathReqBodyBuilder,v:Ref<QueryEmployeesJobDataPathReqBodyBuilder>)
	export function unRefQueryEmployeesJobDataPathReqBodyBuilder(v:Ref<QueryEmployeesJobDataPathReqBodyBuilder>):QueryEmployeesJobDataPathReqBodyBuilder
	export function emptyReorganizationInfo():ReorganizationInfo
	export function emptyRefReorganizationInfo():Ref<ReorganizationInfo>
	export function refOfReorganizationInfo(x:ReorganizationInfo,v:Ref<ReorganizationInfo>)
	export function unRefReorganizationInfo(v:Ref<ReorganizationInfo>):ReorganizationInfo
	export function emptyAbnormalReasonBuilder():AbnormalReasonBuilder
	export function emptyRefAbnormalReasonBuilder():Ref<AbnormalReasonBuilder>
	export function refOfAbnormalReasonBuilder(x:AbnormalReasonBuilder,v:Ref<AbnormalReasonBuilder>)
	export function unRefAbnormalReasonBuilder(v:Ref<AbnormalReasonBuilder>):AbnormalReasonBuilder
	export function emptyAssessment():Assessment
	export function emptyRefAssessment():Ref<Assessment>
	export function refOfAssessment(x:Assessment,v:Ref<Assessment>)
	export function unRefAssessment(v:Ref<Assessment>):Assessment
	export function emptyBatchGetDepartmentPathReqBodyBuilder():BatchGetDepartmentPathReqBodyBuilder
	export function emptyRefBatchGetDepartmentPathReqBodyBuilder():Ref<BatchGetDepartmentPathReqBodyBuilder>
	export function refOfBatchGetDepartmentPathReqBodyBuilder(x:BatchGetDepartmentPathReqBodyBuilder,v:Ref<BatchGetDepartmentPathReqBodyBuilder>)
	export function unRefBatchGetDepartmentPathReqBodyBuilder(v:Ref<BatchGetDepartmentPathReqBodyBuilder>):BatchGetDepartmentPathReqBodyBuilder
	export function emptyV2():V2
	export function emptyRefV2():Ref<V2>
	export function refOfV2(x:V2,v:Ref<V2>)
	export function unRefV2(v:Ref<V2>):V2
	export function emptyWorkforcePlanDetailV2():WorkforcePlanDetailV2
	export function emptyRefWorkforcePlanDetailV2():Ref<WorkforcePlanDetailV2>
	export function refOfWorkforcePlanDetailV2(x:WorkforcePlanDetailV2,v:Ref<WorkforcePlanDetailV2>)
	export function unRefWorkforcePlanDetailV2(v:Ref<WorkforcePlanDetailV2>):WorkforcePlanDetailV2
	export function emptyHiberarchyCommonBuilder():HiberarchyCommonBuilder
	export function emptyRefHiberarchyCommonBuilder():Ref<HiberarchyCommonBuilder>
	export function refOfHiberarchyCommonBuilder(x:HiberarchyCommonBuilder,v:Ref<HiberarchyCommonBuilder>)
	export function unRefHiberarchyCommonBuilder(v:Ref<HiberarchyCommonBuilder>):HiberarchyCommonBuilder
	export function emptyP2ProbationUpdatedV2():P2ProbationUpdatedV2
	export function emptyRefP2ProbationUpdatedV2():Ref<P2ProbationUpdatedV2>
	export function refOfP2ProbationUpdatedV2(x:P2ProbationUpdatedV2,v:Ref<P2ProbationUpdatedV2>)
	export function unRefP2ProbationUpdatedV2(v:Ref<P2ProbationUpdatedV2>):P2ProbationUpdatedV2
	export function emptySearchContractResp():SearchContractResp
	export function emptyRefSearchContractResp():Ref<SearchContractResp>
	export function refOfSearchContractResp(x:SearchContractResp,v:Ref<SearchContractResp>)
	export function unRefSearchContractResp(v:Ref<SearchContractResp>):SearchContractResp
	export function emptyProfileSettingCostCenterBuilder():ProfileSettingCostCenterBuilder
	export function emptyRefProfileSettingCostCenterBuilder():Ref<ProfileSettingCostCenterBuilder>
	export function refOfProfileSettingCostCenterBuilder(x:ProfileSettingCostCenterBuilder,v:Ref<ProfileSettingCostCenterBuilder>)
	export function unRefProfileSettingCostCenterBuilder(v:Ref<ProfileSettingCostCenterBuilder>):ProfileSettingCostCenterBuilder
	export function emptySearchBasicInfoCountryRegionSubdivisionResp():SearchBasicInfoCountryRegionSubdivisionResp
	export function emptyRefSearchBasicInfoCountryRegionSubdivisionResp():Ref<SearchBasicInfoCountryRegionSubdivisionResp>
	export function refOfSearchBasicInfoCountryRegionSubdivisionResp(x:SearchBasicInfoCountryRegionSubdivisionResp,v:Ref<SearchBasicInfoCountryRegionSubdivisionResp>)
	export function unRefSearchBasicInfoCountryRegionSubdivisionResp(v:Ref<SearchBasicInfoCountryRegionSubdivisionResp>):SearchBasicInfoCountryRegionSubdivisionResp
	export function emptyCostCenterBuilder():CostCenterBuilder
	export function emptyRefCostCenterBuilder():Ref<CostCenterBuilder>
	export function refOfCostCenterBuilder(x:CostCenterBuilder,v:Ref<CostCenterBuilder>)
	export function unRefCostCenterBuilder(v:Ref<CostCenterBuilder>):CostCenterBuilder
	export function emptyCreateProbationAssessmentResp():CreateProbationAssessmentResp
	export function emptyRefCreateProbationAssessmentResp():Ref<CreateProbationAssessmentResp>
	export function refOfCreateProbationAssessmentResp(x:CreateProbationAssessmentResp,v:Ref<CreateProbationAssessmentResp>)
	export function unRefCreateProbationAssessmentResp(v:Ref<CreateProbationAssessmentResp>):CreateProbationAssessmentResp
	export function emptyListProcessReq():ListProcessReq
	export function emptyRefListProcessReq():Ref<ListProcessReq>
	export function refOfListProcessReq(x:ListProcessReq,v:Ref<ListProcessReq>)
	export function unRefListProcessReq(v:Ref<ListProcessReq>):ListProcessReq
	export function emptyDimensionInfoBuilder():DimensionInfoBuilder
	export function emptyRefDimensionInfoBuilder():Ref<DimensionInfoBuilder>
	export function refOfDimensionInfoBuilder(x:DimensionInfoBuilder,v:Ref<DimensionInfoBuilder>)
	export function unRefDimensionInfoBuilder(v:Ref<DimensionInfoBuilder>):DimensionInfoBuilder
	export function emptyEnableDisableAssessmentProbationReqBody():EnableDisableAssessmentProbationReqBody
	export function emptyRefEnableDisableAssessmentProbationReqBody():Ref<EnableDisableAssessmentProbationReqBody>
	export function refOfEnableDisableAssessmentProbationReqBody(x:EnableDisableAssessmentProbationReqBody,v:Ref<EnableDisableAssessmentProbationReqBody>)
	export function unRefEnableDisableAssessmentProbationReqBody(v:Ref<EnableDisableAssessmentProbationReqBody>):EnableDisableAssessmentProbationReqBody
	export function emptyListBpIterator():ListBpIterator
	export function emptyRefListBpIterator():Ref<ListBpIterator>
	export function refOfListBpIterator(x:ListBpIterator,v:Ref<ListBpIterator>)
	export function unRefListBpIterator(v:Ref<ListBpIterator>):ListBpIterator
	export function emptyMatchRules():MatchRules
	export function emptyRefMatchRules():Ref<MatchRules>
	export function refOfMatchRules(x:MatchRules,v:Ref<MatchRules>)
	export function unRefMatchRules(v:Ref<MatchRules>):MatchRules
	export function emptyNationality():Nationality
	export function emptyRefNationality():Ref<Nationality>
	export function refOfNationality(x:Nationality,v:Ref<Nationality>)
	export function unRefNationality(v:Ref<Nationality>):Nationality
	export function emptyBatchGetEmployeesJobDataResp():BatchGetEmployeesJobDataResp
	export function emptyRefBatchGetEmployeesJobDataResp():Ref<BatchGetEmployeesJobDataResp>
	export function refOfBatchGetEmployeesJobDataResp(x:BatchGetEmployeesJobDataResp,v:Ref<BatchGetEmployeesJobDataResp>)
	export function unRefBatchGetEmployeesJobDataResp(v:Ref<BatchGetEmployeesJobDataResp>):BatchGetEmployeesJobDataResp
	export function emptyBatchGetJobLevelReqBodyBuilder():BatchGetJobLevelReqBodyBuilder
	export function emptyRefBatchGetJobLevelReqBodyBuilder():Ref<BatchGetJobLevelReqBodyBuilder>
	export function refOfBatchGetJobLevelReqBodyBuilder(x:BatchGetJobLevelReqBodyBuilder,v:Ref<BatchGetJobLevelReqBodyBuilder>)
	export function unRefBatchGetJobLevelReqBodyBuilder(v:Ref<BatchGetJobLevelReqBodyBuilder>):BatchGetJobLevelReqBodyBuilder
	export function emptyDeleteCostCenterVersionPathReqBodyBuilder():DeleteCostCenterVersionPathReqBodyBuilder
	export function emptyRefDeleteCostCenterVersionPathReqBodyBuilder():Ref<DeleteCostCenterVersionPathReqBodyBuilder>
	export function refOfDeleteCostCenterVersionPathReqBodyBuilder(x:DeleteCostCenterVersionPathReqBodyBuilder,v:Ref<DeleteCostCenterVersionPathReqBodyBuilder>)
	export function unRefDeleteCostCenterVersionPathReqBodyBuilder(v:Ref<DeleteCostCenterVersionPathReqBodyBuilder>):DeleteCostCenterVersionPathReqBodyBuilder
	export function emptySignatureFile():SignatureFile
	export function emptyRefSignatureFile():Ref<SignatureFile>
	export function refOfSignatureFile(x:SignatureFile,v:Ref<SignatureFile>)
	export function unRefSignatureFile(v:Ref<SignatureFile>):SignatureFile
	export function emptyOrgRoleBuilder():OrgRoleBuilder
	export function emptyRefOrgRoleBuilder():Ref<OrgRoleBuilder>
	export function refOfOrgRoleBuilder(x:OrgRoleBuilder,v:Ref<OrgRoleBuilder>)
	export function unRefOrgRoleBuilder(v:Ref<OrgRoleBuilder>):OrgRoleBuilder
	export function emptyP2ProcessNodeUpdatedV2():P2ProcessNodeUpdatedV2
	export function emptyRefP2ProcessNodeUpdatedV2():Ref<P2ProcessNodeUpdatedV2>
	export function refOfP2ProcessNodeUpdatedV2(x:P2ProcessNodeUpdatedV2,v:Ref<P2ProcessNodeUpdatedV2>)
	export function unRefP2ProcessNodeUpdatedV2(v:Ref<P2ProcessNodeUpdatedV2>):P2ProcessNodeUpdatedV2
	export function emptySearchBasicInfoCityReq():SearchBasicInfoCityReq
	export function emptyRefSearchBasicInfoCityReq():Ref<SearchBasicInfoCityReq>
	export function refOfSearchBasicInfoCityReq(x:SearchBasicInfoCityReq,v:Ref<SearchBasicInfoCityReq>)
	export function unRefSearchBasicInfoCityReq(v:Ref<SearchBasicInfoCityReq>):SearchBasicInfoCityReq
	export function emptySearchPreHireReqBuilder():SearchPreHireReqBuilder
	export function emptyRefSearchPreHireReqBuilder():Ref<SearchPreHireReqBuilder>
	export function refOfSearchPreHireReqBuilder(x:SearchPreHireReqBuilder,v:Ref<SearchPreHireReqBuilder>)
	export function unRefSearchPreHireReqBuilder(v:Ref<SearchPreHireReqBuilder>):SearchPreHireReqBuilder
	export function emptyAssessmentForCreate():AssessmentForCreate
	export function emptyRefAssessmentForCreate():Ref<AssessmentForCreate>
	export function refOfAssessmentForCreate(x:AssessmentForCreate,v:Ref<AssessmentForCreate>)
	export function unRefAssessmentForCreate(v:Ref<AssessmentForCreate>):AssessmentForCreate
	export function emptyCreateCostCenterReq():CreateCostCenterReq
	export function emptyRefCreateCostCenterReq():Ref<CreateCostCenterReq>
	export function refOfCreateCostCenterReq(x:CreateCostCenterReq,v:Ref<CreateCostCenterReq>)
	export function unRefCreateCostCenterReq(v:Ref<CreateCostCenterReq>):CreateCostCenterReq
	export function emptyOnboardingFlowBuilder():OnboardingFlowBuilder
	export function emptyRefOnboardingFlowBuilder():Ref<OnboardingFlowBuilder>
	export function refOfOnboardingFlowBuilder(x:OnboardingFlowBuilder,v:Ref<OnboardingFlowBuilder>)
	export function unRefOnboardingFlowBuilder(v:Ref<OnboardingFlowBuilder>):OnboardingFlowBuilder
	export function emptyFieldVariableValueI18n():FieldVariableValueI18n
	export function emptyRefFieldVariableValueI18n():Ref<FieldVariableValueI18n>
	export function refOfFieldVariableValueI18n(x:FieldVariableValueI18n,v:Ref<FieldVariableValueI18n>)
	export function unRefFieldVariableValueI18n(v:Ref<FieldVariableValueI18n>):FieldVariableValueI18n
	export function emptyGetJobRespData():GetJobRespData
	export function emptyRefGetJobRespData():Ref<GetJobRespData>
	export function refOfGetJobRespData(x:GetJobRespData,v:Ref<GetJobRespData>)
	export function unRefGetJobRespData(v:Ref<GetJobRespData>):GetJobRespData
	export function emptySearchBasicInfoBankBranchIterator():SearchBasicInfoBankBranchIterator
	export function emptyRefSearchBasicInfoBankBranchIterator():Ref<SearchBasicInfoBankBranchIterator>
	export function refOfSearchBasicInfoBankBranchIterator(x:SearchBasicInfoBankBranchIterator,v:Ref<SearchBasicInfoBankBranchIterator>)
	export function unRefSearchBasicInfoBankBranchIterator(v:Ref<SearchBasicInfoBankBranchIterator>):SearchBasicInfoBankBranchIterator
	export function emptyCreateCostCenterRespData():CreateCostCenterRespData
	export function emptyRefCreateCostCenterRespData():Ref<CreateCostCenterRespData>
	export function refOfCreateCostCenterRespData(x:CreateCostCenterRespData,v:Ref<CreateCostCenterRespData>)
	export function unRefCreateCostCenterRespData(v:Ref<CreateCostCenterRespData>):CreateCostCenterRespData
	export function emptyCreatePreHireReqBuilder():CreatePreHireReqBuilder
	export function emptyRefCreatePreHireReqBuilder():Ref<CreatePreHireReqBuilder>
	export function refOfCreatePreHireReqBuilder(x:CreatePreHireReqBuilder,v:Ref<CreatePreHireReqBuilder>)
	export function unRefCreatePreHireReqBuilder(v:Ref<CreatePreHireReqBuilder>):CreatePreHireReqBuilder
	export function emptyCreateProbationAssessmentReq():CreateProbationAssessmentReq
	export function emptyRefCreateProbationAssessmentReq():Ref<CreateProbationAssessmentReq>
	export function refOfCreateProbationAssessmentReq(x:CreateProbationAssessmentReq,v:Ref<CreateProbationAssessmentReq>)
	export function unRefCreateProbationAssessmentReq(v:Ref<CreateProbationAssessmentReq>):CreateProbationAssessmentReq
	export function emptyWorkEmailBuilder():WorkEmailBuilder
	export function emptyRefWorkEmailBuilder():Ref<WorkEmailBuilder>
	export function refOfWorkEmailBuilder(x:WorkEmailBuilder,v:Ref<WorkEmailBuilder>)
	export function unRefWorkEmailBuilder(v:Ref<WorkEmailBuilder>):WorkEmailBuilder
	export function emptyBatchGetJobLevelReqBody():BatchGetJobLevelReqBody
	export function emptyRefBatchGetJobLevelReqBody():Ref<BatchGetJobLevelReqBody>
	export function refOfBatchGetJobLevelReqBody(x:BatchGetJobLevelReqBody,v:Ref<BatchGetJobLevelReqBody>)
	export function unRefBatchGetJobLevelReqBody(v:Ref<BatchGetJobLevelReqBody>):BatchGetJobLevelReqBody
	export function emptyGetProcessFormVariableDataResp():GetProcessFormVariableDataResp
	export function emptyRefGetProcessFormVariableDataResp():Ref<GetProcessFormVariableDataResp>
	export function refOfGetProcessFormVariableDataResp(x:GetProcessFormVariableDataResp,v:Ref<GetProcessFormVariableDataResp>)
	export function unRefGetProcessFormVariableDataResp(v:Ref<GetProcessFormVariableDataResp>):GetProcessFormVariableDataResp
	export function emptySearchContractReq():SearchContractReq
	export function emptyRefSearchContractReq():Ref<SearchContractReq>
	export function refOfSearchContractReq(x:SearchContractReq,v:Ref<SearchContractReq>)
	export function unRefSearchContractReq(v:Ref<SearchContractReq>):SearchContractReq
	export function emptyProcessCcItem():ProcessCcItem
	export function emptyRefProcessCcItem():Ref<ProcessCcItem>
	export function refOfProcessCcItem(x:ProcessCcItem,v:Ref<ProcessCcItem>)
	export function unRefProcessCcItem(v:Ref<ProcessCcItem>):ProcessCcItem
	export function emptyProfileSettingName():ProfileSettingName
	export function emptyRefProfileSettingName():Ref<ProfileSettingName>
	export function refOfProfileSettingName(x:ProfileSettingName,v:Ref<ProfileSettingName>)
	export function unRefProfileSettingName(v:Ref<ProfileSettingName>):ProfileSettingName
	export function emptyWorkEmailCheckResultBuilder():WorkEmailCheckResultBuilder
	export function emptyRefWorkEmailCheckResultBuilder():Ref<WorkEmailCheckResultBuilder>
	export function refOfWorkEmailCheckResultBuilder(x:WorkEmailCheckResultBuilder,v:Ref<WorkEmailCheckResultBuilder>)
	export function unRefWorkEmailCheckResultBuilder(v:Ref<WorkEmailCheckResultBuilder>):WorkEmailCheckResultBuilder
	export function emptyCitizenshipStatus():CitizenshipStatus
	export function emptyRefCitizenshipStatus():Ref<CitizenshipStatus>
	export function refOfCitizenshipStatus(x:CitizenshipStatus,v:Ref<CitizenshipStatus>)
	export function unRefCitizenshipStatus(v:Ref<CitizenshipStatus>):CitizenshipStatus
	export function emptyPersonalProfileBuilder():PersonalProfileBuilder
	export function emptyRefPersonalProfileBuilder():Ref<PersonalProfileBuilder>
	export function refOfPersonalProfileBuilder(x:PersonalProfileBuilder,v:Ref<PersonalProfileBuilder>)
	export function unRefPersonalProfileBuilder(v:Ref<PersonalProfileBuilder>):PersonalProfileBuilder
	export function emptyProfileSettingCostCenter():ProfileSettingCostCenter
	export function emptyRefProfileSettingCostCenter():Ref<ProfileSettingCostCenter>
	export function refOfProfileSettingCostCenter(x:ProfileSettingCostCenter,v:Ref<ProfileSettingCostCenter>)
	export function unRefProfileSettingCostCenter(v:Ref<ProfileSettingCostCenter>):ProfileSettingCostCenter
	export function emptySearchBasicInfoDistrictReqBodyBuilder():SearchBasicInfoDistrictReqBodyBuilder
	export function emptyRefSearchBasicInfoDistrictReqBodyBuilder():Ref<SearchBasicInfoDistrictReqBodyBuilder>
	export function refOfSearchBasicInfoDistrictReqBodyBuilder(x:SearchBasicInfoDistrictReqBodyBuilder,v:Ref<SearchBasicInfoDistrictReqBodyBuilder>)
	export function unRefSearchBasicInfoDistrictReqBodyBuilder(v:Ref<SearchBasicInfoDistrictReqBodyBuilder>):SearchBasicInfoDistrictReqBodyBuilder
	export function emptySearchBasicInfoDistrictResp():SearchBasicInfoDistrictResp
	export function emptyRefSearchBasicInfoDistrictResp():Ref<SearchBasicInfoDistrictResp>
	export function refOfSearchBasicInfoDistrictResp(x:SearchBasicInfoDistrictResp,v:Ref<SearchBasicInfoDistrictResp>)
	export function unRefSearchBasicInfoDistrictResp(v:Ref<SearchBasicInfoDistrictResp>):SearchBasicInfoDistrictResp
	export function emptySearchEmployeeIterator():SearchEmployeeIterator
	export function emptyRefSearchEmployeeIterator():Ref<SearchEmployeeIterator>
	export function refOfSearchEmployeeIterator(x:SearchEmployeeIterator,v:Ref<SearchEmployeeIterator>)
	export function unRefSearchEmployeeIterator(v:Ref<SearchEmployeeIterator>):SearchEmployeeIterator
	export function emptySearchEmployeeReqBodyBuilder():SearchEmployeeReqBodyBuilder
	export function emptyRefSearchEmployeeReqBodyBuilder():Ref<SearchEmployeeReqBodyBuilder>
	export function refOfSearchEmployeeReqBodyBuilder(x:SearchEmployeeReqBodyBuilder,v:Ref<SearchEmployeeReqBodyBuilder>)
	export function unRefSearchEmployeeReqBodyBuilder(v:Ref<SearchEmployeeReqBodyBuilder>):SearchEmployeeReqBodyBuilder
	export function emptyPatchCostCenterReq():PatchCostCenterReq
	export function emptyRefPatchCostCenterReq():Ref<PatchCostCenterReq>
	export function refOfPatchCostCenterReq(x:PatchCostCenterReq,v:Ref<PatchCostCenterReq>)
	export function unRefPatchCostCenterReq(v:Ref<PatchCostCenterReq>):PatchCostCenterReq
	export function emptyProcessApprover():ProcessApprover
	export function emptyRefProcessApprover():Ref<ProcessApprover>
	export function refOfProcessApprover(x:ProcessApprover,v:Ref<ProcessApprover>)
	export function unRefProcessApprover(v:Ref<ProcessApprover>):ProcessApprover
	export function emptyProcessFormVariableV2Builder():ProcessFormVariableV2Builder
	export function emptyRefProcessFormVariableV2Builder():Ref<ProcessFormVariableV2Builder>
	export function refOfProcessFormVariableV2Builder(x:ProcessFormVariableV2Builder,v:Ref<ProcessFormVariableV2Builder>)
	export function unRefProcessFormVariableV2Builder(v:Ref<ProcessFormVariableV2Builder>):ProcessFormVariableV2Builder
	export function emptyFieldVariableValueToObject():FieldVariableValueToObject
	export function emptyRefFieldVariableValueToObject():Ref<FieldVariableValueToObject>
	export function refOfFieldVariableValueToObject(x:FieldVariableValueToObject,v:Ref<FieldVariableValueToObject>)
	export function unRefFieldVariableValueToObject(v:Ref<FieldVariableValueToObject>):FieldVariableValueToObject
	export function emptyTransferInfoBuilder():TransferInfoBuilder
	export function emptyRefTransferInfoBuilder():Ref<TransferInfoBuilder>
	export function refOfTransferInfoBuilder(x:TransferInfoBuilder,v:Ref<TransferInfoBuilder>)
	export function unRefTransferInfoBuilder(v:Ref<TransferInfoBuilder>):TransferInfoBuilder
	export function emptyBatchGetJobLevelReq():BatchGetJobLevelReq
	export function emptyRefBatchGetJobLevelReq():Ref<BatchGetJobLevelReq>
	export function refOfBatchGetJobLevelReq(x:BatchGetJobLevelReq,v:Ref<BatchGetJobLevelReq>)
	export function unRefBatchGetJobLevelReq(v:Ref<BatchGetJobLevelReq>):BatchGetJobLevelReq
	export function emptyDeletePreHireReq():DeletePreHireReq
	export function emptyRefDeletePreHireReq():Ref<DeletePreHireReq>
	export function refOfDeletePreHireReq(x:DeletePreHireReq,v:Ref<DeletePreHireReq>)
	export function unRefDeletePreHireReq(v:Ref<DeletePreHireReq>):DeletePreHireReq
	export function emptyDependentBuilder():DependentBuilder
	export function emptyRefDependentBuilder():Ref<DependentBuilder>
	export function refOfDependentBuilder(x:DependentBuilder,v:Ref<DependentBuilder>)
	export function unRefDependentBuilder(v:Ref<DependentBuilder>):DependentBuilder
	export function emptyOrgRole():OrgRole
	export function emptyRefOrgRole():Ref<OrgRole>
	export function refOfOrgRole(x:OrgRole,v:Ref<OrgRole>)
	export function unRefOrgRole(v:Ref<OrgRole>):OrgRole
	export function emptyProfileSettingEmpContractRecordBuilder():ProfileSettingEmpContractRecordBuilder
	export function emptyRefProfileSettingEmpContractRecordBuilder():Ref<ProfileSettingEmpContractRecordBuilder>
	export function refOfProfileSettingEmpContractRecordBuilder(x:ProfileSettingEmpContractRecordBuilder,v:Ref<ProfileSettingEmpContractRecordBuilder>)
	export function unRefProfileSettingEmpContractRecordBuilder(v:Ref<ProfileSettingEmpContractRecordBuilder>):ProfileSettingEmpContractRecordBuilder
	export function emptySearchBasicInfoCountryRegionRespData():SearchBasicInfoCountryRegionRespData
	export function emptyRefSearchBasicInfoCountryRegionRespData():Ref<SearchBasicInfoCountryRegionRespData>
	export function refOfSearchBasicInfoCountryRegionRespData(x:SearchBasicInfoCountryRegionRespData,v:Ref<SearchBasicInfoCountryRegionRespData>)
	export function unRefSearchBasicInfoCountryRegionRespData(v:Ref<SearchBasicInfoCountryRegionRespData>):SearchBasicInfoCountryRegionRespData
	export function emptyProfileSettingEmpBasicInfoForUpdate():ProfileSettingEmpBasicInfoForUpdate
	export function emptyRefProfileSettingEmpBasicInfoForUpdate():Ref<ProfileSettingEmpBasicInfoForUpdate>
	export function refOfProfileSettingEmpBasicInfoForUpdate(x:ProfileSettingEmpBasicInfoForUpdate,v:Ref<ProfileSettingEmpBasicInfoForUpdate>)
	export function unRefProfileSettingEmpBasicInfoForUpdate(v:Ref<ProfileSettingEmpBasicInfoForUpdate>):ProfileSettingEmpBasicInfoForUpdate
	export function emptyI18n():I18n
	export function emptyRefI18n():Ref<I18n>
	export function refOfI18n(x:I18n,v:Ref<I18n>)
	export function unRefI18n(v:Ref<I18n>):I18n
	export function emptyPatchCostCenterResp():PatchCostCenterResp
	export function emptyRefPatchCostCenterResp():Ref<PatchCostCenterResp>
	export function refOfPatchCostCenterResp(x:PatchCostCenterResp,v:Ref<PatchCostCenterResp>)
	export function unRefPatchCostCenterResp(v:Ref<PatchCostCenterResp>):PatchCostCenterResp
	export function emptyProfileSettingCustomGroupItemBuilder():ProfileSettingCustomGroupItemBuilder
	export function emptyRefProfileSettingCustomGroupItemBuilder():Ref<ProfileSettingCustomGroupItemBuilder>
	export function refOfProfileSettingCustomGroupItemBuilder(x:ProfileSettingCustomGroupItemBuilder,v:Ref<ProfileSettingCustomGroupItemBuilder>)
	export function unRefProfileSettingCustomGroupItemBuilder(v:Ref<ProfileSettingCustomGroupItemBuilder>):ProfileSettingCustomGroupItemBuilder
	export function emptySearchCostCenterPathReqBodyBuilder():SearchCostCenterPathReqBodyBuilder
	export function emptyRefSearchCostCenterPathReqBodyBuilder():Ref<SearchCostCenterPathReqBodyBuilder>
	export function refOfSearchCostCenterPathReqBodyBuilder(x:SearchCostCenterPathReqBodyBuilder,v:Ref<SearchCostCenterPathReqBodyBuilder>)
	export function unRefSearchCostCenterPathReqBodyBuilder(v:Ref<SearchCostCenterPathReqBodyBuilder>):SearchCostCenterPathReqBodyBuilder
	export function emptyDeleteCostCenterReq():DeleteCostCenterReq
	export function emptyRefDeleteCostCenterReq():Ref<DeleteCostCenterReq>
	export function refOfDeleteCostCenterReq(x:DeleteCostCenterReq,v:Ref<DeleteCostCenterReq>)
	export function unRefDeleteCostCenterReq(v:Ref<DeleteCostCenterReq>):DeleteCostCenterReq
	export function emptySearchBasicInfoCurrencyPathReqBodyBuilder():SearchBasicInfoCurrencyPathReqBodyBuilder
	export function emptyRefSearchBasicInfoCurrencyPathReqBodyBuilder():Ref<SearchBasicInfoCurrencyPathReqBodyBuilder>
	export function refOfSearchBasicInfoCurrencyPathReqBodyBuilder(x:SearchBasicInfoCurrencyPathReqBodyBuilder,v:Ref<SearchBasicInfoCurrencyPathReqBodyBuilder>)
	export function unRefSearchBasicInfoCurrencyPathReqBodyBuilder(v:Ref<SearchBasicInfoCurrencyPathReqBodyBuilder>):SearchBasicInfoCurrencyPathReqBodyBuilder
	export function emptySearchBasicInfoNationalityPathReqBodyBuilder():SearchBasicInfoNationalityPathReqBodyBuilder
	export function emptyRefSearchBasicInfoNationalityPathReqBodyBuilder():Ref<SearchBasicInfoNationalityPathReqBodyBuilder>
	export function refOfSearchBasicInfoNationalityPathReqBodyBuilder(x:SearchBasicInfoNationalityPathReqBodyBuilder,v:Ref<SearchBasicInfoNationalityPathReqBodyBuilder>)
	export function unRefSearchBasicInfoNationalityPathReqBodyBuilder(v:Ref<SearchBasicInfoNationalityPathReqBodyBuilder>):SearchBasicInfoNationalityPathReqBodyBuilder
	export function emptySearchJobChangeResp():SearchJobChangeResp
	export function emptyRefSearchJobChangeResp():Ref<SearchJobChangeResp>
	export function refOfSearchJobChangeResp(x:SearchJobChangeResp,v:Ref<SearchJobChangeResp>)
	export function unRefSearchJobChangeResp(v:Ref<SearchJobChangeResp>):SearchJobChangeResp
	export function emptyCompanyIdAndNameBuilder():CompanyIdAndNameBuilder
	export function emptyRefCompanyIdAndNameBuilder():Ref<CompanyIdAndNameBuilder>
	export function refOfCompanyIdAndNameBuilder(x:CompanyIdAndNameBuilder,v:Ref<CompanyIdAndNameBuilder>)
	export function unRefCompanyIdAndNameBuilder(v:Ref<CompanyIdAndNameBuilder>):CompanyIdAndNameBuilder
	export function emptyDimensionInfoData():DimensionInfoData
	export function emptyRefDimensionInfoData():Ref<DimensionInfoData>
	export function refOfDimensionInfoData(x:DimensionInfoData,v:Ref<DimensionInfoData>)
	export function unRefDimensionInfoData(v:Ref<DimensionInfoData>):DimensionInfoData
	export function emptySearchDepartmentReqBody():SearchDepartmentReqBody
	export function emptyRefSearchDepartmentReqBody():Ref<SearchDepartmentReqBody>
	export function refOfSearchDepartmentReqBody(x:SearchDepartmentReqBody,v:Ref<SearchDepartmentReqBody>)
	export function unRefSearchDepartmentReqBody(v:Ref<SearchDepartmentReqBody>):SearchDepartmentReqBody
	export function emptyProfileSettingEducationBuilder():ProfileSettingEducationBuilder
	export function emptyRefProfileSettingEducationBuilder():Ref<ProfileSettingEducationBuilder>
	export function refOfProfileSettingEducationBuilder(x:ProfileSettingEducationBuilder,v:Ref<ProfileSettingEducationBuilder>)
	export function unRefProfileSettingEducationBuilder(v:Ref<ProfileSettingEducationBuilder>):ProfileSettingEducationBuilder
	export function emptySearchBasicInfoNationalityReq():SearchBasicInfoNationalityReq
	export function emptyRefSearchBasicInfoNationalityReq():Ref<SearchBasicInfoNationalityReq>
	export function refOfSearchBasicInfoNationalityReq(x:SearchBasicInfoNationalityReq,v:Ref<SearchBasicInfoNationalityReq>)
	export function unRefSearchBasicInfoNationalityReq(v:Ref<SearchBasicInfoNationalityReq>):SearchBasicInfoNationalityReq
	export function emptyInternationalAssignmentV2Builder():InternationalAssignmentV2Builder
	export function emptyRefInternationalAssignmentV2Builder():Ref<InternationalAssignmentV2Builder>
	export function refOfInternationalAssignmentV2Builder(x:InternationalAssignmentV2Builder,v:Ref<InternationalAssignmentV2Builder>)
	export function unRefInternationalAssignmentV2Builder(v:Ref<InternationalAssignmentV2Builder>):InternationalAssignmentV2Builder
	export function emptyParentsDepartmentRespData():ParentsDepartmentRespData
	export function emptyRefParentsDepartmentRespData():Ref<ParentsDepartmentRespData>
	export function refOfParentsDepartmentRespData(x:ParentsDepartmentRespData,v:Ref<ParentsDepartmentRespData>)
	export function unRefParentsDepartmentRespData(v:Ref<ParentsDepartmentRespData>):ParentsDepartmentRespData
	export function emptyPrehireCreate():PrehireCreate
	export function emptyRefPrehireCreate():Ref<PrehireCreate>
	export function refOfPrehireCreate(x:PrehireCreate,v:Ref<PrehireCreate>)
	export function unRefPrehireCreate(v:Ref<PrehireCreate>):PrehireCreate
	export function emptySearchDepartmentReqBuilder():SearchDepartmentReqBuilder
	export function emptyRefSearchDepartmentReqBuilder():Ref<SearchDepartmentReqBuilder>
	export function refOfSearchDepartmentReqBuilder(x:SearchDepartmentReqBuilder,v:Ref<SearchDepartmentReqBuilder>)
	export function unRefSearchDepartmentReqBuilder(v:Ref<SearchDepartmentReqBuilder>):SearchDepartmentReqBuilder
	export function emptyResidentTax():ResidentTax
	export function emptyRefResidentTax():Ref<ResidentTax>
	export function refOfResidentTax(x:ResidentTax,v:Ref<ResidentTax>)
	export function unRefResidentTax(v:Ref<ResidentTax>):ResidentTax
	export function emptyCompanyBuilder():CompanyBuilder
	export function emptyRefCompanyBuilder():Ref<CompanyBuilder>
	export function refOfCompanyBuilder(x:CompanyBuilder,v:Ref<CompanyBuilder>)
	export function unRefCompanyBuilder(v:Ref<CompanyBuilder>):CompanyBuilder
	export function emptyMatchRule():MatchRule
	export function emptyRefMatchRule():Ref<MatchRule>
	export function refOfMatchRule(x:MatchRule,v:Ref<MatchRule>)
	export function unRefMatchRule(v:Ref<MatchRule>):MatchRule
	export function emptyOnboardingFlow():OnboardingFlow
	export function emptyRefOnboardingFlow():Ref<OnboardingFlow>
	export function refOfOnboardingFlow(x:OnboardingFlow,v:Ref<OnboardingFlow>)
	export function unRefOnboardingFlow(v:Ref<OnboardingFlow>):OnboardingFlow
	export function emptySearchBasicInfoCountryRegionReqBodyBuilder():SearchBasicInfoCountryRegionReqBodyBuilder
	export function emptyRefSearchBasicInfoCountryRegionReqBodyBuilder():Ref<SearchBasicInfoCountryRegionReqBodyBuilder>
	export function refOfSearchBasicInfoCountryRegionReqBodyBuilder(x:SearchBasicInfoCountryRegionReqBodyBuilder,v:Ref<SearchBasicInfoCountryRegionReqBodyBuilder>)
	export function unRefSearchBasicInfoCountryRegionReqBodyBuilder(v:Ref<SearchBasicInfoCountryRegionReqBodyBuilder>):SearchBasicInfoCountryRegionReqBodyBuilder
	export function emptySearchBasicInfoNationalityReqBuilder():SearchBasicInfoNationalityReqBuilder
	export function emptyRefSearchBasicInfoNationalityReqBuilder():Ref<SearchBasicInfoNationalityReqBuilder>
	export function refOfSearchBasicInfoNationalityReqBuilder(x:SearchBasicInfoNationalityReqBuilder,v:Ref<SearchBasicInfoNationalityReqBuilder>)
	export function unRefSearchBasicInfoNationalityReqBuilder(v:Ref<SearchBasicInfoNationalityReqBuilder>):SearchBasicInfoNationalityReqBuilder
	export function emptySearchContractReqBuilder():SearchContractReqBuilder
	export function emptyRefSearchContractReqBuilder():Ref<SearchContractReqBuilder>
	export function refOfSearchContractReqBuilder(x:SearchContractReqBuilder,v:Ref<SearchContractReqBuilder>)
	export function unRefSearchContractReqBuilder(v:Ref<SearchContractReqBuilder>):SearchContractReqBuilder
	export function emptyCity():City
	export function emptyRefCity():Ref<City>
	export function refOfCity(x:City,v:Ref<City>)
	export function unRefCity(v:Ref<City>):City
	export function emptyDeleteCostCenterVersionReq():DeleteCostCenterVersionReq
	export function emptyRefDeleteCostCenterVersionReq():Ref<DeleteCostCenterVersionReq>
	export function refOfDeleteCostCenterVersionReq(x:DeleteCostCenterVersionReq,v:Ref<DeleteCostCenterVersionReq>)
	export function unRefDeleteCostCenterVersionReq(v:Ref<DeleteCostCenterVersionReq>):DeleteCostCenterVersionReq
	export function emptyOrgRoleUpdate():OrgRoleUpdate
	export function emptyRefOrgRoleUpdate():Ref<OrgRoleUpdate>
	export function refOfOrgRoleUpdate(x:OrgRoleUpdate,v:Ref<OrgRoleUpdate>)
	export function unRefOrgRoleUpdate(v:Ref<OrgRoleUpdate>):OrgRoleUpdate
	export function emptyProfileSettingNational():ProfileSettingNational
	export function emptyRefProfileSettingNational():Ref<ProfileSettingNational>
	export function refOfProfileSettingNational(x:ProfileSettingNational,v:Ref<ProfileSettingNational>)
	export function unRefProfileSettingNational(v:Ref<ProfileSettingNational>):ProfileSettingNational
	export function emptySearchBasicInfoBankReqBody():SearchBasicInfoBankReqBody
	export function emptyRefSearchBasicInfoBankReqBody():Ref<SearchBasicInfoBankReqBody>
	export function refOfSearchBasicInfoBankReqBody(x:SearchBasicInfoBankReqBody,v:Ref<SearchBasicInfoBankReqBody>)
	export function unRefSearchBasicInfoBankReqBody(v:Ref<SearchBasicInfoBankReqBody>):SearchBasicInfoBankReqBody
	export function emptySearchProbationRespData():SearchProbationRespData
	export function emptyRefSearchProbationRespData():Ref<SearchProbationRespData>
	export function refOfSearchProbationRespData(x:SearchProbationRespData,v:Ref<SearchProbationRespData>)
	export function unRefSearchProbationRespData(v:Ref<SearchProbationRespData>):SearchProbationRespData
	export function emptyBatchGetDepartmentReq():BatchGetDepartmentReq
	export function emptyRefBatchGetDepartmentReq():Ref<BatchGetDepartmentReq>
	export function refOfBatchGetDepartmentReq(x:BatchGetDepartmentReq,v:Ref<BatchGetDepartmentReq>)
	export function unRefBatchGetDepartmentReq(v:Ref<BatchGetDepartmentReq>):BatchGetDepartmentReq
	export function emptyBatchGetEmployeesJobDataRespData():BatchGetEmployeesJobDataRespData
	export function emptyRefBatchGetEmployeesJobDataRespData():Ref<BatchGetEmployeesJobDataRespData>
	export function refOfBatchGetEmployeesJobDataRespData(x:BatchGetEmployeesJobDataRespData,v:Ref<BatchGetEmployeesJobDataRespData>)
	export function unRefBatchGetEmployeesJobDataRespData(v:Ref<BatchGetEmployeesJobDataRespData>):BatchGetEmployeesJobDataRespData
	export function emptyPersonInfoChn():PersonInfoChn
	export function emptyRefPersonInfoChn():Ref<PersonInfoChn>
	export function refOfPersonInfoChn(x:PersonInfoChn,v:Ref<PersonInfoChn>)
	export function unRefPersonInfoChn(v:Ref<PersonInfoChn>):PersonInfoChn
	export function emptyProcessFormVariableV2():ProcessFormVariableV2
	export function emptyRefProcessFormVariableV2():Ref<ProcessFormVariableV2>
	export function refOfProcessFormVariableV2(x:ProcessFormVariableV2,v:Ref<ProcessFormVariableV2>)
	export function unRefProcessFormVariableV2(v:Ref<ProcessFormVariableV2>):ProcessFormVariableV2
	export function emptyProfileSettingBankAccount():ProfileSettingBankAccount
	export function emptyRefProfileSettingBankAccount():Ref<ProfileSettingBankAccount>
	export function refOfProfileSettingBankAccount(x:ProfileSettingBankAccount,v:Ref<ProfileSettingBankAccount>)
	export function unRefProfileSettingBankAccount(v:Ref<ProfileSettingBankAccount>):ProfileSettingBankAccount
	export function emptyTranferEmploymentInfo():TranferEmploymentInfo
	export function emptyRefTranferEmploymentInfo():Ref<TranferEmploymentInfo>
	export function refOfTranferEmploymentInfo(x:TranferEmploymentInfo,v:Ref<TranferEmploymentInfo>)
	export function unRefTranferEmploymentInfo(v:Ref<TranferEmploymentInfo>):TranferEmploymentInfo
	export function emptyFieldVariableValueTo():FieldVariableValueTo
	export function emptyRefFieldVariableValueTo():Ref<FieldVariableValueTo>
	export function refOfFieldVariableValueTo(x:FieldVariableValueTo,v:Ref<FieldVariableValueTo>)
	export function unRefFieldVariableValueTo(v:Ref<FieldVariableValueTo>):FieldVariableValueTo
	export function emptyOnboardingQrCode():OnboardingQrCode
	export function emptyRefOnboardingQrCode():Ref<OnboardingQrCode>
	export function refOfOnboardingQrCode(x:OnboardingQrCode,v:Ref<OnboardingQrCode>)
	export function unRefOnboardingQrCode(v:Ref<OnboardingQrCode>):OnboardingQrCode
	export function emptyPatchCostCenterVersionReqBody():PatchCostCenterVersionReqBody
	export function emptyRefPatchCostCenterVersionReqBody():Ref<PatchCostCenterVersionReqBody>
	export function refOfPatchCostCenterVersionReqBody(x:PatchCostCenterVersionReqBody,v:Ref<PatchCostCenterVersionReqBody>)
	export function unRefPatchCostCenterVersionReqBody(v:Ref<PatchCostCenterVersionReqBody>):PatchCostCenterVersionReqBody
	export function emptyObjectFieldDataBuilder():ObjectFieldDataBuilder
	export function emptyRefObjectFieldDataBuilder():Ref<ObjectFieldDataBuilder>
	export function refOfObjectFieldDataBuilder(x:ObjectFieldDataBuilder,v:Ref<ObjectFieldDataBuilder>)
	export function unRefObjectFieldDataBuilder(v:Ref<ObjectFieldDataBuilder>):ObjectFieldDataBuilder
	export function emptyBatchGetJobLevelPathReqBodyBuilder():BatchGetJobLevelPathReqBodyBuilder
	export function emptyRefBatchGetJobLevelPathReqBodyBuilder():Ref<BatchGetJobLevelPathReqBodyBuilder>
	export function refOfBatchGetJobLevelPathReqBodyBuilder(x:BatchGetJobLevelPathReqBodyBuilder,v:Ref<BatchGetJobLevelPathReqBodyBuilder>)
	export function unRefBatchGetJobLevelPathReqBodyBuilder(v:Ref<BatchGetJobLevelPathReqBodyBuilder>):BatchGetJobLevelPathReqBodyBuilder
	export function emptyJobChange():JobChange
	export function emptyRefJobChange():Ref<JobChange>
	export function refOfJobChange(x:JobChange,v:Ref<JobChange>)
	export function unRefJobChange(v:Ref<JobChange>):JobChange
	export function emptyLeaveRequestDetail():LeaveRequestDetail
	export function emptyRefLeaveRequestDetail():Ref<LeaveRequestDetail>
	export function refOfLeaveRequestDetail(x:LeaveRequestDetail,v:Ref<LeaveRequestDetail>)
	export function unRefLeaveRequestDetail(v:Ref<LeaveRequestDetail>):LeaveRequestDetail
	export function emptyPersonalProfile():PersonalProfile
	export function emptyRefPersonalProfile():Ref<PersonalProfile>
	export function refOfPersonalProfile(x:PersonalProfile,v:Ref<PersonalProfile>)
	export function unRefPersonalProfile(v:Ref<PersonalProfile>):PersonalProfile
	export function emptyProfileSettingDependentBuilder():ProfileSettingDependentBuilder
	export function emptyRefProfileSettingDependentBuilder():Ref<ProfileSettingDependentBuilder>
	export function refOfProfileSettingDependentBuilder(x:ProfileSettingDependentBuilder,v:Ref<ProfileSettingDependentBuilder>)
	export function unRefProfileSettingDependentBuilder(v:Ref<ProfileSettingDependentBuilder>):ProfileSettingDependentBuilder
	export function emptySearchBasicInfoBankReqBodyBuilder():SearchBasicInfoBankReqBodyBuilder
	export function emptyRefSearchBasicInfoBankReqBodyBuilder():Ref<SearchBasicInfoBankReqBodyBuilder>
	export function refOfSearchBasicInfoBankReqBodyBuilder(x:SearchBasicInfoBankReqBodyBuilder,v:Ref<SearchBasicInfoBankReqBodyBuilder>)
	export function unRefSearchBasicInfoBankReqBodyBuilder(v:Ref<SearchBasicInfoBankReqBodyBuilder>):SearchBasicInfoBankReqBodyBuilder
	export function emptySearchBasicInfoCountryRegionSubdivisionReqBodyBuilder():SearchBasicInfoCountryRegionSubdivisionReqBodyBuilder
	export function emptyRefSearchBasicInfoCountryRegionSubdivisionReqBodyBuilder():Ref<SearchBasicInfoCountryRegionSubdivisionReqBodyBuilder>
	export function refOfSearchBasicInfoCountryRegionSubdivisionReqBodyBuilder(x:SearchBasicInfoCountryRegionSubdivisionReqBodyBuilder,v:Ref<SearchBasicInfoCountryRegionSubdivisionReqBodyBuilder>)
	export function unRefSearchBasicInfoCountryRegionSubdivisionReqBodyBuilder(v:Ref<SearchBasicInfoCountryRegionSubdivisionReqBodyBuilder>):SearchBasicInfoCountryRegionSubdivisionReqBodyBuilder
	export function emptyCreateCostCenterVersionReq():CreateCostCenterVersionReq
	export function emptyRefCreateCostCenterVersionReq():Ref<CreateCostCenterVersionReq>
	export function refOfCreateCostCenterVersionReq(x:CreateCostCenterVersionReq,v:Ref<CreateCostCenterVersionReq>)
	export function unRefCreateCostCenterVersionReq(v:Ref<CreateCostCenterVersionReq>):CreateCostCenterVersionReq
	export function emptyDepartment():Department
	export function emptyRefDepartment():Ref<Department>
	export function refOfDepartment(x:Department,v:Ref<Department>)
	export function unRefDepartment(v:Ref<Department>):Department
	export function emptyDepartmentBuilder():DepartmentBuilder
	export function emptyRefDepartmentBuilder():Ref<DepartmentBuilder>
	export function refOfDepartmentBuilder(x:DepartmentBuilder,v:Ref<DepartmentBuilder>)
	export function unRefDepartmentBuilder(v:Ref<DepartmentBuilder>):DepartmentBuilder
	export function emptyGetByDepartmentBpResp():GetByDepartmentBpResp
	export function emptyRefGetByDepartmentBpResp():Ref<GetByDepartmentBpResp>
	export function refOfGetByDepartmentBpResp(x:GetByDepartmentBpResp,v:Ref<GetByDepartmentBpResp>)
	export function unRefGetByDepartmentBpResp(v:Ref<GetByDepartmentBpResp>):GetByDepartmentBpResp
	export function emptyJobDataBuilder():JobDataBuilder
	export function emptyRefJobDataBuilder():Ref<JobDataBuilder>
	export function refOfJobDataBuilder(x:JobDataBuilder,v:Ref<JobDataBuilder>)
	export function unRefJobDataBuilder(v:Ref<JobDataBuilder>):JobDataBuilder
	export function emptyPatchPreHireResp():PatchPreHireResp
	export function emptyRefPatchPreHireResp():Ref<PatchPreHireResp>
	export function refOfPatchPreHireResp(x:PatchPreHireResp,v:Ref<PatchPreHireResp>)
	export function unRefPatchPreHireResp(v:Ref<PatchPreHireResp>):PatchPreHireResp
	export function emptySearchBasicInfoCityResp():SearchBasicInfoCityResp
	export function emptyRefSearchBasicInfoCityResp():Ref<SearchBasicInfoCityResp>
	export function refOfSearchBasicInfoCityResp(x:SearchBasicInfoCityResp,v:Ref<SearchBasicInfoCityResp>)
	export function unRefSearchBasicInfoCityResp(v:Ref<SearchBasicInfoCityResp>):SearchBasicInfoCityResp
	export function emptySearchBasicInfoNationalityReqBodyBuilder():SearchBasicInfoNationalityReqBodyBuilder
	export function emptyRefSearchBasicInfoNationalityReqBodyBuilder():Ref<SearchBasicInfoNationalityReqBodyBuilder>
	export function refOfSearchBasicInfoNationalityReqBodyBuilder(x:SearchBasicInfoNationalityReqBodyBuilder,v:Ref<SearchBasicInfoNationalityReqBodyBuilder>)
	export function unRefSearchBasicInfoNationalityReqBodyBuilder(v:Ref<SearchBasicInfoNationalityReqBodyBuilder>):SearchBasicInfoNationalityReqBodyBuilder
	export function emptyBankBuilder():BankBuilder
	export function emptyRefBankBuilder():Ref<BankBuilder>
	export function refOfBankBuilder(x:BankBuilder,v:Ref<BankBuilder>)
	export function unRefBankBuilder(v:Ref<BankBuilder>):BankBuilder
	export function emptyBatchGetLocationRespData():BatchGetLocationRespData
	export function emptyRefBatchGetLocationRespData():Ref<BatchGetLocationRespData>
	export function refOfBatchGetLocationRespData(x:BatchGetLocationRespData,v:Ref<BatchGetLocationRespData>)
	export function unRefBatchGetLocationRespData(v:Ref<BatchGetLocationRespData>):BatchGetLocationRespData
	export function emptyEmployeeBuilder():EmployeeBuilder
	export function emptyRefEmployeeBuilder():Ref<EmployeeBuilder>
	export function refOfEmployeeBuilder(x:EmployeeBuilder,v:Ref<EmployeeBuilder>)
	export function unRefEmployeeBuilder(v:Ref<EmployeeBuilder>):EmployeeBuilder
	export function emptySearchCostCenterReqBuilder():SearchCostCenterReqBuilder
	export function emptyRefSearchCostCenterReqBuilder():Ref<SearchCostCenterReqBuilder>
	export function refOfSearchCostCenterReqBuilder(x:SearchCostCenterReqBuilder,v:Ref<SearchCostCenterReqBuilder>)
	export function unRefSearchCostCenterReqBuilder(v:Ref<SearchCostCenterReqBuilder>):SearchCostCenterReqBuilder
	export function emptySearchProbationReqBodyBuilder():SearchProbationReqBodyBuilder
	export function emptyRefSearchProbationReqBodyBuilder():Ref<SearchProbationReqBodyBuilder>
	export function refOfSearchProbationReqBodyBuilder(x:SearchProbationReqBodyBuilder,v:Ref<SearchProbationReqBodyBuilder>)
	export function unRefSearchProbationReqBodyBuilder(v:Ref<SearchProbationReqBodyBuilder>):SearchProbationReqBodyBuilder
	export function emptyCustomName():CustomName
	export function emptyRefCustomName():Ref<CustomName>
	export function refOfCustomName(x:CustomName,v:Ref<CustomName>)
	export function unRefCustomName(v:Ref<CustomName>):CustomName
	export function emptyProfileSettingEmploymentBasicInfo():ProfileSettingEmploymentBasicInfo
	export function emptyRefProfileSettingEmploymentBasicInfo():Ref<ProfileSettingEmploymentBasicInfo>
	export function refOfProfileSettingEmploymentBasicInfo(x:ProfileSettingEmploymentBasicInfo,v:Ref<ProfileSettingEmploymentBasicInfo>)
	export function unRefProfileSettingEmploymentBasicInfo(v:Ref<ProfileSettingEmploymentBasicInfo>):ProfileSettingEmploymentBasicInfo
	export function emptyProbationInfoForSubmitBuilder():ProbationInfoForSubmitBuilder
	export function emptyRefProbationInfoForSubmitBuilder():Ref<ProbationInfoForSubmitBuilder>
	export function refOfProbationInfoForSubmitBuilder(x:ProbationInfoForSubmitBuilder,v:Ref<ProbationInfoForSubmitBuilder>)
	export function unRefProbationInfoForSubmitBuilder(v:Ref<ProbationInfoForSubmitBuilder>):ProbationInfoForSubmitBuilder
	export function emptyCostCenter():CostCenter
	export function emptyRefCostCenter():Ref<CostCenter>
	export function refOfCostCenter(x:CostCenter,v:Ref<CostCenter>)
	export function unRefCostCenter(v:Ref<CostCenter>):CostCenter
	export function emptyFormFieldVariableStringValue():FormFieldVariableStringValue
	export function emptyRefFormFieldVariableStringValue():Ref<FormFieldVariableStringValue>
	export function refOfFormFieldVariableStringValue(x:FormFieldVariableStringValue,v:Ref<FormFieldVariableStringValue>)
	export function unRefFormFieldVariableStringValue(v:Ref<FormFieldVariableStringValue>):FormFieldVariableStringValue
	export function emptyPatchCostCenterVersionResp():PatchCostCenterVersionResp
	export function emptyRefPatchCostCenterVersionResp():Ref<PatchCostCenterVersionResp>
	export function refOfPatchCostCenterVersionResp(x:PatchCostCenterVersionResp,v:Ref<PatchCostCenterVersionResp>)
	export function unRefPatchCostCenterVersionResp(v:Ref<PatchCostCenterVersionResp>):PatchCostCenterVersionResp
	export function emptyParentsDepartmentPathReqBodyBuilder():ParentsDepartmentPathReqBodyBuilder
	export function emptyRefParentsDepartmentPathReqBodyBuilder():Ref<ParentsDepartmentPathReqBodyBuilder>
	export function refOfParentsDepartmentPathReqBodyBuilder(x:ParentsDepartmentPathReqBodyBuilder,v:Ref<ParentsDepartmentPathReqBodyBuilder>)
	export function unRefParentsDepartmentPathReqBodyBuilder(v:Ref<ParentsDepartmentPathReqBodyBuilder>):ParentsDepartmentPathReqBodyBuilder
	export function emptyParentsDepartmentReqBuilder():ParentsDepartmentReqBuilder
	export function emptyRefParentsDepartmentReqBuilder():Ref<ParentsDepartmentReqBuilder>
	export function refOfParentsDepartmentReqBuilder(x:ParentsDepartmentReqBuilder,v:Ref<ParentsDepartmentReqBuilder>)
	export function unRefParentsDepartmentReqBuilder(v:Ref<ParentsDepartmentReqBuilder>):ParentsDepartmentReqBuilder
	export function emptyPatchCostCenterReqBody():PatchCostCenterReqBody
	export function emptyRefPatchCostCenterReqBody():Ref<PatchCostCenterReqBody>
	export function refOfPatchCostCenterReqBody(x:PatchCostCenterReqBody,v:Ref<PatchCostCenterReqBody>)
	export function unRefPatchCostCenterReqBody(v:Ref<PatchCostCenterReqBody>):PatchCostCenterReqBody
	export function emptyPreHireContractInfo():PreHireContractInfo
	export function emptyRefPreHireContractInfo():Ref<PreHireContractInfo>
	export function refOfPreHireContractInfo(x:PreHireContractInfo,v:Ref<PreHireContractInfo>)
	export function unRefPreHireContractInfo(v:Ref<PreHireContractInfo>):PreHireContractInfo
	export function emptySearchJobChangeReqBuilder():SearchJobChangeReqBuilder
	export function emptyRefSearchJobChangeReqBuilder():Ref<SearchJobChangeReqBuilder>
	export function refOfSearchJobChangeReqBuilder(x:SearchJobChangeReqBuilder,v:Ref<SearchJobChangeReqBuilder>)
	export function unRefSearchJobChangeReqBuilder(v:Ref<SearchJobChangeReqBuilder>):SearchJobChangeReqBuilder
	export function emptyBpmDataengineI18nBuilder():BpmDataengineI18nBuilder
	export function emptyRefBpmDataengineI18nBuilder():Ref<BpmDataengineI18nBuilder>
	export function refOfBpmDataengineI18nBuilder(x:BpmDataengineI18nBuilder,v:Ref<BpmDataengineI18nBuilder>)
	export function unRefBpmDataengineI18nBuilder(v:Ref<BpmDataengineI18nBuilder>):BpmDataengineI18nBuilder
	export function emptyDataengineI18nBuilder():DataengineI18nBuilder
	export function emptyRefDataengineI18nBuilder():Ref<DataengineI18nBuilder>
	export function refOfDataengineI18nBuilder(x:DataengineI18nBuilder,v:Ref<DataengineI18nBuilder>)
	export function unRefDataengineI18nBuilder(v:Ref<DataengineI18nBuilder>):DataengineI18nBuilder
	export function emptyOrgdraftDepartmentId():OrgdraftDepartmentId
	export function emptyRefOrgdraftDepartmentId():Ref<OrgdraftDepartmentId>
	export function refOfOrgdraftDepartmentId(x:OrgdraftDepartmentId,v:Ref<OrgdraftDepartmentId>)
	export function unRefOrgdraftDepartmentId(v:Ref<OrgdraftDepartmentId>):OrgdraftDepartmentId
	export function emptyWorkforcePlanEaiDetail():WorkforcePlanEaiDetail
	export function emptyRefWorkforcePlanEaiDetail():Ref<WorkforcePlanEaiDetail>
	export function refOfWorkforcePlanEaiDetail(x:WorkforcePlanEaiDetail,v:Ref<WorkforcePlanEaiDetail>)
	export function unRefWorkforcePlanEaiDetail(v:Ref<WorkforcePlanEaiDetail>):WorkforcePlanEaiDetail
	export function emptySearchPreHireIterator():SearchPreHireIterator
	export function emptyRefSearchPreHireIterator():Ref<SearchPreHireIterator>
	export function refOfSearchPreHireIterator(x:SearchPreHireIterator,v:Ref<SearchPreHireIterator>)
	export function unRefSearchPreHireIterator(v:Ref<SearchPreHireIterator>):SearchPreHireIterator
	export function emptyEmployeeJobData():EmployeeJobData
	export function emptyRefEmployeeJobData():Ref<EmployeeJobData>
	export function refOfEmployeeJobData(x:EmployeeJobData,v:Ref<EmployeeJobData>)
	export function unRefEmployeeJobData(v:Ref<EmployeeJobData>):EmployeeJobData
	export function emptyPreHireContractInfoBuilder():PreHireContractInfoBuilder
	export function emptyRefPreHireContractInfoBuilder():Ref<PreHireContractInfoBuilder>
	export function refOfPreHireContractInfoBuilder(x:PreHireContractInfoBuilder,v:Ref<PreHireContractInfoBuilder>)
	export function unRefPreHireContractInfoBuilder(v:Ref<PreHireContractInfoBuilder>):PreHireContractInfoBuilder
	export function emptyQueryEmployeesJobDataReqBuilder():QueryEmployeesJobDataReqBuilder
	export function emptyRefQueryEmployeesJobDataReqBuilder():Ref<QueryEmployeesJobDataReqBuilder>
	export function refOfQueryEmployeesJobDataReqBuilder(x:QueryEmployeesJobDataReqBuilder,v:Ref<QueryEmployeesJobDataReqBuilder>)
	export function unRefQueryEmployeesJobDataReqBuilder(v:Ref<QueryEmployeesJobDataReqBuilder>):QueryEmployeesJobDataReqBuilder
	export function emptyPatchPreHireReqBuilder():PatchPreHireReqBuilder
	export function emptyRefPatchPreHireReqBuilder():Ref<PatchPreHireReqBuilder>
	export function refOfPatchPreHireReqBuilder(x:PatchPreHireReqBuilder,v:Ref<PatchPreHireReqBuilder>)
	export function unRefPatchPreHireReqBuilder(v:Ref<PatchPreHireReqBuilder>):PatchPreHireReqBuilder
	export function emptyQrCodeDimension():QrCodeDimension
	export function emptyRefQrCodeDimension():Ref<QrCodeDimension>
	export function refOfQrCodeDimension(x:QrCodeDimension,v:Ref<QrCodeDimension>)
	export function unRefQrCodeDimension(v:Ref<QrCodeDimension>):QrCodeDimension
	export function emptySearchBasicInfoBankBranchReq():SearchBasicInfoBankBranchReq
	export function emptyRefSearchBasicInfoBankBranchReq():Ref<SearchBasicInfoBankBranchReq>
	export function refOfSearchBasicInfoBankBranchReq(x:SearchBasicInfoBankBranchReq,v:Ref<SearchBasicInfoBankBranchReq>)
	export function unRefSearchBasicInfoBankBranchReq(v:Ref<SearchBasicInfoBankBranchReq>):SearchBasicInfoBankBranchReq
	export function emptySearchBasicInfoNationalityRespData():SearchBasicInfoNationalityRespData
	export function emptyRefSearchBasicInfoNationalityRespData():Ref<SearchBasicInfoNationalityRespData>
	export function refOfSearchBasicInfoNationalityRespData(x:SearchBasicInfoNationalityRespData,v:Ref<SearchBasicInfoNationalityRespData>)
	export function unRefSearchBasicInfoNationalityRespData(v:Ref<SearchBasicInfoNationalityRespData>):SearchBasicInfoNationalityRespData
	export function emptyWorkforcePlan():WorkforcePlan
	export function emptyRefWorkforcePlan():Ref<WorkforcePlan>
	export function refOfWorkforcePlan(x:WorkforcePlan,v:Ref<WorkforcePlan>)
	export function unRefWorkforcePlan(v:Ref<WorkforcePlan>):WorkforcePlan
	export function emptyAddressBuilder():AddressBuilder
	export function emptyRefAddressBuilder():Ref<AddressBuilder>
	export function refOfAddressBuilder(x:AddressBuilder,v:Ref<AddressBuilder>)
	export function unRefAddressBuilder(v:Ref<AddressBuilder>):AddressBuilder
	export function emptyBatchGetCompanyResp():BatchGetCompanyResp
	export function emptyRefBatchGetCompanyResp():Ref<BatchGetCompanyResp>
	export function refOfBatchGetCompanyResp(x:BatchGetCompanyResp,v:Ref<BatchGetCompanyResp>)
	export function unRefBatchGetCompanyResp(v:Ref<BatchGetCompanyResp>):BatchGetCompanyResp
	export function emptyEmployment():Employment
	export function emptyRefEmployment():Ref<Employment>
	export function refOfEmployment(x:Employment,v:Ref<Employment>)
	export function unRefEmployment(v:Ref<Employment>):Employment
	export function emptyCountryRegionBuilder():CountryRegionBuilder
	export function emptyRefCountryRegionBuilder():Ref<CountryRegionBuilder>
	export function refOfCountryRegionBuilder(x:CountryRegionBuilder,v:Ref<CountryRegionBuilder>)
	export function unRefCountryRegionBuilder(v:Ref<CountryRegionBuilder>):CountryRegionBuilder
	export function emptyGetProcessFormVariableDataRespData():GetProcessFormVariableDataRespData
	export function emptyRefGetProcessFormVariableDataRespData():Ref<GetProcessFormVariableDataRespData>
	export function refOfGetProcessFormVariableDataRespData(x:GetProcessFormVariableDataRespData,v:Ref<GetProcessFormVariableDataRespData>)
	export function unRefGetProcessFormVariableDataRespData(v:Ref<GetProcessFormVariableDataRespData>):GetProcessFormVariableDataRespData
	export function emptySearchBasicInfoCountryRegionSubdivisionRespData():SearchBasicInfoCountryRegionSubdivisionRespData
	export function emptyRefSearchBasicInfoCountryRegionSubdivisionRespData():Ref<SearchBasicInfoCountryRegionSubdivisionRespData>
	export function refOfSearchBasicInfoCountryRegionSubdivisionRespData(x:SearchBasicInfoCountryRegionSubdivisionRespData,v:Ref<SearchBasicInfoCountryRegionSubdivisionRespData>)
	export function unRefSearchBasicInfoCountryRegionSubdivisionRespData(v:Ref<SearchBasicInfoCountryRegionSubdivisionRespData>):SearchBasicInfoCountryRegionSubdivisionRespData
	export function emptyBasicEmployee():BasicEmployee
	export function emptyRefBasicEmployee():Ref<BasicEmployee>
	export function refOfBasicEmployee(x:BasicEmployee,v:Ref<BasicEmployee>)
	export function unRefBasicEmployee(v:Ref<BasicEmployee>):BasicEmployee
	export function emptyBatchGetDepartmentReqBuilder():BatchGetDepartmentReqBuilder
	export function emptyRefBatchGetDepartmentReqBuilder():Ref<BatchGetDepartmentReqBuilder>
	export function refOfBatchGetDepartmentReqBuilder(x:BatchGetDepartmentReqBuilder,v:Ref<BatchGetDepartmentReqBuilder>)
	export function unRefBatchGetDepartmentReqBuilder(v:Ref<BatchGetDepartmentReqBuilder>):BatchGetDepartmentReqBuilder
	export function emptyBatchGetEmployeesJobDataPathReqBodyBuilder():BatchGetEmployeesJobDataPathReqBodyBuilder
	export function emptyRefBatchGetEmployeesJobDataPathReqBodyBuilder():Ref<BatchGetEmployeesJobDataPathReqBodyBuilder>
	export function refOfBatchGetEmployeesJobDataPathReqBodyBuilder(x:BatchGetEmployeesJobDataPathReqBodyBuilder,v:Ref<BatchGetEmployeesJobDataPathReqBodyBuilder>)
	export function unRefBatchGetEmployeesJobDataPathReqBodyBuilder(v:Ref<BatchGetEmployeesJobDataPathReqBodyBuilder>):BatchGetEmployeesJobDataPathReqBodyBuilder
	export function emptyParentsDepartmentReqBody():ParentsDepartmentReqBody
	export function emptyRefParentsDepartmentReqBody():Ref<ParentsDepartmentReqBody>
	export function refOfParentsDepartmentReqBody(x:ParentsDepartmentReqBody,v:Ref<ParentsDepartmentReqBody>)
	export function unRefParentsDepartmentReqBody(v:Ref<ParentsDepartmentReqBody>):ParentsDepartmentReqBody
	export function emptyParentsDepartmentResp():ParentsDepartmentResp
	export function emptyRefParentsDepartmentResp():Ref<ParentsDepartmentResp>
	export function refOfParentsDepartmentResp(x:ParentsDepartmentResp,v:Ref<ParentsDepartmentResp>)
	export function unRefParentsDepartmentResp(v:Ref<ParentsDepartmentResp>):ParentsDepartmentResp
	export function emptyGetProcessFormVariableDataReq():GetProcessFormVariableDataReq
	export function emptyRefGetProcessFormVariableDataReq():Ref<GetProcessFormVariableDataReq>
	export function refOfGetProcessFormVariableDataReq(x:GetProcessFormVariableDataReq,v:Ref<GetProcessFormVariableDataReq>)
	export function unRefGetProcessFormVariableDataReq(v:Ref<GetProcessFormVariableDataReq>):GetProcessFormVariableDataReq
	export function emptyJobGrade():JobGrade
	export function emptyRefJobGrade():Ref<JobGrade>
	export function refOfJobGrade(x:JobGrade,v:Ref<JobGrade>)
	export function unRefJobGrade(v:Ref<JobGrade>):JobGrade
	export function emptyOnboardingQrCodeBuilder():OnboardingQrCodeBuilder
	export function emptyRefOnboardingQrCodeBuilder():Ref<OnboardingQrCodeBuilder>
	export function refOfOnboardingQrCodeBuilder(x:OnboardingQrCodeBuilder,v:Ref<OnboardingQrCodeBuilder>)
	export function unRefOnboardingQrCodeBuilder(v:Ref<OnboardingQrCodeBuilder>):OnboardingQrCodeBuilder
	export function emptyListJobReq():ListJobReq
	export function emptyRefListJobReq():Ref<ListJobReq>
	export function refOfListJobReq(x:ListJobReq,v:Ref<ListJobReq>)
	export function unRefListJobReq(v:Ref<ListJobReq>):ListJobReq
	export function emptyPatchPreHireRespData():PatchPreHireRespData
	export function emptyRefPatchPreHireRespData():Ref<PatchPreHireRespData>
	export function refOfPatchPreHireRespData(x:PatchPreHireRespData,v:Ref<PatchPreHireRespData>)
	export function unRefPatchPreHireRespData(v:Ref<PatchPreHireRespData>):PatchPreHireRespData
	export function emptyProfileSettingNameBuilder():ProfileSettingNameBuilder
	export function emptyRefProfileSettingNameBuilder():Ref<ProfileSettingNameBuilder>
	export function refOfProfileSettingNameBuilder(x:ProfileSettingNameBuilder,v:Ref<ProfileSettingNameBuilder>)
	export function unRefProfileSettingNameBuilder(v:Ref<ProfileSettingNameBuilder>):ProfileSettingNameBuilder
	export function emptySearchBasicInfoBankBranchReqBody():SearchBasicInfoBankBranchReqBody
	export function emptyRefSearchBasicInfoBankBranchReqBody():Ref<SearchBasicInfoBankBranchReqBody>
	export function refOfSearchBasicInfoBankBranchReqBody(x:SearchBasicInfoBankBranchReqBody,v:Ref<SearchBasicInfoBankBranchReqBody>)
	export function unRefSearchBasicInfoBankBranchReqBody(v:Ref<SearchBasicInfoBankBranchReqBody>):SearchBasicInfoBankBranchReqBody
	export function emptySearchProbationReqBuilder():SearchProbationReqBuilder
	export function emptyRefSearchProbationReqBuilder():Ref<SearchProbationReqBuilder>
	export function refOfSearchProbationReqBuilder(x:SearchProbationReqBuilder,v:Ref<SearchProbationReqBuilder>)
	export function unRefSearchProbationReqBuilder(v:Ref<SearchProbationReqBuilder>):SearchProbationReqBuilder
	export function emptyBatchGetJobFamilyReq():BatchGetJobFamilyReq
	export function emptyRefBatchGetJobFamilyReq():Ref<BatchGetJobFamilyReq>
	export function refOfBatchGetJobFamilyReq(x:BatchGetJobFamilyReq,v:Ref<BatchGetJobFamilyReq>)
	export function unRefBatchGetJobFamilyReq(v:Ref<BatchGetJobFamilyReq>):BatchGetJobFamilyReq
	export function emptyEnableDisableAssessmentProbationReq():EnableDisableAssessmentProbationReq
	export function emptyRefEnableDisableAssessmentProbationReq():Ref<EnableDisableAssessmentProbationReq>
	export function refOfEnableDisableAssessmentProbationReq(x:EnableDisableAssessmentProbationReq,v:Ref<EnableDisableAssessmentProbationReq>)
	export function unRefEnableDisableAssessmentProbationReq(v:Ref<EnableDisableAssessmentProbationReq>):EnableDisableAssessmentProbationReq
	export function emptyLeaveBalance():LeaveBalance
	export function emptyRefLeaveBalance():Ref<LeaveBalance>
	export function refOfLeaveBalance(x:LeaveBalance,v:Ref<LeaveBalance>)
	export function unRefLeaveBalance(v:Ref<LeaveBalance>):LeaveBalance
	export function emptyBatchGetJobLevelReqBuilder():BatchGetJobLevelReqBuilder
	export function emptyRefBatchGetJobLevelReqBuilder():Ref<BatchGetJobLevelReqBuilder>
	export function refOfBatchGetJobLevelReqBuilder(x:BatchGetJobLevelReqBuilder,v:Ref<BatchGetJobLevelReqBuilder>)
	export function unRefBatchGetJobLevelReqBuilder(v:Ref<BatchGetJobLevelReqBuilder>):BatchGetJobLevelReqBuilder
	export function emptySearchCostCenterReqBody():SearchCostCenterReqBody
	export function emptyRefSearchCostCenterReqBody():Ref<SearchCostCenterReqBody>
	export function refOfSearchCostCenterReqBody(x:SearchCostCenterReqBody,v:Ref<SearchCostCenterReqBody>)
	export function unRefSearchCostCenterReqBody(v:Ref<SearchCostCenterReqBody>):SearchCostCenterReqBody
	export function emptyWorkforcePlanDetail():WorkforcePlanDetail
	export function emptyRefWorkforcePlanDetail():Ref<WorkforcePlanDetail>
	export function refOfWorkforcePlanDetail(x:WorkforcePlanDetail,v:Ref<WorkforcePlanDetail>)
	export function unRefWorkforcePlanDetail(v:Ref<WorkforcePlanDetail>):WorkforcePlanDetail
	export function emptyBasicInfoUpdate():BasicInfoUpdate
	export function emptyRefBasicInfoUpdate():Ref<BasicInfoUpdate>
	export function refOfBasicInfoUpdate(x:BasicInfoUpdate,v:Ref<BasicInfoUpdate>)
	export function unRefBasicInfoUpdate(v:Ref<BasicInfoUpdate>):BasicInfoUpdate
	export function emptyProfileSettingEducation():ProfileSettingEducation
	export function emptyRefProfileSettingEducation():Ref<ProfileSettingEducation>
	export function refOfProfileSettingEducation(x:ProfileSettingEducation,v:Ref<ProfileSettingEducation>)
	export function unRefProfileSettingEducation(v:Ref<ProfileSettingEducation>):ProfileSettingEducation
	export function emptyWorkExperience():WorkExperience
	export function emptyRefWorkExperience():Ref<WorkExperience>
	export function refOfWorkExperience(x:WorkExperience,v:Ref<WorkExperience>)
	export function unRefWorkExperience(v:Ref<WorkExperience>):WorkExperience
	export function emptyDepartmentForPatch():DepartmentForPatch
	export function emptyRefDepartmentForPatch():Ref<DepartmentForPatch>
	export function refOfDepartmentForPatch(x:DepartmentForPatch,v:Ref<DepartmentForPatch>)
	export function unRefDepartmentForPatch(v:Ref<DepartmentForPatch>):DepartmentForPatch
	export function emptyOnboardingTaskChange():OnboardingTaskChange
	export function emptyRefOnboardingTaskChange():Ref<OnboardingTaskChange>
	export function refOfOnboardingTaskChange(x:OnboardingTaskChange,v:Ref<OnboardingTaskChange>)
	export function unRefOnboardingTaskChange(v:Ref<OnboardingTaskChange>):OnboardingTaskChange
	export function emptyProcessLinkBuilder():ProcessLinkBuilder
	export function emptyRefProcessLinkBuilder():Ref<ProcessLinkBuilder>
	export function refOfProcessLinkBuilder(x:ProcessLinkBuilder,v:Ref<ProcessLinkBuilder>)
	export function unRefProcessLinkBuilder(v:Ref<ProcessLinkBuilder>):ProcessLinkBuilder
	export function emptyProfileSettingCustomGroup():ProfileSettingCustomGroup
	export function emptyRefProfileSettingCustomGroup():Ref<ProfileSettingCustomGroup>
	export function refOfProfileSettingCustomGroup(x:ProfileSettingCustomGroup,v:Ref<ProfileSettingCustomGroup>)
	export function unRefProfileSettingCustomGroup(v:Ref<ProfileSettingCustomGroup>):ProfileSettingCustomGroup
	export function emptyBasicDepartmentBuilder():BasicDepartmentBuilder
	export function emptyRefBasicDepartmentBuilder():Ref<BasicDepartmentBuilder>
	export function refOfBasicDepartmentBuilder(x:BasicDepartmentBuilder,v:Ref<BasicDepartmentBuilder>)
	export function unRefBasicDepartmentBuilder(v:Ref<BasicDepartmentBuilder>):BasicDepartmentBuilder
	export function emptyBatchGetJobLevelRespData():BatchGetJobLevelRespData
	export function emptyRefBatchGetJobLevelRespData():Ref<BatchGetJobLevelRespData>
	export function refOfBatchGetJobLevelRespData(x:BatchGetJobLevelRespData,v:Ref<BatchGetJobLevelRespData>)
	export function unRefBatchGetJobLevelRespData(v:Ref<BatchGetJobLevelRespData>):BatchGetJobLevelRespData
	export function emptyCountryRegion():CountryRegion
	export function emptyRefCountryRegion():Ref<CountryRegion>
	export function refOfCountryRegion(x:CountryRegion,v:Ref<CountryRegion>)
	export function unRefCountryRegion(v:Ref<CountryRegion>):CountryRegion
	export function emptyEmployeeInternationalAssignment():EmployeeInternationalAssignment
	export function emptyRefEmployeeInternationalAssignment():Ref<EmployeeInternationalAssignment>
	export function refOfEmployeeInternationalAssignment(x:EmployeeInternationalAssignment,v:Ref<EmployeeInternationalAssignment>)
	export function unRefEmployeeInternationalAssignment(v:Ref<EmployeeInternationalAssignment>):EmployeeInternationalAssignment
	export function emptyEmploymentLeaveBalanceBuilder():EmploymentLeaveBalanceBuilder
	export function emptyRefEmploymentLeaveBalanceBuilder():Ref<EmploymentLeaveBalanceBuilder>
	export function refOfEmploymentLeaveBalanceBuilder(x:EmploymentLeaveBalanceBuilder,v:Ref<EmploymentLeaveBalanceBuilder>)
	export function unRefEmploymentLeaveBalanceBuilder(v:Ref<EmploymentLeaveBalanceBuilder>):EmploymentLeaveBalanceBuilder
	export function emptyP2ProcessApproverUpdatedV2():P2ProcessApproverUpdatedV2
	export function emptyRefP2ProcessApproverUpdatedV2():Ref<P2ProcessApproverUpdatedV2>
	export function refOfP2ProcessApproverUpdatedV2(x:P2ProcessApproverUpdatedV2,v:Ref<P2ProcessApproverUpdatedV2>)
	export function unRefP2ProcessApproverUpdatedV2(v:Ref<P2ProcessApproverUpdatedV2>):P2ProcessApproverUpdatedV2
	export function emptyProcessCcItemBuilder():ProcessCcItemBuilder
	export function emptyRefProcessCcItemBuilder():Ref<ProcessCcItemBuilder>
	export function refOfProcessCcItemBuilder(x:ProcessCcItemBuilder,v:Ref<ProcessCcItemBuilder>)
	export function unRefProcessCcItemBuilder(v:Ref<ProcessCcItemBuilder>):ProcessCcItemBuilder
	export function emptyProfileSettingCustomField():ProfileSettingCustomField
	export function emptyRefProfileSettingCustomField():Ref<ProfileSettingCustomField>
	export function refOfProfileSettingCustomField(x:ProfileSettingCustomField,v:Ref<ProfileSettingCustomField>)
	export function unRefProfileSettingCustomField(v:Ref<ProfileSettingCustomField>):ProfileSettingCustomField
	export function emptyBatchGetEmployeesBpReqBody():BatchGetEmployeesBpReqBody
	export function emptyRefBatchGetEmployeesBpReqBody():Ref<BatchGetEmployeesBpReqBody>
	export function refOfBatchGetEmployeesBpReqBody(x:BatchGetEmployeesBpReqBody,v:Ref<BatchGetEmployeesBpReqBody>)
	export function unRefBatchGetEmployeesBpReqBody(v:Ref<BatchGetEmployeesBpReqBody>):BatchGetEmployeesBpReqBody
	export function emptyDimension():Dimension
	export function emptyRefDimension():Ref<Dimension>
	export function refOfDimension(x:Dimension,v:Ref<Dimension>)
	export function unRefDimension(v:Ref<Dimension>):Dimension
	export function emptyEducation():Education
	export function emptyRefEducation():Ref<Education>
	export function refOfEducation(x:Education,v:Ref<Education>)
	export function unRefEducation(v:Ref<Education>):Education
	export function emptyJobFamilyBuilder():JobFamilyBuilder
	export function emptyRefJobFamilyBuilder():Ref<JobFamilyBuilder>
	export function refOfJobFamilyBuilder(x:JobFamilyBuilder,v:Ref<JobFamilyBuilder>)
	export function unRefJobFamilyBuilder(v:Ref<JobFamilyBuilder>):JobFamilyBuilder
	export function emptyP2ProcessApproverUpdatedV2Handler():P2ProcessApproverUpdatedV2Handler
	export function emptyRefP2ProcessApproverUpdatedV2Handler():Ref<P2ProcessApproverUpdatedV2Handler>
	export function refOfP2ProcessApproverUpdatedV2Handler(x:P2ProcessApproverUpdatedV2Handler,v:Ref<P2ProcessApproverUpdatedV2Handler>)
	export function unRefP2ProcessApproverUpdatedV2Handler(v:Ref<P2ProcessApproverUpdatedV2Handler>):P2ProcessApproverUpdatedV2Handler
	export function emptyP2ProcessNodeUpdatedV2Handler():P2ProcessNodeUpdatedV2Handler
	export function emptyRefP2ProcessNodeUpdatedV2Handler():Ref<P2ProcessNodeUpdatedV2Handler>
	export function refOfP2ProcessNodeUpdatedV2Handler(x:P2ProcessNodeUpdatedV2Handler,v:Ref<P2ProcessNodeUpdatedV2Handler>)
	export function unRefP2ProcessNodeUpdatedV2Handler(v:Ref<P2ProcessNodeUpdatedV2Handler>):P2ProcessNodeUpdatedV2Handler
	export function emptyP2ProcessUpdatedV2Handler():P2ProcessUpdatedV2Handler
	export function emptyRefP2ProcessUpdatedV2Handler():Ref<P2ProcessUpdatedV2Handler>
	export function refOfP2ProcessUpdatedV2Handler(x:P2ProcessUpdatedV2Handler,v:Ref<P2ProcessUpdatedV2Handler>)
	export function unRefP2ProcessUpdatedV2Handler(v:Ref<P2ProcessUpdatedV2Handler>):P2ProcessUpdatedV2Handler
	export function emptyUserContactBuilder():UserContactBuilder
	export function emptyRefUserContactBuilder():Ref<UserContactBuilder>
	export function refOfUserContactBuilder(x:UserContactBuilder,v:Ref<UserContactBuilder>)
	export function unRefUserContactBuilder(v:Ref<UserContactBuilder>):UserContactBuilder
	export function emptyBatchGetJobFamilyReqBodyBuilder():BatchGetJobFamilyReqBodyBuilder
	export function emptyRefBatchGetJobFamilyReqBodyBuilder():Ref<BatchGetJobFamilyReqBodyBuilder>
	export function refOfBatchGetJobFamilyReqBodyBuilder(x:BatchGetJobFamilyReqBodyBuilder,v:Ref<BatchGetJobFamilyReqBodyBuilder>)
	export function unRefBatchGetJobFamilyReqBodyBuilder(v:Ref<BatchGetJobFamilyReqBodyBuilder>):BatchGetJobFamilyReqBodyBuilder
	export function emptyCreateCostCenterVersionReqBuilder():CreateCostCenterVersionReqBuilder
	export function emptyRefCreateCostCenterVersionReqBuilder():Ref<CreateCostCenterVersionReqBuilder>
	export function refOfCreateCostCenterVersionReqBuilder(x:CreateCostCenterVersionReqBuilder,v:Ref<CreateCostCenterVersionReqBuilder>)
	export function unRefCreateCostCenterVersionReqBuilder(v:Ref<CreateCostCenterVersionReqBuilder>):CreateCostCenterVersionReqBuilder
	export function emptyCreateProbationAssessmentReqBodyBuilder():CreateProbationAssessmentReqBodyBuilder
	export function emptyRefCreateProbationAssessmentReqBodyBuilder():Ref<CreateProbationAssessmentReqBodyBuilder>
	export function refOfCreateProbationAssessmentReqBodyBuilder(x:CreateProbationAssessmentReqBodyBuilder,v:Ref<CreateProbationAssessmentReqBodyBuilder>)
	export function unRefCreateProbationAssessmentReqBodyBuilder(v:Ref<CreateProbationAssessmentReqBodyBuilder>):CreateProbationAssessmentReqBodyBuilder
	export function emptyInternationalAssignmentV2():InternationalAssignmentV2
	export function emptyRefInternationalAssignmentV2():Ref<InternationalAssignmentV2>
	export function refOfInternationalAssignmentV2(x:InternationalAssignmentV2,v:Ref<InternationalAssignmentV2>)
	export function unRefInternationalAssignmentV2(v:Ref<InternationalAssignmentV2>):InternationalAssignmentV2
	export function emptyLangText():LangText
	export function emptyRefLangText():Ref<LangText>
	export function refOfLangText(x:LangText,v:Ref<LangText>)
	export function unRefLangText(v:Ref<LangText>):LangText
	export function emptyLeaveGrantingRecordBuilder():LeaveGrantingRecordBuilder
	export function emptyRefLeaveGrantingRecordBuilder():Ref<LeaveGrantingRecordBuilder>
	export function refOfLeaveGrantingRecordBuilder(x:LeaveGrantingRecordBuilder,v:Ref<LeaveGrantingRecordBuilder>)
	export function unRefLeaveGrantingRecordBuilder(v:Ref<LeaveGrantingRecordBuilder>):LeaveGrantingRecordBuilder
	export function emptyPrehireCreateBuilder():PrehireCreateBuilder
	export function emptyRefPrehireCreateBuilder():Ref<PrehireCreateBuilder>
	export function refOfPrehireCreateBuilder(x:PrehireCreateBuilder,v:Ref<PrehireCreateBuilder>)
	export function unRefPrehireCreateBuilder(v:Ref<PrehireCreateBuilder>):PrehireCreateBuilder
	export function emptySearchBasicInfoCountryRegionIterator():SearchBasicInfoCountryRegionIterator
	export function emptyRefSearchBasicInfoCountryRegionIterator():Ref<SearchBasicInfoCountryRegionIterator>
	export function refOfSearchBasicInfoCountryRegionIterator(x:SearchBasicInfoCountryRegionIterator,v:Ref<SearchBasicInfoCountryRegionIterator>)
	export function unRefSearchBasicInfoCountryRegionIterator(v:Ref<SearchBasicInfoCountryRegionIterator>):SearchBasicInfoCountryRegionIterator
	export function emptyCreatePreHireResp():CreatePreHireResp
	export function emptyRefCreatePreHireResp():Ref<CreatePreHireResp>
	export function refOfCreatePreHireResp(x:CreatePreHireResp,v:Ref<CreatePreHireResp>)
	export function unRefCreatePreHireResp(v:Ref<CreatePreHireResp>):CreatePreHireResp
	export function emptyCustomOrgCreate():CustomOrgCreate
	export function emptyRefCustomOrgCreate():Ref<CustomOrgCreate>
	export function refOfCustomOrgCreate(x:CustomOrgCreate,v:Ref<CustomOrgCreate>)
	export function unRefCustomOrgCreate(v:Ref<CustomOrgCreate>):CustomOrgCreate
	export function emptyEmployeeDomainEventData():EmployeeDomainEventData
	export function emptyRefEmployeeDomainEventData():Ref<EmployeeDomainEventData>
	export function refOfEmployeeDomainEventData(x:EmployeeDomainEventData,v:Ref<EmployeeDomainEventData>)
	export function unRefEmployeeDomainEventData(v:Ref<EmployeeDomainEventData>):EmployeeDomainEventData
	export function emptyProcessLink():ProcessLink
	export function emptyRefProcessLink():Ref<ProcessLink>
	export function refOfProcessLink(x:ProcessLink,v:Ref<ProcessLink>)
	export function unRefProcessLink(v:Ref<ProcessLink>):ProcessLink
	export function emptyProfileSettingEmpInfoForUpdate():ProfileSettingEmpInfoForUpdate
	export function emptyRefProfileSettingEmpInfoForUpdate():Ref<ProfileSettingEmpInfoForUpdate>
	export function refOfProfileSettingEmpInfoForUpdate(x:ProfileSettingEmpInfoForUpdate,v:Ref<ProfileSettingEmpInfoForUpdate>)
	export function unRefProfileSettingEmpInfoForUpdate(v:Ref<ProfileSettingEmpInfoForUpdate>):ProfileSettingEmpInfoForUpdate
	export function emptyDeleteCostCenterVersionReqBuilder():DeleteCostCenterVersionReqBuilder
	export function emptyRefDeleteCostCenterVersionReqBuilder():Ref<DeleteCostCenterVersionReqBuilder>
	export function refOfDeleteCostCenterVersionReqBuilder(x:DeleteCostCenterVersionReqBuilder,v:Ref<DeleteCostCenterVersionReqBuilder>)
	export function unRefDeleteCostCenterVersionReqBuilder(v:Ref<DeleteCostCenterVersionReqBuilder>):DeleteCostCenterVersionReqBuilder
	export function emptyJobChangeBuilder():JobChangeBuilder
	export function emptyRefJobChangeBuilder():Ref<JobChangeBuilder>
	export function refOfJobChangeBuilder(x:JobChangeBuilder,v:Ref<JobChangeBuilder>)
	export function unRefJobChangeBuilder(v:Ref<JobChangeBuilder>):JobChangeBuilder
	export function emptyListProcessIterator():ListProcessIterator
	export function emptyRefListProcessIterator():Ref<ListProcessIterator>
	export function refOfListProcessIterator(x:ListProcessIterator,v:Ref<ListProcessIterator>)
	export function unRefListProcessIterator(v:Ref<ListProcessIterator>):ListProcessIterator
	export function emptyProfileSettingCareerBuilder():ProfileSettingCareerBuilder
	export function emptyRefProfileSettingCareerBuilder():Ref<ProfileSettingCareerBuilder>
	export function refOfProfileSettingCareerBuilder(x:ProfileSettingCareerBuilder,v:Ref<ProfileSettingCareerBuilder>)
	export function unRefProfileSettingCareerBuilder(v:Ref<ProfileSettingCareerBuilder>):ProfileSettingCareerBuilder
	export function emptySearchBasicInfoBankRespData():SearchBasicInfoBankRespData
	export function emptyRefSearchBasicInfoBankRespData():Ref<SearchBasicInfoBankRespData>
	export function refOfSearchBasicInfoBankRespData(x:SearchBasicInfoBankRespData,v:Ref<SearchBasicInfoBankRespData>)
	export function unRefSearchBasicInfoBankRespData(v:Ref<SearchBasicInfoBankRespData>):SearchBasicInfoBankRespData
	export function emptyBatchGetEmployeesBpPathReqBodyBuilder():BatchGetEmployeesBpPathReqBodyBuilder
	export function emptyRefBatchGetEmployeesBpPathReqBodyBuilder():Ref<BatchGetEmployeesBpPathReqBodyBuilder>
	export function refOfBatchGetEmployeesBpPathReqBodyBuilder(x:BatchGetEmployeesBpPathReqBodyBuilder,v:Ref<BatchGetEmployeesBpPathReqBodyBuilder>)
	export function unRefBatchGetEmployeesBpPathReqBodyBuilder(v:Ref<BatchGetEmployeesBpPathReqBodyBuilder>):BatchGetEmployeesBpPathReqBodyBuilder
	export function emptyCreateProbationAssessmentReqBody():CreateProbationAssessmentReqBody
	export function emptyRefCreateProbationAssessmentReqBody():Ref<CreateProbationAssessmentReqBody>
	export function refOfCreateProbationAssessmentReqBody(x:CreateProbationAssessmentReqBody,v:Ref<CreateProbationAssessmentReqBody>)
	export function unRefCreateProbationAssessmentReqBody(v:Ref<CreateProbationAssessmentReqBody>):CreateProbationAssessmentReqBody
	export function emptyInternationalAssignmentV2ForCreateBuilder():InternationalAssignmentV2ForCreateBuilder
	export function emptyRefInternationalAssignmentV2ForCreateBuilder():Ref<InternationalAssignmentV2ForCreateBuilder>
	export function refOfInternationalAssignmentV2ForCreateBuilder(x:InternationalAssignmentV2ForCreateBuilder,v:Ref<InternationalAssignmentV2ForCreateBuilder>)
	export function unRefInternationalAssignmentV2ForCreateBuilder(v:Ref<InternationalAssignmentV2ForCreateBuilder>):InternationalAssignmentV2ForCreateBuilder
}