// Code generated by define_gene; DO NOT EDIT.
package larkspeech_to_text

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/modules/github/com/larksuite/oapi-sdk-go/v3/core"
	_ "github.com/ZenLiuCN/engine/modules/golang/context"
	"github.com/larksuite/oapi-sdk-go/v3/service/speech_to_text/v1"
)

var (
	//go:embed github_com_larksuite_oapi-sdk-go_v3_service_speech_to_text_v1.d.ts
	GithubComLarksuiteOapiSdkGo3ServiceSpeech_to_text1Define   []byte
	GithubComLarksuiteOapiSdkGo3ServiceSpeech_to_text1Declared = map[string]any{
		"newFileRecognizeSpeechPathReqBodyBuilder":   larkspeech_to_text.NewFileRecognizeSpeechPathReqBodyBuilder,
		"newStreamRecognizeSpeechPathReqBodyBuilder": larkspeech_to_text.NewStreamRecognizeSpeechPathReqBodyBuilder,
		"newStreamRecognizeSpeechReqBodyBuilder":     larkspeech_to_text.NewStreamRecognizeSpeechReqBodyBuilder,
		"newStreamConfigBuilder":                     larkspeech_to_text.NewStreamConfigBuilder,
		"newStreamRecognizeSpeechReqBuilder":         larkspeech_to_text.NewStreamRecognizeSpeechReqBuilder,
		"New":                                        larkspeech_to_text.New,
		"newDepartmentIdBuilder":                     larkspeech_to_text.NewDepartmentIdBuilder,
		"newFileConfigBuilder":                       larkspeech_to_text.NewFileConfigBuilder,
		"newFileRecognizeSpeechReqBodyBuilder":       larkspeech_to_text.NewFileRecognizeSpeechReqBodyBuilder,
		"newFileRecognizeSpeechReqBuilder":           larkspeech_to_text.NewFileRecognizeSpeechReqBuilder,
		"newSpeechBuilder":                           larkspeech_to_text.NewSpeechBuilder,

		"emptyDepartmentId":                     engine.Empty[larkspeech_to_text.DepartmentId],
		"emptyRefDepartmentId":                  engine.EmptyRefer[larkspeech_to_text.DepartmentId],
		"refOfDepartmentId":                     engine.ReferOf[larkspeech_to_text.DepartmentId],
		"unRefDepartmentId":                     engine.UnRefer[larkspeech_to_text.DepartmentId],
		"emptyFileRecognizeSpeechResp":          engine.Empty[larkspeech_to_text.FileRecognizeSpeechResp],
		"emptyRefFileRecognizeSpeechResp":       engine.EmptyRefer[larkspeech_to_text.FileRecognizeSpeechResp],
		"refOfFileRecognizeSpeechResp":          engine.ReferOf[larkspeech_to_text.FileRecognizeSpeechResp],
		"unRefFileRecognizeSpeechResp":          engine.UnRefer[larkspeech_to_text.FileRecognizeSpeechResp],
		"emptyStreamRecognizeSpeechReq":         engine.Empty[larkspeech_to_text.StreamRecognizeSpeechReq],
		"emptyRefStreamRecognizeSpeechReq":      engine.EmptyRefer[larkspeech_to_text.StreamRecognizeSpeechReq],
		"refOfStreamRecognizeSpeechReq":         engine.ReferOf[larkspeech_to_text.StreamRecognizeSpeechReq],
		"unRefStreamRecognizeSpeechReq":         engine.UnRefer[larkspeech_to_text.StreamRecognizeSpeechReq],
		"emptyStreamConfig":                     engine.Empty[larkspeech_to_text.StreamConfig],
		"emptyRefStreamConfig":                  engine.EmptyRefer[larkspeech_to_text.StreamConfig],
		"refOfStreamConfig":                     engine.ReferOf[larkspeech_to_text.StreamConfig],
		"unRefStreamConfig":                     engine.UnRefer[larkspeech_to_text.StreamConfig],
		"emptyStreamRecognizeSpeechRespData":    engine.Empty[larkspeech_to_text.StreamRecognizeSpeechRespData],
		"emptyRefStreamRecognizeSpeechRespData": engine.EmptyRefer[larkspeech_to_text.StreamRecognizeSpeechRespData],
		"refOfStreamRecognizeSpeechRespData":    engine.ReferOf[larkspeech_to_text.StreamRecognizeSpeechRespData],
		"unRefStreamRecognizeSpeechRespData":    engine.UnRefer[larkspeech_to_text.StreamRecognizeSpeechRespData],
		"emptyFileRecognizeSpeechReq":           engine.Empty[larkspeech_to_text.FileRecognizeSpeechReq],
		"emptyRefFileRecognizeSpeechReq":        engine.EmptyRefer[larkspeech_to_text.FileRecognizeSpeechReq],
		"refOfFileRecognizeSpeechReq":           engine.ReferOf[larkspeech_to_text.FileRecognizeSpeechReq],
		"unRefFileRecognizeSpeechReq":           engine.UnRefer[larkspeech_to_text.FileRecognizeSpeechReq],
		"emptyFileConfig":                       engine.Empty[larkspeech_to_text.FileConfig],
		"emptyRefFileConfig":                    engine.EmptyRefer[larkspeech_to_text.FileConfig],
		"refOfFileConfig":                       engine.ReferOf[larkspeech_to_text.FileConfig],
		"unRefFileConfig":                       engine.UnRefer[larkspeech_to_text.FileConfig],
		"emptyV1":                               engine.Empty[larkspeech_to_text.V1],
		"emptyRefV1":                            engine.EmptyRefer[larkspeech_to_text.V1],
		"refOfV1":                               engine.ReferOf[larkspeech_to_text.V1],
		"unRefV1":                               engine.UnRefer[larkspeech_to_text.V1],
		"emptyStreamRecognizeSpeechReqBody":     engine.Empty[larkspeech_to_text.StreamRecognizeSpeechReqBody],
		"emptyRefStreamRecognizeSpeechReqBody":  engine.EmptyRefer[larkspeech_to_text.StreamRecognizeSpeechReqBody],
		"refOfStreamRecognizeSpeechReqBody":     engine.ReferOf[larkspeech_to_text.StreamRecognizeSpeechReqBody],
		"unRefStreamRecognizeSpeechReqBody":     engine.UnRefer[larkspeech_to_text.StreamRecognizeSpeechReqBody],
		"emptyStreamRecognizeSpeechResp":        engine.Empty[larkspeech_to_text.StreamRecognizeSpeechResp],
		"emptyRefStreamRecognizeSpeechResp":     engine.EmptyRefer[larkspeech_to_text.StreamRecognizeSpeechResp],
		"refOfStreamRecognizeSpeechResp":        engine.ReferOf[larkspeech_to_text.StreamRecognizeSpeechResp],
		"unRefStreamRecognizeSpeechResp":        engine.UnRefer[larkspeech_to_text.StreamRecognizeSpeechResp],
		"emptyFileRecognizeSpeechReqBody":       engine.Empty[larkspeech_to_text.FileRecognizeSpeechReqBody],
		"emptyRefFileRecognizeSpeechReqBody":    engine.EmptyRefer[larkspeech_to_text.FileRecognizeSpeechReqBody],
		"refOfFileRecognizeSpeechReqBody":       engine.ReferOf[larkspeech_to_text.FileRecognizeSpeechReqBody],
		"unRefFileRecognizeSpeechReqBody":       engine.UnRefer[larkspeech_to_text.FileRecognizeSpeechReqBody],
		"emptyFileRecognizeSpeechRespData":      engine.Empty[larkspeech_to_text.FileRecognizeSpeechRespData],
		"emptyRefFileRecognizeSpeechRespData":   engine.EmptyRefer[larkspeech_to_text.FileRecognizeSpeechRespData],
		"refOfFileRecognizeSpeechRespData":      engine.ReferOf[larkspeech_to_text.FileRecognizeSpeechRespData],
		"unRefFileRecognizeSpeechRespData":      engine.UnRefer[larkspeech_to_text.FileRecognizeSpeechRespData],
		"emptySpeech":                           engine.Empty[larkspeech_to_text.Speech],
		"emptyRefSpeech":                        engine.EmptyRefer[larkspeech_to_text.Speech],
		"refOfSpeech":                           engine.ReferOf[larkspeech_to_text.Speech],
		"unRefSpeech":                           engine.UnRefer[larkspeech_to_text.Speech]}
)

func init() {
	engine.RegisterModule(GithubComLarksuiteOapiSdkGo3ServiceSpeech_to_text1Module{})
}

type GithubComLarksuiteOapiSdkGo3ServiceSpeech_to_text1Module struct{}

func (S GithubComLarksuiteOapiSdkGo3ServiceSpeech_to_text1Module) Identity() string {
	return "github.com/larksuite/oapi-sdk-go/v3/service/speech_to_text/v1"
}
func (S GithubComLarksuiteOapiSdkGo3ServiceSpeech_to_text1Module) TypeDefine() []byte {
	return GithubComLarksuiteOapiSdkGo3ServiceSpeech_to_text1Define
}
func (S GithubComLarksuiteOapiSdkGo3ServiceSpeech_to_text1Module) Exports() map[string]any {
	return GithubComLarksuiteOapiSdkGo3ServiceSpeech_to_text1Declared
}
