// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'github.com/larksuite/oapi-sdk-go/v3/service/hire/v1'{

	// @ts-ignore
	import * as larkcore from 'github.com/larksuite/oapi-sdk-go/v3/core'
	// @ts-ignore
	import * as context from 'golang/context'
	// @ts-ignore
	import * as larkevent from 'github.com/larksuite/oapi-sdk-go/v3/event'
	// @ts-ignore
	import type {Nothing,Ref,Struct,int,error,bool,float64,Alias} from 'go'
	export interface Ability extends Struct<Ability>{

			id:Ref<string>
			name:Ref<I18n>
			description:Ref<I18n>
	}
	export interface AbilityBuilder extends Struct<AbilityBuilder>{

			id(id:string):Ref<AbilityBuilder>
			name(name:Ref<I18n>):Ref<AbilityBuilder>
			description(description:Ref<I18n>):Ref<AbilityBuilder>
			build():Ref<Ability>
	}
	export interface Acceptance extends Struct<Acceptance>{

			operatorType:Ref<int>
			conclusion:Ref<int>
			memo:Ref<string>
			operateTime:Ref<string>
	}
	export interface AcceptanceBuilder extends Struct<AcceptanceBuilder>{

			operatorType(operatorType:int):Ref<AcceptanceBuilder>
			conclusion(conclusion:int):Ref<AcceptanceBuilder>
			memo(memo:string):Ref<AcceptanceBuilder>
			operateTime(operateTime:string):Ref<AcceptanceBuilder>
			build():Ref<Acceptance>
	}
	export interface Account extends Struct<Account>{

			accountId:Ref<string>
			assets:Ref<Assets>
			status:Ref<int>
	}
	export interface AccountBuilder extends Struct<AccountBuilder>{

			accountId(accountId:string):Ref<AccountBuilder>
			assets(assets:Ref<Assets>):Ref<AccountBuilder>
			status(status:int):Ref<AccountBuilder>
			build():Ref<Account>
	}
	//2
	export const ActivityStatusListExamMarkingTask已阅卷:int
	//1
	export const ActivityStatusListExamMarkingTask待阅卷:int
	//5
	export const ActivityStatusListInterviewTask已终止:int
	//3
	export const ActivityStatusListInterviewTask已评价:int
	//1
	export const ActivityStatusListInterviewTask未开始:int
	//2
	export const ActivityStatusListInterviewTask未评价:int
	//2
	export const ActivityStatus已评估:int
	//1
	export const ActivityStatus待评估:int
	//3
	export const ActivityStatus无需评估:int
	export interface AddToFolderTalentPathReqBodyBuilder extends Struct<AddToFolderTalentPathReqBodyBuilder>{

			talentIdList(talentIdList:string[]):Ref<AddToFolderTalentPathReqBodyBuilder>
			folderId(folderId:string):Ref<AddToFolderTalentPathReqBodyBuilder>
			build():Ref<AddToFolderTalentReqBody>
	}
	export interface AddToFolderTalentReq extends Struct<AddToFolderTalentReq>{

			body:Ref<AddToFolderTalentReqBody>
	}
	export interface AddToFolderTalentReqBody extends Struct<AddToFolderTalentReqBody>{

			talentIdList:string[]
			folderId:Ref<string>
	}
	export interface AddToFolderTalentReqBodyBuilder extends Struct<AddToFolderTalentReqBodyBuilder>{

			talentIdList(talentIdList:string[]):Ref<AddToFolderTalentReqBodyBuilder>
			folderId(folderId:string):Ref<AddToFolderTalentReqBodyBuilder>
			build():Ref<AddToFolderTalentReqBody>
	}
	export interface AddToFolderTalentReqBuilder extends Struct<AddToFolderTalentReqBuilder>{

			body(body:Ref<AddToFolderTalentReqBody>):Ref<AddToFolderTalentReqBuilder>
			build():Ref<AddToFolderTalentReq>
	}
	export interface AddToFolderTalentResp extends Struct<AddToFolderTalentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<AddToFolderTalentRespData>
			success():bool
	}
	export interface AddToFolderTalentRespData extends Struct<AddToFolderTalentRespData>{

			talentIdList:string[]
			folderId:Ref<string>
	}
	//2
	export const AddTypeAddAndRemoveFromOrigin:int
	//1
	export const AddTypeOnlyAdd:int
	export interface Agency extends Struct<Agency>{

			id:Ref<string>
			name:Ref<string>
			contactorId:Ref<string>
			contactorName:Ref<I18n>
	}
	export interface AgencyBuilder extends Struct<AgencyBuilder>{

			id(id:string):Ref<AgencyBuilder>
			name(name:string):Ref<AgencyBuilder>
			contactorId(contactorId:string):Ref<AgencyBuilder>
			contactorName(contactorName:Ref<I18n>):Ref<AgencyBuilder>
			build():Ref<Agency>
	}
	export interface AgencyProtection extends Struct<AgencyProtection>{

			protectionType:Ref<int>
			applicationId:Ref<string>
			startTime:Ref<string>
			expireTime:Ref<string>
			agencySupplierId:Ref<string>
			agencySupplierName:Ref<I18n>
			agencySupplierUserId:Ref<string>
			agencySupplierUserName:Ref<I18n>
	}
	export interface AgencyProtectionBuilder extends Struct<AgencyProtectionBuilder>{

			protectionType(protectionType:int):Ref<AgencyProtectionBuilder>
			applicationId(applicationId:string):Ref<AgencyProtectionBuilder>
			startTime(startTime:string):Ref<AgencyProtectionBuilder>
			expireTime(expireTime:string):Ref<AgencyProtectionBuilder>
			agencySupplierId(agencySupplierId:string):Ref<AgencyProtectionBuilder>
			agencySupplierName(agencySupplierName:Ref<I18n>):Ref<AgencyProtectionBuilder>
			agencySupplierUserId(agencySupplierUserId:string):Ref<AgencyProtectionBuilder>
			agencySupplierUserName(agencySupplierUserName:Ref<I18n>):Ref<AgencyProtectionBuilder>
			build():Ref<AgencyProtection>
	}
	export interface AppliOfferBasicCustObj extends Struct<AppliOfferBasicCustObj>{

			id:Ref<string>
			name:Ref<OfferSchemaName>
			type:Ref<string>
			value:Ref<string>
			optionValueList:Ref<AppliOfferBasicCustObjOpV>[]
	}
	export interface AppliOfferBasicCustObjBuilder extends Struct<AppliOfferBasicCustObjBuilder>{

			id(id:string):Ref<AppliOfferBasicCustObjBuilder>
			name(name:Ref<OfferSchemaName>):Ref<AppliOfferBasicCustObjBuilder>
			type(type_:string):Ref<AppliOfferBasicCustObjBuilder>
			value(value:string):Ref<AppliOfferBasicCustObjBuilder>
			optionValueList(optionValueList:Ref<AppliOfferBasicCustObjOpV>[]):Ref<AppliOfferBasicCustObjBuilder>
			build():Ref<AppliOfferBasicCustObj>
	}
	export interface AppliOfferBasicCustObjOpV extends Struct<AppliOfferBasicCustObjOpV>{

			zhCn:Ref<string>
			enUs:Ref<string>
	}
	export interface AppliOfferBasicCustObjOpVBuilder extends Struct<AppliOfferBasicCustObjOpVBuilder>{

			zhCn(zhCn:string):Ref<AppliOfferBasicCustObjOpVBuilder>
			enUs(enUs:string):Ref<AppliOfferBasicCustObjOpVBuilder>
			build():Ref<AppliOfferBasicCustObjOpV>
	}
	export interface AppliOfferBasicInfoUser extends Struct<AppliOfferBasicInfoUser>{

			id:Ref<string>
			name:Ref<string>
			enName:Ref<string>
			avatar:Ref<string>
			department:Ref<Department>
			timezone:Ref<string>
			phone:Ref<string>
			email:Ref<string>
			inAppScope:Ref<bool>
	}
	export interface AppliOfferBasicInfoUserBuilder extends Struct<AppliOfferBasicInfoUserBuilder>{

			id(id:string):Ref<AppliOfferBasicInfoUserBuilder>
			name(name:string):Ref<AppliOfferBasicInfoUserBuilder>
			enName(enName:string):Ref<AppliOfferBasicInfoUserBuilder>
			avatar(avatar:string):Ref<AppliOfferBasicInfoUserBuilder>
			department(department:Ref<Department>):Ref<AppliOfferBasicInfoUserBuilder>
			timezone(timezone:string):Ref<AppliOfferBasicInfoUserBuilder>
			phone(phone:string):Ref<AppliOfferBasicInfoUserBuilder>
			email(email:string):Ref<AppliOfferBasicInfoUserBuilder>
			inAppScope(inAppScope:bool):Ref<AppliOfferBasicInfoUserBuilder>
			build():Ref<AppliOfferBasicInfoUser>
	}
	export interface AppliOfferOnboardProfile extends Struct<AppliOfferOnboardProfile>{

			offerId:Ref<string>
			department:Ref<Department>
			recruitmentType:Ref<RecruitmentType>
			sequence:Ref<Sequence>
			level:Ref<Level>
			onboardAddress:Ref<AppliOfferOnboardProfileAdd>
			workAddress:Ref<AppliOfferOnboardProfileAdd>
			leader:Ref<AppliOfferBasicInfoUser>
			isWorkAddressSameToOnboard:Ref<bool>
			probationMonth:Ref<int>
			contractYear:Ref<int>
	}
	export interface AppliOfferOnboardProfileAdd extends Struct<AppliOfferOnboardProfileAdd>{

			id:Ref<string>
			name:Ref<string>
			enName:Ref<string>
			district:Ref<AppliOfferOnboardProfileCity>
			city:Ref<AppliOfferOnboardProfileCity>
			state:Ref<AppliOfferOnboardProfileCity>
			country:Ref<AppliOfferOnboardProfileCity>
			usageIdList:string[]
			activeStatus:Ref<int>
	}
	export interface AppliOfferOnboardProfileAddBuilder extends Struct<AppliOfferOnboardProfileAddBuilder>{

			id(id:string):Ref<AppliOfferOnboardProfileAddBuilder>
			name(name:string):Ref<AppliOfferOnboardProfileAddBuilder>
			enName(enName:string):Ref<AppliOfferOnboardProfileAddBuilder>
			district(district:Ref<AppliOfferOnboardProfileCity>):Ref<AppliOfferOnboardProfileAddBuilder>
			city(city:Ref<AppliOfferOnboardProfileCity>):Ref<AppliOfferOnboardProfileAddBuilder>
			state(state:Ref<AppliOfferOnboardProfileCity>):Ref<AppliOfferOnboardProfileAddBuilder>
			country(country:Ref<AppliOfferOnboardProfileCity>):Ref<AppliOfferOnboardProfileAddBuilder>
			usageIdList(usageIdList:string[]):Ref<AppliOfferOnboardProfileAddBuilder>
			activeStatus(activeStatus:int):Ref<AppliOfferOnboardProfileAddBuilder>
			build():Ref<AppliOfferOnboardProfileAdd>
	}
	export interface AppliOfferOnboardProfileBuilder extends Struct<AppliOfferOnboardProfileBuilder>{

			offerId(offerId:string):Ref<AppliOfferOnboardProfileBuilder>
			department(department:Ref<Department>):Ref<AppliOfferOnboardProfileBuilder>
			recruitmentType(recruitmentType:Ref<RecruitmentType>):Ref<AppliOfferOnboardProfileBuilder>
			sequence(sequence:Ref<Sequence>):Ref<AppliOfferOnboardProfileBuilder>
			level(level:Ref<Level>):Ref<AppliOfferOnboardProfileBuilder>
			onboardAddress(onboardAddress:Ref<AppliOfferOnboardProfileAdd>):Ref<AppliOfferOnboardProfileBuilder>
			workAddress(workAddress:Ref<AppliOfferOnboardProfileAdd>):Ref<AppliOfferOnboardProfileBuilder>
			leader(leader:Ref<AppliOfferBasicInfoUser>):Ref<AppliOfferOnboardProfileBuilder>
			isWorkAddressSameToOnboard(isWorkAddressSameToOnboard:bool):Ref<AppliOfferOnboardProfileBuilder>
			probationMonth(probationMonth:int):Ref<AppliOfferOnboardProfileBuilder>
			contractYear(contractYear:int):Ref<AppliOfferOnboardProfileBuilder>
			build():Ref<AppliOfferOnboardProfile>
	}
	export interface AppliOfferOnboardProfileCity extends Struct<AppliOfferOnboardProfileCity>{

			code:Ref<string>
			name:Ref<string>
			enName:Ref<string>
			locationType:Ref<int>
	}
	export interface AppliOfferOnboardProfileCityBuilder extends Struct<AppliOfferOnboardProfileCityBuilder>{

			code(code:string):Ref<AppliOfferOnboardProfileCityBuilder>
			name(name:string):Ref<AppliOfferOnboardProfileCityBuilder>
			enName(enName:string):Ref<AppliOfferOnboardProfileCityBuilder>
			locationType(locationType:int):Ref<AppliOfferOnboardProfileCityBuilder>
			build():Ref<AppliOfferOnboardProfileCity>
	}
	export interface AppliOfferSalaryPlanTemplate extends Struct<AppliOfferSalaryPlanTemplate>{

			templateKey:Ref<string>
			totalAmount:Ref<string>
			currency:Ref<string>
			salaryContent:Ref<string>
	}
	export interface AppliOfferSalaryPlanTemplateBuilder extends Struct<AppliOfferSalaryPlanTemplateBuilder>{

			templateKey(templateKey:string):Ref<AppliOfferSalaryPlanTemplateBuilder>
			totalAmount(totalAmount:string):Ref<AppliOfferSalaryPlanTemplateBuilder>
			currency(currency:string):Ref<AppliOfferSalaryPlanTemplateBuilder>
			salaryContent(salaryContent:string):Ref<AppliOfferSalaryPlanTemplateBuilder>
			build():Ref<AppliOfferSalaryPlanTemplate>
	}
	export interface AppliTalentAttachResumeInfo extends Struct<AppliTalentAttachResumeInfo>{

			id:Ref<string>
			name:Ref<string>
	}
	export interface AppliTalentAttachResumeInfoBuilder extends Struct<AppliTalentAttachResumeInfoBuilder>{

			id(id:string):Ref<AppliTalentAttachResumeInfoBuilder>
			name(name:string):Ref<AppliTalentAttachResumeInfoBuilder>
			build():Ref<AppliTalentAttachResumeInfo>
	}
	export interface AppliTalentCertificateInfo extends Struct<AppliTalentCertificateInfo>{

			id:Ref<string>
			name:Ref<string>
			desc:Ref<string>
	}
	export interface AppliTalentCertificateInfoBuilder extends Struct<AppliTalentCertificateInfoBuilder>{

			id(id:string):Ref<AppliTalentCertificateInfoBuilder>
			name(name:string):Ref<AppliTalentCertificateInfoBuilder>
			desc(desc:string):Ref<AppliTalentCertificateInfoBuilder>
			build():Ref<AppliTalentCertificateInfo>
	}
	export interface AppliTalentCompetitionInfo extends Struct<AppliTalentCompetitionInfo>{

			id:Ref<string>
			name:Ref<string>
			desc:Ref<string>
	}
	export interface AppliTalentCompetitionInfoBuilder extends Struct<AppliTalentCompetitionInfoBuilder>{

			id(id:string):Ref<AppliTalentCompetitionInfoBuilder>
			name(name:string):Ref<AppliTalentCompetitionInfoBuilder>
			desc(desc:string):Ref<AppliTalentCompetitionInfoBuilder>
			build():Ref<AppliTalentCompetitionInfo>
	}
	export interface AppliTalentEducationInfo extends Struct<AppliTalentEducationInfo>{

			id:Ref<string>
			degree:Ref<int>
			school:Ref<string>
			fieldOfStudy:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			educationType:Ref<int>
			academicRanking:Ref<int>
			tagList:int[]
	}
	export interface AppliTalentEducationInfoBuilder extends Struct<AppliTalentEducationInfoBuilder>{

			id(id:string):Ref<AppliTalentEducationInfoBuilder>
			degree(degree:int):Ref<AppliTalentEducationInfoBuilder>
			school(school:string):Ref<AppliTalentEducationInfoBuilder>
			fieldOfStudy(fieldOfStudy:string):Ref<AppliTalentEducationInfoBuilder>
			startTime(startTime:string):Ref<AppliTalentEducationInfoBuilder>
			endTime(endTime:string):Ref<AppliTalentEducationInfoBuilder>
			educationType(educationType:int):Ref<AppliTalentEducationInfoBuilder>
			academicRanking(academicRanking:int):Ref<AppliTalentEducationInfoBuilder>
			tagList(tagList:int[]):Ref<AppliTalentEducationInfoBuilder>
			build():Ref<AppliTalentEducationInfo>
	}
	export interface Application extends Struct<Application>{

			id:Ref<string>
			jobId:Ref<string>
			talentId:Ref<string>
			resumeSourceId:Ref<string>
			stage:Ref<ApplicationStageInfo>
			activeStatus:Ref<int>
			deliveryType:Ref<int>
			resumeSourceInfo:Ref<ApplicationResumeSource>
			websiteResumeSource:Ref<ApplicationWebsiteResumeSource>
			talentAttachmentResumeId:Ref<string>
			createTime:Ref<string>
			modifyTime:Ref<string>
			stageTimeList:Ref<ApplicationStageTime>[]
			terminationType:Ref<int>
			terminationReasonList:string[]
			terminationReasonNote:Ref<string>
			applicationPreferredCityList:Ref<CodeNameObject>[]
			creatorId:Ref<string>
	}
	export interface ApplicationBasicInfo extends Struct<ApplicationBasicInfo>{

			stage:Ref<ApplicationStage>
			referral:Ref<ApplicationReferral>
			activeStatus:Ref<int>
			bizCreateTime:Ref<int>
			bizModifyTime:Ref<int>
	}
	export interface ApplicationBasicInfoBuilder extends Struct<ApplicationBasicInfoBuilder>{

			stage(stage:Ref<ApplicationStage>):Ref<ApplicationBasicInfoBuilder>
			referral(referral:Ref<ApplicationReferral>):Ref<ApplicationBasicInfoBuilder>
			activeStatus(activeStatus:int):Ref<ApplicationBasicInfoBuilder>
			bizCreateTime(bizCreateTime:int):Ref<ApplicationBasicInfoBuilder>
			bizModifyTime(bizModifyTime:int):Ref<ApplicationBasicInfoBuilder>
			build():Ref<ApplicationBasicInfo>
	}
	export interface ApplicationBuilder extends Struct<ApplicationBuilder>{

			id(id:string):Ref<ApplicationBuilder>
			jobId(jobId:string):Ref<ApplicationBuilder>
			talentId(talentId:string):Ref<ApplicationBuilder>
			resumeSourceId(resumeSourceId:string):Ref<ApplicationBuilder>
			stage(stage:Ref<ApplicationStageInfo>):Ref<ApplicationBuilder>
			activeStatus(activeStatus:int):Ref<ApplicationBuilder>
			deliveryType(deliveryType:int):Ref<ApplicationBuilder>
			resumeSourceInfo(resumeSourceInfo:Ref<ApplicationResumeSource>):Ref<ApplicationBuilder>
			websiteResumeSource(websiteResumeSource:Ref<ApplicationWebsiteResumeSource>):Ref<ApplicationBuilder>
			talentAttachmentResumeId(talentAttachmentResumeId:string):Ref<ApplicationBuilder>
			createTime(createTime:string):Ref<ApplicationBuilder>
			modifyTime(modifyTime:string):Ref<ApplicationBuilder>
			stageTimeList(stageTimeList:Ref<ApplicationStageTime>[]):Ref<ApplicationBuilder>
			terminationType(terminationType:int):Ref<ApplicationBuilder>
			terminationReasonList(terminationReasonList:string[]):Ref<ApplicationBuilder>
			terminationReasonNote(terminationReasonNote:string):Ref<ApplicationBuilder>
			applicationPreferredCityList(applicationPreferredCityList:Ref<CodeNameObject>[]):Ref<ApplicationBuilder>
			creatorId(creatorId:string):Ref<ApplicationBuilder>
			build():Ref<Application>
	}
	export interface ApplicationJob extends Struct<ApplicationJob>{

			id:Ref<string>
			title:Ref<string>
			city:Ref<City>
			department:Ref<Department>
			recruitmentType:Ref<RecruitmentType>
			description:Ref<string>
			jobProcessId:Ref<string>
			code:Ref<string>
			address:Ref<ApplicationJobAddress>
			country:Ref<Country>
	}
	export interface ApplicationJobAddress extends Struct<ApplicationJobAddress>{

			id:Ref<string>
			name:Ref<string>
			enName:Ref<string>
	}
	export interface ApplicationJobAddressBuilder extends Struct<ApplicationJobAddressBuilder>{

			id(id:string):Ref<ApplicationJobAddressBuilder>
			name(name:string):Ref<ApplicationJobAddressBuilder>
			enName(enName:string):Ref<ApplicationJobAddressBuilder>
			build():Ref<ApplicationJobAddress>
	}
	export interface ApplicationJobBuilder extends Struct<ApplicationJobBuilder>{

			id(id:string):Ref<ApplicationJobBuilder>
			title(title:string):Ref<ApplicationJobBuilder>
			city(city:Ref<City>):Ref<ApplicationJobBuilder>
			department(department:Ref<Department>):Ref<ApplicationJobBuilder>
			recruitmentType(recruitmentType:Ref<RecruitmentType>):Ref<ApplicationJobBuilder>
			description(description:string):Ref<ApplicationJobBuilder>
			jobProcessId(jobProcessId:string):Ref<ApplicationJobBuilder>
			code(code:string):Ref<ApplicationJobBuilder>
			address(address:Ref<ApplicationJobAddress>):Ref<ApplicationJobBuilder>
			country(country:Ref<Country>):Ref<ApplicationJobBuilder>
			build():Ref<ApplicationJob>
	}
	export interface ApplicationOffer extends Struct<ApplicationOffer>{

			id:Ref<string>
			applicationId:Ref<string>
			basicInfo:Ref<ApplicationOfferBasicInfo>
			salaryPlan:Ref<ApplicationOfferSalaryPlan>
			schemaId:Ref<string>
			offerStatus:Ref<int>
			jobInfo:Ref<OfferJobInfo>
			customizedModuleList:Ref<ApplicationOfferCustomModule>[]
			jobRequirementId:Ref<string>
	}
	export interface ApplicationOfferAttachment extends Struct<ApplicationOfferAttachment>{

			attachmentId:Ref<string>
			name:Ref<string>
	}
	export interface ApplicationOfferAttachmentBuilder extends Struct<ApplicationOfferAttachmentBuilder>{

			attachmentId(attachmentId:string):Ref<ApplicationOfferAttachmentBuilder>
			name(name:string):Ref<ApplicationOfferAttachmentBuilder>
			build():Ref<ApplicationOfferAttachment>
	}
	export interface ApplicationOfferBasicInfo extends Struct<ApplicationOfferBasicInfo>{

			offerType:Ref<int>
			remark:Ref<string>
			expireTime:Ref<int>
			ownerUserId:Ref<string>
			creatorUserId:Ref<string>
			employeeType:Ref<BaseBilingualWithId>
			createTime:Ref<string>
			leaderUserId:Ref<string>
			onboardDate:Ref<string>
			departmentId:Ref<string>
			probationMonth:Ref<int>
			contractYear:Ref<int>
			contractPeriod:Ref<ContractPeriodInfo>
			recruitmentType:Ref<BaseBilingualWithId>
			sequence:Ref<BaseBilingualWithId>
			level:Ref<BaseBilingualWithId>
			onboardAddress:Ref<BaseAddress>
			workAddress:Ref<BaseAddress>
			customizeInfoList:Ref<ApplicationOfferCustomValue>[]
			workLocationAddressInfo:Ref<MasterLocationAddressInfo>
	}
	export interface ApplicationOfferBasicInfoBuilder extends Struct<ApplicationOfferBasicInfoBuilder>{

			offerType(offerType:int):Ref<ApplicationOfferBasicInfoBuilder>
			remark(remark:string):Ref<ApplicationOfferBasicInfoBuilder>
			expireTime(expireTime:int):Ref<ApplicationOfferBasicInfoBuilder>
			ownerUserId(ownerUserId:string):Ref<ApplicationOfferBasicInfoBuilder>
			creatorUserId(creatorUserId:string):Ref<ApplicationOfferBasicInfoBuilder>
			employeeType(employeeType:Ref<BaseBilingualWithId>):Ref<ApplicationOfferBasicInfoBuilder>
			createTime(createTime:string):Ref<ApplicationOfferBasicInfoBuilder>
			leaderUserId(leaderUserId:string):Ref<ApplicationOfferBasicInfoBuilder>
			onboardDate(onboardDate:string):Ref<ApplicationOfferBasicInfoBuilder>
			departmentId(departmentId:string):Ref<ApplicationOfferBasicInfoBuilder>
			probationMonth(probationMonth:int):Ref<ApplicationOfferBasicInfoBuilder>
			contractYear(contractYear:int):Ref<ApplicationOfferBasicInfoBuilder>
			contractPeriod(contractPeriod:Ref<ContractPeriodInfo>):Ref<ApplicationOfferBasicInfoBuilder>
			recruitmentType(recruitmentType:Ref<BaseBilingualWithId>):Ref<ApplicationOfferBasicInfoBuilder>
			sequence(sequence:Ref<BaseBilingualWithId>):Ref<ApplicationOfferBasicInfoBuilder>
			level(level:Ref<BaseBilingualWithId>):Ref<ApplicationOfferBasicInfoBuilder>
			onboardAddress(onboardAddress:Ref<BaseAddress>):Ref<ApplicationOfferBasicInfoBuilder>
			workAddress(workAddress:Ref<BaseAddress>):Ref<ApplicationOfferBasicInfoBuilder>
			customizeInfoList(customizeInfoList:Ref<ApplicationOfferCustomValue>[]):Ref<ApplicationOfferBasicInfoBuilder>
			workLocationAddressInfo(workLocationAddressInfo:Ref<MasterLocationAddressInfo>):Ref<ApplicationOfferBasicInfoBuilder>
			build():Ref<ApplicationOfferBasicInfo>
	}
	export interface ApplicationOfferBasicInfoCustomizedObject extends Struct<ApplicationOfferBasicInfoCustomizedObject>{

			id:Ref<string>
			name:Ref<OfferSchemaName>
			type:Ref<string>
			value:Ref<string>
			optionValueList:Ref<ApplicationOfferBasicInfoCustomizedObjectOptionValue>[]
	}
	export interface ApplicationOfferBasicInfoCustomizedObjectBuilder extends Struct<ApplicationOfferBasicInfoCustomizedObjectBuilder>{

			id(id:string):Ref<ApplicationOfferBasicInfoCustomizedObjectBuilder>
			name(name:Ref<OfferSchemaName>):Ref<ApplicationOfferBasicInfoCustomizedObjectBuilder>
			type(type_:string):Ref<ApplicationOfferBasicInfoCustomizedObjectBuilder>
			value(value:string):Ref<ApplicationOfferBasicInfoCustomizedObjectBuilder>
			optionValueList(optionValueList:Ref<ApplicationOfferBasicInfoCustomizedObjectOptionValue>[]):Ref<ApplicationOfferBasicInfoCustomizedObjectBuilder>
			build():Ref<ApplicationOfferBasicInfoCustomizedObject>
	}
	export interface ApplicationOfferBasicInfoCustomizedObjectOptionValue extends Struct<ApplicationOfferBasicInfoCustomizedObjectOptionValue>{

			zhCn:Ref<string>
			enUs:Ref<string>
	}
	export interface ApplicationOfferBasicInfoCustomizedObjectOptionValueBuilder extends Struct<ApplicationOfferBasicInfoCustomizedObjectOptionValueBuilder>{

			zhCn(zhCn:string):Ref<ApplicationOfferBasicInfoCustomizedObjectOptionValueBuilder>
			enUs(enUs:string):Ref<ApplicationOfferBasicInfoCustomizedObjectOptionValueBuilder>
			build():Ref<ApplicationOfferBasicInfoCustomizedObjectOptionValue>
	}
	export interface ApplicationOfferBasicInfoUser extends Struct<ApplicationOfferBasicInfoUser>{

			id:Ref<string>
			name:Ref<string>
			enName:Ref<string>
			avatar:Ref<string>
			department:Ref<Department>
			timezone:Ref<string>
			phone:Ref<string>
			email:Ref<string>
			inAppScope:Ref<bool>
	}
	export interface ApplicationOfferBasicInfoUserBuilder extends Struct<ApplicationOfferBasicInfoUserBuilder>{

			id(id:string):Ref<ApplicationOfferBasicInfoUserBuilder>
			name(name:string):Ref<ApplicationOfferBasicInfoUserBuilder>
			enName(enName:string):Ref<ApplicationOfferBasicInfoUserBuilder>
			avatar(avatar:string):Ref<ApplicationOfferBasicInfoUserBuilder>
			department(department:Ref<Department>):Ref<ApplicationOfferBasicInfoUserBuilder>
			timezone(timezone:string):Ref<ApplicationOfferBasicInfoUserBuilder>
			phone(phone:string):Ref<ApplicationOfferBasicInfoUserBuilder>
			email(email:string):Ref<ApplicationOfferBasicInfoUserBuilder>
			inAppScope(inAppScope:bool):Ref<ApplicationOfferBasicInfoUserBuilder>
			build():Ref<ApplicationOfferBasicInfoUser>
	}
	export interface ApplicationOfferBuilder extends Struct<ApplicationOfferBuilder>{

			id(id:string):Ref<ApplicationOfferBuilder>
			applicationId(applicationId:string):Ref<ApplicationOfferBuilder>
			basicInfo(basicInfo:Ref<ApplicationOfferBasicInfo>):Ref<ApplicationOfferBuilder>
			salaryPlan(salaryPlan:Ref<ApplicationOfferSalaryPlan>):Ref<ApplicationOfferBuilder>
			schemaId(schemaId:string):Ref<ApplicationOfferBuilder>
			offerStatus(offerStatus:int):Ref<ApplicationOfferBuilder>
			jobInfo(jobInfo:Ref<OfferJobInfo>):Ref<ApplicationOfferBuilder>
			customizedModuleList(customizedModuleList:Ref<ApplicationOfferCustomModule>[]):Ref<ApplicationOfferBuilder>
			jobRequirementId(jobRequirementId:string):Ref<ApplicationOfferBuilder>
			build():Ref<ApplicationOffer>
	}
	export interface ApplicationOfferCustomModule extends Struct<ApplicationOfferCustomModule>{

			id:Ref<string>
			objectList:Ref<ApplicationOfferCustomValue>[]
	}
	export interface ApplicationOfferCustomModuleBuilder extends Struct<ApplicationOfferCustomModuleBuilder>{

			id(iD:string):Ref<ApplicationOfferCustomModuleBuilder>
			objectList(objectList:Ref<ApplicationOfferCustomValue>[]):Ref<ApplicationOfferCustomModuleBuilder>
			build():Ref<ApplicationOfferCustomModule>
	}
	export interface ApplicationOfferCustomValue extends Struct<ApplicationOfferCustomValue>{

			objectId:Ref<string>
			customizeValue:Ref<string>
	}
	export interface ApplicationOfferCustomValueBuilder extends Struct<ApplicationOfferCustomValueBuilder>{

			objectId(objectId:string):Ref<ApplicationOfferCustomValueBuilder>
			customizeValue(customizeValue:string):Ref<ApplicationOfferCustomValueBuilder>
			build():Ref<ApplicationOfferCustomValue>
	}
	export interface ApplicationOfferOnboardProfile extends Struct<ApplicationOfferOnboardProfile>{

			offerId:Ref<string>
			department:Ref<Department>
			recruitmentType:Ref<RecruitmentType>
			sequence:Ref<Sequence>
			level:Ref<Level>
			onboardAddress:Ref<ApplicationOfferOnboardProfileAddress>
			workAddress:Ref<ApplicationOfferOnboardProfileAddress>
			leader:Ref<ApplicationOfferBasicInfoUser>
			isWorkAddressSameToOnboard:Ref<bool>
			probationMonth:Ref<int>
			contractYear:Ref<int>
	}
	export interface ApplicationOfferOnboardProfileAddress extends Struct<ApplicationOfferOnboardProfileAddress>{

			id:Ref<string>
			name:Ref<string>
			enName:Ref<string>
			district:Ref<ApplicationOfferOnboardProfileCity>
			city:Ref<ApplicationOfferOnboardProfileCity>
			state:Ref<ApplicationOfferOnboardProfileCity>
			country:Ref<ApplicationOfferOnboardProfileCity>
			usageIdList:string[]
			activeStatus:Ref<int>
	}
	export interface ApplicationOfferOnboardProfileAddressBuilder extends Struct<ApplicationOfferOnboardProfileAddressBuilder>{

			id(id:string):Ref<ApplicationOfferOnboardProfileAddressBuilder>
			name(name:string):Ref<ApplicationOfferOnboardProfileAddressBuilder>
			enName(enName:string):Ref<ApplicationOfferOnboardProfileAddressBuilder>
			district(district:Ref<ApplicationOfferOnboardProfileCity>):Ref<ApplicationOfferOnboardProfileAddressBuilder>
			city(city:Ref<ApplicationOfferOnboardProfileCity>):Ref<ApplicationOfferOnboardProfileAddressBuilder>
			state(state:Ref<ApplicationOfferOnboardProfileCity>):Ref<ApplicationOfferOnboardProfileAddressBuilder>
			country(country:Ref<ApplicationOfferOnboardProfileCity>):Ref<ApplicationOfferOnboardProfileAddressBuilder>
			usageIdList(usageIdList:string[]):Ref<ApplicationOfferOnboardProfileAddressBuilder>
			activeStatus(activeStatus:int):Ref<ApplicationOfferOnboardProfileAddressBuilder>
			build():Ref<ApplicationOfferOnboardProfileAddress>
	}
	export interface ApplicationOfferOnboardProfileBuilder extends Struct<ApplicationOfferOnboardProfileBuilder>{

			offerId(offerId:string):Ref<ApplicationOfferOnboardProfileBuilder>
			department(department:Ref<Department>):Ref<ApplicationOfferOnboardProfileBuilder>
			recruitmentType(recruitmentType:Ref<RecruitmentType>):Ref<ApplicationOfferOnboardProfileBuilder>
			sequence(sequence:Ref<Sequence>):Ref<ApplicationOfferOnboardProfileBuilder>
			level(level:Ref<Level>):Ref<ApplicationOfferOnboardProfileBuilder>
			onboardAddress(onboardAddress:Ref<ApplicationOfferOnboardProfileAddress>):Ref<ApplicationOfferOnboardProfileBuilder>
			workAddress(workAddress:Ref<ApplicationOfferOnboardProfileAddress>):Ref<ApplicationOfferOnboardProfileBuilder>
			leader(leader:Ref<ApplicationOfferBasicInfoUser>):Ref<ApplicationOfferOnboardProfileBuilder>
			isWorkAddressSameToOnboard(isWorkAddressSameToOnboard:bool):Ref<ApplicationOfferOnboardProfileBuilder>
			probationMonth(probationMonth:int):Ref<ApplicationOfferOnboardProfileBuilder>
			contractYear(contractYear:int):Ref<ApplicationOfferOnboardProfileBuilder>
			build():Ref<ApplicationOfferOnboardProfile>
	}
	export interface ApplicationOfferOnboardProfileCity extends Struct<ApplicationOfferOnboardProfileCity>{

			code:Ref<string>
			name:Ref<string>
			enName:Ref<string>
			locationType:Ref<int>
	}
	export interface ApplicationOfferOnboardProfileCityBuilder extends Struct<ApplicationOfferOnboardProfileCityBuilder>{

			code(code:string):Ref<ApplicationOfferOnboardProfileCityBuilder>
			name(name:string):Ref<ApplicationOfferOnboardProfileCityBuilder>
			enName(enName:string):Ref<ApplicationOfferOnboardProfileCityBuilder>
			locationType(locationType:int):Ref<ApplicationOfferOnboardProfileCityBuilder>
			build():Ref<ApplicationOfferOnboardProfileCity>
	}
	export interface ApplicationOfferSalaryPlan extends Struct<ApplicationOfferSalaryPlan>{

			currency:Ref<string>
			basicSalary:Ref<string>
			probationSalaryPercentage:Ref<string>
			awardSalaryMultiple:Ref<string>
			optionShares:Ref<string>
			quarterlyBonus:Ref<string>
			halfYearBonus:Ref<string>
			totalAnnualCash:Ref<string>
			customizeInfoList:Ref<ApplicationOfferCustomValue>[]
	}
	export interface ApplicationOfferSalaryPlanBuilder extends Struct<ApplicationOfferSalaryPlanBuilder>{

			currency(currency:string):Ref<ApplicationOfferSalaryPlanBuilder>
			basicSalary(basicSalary:string):Ref<ApplicationOfferSalaryPlanBuilder>
			probationSalaryPercentage(probationSalaryPercentage:string):Ref<ApplicationOfferSalaryPlanBuilder>
			awardSalaryMultiple(awardSalaryMultiple:string):Ref<ApplicationOfferSalaryPlanBuilder>
			optionShares(optionShares:string):Ref<ApplicationOfferSalaryPlanBuilder>
			quarterlyBonus(quarterlyBonus:string):Ref<ApplicationOfferSalaryPlanBuilder>
			halfYearBonus(halfYearBonus:string):Ref<ApplicationOfferSalaryPlanBuilder>
			totalAnnualCash(totalAnnualCash:string):Ref<ApplicationOfferSalaryPlanBuilder>
			customizeInfoList(customizeInfoList:Ref<ApplicationOfferCustomValue>[]):Ref<ApplicationOfferSalaryPlanBuilder>
			build():Ref<ApplicationOfferSalaryPlan>
	}
	export interface ApplicationOfferSalaryPlanSalaryTemplate extends Struct<ApplicationOfferSalaryPlanSalaryTemplate>{

			templateKey:Ref<string>
			totalAmount:Ref<string>
			currency:Ref<string>
			salaryContent:Ref<string>
	}
	export interface ApplicationOfferSalaryPlanSalaryTemplateBuilder extends Struct<ApplicationOfferSalaryPlanSalaryTemplateBuilder>{

			templateKey(templateKey:string):Ref<ApplicationOfferSalaryPlanSalaryTemplateBuilder>
			totalAmount(totalAmount:string):Ref<ApplicationOfferSalaryPlanSalaryTemplateBuilder>
			currency(currency:string):Ref<ApplicationOfferSalaryPlanSalaryTemplateBuilder>
			salaryContent(salaryContent:string):Ref<ApplicationOfferSalaryPlanSalaryTemplateBuilder>
			build():Ref<ApplicationOfferSalaryPlanSalaryTemplate>
	}
	export interface ApplicationPrehire extends Struct<ApplicationPrehire>{

			id:Ref<string>
			basicInfo:Ref<ApplicationBasicInfo>
			talent:Ref<ApplicationTalent>
			job:Ref<ApplicationJob>
			offer:Ref<ApplicationPrehireOffer>
	}
	export interface ApplicationPrehireBuilder extends Struct<ApplicationPrehireBuilder>{

			id(id:string):Ref<ApplicationPrehireBuilder>
			basicInfo(basicInfo:Ref<ApplicationBasicInfo>):Ref<ApplicationPrehireBuilder>
			talent(talent:Ref<ApplicationTalent>):Ref<ApplicationPrehireBuilder>
			job(job:Ref<ApplicationJob>):Ref<ApplicationPrehireBuilder>
			offer(offer:Ref<ApplicationPrehireOffer>):Ref<ApplicationPrehireBuilder>
			build():Ref<ApplicationPrehire>
	}
	export interface ApplicationPrehireDepartment extends Struct<ApplicationPrehireDepartment>{

			id:Ref<string>
			name:Ref<string>
			enName:Ref<string>
	}
	export interface ApplicationPrehireDepartmentBuilder extends Struct<ApplicationPrehireDepartmentBuilder>{

			id(id:string):Ref<ApplicationPrehireDepartmentBuilder>
			name(name:string):Ref<ApplicationPrehireDepartmentBuilder>
			enName(enName:string):Ref<ApplicationPrehireDepartmentBuilder>
			build():Ref<ApplicationPrehireDepartment>
	}
	export interface ApplicationPrehireOffer extends Struct<ApplicationPrehireOffer>{

			basicInfo:Ref<ApplicationPrehireOfferBasic>
			offerOnboardProfile:Ref<AppliOfferOnboardProfile>
			attachmentList:Ref<ApplicationOfferAttachment>[]
	}
	export interface ApplicationPrehireOfferBasic extends Struct<ApplicationPrehireOfferBasic>{

			offerId:Ref<string>
			applicationId:Ref<string>
			talentId:Ref<string>
			jobId:Ref<string>
			remark:Ref<string>
			expireTime:Ref<int>
			onboardTime:Ref<int>
			timeZone:Ref<string>
			offerType:Ref<int>
			offerStatus:Ref<int>
			owner:Ref<AppliOfferBasicInfoUser>
			offerJobTitle:Ref<string>
	}
	export interface ApplicationPrehireOfferBasicBuilder extends Struct<ApplicationPrehireOfferBasicBuilder>{

			offerId(offerId:string):Ref<ApplicationPrehireOfferBasicBuilder>
			applicationId(applicationId:string):Ref<ApplicationPrehireOfferBasicBuilder>
			talentId(talentId:string):Ref<ApplicationPrehireOfferBasicBuilder>
			jobId(jobId:string):Ref<ApplicationPrehireOfferBasicBuilder>
			remark(remark:string):Ref<ApplicationPrehireOfferBasicBuilder>
			expireTime(expireTime:int):Ref<ApplicationPrehireOfferBasicBuilder>
			onboardTime(onboardTime:int):Ref<ApplicationPrehireOfferBasicBuilder>
			timeZone(timeZone:string):Ref<ApplicationPrehireOfferBasicBuilder>
			offerType(offerType:int):Ref<ApplicationPrehireOfferBasicBuilder>
			offerStatus(offerStatus:int):Ref<ApplicationPrehireOfferBasicBuilder>
			owner(owner:Ref<AppliOfferBasicInfoUser>):Ref<ApplicationPrehireOfferBasicBuilder>
			offerJobTitle(offerJobTitle:string):Ref<ApplicationPrehireOfferBasicBuilder>
			build():Ref<ApplicationPrehireOfferBasic>
	}
	export interface ApplicationPrehireOfferBuilder extends Struct<ApplicationPrehireOfferBuilder>{

			basicInfo(basicInfo:Ref<ApplicationPrehireOfferBasic>):Ref<ApplicationPrehireOfferBuilder>
			offerOnboardProfile(offerOnboardProfile:Ref<AppliOfferOnboardProfile>):Ref<ApplicationPrehireOfferBuilder>
			attachmentList(attachmentList:Ref<ApplicationOfferAttachment>[]):Ref<ApplicationPrehireOfferBuilder>
			build():Ref<ApplicationPrehireOffer>
	}
	export interface ApplicationPrehireOptional extends Struct<ApplicationPrehireOptional>{

			withTalentBasic:Ref<bool>
			withTalentExtend:Ref<bool>
			withJob:Ref<bool>
			withOffer:Ref<bool>
	}
	export interface ApplicationPrehireOptionalBuilder extends Struct<ApplicationPrehireOptionalBuilder>{

			withTalentBasic(withTalentBasic:bool):Ref<ApplicationPrehireOptionalBuilder>
			withTalentExtend(withTalentExtend:bool):Ref<ApplicationPrehireOptionalBuilder>
			withJob(withJob:bool):Ref<ApplicationPrehireOptionalBuilder>
			withOffer(withOffer:bool):Ref<ApplicationPrehireOptionalBuilder>
			build():Ref<ApplicationPrehireOptional>
	}
	export interface ApplicationReferral extends Struct<ApplicationReferral>{

			id:Ref<string>
			name:Ref<string>
			enName:Ref<string>
	}
	export interface ApplicationReferralBuilder extends Struct<ApplicationReferralBuilder>{

			id(id:string):Ref<ApplicationReferralBuilder>
			name(name:string):Ref<ApplicationReferralBuilder>
			enName(enName:string):Ref<ApplicationReferralBuilder>
			build():Ref<ApplicationReferral>
	}
	export interface ApplicationResumeSource extends Struct<ApplicationResumeSource>{

			id:Ref<string>
			name:Ref<I18n>
			resumeSourceType:Ref<int>
	}
	export interface ApplicationResumeSourceBuilder extends Struct<ApplicationResumeSourceBuilder>{

			id(id:string):Ref<ApplicationResumeSourceBuilder>
			name(name:Ref<I18n>):Ref<ApplicationResumeSourceBuilder>
			resumeSourceType(resumeSourceType:int):Ref<ApplicationResumeSourceBuilder>
			build():Ref<ApplicationResumeSource>
	}
	export interface ApplicationStage extends Struct<ApplicationStage>{

			id:Ref<string>
			name:Ref<string>
			enName:Ref<string>
			type:Ref<int>
			args:Ref<string>
			creatorId:Ref<string>
			seq:Ref<int>
			publishName:Ref<string>
			publishEnName:Ref<string>
	}
	export interface ApplicationStageBuilder extends Struct<ApplicationStageBuilder>{

			id(id:string):Ref<ApplicationStageBuilder>
			name(name:string):Ref<ApplicationStageBuilder>
			enName(enName:string):Ref<ApplicationStageBuilder>
			type(type_:int):Ref<ApplicationStageBuilder>
			args(args:string):Ref<ApplicationStageBuilder>
			creatorId(creatorId:string):Ref<ApplicationStageBuilder>
			seq(seq:int):Ref<ApplicationStageBuilder>
			publishName(publishName:string):Ref<ApplicationStageBuilder>
			publishEnName(publishEnName:string):Ref<ApplicationStageBuilder>
			build():Ref<ApplicationStage>
	}
	export interface ApplicationStageInfo extends Struct<ApplicationStageInfo>{

			id:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
			type:Ref<int>
	}
	export interface ApplicationStageInfoBuilder extends Struct<ApplicationStageInfoBuilder>{

			id(id:string):Ref<ApplicationStageInfoBuilder>
			zhName(zhName:string):Ref<ApplicationStageInfoBuilder>
			enName(enName:string):Ref<ApplicationStageInfoBuilder>
			type(type_:int):Ref<ApplicationStageInfoBuilder>
			build():Ref<ApplicationStageInfo>
	}
	export interface ApplicationStageTime extends Struct<ApplicationStageTime>{

			stageId:Ref<string>
			enterTime:Ref<string>
			exitTime:Ref<string>
	}
	export interface ApplicationStageTimeBuilder extends Struct<ApplicationStageTimeBuilder>{

			stageId(stageId:string):Ref<ApplicationStageTimeBuilder>
			enterTime(enterTime:string):Ref<ApplicationStageTimeBuilder>
			exitTime(exitTime:string):Ref<ApplicationStageTimeBuilder>
			build():Ref<ApplicationStageTime>
	}
	export interface ApplicationTalent extends Struct<ApplicationTalent>{

			id:Ref<string>
			basicInfo:Ref<ApplicationTalentBasicInfo>
			selfEvaluation:Ref<string>
			educationList:Ref<AppliTalentEducationInfo>[]
			careerList:Ref<ApplicationTalentCareerInfo>[]
			projectList:Ref<ApplicationTalentProjectInfo>[]
			worksList:Ref<ApplicationTalentWorksInfo>[]
			awardList:Ref<ApplicationTalentAwardInfo>[]
			competitionList:Ref<AppliTalentCompetitionInfo>[]
			certificateList:Ref<AppliTalentCertificateInfo>[]
			languageList:Ref<ApplicationTalentLanguageInfo>[]
			snsList:Ref<ApplicationTalentSnsInfo>[]
			attachmentResumeList:Ref<AppliTalentAttachResumeInfo>[]
	}
	export interface ApplicationTalentAttachmentResumeInfo extends Struct<ApplicationTalentAttachmentResumeInfo>{

			id:Ref<string>
			name:Ref<string>
	}
	export interface ApplicationTalentAttachmentResumeInfoBuilder extends Struct<ApplicationTalentAttachmentResumeInfoBuilder>{

			id(id:string):Ref<ApplicationTalentAttachmentResumeInfoBuilder>
			name(name:string):Ref<ApplicationTalentAttachmentResumeInfoBuilder>
			build():Ref<ApplicationTalentAttachmentResumeInfo>
	}
	export interface ApplicationTalentAwardInfo extends Struct<ApplicationTalentAwardInfo>{

			id:Ref<string>
			title:Ref<string>
			awardTime:Ref<int>
			desc:Ref<string>
	}
	export interface ApplicationTalentAwardInfoBuilder extends Struct<ApplicationTalentAwardInfoBuilder>{

			id(id:string):Ref<ApplicationTalentAwardInfoBuilder>
			title(title:string):Ref<ApplicationTalentAwardInfoBuilder>
			awardTime(awardTime:int):Ref<ApplicationTalentAwardInfoBuilder>
			desc(desc:string):Ref<ApplicationTalentAwardInfoBuilder>
			build():Ref<ApplicationTalentAwardInfo>
	}
	export interface ApplicationTalentBasicInfo extends Struct<ApplicationTalentBasicInfo>{

			name:Ref<string>
			mobile:Ref<string>
			mobileCountryCode:Ref<string>
			email:Ref<string>
			experienceYears:Ref<int>
			age:Ref<int>
			nationality:Ref<Nationality>
			gender:Ref<int>
			currentCity:Ref<City>
			hometownCity:Ref<City>
			preferredCityList:Ref<City>[]
			mobileCode:Ref<string>
			identificationType:Ref<int>
			identificationNumber:Ref<string>
	}
	export interface ApplicationTalentBasicInfoBuilder extends Struct<ApplicationTalentBasicInfoBuilder>{

			name(name:string):Ref<ApplicationTalentBasicInfoBuilder>
			mobile(mobile:string):Ref<ApplicationTalentBasicInfoBuilder>
			mobileCountryCode(mobileCountryCode:string):Ref<ApplicationTalentBasicInfoBuilder>
			email(email:string):Ref<ApplicationTalentBasicInfoBuilder>
			experienceYears(experienceYears:int):Ref<ApplicationTalentBasicInfoBuilder>
			age(age:int):Ref<ApplicationTalentBasicInfoBuilder>
			nationality(nationality:Ref<Nationality>):Ref<ApplicationTalentBasicInfoBuilder>
			gender(gender:int):Ref<ApplicationTalentBasicInfoBuilder>
			currentCity(currentCity:Ref<City>):Ref<ApplicationTalentBasicInfoBuilder>
			hometownCity(hometownCity:Ref<City>):Ref<ApplicationTalentBasicInfoBuilder>
			preferredCityList(preferredCityList:Ref<City>[]):Ref<ApplicationTalentBasicInfoBuilder>
			mobileCode(mobileCode:string):Ref<ApplicationTalentBasicInfoBuilder>
			identificationType(identificationType:int):Ref<ApplicationTalentBasicInfoBuilder>
			identificationNumber(identificationNumber:string):Ref<ApplicationTalentBasicInfoBuilder>
			build():Ref<ApplicationTalentBasicInfo>
	}
	export interface ApplicationTalentBuilder extends Struct<ApplicationTalentBuilder>{

			id(id:string):Ref<ApplicationTalentBuilder>
			basicInfo(basicInfo:Ref<ApplicationTalentBasicInfo>):Ref<ApplicationTalentBuilder>
			selfEvaluation(selfEvaluation:string):Ref<ApplicationTalentBuilder>
			educationList(educationList:Ref<AppliTalentEducationInfo>[]):Ref<ApplicationTalentBuilder>
			careerList(careerList:Ref<ApplicationTalentCareerInfo>[]):Ref<ApplicationTalentBuilder>
			projectList(projectList:Ref<ApplicationTalentProjectInfo>[]):Ref<ApplicationTalentBuilder>
			worksList(worksList:Ref<ApplicationTalentWorksInfo>[]):Ref<ApplicationTalentBuilder>
			awardList(awardList:Ref<ApplicationTalentAwardInfo>[]):Ref<ApplicationTalentBuilder>
			competitionList(competitionList:Ref<AppliTalentCompetitionInfo>[]):Ref<ApplicationTalentBuilder>
			certificateList(certificateList:Ref<AppliTalentCertificateInfo>[]):Ref<ApplicationTalentBuilder>
			languageList(languageList:Ref<ApplicationTalentLanguageInfo>[]):Ref<ApplicationTalentBuilder>
			snsList(snsList:Ref<ApplicationTalentSnsInfo>[]):Ref<ApplicationTalentBuilder>
			attachmentResumeList(attachmentResumeList:Ref<AppliTalentAttachResumeInfo>[]):Ref<ApplicationTalentBuilder>
			build():Ref<ApplicationTalent>
	}
	export interface ApplicationTalentCareerInfo extends Struct<ApplicationTalentCareerInfo>{

			id:Ref<string>
			company:Ref<string>
			title:Ref<string>
			desc:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			tagList:int[]
	}
	export interface ApplicationTalentCareerInfoBuilder extends Struct<ApplicationTalentCareerInfoBuilder>{

			id(id:string):Ref<ApplicationTalentCareerInfoBuilder>
			company(company:string):Ref<ApplicationTalentCareerInfoBuilder>
			title(title:string):Ref<ApplicationTalentCareerInfoBuilder>
			desc(desc:string):Ref<ApplicationTalentCareerInfoBuilder>
			startTime(startTime:string):Ref<ApplicationTalentCareerInfoBuilder>
			endTime(endTime:string):Ref<ApplicationTalentCareerInfoBuilder>
			tagList(tagList:int[]):Ref<ApplicationTalentCareerInfoBuilder>
			build():Ref<ApplicationTalentCareerInfo>
	}
	export interface ApplicationTalentCertificateInfo extends Struct<ApplicationTalentCertificateInfo>{

			id:Ref<string>
			name:Ref<string>
			desc:Ref<string>
	}
	export interface ApplicationTalentCertificateInfoBuilder extends Struct<ApplicationTalentCertificateInfoBuilder>{

			id(id:string):Ref<ApplicationTalentCertificateInfoBuilder>
			name(name:string):Ref<ApplicationTalentCertificateInfoBuilder>
			desc(desc:string):Ref<ApplicationTalentCertificateInfoBuilder>
			build():Ref<ApplicationTalentCertificateInfo>
	}
	export interface ApplicationTalentCompetitionInfo extends Struct<ApplicationTalentCompetitionInfo>{

			id:Ref<string>
			name:Ref<string>
			desc:Ref<string>
	}
	export interface ApplicationTalentCompetitionInfoBuilder extends Struct<ApplicationTalentCompetitionInfoBuilder>{

			id(id:string):Ref<ApplicationTalentCompetitionInfoBuilder>
			name(name:string):Ref<ApplicationTalentCompetitionInfoBuilder>
			desc(desc:string):Ref<ApplicationTalentCompetitionInfoBuilder>
			build():Ref<ApplicationTalentCompetitionInfo>
	}
	export interface ApplicationTalentEducationInfo extends Struct<ApplicationTalentEducationInfo>{

			id:Ref<string>
			degree:Ref<int>
			school:Ref<string>
			fieldOfStudy:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			educationType:Ref<int>
			academicRanking:Ref<int>
			tagList:int[]
	}
	export interface ApplicationTalentEducationInfoBuilder extends Struct<ApplicationTalentEducationInfoBuilder>{

			id(id:string):Ref<ApplicationTalentEducationInfoBuilder>
			degree(degree:int):Ref<ApplicationTalentEducationInfoBuilder>
			school(school:string):Ref<ApplicationTalentEducationInfoBuilder>
			fieldOfStudy(fieldOfStudy:string):Ref<ApplicationTalentEducationInfoBuilder>
			startTime(startTime:string):Ref<ApplicationTalentEducationInfoBuilder>
			endTime(endTime:string):Ref<ApplicationTalentEducationInfoBuilder>
			educationType(educationType:int):Ref<ApplicationTalentEducationInfoBuilder>
			academicRanking(academicRanking:int):Ref<ApplicationTalentEducationInfoBuilder>
			tagList(tagList:int[]):Ref<ApplicationTalentEducationInfoBuilder>
			build():Ref<ApplicationTalentEducationInfo>
	}
	export interface ApplicationTalentLanguageInfo extends Struct<ApplicationTalentLanguageInfo>{

			id:Ref<string>
			language:Ref<int>
			proficiency:Ref<int>
	}
	export interface ApplicationTalentLanguageInfoBuilder extends Struct<ApplicationTalentLanguageInfoBuilder>{

			id(id:string):Ref<ApplicationTalentLanguageInfoBuilder>
			language(language:int):Ref<ApplicationTalentLanguageInfoBuilder>
			proficiency(proficiency:int):Ref<ApplicationTalentLanguageInfoBuilder>
			build():Ref<ApplicationTalentLanguageInfo>
	}
	export interface ApplicationTalentProjectInfo extends Struct<ApplicationTalentProjectInfo>{

			id:Ref<string>
			name:Ref<string>
			role:Ref<string>
			link:Ref<string>
			desc:Ref<string>
			startTime:Ref<int>
			endTime:Ref<int>
	}
	export interface ApplicationTalentProjectInfoBuilder extends Struct<ApplicationTalentProjectInfoBuilder>{

			id(id:string):Ref<ApplicationTalentProjectInfoBuilder>
			name(name:string):Ref<ApplicationTalentProjectInfoBuilder>
			role(role:string):Ref<ApplicationTalentProjectInfoBuilder>
			link(link:string):Ref<ApplicationTalentProjectInfoBuilder>
			desc(desc:string):Ref<ApplicationTalentProjectInfoBuilder>
			startTime(startTime:int):Ref<ApplicationTalentProjectInfoBuilder>
			endTime(endTime:int):Ref<ApplicationTalentProjectInfoBuilder>
			build():Ref<ApplicationTalentProjectInfo>
	}
	export interface ApplicationTalentSnsInfo extends Struct<ApplicationTalentSnsInfo>{

			id:Ref<string>
			snsType:Ref<int>
			link:Ref<string>
	}
	export interface ApplicationTalentSnsInfoBuilder extends Struct<ApplicationTalentSnsInfoBuilder>{

			id(id:string):Ref<ApplicationTalentSnsInfoBuilder>
			snsType(snsType:int):Ref<ApplicationTalentSnsInfoBuilder>
			link(link:string):Ref<ApplicationTalentSnsInfoBuilder>
			build():Ref<ApplicationTalentSnsInfo>
	}
	export interface ApplicationTalentWorksInfo extends Struct<ApplicationTalentWorksInfo>{

			id:Ref<string>
			link:Ref<string>
			desc:Ref<string>
			name:Ref<string>
	}
	export interface ApplicationTalentWorksInfoBuilder extends Struct<ApplicationTalentWorksInfoBuilder>{

			id(id:string):Ref<ApplicationTalentWorksInfoBuilder>
			link(link:string):Ref<ApplicationTalentWorksInfoBuilder>
			desc(desc:string):Ref<ApplicationTalentWorksInfoBuilder>
			name(name:string):Ref<ApplicationTalentWorksInfoBuilder>
			build():Ref<ApplicationTalentWorksInfo>
	}
	export interface ApplicationWebsiteChannel extends Struct<ApplicationWebsiteChannel>{

			channelId:Ref<string>
			channelName:Ref<I18n>
	}
	export interface ApplicationWebsiteChannelBuilder extends Struct<ApplicationWebsiteChannelBuilder>{

			channelId(channelId:string):Ref<ApplicationWebsiteChannelBuilder>
			channelName(channelName:Ref<I18n>):Ref<ApplicationWebsiteChannelBuilder>
			build():Ref<ApplicationWebsiteChannel>
	}
	export interface ApplicationWebsiteResumeSource extends Struct<ApplicationWebsiteResumeSource>{

			websiteId:Ref<string>
			websiteName:Ref<I18n>
			channel:Ref<ApplicationWebsiteChannel>
	}
	export interface ApplicationWebsiteResumeSourceBuilder extends Struct<ApplicationWebsiteResumeSourceBuilder>{

			websiteId(websiteId:string):Ref<ApplicationWebsiteResumeSourceBuilder>
			websiteName(websiteName:Ref<I18n>):Ref<ApplicationWebsiteResumeSourceBuilder>
			channel(channel:Ref<ApplicationWebsiteChannel>):Ref<ApplicationWebsiteResumeSourceBuilder>
			build():Ref<ApplicationWebsiteResumeSource>
	}
	export interface AssessmentScoreInfo extends Struct<AssessmentScoreInfo>{

			calculateType:Ref<int>
			score:Ref<float64>
			fullScore:Ref<int>
	}
	export interface AssessmentScoreInfoBuilder extends Struct<AssessmentScoreInfoBuilder>{

			calculateType(calculateType:int):Ref<AssessmentScoreInfoBuilder>
			score(score:float64):Ref<AssessmentScoreInfoBuilder>
			fullScore(fullScore:int):Ref<AssessmentScoreInfoBuilder>
			build():Ref<AssessmentScoreInfo>
	}
	export interface Assets extends Struct<Assets>{

			confirmedBonus:Ref<BonusAmount>
	}
	export interface AssetsBuilder extends Struct<AssetsBuilder>{

			confirmedBonus(confirmedBonus:Ref<BonusAmount>):Ref<AssetsBuilder>
			build():Ref<Assets>
	}
	export interface Attachment extends Struct<Attachment>{

			id:Ref<string>
			url:Ref<string>
			name:Ref<string>
			mime:Ref<string>
			createTime:Ref<int>
	}
	export interface AttachmentBuilder extends Struct<AttachmentBuilder>{

			id(id:string):Ref<AttachmentBuilder>
			url(url:string):Ref<AttachmentBuilder>
			name(name:string):Ref<AttachmentBuilder>
			mime(mime:string):Ref<AttachmentBuilder>
			createTime(createTime:int):Ref<AttachmentBuilder>
			build():Ref<Attachment>
	}
	export interface AttachmentInfo extends Struct<AttachmentInfo>{

			id:Ref<string>
			url:Ref<string>
			name:Ref<string>
			mime:Ref<string>
			createTime:Ref<string>
	}
	export interface AttachmentInfoBuilder extends Struct<AttachmentInfoBuilder>{

			id(id:string):Ref<AttachmentInfoBuilder>
			url(url:string):Ref<AttachmentInfoBuilder>
			name(name:string):Ref<AttachmentInfoBuilder>
			mime(mime:string):Ref<AttachmentInfoBuilder>
			createTime(createTime:string):Ref<AttachmentInfoBuilder>
			build():Ref<AttachmentInfo>
	}
	export interface AttachmentV2 extends Struct<AttachmentV2>{

			id:Ref<string>
			url:Ref<string>
			name:Ref<string>
			mime:Ref<string>
			createTime:Ref<string>
	}
	export interface AttachmentV2Builder extends Struct<AttachmentV2Builder>{

			id(id:string):Ref<AttachmentV2Builder>
			url(url:string):Ref<AttachmentV2Builder>
			name(name:string):Ref<AttachmentV2Builder>
			mime(mime:string):Ref<AttachmentV2Builder>
			createTime(createTime:string):Ref<AttachmentV2Builder>
			build():Ref<AttachmentV2>
	}
	export interface Auth extends Struct<Auth>{

			id:Ref<string>
			name:Ref<I18n>
	}
	export interface AuthBuilder extends Struct<AuthBuilder>{

			id(id:string):Ref<AuthBuilder>
			name(name:Ref<I18n>):Ref<AuthBuilder>
			build():Ref<Auth>
	}
	export interface AwardInfo extends Struct<AwardInfo>{

			awardTime:Ref<int>
			desc:Ref<string>
			title:Ref<string>
	}
	export interface AwardInfoBuilder extends Struct<AwardInfoBuilder>{

			awardTime(awardTime:int):Ref<AwardInfoBuilder>
			desc(desc:string):Ref<AwardInfoBuilder>
			title(title:string):Ref<AwardInfoBuilder>
			build():Ref<AwardInfo>
	}
	export interface BackgroundCheckCustomFieldDataValue extends Struct<BackgroundCheckCustomFieldDataValue>{

			key:Ref<string>
			value:Ref<string>
	}
	export interface BackgroundCheckCustomFieldDataValueBuilder extends Struct<BackgroundCheckCustomFieldDataValueBuilder>{

			key(key:string):Ref<BackgroundCheckCustomFieldDataValueBuilder>
			value(value:string):Ref<BackgroundCheckCustomFieldDataValueBuilder>
			build():Ref<BackgroundCheckCustomFieldDataValue>
	}
	export interface BackgroundCheckFeedbackInfo extends Struct<BackgroundCheckFeedbackInfo>{

			feedbackId:Ref<string>
			attachmentUrl:Ref<string>
			result:Ref<string>
	}
	export interface BackgroundCheckFeedbackInfoBuilder extends Struct<BackgroundCheckFeedbackInfoBuilder>{

			feedbackId(feedbackId:string):Ref<BackgroundCheckFeedbackInfoBuilder>
			attachmentUrl(attachmentUrl:string):Ref<BackgroundCheckFeedbackInfoBuilder>
			result(result:string):Ref<BackgroundCheckFeedbackInfoBuilder>
			build():Ref<BackgroundCheckFeedbackInfo>
	}
	export interface BackgroundCheckItemInfo extends Struct<BackgroundCheckItemInfo>{

			id:Ref<string>
			name:Ref<string>
	}
	export interface BackgroundCheckItemInfoBuilder extends Struct<BackgroundCheckItemInfoBuilder>{

			id(id:string):Ref<BackgroundCheckItemInfoBuilder>
			name(name:string):Ref<BackgroundCheckItemInfoBuilder>
			build():Ref<BackgroundCheckItemInfo>
	}
	export interface BackgroundCheckOrder extends Struct<BackgroundCheckOrder>{

			orderId:Ref<string>
			applicationId:Ref<string>
			orderStatus:Ref<int>
			accountThirdType:Ref<int>
			package:Ref<string>
			name:Ref<string>
			feedbackInfoList:Ref<BackgroundCheckOrderFeedbackInfo>[]
			processInfoList:Ref<BackgroundCheckOrderProcessInfo>[]
			uploadTime:Ref<string>
			candidateInfo:Ref<UserContactInfo>
			creatorInfo:Ref<BackgroundCheckOrderCreator>
			contactorInfo:Ref<UserContactInfo>
			beginTime:Ref<string>
			endTime:Ref<string>
			conclusion:Ref<string>
			providerInfo:Ref<ProviderIdNameObject>
			customFieldList:Ref<EcoBackgroundCheckCustomFieldData>[]
			customDataList:Ref<BackgroundCheckCustomFieldDataValue>[]
			extItemInfoList:Ref<BackgroundCheckItemInfo>[]
			updateTime:Ref<string>
			geo:Ref<string>
			locationCode:Ref<string>
			remark:Ref<string>
	}
	export interface BackgroundCheckOrderBuilder extends Struct<BackgroundCheckOrderBuilder>{

			orderId(orderId:string):Ref<BackgroundCheckOrderBuilder>
			applicationId(applicationId:string):Ref<BackgroundCheckOrderBuilder>
			orderStatus(orderStatus:int):Ref<BackgroundCheckOrderBuilder>
			accountThirdType(accountThirdType:int):Ref<BackgroundCheckOrderBuilder>
			package(package_:string):Ref<BackgroundCheckOrderBuilder>
			name(name:string):Ref<BackgroundCheckOrderBuilder>
			feedbackInfoList(feedbackInfoList:Ref<BackgroundCheckOrderFeedbackInfo>[]):Ref<BackgroundCheckOrderBuilder>
			processInfoList(processInfoList:Ref<BackgroundCheckOrderProcessInfo>[]):Ref<BackgroundCheckOrderBuilder>
			uploadTime(uploadTime:string):Ref<BackgroundCheckOrderBuilder>
			candidateInfo(candidateInfo:Ref<UserContactInfo>):Ref<BackgroundCheckOrderBuilder>
			creatorInfo(creatorInfo:Ref<BackgroundCheckOrderCreator>):Ref<BackgroundCheckOrderBuilder>
			contactorInfo(contactorInfo:Ref<UserContactInfo>):Ref<BackgroundCheckOrderBuilder>
			beginTime(beginTime:string):Ref<BackgroundCheckOrderBuilder>
			endTime(endTime:string):Ref<BackgroundCheckOrderBuilder>
			conclusion(conclusion:string):Ref<BackgroundCheckOrderBuilder>
			providerInfo(providerInfo:Ref<ProviderIdNameObject>):Ref<BackgroundCheckOrderBuilder>
			customFieldList(customFieldList:Ref<EcoBackgroundCheckCustomFieldData>[]):Ref<BackgroundCheckOrderBuilder>
			customDataList(customDataList:Ref<BackgroundCheckCustomFieldDataValue>[]):Ref<BackgroundCheckOrderBuilder>
			extItemInfoList(extItemInfoList:Ref<BackgroundCheckItemInfo>[]):Ref<BackgroundCheckOrderBuilder>
			updateTime(updateTime:string):Ref<BackgroundCheckOrderBuilder>
			geo(geo:string):Ref<BackgroundCheckOrderBuilder>
			locationCode(locationCode:string):Ref<BackgroundCheckOrderBuilder>
			remark(remark:string):Ref<BackgroundCheckOrderBuilder>
			build():Ref<BackgroundCheckOrder>
	}
	export interface BackgroundCheckOrderCreator extends Struct<BackgroundCheckOrderCreator>{

			userId:Ref<string>
	}
	export interface BackgroundCheckOrderCreatorBuilder extends Struct<BackgroundCheckOrderCreatorBuilder>{

			userId(userId:string):Ref<BackgroundCheckOrderCreatorBuilder>
			build():Ref<BackgroundCheckOrderCreator>
	}
	export interface BackgroundCheckOrderFeedbackInfo extends Struct<BackgroundCheckOrderFeedbackInfo>{

			id:Ref<string>
			attachmentUrl:Ref<string>
			reportPreviewUrl:Ref<string>
			result:Ref<string>
			reportType:Ref<int>
			createTime:Ref<string>
			reportName:Ref<string>
	}
	export interface BackgroundCheckOrderFeedbackInfoBuilder extends Struct<BackgroundCheckOrderFeedbackInfoBuilder>{

			id(id:string):Ref<BackgroundCheckOrderFeedbackInfoBuilder>
			attachmentUrl(attachmentUrl:string):Ref<BackgroundCheckOrderFeedbackInfoBuilder>
			reportPreviewUrl(reportPreviewUrl:string):Ref<BackgroundCheckOrderFeedbackInfoBuilder>
			result(result:string):Ref<BackgroundCheckOrderFeedbackInfoBuilder>
			reportType(reportType:int):Ref<BackgroundCheckOrderFeedbackInfoBuilder>
			createTime(createTime:string):Ref<BackgroundCheckOrderFeedbackInfoBuilder>
			reportName(reportName:string):Ref<BackgroundCheckOrderFeedbackInfoBuilder>
			build():Ref<BackgroundCheckOrderFeedbackInfo>
	}
	export interface BackgroundCheckOrderProcessInfo extends Struct<BackgroundCheckOrderProcessInfo>{

			process:Ref<string>
			updateTime:Ref<string>
			enProcess:Ref<string>
	}
	export interface BackgroundCheckOrderProcessInfoBuilder extends Struct<BackgroundCheckOrderProcessInfoBuilder>{

			process(process:string):Ref<BackgroundCheckOrderProcessInfoBuilder>
			updateTime(updateTime:string):Ref<BackgroundCheckOrderProcessInfoBuilder>
			enProcess(enProcess:string):Ref<BackgroundCheckOrderProcessInfoBuilder>
			build():Ref<BackgroundCheckOrderProcessInfo>
	}
	export interface BackgroundCheckProcessInfo extends Struct<BackgroundCheckProcessInfo>{

			process:Ref<string>
			updateTime:Ref<string>
	}
	export interface BackgroundCheckProcessInfoBuilder extends Struct<BackgroundCheckProcessInfoBuilder>{

			process(process:string):Ref<BackgroundCheckProcessInfoBuilder>
			updateTime(updateTime:string):Ref<BackgroundCheckProcessInfoBuilder>
			build():Ref<BackgroundCheckProcessInfo>
	}
	export interface BaseAddress extends Struct<BaseAddress>{

			id:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
			district:Ref<BaseDistrict>
			city:Ref<BaseCity>
			state:Ref<BaseCity>
			country:Ref<BaseCountry>
	}
	export interface BaseAddressBuilder extends Struct<BaseAddressBuilder>{

			id(id:string):Ref<BaseAddressBuilder>
			zhName(zhName:string):Ref<BaseAddressBuilder>
			enName(enName:string):Ref<BaseAddressBuilder>
			district(district:Ref<BaseDistrict>):Ref<BaseAddressBuilder>
			city(city:Ref<BaseCity>):Ref<BaseAddressBuilder>
			state(state:Ref<BaseCity>):Ref<BaseAddressBuilder>
			country(country:Ref<BaseCountry>):Ref<BaseAddressBuilder>
			build():Ref<BaseAddress>
	}
	export interface BaseBilingualWithId extends Struct<BaseBilingualWithId>{

			id:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
	}
	export interface BaseBilingualWithIdBuilder extends Struct<BaseBilingualWithIdBuilder>{

			id(id:string):Ref<BaseBilingualWithIdBuilder>
			zhName(zhName:string):Ref<BaseBilingualWithIdBuilder>
			enName(enName:string):Ref<BaseBilingualWithIdBuilder>
			build():Ref<BaseBilingualWithId>
	}
	export interface BaseCity extends Struct<BaseCity>{

			zhName:Ref<string>
			enName:Ref<string>
			code:Ref<string>
			locationType:Ref<int>
	}
	export interface BaseCityBuilder extends Struct<BaseCityBuilder>{

			zhName(zhName:string):Ref<BaseCityBuilder>
			enName(enName:string):Ref<BaseCityBuilder>
			code(code:string):Ref<BaseCityBuilder>
			locationType(locationType:int):Ref<BaseCityBuilder>
			build():Ref<BaseCity>
	}
	export interface BaseCountry extends Struct<BaseCountry>{

			zhName:Ref<string>
			enName:Ref<string>
			code:Ref<string>
			locationType:Ref<int>
	}
	export interface BaseCountryBuilder extends Struct<BaseCountryBuilder>{

			zhName(zhName:string):Ref<BaseCountryBuilder>
			enName(enName:string):Ref<BaseCountryBuilder>
			code(code:string):Ref<BaseCountryBuilder>
			locationType(locationType:int):Ref<BaseCountryBuilder>
			build():Ref<BaseCountry>
	}
	export interface BaseDistrict extends Struct<BaseDistrict>{

			zhName:Ref<string>
			enName:Ref<string>
			code:Ref<string>
			locationType:Ref<int>
	}
	export interface BaseDistrictBuilder extends Struct<BaseDistrictBuilder>{

			zhName(zhName:string):Ref<BaseDistrictBuilder>
			enName(enName:string):Ref<BaseDistrictBuilder>
			code(code:string):Ref<BaseDistrictBuilder>
			locationType(locationType:int):Ref<BaseDistrictBuilder>
			build():Ref<BaseDistrict>
	}
	export interface BaseResp extends Struct<BaseResp>{

			statusMessage:Ref<string>
			statusCode:Ref<int>
	}
	export interface BaseRespBuilder extends Struct<BaseRespBuilder>{

			statusMessage(statusMessage:string):Ref<BaseRespBuilder>
			statusCode(statusCode:int):Ref<BaseRespBuilder>
			build():Ref<BaseResp>
	}
	export interface BasicInfo extends Struct<BasicInfo>{

			name:Ref<string>
			mobile:Ref<string>
			mobileCountryCode:Ref<string>
			email:Ref<string>
			birthday:Ref<int>
			confidentiality:Ref<int>
			creatorAccountType:Ref<int>
			creatorId:Ref<string>
			currentCityCode:Ref<string>
			gender:Ref<int>
			hometownCityCode:Ref<string>
			identification:Ref<Identification>
			initSourceId:Ref<string>
			nationalityId:Ref<string>
			resumeAttachmentId:Ref<string>
			selfEvaluation:Ref<string>
			startWorkTime:Ref<int>
	}
	export interface BasicInfoBuilder extends Struct<BasicInfoBuilder>{

			name(name:string):Ref<BasicInfoBuilder>
			mobile(mobile:string):Ref<BasicInfoBuilder>
			mobileCountryCode(mobileCountryCode:string):Ref<BasicInfoBuilder>
			email(email:string):Ref<BasicInfoBuilder>
			birthday(birthday:int):Ref<BasicInfoBuilder>
			confidentiality(confidentiality:int):Ref<BasicInfoBuilder>
			creatorAccountType(creatorAccountType:int):Ref<BasicInfoBuilder>
			creatorId(creatorId:string):Ref<BasicInfoBuilder>
			currentCityCode(currentCityCode:string):Ref<BasicInfoBuilder>
			gender(gender:int):Ref<BasicInfoBuilder>
			hometownCityCode(hometownCityCode:string):Ref<BasicInfoBuilder>
			identification(identification:Ref<Identification>):Ref<BasicInfoBuilder>
			initSourceId(initSourceId:string):Ref<BasicInfoBuilder>
			nationalityId(nationalityId:string):Ref<BasicInfoBuilder>
			resumeAttachmentId(resumeAttachmentId:string):Ref<BasicInfoBuilder>
			selfEvaluation(selfEvaluation:string):Ref<BasicInfoBuilder>
			startWorkTime(startWorkTime:int):Ref<BasicInfoBuilder>
			build():Ref<BasicInfo>
	}
	export interface BatchDeleteEcoAccountCustomFieldPathReqBodyBuilder extends Struct<BatchDeleteEcoAccountCustomFieldPathReqBodyBuilder>{

			scope(scope:int):Ref<BatchDeleteEcoAccountCustomFieldPathReqBodyBuilder>
			customFieldKeyList(customFieldKeyList:string[]):Ref<BatchDeleteEcoAccountCustomFieldPathReqBodyBuilder>
			build():Ref<BatchDeleteEcoAccountCustomFieldReqBody>
	}
	export interface BatchDeleteEcoAccountCustomFieldReq extends Struct<BatchDeleteEcoAccountCustomFieldReq>{

			body:Ref<BatchDeleteEcoAccountCustomFieldReqBody>
	}
	export interface BatchDeleteEcoAccountCustomFieldReqBody extends Struct<BatchDeleteEcoAccountCustomFieldReqBody>{

			scope:Ref<int>
			customFieldKeyList:string[]
	}
	export interface BatchDeleteEcoAccountCustomFieldReqBodyBuilder extends Struct<BatchDeleteEcoAccountCustomFieldReqBodyBuilder>{

			scope(scope:int):Ref<BatchDeleteEcoAccountCustomFieldReqBodyBuilder>
			customFieldKeyList(customFieldKeyList:string[]):Ref<BatchDeleteEcoAccountCustomFieldReqBodyBuilder>
			build():Ref<BatchDeleteEcoAccountCustomFieldReqBody>
	}
	export interface BatchDeleteEcoAccountCustomFieldReqBuilder extends Struct<BatchDeleteEcoAccountCustomFieldReqBuilder>{

			body(body:Ref<BatchDeleteEcoAccountCustomFieldReqBody>):Ref<BatchDeleteEcoAccountCustomFieldReqBuilder>
			build():Ref<BatchDeleteEcoAccountCustomFieldReq>
	}
	export interface BatchDeleteEcoAccountCustomFieldResp extends Struct<BatchDeleteEcoAccountCustomFieldResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface BatchDeleteEcoBackgroundCheckCustomFieldPathReqBodyBuilder extends Struct<BatchDeleteEcoBackgroundCheckCustomFieldPathReqBodyBuilder>{

			accountId(accountId:string):Ref<BatchDeleteEcoBackgroundCheckCustomFieldPathReqBodyBuilder>
			build():Ref<BatchDeleteEcoBackgroundCheckCustomFieldReqBody>
	}
	export interface BatchDeleteEcoBackgroundCheckCustomFieldReq extends Struct<BatchDeleteEcoBackgroundCheckCustomFieldReq>{

			body:Ref<BatchDeleteEcoBackgroundCheckCustomFieldReqBody>
	}
	export interface BatchDeleteEcoBackgroundCheckCustomFieldReqBody extends Struct<BatchDeleteEcoBackgroundCheckCustomFieldReqBody>{

			accountId:Ref<string>
	}
	export interface BatchDeleteEcoBackgroundCheckCustomFieldReqBodyBuilder extends Struct<BatchDeleteEcoBackgroundCheckCustomFieldReqBodyBuilder>{

			accountId(accountId:string):Ref<BatchDeleteEcoBackgroundCheckCustomFieldReqBodyBuilder>
			build():Ref<BatchDeleteEcoBackgroundCheckCustomFieldReqBody>
	}
	export interface BatchDeleteEcoBackgroundCheckCustomFieldReqBuilder extends Struct<BatchDeleteEcoBackgroundCheckCustomFieldReqBuilder>{

			body(body:Ref<BatchDeleteEcoBackgroundCheckCustomFieldReqBody>):Ref<BatchDeleteEcoBackgroundCheckCustomFieldReqBuilder>
			build():Ref<BatchDeleteEcoBackgroundCheckCustomFieldReq>
	}
	export interface BatchDeleteEcoBackgroundCheckCustomFieldResp extends Struct<BatchDeleteEcoBackgroundCheckCustomFieldResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface BatchDeleteEcoBackgroundCheckPackagePathReqBodyBuilder extends Struct<BatchDeleteEcoBackgroundCheckPackagePathReqBodyBuilder>{

			accountId(accountId:string):Ref<BatchDeleteEcoBackgroundCheckPackagePathReqBodyBuilder>
			packageIdList(packageIdList:string[]):Ref<BatchDeleteEcoBackgroundCheckPackagePathReqBodyBuilder>
			additionalItemIdList(additionalItemIdList:string[]):Ref<BatchDeleteEcoBackgroundCheckPackagePathReqBodyBuilder>
			build():Ref<BatchDeleteEcoBackgroundCheckPackageReqBody>
	}
	export interface BatchDeleteEcoBackgroundCheckPackageReq extends Struct<BatchDeleteEcoBackgroundCheckPackageReq>{

			body:Ref<BatchDeleteEcoBackgroundCheckPackageReqBody>
	}
	export interface BatchDeleteEcoBackgroundCheckPackageReqBody extends Struct<BatchDeleteEcoBackgroundCheckPackageReqBody>{

			accountId:Ref<string>
			packageIdList:string[]
			additionalItemIdList:string[]
	}
	export interface BatchDeleteEcoBackgroundCheckPackageReqBodyBuilder extends Struct<BatchDeleteEcoBackgroundCheckPackageReqBodyBuilder>{

			accountId(accountId:string):Ref<BatchDeleteEcoBackgroundCheckPackageReqBodyBuilder>
			packageIdList(packageIdList:string[]):Ref<BatchDeleteEcoBackgroundCheckPackageReqBodyBuilder>
			additionalItemIdList(additionalItemIdList:string[]):Ref<BatchDeleteEcoBackgroundCheckPackageReqBodyBuilder>
			build():Ref<BatchDeleteEcoBackgroundCheckPackageReqBody>
	}
	export interface BatchDeleteEcoBackgroundCheckPackageReqBuilder extends Struct<BatchDeleteEcoBackgroundCheckPackageReqBuilder>{

			body(body:Ref<BatchDeleteEcoBackgroundCheckPackageReqBody>):Ref<BatchDeleteEcoBackgroundCheckPackageReqBuilder>
			build():Ref<BatchDeleteEcoBackgroundCheckPackageReq>
	}
	export interface BatchDeleteEcoBackgroundCheckPackageResp extends Struct<BatchDeleteEcoBackgroundCheckPackageResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface BatchDeleteEcoExamPaperPathReqBodyBuilder extends Struct<BatchDeleteEcoExamPaperPathReqBodyBuilder>{

			accountId(accountId:string):Ref<BatchDeleteEcoExamPaperPathReqBodyBuilder>
			paperIdList(paperIdList:string[]):Ref<BatchDeleteEcoExamPaperPathReqBodyBuilder>
			build():Ref<BatchDeleteEcoExamPaperReqBody>
	}
	export interface BatchDeleteEcoExamPaperReq extends Struct<BatchDeleteEcoExamPaperReq>{

			body:Ref<BatchDeleteEcoExamPaperReqBody>
	}
	export interface BatchDeleteEcoExamPaperReqBody extends Struct<BatchDeleteEcoExamPaperReqBody>{

			accountId:Ref<string>
			paperIdList:string[]
	}
	export interface BatchDeleteEcoExamPaperReqBodyBuilder extends Struct<BatchDeleteEcoExamPaperReqBodyBuilder>{

			accountId(accountId:string):Ref<BatchDeleteEcoExamPaperReqBodyBuilder>
			paperIdList(paperIdList:string[]):Ref<BatchDeleteEcoExamPaperReqBodyBuilder>
			build():Ref<BatchDeleteEcoExamPaperReqBody>
	}
	export interface BatchDeleteEcoExamPaperReqBuilder extends Struct<BatchDeleteEcoExamPaperReqBuilder>{

			body(body:Ref<BatchDeleteEcoExamPaperReqBody>):Ref<BatchDeleteEcoExamPaperReqBuilder>
			build():Ref<BatchDeleteEcoExamPaperReq>
	}
	export interface BatchDeleteEcoExamPaperResp extends Struct<BatchDeleteEcoExamPaperResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface BatchGetIdTalentPathReqBodyBuilder extends Struct<BatchGetIdTalentPathReqBodyBuilder>{

			mobileCode(mobileCode:string):Ref<BatchGetIdTalentPathReqBodyBuilder>
			mobileNumberList(mobileNumberList:string[]):Ref<BatchGetIdTalentPathReqBodyBuilder>
			emailList(emailList:string[]):Ref<BatchGetIdTalentPathReqBodyBuilder>
			identificationType(identificationType:int):Ref<BatchGetIdTalentPathReqBodyBuilder>
			identificationNumberList(identificationNumberList:string[]):Ref<BatchGetIdTalentPathReqBodyBuilder>
			build():Ref<BatchGetIdTalentReqBody>
	}
	export interface BatchGetIdTalentReq extends Struct<BatchGetIdTalentReq>{

			body:Ref<BatchGetIdTalentReqBody>
	}
	export interface BatchGetIdTalentReqBody extends Struct<BatchGetIdTalentReqBody>{

			mobileCode:Ref<string>
			mobileNumberList:string[]
			emailList:string[]
			identificationType:Ref<int>
			identificationNumberList:string[]
	}
	export interface BatchGetIdTalentReqBodyBuilder extends Struct<BatchGetIdTalentReqBodyBuilder>{

			mobileCode(mobileCode:string):Ref<BatchGetIdTalentReqBodyBuilder>
			mobileNumberList(mobileNumberList:string[]):Ref<BatchGetIdTalentReqBodyBuilder>
			emailList(emailList:string[]):Ref<BatchGetIdTalentReqBodyBuilder>
			identificationType(identificationType:int):Ref<BatchGetIdTalentReqBodyBuilder>
			identificationNumberList(identificationNumberList:string[]):Ref<BatchGetIdTalentReqBodyBuilder>
			build():Ref<BatchGetIdTalentReqBody>
	}
	export interface BatchGetIdTalentReqBuilder extends Struct<BatchGetIdTalentReqBuilder>{

			body(body:Ref<BatchGetIdTalentReqBody>):Ref<BatchGetIdTalentReqBuilder>
			build():Ref<BatchGetIdTalentReq>
	}
	export interface BatchGetIdTalentResp extends Struct<BatchGetIdTalentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<BatchGetIdTalentRespData>
			success():bool
	}
	export interface BatchGetIdTalentRespData extends Struct<BatchGetIdTalentRespData>{

			talentList:Ref<TalentBatchInfo>[]
	}
	export interface BatchUpdateEcoAccountCustomFieldReq extends Struct<BatchUpdateEcoAccountCustomFieldReq>{

			ecoAccountCustomField:Ref<EcoAccountCustomField>
	}
	export interface BatchUpdateEcoAccountCustomFieldReqBuilder extends Struct<BatchUpdateEcoAccountCustomFieldReqBuilder>{

			ecoAccountCustomField(ecoAccountCustomField:Ref<EcoAccountCustomField>):Ref<BatchUpdateEcoAccountCustomFieldReqBuilder>
			build():Ref<BatchUpdateEcoAccountCustomFieldReq>
	}
	export interface BatchUpdateEcoAccountCustomFieldResp extends Struct<BatchUpdateEcoAccountCustomFieldResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface BatchUpdateEcoBackgroundCheckCustomFieldReq extends Struct<BatchUpdateEcoBackgroundCheckCustomFieldReq>{

			ecoBackgroundCheckCustomField:Ref<EcoBackgroundCheckCustomField>
	}
	export interface BatchUpdateEcoBackgroundCheckCustomFieldReqBuilder extends Struct<BatchUpdateEcoBackgroundCheckCustomFieldReqBuilder>{

			ecoBackgroundCheckCustomField(ecoBackgroundCheckCustomField:Ref<EcoBackgroundCheckCustomField>):Ref<BatchUpdateEcoBackgroundCheckCustomFieldReqBuilder>
			build():Ref<BatchUpdateEcoBackgroundCheckCustomFieldReq>
	}
	export interface BatchUpdateEcoBackgroundCheckCustomFieldResp extends Struct<BatchUpdateEcoBackgroundCheckCustomFieldResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface BatchUpdateEcoBackgroundCheckPackageReq extends Struct<BatchUpdateEcoBackgroundCheckPackageReq>{

			ecoBackgroundCheckPackage:Ref<EcoBackgroundCheckPackage>
	}
	export interface BatchUpdateEcoBackgroundCheckPackageReqBuilder extends Struct<BatchUpdateEcoBackgroundCheckPackageReqBuilder>{

			ecoBackgroundCheckPackage(ecoBackgroundCheckPackage:Ref<EcoBackgroundCheckPackage>):Ref<BatchUpdateEcoBackgroundCheckPackageReqBuilder>
			build():Ref<BatchUpdateEcoBackgroundCheckPackageReq>
	}
	export interface BatchUpdateEcoBackgroundCheckPackageResp extends Struct<BatchUpdateEcoBackgroundCheckPackageResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface BatchUpdateEcoExamPaperReq extends Struct<BatchUpdateEcoExamPaperReq>{

			ecoExamPaper:Ref<EcoExamPaper>
	}
	export interface BatchUpdateEcoExamPaperReqBuilder extends Struct<BatchUpdateEcoExamPaperReqBuilder>{

			ecoExamPaper(ecoExamPaper:Ref<EcoExamPaper>):Ref<BatchUpdateEcoExamPaperReqBuilder>
			build():Ref<BatchUpdateEcoExamPaperReq>
	}
	export interface BatchUpdateEcoExamPaperResp extends Struct<BatchUpdateEcoExamPaperResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface BatchUpdateJobManagerPathReqBodyBuilder extends Struct<BatchUpdateJobManagerPathReqBodyBuilder>{

			recruiterId(recruiterId:string):Ref<BatchUpdateJobManagerPathReqBodyBuilder>
			assistantIdList(assistantIdList:string[]):Ref<BatchUpdateJobManagerPathReqBodyBuilder>
			hiringManagerIdList(hiringManagerIdList:string[]):Ref<BatchUpdateJobManagerPathReqBodyBuilder>
			updateOptionList(updateOptionList:int[]):Ref<BatchUpdateJobManagerPathReqBodyBuilder>
			creatorId(creatorId:string):Ref<BatchUpdateJobManagerPathReqBodyBuilder>
			build():Ref<BatchUpdateJobManagerReqBody>
	}
	export interface BatchUpdateJobManagerReq extends Struct<BatchUpdateJobManagerReq>{

			body:Ref<BatchUpdateJobManagerReqBody>
	}
	export interface BatchUpdateJobManagerReqBody extends Struct<BatchUpdateJobManagerReqBody>{

			recruiterId:Ref<string>
			assistantIdList:string[]
			hiringManagerIdList:string[]
			updateOptionList:int[]
			creatorId:Ref<string>
	}
	export interface BatchUpdateJobManagerReqBodyBuilder extends Struct<BatchUpdateJobManagerReqBodyBuilder>{

			recruiterId(recruiterId:string):Ref<BatchUpdateJobManagerReqBodyBuilder>
			assistantIdList(assistantIdList:string[]):Ref<BatchUpdateJobManagerReqBodyBuilder>
			hiringManagerIdList(hiringManagerIdList:string[]):Ref<BatchUpdateJobManagerReqBodyBuilder>
			updateOptionList(updateOptionList:int[]):Ref<BatchUpdateJobManagerReqBodyBuilder>
			creatorId(creatorId:string):Ref<BatchUpdateJobManagerReqBodyBuilder>
			build():Ref<BatchUpdateJobManagerReqBody>
	}
	export interface BatchUpdateJobManagerReqBuilder extends Struct<BatchUpdateJobManagerReqBuilder>{

			jobId(jobId:string):Ref<BatchUpdateJobManagerReqBuilder>
			userIdType(userIdType:string):Ref<BatchUpdateJobManagerReqBuilder>
			body(body:Ref<BatchUpdateJobManagerReqBody>):Ref<BatchUpdateJobManagerReqBuilder>
			build():Ref<BatchUpdateJobManagerReq>
	}
	export interface BatchUpdateJobManagerResp extends Struct<BatchUpdateJobManagerResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<BatchUpdateJobManagerRespData>
			success():bool
	}
	export interface BatchUpdateJobManagerRespData extends Struct<BatchUpdateJobManagerRespData>{

			jobManager:Ref<JobManager>
	}
	export interface BonusAmount extends Struct<BonusAmount>{

			pointBonus:Ref<int>
	}
	export interface BonusAmountBuilder extends Struct<BonusAmountBuilder>{

			pointBonus(pointBonus:int):Ref<BonusAmountBuilder>
			build():Ref<BonusAmount>
	}
	export interface BusinessManagementScope extends Struct<BusinessManagementScope>{

			entity:Ref<EntityInfo>
			permissionGroups:Ref<PermissionGroupInfo>[]
	}
	export interface BusinessManagementScopeBuilder extends Struct<BusinessManagementScopeBuilder>{

			entity(entity:Ref<EntityInfo>):Ref<BusinessManagementScopeBuilder>
			permissionGroups(permissionGroups:Ref<PermissionGroupInfo>[]):Ref<BusinessManagementScopeBuilder>
			build():Ref<BusinessManagementScope>
	}
	export interface CancelEcoBackgroundCheckPathReqBodyBuilder extends Struct<CancelEcoBackgroundCheckPathReqBodyBuilder>{

			backgroundCheckId(backgroundCheckId:string):Ref<CancelEcoBackgroundCheckPathReqBodyBuilder>
			build():Ref<CancelEcoBackgroundCheckReqBody>
	}
	export interface CancelEcoBackgroundCheckReq extends Struct<CancelEcoBackgroundCheckReq>{

			body:Ref<CancelEcoBackgroundCheckReqBody>
	}
	export interface CancelEcoBackgroundCheckReqBody extends Struct<CancelEcoBackgroundCheckReqBody>{

			backgroundCheckId:Ref<string>
	}
	export interface CancelEcoBackgroundCheckReqBodyBuilder extends Struct<CancelEcoBackgroundCheckReqBodyBuilder>{

			backgroundCheckId(backgroundCheckId:string):Ref<CancelEcoBackgroundCheckReqBodyBuilder>
			build():Ref<CancelEcoBackgroundCheckReqBody>
	}
	export interface CancelEcoBackgroundCheckReqBuilder extends Struct<CancelEcoBackgroundCheckReqBuilder>{

			body(body:Ref<CancelEcoBackgroundCheckReqBody>):Ref<CancelEcoBackgroundCheckReqBuilder>
			build():Ref<CancelEcoBackgroundCheckReq>
	}
	export interface CancelEcoBackgroundCheckResp extends Struct<CancelEcoBackgroundCheckResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface CandidateTagFilter extends Struct<CandidateTagFilter>{

			matchType:Ref<int>
			candidateTagId:string[]
	}
	export interface CandidateTagFilterBuilder extends Struct<CandidateTagFilterBuilder>{

			matchType(matchType:int):Ref<CandidateTagFilterBuilder>
			candidateTagId(candidateTagId:string[]):Ref<CandidateTagFilterBuilder>
			build():Ref<CandidateTagFilter>
	}
	export interface CareerInfo extends Struct<CareerInfo>{

			careerType:Ref<int>
			company:Ref<string>
			desc:Ref<string>
			endTime:Ref<int>
			startTime:Ref<int>
			title:Ref<string>
	}
	export interface CareerInfoBuilder extends Struct<CareerInfoBuilder>{

			careerType(careerType:int):Ref<CareerInfoBuilder>
			company(company:string):Ref<CareerInfoBuilder>
			desc(desc:string):Ref<CareerInfoBuilder>
			endTime(endTime:int):Ref<CareerInfoBuilder>
			startTime(startTime:int):Ref<CareerInfoBuilder>
			title(title:string):Ref<CareerInfoBuilder>
			build():Ref<CareerInfo>
	}
	export interface Cash extends Struct<Cash>{

			currencyType:Ref<string>
			amount:Ref<float64>
	}
	export interface CashBuilder extends Struct<CashBuilder>{

			currencyType(currencyType:string):Ref<CashBuilder>
			amount(amount:float64):Ref<CashBuilder>
			build():Ref<Cash>
	}
	//1
	export const CategoryAddition:int
	//2
	export const CategoryReplacement:int
	//1
	export const CategoryUpdateJobRequirementAddition:int
	//2
	export const CategoryUpdateJobRequirementReplacement:int
	export interface CertificateInfo extends Struct<CertificateInfo>{

			desc:Ref<string>
			name:Ref<string>
	}
	export interface CertificateInfoBuilder extends Struct<CertificateInfoBuilder>{

			desc(desc:string):Ref<CertificateInfoBuilder>
			name(name:string):Ref<CertificateInfoBuilder>
			build():Ref<CertificateInfo>
	}
	export interface ChangeEmployeeStage extends Struct<ChangeEmployeeStage>{

			operation:Ref<int>
			conversionInfo:Ref<EmployeeConversionInfo>
			overboardInfo:Ref<EmployeeOverboardInfo>
	}
	export interface ChangeEmployeeStageBuilder extends Struct<ChangeEmployeeStageBuilder>{

			operation(operation:int):Ref<ChangeEmployeeStageBuilder>
			conversionInfo(conversionInfo:Ref<EmployeeConversionInfo>):Ref<ChangeEmployeeStageBuilder>
			overboardInfo(overboardInfo:Ref<EmployeeOverboardInfo>):Ref<ChangeEmployeeStageBuilder>
			build():Ref<ChangeEmployeeStage>
	}
	export interface CheckFailedAccountInfo extends Struct<CheckFailedAccountInfo>{

			accountId:Ref<string>
			totalWithdrawRewardInfo:Ref<BonusAmount>
			totalRechargeRewardInfo:Ref<BonusAmount>
	}
	export interface CheckFailedAccountInfoBuilder extends Struct<CheckFailedAccountInfoBuilder>{

			accountId(accountId:string):Ref<CheckFailedAccountInfoBuilder>
			totalWithdrawRewardInfo(totalWithdrawRewardInfo:Ref<BonusAmount>):Ref<CheckFailedAccountInfoBuilder>
			totalRechargeRewardInfo(totalRechargeRewardInfo:Ref<BonusAmount>):Ref<CheckFailedAccountInfoBuilder>
			build():Ref<CheckFailedAccountInfo>
	}
	export interface City extends Struct<City>{

			cityCode:Ref<string>
			name:Ref<string>
			enName:Ref<string>
			country:Ref<Country>
	}
	export interface CityBuilder extends Struct<CityBuilder>{

			cityCode(cityCode:string):Ref<CityBuilder>
			name(name:string):Ref<CityBuilder>
			enName(enName:string):Ref<CityBuilder>
			country(country:Ref<Country>):Ref<CityBuilder>
			build():Ref<City>
	}
	export interface CloseJobReq extends Struct<CloseJobReq>{

	}
	export interface CloseJobReqBuilder extends Struct<CloseJobReqBuilder>{

			jobId(jobId:string):Ref<CloseJobReqBuilder>
			build():Ref<CloseJobReq>
	}
	export interface CloseJobResp extends Struct<CloseJobResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface CodeNameObject extends Struct<CodeNameObject>{

			code:Ref<string>
			name:Ref<I18n>
	}
	export interface CodeNameObjectBuilder extends Struct<CodeNameObjectBuilder>{

			code(code:string):Ref<CodeNameObjectBuilder>
			name(name:Ref<I18n>):Ref<CodeNameObjectBuilder>
			build():Ref<CodeNameObject>
	}
	export interface CombinedCreateJobReq extends Struct<CombinedCreateJobReq>{

			combinedJob:Ref<CombinedJob>
	}
	export interface CombinedCreateJobReqBuilder extends Struct<CombinedCreateJobReqBuilder>{

			userIdType(userIdType:string):Ref<CombinedCreateJobReqBuilder>
			departmentIdType(departmentIdType:string):Ref<CombinedCreateJobReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<CombinedCreateJobReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<CombinedCreateJobReqBuilder>
			combinedJob(combinedJob:Ref<CombinedJob>):Ref<CombinedCreateJobReqBuilder>
			build():Ref<CombinedCreateJobReq>
	}
	export interface CombinedCreateJobResp extends Struct<CombinedCreateJobResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CombinedCreateJobRespData>
			success():bool
	}
	export interface CombinedCreateJobRespData extends Struct<CombinedCreateJobRespData>{

			defaultJobPost:Ref<CombinedJobResultDefaultJobPost>
			job:Ref<Job>
			jobManager:Ref<JobManager>
			interviewRegistrationSchemaInfo:Ref<RegistrationSchemaInfo>
			onboardRegistrationSchemaInfo:Ref<RegistrationSchemaInfo>
			targetMajorList:Ref<TargetMajorInfo>[]
	}
	export interface CombinedCreateTalentPathReqBodyBuilder extends Struct<CombinedCreateTalentPathReqBodyBuilder>{

			initSourceId(initSourceId:string):Ref<CombinedCreateTalentPathReqBodyBuilder>
			resumeSourceId(resumeSourceId:string):Ref<CombinedCreateTalentPathReqBodyBuilder>
			folderIdList(folderIdList:string[]):Ref<CombinedCreateTalentPathReqBodyBuilder>
			creatorId(creatorId:string):Ref<CombinedCreateTalentPathReqBodyBuilder>
			creatorAccountType(creatorAccountType:int):Ref<CombinedCreateTalentPathReqBodyBuilder>
			resumeAttachmentId(resumeAttachmentId:string):Ref<CombinedCreateTalentPathReqBodyBuilder>
			basicInfo(basicInfo:Ref<TalentCombinedBasicInfo>):Ref<CombinedCreateTalentPathReqBodyBuilder>
			educationList(educationList:Ref<TalentCombinedEducationInfo>[]):Ref<CombinedCreateTalentPathReqBodyBuilder>
			careerList(careerList:Ref<TalentCombinedCareerInfo>[]):Ref<CombinedCreateTalentPathReqBodyBuilder>
			projectList(projectList:Ref<TalentCombinedProjectInfo>[]):Ref<CombinedCreateTalentPathReqBodyBuilder>
			worksList(worksList:Ref<TalentCombinedWorkInfo>[]):Ref<CombinedCreateTalentPathReqBodyBuilder>
			awardList(awardList:Ref<TalentCombinedAwardInfo>[]):Ref<CombinedCreateTalentPathReqBodyBuilder>
			languageList(languageList:Ref<TalentCombinedLanguageInfo>[]):Ref<CombinedCreateTalentPathReqBodyBuilder>
			snsList(snsList:Ref<TalentCombinedSnsInfo>[]):Ref<CombinedCreateTalentPathReqBodyBuilder>
			preferredCityCodeList(preferredCityCodeList:string[]):Ref<CombinedCreateTalentPathReqBodyBuilder>
			selfEvaluation(selfEvaluation:Ref<TalentSelfEvaluation>):Ref<CombinedCreateTalentPathReqBodyBuilder>
			customizedData(customizedData:Ref<TalentCustomizedDataObjectValue>[]):Ref<CombinedCreateTalentPathReqBodyBuilder>
			build():Ref<CombinedCreateTalentReqBody>
	}
	export interface CombinedCreateTalentReq extends Struct<CombinedCreateTalentReq>{

			body:Ref<CombinedCreateTalentReqBody>
	}
	export interface CombinedCreateTalentReqBody extends Struct<CombinedCreateTalentReqBody>{

			initSourceId:Ref<string>
			resumeSourceId:Ref<string>
			folderIdList:string[]
			creatorId:Ref<string>
			creatorAccountType:Ref<int>
			resumeAttachmentId:Ref<string>
			basicInfo:Ref<TalentCombinedBasicInfo>
			educationList:Ref<TalentCombinedEducationInfo>[]
			careerList:Ref<TalentCombinedCareerInfo>[]
			projectList:Ref<TalentCombinedProjectInfo>[]
			worksList:Ref<TalentCombinedWorkInfo>[]
			awardList:Ref<TalentCombinedAwardInfo>[]
			languageList:Ref<TalentCombinedLanguageInfo>[]
			snsList:Ref<TalentCombinedSnsInfo>[]
			preferredCityCodeList:string[]
			selfEvaluation:Ref<TalentSelfEvaluation>
			customizedData:Ref<TalentCustomizedDataObjectValue>[]
	}
	export interface CombinedCreateTalentReqBodyBuilder extends Struct<CombinedCreateTalentReqBodyBuilder>{

			initSourceId(initSourceId:string):Ref<CombinedCreateTalentReqBodyBuilder>
			resumeSourceId(resumeSourceId:string):Ref<CombinedCreateTalentReqBodyBuilder>
			folderIdList(folderIdList:string[]):Ref<CombinedCreateTalentReqBodyBuilder>
			creatorId(creatorId:string):Ref<CombinedCreateTalentReqBodyBuilder>
			creatorAccountType(creatorAccountType:int):Ref<CombinedCreateTalentReqBodyBuilder>
			resumeAttachmentId(resumeAttachmentId:string):Ref<CombinedCreateTalentReqBodyBuilder>
			basicInfo(basicInfo:Ref<TalentCombinedBasicInfo>):Ref<CombinedCreateTalentReqBodyBuilder>
			educationList(educationList:Ref<TalentCombinedEducationInfo>[]):Ref<CombinedCreateTalentReqBodyBuilder>
			careerList(careerList:Ref<TalentCombinedCareerInfo>[]):Ref<CombinedCreateTalentReqBodyBuilder>
			projectList(projectList:Ref<TalentCombinedProjectInfo>[]):Ref<CombinedCreateTalentReqBodyBuilder>
			worksList(worksList:Ref<TalentCombinedWorkInfo>[]):Ref<CombinedCreateTalentReqBodyBuilder>
			awardList(awardList:Ref<TalentCombinedAwardInfo>[]):Ref<CombinedCreateTalentReqBodyBuilder>
			languageList(languageList:Ref<TalentCombinedLanguageInfo>[]):Ref<CombinedCreateTalentReqBodyBuilder>
			snsList(snsList:Ref<TalentCombinedSnsInfo>[]):Ref<CombinedCreateTalentReqBodyBuilder>
			preferredCityCodeList(preferredCityCodeList:string[]):Ref<CombinedCreateTalentReqBodyBuilder>
			selfEvaluation(selfEvaluation:Ref<TalentSelfEvaluation>):Ref<CombinedCreateTalentReqBodyBuilder>
			customizedData(customizedData:Ref<TalentCustomizedDataObjectValue>[]):Ref<CombinedCreateTalentReqBodyBuilder>
			build():Ref<CombinedCreateTalentReqBody>
	}
	export interface CombinedCreateTalentReqBuilder extends Struct<CombinedCreateTalentReqBuilder>{

			userIdType(userIdType:string):Ref<CombinedCreateTalentReqBuilder>
			body(body:Ref<CombinedCreateTalentReqBody>):Ref<CombinedCreateTalentReqBuilder>
			build():Ref<CombinedCreateTalentReq>
	}
	export interface CombinedCreateTalentResp extends Struct<CombinedCreateTalentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CombinedCreateTalentRespData>
			success():bool
	}
	export interface CombinedCreateTalentRespData extends Struct<CombinedCreateTalentRespData>{

			talentId:Ref<string>
			creatorId:Ref<string>
			creatorAccountType:Ref<int>
	}
	export interface CombinedJob extends Struct<CombinedJob>{

			id:Ref<string>
			code:Ref<string>
			experience:Ref<int>
			expiryTime:Ref<int>
			customizedDataList:Ref<CombinedJobObjectValueMap>[]
			minLevelId:Ref<string>
			minSalary:Ref<int>
			title:Ref<string>
			jobManagers:Ref<JobManager>
			jobProcessId:Ref<string>
			processType:Ref<int>
			subjectId:Ref<string>
			jobFunctionId:Ref<string>
			departmentId:Ref<string>
			headCount:Ref<int>
			isNeverExpired:Ref<bool>
			maxSalary:Ref<int>
			requirement:Ref<string>
			description:Ref<string>
			highlightList:string[]
			jobTypeId:Ref<string>
			maxLevelId:Ref<string>
			recruitmentTypeId:Ref<string>
			requiredDegree:Ref<int>
			jobCategoryId:Ref<string>
			addressIdList:string[]
			jobAttribute:Ref<int>
			expiryTimestamp:Ref<string>
			interviewRegistrationSchemaId:Ref<string>
			onboardRegistrationSchemaId:Ref<string>
			targetMajorIdList:string[]
	}
	export interface CombinedJobBuilder extends Struct<CombinedJobBuilder>{

			id(id:string):Ref<CombinedJobBuilder>
			code(code:string):Ref<CombinedJobBuilder>
			experience(experience:int):Ref<CombinedJobBuilder>
			expiryTime(expiryTime:int):Ref<CombinedJobBuilder>
			customizedDataList(customizedDataList:Ref<CombinedJobObjectValueMap>[]):Ref<CombinedJobBuilder>
			minLevelId(minLevelId:string):Ref<CombinedJobBuilder>
			minSalary(minSalary:int):Ref<CombinedJobBuilder>
			title(title:string):Ref<CombinedJobBuilder>
			jobManagers(jobManagers:Ref<JobManager>):Ref<CombinedJobBuilder>
			jobProcessId(jobProcessId:string):Ref<CombinedJobBuilder>
			processType(processType:int):Ref<CombinedJobBuilder>
			subjectId(subjectId:string):Ref<CombinedJobBuilder>
			jobFunctionId(jobFunctionId:string):Ref<CombinedJobBuilder>
			departmentId(departmentId:string):Ref<CombinedJobBuilder>
			headCount(headCount:int):Ref<CombinedJobBuilder>
			isNeverExpired(isNeverExpired:bool):Ref<CombinedJobBuilder>
			maxSalary(maxSalary:int):Ref<CombinedJobBuilder>
			requirement(requirement:string):Ref<CombinedJobBuilder>
			description(description:string):Ref<CombinedJobBuilder>
			highlightList(highlightList:string[]):Ref<CombinedJobBuilder>
			jobTypeId(jobTypeId:string):Ref<CombinedJobBuilder>
			maxLevelId(maxLevelId:string):Ref<CombinedJobBuilder>
			recruitmentTypeId(recruitmentTypeId:string):Ref<CombinedJobBuilder>
			requiredDegree(requiredDegree:int):Ref<CombinedJobBuilder>
			jobCategoryId(jobCategoryId:string):Ref<CombinedJobBuilder>
			addressIdList(addressIdList:string[]):Ref<CombinedJobBuilder>
			jobAttribute(jobAttribute:int):Ref<CombinedJobBuilder>
			expiryTimestamp(expiryTimestamp:string):Ref<CombinedJobBuilder>
			interviewRegistrationSchemaId(interviewRegistrationSchemaId:string):Ref<CombinedJobBuilder>
			onboardRegistrationSchemaId(onboardRegistrationSchemaId:string):Ref<CombinedJobBuilder>
			targetMajorIdList(targetMajorIdList:string[]):Ref<CombinedJobBuilder>
			build():Ref<CombinedJob>
	}
	export interface CombinedJobObjectValueMap extends Struct<CombinedJobObjectValueMap>{

			objectId:Ref<string>
			value:Ref<string>
	}
	export interface CombinedJobObjectValueMapBuilder extends Struct<CombinedJobObjectValueMapBuilder>{

			objectId(objectId:string):Ref<CombinedJobObjectValueMapBuilder>
			value(value:string):Ref<CombinedJobObjectValueMapBuilder>
			build():Ref<CombinedJobObjectValueMap>
	}
	export interface CombinedJobResult extends Struct<CombinedJobResult>{

			defaultJobPost:Ref<CombinedJobResultDefaultJobPost>
			job:Ref<Job>
			jobManager:Ref<JobManager>
			interviewRegistrationSchemaInfo:Ref<RegistrationSchemaInfo>
			onboardRegistrationSchemaInfo:Ref<RegistrationSchemaInfo>
			targetMajorList:Ref<TargetMajorInfo>[]
	}
	export interface CombinedJobResultBuilder extends Struct<CombinedJobResultBuilder>{

			defaultJobPost(defaultJobPost:Ref<CombinedJobResultDefaultJobPost>):Ref<CombinedJobResultBuilder>
			job(job:Ref<Job>):Ref<CombinedJobResultBuilder>
			jobManager(jobManager:Ref<JobManager>):Ref<CombinedJobResultBuilder>
			interviewRegistrationSchemaInfo(interviewRegistrationSchemaInfo:Ref<RegistrationSchemaInfo>):Ref<CombinedJobResultBuilder>
			onboardRegistrationSchemaInfo(onboardRegistrationSchemaInfo:Ref<RegistrationSchemaInfo>):Ref<CombinedJobResultBuilder>
			targetMajorList(targetMajorList:Ref<TargetMajorInfo>[]):Ref<CombinedJobResultBuilder>
			build():Ref<CombinedJobResult>
	}
	export interface CombinedJobResultDefaultJobPost extends Struct<CombinedJobResultDefaultJobPost>{

			id:Ref<string>
	}
	export interface CombinedJobResultDefaultJobPostBuilder extends Struct<CombinedJobResultDefaultJobPostBuilder>{

			id(id:string):Ref<CombinedJobResultDefaultJobPostBuilder>
			build():Ref<CombinedJobResultDefaultJobPost>
	}
	export interface CombinedUpdateJobReq extends Struct<CombinedUpdateJobReq>{

			combinedJob:Ref<CombinedJob>
	}
	export interface CombinedUpdateJobReqBuilder extends Struct<CombinedUpdateJobReqBuilder>{

			jobId(jobId:string):Ref<CombinedUpdateJobReqBuilder>
			userIdType(userIdType:string):Ref<CombinedUpdateJobReqBuilder>
			departmentIdType(departmentIdType:string):Ref<CombinedUpdateJobReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<CombinedUpdateJobReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<CombinedUpdateJobReqBuilder>
			combinedJob(combinedJob:Ref<CombinedJob>):Ref<CombinedUpdateJobReqBuilder>
			build():Ref<CombinedUpdateJobReq>
	}
	export interface CombinedUpdateJobResp extends Struct<CombinedUpdateJobResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CombinedUpdateJobRespData>
			success():bool
	}
	export interface CombinedUpdateJobRespData extends Struct<CombinedUpdateJobRespData>{

			defaultJobPost:Ref<CombinedJobResultDefaultJobPost>
			job:Ref<Job>
			jobManager:Ref<JobManager>
			interviewRegistrationSchemaInfo:Ref<RegistrationSchemaInfo>
			onboardRegistrationSchemaInfo:Ref<RegistrationSchemaInfo>
			targetMajorList:Ref<TargetMajorInfo>[]
	}
	export interface CombinedUpdateTalentPathReqBodyBuilder extends Struct<CombinedUpdateTalentPathReqBodyBuilder>{

			talentId(talentId:string):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			initSourceId(initSourceId:string):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			folderIdList(folderIdList:string[]):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			operatorId(operatorId:string):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			operatorAccountType(operatorAccountType:int):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			resumeAttachmentId(resumeAttachmentId:string):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			basicInfo(basicInfo:Ref<TalentCombinedBasicInfo>):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			educationList(educationList:Ref<TalentCombinedEducationInfo>[]):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			careerList(careerList:Ref<TalentCombinedCareerInfo>[]):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			projectList(projectList:Ref<TalentCombinedProjectInfo>[]):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			worksList(worksList:Ref<TalentCombinedWorkInfo>[]):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			awardList(awardList:Ref<TalentCombinedAwardInfo>[]):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			languageList(languageList:Ref<TalentCombinedLanguageInfo>[]):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			snsList(snsList:Ref<TalentCombinedSnsInfo>[]):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			preferredCityCodeList(preferredCityCodeList:string[]):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			selfEvaluation(selfEvaluation:Ref<TalentSelfEvaluation>):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			customizedData(customizedData:Ref<TalentCustomizedDataObjectValue>[]):Ref<CombinedUpdateTalentPathReqBodyBuilder>
			build():Ref<CombinedUpdateTalentReqBody>
	}
	export interface CombinedUpdateTalentReq extends Struct<CombinedUpdateTalentReq>{

			body:Ref<CombinedUpdateTalentReqBody>
	}
	export interface CombinedUpdateTalentReqBody extends Struct<CombinedUpdateTalentReqBody>{

			talentId:Ref<string>
			initSourceId:Ref<string>
			folderIdList:string[]
			operatorId:Ref<string>
			operatorAccountType:Ref<int>
			resumeAttachmentId:Ref<string>
			basicInfo:Ref<TalentCombinedBasicInfo>
			educationList:Ref<TalentCombinedEducationInfo>[]
			careerList:Ref<TalentCombinedCareerInfo>[]
			projectList:Ref<TalentCombinedProjectInfo>[]
			worksList:Ref<TalentCombinedWorkInfo>[]
			awardList:Ref<TalentCombinedAwardInfo>[]
			languageList:Ref<TalentCombinedLanguageInfo>[]
			snsList:Ref<TalentCombinedSnsInfo>[]
			preferredCityCodeList:string[]
			selfEvaluation:Ref<TalentSelfEvaluation>
			customizedData:Ref<TalentCustomizedDataObjectValue>[]
	}
	export interface CombinedUpdateTalentReqBodyBuilder extends Struct<CombinedUpdateTalentReqBodyBuilder>{

			talentId(talentId:string):Ref<CombinedUpdateTalentReqBodyBuilder>
			initSourceId(initSourceId:string):Ref<CombinedUpdateTalentReqBodyBuilder>
			folderIdList(folderIdList:string[]):Ref<CombinedUpdateTalentReqBodyBuilder>
			operatorId(operatorId:string):Ref<CombinedUpdateTalentReqBodyBuilder>
			operatorAccountType(operatorAccountType:int):Ref<CombinedUpdateTalentReqBodyBuilder>
			resumeAttachmentId(resumeAttachmentId:string):Ref<CombinedUpdateTalentReqBodyBuilder>
			basicInfo(basicInfo:Ref<TalentCombinedBasicInfo>):Ref<CombinedUpdateTalentReqBodyBuilder>
			educationList(educationList:Ref<TalentCombinedEducationInfo>[]):Ref<CombinedUpdateTalentReqBodyBuilder>
			careerList(careerList:Ref<TalentCombinedCareerInfo>[]):Ref<CombinedUpdateTalentReqBodyBuilder>
			projectList(projectList:Ref<TalentCombinedProjectInfo>[]):Ref<CombinedUpdateTalentReqBodyBuilder>
			worksList(worksList:Ref<TalentCombinedWorkInfo>[]):Ref<CombinedUpdateTalentReqBodyBuilder>
			awardList(awardList:Ref<TalentCombinedAwardInfo>[]):Ref<CombinedUpdateTalentReqBodyBuilder>
			languageList(languageList:Ref<TalentCombinedLanguageInfo>[]):Ref<CombinedUpdateTalentReqBodyBuilder>
			snsList(snsList:Ref<TalentCombinedSnsInfo>[]):Ref<CombinedUpdateTalentReqBodyBuilder>
			preferredCityCodeList(preferredCityCodeList:string[]):Ref<CombinedUpdateTalentReqBodyBuilder>
			selfEvaluation(selfEvaluation:Ref<TalentSelfEvaluation>):Ref<CombinedUpdateTalentReqBodyBuilder>
			customizedData(customizedData:Ref<TalentCustomizedDataObjectValue>[]):Ref<CombinedUpdateTalentReqBodyBuilder>
			build():Ref<CombinedUpdateTalentReqBody>
	}
	export interface CombinedUpdateTalentReqBuilder extends Struct<CombinedUpdateTalentReqBuilder>{

			userIdType(userIdType:string):Ref<CombinedUpdateTalentReqBuilder>
			body(body:Ref<CombinedUpdateTalentReqBody>):Ref<CombinedUpdateTalentReqBuilder>
			build():Ref<CombinedUpdateTalentReq>
	}
	export interface CombinedUpdateTalentResp extends Struct<CombinedUpdateTalentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CombinedUpdateTalentRespData>
			success():bool
	}
	export interface CombinedUpdateTalentRespData extends Struct<CombinedUpdateTalentRespData>{

			talentId:Ref<string>
			operatorId:Ref<string>
			operatorAccountType:Ref<int>
	}
	export interface CommonAddress extends Struct<CommonAddress>{

			id:Ref<string>
			name:Ref<I18n>
			district:Ref<CodeNameObject>
			city:Ref<CodeNameObject>
			state:Ref<CodeNameObject>
			country:Ref<CodeNameObject>
	}
	export interface CommonAddressBuilder extends Struct<CommonAddressBuilder>{

			id(id:string):Ref<CommonAddressBuilder>
			name(name:Ref<I18n>):Ref<CommonAddressBuilder>
			district(district:Ref<CodeNameObject>):Ref<CommonAddressBuilder>
			city(city:Ref<CodeNameObject>):Ref<CommonAddressBuilder>
			state(state:Ref<CodeNameObject>):Ref<CommonAddressBuilder>
			country(country:Ref<CodeNameObject>):Ref<CommonAddressBuilder>
			build():Ref<CommonAddress>
	}
	export interface CommonSchema extends Struct<CommonSchema>{

			id:Ref<string>
			name:Ref<I18n>
			description:Ref<I18n>
			setting:Ref<CommonSchemaSetting>
			isCustomized:Ref<bool>
			isRequired:Ref<bool>
			isVisible:Ref<bool>
			activeStatus:Ref<int>
			childrenList:Ref<CommonSchemaChild>[]
	}
	export interface CommonSchemaBuilder extends Struct<CommonSchemaBuilder>{

			id(id:string):Ref<CommonSchemaBuilder>
			name(name:Ref<I18n>):Ref<CommonSchemaBuilder>
			description(description:Ref<I18n>):Ref<CommonSchemaBuilder>
			setting(setting:Ref<CommonSchemaSetting>):Ref<CommonSchemaBuilder>
			isCustomized(isCustomized:bool):Ref<CommonSchemaBuilder>
			isRequired(isRequired:bool):Ref<CommonSchemaBuilder>
			isVisible(isVisible:bool):Ref<CommonSchemaBuilder>
			activeStatus(activeStatus:int):Ref<CommonSchemaBuilder>
			childrenList(childrenList:Ref<CommonSchemaChild>[]):Ref<CommonSchemaBuilder>
			build():Ref<CommonSchema>
	}
	export interface CommonSchemaChild extends Struct<CommonSchemaChild>{

			id:Ref<string>
			name:Ref<I18n>
			description:Ref<I18n>
			setting:Ref<CommonSchemaSetting>
			parentId:Ref<string>
			isCustomized:Ref<bool>
			isRequired:Ref<bool>
			isVisible:Ref<bool>
			activeStatus:Ref<int>
	}
	export interface CommonSchemaChildBuilder extends Struct<CommonSchemaChildBuilder>{

			id(id:string):Ref<CommonSchemaChildBuilder>
			name(name:Ref<I18n>):Ref<CommonSchemaChildBuilder>
			description(description:Ref<I18n>):Ref<CommonSchemaChildBuilder>
			setting(setting:Ref<CommonSchemaSetting>):Ref<CommonSchemaChildBuilder>
			parentId(parentId:string):Ref<CommonSchemaChildBuilder>
			isCustomized(isCustomized:bool):Ref<CommonSchemaChildBuilder>
			isRequired(isRequired:bool):Ref<CommonSchemaChildBuilder>
			isVisible(isVisible:bool):Ref<CommonSchemaChildBuilder>
			activeStatus(activeStatus:int):Ref<CommonSchemaChildBuilder>
			build():Ref<CommonSchemaChild>
	}
	export interface CommonSchemaConfig extends Struct<CommonSchemaConfig>{

			options:Ref<CommonSchemaOption>[]
	}
	export interface CommonSchemaConfigBuilder extends Struct<CommonSchemaConfigBuilder>{

			options(options:Ref<CommonSchemaOption>[]):Ref<CommonSchemaConfigBuilder>
			build():Ref<CommonSchemaConfig>
	}
	export interface CommonSchemaOption extends Struct<CommonSchemaOption>{

			key:Ref<string>
			name:Ref<I18n>
			description:Ref<I18n>
			activeStatus:Ref<int>
	}
	export interface CommonSchemaOptionBuilder extends Struct<CommonSchemaOptionBuilder>{

			key(key:string):Ref<CommonSchemaOptionBuilder>
			name(name:Ref<I18n>):Ref<CommonSchemaOptionBuilder>
			description(description:Ref<I18n>):Ref<CommonSchemaOptionBuilder>
			activeStatus(activeStatus:int):Ref<CommonSchemaOptionBuilder>
			build():Ref<CommonSchemaOption>
	}
	export interface CommonSchemaSetting extends Struct<CommonSchemaSetting>{

			objectType:Ref<int>
			config:Ref<CommonSchemaConfig>
	}
	export interface CommonSchemaSettingBuilder extends Struct<CommonSchemaSettingBuilder>{

			objectType(objectType:int):Ref<CommonSchemaSettingBuilder>
			config(config:Ref<CommonSchemaConfig>):Ref<CommonSchemaSettingBuilder>
			build():Ref<CommonSchemaSetting>
	}
	export interface CompetitionInfo extends Struct<CompetitionInfo>{

			desc:Ref<string>
			name:Ref<string>
	}
	export interface CompetitionInfoBuilder extends Struct<CompetitionInfoBuilder>{

			desc(desc:string):Ref<CompetitionInfoBuilder>
			name(name:string):Ref<CompetitionInfoBuilder>
			build():Ref<CompetitionInfo>
	}
	//1
	export const ConclusionFail:int
	//2
	export const ConclusionPass:int
	//1
	export const ConclusionPatchExternalInterviewAssessmentFail:int
	//2
	export const ConclusionPatchExternalInterviewAssessmentPass:int
	//3
	export const ConclusionPatchExternalInterviewAssessmentToBeDetermined:int
	//3
	export const ConclusionToBeDetermined:int
	export interface ConfigJobReq extends Struct<ConfigJobReq>{

	}
	export interface ConfigJobReqBuilder extends Struct<ConfigJobReqBuilder>{

			jobId(jobId:string):Ref<ConfigJobReqBuilder>
			userIdType(userIdType:string):Ref<ConfigJobReqBuilder>
			build():Ref<ConfigJobReq>
	}
	export interface ConfigJobResp extends Struct<ConfigJobResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ConfigJobRespData>
			success():bool
	}
	export interface ConfigJobRespData extends Struct<ConfigJobRespData>{

			jobConfig:Ref<JobConfigResult>
	}
	export interface ContractPeriodInfo extends Struct<ContractPeriodInfo>{

			periodType:Ref<int>
			period:Ref<int>
	}
	export interface ContractPeriodInfoBuilder extends Struct<ContractPeriodInfoBuilder>{

			periodType(periodType:int):Ref<ContractPeriodInfoBuilder>
			period(period:int):Ref<ContractPeriodInfoBuilder>
			build():Ref<ContractPeriodInfo>
	}
	export interface Country extends Struct<Country>{

			countryCode:Ref<string>
			name:Ref<string>
			enName:Ref<string>
	}
	export interface CountryBuilder extends Struct<CountryBuilder>{

			countryCode(countryCode:string):Ref<CountryBuilder>
			name(name:string):Ref<CountryBuilder>
			enName(enName:string):Ref<CountryBuilder>
			build():Ref<Country>
	}
	export interface CreateApplicationPathReqBodyBuilder extends Struct<CreateApplicationPathReqBodyBuilder>{

			talentId(talentId:string):Ref<CreateApplicationPathReqBodyBuilder>
			jobId(jobId:string):Ref<CreateApplicationPathReqBodyBuilder>
			userId(userId:string):Ref<CreateApplicationPathReqBodyBuilder>
			resumeSourceId(resumeSourceId:string):Ref<CreateApplicationPathReqBodyBuilder>
			applicationPreferredCityCodeList(applicationPreferredCityCodeList:string[]):Ref<CreateApplicationPathReqBodyBuilder>
			build():Ref<CreateApplicationReqBody>
	}
	export interface CreateApplicationReq extends Struct<CreateApplicationReq>{

			body:Ref<CreateApplicationReqBody>
	}
	export interface CreateApplicationReqBody extends Struct<CreateApplicationReqBody>{

			talentId:Ref<string>
			jobId:Ref<string>
			userId:Ref<string>
			resumeSourceId:Ref<string>
			applicationPreferredCityCodeList:string[]
	}
	export interface CreateApplicationReqBodyBuilder extends Struct<CreateApplicationReqBodyBuilder>{

			talentId(talentId:string):Ref<CreateApplicationReqBodyBuilder>
			jobId(jobId:string):Ref<CreateApplicationReqBodyBuilder>
			userId(userId:string):Ref<CreateApplicationReqBodyBuilder>
			resumeSourceId(resumeSourceId:string):Ref<CreateApplicationReqBodyBuilder>
			applicationPreferredCityCodeList(applicationPreferredCityCodeList:string[]):Ref<CreateApplicationReqBodyBuilder>
			build():Ref<CreateApplicationReqBody>
	}
	export interface CreateApplicationReqBuilder extends Struct<CreateApplicationReqBuilder>{

			userIdType(userIdType:string):Ref<CreateApplicationReqBuilder>
			body(body:Ref<CreateApplicationReqBody>):Ref<CreateApplicationReqBuilder>
			build():Ref<CreateApplicationReq>
	}
	export interface CreateApplicationResp extends Struct<CreateApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateApplicationRespData>
			success():bool
	}
	export interface CreateApplicationRespData extends Struct<CreateApplicationRespData>{

			id:Ref<string>
	}
	export interface CreateAttachmentResp extends Struct<CreateAttachmentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateAttachmentRespData>
			success():bool
	}
	export interface CreateAttachmentRespData extends Struct<CreateAttachmentRespData>{

			id:Ref<string>
	}
	export interface CreateByAttachmentWebsiteDeliveryReq extends Struct<CreateByAttachmentWebsiteDeliveryReq>{

			websiteDeliveryAttachment:Ref<WebsiteDeliveryAttachment>
	}
	export interface CreateByAttachmentWebsiteDeliveryReqBuilder extends Struct<CreateByAttachmentWebsiteDeliveryReqBuilder>{

			websiteId(websiteId:string):Ref<CreateByAttachmentWebsiteDeliveryReqBuilder>
			websiteDeliveryAttachment(websiteDeliveryAttachment:Ref<WebsiteDeliveryAttachment>):Ref<CreateByAttachmentWebsiteDeliveryReqBuilder>
			build():Ref<CreateByAttachmentWebsiteDeliveryReq>
	}
	export interface CreateByAttachmentWebsiteDeliveryResp extends Struct<CreateByAttachmentWebsiteDeliveryResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateByAttachmentWebsiteDeliveryRespData>
			success():bool
	}
	export interface CreateByAttachmentWebsiteDeliveryRespData extends Struct<CreateByAttachmentWebsiteDeliveryRespData>{

			taskId:Ref<string>
	}
	export interface CreateByResumeWebsiteDeliveryReq extends Struct<CreateByResumeWebsiteDeliveryReq>{

			websiteDelivery:Ref<WebsiteDelivery>
	}
	export interface CreateByResumeWebsiteDeliveryReqBuilder extends Struct<CreateByResumeWebsiteDeliveryReqBuilder>{

			websiteId(websiteId:string):Ref<CreateByResumeWebsiteDeliveryReqBuilder>
			userIdType(userIdType:string):Ref<CreateByResumeWebsiteDeliveryReqBuilder>
			websiteDelivery(websiteDelivery:Ref<WebsiteDelivery>):Ref<CreateByResumeWebsiteDeliveryReqBuilder>
			build():Ref<CreateByResumeWebsiteDeliveryReq>
	}
	export interface CreateByResumeWebsiteDeliveryResp extends Struct<CreateByResumeWebsiteDeliveryResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateByResumeWebsiteDeliveryRespData>
			success():bool
	}
	export interface CreateByResumeWebsiteDeliveryRespData extends Struct<CreateByResumeWebsiteDeliveryRespData>{

			delivery:Ref<WebsiteDeliveryDto>
	}
	export interface CreateEcoAccountCustomFieldReq extends Struct<CreateEcoAccountCustomFieldReq>{

			ecoAccountCustomField:Ref<EcoAccountCustomField>
	}
	export interface CreateEcoAccountCustomFieldReqBuilder extends Struct<CreateEcoAccountCustomFieldReqBuilder>{

			ecoAccountCustomField(ecoAccountCustomField:Ref<EcoAccountCustomField>):Ref<CreateEcoAccountCustomFieldReqBuilder>
			build():Ref<CreateEcoAccountCustomFieldReq>
	}
	export interface CreateEcoAccountCustomFieldResp extends Struct<CreateEcoAccountCustomFieldResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface CreateEcoBackgroundCheckCustomFieldReq extends Struct<CreateEcoBackgroundCheckCustomFieldReq>{

			ecoBackgroundCheckCustomField:Ref<EcoBackgroundCheckCustomField>
	}
	export interface CreateEcoBackgroundCheckCustomFieldReqBuilder extends Struct<CreateEcoBackgroundCheckCustomFieldReqBuilder>{

			ecoBackgroundCheckCustomField(ecoBackgroundCheckCustomField:Ref<EcoBackgroundCheckCustomField>):Ref<CreateEcoBackgroundCheckCustomFieldReqBuilder>
			build():Ref<CreateEcoBackgroundCheckCustomFieldReq>
	}
	export interface CreateEcoBackgroundCheckCustomFieldResp extends Struct<CreateEcoBackgroundCheckCustomFieldResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface CreateEcoBackgroundCheckPackageReq extends Struct<CreateEcoBackgroundCheckPackageReq>{

			ecoBackgroundCheckPackage:Ref<EcoBackgroundCheckPackage>
	}
	export interface CreateEcoBackgroundCheckPackageReqBuilder extends Struct<CreateEcoBackgroundCheckPackageReqBuilder>{

			ecoBackgroundCheckPackage(ecoBackgroundCheckPackage:Ref<EcoBackgroundCheckPackage>):Ref<CreateEcoBackgroundCheckPackageReqBuilder>
			build():Ref<CreateEcoBackgroundCheckPackageReq>
	}
	export interface CreateEcoBackgroundCheckPackageResp extends Struct<CreateEcoBackgroundCheckPackageResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface CreateEcoExamPaperReq extends Struct<CreateEcoExamPaperReq>{

			ecoExamPaper:Ref<EcoExamPaper>
	}
	export interface CreateEcoExamPaperReqBuilder extends Struct<CreateEcoExamPaperReqBuilder>{

			ecoExamPaper(ecoExamPaper:Ref<EcoExamPaper>):Ref<CreateEcoExamPaperReqBuilder>
			build():Ref<CreateEcoExamPaperReq>
	}
	export interface CreateEcoExamPaperResp extends Struct<CreateEcoExamPaperResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface CreateExamPathReqBodyBuilder extends Struct<CreateExamPathReqBodyBuilder>{

			applicationId(applicationId:string):Ref<CreateExamPathReqBodyBuilder>
			examResourceName(examResourceName:string):Ref<CreateExamPathReqBodyBuilder>
			score(score:float64):Ref<CreateExamPathReqBodyBuilder>
			uuid(uuid:string):Ref<CreateExamPathReqBodyBuilder>
			operatorId(operatorId:string):Ref<CreateExamPathReqBodyBuilder>
			build():Ref<CreateExamReqBody>
	}
	export interface CreateExamReq extends Struct<CreateExamReq>{

			body:Ref<CreateExamReqBody>
	}
	export interface CreateExamReqBody extends Struct<CreateExamReqBody>{

			applicationId:Ref<string>
			examResourceName:Ref<string>
			score:Ref<float64>
			uuid:Ref<string>
			operatorId:Ref<string>
	}
	export interface CreateExamReqBodyBuilder extends Struct<CreateExamReqBodyBuilder>{

			applicationId(applicationId:string):Ref<CreateExamReqBodyBuilder>
			examResourceName(examResourceName:string):Ref<CreateExamReqBodyBuilder>
			score(score:float64):Ref<CreateExamReqBodyBuilder>
			uuid(uuid:string):Ref<CreateExamReqBodyBuilder>
			operatorId(operatorId:string):Ref<CreateExamReqBodyBuilder>
			build():Ref<CreateExamReqBody>
	}
	export interface CreateExamReqBuilder extends Struct<CreateExamReqBuilder>{

			userIdType(userIdType:string):Ref<CreateExamReqBuilder>
			body(body:Ref<CreateExamReqBody>):Ref<CreateExamReqBuilder>
			build():Ref<CreateExamReq>
	}
	export interface CreateExamResp extends Struct<CreateExamResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateExamRespData>
			success():bool
	}
	export interface CreateExamRespData extends Struct<CreateExamRespData>{

			examId:Ref<string>
			applicationId:Ref<string>
			examResourceName:Ref<string>
			score:Ref<float64>
			uuid:Ref<string>
			operatorId:Ref<string>
			operateTime:Ref<string>
	}
	export interface CreateExternalApplicationReq extends Struct<CreateExternalApplicationReq>{

			externalApplication:Ref<ExternalApplication>
	}
	export interface CreateExternalApplicationReqBuilder extends Struct<CreateExternalApplicationReqBuilder>{

			externalApplication(externalApplication:Ref<ExternalApplication>):Ref<CreateExternalApplicationReqBuilder>
			build():Ref<CreateExternalApplicationReq>
	}
	export interface CreateExternalApplicationResp extends Struct<CreateExternalApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateExternalApplicationRespData>
			success():bool
	}
	export interface CreateExternalApplicationRespData extends Struct<CreateExternalApplicationRespData>{

			externalApplication:Ref<ExternalApplication>
	}
	export interface CreateExternalBackgroundCheckReq extends Struct<CreateExternalBackgroundCheckReq>{

			externalBackgroundCheck:Ref<ExternalBackgroundCheck>
	}
	export interface CreateExternalBackgroundCheckReqBuilder extends Struct<CreateExternalBackgroundCheckReqBuilder>{

			externalBackgroundCheck(externalBackgroundCheck:Ref<ExternalBackgroundCheck>):Ref<CreateExternalBackgroundCheckReqBuilder>
			build():Ref<CreateExternalBackgroundCheckReq>
	}
	export interface CreateExternalBackgroundCheckResp extends Struct<CreateExternalBackgroundCheckResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateExternalBackgroundCheckRespData>
			success():bool
	}
	export interface CreateExternalBackgroundCheckRespData extends Struct<CreateExternalBackgroundCheckRespData>{

			externalBackgroundCheck:Ref<ExternalBackgroundCheck>
	}
	export interface CreateExternalInterviewAssessmentReq extends Struct<CreateExternalInterviewAssessmentReq>{

			externalInterviewAssessment:Ref<ExternalInterviewAssessment>
	}
	export interface CreateExternalInterviewAssessmentReqBuilder extends Struct<CreateExternalInterviewAssessmentReqBuilder>{

			externalInterviewAssessment(externalInterviewAssessment:Ref<ExternalInterviewAssessment>):Ref<CreateExternalInterviewAssessmentReqBuilder>
			build():Ref<CreateExternalInterviewAssessmentReq>
	}
	export interface CreateExternalInterviewAssessmentResp extends Struct<CreateExternalInterviewAssessmentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateExternalInterviewAssessmentRespData>
			success():bool
	}
	export interface CreateExternalInterviewAssessmentRespData extends Struct<CreateExternalInterviewAssessmentRespData>{

			externalInterviewAssessment:Ref<ExternalInterviewAssessment>
	}
	export interface CreateExternalInterviewReq extends Struct<CreateExternalInterviewReq>{

			externalInterview:Ref<ExternalInterview>
	}
	export interface CreateExternalInterviewReqBuilder extends Struct<CreateExternalInterviewReqBuilder>{

			externalInterview(externalInterview:Ref<ExternalInterview>):Ref<CreateExternalInterviewReqBuilder>
			build():Ref<CreateExternalInterviewReq>
	}
	export interface CreateExternalInterviewResp extends Struct<CreateExternalInterviewResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateExternalInterviewRespData>
			success():bool
	}
	export interface CreateExternalInterviewRespData extends Struct<CreateExternalInterviewRespData>{

			externalInterview:Ref<ExternalInterview>
	}
	export interface CreateExternalReferralRewardReq extends Struct<CreateExternalReferralRewardReq>{

			externalReward:Ref<ExternalReward>
	}
	export interface CreateExternalReferralRewardReqBuilder extends Struct<CreateExternalReferralRewardReqBuilder>{

			userIdType(userIdType:string):Ref<CreateExternalReferralRewardReqBuilder>
			externalReward(externalReward:Ref<ExternalReward>):Ref<CreateExternalReferralRewardReqBuilder>
			build():Ref<CreateExternalReferralRewardReq>
	}
	export interface CreateExternalReferralRewardResp extends Struct<CreateExternalReferralRewardResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateExternalReferralRewardRespData>
			success():bool
	}
	export interface CreateExternalReferralRewardRespData extends Struct<CreateExternalReferralRewardRespData>{

			id:Ref<string>
	}
	export interface CreateJobRequirementReq extends Struct<CreateJobRequirementReq>{

			jobRequirement:Ref<JobRequirement>
	}
	export interface CreateJobRequirementReqBuilder extends Struct<CreateJobRequirementReqBuilder>{

			userIdType(userIdType:string):Ref<CreateJobRequirementReqBuilder>
			departmentIdType(departmentIdType:string):Ref<CreateJobRequirementReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<CreateJobRequirementReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<CreateJobRequirementReqBuilder>
			employeeTypeIdType(employeeTypeIdType:string):Ref<CreateJobRequirementReqBuilder>
			jobRequirement(jobRequirement:Ref<JobRequirement>):Ref<CreateJobRequirementReqBuilder>
			build():Ref<CreateJobRequirementReq>
	}
	export interface CreateJobRequirementResp extends Struct<CreateJobRequirementResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateJobRequirementRespData>
			success():bool
	}
	export interface CreateJobRequirementRespData extends Struct<CreateJobRequirementRespData>{

			jobRequirement:Ref<JobRequirementDto>
	}
	export interface CreateNoteReq extends Struct<CreateNoteReq>{

			note:Ref<Note>
	}
	export interface CreateNoteReqBuilder extends Struct<CreateNoteReqBuilder>{

			userIdType(userIdType:string):Ref<CreateNoteReqBuilder>
			note(note:Ref<Note>):Ref<CreateNoteReqBuilder>
			build():Ref<CreateNoteReq>
	}
	export interface CreateNoteResp extends Struct<CreateNoteResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateNoteRespData>
			success():bool
	}
	export interface CreateNoteRespData extends Struct<CreateNoteRespData>{

			note:Ref<Note>
	}
	export interface CreateOfferReq extends Struct<CreateOfferReq>{

			offerInfo:Ref<OfferInfo>
	}
	export interface CreateOfferReqBuilder extends Struct<CreateOfferReqBuilder>{

			userIdType(userIdType:string):Ref<CreateOfferReqBuilder>
			departmentIdType(departmentIdType:string):Ref<CreateOfferReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<CreateOfferReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<CreateOfferReqBuilder>
			employeeTypeIdType(employeeTypeIdType:string):Ref<CreateOfferReqBuilder>
			offerInfo(offerInfo:Ref<OfferInfo>):Ref<CreateOfferReqBuilder>
			build():Ref<CreateOfferReq>
	}
	export interface CreateOfferResp extends Struct<CreateOfferResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateOfferRespData>
			success():bool
	}
	export interface CreateOfferRespData extends Struct<CreateOfferRespData>{

			offerId:Ref<string>
			applicationId:Ref<string>
			schemaId:Ref<string>
			offerType:Ref<int>
			basicInfo:Ref<OfferBasicInfo>
			salaryInfo:Ref<OfferSalaryInfo>
			customizedInfoList:Ref<OfferCustomizedInfo>[]
	}
	export interface CreateReferralAccountPathReqBodyBuilder extends Struct<CreateReferralAccountPathReqBodyBuilder>{

			mobile(mobile:Ref<Mobile>):Ref<CreateReferralAccountPathReqBodyBuilder>
			email(email:string):Ref<CreateReferralAccountPathReqBodyBuilder>
			build():Ref<CreateReferralAccountReqBody>
	}
	export interface CreateReferralAccountReq extends Struct<CreateReferralAccountReq>{

			body:Ref<CreateReferralAccountReqBody>
	}
	export interface CreateReferralAccountReqBody extends Struct<CreateReferralAccountReqBody>{

			mobile:Ref<Mobile>
			email:Ref<string>
	}
	export interface CreateReferralAccountReqBodyBuilder extends Struct<CreateReferralAccountReqBodyBuilder>{

			mobile(mobile:Ref<Mobile>):Ref<CreateReferralAccountReqBodyBuilder>
			email(email:string):Ref<CreateReferralAccountReqBodyBuilder>
			build():Ref<CreateReferralAccountReqBody>
	}
	export interface CreateReferralAccountReqBuilder extends Struct<CreateReferralAccountReqBuilder>{

			body(body:Ref<CreateReferralAccountReqBody>):Ref<CreateReferralAccountReqBuilder>
			build():Ref<CreateReferralAccountReq>
	}
	export interface CreateReferralAccountResp extends Struct<CreateReferralAccountResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateReferralAccountRespData>
			success():bool
	}
	export interface CreateReferralAccountRespData extends Struct<CreateReferralAccountRespData>{

			account:Ref<Account>
	}
	export interface CreateTalentExternalInfoPathReqBodyBuilder extends Struct<CreateTalentExternalInfoPathReqBodyBuilder>{

			externalCreateTime(externalCreateTime:string):Ref<CreateTalentExternalInfoPathReqBodyBuilder>
			build():Ref<CreateTalentExternalInfoReqBody>
	}
	export interface CreateTalentExternalInfoReq extends Struct<CreateTalentExternalInfoReq>{

			body:Ref<CreateTalentExternalInfoReqBody>
	}
	export interface CreateTalentExternalInfoReqBody extends Struct<CreateTalentExternalInfoReqBody>{

			externalCreateTime:Ref<string>
	}
	export interface CreateTalentExternalInfoReqBodyBuilder extends Struct<CreateTalentExternalInfoReqBodyBuilder>{

			externalCreateTime(externalCreateTime:string):Ref<CreateTalentExternalInfoReqBodyBuilder>
			build():Ref<CreateTalentExternalInfoReqBody>
	}
	export interface CreateTalentExternalInfoReqBuilder extends Struct<CreateTalentExternalInfoReqBuilder>{

			talentId(talentId:string):Ref<CreateTalentExternalInfoReqBuilder>
			body(body:Ref<CreateTalentExternalInfoReqBody>):Ref<CreateTalentExternalInfoReqBuilder>
			build():Ref<CreateTalentExternalInfoReq>
	}
	export interface CreateTalentExternalInfoResp extends Struct<CreateTalentExternalInfoResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateTalentExternalInfoRespData>
			success():bool
	}
	export interface CreateTalentExternalInfoRespData extends Struct<CreateTalentExternalInfoRespData>{

			externalInfo:Ref<TalentExternalInfo>
	}
	export interface CreateTripartiteAgreementReq extends Struct<CreateTripartiteAgreementReq>{

			tripartiteAgreementInfo:Ref<TripartiteAgreementInfo>
	}
	export interface CreateTripartiteAgreementReqBuilder extends Struct<CreateTripartiteAgreementReqBuilder>{

			tripartiteAgreementInfo(tripartiteAgreementInfo:Ref<TripartiteAgreementInfo>):Ref<CreateTripartiteAgreementReqBuilder>
			build():Ref<CreateTripartiteAgreementReq>
	}
	export interface CreateTripartiteAgreementResp extends Struct<CreateTripartiteAgreementResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateTripartiteAgreementRespData>
			success():bool
	}
	export interface CreateTripartiteAgreementRespData extends Struct<CreateTripartiteAgreementRespData>{

			id:Ref<string>
	}
	export interface CreateWebsiteChannelPathReqBodyBuilder extends Struct<CreateWebsiteChannelPathReqBodyBuilder>{

			channelName(channelName:string):Ref<CreateWebsiteChannelPathReqBodyBuilder>
			build():Ref<CreateWebsiteChannelReqBody>
	}
	export interface CreateWebsiteChannelReq extends Struct<CreateWebsiteChannelReq>{

			body:Ref<CreateWebsiteChannelReqBody>
	}
	export interface CreateWebsiteChannelReqBody extends Struct<CreateWebsiteChannelReqBody>{

			channelName:Ref<string>
	}
	export interface CreateWebsiteChannelReqBodyBuilder extends Struct<CreateWebsiteChannelReqBodyBuilder>{

			channelName(channelName:string):Ref<CreateWebsiteChannelReqBodyBuilder>
			build():Ref<CreateWebsiteChannelReqBody>
	}
	export interface CreateWebsiteChannelReqBuilder extends Struct<CreateWebsiteChannelReqBuilder>{

			websiteId(websiteId:string):Ref<CreateWebsiteChannelReqBuilder>
			body(body:Ref<CreateWebsiteChannelReqBody>):Ref<CreateWebsiteChannelReqBuilder>
			build():Ref<CreateWebsiteChannelReq>
	}
	export interface CreateWebsiteChannelResp extends Struct<CreateWebsiteChannelResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateWebsiteChannelRespData>
			success():bool
	}
	export interface CreateWebsiteChannelRespData extends Struct<CreateWebsiteChannelRespData>{

			id:Ref<string>
			name:Ref<string>
			link:Ref<string>
			code:Ref<string>
	}
	export interface CreateWebsiteSiteUserReq extends Struct<CreateWebsiteSiteUserReq>{

			websiteUser:Ref<WebsiteUser>
	}
	export interface CreateWebsiteSiteUserReqBuilder extends Struct<CreateWebsiteSiteUserReqBuilder>{

			websiteId(websiteId:string):Ref<CreateWebsiteSiteUserReqBuilder>
			websiteUser(websiteUser:Ref<WebsiteUser>):Ref<CreateWebsiteSiteUserReqBuilder>
			build():Ref<CreateWebsiteSiteUserReq>
	}
	export interface CreateWebsiteSiteUserResp extends Struct<CreateWebsiteSiteUserResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateWebsiteSiteUserRespData>
			success():bool
	}
	export interface CreateWebsiteSiteUserRespData extends Struct<CreateWebsiteSiteUserRespData>{

			siteUser:Ref<WebsiteUser>
	}
	//1
	export const CreatorAccountType员工体系:int
	//3
	export const CreatorAccountType系统:int
	export interface DataPermission extends Struct<DataPermission>{

			id:Ref<string>
			name:Ref<I18n>
			selectStatus:Ref<int>
	}
	export interface DataPermissionBuilder extends Struct<DataPermissionBuilder>{

			id(id:string):Ref<DataPermissionBuilder>
			name(name:Ref<I18n>):Ref<DataPermissionBuilder>
			selectStatus(selectStatus:int):Ref<DataPermissionBuilder>
			build():Ref<DataPermission>
	}
	export interface DeactivateReferralAccountReq extends Struct<DeactivateReferralAccountReq>{

	}
	export interface DeactivateReferralAccountReqBuilder extends Struct<DeactivateReferralAccountReqBuilder>{

			referralAccountId(referralAccountId:string):Ref<DeactivateReferralAccountReqBuilder>
			build():Ref<DeactivateReferralAccountReq>
	}
	export interface DeactivateReferralAccountResp extends Struct<DeactivateReferralAccountResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<DeactivateReferralAccountRespData>
			success():bool
	}
	export interface DeactivateReferralAccountRespData extends Struct<DeactivateReferralAccountRespData>{

			account:Ref<Account>
	}
	export interface DegreeFilter extends Struct<DegreeFilter>{

			hideOption:Ref<int>
			degree:string[]
	}
	export interface DegreeFilterBuilder extends Struct<DegreeFilterBuilder>{

			hideOption(hideOption:int):Ref<DegreeFilterBuilder>
			degree(degree:string[]):Ref<DegreeFilterBuilder>
			build():Ref<DegreeFilter>
	}
	export interface DeleteExternalApplicationReq extends Struct<DeleteExternalApplicationReq>{

	}
	export interface DeleteExternalApplicationReqBuilder extends Struct<DeleteExternalApplicationReqBuilder>{

			externalApplicationId(externalApplicationId:string):Ref<DeleteExternalApplicationReqBuilder>
			talentId(talentId:string):Ref<DeleteExternalApplicationReqBuilder>
			build():Ref<DeleteExternalApplicationReq>
	}
	export interface DeleteExternalApplicationResp extends Struct<DeleteExternalApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<DeleteExternalApplicationRespData>
			success():bool
	}
	export interface DeleteExternalApplicationRespData extends Struct<DeleteExternalApplicationRespData>{

			externalApplication:Ref<ExternalApplication>
	}
	export interface DeleteExternalReferralRewardReq extends Struct<DeleteExternalReferralRewardReq>{

	}
	export interface DeleteExternalReferralRewardReqBuilder extends Struct<DeleteExternalReferralRewardReqBuilder>{

			externalReferralRewardId(externalReferralRewardId:string):Ref<DeleteExternalReferralRewardReqBuilder>
			build():Ref<DeleteExternalReferralRewardReq>
	}
	export interface DeleteExternalReferralRewardResp extends Struct<DeleteExternalReferralRewardResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeleteJobRequirementReq extends Struct<DeleteJobRequirementReq>{

	}
	export interface DeleteJobRequirementReqBuilder extends Struct<DeleteJobRequirementReqBuilder>{

			jobRequirementId(jobRequirementId:string):Ref<DeleteJobRequirementReqBuilder>
			build():Ref<DeleteJobRequirementReq>
	}
	export interface DeleteJobRequirementResp extends Struct<DeleteJobRequirementResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeleteNoteReq extends Struct<DeleteNoteReq>{

	}
	export interface DeleteNoteReqBuilder extends Struct<DeleteNoteReqBuilder>{

			noteId(noteId:string):Ref<DeleteNoteReqBuilder>
			build():Ref<DeleteNoteReq>
	}
	export interface DeleteNoteResp extends Struct<DeleteNoteResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeleteTripartiteAgreementReq extends Struct<DeleteTripartiteAgreementReq>{

	}
	export interface DeleteTripartiteAgreementReqBuilder extends Struct<DeleteTripartiteAgreementReqBuilder>{

			tripartiteAgreementId(tripartiteAgreementId:string):Ref<DeleteTripartiteAgreementReqBuilder>
			build():Ref<DeleteTripartiteAgreementReq>
	}
	export interface DeleteTripartiteAgreementResp extends Struct<DeleteTripartiteAgreementResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface DeleteWebsiteChannelReq extends Struct<DeleteWebsiteChannelReq>{

	}
	export interface DeleteWebsiteChannelReqBuilder extends Struct<DeleteWebsiteChannelReqBuilder>{

			websiteId(websiteId:string):Ref<DeleteWebsiteChannelReqBuilder>
			channelId(channelId:string):Ref<DeleteWebsiteChannelReqBuilder>
			build():Ref<DeleteWebsiteChannelReq>
	}
	export interface DeleteWebsiteChannelResp extends Struct<DeleteWebsiteChannelResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	//2
	export const DeliveryTypeCandidateDelivery:int
	//1
	export const DeliveryTypeHRVisit:int
	//4
	export const DeliveryTypeOthers:int
	//3
	export const DeliveryTypeTalentRecommend:int
	//2
	export const DeliveryTypeUpdateExternalApplicationCandidateDelivery:int
	//1
	export const DeliveryTypeUpdateExternalApplicationHRVisit:int
	//4
	export const DeliveryTypeUpdateExternalApplicationOthers:int
	//3
	export const DeliveryTypeUpdateExternalApplicationTalentRecommend:int
	export interface Department extends Struct<Department>{

			id:Ref<string>
			name:Ref<string>
			enName:Ref<string>
	}
	export interface DepartmentBuilder extends Struct<DepartmentBuilder>{

			id(id:string):Ref<DepartmentBuilder>
			name(name:string):Ref<DepartmentBuilder>
			enName(enName:string):Ref<DepartmentBuilder>
			build():Ref<Department>
	}
	export interface DepartmentId extends Struct<DepartmentId>{

			departmentId:Ref<string>
			openDepartmentId:Ref<string>
	}
	export interface DepartmentIdBuilder extends Struct<DepartmentIdBuilder>{

			departmentId(departmentId:string):Ref<DepartmentIdBuilder>
			openDepartmentId(openDepartmentId:string):Ref<DepartmentIdBuilder>
			build():Ref<DepartmentId>
	}
	//"department_id"
	export const DepartmentIdTypeCombinedCreateJobDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeCombinedCreateJobOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeCombinedUpdateJobDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeCombinedUpdateJobOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeCreateJobRequirementDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeCreateJobRequirementOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeCreateOfferDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeCreateOfferOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeGetByApplicationEmployeeDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeGetByApplicationEmployeeOpenDepartmentId:string
	//"people_admin_department_id"
	export const DepartmentIdTypeGetByApplicationEmployeePeopleAdminDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeGetEmployeeDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeGetEmployeeOpenDepartmentId:string
	//"people_admin_department_id"
	export const DepartmentIdTypeGetEmployeePeopleAdminDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeGetJobDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeGetJobOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeGetOfferDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeGetOfferOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeGetReferralWebsiteJobPostDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeGetReferralWebsiteJobPostOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeGetWebsiteJobPostDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeGetWebsiteJobPostOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeListByIdJobRequirementDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeListByIdJobRequirementOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeListJobDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeListJobOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeListJobRequirementDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeListJobRequirementOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeListReferralWebsiteJobPostDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeListReferralWebsiteJobPostOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeListWebsiteJobPostDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeListWebsiteJobPostOpenDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypePatchEmployeeDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypePatchEmployeeOpenDepartmentId:string
	//"people_admin_department_id"
	export const DepartmentIdTypePatchEmployeePeopleAdminDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeSearchJobPublishRecordDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeSearchJobPublishRecordOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeSearchWebsiteJobPostDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeSearchWebsiteJobPostOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeTransferOnboardApplicationDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeTransferOnboardApplicationOpenDepartmentId:string
	//"people_admin_department_id"
	export const DepartmentIdTypeTransferOnboardApplicationPeopleAdminDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeUpdateJobRequirementDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeUpdateJobRequirementOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeUpdateOfferDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeUpdateOfferOpenDepartmentId:string
	export interface DiData extends Struct<DiData>{

			value:Ref<string>
			objectAttribute:Ref<ObjectAttribute>
	}
	export interface DiDataBuilder extends Struct<DiDataBuilder>{

			value(value:string):Ref<DiDataBuilder>
			objectAttribute(objectAttribute:Ref<ObjectAttribute>):Ref<DiDataBuilder>
			build():Ref<DiData>
	}
	export interface DiInfo extends Struct<DiInfo>{

			id:Ref<string>
			applicationId:Ref<string>
			talentId:Ref<string>
			sourceType:Ref<int>
			createTime:Ref<string>
			updateTime:Ref<string>
			diData:Ref<DiData>[]
	}
	export interface DiInfoBuilder extends Struct<DiInfoBuilder>{

			id(id:string):Ref<DiInfoBuilder>
			applicationId(applicationId:string):Ref<DiInfoBuilder>
			talentId(talentId:string):Ref<DiInfoBuilder>
			sourceType(sourceType:int):Ref<DiInfoBuilder>
			createTime(createTime:string):Ref<DiInfoBuilder>
			updateTime(updateTime:string):Ref<DiInfoBuilder>
			diData(diData:Ref<DiData>[]):Ref<DiInfoBuilder>
			build():Ref<DiInfo>
	}
	export interface DimensionAbility extends Struct<DimensionAbility>{

			id:Ref<string>
			name:Ref<I18n>
			description:Ref<I18n>
	}
	export interface DimensionAbilityBuilder extends Struct<DimensionAbilityBuilder>{

			id(id:string):Ref<DimensionAbilityBuilder>
			name(name:Ref<I18n>):Ref<DimensionAbilityBuilder>
			description(description:Ref<I18n>):Ref<DimensionAbilityBuilder>
			build():Ref<DimensionAbility>
	}
	//3
	export const DisplayProgressCanceled:int
	//5
	export const DisplayProgressCompleted:int
	//6
	export const DisplayProgressExpired:int
	//2
	export const DisplayProgressOnGoing:int
	//4
	export const DisplayProgressSuspended:int
	//3
	export const DisplayProgressUpdateJobRequirementCanceled:int
	//5
	export const DisplayProgressUpdateJobRequirementCompleted:int
	//6
	export const DisplayProgressUpdateJobRequirementExpired:int
	//2
	export const DisplayProgressUpdateJobRequirementOnGoing:int
	//4
	export const DisplayProgressUpdateJobRequirementSuspended:int
	//1
	export const DisplayProgressUpdateJobRequirementWaitingStart:int
	//1
	export const DisplayProgressWaitingStart:int
	export interface Dummy extends Struct<Dummy>{

			id:Ref<string>
	}
	export interface DummyBuilder extends Struct<DummyBuilder>{

			id(id:string):Ref<DummyBuilder>
			build():Ref<Dummy>
	}
	export interface EcoAccountCustomField extends Struct<EcoAccountCustomField>{

			scope:Ref<int>
			customFieldList:Ref<EcoAccountCustomFieldData>[]
	}
	export interface EcoAccountCustomFieldBuilder extends Struct<EcoAccountCustomFieldBuilder>{

			scope(scope:int):Ref<EcoAccountCustomFieldBuilder>
			customFieldList(customFieldList:Ref<EcoAccountCustomFieldData>[]):Ref<EcoAccountCustomFieldBuilder>
			build():Ref<EcoAccountCustomField>
	}
	export interface EcoAccountCustomFieldData extends Struct<EcoAccountCustomFieldData>{

			key:Ref<string>
			name:Ref<I18n>
			isRequired:Ref<bool>
			description:Ref<I18n>
	}
	export interface EcoAccountCustomFieldDataBuilder extends Struct<EcoAccountCustomFieldDataBuilder>{

			key(key:string):Ref<EcoAccountCustomFieldDataBuilder>
			name(name:Ref<I18n>):Ref<EcoAccountCustomFieldDataBuilder>
			isRequired(isRequired:bool):Ref<EcoAccountCustomFieldDataBuilder>
			description(description:Ref<I18n>):Ref<EcoAccountCustomFieldDataBuilder>
			build():Ref<EcoAccountCustomFieldData>
	}
	export interface EcoAccountCustomFieldEventData extends Struct<EcoAccountCustomFieldEventData>{

			key:Ref<string>
			value:Ref<string>
	}
	export interface EcoAccountCustomFieldEventDataBuilder extends Struct<EcoAccountCustomFieldEventDataBuilder>{

			key(key:string):Ref<EcoAccountCustomFieldEventDataBuilder>
			value(value:string):Ref<EcoAccountCustomFieldEventDataBuilder>
			build():Ref<EcoAccountCustomFieldEventData>
	}
	export interface EcoBackgroundCheckCreateEventCandidateInfo extends Struct<EcoBackgroundCheckCreateEventCandidateInfo>{

			name:Ref<string>
			mobile:Ref<EcoBackgroundCheckCreateEventMobile>
			email:Ref<string>
			firstName:Ref<string>
			lastName:Ref<string>
	}
	export interface EcoBackgroundCheckCreateEventCandidateInfoBuilder extends Struct<EcoBackgroundCheckCreateEventCandidateInfoBuilder>{

			name(name:string):Ref<EcoBackgroundCheckCreateEventCandidateInfoBuilder>
			mobile(mobile:Ref<EcoBackgroundCheckCreateEventMobile>):Ref<EcoBackgroundCheckCreateEventCandidateInfoBuilder>
			email(email:string):Ref<EcoBackgroundCheckCreateEventCandidateInfoBuilder>
			firstName(firstName:string):Ref<EcoBackgroundCheckCreateEventCandidateInfoBuilder>
			lastName(lastName:string):Ref<EcoBackgroundCheckCreateEventCandidateInfoBuilder>
			build():Ref<EcoBackgroundCheckCreateEventCandidateInfo>
	}
	export interface EcoBackgroundCheckCreateEventContactInfo extends Struct<EcoBackgroundCheckCreateEventContactInfo>{

			name:Ref<string>
			mobile:Ref<EcoBackgroundCheckCreateEventMobile>
			email:Ref<string>
	}
	export interface EcoBackgroundCheckCreateEventContactInfoBuilder extends Struct<EcoBackgroundCheckCreateEventContactInfoBuilder>{

			name(name:string):Ref<EcoBackgroundCheckCreateEventContactInfoBuilder>
			mobile(mobile:Ref<EcoBackgroundCheckCreateEventMobile>):Ref<EcoBackgroundCheckCreateEventContactInfoBuilder>
			email(email:string):Ref<EcoBackgroundCheckCreateEventContactInfoBuilder>
			build():Ref<EcoBackgroundCheckCreateEventContactInfo>
	}
	export interface EcoBackgroundCheckCreateEventCustomKv extends Struct<EcoBackgroundCheckCreateEventCustomKv>{

			key:Ref<string>
			value:Ref<string>
	}
	export interface EcoBackgroundCheckCreateEventCustomKvBuilder extends Struct<EcoBackgroundCheckCreateEventCustomKvBuilder>{

			key(key:string):Ref<EcoBackgroundCheckCreateEventCustomKvBuilder>
			value(value:string):Ref<EcoBackgroundCheckCreateEventCustomKvBuilder>
			build():Ref<EcoBackgroundCheckCreateEventCustomKv>
	}
	export interface EcoBackgroundCheckCreateEventMobile extends Struct<EcoBackgroundCheckCreateEventMobile>{

			code:Ref<string>
			number:Ref<string>
	}
	export interface EcoBackgroundCheckCreateEventMobileBuilder extends Struct<EcoBackgroundCheckCreateEventMobileBuilder>{

			code(code:string):Ref<EcoBackgroundCheckCreateEventMobileBuilder>
			number(number:string):Ref<EcoBackgroundCheckCreateEventMobileBuilder>
			build():Ref<EcoBackgroundCheckCreateEventMobile>
	}
	export interface EcoBackgroundCheckCustomField extends Struct<EcoBackgroundCheckCustomField>{

			accountId:Ref<string>
			customFieldList:Ref<EcoBackgroundCheckCustomFieldData>[]
	}
	export interface EcoBackgroundCheckCustomFieldBuilder extends Struct<EcoBackgroundCheckCustomFieldBuilder>{

			accountId(accountId:string):Ref<EcoBackgroundCheckCustomFieldBuilder>
			customFieldList(customFieldList:Ref<EcoBackgroundCheckCustomFieldData>[]):Ref<EcoBackgroundCheckCustomFieldBuilder>
			build():Ref<EcoBackgroundCheckCustomField>
	}
	export interface EcoBackgroundCheckCustomFieldData extends Struct<EcoBackgroundCheckCustomFieldData>{

			type:Ref<string>
			key:Ref<string>
			name:Ref<I18n>
			isRequired:Ref<bool>
			description:Ref<I18n>
			options:Ref<EcoBackgroundCheckCustomFieldDataOption>[]
	}
	export interface EcoBackgroundCheckCustomFieldDataBuilder extends Struct<EcoBackgroundCheckCustomFieldDataBuilder>{

			type(type_:string):Ref<EcoBackgroundCheckCustomFieldDataBuilder>
			key(key:string):Ref<EcoBackgroundCheckCustomFieldDataBuilder>
			name(name:Ref<I18n>):Ref<EcoBackgroundCheckCustomFieldDataBuilder>
			isRequired(isRequired:bool):Ref<EcoBackgroundCheckCustomFieldDataBuilder>
			description(description:Ref<I18n>):Ref<EcoBackgroundCheckCustomFieldDataBuilder>
			options(options:Ref<EcoBackgroundCheckCustomFieldDataOption>[]):Ref<EcoBackgroundCheckCustomFieldDataBuilder>
			build():Ref<EcoBackgroundCheckCustomFieldData>
	}
	export interface EcoBackgroundCheckCustomFieldDataOption extends Struct<EcoBackgroundCheckCustomFieldDataOption>{

			key:Ref<string>
			name:Ref<I18n>
	}
	export interface EcoBackgroundCheckCustomFieldDataOptionBuilder extends Struct<EcoBackgroundCheckCustomFieldDataOptionBuilder>{

			key(key:string):Ref<EcoBackgroundCheckCustomFieldDataOptionBuilder>
			name(name:Ref<I18n>):Ref<EcoBackgroundCheckCustomFieldDataOptionBuilder>
			build():Ref<EcoBackgroundCheckCustomFieldDataOption>
	}
	export interface EcoBackgroundCheckPackage extends Struct<EcoBackgroundCheckPackage>{

			accountId:Ref<string>
			packageList:Ref<EcoBackgroundCheckPackageData>[]
			additionalItemList:Ref<EcoBackgroundCheckPackageAdditionalItem>[]
	}
	export interface EcoBackgroundCheckPackageAdditionalItem extends Struct<EcoBackgroundCheckPackageAdditionalItem>{

			id:Ref<string>
			name:Ref<string>
			description:Ref<string>
	}
	export interface EcoBackgroundCheckPackageAdditionalItemBuilder extends Struct<EcoBackgroundCheckPackageAdditionalItemBuilder>{

			id(id:string):Ref<EcoBackgroundCheckPackageAdditionalItemBuilder>
			name(name:string):Ref<EcoBackgroundCheckPackageAdditionalItemBuilder>
			description(description:string):Ref<EcoBackgroundCheckPackageAdditionalItemBuilder>
			build():Ref<EcoBackgroundCheckPackageAdditionalItem>
	}
	export interface EcoBackgroundCheckPackageBuilder extends Struct<EcoBackgroundCheckPackageBuilder>{

			accountId(accountId:string):Ref<EcoBackgroundCheckPackageBuilder>
			packageList(packageList:Ref<EcoBackgroundCheckPackageData>[]):Ref<EcoBackgroundCheckPackageBuilder>
			additionalItemList(additionalItemList:Ref<EcoBackgroundCheckPackageAdditionalItem>[]):Ref<EcoBackgroundCheckPackageBuilder>
			build():Ref<EcoBackgroundCheckPackage>
	}
	export interface EcoBackgroundCheckPackageData extends Struct<EcoBackgroundCheckPackageData>{

			id:Ref<string>
			name:Ref<string>
			description:Ref<string>
	}
	export interface EcoBackgroundCheckPackageDataBuilder extends Struct<EcoBackgroundCheckPackageDataBuilder>{

			id(id:string):Ref<EcoBackgroundCheckPackageDataBuilder>
			name(name:string):Ref<EcoBackgroundCheckPackageDataBuilder>
			description(description:string):Ref<EcoBackgroundCheckPackageDataBuilder>
			build():Ref<EcoBackgroundCheckPackageData>
	}
	export interface EcoBackgroundCheckReportFile extends Struct<EcoBackgroundCheckReportFile>{

			reportName:Ref<string>
			reportUrl:Ref<string>
			reportUrlType:Ref<int>
	}
	export interface EcoBackgroundCheckReportFileBuilder extends Struct<EcoBackgroundCheckReportFileBuilder>{

			reportName(reportName:string):Ref<EcoBackgroundCheckReportFileBuilder>
			reportUrl(reportUrl:string):Ref<EcoBackgroundCheckReportFileBuilder>
			reportUrlType(reportUrlType:int):Ref<EcoBackgroundCheckReportFileBuilder>
			build():Ref<EcoBackgroundCheckReportFile>
	}
	export interface EcoExamCreateEventCandidateInfo extends Struct<EcoExamCreateEventCandidateInfo>{

			name:Ref<string>
			mobile:Ref<EcoExamCreateEventMobile>
			email:Ref<string>
	}
	export interface EcoExamCreateEventCandidateInfoBuilder extends Struct<EcoExamCreateEventCandidateInfoBuilder>{

			name(name:string):Ref<EcoExamCreateEventCandidateInfoBuilder>
			mobile(mobile:Ref<EcoExamCreateEventMobile>):Ref<EcoExamCreateEventCandidateInfoBuilder>
			email(email:string):Ref<EcoExamCreateEventCandidateInfoBuilder>
			build():Ref<EcoExamCreateEventCandidateInfo>
	}
	export interface EcoExamCreateEventMobile extends Struct<EcoExamCreateEventMobile>{

			code:Ref<string>
			number:Ref<string>
	}
	export interface EcoExamCreateEventMobileBuilder extends Struct<EcoExamCreateEventMobileBuilder>{

			code(code:string):Ref<EcoExamCreateEventMobileBuilder>
			number(number:string):Ref<EcoExamCreateEventMobileBuilder>
			build():Ref<EcoExamCreateEventMobile>
	}
	export interface EcoExamLoginInfo extends Struct<EcoExamLoginInfo>{

			examUrl:Ref<string>
			username:Ref<string>
			password:Ref<string>
	}
	export interface EcoExamLoginInfoBuilder extends Struct<EcoExamLoginInfoBuilder>{

			examUrl(examUrl:string):Ref<EcoExamLoginInfoBuilder>
			username(username:string):Ref<EcoExamLoginInfoBuilder>
			password(password:string):Ref<EcoExamLoginInfoBuilder>
			build():Ref<EcoExamLoginInfo>
	}
	export interface EcoExamPaper extends Struct<EcoExamPaper>{

			accountId:Ref<string>
			paperList:Ref<EcoExamPaperData>[]
	}
	export interface EcoExamPaperBuilder extends Struct<EcoExamPaperBuilder>{

			accountId(accountId:string):Ref<EcoExamPaperBuilder>
			paperList(paperList:Ref<EcoExamPaperData>[]):Ref<EcoExamPaperBuilder>
			build():Ref<EcoExamPaper>
	}
	export interface EcoExamPaperData extends Struct<EcoExamPaperData>{

			id:Ref<string>
			name:Ref<string>
			duration:Ref<int>
			questionCount:Ref<int>
			startTime:Ref<string>
			endTime:Ref<string>
	}
	export interface EcoExamPaperDataBuilder extends Struct<EcoExamPaperDataBuilder>{

			id(id:string):Ref<EcoExamPaperDataBuilder>
			name(name:string):Ref<EcoExamPaperDataBuilder>
			duration(duration:int):Ref<EcoExamPaperDataBuilder>
			questionCount(questionCount:int):Ref<EcoExamPaperDataBuilder>
			startTime(startTime:string):Ref<EcoExamPaperDataBuilder>
			endTime(endTime:string):Ref<EcoExamPaperDataBuilder>
			build():Ref<EcoExamPaperData>
	}
	export interface EcoExamResult extends Struct<EcoExamResult>{

			result:Ref<string>
			resultTime:Ref<string>
			reportList:Ref<EcoExamResultReport>[]
			detailList:Ref<EcoExamResultDetail>[]
	}
	export interface EcoExamResultBuilder extends Struct<EcoExamResultBuilder>{

			result(result:string):Ref<EcoExamResultBuilder>
			resultTime(resultTime:string):Ref<EcoExamResultBuilder>
			reportList(reportList:Ref<EcoExamResultReport>[]):Ref<EcoExamResultBuilder>
			detailList(detailList:Ref<EcoExamResultDetail>[]):Ref<EcoExamResultBuilder>
			build():Ref<EcoExamResult>
	}
	export interface EcoExamResultDetail extends Struct<EcoExamResultDetail>{

			id:Ref<string>
			name:Ref<string>
			result:Ref<string>
	}
	export interface EcoExamResultDetailBuilder extends Struct<EcoExamResultDetailBuilder>{

			id(id:string):Ref<EcoExamResultDetailBuilder>
			name(name:string):Ref<EcoExamResultDetailBuilder>
			result(result:string):Ref<EcoExamResultDetailBuilder>
			build():Ref<EcoExamResultDetail>
	}
	export interface EcoExamResultReport extends Struct<EcoExamResultReport>{

			name:Ref<string>
			url:Ref<string>
			answerTime:Ref<string>
	}
	export interface EcoExamResultReportBuilder extends Struct<EcoExamResultReportBuilder>{

			name(name:string):Ref<EcoExamResultReportBuilder>
			url(url:string):Ref<EcoExamResultReportBuilder>
			answerTime(answerTime:string):Ref<EcoExamResultReportBuilder>
			build():Ref<EcoExamResultReport>
	}
	export interface EducationInfo extends Struct<EducationInfo>{

			degree:Ref<int>
			endTime:Ref<int>
			fieldOfStudy:Ref<string>
			school:Ref<string>
			startTime:Ref<int>
			educationType:Ref<int>
			academicRanking:Ref<int>
	}
	export interface EducationInfoBuilder extends Struct<EducationInfoBuilder>{

			degree(degree:int):Ref<EducationInfoBuilder>
			endTime(endTime:int):Ref<EducationInfoBuilder>
			fieldOfStudy(fieldOfStudy:string):Ref<EducationInfoBuilder>
			school(school:string):Ref<EducationInfoBuilder>
			startTime(startTime:int):Ref<EducationInfoBuilder>
			educationType(educationType:int):Ref<EducationInfoBuilder>
			academicRanking(academicRanking:int):Ref<EducationInfoBuilder>
			build():Ref<EducationInfo>
	}
	export interface EhrImportTask extends Struct<EhrImportTask>{

			failReason:Ref<string>
			redirectUrl:Ref<string>
			state:Ref<int>
	}
	export interface EhrImportTaskBuilder extends Struct<EhrImportTaskBuilder>{

			failReason(failReason:string):Ref<EhrImportTaskBuilder>
			redirectUrl(redirectUrl:string):Ref<EhrImportTaskBuilder>
			state(state:int):Ref<EhrImportTaskBuilder>
			build():Ref<EhrImportTask>
	}
	export interface Employee extends Struct<Employee>{

			id:Ref<string>
			applicationId:Ref<string>
			onboardStatus:Ref<int>
			conversionStatus:Ref<int>
			onboardTime:Ref<int>
			expectedConversionTime:Ref<int>
			actualConversionTime:Ref<int>
			overboardTime:Ref<int>
			overboardNote:Ref<string>
			onboardCityCode:Ref<string>
			department:Ref<string>
			leader:Ref<string>
			sequence:Ref<string>
			level:Ref<string>
			employeeType:Ref<string>
			jobRequirementId:Ref<string>
	}
	export interface EmployeeBuilder extends Struct<EmployeeBuilder>{

			id(id:string):Ref<EmployeeBuilder>
			applicationId(applicationId:string):Ref<EmployeeBuilder>
			onboardStatus(onboardStatus:int):Ref<EmployeeBuilder>
			conversionStatus(conversionStatus:int):Ref<EmployeeBuilder>
			onboardTime(onboardTime:int):Ref<EmployeeBuilder>
			expectedConversionTime(expectedConversionTime:int):Ref<EmployeeBuilder>
			actualConversionTime(actualConversionTime:int):Ref<EmployeeBuilder>
			overboardTime(overboardTime:int):Ref<EmployeeBuilder>
			overboardNote(overboardNote:string):Ref<EmployeeBuilder>
			onboardCityCode(onboardCityCode:string):Ref<EmployeeBuilder>
			department(department:string):Ref<EmployeeBuilder>
			leader(leader:string):Ref<EmployeeBuilder>
			sequence(sequence:string):Ref<EmployeeBuilder>
			level(level:string):Ref<EmployeeBuilder>
			employeeType(employeeType:string):Ref<EmployeeBuilder>
			jobRequirementId(jobRequirementId:string):Ref<EmployeeBuilder>
			build():Ref<Employee>
	}
	export interface EmployeeConversionInfo extends Struct<EmployeeConversionInfo>{

			actualConversionTime:Ref<int>
	}
	export interface EmployeeConversionInfoBuilder extends Struct<EmployeeConversionInfoBuilder>{

			actualConversionTime(actualConversionTime:int):Ref<EmployeeConversionInfoBuilder>
			build():Ref<EmployeeConversionInfo>
	}
	export interface EmployeeOverboardInfo extends Struct<EmployeeOverboardInfo>{

			actualOverboardTime:Ref<int>
			overboardNote:Ref<string>
	}
	export interface EmployeeOverboardInfoBuilder extends Struct<EmployeeOverboardInfoBuilder>{

			actualOverboardTime(actualOverboardTime:int):Ref<EmployeeOverboardInfoBuilder>
			overboardNote(overboardNote:string):Ref<EmployeeOverboardInfoBuilder>
			build():Ref<EmployeeOverboardInfo>
	}
	//"employee_type_enum_id"
	export const EmployeeTypeIdTypeCreateJobRequirementEmployeeTypeEnumId:string
	//"people_admin_employee_type_id"
	export const EmployeeTypeIdTypeCreateJobRequirementPeopleAdminEmployeeTypeId:string
	//"employee_type_enum_id"
	export const EmployeeTypeIdTypeCreateOfferEmployeeTypeEnumId:string
	//"people_admin_employee_type_id"
	export const EmployeeTypeIdTypeCreateOfferPeopleAdminEmployeeTypeId:string
	//"employee_type_enum_id"
	export const EmployeeTypeIdTypeEmployeeTypeEnumId:string
	//"employee_type_enum_id"
	export const EmployeeTypeIdTypeGetByApplicationEmployeeEmployeeTypeEnumId:string
	//"people_admin_employee_type_id"
	export const EmployeeTypeIdTypeGetByApplicationEmployeePeopleAdminEmployeeTypeId:string
	//"employee_type_enum_id"
	export const EmployeeTypeIdTypeGetEmployeeEmployeeTypeEnumId:string
	//"people_admin_employee_type_id"
	export const EmployeeTypeIdTypeGetEmployeePeopleAdminEmployeeTypeId:string
	//"employee_type_enum_id"
	export const EmployeeTypeIdTypeGetOfferEmployeeTypeEnumId:string
	//"people_admin_employee_type_id"
	export const EmployeeTypeIdTypeGetOfferPeopleAdminEmployeeTypeId:string
	//"employee_type_enum_id"
	export const EmployeeTypeIdTypeListByIdJobRequirementEmployeeTypeEnumId:string
	//"people_admin_employee_type_id"
	export const EmployeeTypeIdTypeListByIdJobRequirementPeopleAdminEmployeeTypeId:string
	//"employee_type_enum_id"
	export const EmployeeTypeIdTypeListJobRequirementEmployeeTypeEnumId:string
	//"people_admin_employee_type_id"
	export const EmployeeTypeIdTypeListJobRequirementPeopleAdminEmployeeTypeId:string
	//"employee_type_enum_id"
	export const EmployeeTypeIdTypeListOfferEmployeeTypeEnumId:string
	//"people_admin_employee_type_id"
	export const EmployeeTypeIdTypeListOfferPeopleAdminEmployeeTypeId:string
	//"employee_type_enum_id"
	export const EmployeeTypeIdTypePatchEmployeeEmployeeTypeEnumId:string
	//"people_admin_employee_type_id"
	export const EmployeeTypeIdTypePatchEmployeePeopleAdminEmployeeTypeId:string
	//"people_admin_employee_type_id"
	export const EmployeeTypeIdTypePeopleAdminEmployeeTypeId:string
	//"employee_type_enum_id"
	export const EmployeeTypeIdTypeTransferOnboardApplicationEmployeeTypeEnumId:string
	//"people_admin_employee_type_id"
	export const EmployeeTypeIdTypeTransferOnboardApplicationPeopleAdminEmployeeTypeId:string
	//"employee_type_enum_id"
	export const EmployeeTypeIdTypeUpdateJobRequirementEmployeeTypeEnumId:string
	//"people_admin_employee_type_id"
	export const EmployeeTypeIdTypeUpdateJobRequirementPeopleAdminEmployeeTypeId:string
	//"employee_type_enum_id"
	export const EmployeeTypeIdTypeUpdateOfferEmployeeTypeEnumId:string
	//"people_admin_employee_type_id"
	export const EmployeeTypeIdTypeUpdateOfferPeopleAdminEmployeeTypeId:string
	export interface EntityInfo extends Struct<EntityInfo>{

			code:Ref<string>
			name:Ref<I18n>
	}
	export interface EntityInfoBuilder extends Struct<EntityInfoBuilder>{

			code(code:string):Ref<EntityInfoBuilder>
			name(name:Ref<I18n>):Ref<EntityInfoBuilder>
			build():Ref<EntityInfo>
	}
	export interface Evaluation extends Struct<Evaluation>{

			id:Ref<string>
			applicationId:Ref<string>
			stageId:Ref<string>
			creatorId:Ref<string>
			evaluatorId:Ref<string>
			commitStatus:Ref<int>
			conclusion:Ref<int>
			content:Ref<string>
			createTime:Ref<string>
			updateTime:Ref<string>
	}
	export interface EvaluationBuilder extends Struct<EvaluationBuilder>{

			id(id:string):Ref<EvaluationBuilder>
			applicationId(applicationId:string):Ref<EvaluationBuilder>
			stageId(stageId:string):Ref<EvaluationBuilder>
			creatorId(creatorId:string):Ref<EvaluationBuilder>
			evaluatorId(evaluatorId:string):Ref<EvaluationBuilder>
			commitStatus(commitStatus:int):Ref<EvaluationBuilder>
			conclusion(conclusion:int):Ref<EvaluationBuilder>
			content(content:string):Ref<EvaluationBuilder>
			createTime(createTime:string):Ref<EvaluationBuilder>
			updateTime(updateTime:string):Ref<EvaluationBuilder>
			build():Ref<Evaluation>
	}
	export interface EvaluationTask extends Struct<EvaluationTask>{

			id:Ref<string>
			jobId:Ref<string>
			talentId:Ref<string>
			applicationId:Ref<string>
			activityStatus:Ref<int>
	}
	export interface EvaluationTaskBuilder extends Struct<EvaluationTaskBuilder>{

			id(id:string):Ref<EvaluationTaskBuilder>
			jobId(jobId:string):Ref<EvaluationTaskBuilder>
			talentId(talentId:string):Ref<EvaluationTaskBuilder>
			applicationId(applicationId:string):Ref<EvaluationTaskBuilder>
			activityStatus(activityStatus:int):Ref<EvaluationTaskBuilder>
			build():Ref<EvaluationTask>
	}
	export interface ExamMarkingTask extends Struct<ExamMarkingTask>{

			id:Ref<string>
			jobId:Ref<string>
			talentId:Ref<string>
			applicationId:Ref<string>
			activityStatus:Ref<int>
	}
	export interface ExamMarkingTaskBuilder extends Struct<ExamMarkingTaskBuilder>{

			id(id:string):Ref<ExamMarkingTaskBuilder>
			jobId(jobId:string):Ref<ExamMarkingTaskBuilder>
			talentId(talentId:string):Ref<ExamMarkingTaskBuilder>
			applicationId(applicationId:string):Ref<ExamMarkingTaskBuilder>
			activityStatus(activityStatus:int):Ref<ExamMarkingTaskBuilder>
			build():Ref<ExamMarkingTask>
	}
	//6
	export const ExperienceCombinedUpdateJobFiveToSevenYear:int
	//2
	export const ExperienceCombinedUpdateJobGraduate:int
	//1
	export const ExperienceCombinedUpdateJobNoLimit:int
	//4
	export const ExperienceCombinedUpdateJobOneToThreeYear:int
	//8
	export const ExperienceCombinedUpdateJobOverTenYear:int
	//7
	export const ExperienceCombinedUpdateJobSevenToTenYear:int
	//5
	export const ExperienceCombinedUpdateJobThreeToFiveYear:int
	//3
	export const ExperienceCombinedUpdateJobUnderOneYear:int
	//6
	export const ExperienceFiveToSevenYear:int
	//2
	export const ExperienceGraduate:int
	//1
	export const ExperienceNoLimit:int
	//4
	export const ExperienceOneToThreeYear:int
	//8
	export const ExperienceOverTenYear:int
	//7
	export const ExperienceSevenToTenYear:int
	//5
	export const ExperienceThreeToFiveYear:int
	//3
	export const ExperienceUnderOneYear:int
	export interface ExternalApplication extends Struct<ExternalApplication>{

			id:Ref<string>
			externalId:Ref<string>
			jobRecruitmentType:Ref<int>
			jobTitle:Ref<string>
			resumeSource:Ref<string>
			stage:Ref<string>
			talentId:Ref<string>
			terminationReason:Ref<string>
			deliveryType:Ref<int>
			modifyTime:Ref<int>
			createTime:Ref<int>
			terminationType:Ref<string>
	}
	export interface ExternalApplicationBuilder extends Struct<ExternalApplicationBuilder>{

			id(id:string):Ref<ExternalApplicationBuilder>
			externalId(externalId:string):Ref<ExternalApplicationBuilder>
			jobRecruitmentType(jobRecruitmentType:int):Ref<ExternalApplicationBuilder>
			jobTitle(jobTitle:string):Ref<ExternalApplicationBuilder>
			resumeSource(resumeSource:string):Ref<ExternalApplicationBuilder>
			stage(stage:string):Ref<ExternalApplicationBuilder>
			talentId(talentId:string):Ref<ExternalApplicationBuilder>
			terminationReason(terminationReason:string):Ref<ExternalApplicationBuilder>
			deliveryType(deliveryType:int):Ref<ExternalApplicationBuilder>
			modifyTime(modifyTime:int):Ref<ExternalApplicationBuilder>
			createTime(createTime:int):Ref<ExternalApplicationBuilder>
			terminationType(terminationType:string):Ref<ExternalApplicationBuilder>
			build():Ref<ExternalApplication>
	}
	export interface ExternalBackgroundCheck extends Struct<ExternalBackgroundCheck>{

			id:Ref<string>
			externalId:Ref<string>
			externalApplicationId:Ref<string>
			date:Ref<int>
			name:Ref<string>
			result:Ref<string>
			attachmentIdList:string[]
			attachmentList:Ref<ExternalBackgroundCheckAttachment>[]
	}
	export interface ExternalBackgroundCheckAttachment extends Struct<ExternalBackgroundCheckAttachment>{

			id:Ref<string>
			name:Ref<string>
			size:Ref<int>
	}
	export interface ExternalBackgroundCheckAttachmentBuilder extends Struct<ExternalBackgroundCheckAttachmentBuilder>{

			id(id:string):Ref<ExternalBackgroundCheckAttachmentBuilder>
			name(name:string):Ref<ExternalBackgroundCheckAttachmentBuilder>
			size(size:int):Ref<ExternalBackgroundCheckAttachmentBuilder>
			build():Ref<ExternalBackgroundCheckAttachment>
	}
	export interface ExternalBackgroundCheckBuilder extends Struct<ExternalBackgroundCheckBuilder>{

			id(id:string):Ref<ExternalBackgroundCheckBuilder>
			externalId(externalId:string):Ref<ExternalBackgroundCheckBuilder>
			externalApplicationId(externalApplicationId:string):Ref<ExternalBackgroundCheckBuilder>
			date(date:int):Ref<ExternalBackgroundCheckBuilder>
			name(name:string):Ref<ExternalBackgroundCheckBuilder>
			result(result:string):Ref<ExternalBackgroundCheckBuilder>
			attachmentIdList(attachmentIdList:string[]):Ref<ExternalBackgroundCheckBuilder>
			attachmentList(attachmentList:Ref<ExternalBackgroundCheckAttachment>[]):Ref<ExternalBackgroundCheckBuilder>
			build():Ref<ExternalBackgroundCheck>
	}
	export interface ExternalGrantRoleInfo extends Struct<ExternalGrantRoleInfo>{

			roleId:Ref<string>
	}
	export interface ExternalGrantRoleInfoBuilder extends Struct<ExternalGrantRoleInfoBuilder>{

			roleId(roleId:string):Ref<ExternalGrantRoleInfoBuilder>
			build():Ref<ExternalGrantRoleInfo>
	}
	export interface ExternalInterview extends Struct<ExternalInterview>{

			externalId:Ref<string>
			externalApplicationId:Ref<string>
			id:Ref<string>
			participateStatus:Ref<int>
			beginTime:Ref<int>
			endTime:Ref<int>
	}
	export interface ExternalInterviewAssessment extends Struct<ExternalInterviewAssessment>{

			id:Ref<string>
			externalId:Ref<string>
			username:Ref<string>
			conclusion:Ref<int>
			assessmentDimensionList:Ref<ExternalInterviewAssessmentDimension>[]
			content:Ref<string>
			externalInterviewId:Ref<string>
	}
	export interface ExternalInterviewAssessmentBuilder extends Struct<ExternalInterviewAssessmentBuilder>{

			id(id:string):Ref<ExternalInterviewAssessmentBuilder>
			externalId(externalId:string):Ref<ExternalInterviewAssessmentBuilder>
			username(username:string):Ref<ExternalInterviewAssessmentBuilder>
			conclusion(conclusion:int):Ref<ExternalInterviewAssessmentBuilder>
			assessmentDimensionList(assessmentDimensionList:Ref<ExternalInterviewAssessmentDimension>[]):Ref<ExternalInterviewAssessmentBuilder>
			content(content:string):Ref<ExternalInterviewAssessmentBuilder>
			externalInterviewId(externalInterviewId:string):Ref<ExternalInterviewAssessmentBuilder>
			build():Ref<ExternalInterviewAssessment>
	}
	export interface ExternalInterviewAssessmentDimension extends Struct<ExternalInterviewAssessmentDimension>{

			score:Ref<int>
			option:Ref<string>
			options:string[]
			content:Ref<string>
			assessmentType:Ref<int>
			title:Ref<string>
			description:Ref<string>
	}
	export interface ExternalInterviewAssessmentDimensionBuilder extends Struct<ExternalInterviewAssessmentDimensionBuilder>{

			score(score:int):Ref<ExternalInterviewAssessmentDimensionBuilder>
			option(option:string):Ref<ExternalInterviewAssessmentDimensionBuilder>
			options(options:string[]):Ref<ExternalInterviewAssessmentDimensionBuilder>
			content(content:string):Ref<ExternalInterviewAssessmentDimensionBuilder>
			assessmentType(assessmentType:int):Ref<ExternalInterviewAssessmentDimensionBuilder>
			title(title:string):Ref<ExternalInterviewAssessmentDimensionBuilder>
			description(description:string):Ref<ExternalInterviewAssessmentDimensionBuilder>
			build():Ref<ExternalInterviewAssessmentDimension>
	}
	export interface ExternalInterviewBuilder extends Struct<ExternalInterviewBuilder>{

			externalId(externalId:string):Ref<ExternalInterviewBuilder>
			externalApplicationId(externalApplicationId:string):Ref<ExternalInterviewBuilder>
			id(id:string):Ref<ExternalInterviewBuilder>
			participateStatus(participateStatus:int):Ref<ExternalInterviewBuilder>
			beginTime(beginTime:int):Ref<ExternalInterviewBuilder>
			endTime(endTime:int):Ref<ExternalInterviewBuilder>
			build():Ref<ExternalInterview>
	}
	export interface ExternalReward extends Struct<ExternalReward>{

			referralUserId:Ref<string>
			createUserId:Ref<string>
			confirmUserId:Ref<string>
			payUserId:Ref<string>
			externalId:Ref<string>
			applicationId:Ref<string>
			talentId:Ref<string>
			jobId:Ref<string>
			reason:Ref<string>
			ruleType:Ref<int>
			bonus:Ref<BonusAmount>
			stage:Ref<int>
			createTime:Ref<string>
			confirmTime:Ref<string>
			payTime:Ref<string>
			onboardTime:Ref<string>
			conversionTime:Ref<string>
			comment:Ref<string>
	}
	export interface ExternalRewardBuilder extends Struct<ExternalRewardBuilder>{

			referralUserId(referralUserId:string):Ref<ExternalRewardBuilder>
			createUserId(createUserId:string):Ref<ExternalRewardBuilder>
			confirmUserId(confirmUserId:string):Ref<ExternalRewardBuilder>
			payUserId(payUserId:string):Ref<ExternalRewardBuilder>
			externalId(externalId:string):Ref<ExternalRewardBuilder>
			applicationId(applicationId:string):Ref<ExternalRewardBuilder>
			talentId(talentId:string):Ref<ExternalRewardBuilder>
			jobId(jobId:string):Ref<ExternalRewardBuilder>
			reason(reason:string):Ref<ExternalRewardBuilder>
			ruleType(ruleType:int):Ref<ExternalRewardBuilder>
			bonus(bonus:Ref<BonusAmount>):Ref<ExternalRewardBuilder>
			stage(stage:int):Ref<ExternalRewardBuilder>
			createTime(createTime:string):Ref<ExternalRewardBuilder>
			confirmTime(confirmTime:string):Ref<ExternalRewardBuilder>
			payTime(payTime:string):Ref<ExternalRewardBuilder>
			onboardTime(onboardTime:string):Ref<ExternalRewardBuilder>
			conversionTime(conversionTime:string):Ref<ExternalRewardBuilder>
			comment(comment:string):Ref<ExternalRewardBuilder>
			build():Ref<ExternalReward>
	}
	export interface Filter extends Struct<Filter>{

			key:Ref<string>
			valueType:Ref<int>
			valueList:string[]
			rangeFilter:Ref<RangeFilter>
			candidateTagFilter:Ref<CandidateTagFilter>
			degreeFilter:Ref<DegreeFilter>
	}
	export interface FilterBuilder extends Struct<FilterBuilder>{

			key(key:string):Ref<FilterBuilder>
			valueType(valueType:int):Ref<FilterBuilder>
			valueList(valueList:string[]):Ref<FilterBuilder>
			rangeFilter(rangeFilter:Ref<RangeFilter>):Ref<FilterBuilder>
			candidateTagFilter(candidateTagFilter:Ref<CandidateTagFilter>):Ref<FilterBuilder>
			degreeFilter(degreeFilter:Ref<DegreeFilter>):Ref<FilterBuilder>
			build():Ref<Filter>
	}
	export interface FiveStartScoringResult extends Struct<FiveStartScoringResult>{

			highestScoreDesc:Ref<string>
			highestScoreEnDesc:Ref<string>
			lowestScoreDesc:Ref<string>
			lowestScoreEnDesc:Ref<string>
			scoreResult:Ref<float64>
	}
	export interface FiveStartScoringResultBuilder extends Struct<FiveStartScoringResultBuilder>{

			highestScoreDesc(highestScoreDesc:string):Ref<FiveStartScoringResultBuilder>
			highestScoreEnDesc(highestScoreEnDesc:string):Ref<FiveStartScoringResultBuilder>
			lowestScoreDesc(lowestScoreDesc:string):Ref<FiveStartScoringResultBuilder>
			lowestScoreEnDesc(lowestScoreEnDesc:string):Ref<FiveStartScoringResultBuilder>
			scoreResult(scoreResult:float64):Ref<FiveStartScoringResultBuilder>
			build():Ref<FiveStartScoringResult>
	}
	export interface GetAgencyReq extends Struct<GetAgencyReq>{

	}
	export interface GetAgencyReqBuilder extends Struct<GetAgencyReqBuilder>{

			agencyId(agencyId:string):Ref<GetAgencyReqBuilder>
			userIdType(userIdType:string):Ref<GetAgencyReqBuilder>
			build():Ref<GetAgencyReq>
	}
	export interface GetAgencyResp extends Struct<GetAgencyResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetAgencyRespData>
			success():bool
	}
	export interface GetAgencyRespData extends Struct<GetAgencyRespData>{

			agency:Ref<Agency>
	}
	export interface GetApplicationReq extends Struct<GetApplicationReq>{

	}
	export interface GetApplicationReqBuilder extends Struct<GetApplicationReqBuilder>{

			applicationId(applicationId:string):Ref<GetApplicationReqBuilder>
			userIdType(userIdType:string):Ref<GetApplicationReqBuilder>
			options(options:string[]):Ref<GetApplicationReqBuilder>
			build():Ref<GetApplicationReq>
	}
	export interface GetApplicationResp extends Struct<GetApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetApplicationRespData>
			success():bool
	}
	export interface GetApplicationRespData extends Struct<GetApplicationRespData>{

			application:Ref<Application>
	}
	export interface GetAttachmentReq extends Struct<GetAttachmentReq>{

	}
	export interface GetAttachmentReqBuilder extends Struct<GetAttachmentReqBuilder>{

			attachmentId(attachmentId:string):Ref<GetAttachmentReqBuilder>
			type(type_:int):Ref<GetAttachmentReqBuilder>
			build():Ref<GetAttachmentReq>
	}
	export interface GetAttachmentResp extends Struct<GetAttachmentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetAttachmentRespData>
			success():bool
	}
	export interface GetAttachmentRespData extends Struct<GetAttachmentRespData>{

			attachment:Ref<Attachment>
	}
	export interface GetByApplicationEmployeeReq extends Struct<GetByApplicationEmployeeReq>{

	}
	export interface GetByApplicationEmployeeReqBuilder extends Struct<GetByApplicationEmployeeReqBuilder>{

			applicationId(applicationId:string):Ref<GetByApplicationEmployeeReqBuilder>
			userIdType(userIdType:string):Ref<GetByApplicationEmployeeReqBuilder>
			departmentIdType(departmentIdType:string):Ref<GetByApplicationEmployeeReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<GetByApplicationEmployeeReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<GetByApplicationEmployeeReqBuilder>
			employeeTypeIdType(employeeTypeIdType:string):Ref<GetByApplicationEmployeeReqBuilder>
			build():Ref<GetByApplicationEmployeeReq>
	}
	export interface GetByApplicationEmployeeResp extends Struct<GetByApplicationEmployeeResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetByApplicationEmployeeRespData>
			success():bool
	}
	export interface GetByApplicationEmployeeRespData extends Struct<GetByApplicationEmployeeRespData>{

			employee:Ref<Employee>
	}
	export interface GetByApplicationReferralReq extends Struct<GetByApplicationReferralReq>{

	}
	export interface GetByApplicationReferralReqBuilder extends Struct<GetByApplicationReferralReqBuilder>{

			applicationId(applicationId:string):Ref<GetByApplicationReferralReqBuilder>
			userIdType(userIdType:string):Ref<GetByApplicationReferralReqBuilder>
			build():Ref<GetByApplicationReferralReq>
	}
	export interface GetByApplicationReferralResp extends Struct<GetByApplicationReferralResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetByApplicationReferralRespData>
			success():bool
	}
	export interface GetByApplicationReferralRespData extends Struct<GetByApplicationReferralRespData>{

			referral:Ref<Referral>
	}
	export interface GetByTalentInterviewReq extends Struct<GetByTalentInterviewReq>{

	}
	export interface GetByTalentInterviewReqBuilder extends Struct<GetByTalentInterviewReqBuilder>{

			talentId(talentId:string):Ref<GetByTalentInterviewReqBuilder>
			userIdType(userIdType:string):Ref<GetByTalentInterviewReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<GetByTalentInterviewReqBuilder>
			build():Ref<GetByTalentInterviewReq>
	}
	export interface GetByTalentInterviewResp extends Struct<GetByTalentInterviewResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetByTalentInterviewRespData>
			success():bool
	}
	export interface GetByTalentInterviewRespData extends Struct<GetByTalentInterviewRespData>{

			items:Ref<TalentInterview>[]
	}
	export interface GetEmployeeReq extends Struct<GetEmployeeReq>{

	}
	export interface GetEmployeeReqBuilder extends Struct<GetEmployeeReqBuilder>{

			employeeId(employeeId:string):Ref<GetEmployeeReqBuilder>
			userIdType(userIdType:string):Ref<GetEmployeeReqBuilder>
			departmentIdType(departmentIdType:string):Ref<GetEmployeeReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<GetEmployeeReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<GetEmployeeReqBuilder>
			employeeTypeIdType(employeeTypeIdType:string):Ref<GetEmployeeReqBuilder>
			build():Ref<GetEmployeeReq>
	}
	export interface GetEmployeeResp extends Struct<GetEmployeeResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetEmployeeRespData>
			success():bool
	}
	export interface GetEmployeeRespData extends Struct<GetEmployeeRespData>{

			employee:Ref<Employee>
	}
	export interface GetInterviewRecordAttachmentReq extends Struct<GetInterviewRecordAttachmentReq>{

	}
	export interface GetInterviewRecordAttachmentReqBuilder extends Struct<GetInterviewRecordAttachmentReqBuilder>{

			applicationId(applicationId:string):Ref<GetInterviewRecordAttachmentReqBuilder>
			interviewRecordId(interviewRecordId:string):Ref<GetInterviewRecordAttachmentReqBuilder>
			language(language:int):Ref<GetInterviewRecordAttachmentReqBuilder>
			build():Ref<GetInterviewRecordAttachmentReq>
	}
	export interface GetInterviewRecordAttachmentResp extends Struct<GetInterviewRecordAttachmentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetInterviewRecordAttachmentRespData>
			success():bool
	}
	export interface GetInterviewRecordAttachmentRespData extends Struct<GetInterviewRecordAttachmentRespData>{

			attachment:Ref<AttachmentInfo>
	}
	export interface GetInterviewRecordReq extends Struct<GetInterviewRecordReq>{

	}
	export interface GetInterviewRecordReqBuilder extends Struct<GetInterviewRecordReqBuilder>{

			interviewRecordId(interviewRecordId:string):Ref<GetInterviewRecordReqBuilder>
			userIdType(userIdType:string):Ref<GetInterviewRecordReqBuilder>
			build():Ref<GetInterviewRecordReq>
	}
	export interface GetInterviewRecordResp extends Struct<GetInterviewRecordResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetInterviewRecordRespData>
			success():bool
	}
	export interface GetInterviewRecordRespData extends Struct<GetInterviewRecordRespData>{

			interviewRecord:Ref<InterviewRecord>
	}
	export interface GetJobManagerReq extends Struct<GetJobManagerReq>{

	}
	export interface GetJobManagerReqBuilder extends Struct<GetJobManagerReqBuilder>{

			jobId(jobId:string):Ref<GetJobManagerReqBuilder>
			managerId(managerId:string):Ref<GetJobManagerReqBuilder>
			userIdType(userIdType:string):Ref<GetJobManagerReqBuilder>
			build():Ref<GetJobManagerReq>
	}
	export interface GetJobManagerResp extends Struct<GetJobManagerResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetJobManagerRespData>
			success():bool
	}
	export interface GetJobManagerRespData extends Struct<GetJobManagerRespData>{

			info:Ref<JobManager>
	}
	export interface GetJobReq extends Struct<GetJobReq>{

	}
	export interface GetJobReqBuilder extends Struct<GetJobReqBuilder>{

			jobId(jobId:string):Ref<GetJobReqBuilder>
			userIdType(userIdType:string):Ref<GetJobReqBuilder>
			departmentIdType(departmentIdType:string):Ref<GetJobReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<GetJobReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<GetJobReqBuilder>
			build():Ref<GetJobReq>
	}
	export interface GetJobResp extends Struct<GetJobResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetJobRespData>
			success():bool
	}
	export interface GetJobRespData extends Struct<GetJobRespData>{

			job:Ref<Job>
	}
	export interface GetNoteReq extends Struct<GetNoteReq>{

	}
	export interface GetNoteReqBuilder extends Struct<GetNoteReqBuilder>{

			noteId(noteId:string):Ref<GetNoteReqBuilder>
			userIdType(userIdType:string):Ref<GetNoteReqBuilder>
			build():Ref<GetNoteReq>
	}
	export interface GetNoteResp extends Struct<GetNoteResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetNoteRespData>
			success():bool
	}
	export interface GetNoteRespData extends Struct<GetNoteRespData>{

			note:Ref<Note>
	}
	export interface GetOfferApplicationFormReq extends Struct<GetOfferApplicationFormReq>{

	}
	export interface GetOfferApplicationFormReqBuilder extends Struct<GetOfferApplicationFormReqBuilder>{

			offerApplicationFormId(offerApplicationFormId:string):Ref<GetOfferApplicationFormReqBuilder>
			build():Ref<GetOfferApplicationFormReq>
	}
	export interface GetOfferApplicationFormResp extends Struct<GetOfferApplicationFormResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetOfferApplicationFormRespData>
			success():bool
	}
	export interface GetOfferApplicationFormRespData extends Struct<GetOfferApplicationFormRespData>{

			offerApplyForm:Ref<OfferApplyFormInfo>
	}
	export interface GetOfferReq extends Struct<GetOfferReq>{

	}
	export interface GetOfferReqBuilder extends Struct<GetOfferReqBuilder>{

			offerId(offerId:string):Ref<GetOfferReqBuilder>
			userIdType(userIdType:string):Ref<GetOfferReqBuilder>
			departmentIdType(departmentIdType:string):Ref<GetOfferReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<GetOfferReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<GetOfferReqBuilder>
			employeeTypeIdType(employeeTypeIdType:string):Ref<GetOfferReqBuilder>
			build():Ref<GetOfferReq>
	}
	export interface GetOfferResp extends Struct<GetOfferResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetOfferRespData>
			success():bool
	}
	export interface GetOfferRespData extends Struct<GetOfferRespData>{

			offer:Ref<Offer>
	}
	export interface GetOfferSchemaReq extends Struct<GetOfferSchemaReq>{

	}
	export interface GetOfferSchemaReqBuilder extends Struct<GetOfferSchemaReqBuilder>{

			offerSchemaId(offerSchemaId:string):Ref<GetOfferSchemaReqBuilder>
			build():Ref<GetOfferSchemaReq>
	}
	export interface GetOfferSchemaResp extends Struct<GetOfferSchemaResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetOfferSchemaRespData>
			success():bool
	}
	export interface GetOfferSchemaRespData extends Struct<GetOfferSchemaRespData>{

			id:Ref<string>
			scenario:Ref<int>
			version:Ref<int>
			objectList:Ref<OfferSchemaDetail>[]
	}
	export interface GetReferralWebsiteJobPostReq extends Struct<GetReferralWebsiteJobPostReq>{

	}
	export interface GetReferralWebsiteJobPostReqBuilder extends Struct<GetReferralWebsiteJobPostReqBuilder>{

			jobPostId(jobPostId:string):Ref<GetReferralWebsiteJobPostReqBuilder>
			userIdType(userIdType:string):Ref<GetReferralWebsiteJobPostReqBuilder>
			departmentIdType(departmentIdType:string):Ref<GetReferralWebsiteJobPostReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<GetReferralWebsiteJobPostReqBuilder>
			build():Ref<GetReferralWebsiteJobPostReq>
	}
	export interface GetReferralWebsiteJobPostResp extends Struct<GetReferralWebsiteJobPostResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetReferralWebsiteJobPostRespData>
			success():bool
	}
	export interface GetReferralWebsiteJobPostRespData extends Struct<GetReferralWebsiteJobPostRespData>{

			jobPost:Ref<PortalJobPost>
	}
	export interface GetRoleReq extends Struct<GetRoleReq>{

	}
	export interface GetRoleReqBuilder extends Struct<GetRoleReqBuilder>{

			roleId(roleId:string):Ref<GetRoleReqBuilder>
			build():Ref<GetRoleReq>
	}
	export interface GetRoleResp extends Struct<GetRoleResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetRoleRespData>
			success():bool
	}
	export interface GetRoleRespData extends Struct<GetRoleRespData>{

			role:Ref<RoleDetail>
	}
	export interface GetTalentReq extends Struct<GetTalentReq>{

	}
	export interface GetTalentReqBuilder extends Struct<GetTalentReqBuilder>{

			talentId(talentId:string):Ref<GetTalentReqBuilder>
			userIdType(userIdType:string):Ref<GetTalentReqBuilder>
			build():Ref<GetTalentReq>
	}
	export interface GetTalentResp extends Struct<GetTalentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetTalentRespData>
			success():bool
	}
	export interface GetTalentRespData extends Struct<GetTalentRespData>{

			talent:Ref<Talent>
	}
	export interface GetWebsiteDeliveryTaskReq extends Struct<GetWebsiteDeliveryTaskReq>{

	}
	export interface GetWebsiteDeliveryTaskReqBuilder extends Struct<GetWebsiteDeliveryTaskReqBuilder>{

			websiteId(websiteId:string):Ref<GetWebsiteDeliveryTaskReqBuilder>
			deliveryTaskId(deliveryTaskId:string):Ref<GetWebsiteDeliveryTaskReqBuilder>
			build():Ref<GetWebsiteDeliveryTaskReq>
	}
	export interface GetWebsiteDeliveryTaskResp extends Struct<GetWebsiteDeliveryTaskResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetWebsiteDeliveryTaskRespData>
			success():bool
	}
	export interface GetWebsiteDeliveryTaskRespData extends Struct<GetWebsiteDeliveryTaskRespData>{

			status:Ref<int>
			delivery:Ref<WebsiteDeliveryDto>
			statusMsg:Ref<string>
			extraInfo:Ref<string>
	}
	export interface GetWebsiteJobPostReq extends Struct<GetWebsiteJobPostReq>{

	}
	export interface GetWebsiteJobPostReqBuilder extends Struct<GetWebsiteJobPostReqBuilder>{

			websiteId(websiteId:string):Ref<GetWebsiteJobPostReqBuilder>
			jobPostId(jobPostId:string):Ref<GetWebsiteJobPostReqBuilder>
			userIdType(userIdType:string):Ref<GetWebsiteJobPostReqBuilder>
			departmentIdType(departmentIdType:string):Ref<GetWebsiteJobPostReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<GetWebsiteJobPostReqBuilder>
			build():Ref<GetWebsiteJobPostReq>
	}
	export interface GetWebsiteJobPostResp extends Struct<GetWebsiteJobPostResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetWebsiteJobPostRespData>
			success():bool
	}
	export interface GetWebsiteJobPostRespData extends Struct<GetWebsiteJobPostRespData>{

			jobPost:Ref<WebsiteJobPost>
	}
	export interface I18n extends Struct<I18n>{

			zhCn:Ref<string>
			enUs:Ref<string>
	}
	export interface I18nBuilder extends Struct<I18nBuilder>{

			zhCn(zhCn:string):Ref<I18nBuilder>
			enUs(enUs:string):Ref<I18nBuilder>
			build():Ref<I18n>
	}
	export interface IdNameObject extends Struct<IdNameObject>{

			id:Ref<string>
			name:Ref<I18n>
	}
	export interface IdNameObjectBuilder extends Struct<IdNameObjectBuilder>{

			id(id:string):Ref<IdNameObjectBuilder>
			name(name:Ref<I18n>):Ref<IdNameObjectBuilder>
			build():Ref<IdNameObject>
	}
	export interface Identification extends Struct<Identification>{

			identificationNumber:Ref<string>
			identificationType:Ref<int>
	}
	export interface IdentificationBuilder extends Struct<IdentificationBuilder>{

			identificationNumber(identificationNumber:string):Ref<IdentificationBuilder>
			identificationType(identificationType:int):Ref<IdentificationBuilder>
			build():Ref<Identification>
	}
	export interface InternOfferOffboardingInfo extends Struct<InternOfferOffboardingInfo>{

			actualOffboardingDate:Ref<string>
			notes:Ref<string>
	}
	export interface InternOfferOffboardingInfoBuilder extends Struct<InternOfferOffboardingInfoBuilder>{

			actualOffboardingDate(actualOffboardingDate:string):Ref<InternOfferOffboardingInfoBuilder>
			notes(notes:string):Ref<InternOfferOffboardingInfoBuilder>
			build():Ref<InternOfferOffboardingInfo>
	}
	export interface InternOfferOnboardingInfo extends Struct<InternOfferOnboardingInfo>{

			actualOnboardingDate:Ref<string>
	}
	export interface InternOfferOnboardingInfoBuilder extends Struct<InternOfferOnboardingInfoBuilder>{

			actualOnboardingDate(actualOnboardingDate:string):Ref<InternOfferOnboardingInfoBuilder>
			build():Ref<InternOfferOnboardingInfo>
	}
	export interface InternOfferStatus extends Struct<InternOfferStatus>{

			offerId:Ref<string>
			operation:Ref<string>
			onboardingInfo:Ref<InternOfferOnboardingInfo>
			offboardingInfo:Ref<InternOfferOffboardingInfo>
	}
	export interface InternOfferStatusBuilder extends Struct<InternOfferStatusBuilder>{

			offerId(offerId:string):Ref<InternOfferStatusBuilder>
			operation(operation:string):Ref<InternOfferStatusBuilder>
			onboardingInfo(onboardingInfo:Ref<InternOfferOnboardingInfo>):Ref<InternOfferStatusBuilder>
			offboardingInfo(offboardingInfo:Ref<InternOfferOffboardingInfo>):Ref<InternOfferStatusBuilder>
			build():Ref<InternOfferStatus>
	}
	export interface InternOfferStatusOfferReq extends Struct<InternOfferStatusOfferReq>{

			internOfferStatus:Ref<InternOfferStatus>
	}
	export interface InternOfferStatusOfferReqBuilder extends Struct<InternOfferStatusOfferReqBuilder>{

			offerId(offerId:string):Ref<InternOfferStatusOfferReqBuilder>
			internOfferStatus(internOfferStatus:Ref<InternOfferStatus>):Ref<InternOfferStatusOfferReqBuilder>
			build():Ref<InternOfferStatusOfferReq>
	}
	export interface InternOfferStatusOfferResp extends Struct<InternOfferStatusOfferResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<InternOfferStatusOfferRespData>
			success():bool
	}
	export interface InternOfferStatusOfferRespData extends Struct<InternOfferStatusOfferRespData>{

			offerId:Ref<string>
			operation:Ref<string>
			onboardingInfo:Ref<InternOfferOnboardingInfo>
			offboardingInfo:Ref<InternOfferOffboardingInfo>
	}
	export interface InternshipInfo extends Struct<InternshipInfo>{

			careerType:Ref<int>
			company:Ref<string>
			desc:Ref<string>
			endTime:Ref<int>
			startTime:Ref<int>
			title:Ref<string>
	}
	export interface InternshipInfoBuilder extends Struct<InternshipInfoBuilder>{

			careerType(careerType:int):Ref<InternshipInfoBuilder>
			company(company:string):Ref<InternshipInfoBuilder>
			desc(desc:string):Ref<InternshipInfoBuilder>
			endTime(endTime:int):Ref<InternshipInfoBuilder>
			startTime(startTime:int):Ref<InternshipInfoBuilder>
			title(title:string):Ref<InternshipInfoBuilder>
			build():Ref<InternshipInfo>
	}
	export interface Interview extends Struct<Interview>{

			id:Ref<string>
			beginTime:Ref<int>
			endTime:Ref<int>
			round:Ref<int>
			stageId:Ref<string>
			interviewRecordList:Ref<InterviewRecord>[]
	}
	export interface InterviewAddress extends Struct<InterviewAddress>{

			id:Ref<string>
			name:Ref<I18n>
			district:Ref<CodeNameObject>
			city:Ref<CodeNameObject>
			state:Ref<CodeNameObject>
			country:Ref<CodeNameObject>
	}
	export interface InterviewAddressBuilder extends Struct<InterviewAddressBuilder>{

			id(id:string):Ref<InterviewAddressBuilder>
			name(name:Ref<I18n>):Ref<InterviewAddressBuilder>
			district(district:Ref<CodeNameObject>):Ref<InterviewAddressBuilder>
			city(city:Ref<CodeNameObject>):Ref<InterviewAddressBuilder>
			state(state:Ref<CodeNameObject>):Ref<InterviewAddressBuilder>
			country(country:Ref<CodeNameObject>):Ref<InterviewAddressBuilder>
			build():Ref<InterviewAddress>
	}
	export interface InterviewAppointmentConfig extends Struct<InterviewAppointmentConfig>{

			enableInterviewAppointmentByInterviewer:Ref<bool>
			config:Ref<InterviewAppointmentConfigContent>
	}
	export interface InterviewAppointmentConfigBuilder extends Struct<InterviewAppointmentConfigBuilder>{

			enableInterviewAppointmentByInterviewer(enableInterviewAppointmentByInterviewer:bool):Ref<InterviewAppointmentConfigBuilder>
			config(config:Ref<InterviewAppointmentConfigContent>):Ref<InterviewAppointmentConfigBuilder>
			build():Ref<InterviewAppointmentConfig>
	}
	export interface InterviewAppointmentConfigContent extends Struct<InterviewAppointmentConfigContent>{

			interviewType:Ref<int>
			talentTimezoneCode:Ref<string>
			contactUserId:Ref<string>
			contactMobile:Ref<string>
			contactEmail:Ref<string>
			addressId:Ref<string>
			videoType:Ref<int>
			cc:string[]
			remark:Ref<string>
			interviewNotificationTemplateId:Ref<string>
			appointmentNotificationTemplateId:Ref<string>
			cancelInterviewNotificationTemplateId:Ref<string>
	}
	export interface InterviewAppointmentConfigContentBuilder extends Struct<InterviewAppointmentConfigContentBuilder>{

			interviewType(interviewType:int):Ref<InterviewAppointmentConfigContentBuilder>
			talentTimezoneCode(talentTimezoneCode:string):Ref<InterviewAppointmentConfigContentBuilder>
			contactUserId(contactUserId:string):Ref<InterviewAppointmentConfigContentBuilder>
			contactMobile(contactMobile:string):Ref<InterviewAppointmentConfigContentBuilder>
			contactEmail(contactEmail:string):Ref<InterviewAppointmentConfigContentBuilder>
			addressId(addressId:string):Ref<InterviewAppointmentConfigContentBuilder>
			videoType(videoType:int):Ref<InterviewAppointmentConfigContentBuilder>
			cc(cc:string[]):Ref<InterviewAppointmentConfigContentBuilder>
			remark(remark:string):Ref<InterviewAppointmentConfigContentBuilder>
			interviewNotificationTemplateId(interviewNotificationTemplateId:string):Ref<InterviewAppointmentConfigContentBuilder>
			appointmentNotificationTemplateId(appointmentNotificationTemplateId:string):Ref<InterviewAppointmentConfigContentBuilder>
			cancelInterviewNotificationTemplateId(cancelInterviewNotificationTemplateId:string):Ref<InterviewAppointmentConfigContentBuilder>
			build():Ref<InterviewAppointmentConfigContent>
	}
	export interface InterviewAssessmentDimension extends Struct<InterviewAssessmentDimension>{

			id:Ref<string>
			name:Ref<I18n>
			description:Ref<I18n>
			enabled:Ref<bool>
			seq:Ref<int>
			required:Ref<bool>
			dimensionType:Ref<int>
			args:Ref<InterviewAssessmentDimensionArgs>
	}
	export interface InterviewAssessmentDimensionArgs extends Struct<InterviewAssessmentDimensionArgs>{

			scoreList:Ref<InterviewAssessmentDimensionArgsScore>[]
	}
	export interface InterviewAssessmentDimensionArgsBuilder extends Struct<InterviewAssessmentDimensionArgsBuilder>{

			scoreList(scoreList:Ref<InterviewAssessmentDimensionArgsScore>[]):Ref<InterviewAssessmentDimensionArgsBuilder>
			build():Ref<InterviewAssessmentDimensionArgs>
	}
	export interface InterviewAssessmentDimensionArgsScore extends Struct<InterviewAssessmentDimensionArgsScore>{

			id:Ref<string>
			name:Ref<I18n>
			description:Ref<I18n>
			enabled:Ref<bool>
	}
	export interface InterviewAssessmentDimensionArgsScoreBuilder extends Struct<InterviewAssessmentDimensionArgsScoreBuilder>{

			id(id:string):Ref<InterviewAssessmentDimensionArgsScoreBuilder>
			name(name:Ref<I18n>):Ref<InterviewAssessmentDimensionArgsScoreBuilder>
			description(description:Ref<I18n>):Ref<InterviewAssessmentDimensionArgsScoreBuilder>
			enabled(enabled:bool):Ref<InterviewAssessmentDimensionArgsScoreBuilder>
			build():Ref<InterviewAssessmentDimensionArgsScore>
	}
	export interface InterviewAssessmentDimensionBuilder extends Struct<InterviewAssessmentDimensionBuilder>{

			id(id:string):Ref<InterviewAssessmentDimensionBuilder>
			name(name:Ref<I18n>):Ref<InterviewAssessmentDimensionBuilder>
			description(description:Ref<I18n>):Ref<InterviewAssessmentDimensionBuilder>
			enabled(enabled:bool):Ref<InterviewAssessmentDimensionBuilder>
			seq(seq:int):Ref<InterviewAssessmentDimensionBuilder>
			required(required:bool):Ref<InterviewAssessmentDimensionBuilder>
			dimensionType(dimensionType:int):Ref<InterviewAssessmentDimensionBuilder>
			args(args:Ref<InterviewAssessmentDimensionArgs>):Ref<InterviewAssessmentDimensionBuilder>
			build():Ref<InterviewAssessmentDimension>
	}
	export interface InterviewAssessmentTemplate extends Struct<InterviewAssessmentTemplate>{

			id:Ref<string>
			name:Ref<I18n>
			args:Ref<InterviewAssessmentTemplateArgs>
	}
	export interface InterviewAssessmentTemplateArgs extends Struct<InterviewAssessmentTemplateArgs>{

			conclusionDimension:Ref<InterviewAssessmentDimension>
			scoreDimension:Ref<InterviewAssessmentDimension>
			contentDimension:Ref<InterviewAssessmentDimension>
			customDimensionList:Ref<InterviewAssessmentDimension>[]
	}
	export interface InterviewAssessmentTemplateArgsBuilder extends Struct<InterviewAssessmentTemplateArgsBuilder>{

			conclusionDimension(conclusionDimension:Ref<InterviewAssessmentDimension>):Ref<InterviewAssessmentTemplateArgsBuilder>
			scoreDimension(scoreDimension:Ref<InterviewAssessmentDimension>):Ref<InterviewAssessmentTemplateArgsBuilder>
			contentDimension(contentDimension:Ref<InterviewAssessmentDimension>):Ref<InterviewAssessmentTemplateArgsBuilder>
			customDimensionList(customDimensionList:Ref<InterviewAssessmentDimension>[]):Ref<InterviewAssessmentTemplateArgsBuilder>
			build():Ref<InterviewAssessmentTemplateArgs>
	}
	export interface InterviewAssessmentTemplateBuilder extends Struct<InterviewAssessmentTemplateBuilder>{

			id(id:string):Ref<InterviewAssessmentTemplateBuilder>
			name(name:Ref<I18n>):Ref<InterviewAssessmentTemplateBuilder>
			args(args:Ref<InterviewAssessmentTemplateArgs>):Ref<InterviewAssessmentTemplateBuilder>
			build():Ref<InterviewAssessmentTemplate>
	}
	export interface InterviewBuilder extends Struct<InterviewBuilder>{

			id(id:string):Ref<InterviewBuilder>
			beginTime(beginTime:int):Ref<InterviewBuilder>
			endTime(endTime:int):Ref<InterviewBuilder>
			round(round:int):Ref<InterviewBuilder>
			stageId(stageId:string):Ref<InterviewBuilder>
			interviewRecordList(interviewRecordList:Ref<InterviewRecord>[]):Ref<InterviewBuilder>
			build():Ref<Interview>
	}
	export interface InterviewDimensionAssessment extends Struct<InterviewDimensionAssessment>{

			id:Ref<string>
			name:Ref<I18n>
			fullScore:Ref<int>
			content:Ref<string>
			dimensionId:Ref<string>
			dimensionScore:Ref<InterviewDimensionScore>
			dimensionScoreList:Ref<InterviewDimensionScore>[]
			dimensionCustomScore:Ref<int>
			abilityList:Ref<Ability>[]
			questionList:Ref<InterviewQuestion>[]
			dimensionType:Ref<int>
	}
	export interface InterviewDimensionAssessmentBuilder extends Struct<InterviewDimensionAssessmentBuilder>{

			id(id:string):Ref<InterviewDimensionAssessmentBuilder>
			name(name:Ref<I18n>):Ref<InterviewDimensionAssessmentBuilder>
			fullScore(fullScore:int):Ref<InterviewDimensionAssessmentBuilder>
			content(content:string):Ref<InterviewDimensionAssessmentBuilder>
			dimensionId(dimensionId:string):Ref<InterviewDimensionAssessmentBuilder>
			dimensionScore(dimensionScore:Ref<InterviewDimensionScore>):Ref<InterviewDimensionAssessmentBuilder>
			dimensionScoreList(dimensionScoreList:Ref<InterviewDimensionScore>[]):Ref<InterviewDimensionAssessmentBuilder>
			dimensionCustomScore(dimensionCustomScore:int):Ref<InterviewDimensionAssessmentBuilder>
			abilityList(abilityList:Ref<Ability>[]):Ref<InterviewDimensionAssessmentBuilder>
			questionList(questionList:Ref<InterviewQuestion>[]):Ref<InterviewDimensionAssessmentBuilder>
			dimensionType(dimensionType:int):Ref<InterviewDimensionAssessmentBuilder>
			build():Ref<InterviewDimensionAssessment>
	}
	export interface InterviewDimensionOption extends Struct<InterviewDimensionOption>{

			id:Ref<string>
			name:Ref<I18n>
			description:Ref<I18n>
			scoreVal:Ref<int>
	}
	export interface InterviewDimensionOptionBuilder extends Struct<InterviewDimensionOptionBuilder>{

			id(id:string):Ref<InterviewDimensionOptionBuilder>
			name(name:Ref<I18n>):Ref<InterviewDimensionOptionBuilder>
			description(description:Ref<I18n>):Ref<InterviewDimensionOptionBuilder>
			scoreVal(scoreVal:int):Ref<InterviewDimensionOptionBuilder>
			build():Ref<InterviewDimensionOption>
	}
	export interface InterviewDimensionScore extends Struct<InterviewDimensionScore>{

			id:Ref<string>
			name:Ref<I18n>
			scoreVal:Ref<int>
	}
	export interface InterviewDimensionScoreBuilder extends Struct<InterviewDimensionScoreBuilder>{

			id(id:string):Ref<InterviewDimensionScoreBuilder>
			name(name:Ref<I18n>):Ref<InterviewDimensionScoreBuilder>
			scoreVal(scoreVal:int):Ref<InterviewDimensionScoreBuilder>
			build():Ref<InterviewDimensionScore>
	}
	export interface InterviewExtend extends Struct<InterviewExtend>{

			id:Ref<string>
			beginTime:Ref<int>
			endTime:Ref<int>
			round:Ref<int>
			interviewRecordList:Ref<InterviewRecord>[]
			feedbackSubmitTime:Ref<int>
			stageId:Ref<string>
			applicationId:Ref<string>
			stage:Ref<IdNameObject>
			creator:Ref<IdNameObject>
			bizCreateTime:Ref<int>
			bizModifyTime:Ref<int>
			interviewRoundSummary:Ref<int>
			interviewArrangementId:Ref<string>
			interviewType:Ref<int>
			talentTimeZone:Ref<CodeNameObject>
			contactUser:Ref<IdNameObject>
			contactMobile:Ref<string>
			remark:Ref<string>
			address:Ref<InterviewAddress>
			videoType:Ref<int>
			arrangementStatus:Ref<int>
			arrangementType:Ref<int>
			arrangementAppointmentKind:Ref<int>
			meetingRoomList:Ref<InterviewMeetingRoom>[]
			interviewRoundType:Ref<IdNameObject>
	}
	export interface InterviewExtendBuilder extends Struct<InterviewExtendBuilder>{

			id(id:string):Ref<InterviewExtendBuilder>
			beginTime(beginTime:int):Ref<InterviewExtendBuilder>
			endTime(endTime:int):Ref<InterviewExtendBuilder>
			round(round:int):Ref<InterviewExtendBuilder>
			interviewRecordList(interviewRecordList:Ref<InterviewRecord>[]):Ref<InterviewExtendBuilder>
			feedbackSubmitTime(feedbackSubmitTime:int):Ref<InterviewExtendBuilder>
			stageId(stageId:string):Ref<InterviewExtendBuilder>
			applicationId(applicationId:string):Ref<InterviewExtendBuilder>
			stage(stage:Ref<IdNameObject>):Ref<InterviewExtendBuilder>
			creator(creator:Ref<IdNameObject>):Ref<InterviewExtendBuilder>
			bizCreateTime(bizCreateTime:int):Ref<InterviewExtendBuilder>
			bizModifyTime(bizModifyTime:int):Ref<InterviewExtendBuilder>
			interviewRoundSummary(interviewRoundSummary:int):Ref<InterviewExtendBuilder>
			interviewArrangementId(interviewArrangementId:string):Ref<InterviewExtendBuilder>
			interviewType(interviewType:int):Ref<InterviewExtendBuilder>
			talentTimeZone(talentTimeZone:Ref<CodeNameObject>):Ref<InterviewExtendBuilder>
			contactUser(contactUser:Ref<IdNameObject>):Ref<InterviewExtendBuilder>
			contactMobile(contactMobile:string):Ref<InterviewExtendBuilder>
			remark(remark:string):Ref<InterviewExtendBuilder>
			address(address:Ref<InterviewAddress>):Ref<InterviewExtendBuilder>
			videoType(videoType:int):Ref<InterviewExtendBuilder>
			arrangementStatus(arrangementStatus:int):Ref<InterviewExtendBuilder>
			arrangementType(arrangementType:int):Ref<InterviewExtendBuilder>
			arrangementAppointmentKind(arrangementAppointmentKind:int):Ref<InterviewExtendBuilder>
			meetingRoomList(meetingRoomList:Ref<InterviewMeetingRoom>[]):Ref<InterviewExtendBuilder>
			interviewRoundType(interviewRoundType:Ref<IdNameObject>):Ref<InterviewExtendBuilder>
			build():Ref<InterviewExtend>
	}
	export interface InterviewFeedbackForm extends Struct<InterviewFeedbackForm>{

			id:Ref<string>
			version:Ref<int>
			name:Ref<I18n>
			type:Ref<int>
			scoreCalculationConfig:Ref<ScoreCalculationConfig>
			modules:Ref<InterviewFeedbackFormModule>[]
	}
	export interface InterviewFeedbackFormBuilder extends Struct<InterviewFeedbackFormBuilder>{

			id(id:string):Ref<InterviewFeedbackFormBuilder>
			version(version:int):Ref<InterviewFeedbackFormBuilder>
			name(name:Ref<I18n>):Ref<InterviewFeedbackFormBuilder>
			type(type_:int):Ref<InterviewFeedbackFormBuilder>
			scoreCalculationConfig(scoreCalculationConfig:Ref<ScoreCalculationConfig>):Ref<InterviewFeedbackFormBuilder>
			modules(modules:Ref<InterviewFeedbackFormModule>[]):Ref<InterviewFeedbackFormBuilder>
			build():Ref<InterviewFeedbackForm>
	}
	export interface InterviewFeedbackFormDimension extends Struct<InterviewFeedbackFormDimension>{

			id:Ref<string>
			name:Ref<I18n>
			description:Ref<I18n>
			type:Ref<int>
			enabled:Ref<bool>
			sequence:Ref<int>
			isRequired:Ref<bool>
			weight:Ref<float64>
			scoreDimensionConfig:Ref<ScoreDimensionConfig>
			optionItems:Ref<InterviewDimensionOption>[]
			displayNotEvident:Ref<bool>
			abilityList:Ref<DimensionAbility>[]
	}
	export interface InterviewFeedbackFormDimensionBuilder extends Struct<InterviewFeedbackFormDimensionBuilder>{

			id(id:string):Ref<InterviewFeedbackFormDimensionBuilder>
			name(name:Ref<I18n>):Ref<InterviewFeedbackFormDimensionBuilder>
			description(description:Ref<I18n>):Ref<InterviewFeedbackFormDimensionBuilder>
			type(type_:int):Ref<InterviewFeedbackFormDimensionBuilder>
			enabled(enabled:bool):Ref<InterviewFeedbackFormDimensionBuilder>
			sequence(sequence:int):Ref<InterviewFeedbackFormDimensionBuilder>
			isRequired(isRequired:bool):Ref<InterviewFeedbackFormDimensionBuilder>
			weight(weight:float64):Ref<InterviewFeedbackFormDimensionBuilder>
			scoreDimensionConfig(scoreDimensionConfig:Ref<ScoreDimensionConfig>):Ref<InterviewFeedbackFormDimensionBuilder>
			optionItems(optionItems:Ref<InterviewDimensionOption>[]):Ref<InterviewFeedbackFormDimensionBuilder>
			displayNotEvident(displayNotEvident:bool):Ref<InterviewFeedbackFormDimensionBuilder>
			abilityList(abilityList:Ref<DimensionAbility>[]):Ref<InterviewFeedbackFormDimensionBuilder>
			build():Ref<InterviewFeedbackFormDimension>
	}
	export interface InterviewFeedbackFormModule extends Struct<InterviewFeedbackFormModule>{

			id:Ref<string>
			name:Ref<I18n>
			description:Ref<I18n>
			type:Ref<int>
			sequence:Ref<int>
			weight:Ref<float64>
			dimensions:Ref<InterviewFeedbackFormDimension>[]
	}
	export interface InterviewFeedbackFormModuleBuilder extends Struct<InterviewFeedbackFormModuleBuilder>{

			id(id:string):Ref<InterviewFeedbackFormModuleBuilder>
			name(name:Ref<I18n>):Ref<InterviewFeedbackFormModuleBuilder>
			description(description:Ref<I18n>):Ref<InterviewFeedbackFormModuleBuilder>
			type(type_:int):Ref<InterviewFeedbackFormModuleBuilder>
			sequence(sequence:int):Ref<InterviewFeedbackFormModuleBuilder>
			weight(weight:float64):Ref<InterviewFeedbackFormModuleBuilder>
			dimensions(dimensions:Ref<InterviewFeedbackFormDimension>[]):Ref<InterviewFeedbackFormModuleBuilder>
			build():Ref<InterviewFeedbackFormModule>
	}
	export interface InterviewMeetingRoom extends Struct<InterviewMeetingRoom>{

			roomId:Ref<string>
			roomName:Ref<string>
			buildingName:Ref<string>
			reservedStatus:Ref<int>
			floorName:Ref<string>
	}
	export interface InterviewMeetingRoomBuilder extends Struct<InterviewMeetingRoomBuilder>{

			roomId(roomId:string):Ref<InterviewMeetingRoomBuilder>
			roomName(roomName:string):Ref<InterviewMeetingRoomBuilder>
			buildingName(buildingName:string):Ref<InterviewMeetingRoomBuilder>
			reservedStatus(reservedStatus:int):Ref<InterviewMeetingRoomBuilder>
			floorName(floorName:string):Ref<InterviewMeetingRoomBuilder>
			build():Ref<InterviewMeetingRoom>
	}
	export interface InterviewQuestion extends Struct<InterviewQuestion>{

			id:Ref<string>
			title:Ref<I18n>
			description:Ref<I18n>
			content:Ref<string>
			abilityList:Ref<Ability>[]
	}
	export interface InterviewQuestionBuilder extends Struct<InterviewQuestionBuilder>{

			id(id:string):Ref<InterviewQuestionBuilder>
			title(title:Ref<I18n>):Ref<InterviewQuestionBuilder>
			description(description:Ref<I18n>):Ref<InterviewQuestionBuilder>
			content(content:string):Ref<InterviewQuestionBuilder>
			abilityList(abilityList:Ref<Ability>[]):Ref<InterviewQuestionBuilder>
			build():Ref<InterviewQuestion>
	}
	export interface InterviewRecord extends Struct<InterviewRecord>{

			id:Ref<string>
			userId:Ref<string>
			content:Ref<string>
			commitStatus:Ref<int>
			feedbackSubmitTime:Ref<int>
			conclusion:Ref<int>
			interviewScore:Ref<InterviewScore>
			assessmentScore:Ref<AssessmentScoreInfo>
			questionList:Ref<InterviewQuestion>[]
			codeQuestionList:Ref<InterviewQuestion>[]
			interviewer:Ref<IdNameObject>
			imageList:Ref<AttachmentV2>[]
			dimensionAssessmentList:Ref<InterviewDimensionAssessment>[]
	}
	export interface InterviewRecordBuilder extends Struct<InterviewRecordBuilder>{

			id(id:string):Ref<InterviewRecordBuilder>
			userId(userId:string):Ref<InterviewRecordBuilder>
			content(content:string):Ref<InterviewRecordBuilder>
			commitStatus(commitStatus:int):Ref<InterviewRecordBuilder>
			feedbackSubmitTime(feedbackSubmitTime:int):Ref<InterviewRecordBuilder>
			conclusion(conclusion:int):Ref<InterviewRecordBuilder>
			interviewScore(interviewScore:Ref<InterviewScore>):Ref<InterviewRecordBuilder>
			assessmentScore(assessmentScore:Ref<AssessmentScoreInfo>):Ref<InterviewRecordBuilder>
			questionList(questionList:Ref<InterviewQuestion>[]):Ref<InterviewRecordBuilder>
			codeQuestionList(codeQuestionList:Ref<InterviewQuestion>[]):Ref<InterviewRecordBuilder>
			interviewer(interviewer:Ref<IdNameObject>):Ref<InterviewRecordBuilder>
			imageList(imageList:Ref<AttachmentV2>[]):Ref<InterviewRecordBuilder>
			dimensionAssessmentList(dimensionAssessmentList:Ref<InterviewDimensionAssessment>[]):Ref<InterviewRecordBuilder>
			build():Ref<InterviewRecord>
	}
	export interface InterviewRecordTemplate extends Struct<InterviewRecordTemplate>{

			assessmentTemplate:Ref<InterviewAssessmentTemplate>
	}
	export interface InterviewRecordTemplateBuilder extends Struct<InterviewRecordTemplateBuilder>{

			assessmentTemplate(assessmentTemplate:Ref<InterviewAssessmentTemplate>):Ref<InterviewRecordTemplateBuilder>
			build():Ref<InterviewRecordTemplate>
	}
	export interface InterviewRegistrationSchema extends Struct<InterviewRegistrationSchema>{

			id:Ref<string>
			name:Ref<string>
			isUsedAsInterview:Ref<bool>
			objectList:Ref<CommonSchema>[]
	}
	export interface InterviewRegistrationSchemaBuilder extends Struct<InterviewRegistrationSchemaBuilder>{

			id(id:string):Ref<InterviewRegistrationSchemaBuilder>
			name(name:string):Ref<InterviewRegistrationSchemaBuilder>
			isUsedAsInterview(isUsedAsInterview:bool):Ref<InterviewRegistrationSchemaBuilder>
			objectList(objectList:Ref<CommonSchema>[]):Ref<InterviewRegistrationSchemaBuilder>
			build():Ref<InterviewRegistrationSchema>
	}
	export interface InterviewRoundType extends Struct<InterviewRoundType>{

			id:Ref<string>
			bizId:Ref<string>
			name:Ref<I18n>
			processType:Ref<int>
			activeStatus:Ref<int>
			interviewAssessmentTemplateInfo:Ref<InterviewRoundTypeAssessmentTemplate>
	}
	export interface InterviewRoundTypeAssessmentTemplate extends Struct<InterviewRoundTypeAssessmentTemplate>{

			id:Ref<string>
			bizId:Ref<string>
			name:Ref<I18n>
	}
	export interface InterviewRoundTypeAssessmentTemplateBuilder extends Struct<InterviewRoundTypeAssessmentTemplateBuilder>{

			id(id:string):Ref<InterviewRoundTypeAssessmentTemplateBuilder>
			bizId(bizId:string):Ref<InterviewRoundTypeAssessmentTemplateBuilder>
			name(name:Ref<I18n>):Ref<InterviewRoundTypeAssessmentTemplateBuilder>
			build():Ref<InterviewRoundTypeAssessmentTemplate>
	}
	export interface InterviewRoundTypeBuilder extends Struct<InterviewRoundTypeBuilder>{

			id(id:string):Ref<InterviewRoundTypeBuilder>
			bizId(bizId:string):Ref<InterviewRoundTypeBuilder>
			name(name:Ref<I18n>):Ref<InterviewRoundTypeBuilder>
			processType(processType:int):Ref<InterviewRoundTypeBuilder>
			activeStatus(activeStatus:int):Ref<InterviewRoundTypeBuilder>
			interviewAssessmentTemplateInfo(interviewAssessmentTemplateInfo:Ref<InterviewRoundTypeAssessmentTemplate>):Ref<InterviewRoundTypeBuilder>
			build():Ref<InterviewRoundType>
	}
	export interface InterviewScore extends Struct<InterviewScore>{

			id:Ref<string>
			level:Ref<int>
			zhName:Ref<string>
			zhDescription:Ref<string>
			enName:Ref<string>
			enDescription:Ref<string>
	}
	export interface InterviewScoreBuilder extends Struct<InterviewScoreBuilder>{

			id(id:string):Ref<InterviewScoreBuilder>
			level(level:int):Ref<InterviewScoreBuilder>
			zhName(zhName:string):Ref<InterviewScoreBuilder>
			zhDescription(zhDescription:string):Ref<InterviewScoreBuilder>
			enName(enName:string):Ref<InterviewScoreBuilder>
			enDescription(enDescription:string):Ref<InterviewScoreBuilder>
			build():Ref<InterviewScore>
	}
	export interface InterviewTask extends Struct<InterviewTask>{

			id:Ref<string>
			jobId:Ref<string>
			talentId:Ref<string>
			applicationId:Ref<string>
			activityStatus:Ref<int>
	}
	export interface InterviewTaskBuilder extends Struct<InterviewTaskBuilder>{

			id(id:string):Ref<InterviewTaskBuilder>
			jobId(jobId:string):Ref<InterviewTaskBuilder>
			talentId(talentId:string):Ref<InterviewTaskBuilder>
			applicationId(applicationId:string):Ref<InterviewTaskBuilder>
			activityStatus(activityStatus:int):Ref<InterviewTaskBuilder>
			build():Ref<InterviewTask>
	}
	export interface Interviewer extends Struct<Interviewer>{

			userId:Ref<string>
			verifyStatus:Ref<int>
	}
	export interface InterviewerBuilder extends Struct<InterviewerBuilder>{

			userId(userId:string):Ref<InterviewerBuilder>
			verifyStatus(verifyStatus:int):Ref<InterviewerBuilder>
			build():Ref<Interviewer>
	}
	export interface Job extends Struct<Job>{

			id:Ref<string>
			title:Ref<string>
			description:Ref<string>
			code:Ref<string>
			requirement:Ref<string>
			recruitmentType:Ref<JobRecruitmentType>
			department:Ref<JobDepartment>
			city:Ref<JobCity>
			minJobLevel:Ref<JobLevel>
			maxJobLevel:Ref<JobLevel>
			highlightList:Ref<JobHighlight>[]
			jobCategory:Ref<JobCategory>
			jobType:Ref<JobType>
			activeStatus:Ref<int>
			createUserId:Ref<string>
			createTime:Ref<int>
			updateTime:Ref<int>
			processType:Ref<int>
			processId:Ref<string>
			processName:Ref<string>
			processEnName:Ref<string>
			customizedDataList:Ref<JobCustomizedData>[]
			jobFunction:Ref<IdNameObject>
			subject:Ref<IdNameObject>
			headCount:Ref<int>
			experience:Ref<int>
			expiryTime:Ref<int>
			minSalary:Ref<int>
			maxSalary:Ref<int>
			requiredDegree:Ref<int>
			cityList:Ref<CodeNameObject>[]
			jobAttribute:Ref<int>
			createTimestamp:Ref<string>
			updateTimestamp:Ref<string>
			expiryTimestamp:Ref<string>
			targetMajorList:Ref<TargetMajorInfo>[]
	}
	//1
	export const JobAttributeCombinedUpdateJobConcrete:int
	//2
	export const JobAttributeCombinedUpdateJobVirtual:int
	//1
	export const JobAttributeConcrete:int
	//2
	export const JobAttributeVirtual:int
	export interface JobBuilder extends Struct<JobBuilder>{

			id(id:string):Ref<JobBuilder>
			title(title:string):Ref<JobBuilder>
			description(description:string):Ref<JobBuilder>
			code(code:string):Ref<JobBuilder>
			requirement(requirement:string):Ref<JobBuilder>
			recruitmentType(recruitmentType:Ref<JobRecruitmentType>):Ref<JobBuilder>
			department(department:Ref<JobDepartment>):Ref<JobBuilder>
			city(city:Ref<JobCity>):Ref<JobBuilder>
			minJobLevel(minJobLevel:Ref<JobLevel>):Ref<JobBuilder>
			maxJobLevel(maxJobLevel:Ref<JobLevel>):Ref<JobBuilder>
			highlightList(highlightList:Ref<JobHighlight>[]):Ref<JobBuilder>
			jobCategory(jobCategory:Ref<JobCategory>):Ref<JobBuilder>
			jobType(jobType:Ref<JobType>):Ref<JobBuilder>
			activeStatus(activeStatus:int):Ref<JobBuilder>
			createUserId(createUserId:string):Ref<JobBuilder>
			createTime(createTime:int):Ref<JobBuilder>
			updateTime(updateTime:int):Ref<JobBuilder>
			processType(processType:int):Ref<JobBuilder>
			processId(processId:string):Ref<JobBuilder>
			processName(processName:string):Ref<JobBuilder>
			processEnName(processEnName:string):Ref<JobBuilder>
			customizedDataList(customizedDataList:Ref<JobCustomizedData>[]):Ref<JobBuilder>
			jobFunction(jobFunction:Ref<IdNameObject>):Ref<JobBuilder>
			subject(subject:Ref<IdNameObject>):Ref<JobBuilder>
			headCount(headCount:int):Ref<JobBuilder>
			experience(experience:int):Ref<JobBuilder>
			expiryTime(expiryTime:int):Ref<JobBuilder>
			minSalary(minSalary:int):Ref<JobBuilder>
			maxSalary(maxSalary:int):Ref<JobBuilder>
			requiredDegree(requiredDegree:int):Ref<JobBuilder>
			cityList(cityList:Ref<CodeNameObject>[]):Ref<JobBuilder>
			jobAttribute(jobAttribute:int):Ref<JobBuilder>
			createTimestamp(createTimestamp:string):Ref<JobBuilder>
			updateTimestamp(updateTimestamp:string):Ref<JobBuilder>
			expiryTimestamp(expiryTimestamp:string):Ref<JobBuilder>
			targetMajorList(targetMajorList:Ref<TargetMajorInfo>[]):Ref<JobBuilder>
			build():Ref<Job>
	}
	export interface JobCategory extends Struct<JobCategory>{

			id:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
			activeStatus:Ref<int>
	}
	export interface JobCategoryBuilder extends Struct<JobCategoryBuilder>{

			id(id:string):Ref<JobCategoryBuilder>
			zhName(zhName:string):Ref<JobCategoryBuilder>
			enName(enName:string):Ref<JobCategoryBuilder>
			activeStatus(activeStatus:int):Ref<JobCategoryBuilder>
			build():Ref<JobCategory>
	}
	export interface JobCity extends Struct<JobCity>{

			cityCode:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
	}
	export interface JobCityBuilder extends Struct<JobCityBuilder>{

			cityCode(cityCode:string):Ref<JobCityBuilder>
			zhName(zhName:string):Ref<JobCityBuilder>
			enName(enName:string):Ref<JobCityBuilder>
			build():Ref<JobCity>
	}
	export interface JobConfig extends Struct<JobConfig>{

			offerApplySchemaId:Ref<string>
			offerProcessConf:Ref<string>
			recommendedEvaluatorIdList:string[]
			updateOptionList:int[]
			assessmentTemplateBizId:Ref<string>
			interviewRoundConfList:Ref<JobConfigInterviewRoundConf>[]
			jrIdList:string[]
			interviewRegistrationSchemaId:Ref<string>
			onboardRegistrationSchemaId:Ref<string>
			interviewRoundTypeConfList:Ref<JobConfigRoundType>[]
			relatedJobIdList:string[]
			interviewAppointmentConfig:Ref<InterviewAppointmentConfig>
	}
	export interface JobConfigBuilder extends Struct<JobConfigBuilder>{

			offerApplySchemaId(offerApplySchemaId:string):Ref<JobConfigBuilder>
			offerProcessConf(offerProcessConf:string):Ref<JobConfigBuilder>
			recommendedEvaluatorIdList(recommendedEvaluatorIdList:string[]):Ref<JobConfigBuilder>
			updateOptionList(updateOptionList:int[]):Ref<JobConfigBuilder>
			assessmentTemplateBizId(assessmentTemplateBizId:string):Ref<JobConfigBuilder>
			interviewRoundConfList(interviewRoundConfList:Ref<JobConfigInterviewRoundConf>[]):Ref<JobConfigBuilder>
			jrIdList(jrIdList:string[]):Ref<JobConfigBuilder>
			interviewRegistrationSchemaId(interviewRegistrationSchemaId:string):Ref<JobConfigBuilder>
			onboardRegistrationSchemaId(onboardRegistrationSchemaId:string):Ref<JobConfigBuilder>
			interviewRoundTypeConfList(interviewRoundTypeConfList:Ref<JobConfigRoundType>[]):Ref<JobConfigBuilder>
			relatedJobIdList(relatedJobIdList:string[]):Ref<JobConfigBuilder>
			interviewAppointmentConfig(interviewAppointmentConfig:Ref<InterviewAppointmentConfig>):Ref<JobConfigBuilder>
			build():Ref<JobConfig>
	}
	export interface JobConfigInterviewRound extends Struct<JobConfigInterviewRound>{

			interviewerList:Ref<IdNameObject>[]
			round:Ref<int>
	}
	export interface JobConfigInterviewRoundBuilder extends Struct<JobConfigInterviewRoundBuilder>{

			interviewerList(interviewerList:Ref<IdNameObject>[]):Ref<JobConfigInterviewRoundBuilder>
			round(round:int):Ref<JobConfigInterviewRoundBuilder>
			build():Ref<JobConfigInterviewRound>
	}
	export interface JobConfigInterviewRoundConf extends Struct<JobConfigInterviewRoundConf>{

			interviewerIdList:string[]
			round:Ref<int>
	}
	export interface JobConfigInterviewRoundConfBuilder extends Struct<JobConfigInterviewRoundConfBuilder>{

			interviewerIdList(interviewerIdList:string[]):Ref<JobConfigInterviewRoundConfBuilder>
			round(round:int):Ref<JobConfigInterviewRoundConfBuilder>
			build():Ref<JobConfigInterviewRoundConf>
	}
	export interface JobConfigResult extends Struct<JobConfigResult>{

			offerApplySchema:Ref<IdNameObject>
			offerProcessConf:Ref<IdNameObject>
			recommendedEvaluatorList:Ref<IdNameObject>[]
			assessmentTemplate:Ref<IdNameObject>
			id:Ref<string>
			interviewRoundList:Ref<JobConfigInterviewRound>[]
			jobRequirementList:Ref<IdNameObject>[]
			interviewRegistration:Ref<RegistrationInfo>
			onboardRegistration:Ref<RegistrationInfo>
			interviewRoundTypeList:Ref<JobConfigRoundTypeResult>[]
			relatedJobList:Ref<IdNameObject>[]
			jobAttribute:Ref<int>
			interviewAppointmentConfig:Ref<InterviewAppointmentConfig>
	}
	export interface JobConfigResultBuilder extends Struct<JobConfigResultBuilder>{

			offerApplySchema(offerApplySchema:Ref<IdNameObject>):Ref<JobConfigResultBuilder>
			offerProcessConf(offerProcessConf:Ref<IdNameObject>):Ref<JobConfigResultBuilder>
			recommendedEvaluatorList(recommendedEvaluatorList:Ref<IdNameObject>[]):Ref<JobConfigResultBuilder>
			assessmentTemplate(assessmentTemplate:Ref<IdNameObject>):Ref<JobConfigResultBuilder>
			id(id:string):Ref<JobConfigResultBuilder>
			interviewRoundList(interviewRoundList:Ref<JobConfigInterviewRound>[]):Ref<JobConfigResultBuilder>
			jobRequirementList(jobRequirementList:Ref<IdNameObject>[]):Ref<JobConfigResultBuilder>
			interviewRegistration(interviewRegistration:Ref<RegistrationInfo>):Ref<JobConfigResultBuilder>
			onboardRegistration(onboardRegistration:Ref<RegistrationInfo>):Ref<JobConfigResultBuilder>
			interviewRoundTypeList(interviewRoundTypeList:Ref<JobConfigRoundTypeResult>[]):Ref<JobConfigResultBuilder>
			relatedJobList(relatedJobList:Ref<IdNameObject>[]):Ref<JobConfigResultBuilder>
			jobAttribute(jobAttribute:int):Ref<JobConfigResultBuilder>
			interviewAppointmentConfig(interviewAppointmentConfig:Ref<InterviewAppointmentConfig>):Ref<JobConfigResultBuilder>
			build():Ref<JobConfigResult>
	}
	export interface JobConfigRoundType extends Struct<JobConfigRoundType>{

			roundBizId:Ref<string>
			assessmentTemplateBizId:Ref<string>
	}
	export interface JobConfigRoundTypeBuilder extends Struct<JobConfigRoundTypeBuilder>{

			roundBizId(roundBizId:string):Ref<JobConfigRoundTypeBuilder>
			assessmentTemplateBizId(assessmentTemplateBizId:string):Ref<JobConfigRoundTypeBuilder>
			build():Ref<JobConfigRoundType>
	}
	export interface JobConfigRoundTypeResult extends Struct<JobConfigRoundTypeResult>{

			assessmentRound:Ref<IdNameObject>
			assessmentTemplate:Ref<IdNameObject>
	}
	export interface JobConfigRoundTypeResultBuilder extends Struct<JobConfigRoundTypeResultBuilder>{

			assessmentRound(assessmentRound:Ref<IdNameObject>):Ref<JobConfigRoundTypeResultBuilder>
			assessmentTemplate(assessmentTemplate:Ref<IdNameObject>):Ref<JobConfigRoundTypeResultBuilder>
			build():Ref<JobConfigRoundTypeResult>
	}
	export interface JobCustomizedData extends Struct<JobCustomizedData>{

			objectId:Ref<string>
			name:Ref<I18n>
			objectType:Ref<int>
			value:Ref<JobCustomizedValue>
	}
	export interface JobCustomizedDataBuilder extends Struct<JobCustomizedDataBuilder>{

			objectId(objectId:string):Ref<JobCustomizedDataBuilder>
			name(name:Ref<I18n>):Ref<JobCustomizedDataBuilder>
			objectType(objectType:int):Ref<JobCustomizedDataBuilder>
			value(value:Ref<JobCustomizedValue>):Ref<JobCustomizedDataBuilder>
			build():Ref<JobCustomizedData>
	}
	export interface JobCustomizedOption extends Struct<JobCustomizedOption>{

			key:Ref<string>
			name:Ref<I18n>
	}
	export interface JobCustomizedOptionBuilder extends Struct<JobCustomizedOptionBuilder>{

			key(key:string):Ref<JobCustomizedOptionBuilder>
			name(name:Ref<I18n>):Ref<JobCustomizedOptionBuilder>
			build():Ref<JobCustomizedOption>
	}
	export interface JobCustomizedTimeRange extends Struct<JobCustomizedTimeRange>{

			startTime:Ref<string>
			endTime:Ref<string>
	}
	export interface JobCustomizedTimeRangeBuilder extends Struct<JobCustomizedTimeRangeBuilder>{

			startTime(startTime:string):Ref<JobCustomizedTimeRangeBuilder>
			endTime(endTime:string):Ref<JobCustomizedTimeRangeBuilder>
			build():Ref<JobCustomizedTimeRange>
	}
	export interface JobCustomizedValue extends Struct<JobCustomizedValue>{

			content:Ref<string>
			option:Ref<JobCustomizedOption>
			optionList:Ref<JobCustomizedOption>[]
			timeRange:Ref<JobCustomizedTimeRange>
			time:Ref<string>
			number:Ref<string>
	}
	export interface JobCustomizedValueBuilder extends Struct<JobCustomizedValueBuilder>{

			content(content:string):Ref<JobCustomizedValueBuilder>
			option(option:Ref<JobCustomizedOption>):Ref<JobCustomizedValueBuilder>
			optionList(optionList:Ref<JobCustomizedOption>[]):Ref<JobCustomizedValueBuilder>
			timeRange(timeRange:Ref<JobCustomizedTimeRange>):Ref<JobCustomizedValueBuilder>
			time(time:string):Ref<JobCustomizedValueBuilder>
			number(number:string):Ref<JobCustomizedValueBuilder>
			build():Ref<JobCustomizedValue>
	}
	export interface JobDepartment extends Struct<JobDepartment>{

			id:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
	}
	export interface JobDepartmentBuilder extends Struct<JobDepartmentBuilder>{

			id(id:string):Ref<JobDepartmentBuilder>
			zhName(zhName:string):Ref<JobDepartmentBuilder>
			enName(enName:string):Ref<JobDepartmentBuilder>
			build():Ref<JobDepartment>
	}
	//"job_family_id"
	export const JobFamilyIdTypeCombinedCreateJobJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypeCombinedCreateJobPeopleAdminJobCategoryId:string
	//"job_family_id"
	export const JobFamilyIdTypeCombinedUpdateJobJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypeCombinedUpdateJobPeopleAdminJobCategoryId:string
	//"job_family_id"
	export const JobFamilyIdTypeCreateJobRequirementJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypeCreateJobRequirementPeopleAdminJobCategoryId:string
	//"job_family_id"
	export const JobFamilyIdTypeCreateOfferJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypeCreateOfferPeopleAdminJobCategoryId:string
	//"job_family_id"
	export const JobFamilyIdTypeGetByApplicationEmployeeJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypeGetByApplicationEmployeePeopleAdminJobCategoryId:string
	//"job_family_id"
	export const JobFamilyIdTypeGetEmployeeJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypeGetEmployeePeopleAdminJobCategoryId:string
	//"job_family_id"
	export const JobFamilyIdTypeGetJobJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypeGetJobPeopleAdminJobCategoryId:string
	//"job_family_id"
	export const JobFamilyIdTypeGetOfferJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypeGetOfferPeopleAdminJobCategoryId:string
	//"job_family_id"
	export const JobFamilyIdTypeJobFamilyId:string
	//"job_family_id"
	export const JobFamilyIdTypeListByIdJobRequirementJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypeListByIdJobRequirementPeopleAdminJobCategoryId:string
	//"job_family_id"
	export const JobFamilyIdTypeListJobJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypeListJobPeopleAdminJobCategoryId:string
	//"job_family_id"
	export const JobFamilyIdTypeListJobRequirementJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypeListJobRequirementPeopleAdminJobCategoryId:string
	//"job_family_id"
	export const JobFamilyIdTypePatchEmployeeJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypePatchEmployeePeopleAdminJobCategoryId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypePeopleAdminJobCategoryId:string
	//"job_family_id"
	export const JobFamilyIdTypeSearchJobPublishRecordJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypeSearchJobPublishRecordPeopleAdminJobCategoryId:string
	//"job_family_id"
	export const JobFamilyIdTypeTransferOnboardApplicationJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypeTransferOnboardApplicationPeopleAdminJobCategoryId:string
	//"job_family_id"
	export const JobFamilyIdTypeUpdateJobRequirementJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypeUpdateJobRequirementPeopleAdminJobCategoryId:string
	//"job_family_id"
	export const JobFamilyIdTypeUpdateOfferJobFamilyId:string
	//"people_admin_job_category_id"
	export const JobFamilyIdTypeUpdateOfferPeopleAdminJobCategoryId:string
	export interface JobFunction extends Struct<JobFunction>{

			id:Ref<string>
			name:Ref<I18n>
			activeStatus:Ref<int>
			parentId:Ref<string>
	}
	export interface JobFunctionBuilder extends Struct<JobFunctionBuilder>{

			id(id:string):Ref<JobFunctionBuilder>
			name(name:Ref<I18n>):Ref<JobFunctionBuilder>
			activeStatus(activeStatus:int):Ref<JobFunctionBuilder>
			parentId(parentId:string):Ref<JobFunctionBuilder>
			build():Ref<JobFunction>
	}
	export interface JobHighlight extends Struct<JobHighlight>{

			id:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
	}
	export interface JobHighlightBuilder extends Struct<JobHighlightBuilder>{

			id(id:string):Ref<JobHighlightBuilder>
			zhName(zhName:string):Ref<JobHighlightBuilder>
			enName(enName:string):Ref<JobHighlightBuilder>
			build():Ref<JobHighlight>
	}
	export interface JobLevel extends Struct<JobLevel>{

			id:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
			activeStatus:Ref<int>
	}
	export interface JobLevelBuilder extends Struct<JobLevelBuilder>{

			id(id:string):Ref<JobLevelBuilder>
			zhName(zhName:string):Ref<JobLevelBuilder>
			enName(enName:string):Ref<JobLevelBuilder>
			activeStatus(activeStatus:int):Ref<JobLevelBuilder>
			build():Ref<JobLevel>
	}
	//"job_level_id"
	export const JobLevelIdTypeCombinedCreateJobJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeCombinedCreateJobPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeCombinedUpdateJobJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeCombinedUpdateJobPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeCreateJobRequirementJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeCreateJobRequirementPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeCreateOfferJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeCreateOfferPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeGetByApplicationEmployeeJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeGetByApplicationEmployeePeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeGetByTalentInterviewJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeGetByTalentInterviewPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeGetEmployeeJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeGetEmployeePeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeGetJobJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeGetJobPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeGetOfferJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeGetOfferPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeGetReferralWebsiteJobPostJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeGetReferralWebsiteJobPostPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeGetWebsiteJobPostJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeGetWebsiteJobPostPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeListApplicationInterviewJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeListApplicationInterviewPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeListByIdJobRequirementJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeListByIdJobRequirementPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeListInterviewJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeListInterviewPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeListJobJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeListJobPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeListJobRequirementJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeListJobRequirementPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeListReferralWebsiteJobPostJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeListReferralWebsiteJobPostPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeListWebsiteJobPostJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeListWebsiteJobPostPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypePatchEmployeeJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypePatchEmployeePeopleAdminJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypePeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeSearchJobPublishRecordJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeSearchJobPublishRecordPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeSearchWebsiteJobPostJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeSearchWebsiteJobPostPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeTransferOnboardApplicationJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeTransferOnboardApplicationPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeUpdateJobRequirementJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeUpdateJobRequirementPeopleAdminJobLevelId:string
	//"job_level_id"
	export const JobLevelIdTypeUpdateOfferJobLevelId:string
	//"people_admin_job_level_id"
	export const JobLevelIdTypeUpdateOfferPeopleAdminJobLevelId:string
	export interface JobManager extends Struct<JobManager>{

			id:Ref<string>
			recruiterId:Ref<string>
			hiringManagerIdList:string[]
			assistantIdList:string[]
	}
	export interface JobManagerBuilder extends Struct<JobManagerBuilder>{

			id(id:string):Ref<JobManagerBuilder>
			recruiterId(recruiterId:string):Ref<JobManagerBuilder>
			hiringManagerIdList(hiringManagerIdList:string[]):Ref<JobManagerBuilder>
			assistantIdList(assistantIdList:string[]):Ref<JobManagerBuilder>
			build():Ref<JobManager>
	}
	export interface JobProcess extends Struct<JobProcess>{

			yourPropertyName:Ref<string>
	}
	export interface JobProcessBuilder extends Struct<JobProcessBuilder>{

			yourPropertyName(yourPropertyName:string):Ref<JobProcessBuilder>
			build():Ref<JobProcess>
	}
	export interface JobProcesses extends Struct<JobProcesses>{

			id:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
			type:Ref<int>
			stageList:Ref<JobProcessesStage>[]
	}
	export interface JobProcessesBuilder extends Struct<JobProcessesBuilder>{

			id(id:string):Ref<JobProcessesBuilder>
			zhName(zhName:string):Ref<JobProcessesBuilder>
			enName(enName:string):Ref<JobProcessesBuilder>
			type(type_:int):Ref<JobProcessesBuilder>
			stageList(stageList:Ref<JobProcessesStage>[]):Ref<JobProcessesBuilder>
			build():Ref<JobProcesses>
	}
	export interface JobProcessesStage extends Struct<JobProcessesStage>{

			id:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
			type:Ref<int>
	}
	export interface JobProcessesStageBuilder extends Struct<JobProcessesStageBuilder>{

			id(id:string):Ref<JobProcessesStageBuilder>
			zhName(zhName:string):Ref<JobProcessesStageBuilder>
			enName(enName:string):Ref<JobProcessesStageBuilder>
			type(type_:int):Ref<JobProcessesStageBuilder>
			build():Ref<JobProcessesStage>
	}
	export interface JobRecruiter extends Struct<JobRecruiter>{

			id:Ref<string>
			recruiterId:Ref<string>
			hiringManagerIdList:string[]
			assistantIdList:string[]
	}
	export interface JobRecruiter2 extends Struct<JobRecruiter2>{

			id:Ref<string>
			recruiterId:Ref<string>
			hiringManagerIdList:string[]
			assistantIdList:string[]
	}
	export interface JobRecruiter2Builder extends Struct<JobRecruiter2Builder>{

			id(id:string):Ref<JobRecruiter2Builder>
			recruiterId(recruiterId:string):Ref<JobRecruiter2Builder>
			hiringManagerIdList(hiringManagerIdList:string[]):Ref<JobRecruiter2Builder>
			assistantIdList(assistantIdList:string[]):Ref<JobRecruiter2Builder>
			build():Ref<JobRecruiter2>
	}
	export interface JobRecruiterBuilder extends Struct<JobRecruiterBuilder>{

			id(id:string):Ref<JobRecruiterBuilder>
			recruiterId(recruiterId:string):Ref<JobRecruiterBuilder>
			hiringManagerIdList(hiringManagerIdList:string[]):Ref<JobRecruiterBuilder>
			assistantIdList(assistantIdList:string[]):Ref<JobRecruiterBuilder>
			build():Ref<JobRecruiter>
	}
	export interface JobRecruitmentType extends Struct<JobRecruitmentType>{

			id:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
			activeStatus:Ref<int>
	}
	export interface JobRecruitmentTypeBuilder extends Struct<JobRecruitmentTypeBuilder>{

			id(id:string):Ref<JobRecruitmentTypeBuilder>
			zhName(zhName:string):Ref<JobRecruitmentTypeBuilder>
			enName(enName:string):Ref<JobRecruitmentTypeBuilder>
			activeStatus(activeStatus:int):Ref<JobRecruitmentTypeBuilder>
			build():Ref<JobRecruitmentType>
	}
	//2
	export const JobRecruitmentTypeCampusRecruitment:int
	//1
	export const JobRecruitmentTypeSocialRecruitment:int
	//2
	export const JobRecruitmentTypeUpdateExternalApplicationCampusRecruitment:int
	//1
	export const JobRecruitmentTypeUpdateExternalApplicationSocialRecruitment:int
	export interface JobRequirement extends Struct<JobRequirement>{

			shortCode:Ref<string>
			name:Ref<string>
			displayProgress:Ref<int>
			headCount:Ref<int>
			recruitmentTypeId:Ref<string>
			employeeTypeId:Ref<string>
			maxLevelId:Ref<string>
			minLevelId:Ref<string>
			sequenceId:Ref<string>
			category:Ref<int>
			departmentId:Ref<string>
			recruiterIdList:string[]
			jrHiringManagerIdList:string[]
			directLeaderIdList:string[]
			startTime:Ref<string>
			deadline:Ref<string>
			priority:Ref<int>
			requiredDegree:Ref<int>
			maxSalary:Ref<string>
			minSalary:Ref<string>
			addressId:Ref<string>
			description:Ref<string>
			customizedDataList:Ref<JobRequirementCustomizedData>[]
			processType:Ref<int>
			jobTypeId:Ref<string>
	}
	export interface JobRequirementBuilder extends Struct<JobRequirementBuilder>{

			shortCode(shortCode:string):Ref<JobRequirementBuilder>
			name(name:string):Ref<JobRequirementBuilder>
			displayProgress(displayProgress:int):Ref<JobRequirementBuilder>
			headCount(headCount:int):Ref<JobRequirementBuilder>
			recruitmentTypeId(recruitmentTypeId:string):Ref<JobRequirementBuilder>
			employeeTypeId(employeeTypeId:string):Ref<JobRequirementBuilder>
			maxLevelId(maxLevelId:string):Ref<JobRequirementBuilder>
			minLevelId(minLevelId:string):Ref<JobRequirementBuilder>
			sequenceId(sequenceId:string):Ref<JobRequirementBuilder>
			category(category:int):Ref<JobRequirementBuilder>
			departmentId(departmentId:string):Ref<JobRequirementBuilder>
			recruiterIdList(recruiterIdList:string[]):Ref<JobRequirementBuilder>
			jrHiringManagerIdList(jrHiringManagerIdList:string[]):Ref<JobRequirementBuilder>
			directLeaderIdList(directLeaderIdList:string[]):Ref<JobRequirementBuilder>
			startTime(startTime:string):Ref<JobRequirementBuilder>
			deadline(deadline:string):Ref<JobRequirementBuilder>
			priority(priority:int):Ref<JobRequirementBuilder>
			requiredDegree(requiredDegree:int):Ref<JobRequirementBuilder>
			maxSalary(maxSalary:string):Ref<JobRequirementBuilder>
			minSalary(minSalary:string):Ref<JobRequirementBuilder>
			addressId(addressId:string):Ref<JobRequirementBuilder>
			description(description:string):Ref<JobRequirementBuilder>
			customizedDataList(customizedDataList:Ref<JobRequirementCustomizedData>[]):Ref<JobRequirementBuilder>
			processType(processType:int):Ref<JobRequirementBuilder>
			jobTypeId(jobTypeId:string):Ref<JobRequirementBuilder>
			build():Ref<JobRequirement>
	}
	export interface JobRequirementCustomizedData extends Struct<JobRequirementCustomizedData>{

			objectId:Ref<string>
			value:Ref<string>
	}
	export interface JobRequirementCustomizedDataBuilder extends Struct<JobRequirementCustomizedDataBuilder>{

			objectId(objectId:string):Ref<JobRequirementCustomizedDataBuilder>
			value(value:string):Ref<JobRequirementCustomizedDataBuilder>
			build():Ref<JobRequirementCustomizedData>
	}
	export interface JobRequirementCustomizedDataDto extends Struct<JobRequirementCustomizedDataDto>{

			objectId:Ref<string>
			name:Ref<I18n>
			objectType:Ref<int>
			value:Ref<JobRequirementCustomizedValue>
	}
	export interface JobRequirementCustomizedDataDtoBuilder extends Struct<JobRequirementCustomizedDataDtoBuilder>{

			objectId(objectId:string):Ref<JobRequirementCustomizedDataDtoBuilder>
			name(name:Ref<I18n>):Ref<JobRequirementCustomizedDataDtoBuilder>
			objectType(objectType:int):Ref<JobRequirementCustomizedDataDtoBuilder>
			value(value:Ref<JobRequirementCustomizedValue>):Ref<JobRequirementCustomizedDataDtoBuilder>
			build():Ref<JobRequirementCustomizedDataDto>
	}
	export interface JobRequirementCustomizedOption extends Struct<JobRequirementCustomizedOption>{

			key:Ref<string>
			name:Ref<I18n>
	}
	export interface JobRequirementCustomizedOptionBuilder extends Struct<JobRequirementCustomizedOptionBuilder>{

			key(key:string):Ref<JobRequirementCustomizedOptionBuilder>
			name(name:Ref<I18n>):Ref<JobRequirementCustomizedOptionBuilder>
			build():Ref<JobRequirementCustomizedOption>
	}
	export interface JobRequirementCustomizedTimeRange extends Struct<JobRequirementCustomizedTimeRange>{

			startTime:Ref<string>
			endTime:Ref<string>
	}
	export interface JobRequirementCustomizedTimeRangeBuilder extends Struct<JobRequirementCustomizedTimeRangeBuilder>{

			startTime(startTime:string):Ref<JobRequirementCustomizedTimeRangeBuilder>
			endTime(endTime:string):Ref<JobRequirementCustomizedTimeRangeBuilder>
			build():Ref<JobRequirementCustomizedTimeRange>
	}
	export interface JobRequirementCustomizedValue extends Struct<JobRequirementCustomizedValue>{

			content:Ref<string>
			option:Ref<JobRequirementCustomizedOption>
			optionList:Ref<JobRequirementCustomizedOption>[]
			timeRange:Ref<JobRequirementCustomizedTimeRange>
			time:Ref<string>
			number:Ref<string>
	}
	export interface JobRequirementCustomizedValueBuilder extends Struct<JobRequirementCustomizedValueBuilder>{

			content(content:string):Ref<JobRequirementCustomizedValueBuilder>
			option(option:Ref<JobRequirementCustomizedOption>):Ref<JobRequirementCustomizedValueBuilder>
			optionList(optionList:Ref<JobRequirementCustomizedOption>[]):Ref<JobRequirementCustomizedValueBuilder>
			timeRange(timeRange:Ref<JobRequirementCustomizedTimeRange>):Ref<JobRequirementCustomizedValueBuilder>
			time(time:string):Ref<JobRequirementCustomizedValueBuilder>
			number(number:string):Ref<JobRequirementCustomizedValueBuilder>
			build():Ref<JobRequirementCustomizedValue>
	}
	export interface JobRequirementDto extends Struct<JobRequirementDto>{

			id:Ref<string>
			shortCode:Ref<string>
			name:Ref<string>
			displayProgress:Ref<int>
			headCount:Ref<int>
			recruitmentType:Ref<IdNameObject>
			employeeType:Ref<IdNameObject>
			maxLevel:Ref<IdNameObject>
			minLevel:Ref<IdNameObject>
			sequence:Ref<IdNameObject>
			category:Ref<int>
			department:Ref<IdNameObject>
			recruiterList:Ref<IdNameObject>[]
			jrHiringManagers:Ref<IdNameObject>[]
			directLeaderList:Ref<IdNameObject>[]
			startTime:Ref<string>
			deadline:Ref<string>
			priority:Ref<int>
			requiredDegree:Ref<int>
			maxSalary:Ref<string>
			minSalary:Ref<string>
			address:Ref<IdNameObject>
			description:Ref<string>
			customizedDataList:Ref<JobRequirementCustomizedDataDto>[]
			jobIdList:string[]
			processType:Ref<int>
			jobType:Ref<JobTypeInfo>
			createTime:Ref<string>
			creatorId:Ref<string>
			updateTime:Ref<string>
	}
	export interface JobRequirementDtoBuilder extends Struct<JobRequirementDtoBuilder>{

			id(id:string):Ref<JobRequirementDtoBuilder>
			shortCode(shortCode:string):Ref<JobRequirementDtoBuilder>
			name(name:string):Ref<JobRequirementDtoBuilder>
			displayProgress(displayProgress:int):Ref<JobRequirementDtoBuilder>
			headCount(headCount:int):Ref<JobRequirementDtoBuilder>
			recruitmentType(recruitmentType:Ref<IdNameObject>):Ref<JobRequirementDtoBuilder>
			employeeType(employeeType:Ref<IdNameObject>):Ref<JobRequirementDtoBuilder>
			maxLevel(maxLevel:Ref<IdNameObject>):Ref<JobRequirementDtoBuilder>
			minLevel(minLevel:Ref<IdNameObject>):Ref<JobRequirementDtoBuilder>
			sequence(sequence:Ref<IdNameObject>):Ref<JobRequirementDtoBuilder>
			category(category:int):Ref<JobRequirementDtoBuilder>
			department(department:Ref<IdNameObject>):Ref<JobRequirementDtoBuilder>
			recruiterList(recruiterList:Ref<IdNameObject>[]):Ref<JobRequirementDtoBuilder>
			jrHiringManagers(jrHiringManagers:Ref<IdNameObject>[]):Ref<JobRequirementDtoBuilder>
			directLeaderList(directLeaderList:Ref<IdNameObject>[]):Ref<JobRequirementDtoBuilder>
			startTime(startTime:string):Ref<JobRequirementDtoBuilder>
			deadline(deadline:string):Ref<JobRequirementDtoBuilder>
			priority(priority:int):Ref<JobRequirementDtoBuilder>
			requiredDegree(requiredDegree:int):Ref<JobRequirementDtoBuilder>
			maxSalary(maxSalary:string):Ref<JobRequirementDtoBuilder>
			minSalary(minSalary:string):Ref<JobRequirementDtoBuilder>
			address(address:Ref<IdNameObject>):Ref<JobRequirementDtoBuilder>
			description(description:string):Ref<JobRequirementDtoBuilder>
			customizedDataList(customizedDataList:Ref<JobRequirementCustomizedDataDto>[]):Ref<JobRequirementDtoBuilder>
			jobIdList(jobIdList:string[]):Ref<JobRequirementDtoBuilder>
			processType(processType:int):Ref<JobRequirementDtoBuilder>
			jobType(jobType:Ref<JobTypeInfo>):Ref<JobRequirementDtoBuilder>
			createTime(createTime:string):Ref<JobRequirementDtoBuilder>
			creatorId(creatorId:string):Ref<JobRequirementDtoBuilder>
			updateTime(updateTime:string):Ref<JobRequirementDtoBuilder>
			build():Ref<JobRequirementDto>
	}
	export interface JobRequirementSchema extends Struct<JobRequirementSchema>{

			id:Ref<string>
			name:Ref<I18n>
			objectList:Ref<CommonSchema>[]
	}
	export interface JobRequirementSchemaBuilder extends Struct<JobRequirementSchemaBuilder>{

			id(id:string):Ref<JobRequirementSchemaBuilder>
			name(name:Ref<I18n>):Ref<JobRequirementSchemaBuilder>
			objectList(objectList:Ref<CommonSchema>[]):Ref<JobRequirementSchemaBuilder>
			build():Ref<JobRequirementSchema>
	}
	export interface JobSchema extends Struct<JobSchema>{

			id:Ref<string>
			name:Ref<I18n>
			scenarioType:Ref<int>
			objectList:Ref<CommonSchema>[]
	}
	export interface JobSchemaBuilder extends Struct<JobSchemaBuilder>{

			id(id:string):Ref<JobSchemaBuilder>
			name(name:Ref<I18n>):Ref<JobSchemaBuilder>
			scenarioType(scenarioType:int):Ref<JobSchemaBuilder>
			objectList(objectList:Ref<CommonSchema>[]):Ref<JobSchemaBuilder>
			build():Ref<JobSchema>
	}
	export interface JobType extends Struct<JobType>{

			id:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
	}
	export interface JobTypeBuilder extends Struct<JobTypeBuilder>{

			id(id:string):Ref<JobTypeBuilder>
			zhName(zhName:string):Ref<JobTypeBuilder>
			enName(enName:string):Ref<JobTypeBuilder>
			build():Ref<JobType>
	}
	export interface JobTypeInfo extends Struct<JobTypeInfo>{

			id:Ref<string>
			name:Ref<I18n>
			parentId:Ref<string>
	}
	export interface JobTypeInfoBuilder extends Struct<JobTypeInfoBuilder>{

			id(id:string):Ref<JobTypeInfoBuilder>
			name(name:Ref<I18n>):Ref<JobTypeInfoBuilder>
			parentId(parentId:string):Ref<JobTypeInfoBuilder>
			build():Ref<JobTypeInfo>
	}
	//2
	export const LanguageEn:int
	export interface LanguageInfo extends Struct<LanguageInfo>{

			language:Ref<int>
			proficiency:Ref<int>
	}
	export interface LanguageInfoBuilder extends Struct<LanguageInfoBuilder>{

			language(language:int):Ref<LanguageInfoBuilder>
			proficiency(proficiency:int):Ref<LanguageInfoBuilder>
			build():Ref<LanguageInfo>
	}
	//1
	export const LanguageZh:int
	export interface Level extends Struct<Level>{

			id:Ref<string>
			name:Ref<string>
			enName:Ref<string>
	}
	export interface LevelBuilder extends Struct<LevelBuilder>{

			id(id:string):Ref<LevelBuilder>
			name(name:string):Ref<LevelBuilder>
			enName(enName:string):Ref<LevelBuilder>
			build():Ref<Level>
	}
	export interface ListApplicationInterviewReq extends Struct<ListApplicationInterviewReq>{

	}
	export interface ListApplicationInterviewReqBuilder extends Struct<ListApplicationInterviewReqBuilder>{

			applicationId(applicationId:string):Ref<ListApplicationInterviewReqBuilder>
			pageSize(pageSize:int):Ref<ListApplicationInterviewReqBuilder>
			pageToken(pageToken:string):Ref<ListApplicationInterviewReqBuilder>
			userIdType(userIdType:string):Ref<ListApplicationInterviewReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<ListApplicationInterviewReqBuilder>
			build():Ref<ListApplicationInterviewReq>
	}
	export interface ListApplicationInterviewResp extends Struct<ListApplicationInterviewResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListApplicationInterviewRespData>
			success():bool
	}
	export interface ListApplicationInterviewRespData extends Struct<ListApplicationInterviewRespData>{

			pageToken:Ref<string>
			hasMore:Ref<bool>
			items:Ref<Interview>[]
	}
	export interface ListApplicationReq extends Struct<ListApplicationReq>{

	}
	export interface ListApplicationReqBuilder extends Struct<ListApplicationReqBuilder>{

			processId(processId:string):Ref<ListApplicationReqBuilder>
			stageId(stageId:string):Ref<ListApplicationReqBuilder>
			talentId(talentId:string):Ref<ListApplicationReqBuilder>
			activeStatus(activeStatus:string):Ref<ListApplicationReqBuilder>
			jobId(jobId:string):Ref<ListApplicationReqBuilder>
			pageToken(pageToken:string):Ref<ListApplicationReqBuilder>
			pageSize(pageSize:int):Ref<ListApplicationReqBuilder>
			updateStartTime(updateStartTime:string):Ref<ListApplicationReqBuilder>
			updateEndTime(updateEndTime:string):Ref<ListApplicationReqBuilder>
			build():Ref<ListApplicationReq>
	}
	export interface ListApplicationResp extends Struct<ListApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListApplicationRespData>
			success():bool
	}
	export interface ListApplicationRespData extends Struct<ListApplicationRespData>{

			items:string[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface ListBackgroundCheckOrderReq extends Struct<ListBackgroundCheckOrderReq>{

	}
	export interface ListBackgroundCheckOrderReqBuilder extends Struct<ListBackgroundCheckOrderReqBuilder>{

			userIdType(userIdType:string):Ref<ListBackgroundCheckOrderReqBuilder>
			pageToken(pageToken:string):Ref<ListBackgroundCheckOrderReqBuilder>
			pageSize(pageSize:int):Ref<ListBackgroundCheckOrderReqBuilder>
			applicationId(applicationId:string):Ref<ListBackgroundCheckOrderReqBuilder>
			updateStartTime(updateStartTime:string):Ref<ListBackgroundCheckOrderReqBuilder>
			updateEndTime(updateEndTime:string):Ref<ListBackgroundCheckOrderReqBuilder>
			build():Ref<ListBackgroundCheckOrderReq>
	}
	export interface ListBackgroundCheckOrderResp extends Struct<ListBackgroundCheckOrderResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListBackgroundCheckOrderRespData>
			success():bool
	}
	export interface ListBackgroundCheckOrderRespData extends Struct<ListBackgroundCheckOrderRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<BackgroundCheckOrder>[]
	}
	export interface ListByIdJobRequirementPathReqBodyBuilder extends Struct<ListByIdJobRequirementPathReqBodyBuilder>{

			idList(idList:string[]):Ref<ListByIdJobRequirementPathReqBodyBuilder>
			build():Ref<ListByIdJobRequirementReqBody>
	}
	export interface ListByIdJobRequirementReq extends Struct<ListByIdJobRequirementReq>{

			body:Ref<ListByIdJobRequirementReqBody>
	}
	export interface ListByIdJobRequirementReqBody extends Struct<ListByIdJobRequirementReqBody>{

			idList:string[]
	}
	export interface ListByIdJobRequirementReqBodyBuilder extends Struct<ListByIdJobRequirementReqBodyBuilder>{

			idList(idList:string[]):Ref<ListByIdJobRequirementReqBodyBuilder>
			build():Ref<ListByIdJobRequirementReqBody>
	}
	export interface ListByIdJobRequirementReqBuilder extends Struct<ListByIdJobRequirementReqBuilder>{

			userIdType(userIdType:string):Ref<ListByIdJobRequirementReqBuilder>
			departmentIdType(departmentIdType:string):Ref<ListByIdJobRequirementReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<ListByIdJobRequirementReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<ListByIdJobRequirementReqBuilder>
			employeeTypeIdType(employeeTypeIdType:string):Ref<ListByIdJobRequirementReqBuilder>
			body(body:Ref<ListByIdJobRequirementReqBody>):Ref<ListByIdJobRequirementReqBuilder>
			build():Ref<ListByIdJobRequirementReq>
	}
	export interface ListByIdJobRequirementResp extends Struct<ListByIdJobRequirementResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListByIdJobRequirementRespData>
			success():bool
	}
	export interface ListByIdJobRequirementRespData extends Struct<ListByIdJobRequirementRespData>{

			items:Ref<JobRequirementDto>[]
	}
	export interface ListEvaluationIterator extends Struct<ListEvaluationIterator>{

			next():[bool,Ref<Evaluation>]
			nextPageToken():Ref<string>
	}
	export interface ListEvaluationReq extends Struct<ListEvaluationReq>{

			limit:int
	}
	export interface ListEvaluationReqBuilder extends Struct<ListEvaluationReqBuilder>{

			limit(limit:int):Ref<ListEvaluationReqBuilder>
			pageToken(pageToken:string):Ref<ListEvaluationReqBuilder>
			pageSize(pageSize:int):Ref<ListEvaluationReqBuilder>
			applicationId(applicationId:string):Ref<ListEvaluationReqBuilder>
			updateStartTime(updateStartTime:string):Ref<ListEvaluationReqBuilder>
			updateEndTime(updateEndTime:string):Ref<ListEvaluationReqBuilder>
			userIdType(userIdType:string):Ref<ListEvaluationReqBuilder>
			build():Ref<ListEvaluationReq>
	}
	export interface ListEvaluationResp extends Struct<ListEvaluationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListEvaluationRespData>
			success():bool
	}
	export interface ListEvaluationRespData extends Struct<ListEvaluationRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<Evaluation>[]
	}
	export interface ListEvaluationTaskIterator extends Struct<ListEvaluationTaskIterator>{

			next():[bool,Ref<EvaluationTask>]
			nextPageToken():Ref<string>
	}
	export interface ListEvaluationTaskReq extends Struct<ListEvaluationTaskReq>{

			limit:int
	}
	export interface ListEvaluationTaskReqBuilder extends Struct<ListEvaluationTaskReqBuilder>{

			limit(limit:int):Ref<ListEvaluationTaskReqBuilder>
			pageSize(pageSize:int):Ref<ListEvaluationTaskReqBuilder>
			pageToken(pageToken:string):Ref<ListEvaluationTaskReqBuilder>
			userId(userId:string):Ref<ListEvaluationTaskReqBuilder>
			activityStatus(activityStatus:int):Ref<ListEvaluationTaskReqBuilder>
			userIdType(userIdType:string):Ref<ListEvaluationTaskReqBuilder>
			build():Ref<ListEvaluationTaskReq>
	}
	export interface ListEvaluationTaskResp extends Struct<ListEvaluationTaskResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListEvaluationTaskRespData>
			success():bool
	}
	export interface ListEvaluationTaskRespData extends Struct<ListEvaluationTaskRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<EvaluationTask>[]
	}
	export interface ListExamMarkingTaskIterator extends Struct<ListExamMarkingTaskIterator>{

			next():[bool,Ref<ExamMarkingTask>]
			nextPageToken():Ref<string>
	}
	export interface ListExamMarkingTaskReq extends Struct<ListExamMarkingTaskReq>{

			limit:int
	}
	export interface ListExamMarkingTaskReqBuilder extends Struct<ListExamMarkingTaskReqBuilder>{

			limit(limit:int):Ref<ListExamMarkingTaskReqBuilder>
			pageSize(pageSize:int):Ref<ListExamMarkingTaskReqBuilder>
			pageToken(pageToken:string):Ref<ListExamMarkingTaskReqBuilder>
			userId(userId:string):Ref<ListExamMarkingTaskReqBuilder>
			activityStatus(activityStatus:int):Ref<ListExamMarkingTaskReqBuilder>
			userIdType(userIdType:string):Ref<ListExamMarkingTaskReqBuilder>
			build():Ref<ListExamMarkingTaskReq>
	}
	export interface ListExamMarkingTaskResp extends Struct<ListExamMarkingTaskResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListExamMarkingTaskRespData>
			success():bool
	}
	export interface ListExamMarkingTaskRespData extends Struct<ListExamMarkingTaskRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<ExamMarkingTask>[]
	}
	export interface ListExternalApplicationIterator extends Struct<ListExternalApplicationIterator>{

			next():[bool,Ref<ExternalApplication>]
			nextPageToken():Ref<string>
	}
	export interface ListExternalApplicationReq extends Struct<ListExternalApplicationReq>{

			limit:int
	}
	export interface ListExternalApplicationReqBuilder extends Struct<ListExternalApplicationReqBuilder>{

			limit(limit:int):Ref<ListExternalApplicationReqBuilder>
			talentId(talentId:string):Ref<ListExternalApplicationReqBuilder>
			pageSize(pageSize:int):Ref<ListExternalApplicationReqBuilder>
			pageToken(pageToken:string):Ref<ListExternalApplicationReqBuilder>
			build():Ref<ListExternalApplicationReq>
	}
	export interface ListExternalApplicationResp extends Struct<ListExternalApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListExternalApplicationRespData>
			success():bool
	}
	export interface ListExternalApplicationRespData extends Struct<ListExternalApplicationRespData>{

			items:Ref<ExternalApplication>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListInterviewFeedbackFormIterator extends Struct<ListInterviewFeedbackFormIterator>{

			next():[bool,Ref<InterviewFeedbackForm>]
			nextPageToken():Ref<string>
	}
	export interface ListInterviewFeedbackFormReq extends Struct<ListInterviewFeedbackFormReq>{

			limit:int
	}
	export interface ListInterviewFeedbackFormReqBuilder extends Struct<ListInterviewFeedbackFormReqBuilder>{

			limit(limit:int):Ref<ListInterviewFeedbackFormReqBuilder>
			interviewFeedbackFormIds(interviewFeedbackFormIds:string[]):Ref<ListInterviewFeedbackFormReqBuilder>
			pageSize(pageSize:int):Ref<ListInterviewFeedbackFormReqBuilder>
			pageToken(pageToken:string):Ref<ListInterviewFeedbackFormReqBuilder>
			build():Ref<ListInterviewFeedbackFormReq>
	}
	export interface ListInterviewFeedbackFormResp extends Struct<ListInterviewFeedbackFormResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListInterviewFeedbackFormRespData>
			success():bool
	}
	export interface ListInterviewFeedbackFormRespData extends Struct<ListInterviewFeedbackFormRespData>{

			items:Ref<InterviewFeedbackForm>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface ListInterviewRecordIterator extends Struct<ListInterviewRecordIterator>{

			next():[bool,Ref<InterviewRecord>]
			nextPageToken():Ref<string>
	}
	export interface ListInterviewRecordReq extends Struct<ListInterviewRecordReq>{

			limit:int
	}
	export interface ListInterviewRecordReqBuilder extends Struct<ListInterviewRecordReqBuilder>{

			limit(limit:int):Ref<ListInterviewRecordReqBuilder>
			pageSize(pageSize:int):Ref<ListInterviewRecordReqBuilder>
			pageToken(pageToken:string):Ref<ListInterviewRecordReqBuilder>
			ids(ids:string[]):Ref<ListInterviewRecordReqBuilder>
			userIdType(userIdType:string):Ref<ListInterviewRecordReqBuilder>
			build():Ref<ListInterviewRecordReq>
	}
	export interface ListInterviewRecordResp extends Struct<ListInterviewRecordResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListInterviewRecordRespData>
			success():bool
	}
	export interface ListInterviewRecordRespData extends Struct<ListInterviewRecordRespData>{

			items:Ref<InterviewRecord>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface ListInterviewRegistrationSchemaIterator extends Struct<ListInterviewRegistrationSchemaIterator>{

			next():[bool,Ref<InterviewRegistrationSchema>]
			nextPageToken():Ref<string>
	}
	export interface ListInterviewRegistrationSchemaReq extends Struct<ListInterviewRegistrationSchemaReq>{

			limit:int
	}
	export interface ListInterviewRegistrationSchemaReqBuilder extends Struct<ListInterviewRegistrationSchemaReqBuilder>{

			limit(limit:int):Ref<ListInterviewRegistrationSchemaReqBuilder>
			pageToken(pageToken:string):Ref<ListInterviewRegistrationSchemaReqBuilder>
			pageSize(pageSize:int):Ref<ListInterviewRegistrationSchemaReqBuilder>
			build():Ref<ListInterviewRegistrationSchemaReq>
	}
	export interface ListInterviewRegistrationSchemaResp extends Struct<ListInterviewRegistrationSchemaResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListInterviewRegistrationSchemaRespData>
			success():bool
	}
	export interface ListInterviewRegistrationSchemaRespData extends Struct<ListInterviewRegistrationSchemaRespData>{

			items:Ref<InterviewRegistrationSchema>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListInterviewReq extends Struct<ListInterviewReq>{

	}
	export interface ListInterviewReqBuilder extends Struct<ListInterviewReqBuilder>{

			pageSize(pageSize:int):Ref<ListInterviewReqBuilder>
			pageToken(pageToken:string):Ref<ListInterviewReqBuilder>
			applicationId(applicationId:string):Ref<ListInterviewReqBuilder>
			interviewId(interviewId:string):Ref<ListInterviewReqBuilder>
			startTime(startTime:string):Ref<ListInterviewReqBuilder>
			endTime(endTime:string):Ref<ListInterviewReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<ListInterviewReqBuilder>
			userIdType(userIdType:string):Ref<ListInterviewReqBuilder>
			build():Ref<ListInterviewReq>
	}
	export interface ListInterviewResp extends Struct<ListInterviewResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListInterviewRespData>
			success():bool
	}
	export interface ListInterviewRespData extends Struct<ListInterviewRespData>{

			items:Ref<InterviewExtend>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListInterviewRoundTypeReq extends Struct<ListInterviewRoundTypeReq>{

	}
	export interface ListInterviewRoundTypeReqBuilder extends Struct<ListInterviewRoundTypeReqBuilder>{

			processType(processType:int):Ref<ListInterviewRoundTypeReqBuilder>
			build():Ref<ListInterviewRoundTypeReq>
	}
	export interface ListInterviewRoundTypeResp extends Struct<ListInterviewRoundTypeResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListInterviewRoundTypeRespData>
			success():bool
	}
	export interface ListInterviewRoundTypeRespData extends Struct<ListInterviewRoundTypeRespData>{

			activeStatus:Ref<int>
			items:Ref<InterviewRoundType>[]
	}
	export interface ListInterviewTaskIterator extends Struct<ListInterviewTaskIterator>{

			next():[bool,Ref<InterviewTask>]
			nextPageToken():Ref<string>
	}
	export interface ListInterviewTaskReq extends Struct<ListInterviewTaskReq>{

			limit:int
	}
	export interface ListInterviewTaskReqBuilder extends Struct<ListInterviewTaskReqBuilder>{

			limit(limit:int):Ref<ListInterviewTaskReqBuilder>
			pageSize(pageSize:int):Ref<ListInterviewTaskReqBuilder>
			pageToken(pageToken:string):Ref<ListInterviewTaskReqBuilder>
			userId(userId:string):Ref<ListInterviewTaskReqBuilder>
			activityStatus(activityStatus:int):Ref<ListInterviewTaskReqBuilder>
			userIdType(userIdType:string):Ref<ListInterviewTaskReqBuilder>
			build():Ref<ListInterviewTaskReq>
	}
	export interface ListInterviewTaskResp extends Struct<ListInterviewTaskResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListInterviewTaskRespData>
			success():bool
	}
	export interface ListInterviewTaskRespData extends Struct<ListInterviewTaskRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<InterviewTask>[]
	}
	export interface ListJobFunctionIterator extends Struct<ListJobFunctionIterator>{

			next():[bool,Ref<JobFunction>]
			nextPageToken():Ref<string>
	}
	export interface ListJobFunctionReq extends Struct<ListJobFunctionReq>{

			limit:int
	}
	export interface ListJobFunctionReqBuilder extends Struct<ListJobFunctionReqBuilder>{

			limit(limit:int):Ref<ListJobFunctionReqBuilder>
			pageSize(pageSize:int):Ref<ListJobFunctionReqBuilder>
			pageToken(pageToken:string):Ref<ListJobFunctionReqBuilder>
			build():Ref<ListJobFunctionReq>
	}
	export interface ListJobFunctionResp extends Struct<ListJobFunctionResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListJobFunctionRespData>
			success():bool
	}
	export interface ListJobFunctionRespData extends Struct<ListJobFunctionRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<JobFunction>[]
	}
	export interface ListJobProcessReq extends Struct<ListJobProcessReq>{

	}
	export interface ListJobProcessReqBuilder extends Struct<ListJobProcessReqBuilder>{

			pageSize(pageSize:int):Ref<ListJobProcessReqBuilder>
			pageToken(pageToken:string):Ref<ListJobProcessReqBuilder>
			build():Ref<ListJobProcessReq>
	}
	export interface ListJobProcessResp extends Struct<ListJobProcessResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListJobProcessRespData>
			success():bool
	}
	export interface ListJobProcessRespData extends Struct<ListJobProcessRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<JobProcesses>[]
	}
	export interface ListJobReq extends Struct<ListJobReq>{

	}
	export interface ListJobReqBuilder extends Struct<ListJobReqBuilder>{

			updateStartTime(updateStartTime:string):Ref<ListJobReqBuilder>
			updateEndTime(updateEndTime:string):Ref<ListJobReqBuilder>
			pageSize(pageSize:int):Ref<ListJobReqBuilder>
			pageToken(pageToken:string):Ref<ListJobReqBuilder>
			userIdType(userIdType:string):Ref<ListJobReqBuilder>
			departmentIdType(departmentIdType:string):Ref<ListJobReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<ListJobReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<ListJobReqBuilder>
			build():Ref<ListJobReq>
	}
	export interface ListJobRequirementReq extends Struct<ListJobRequirementReq>{

	}
	export interface ListJobRequirementReqBuilder extends Struct<ListJobRequirementReqBuilder>{

			pageToken(pageToken:string):Ref<ListJobRequirementReqBuilder>
			pageSize(pageSize:int):Ref<ListJobRequirementReqBuilder>
			jobId(jobId:string):Ref<ListJobRequirementReqBuilder>
			createTimeBegin(createTimeBegin:string):Ref<ListJobRequirementReqBuilder>
			createTimeEnd(createTimeEnd:string):Ref<ListJobRequirementReqBuilder>
			updateTimeBegin(updateTimeBegin:string):Ref<ListJobRequirementReqBuilder>
			updateTimeEnd(updateTimeEnd:string):Ref<ListJobRequirementReqBuilder>
			userIdType(userIdType:string):Ref<ListJobRequirementReqBuilder>
			departmentIdType(departmentIdType:string):Ref<ListJobRequirementReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<ListJobRequirementReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<ListJobRequirementReqBuilder>
			employeeTypeIdType(employeeTypeIdType:string):Ref<ListJobRequirementReqBuilder>
			build():Ref<ListJobRequirementReq>
	}
	export interface ListJobRequirementResp extends Struct<ListJobRequirementResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListJobRequirementRespData>
			success():bool
	}
	export interface ListJobRequirementRespData extends Struct<ListJobRequirementRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<JobRequirementDto>[]
	}
	export interface ListJobRequirementSchemaReq extends Struct<ListJobRequirementSchemaReq>{

	}
	export interface ListJobRequirementSchemaReqBuilder extends Struct<ListJobRequirementSchemaReqBuilder>{

			pageToken(pageToken:string):Ref<ListJobRequirementSchemaReqBuilder>
			pageSize(pageSize:int):Ref<ListJobRequirementSchemaReqBuilder>
			build():Ref<ListJobRequirementSchemaReq>
	}
	export interface ListJobRequirementSchemaResp extends Struct<ListJobRequirementSchemaResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListJobRequirementSchemaRespData>
			success():bool
	}
	export interface ListJobRequirementSchemaRespData extends Struct<ListJobRequirementSchemaRespData>{

			items:Ref<JobRequirementSchema>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListJobResp extends Struct<ListJobResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListJobRespData>
			success():bool
	}
	export interface ListJobRespData extends Struct<ListJobRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<Job>[]
	}
	export interface ListJobSchemaReq extends Struct<ListJobSchemaReq>{

	}
	export interface ListJobSchemaReqBuilder extends Struct<ListJobSchemaReqBuilder>{

			pageToken(pageToken:string):Ref<ListJobSchemaReqBuilder>
			pageSize(pageSize:int):Ref<ListJobSchemaReqBuilder>
			scenario(scenario:int):Ref<ListJobSchemaReqBuilder>
			build():Ref<ListJobSchemaReq>
	}
	export interface ListJobSchemaResp extends Struct<ListJobSchemaResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListJobSchemaRespData>
			success():bool
	}
	export interface ListJobSchemaRespData extends Struct<ListJobSchemaRespData>{

			items:Ref<JobSchema>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListJobTypeIterator extends Struct<ListJobTypeIterator>{

			next():[bool,Ref<JobTypeInfo>]
			nextPageToken():Ref<string>
	}
	export interface ListJobTypeReq extends Struct<ListJobTypeReq>{

			limit:int
	}
	export interface ListJobTypeReqBuilder extends Struct<ListJobTypeReqBuilder>{

			limit(limit:int):Ref<ListJobTypeReqBuilder>
			pageSize(pageSize:int):Ref<ListJobTypeReqBuilder>
			pageToken(pageToken:string):Ref<ListJobTypeReqBuilder>
			build():Ref<ListJobTypeReq>
	}
	export interface ListJobTypeResp extends Struct<ListJobTypeResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListJobTypeRespData>
			success():bool
	}
	export interface ListJobTypeRespData extends Struct<ListJobTypeRespData>{

			items:Ref<JobTypeInfo>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface ListLocationIterator extends Struct<ListLocationIterator>{

			next():[bool,Ref<Location>]
			nextPageToken():Ref<string>
	}
	export interface ListLocationReq extends Struct<ListLocationReq>{

			limit:int
	}
	export interface ListLocationReqBuilder extends Struct<ListLocationReqBuilder>{

			limit(limit:int):Ref<ListLocationReqBuilder>
			pageToken(pageToken:string):Ref<ListLocationReqBuilder>
			pageSize(pageSize:int):Ref<ListLocationReqBuilder>
			usage(usage:string):Ref<ListLocationReqBuilder>
			build():Ref<ListLocationReq>
	}
	export interface ListLocationResp extends Struct<ListLocationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListLocationRespData>
			success():bool
	}
	export interface ListLocationRespData extends Struct<ListLocationRespData>{

			items:Ref<Location>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListNoteReq extends Struct<ListNoteReq>{

	}
	export interface ListNoteReqBuilder extends Struct<ListNoteReqBuilder>{

			pageSize(pageSize:int):Ref<ListNoteReqBuilder>
			pageToken(pageToken:string):Ref<ListNoteReqBuilder>
			talentId(talentId:string):Ref<ListNoteReqBuilder>
			userIdType(userIdType:string):Ref<ListNoteReqBuilder>
			build():Ref<ListNoteReq>
	}
	export interface ListNoteResp extends Struct<ListNoteResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListNoteRespData>
			success():bool
	}
	export interface ListNoteRespData extends Struct<ListNoteRespData>{

			items:Ref<Note>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListOfferApplicationFormReq extends Struct<ListOfferApplicationFormReq>{

	}
	export interface ListOfferApplicationFormReqBuilder extends Struct<ListOfferApplicationFormReqBuilder>{

			pageToken(pageToken:string):Ref<ListOfferApplicationFormReqBuilder>
			pageSize(pageSize:int):Ref<ListOfferApplicationFormReqBuilder>
			build():Ref<ListOfferApplicationFormReq>
	}
	export interface ListOfferApplicationFormResp extends Struct<ListOfferApplicationFormResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListOfferApplicationFormRespData>
			success():bool
	}
	export interface ListOfferApplicationFormRespData extends Struct<ListOfferApplicationFormRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<OfferApplyForm>[]
	}
	export interface ListOfferReq extends Struct<ListOfferReq>{

	}
	export interface ListOfferReqBuilder extends Struct<ListOfferReqBuilder>{

			pageToken(pageToken:string):Ref<ListOfferReqBuilder>
			pageSize(pageSize:int):Ref<ListOfferReqBuilder>
			talentId(talentId:string):Ref<ListOfferReqBuilder>
			userIdType(userIdType:string):Ref<ListOfferReqBuilder>
			employeeTypeIdType(employeeTypeIdType:string):Ref<ListOfferReqBuilder>
			build():Ref<ListOfferReq>
	}
	export interface ListOfferResp extends Struct<ListOfferResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListOfferRespData>
			success():bool
	}
	export interface ListOfferRespData extends Struct<ListOfferRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<OfferListInfo>[]
	}
	export interface ListQuestionnaireReq extends Struct<ListQuestionnaireReq>{

	}
	export interface ListQuestionnaireReqBuilder extends Struct<ListQuestionnaireReqBuilder>{

			pageToken(pageToken:string):Ref<ListQuestionnaireReqBuilder>
			pageSize(pageSize:int):Ref<ListQuestionnaireReqBuilder>
			applicationId(applicationId:string):Ref<ListQuestionnaireReqBuilder>
			interviewId(interviewId:string):Ref<ListQuestionnaireReqBuilder>
			updateStartTime(updateStartTime:string):Ref<ListQuestionnaireReqBuilder>
			updateEndTime(updateEndTime:string):Ref<ListQuestionnaireReqBuilder>
			build():Ref<ListQuestionnaireReq>
	}
	export interface ListQuestionnaireResp extends Struct<ListQuestionnaireResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListQuestionnaireRespData>
			success():bool
	}
	export interface ListQuestionnaireRespData extends Struct<ListQuestionnaireRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<Questionnaire>[]
	}
	export interface ListReferralWebsiteJobPostIterator extends Struct<ListReferralWebsiteJobPostIterator>{

			next():[bool,Ref<PortalJobPost>]
			nextPageToken():Ref<string>
	}
	export interface ListReferralWebsiteJobPostReq extends Struct<ListReferralWebsiteJobPostReq>{

			limit:int
	}
	export interface ListReferralWebsiteJobPostReqBuilder extends Struct<ListReferralWebsiteJobPostReqBuilder>{

			limit(limit:int):Ref<ListReferralWebsiteJobPostReqBuilder>
			processType(processType:int):Ref<ListReferralWebsiteJobPostReqBuilder>
			pageToken(pageToken:string):Ref<ListReferralWebsiteJobPostReqBuilder>
			pageSize(pageSize:int):Ref<ListReferralWebsiteJobPostReqBuilder>
			userIdType(userIdType:string):Ref<ListReferralWebsiteJobPostReqBuilder>
			departmentIdType(departmentIdType:string):Ref<ListReferralWebsiteJobPostReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<ListReferralWebsiteJobPostReqBuilder>
			build():Ref<ListReferralWebsiteJobPostReq>
	}
	export interface ListReferralWebsiteJobPostResp extends Struct<ListReferralWebsiteJobPostResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListReferralWebsiteJobPostRespData>
			success():bool
	}
	export interface ListReferralWebsiteJobPostRespData extends Struct<ListReferralWebsiteJobPostRespData>{

			items:Ref<PortalJobPost>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListRegistrationSchemaIterator extends Struct<ListRegistrationSchemaIterator>{

			next():[bool,Ref<RegistrationSchema>]
			nextPageToken():Ref<string>
	}
	export interface ListRegistrationSchemaReq extends Struct<ListRegistrationSchemaReq>{

			limit:int
	}
	export interface ListRegistrationSchemaReqBuilder extends Struct<ListRegistrationSchemaReqBuilder>{

			limit(limit:int):Ref<ListRegistrationSchemaReqBuilder>
			pageSize(pageSize:int):Ref<ListRegistrationSchemaReqBuilder>
			pageToken(pageToken:string):Ref<ListRegistrationSchemaReqBuilder>
			scenario(scenario:int):Ref<ListRegistrationSchemaReqBuilder>
			build():Ref<ListRegistrationSchemaReq>
	}
	export interface ListRegistrationSchemaResp extends Struct<ListRegistrationSchemaResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListRegistrationSchemaRespData>
			success():bool
	}
	export interface ListRegistrationSchemaRespData extends Struct<ListRegistrationSchemaRespData>{

			items:Ref<RegistrationSchema>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface ListResumeSourceIterator extends Struct<ListResumeSourceIterator>{

			next():[bool,Ref<ResumeSource>]
			nextPageToken():Ref<string>
	}
	export interface ListResumeSourceReq extends Struct<ListResumeSourceReq>{

			limit:int
	}
	export interface ListResumeSourceReqBuilder extends Struct<ListResumeSourceReqBuilder>{

			limit(limit:int):Ref<ListResumeSourceReqBuilder>
			pageSize(pageSize:int):Ref<ListResumeSourceReqBuilder>
			pageToken(pageToken:string):Ref<ListResumeSourceReqBuilder>
			build():Ref<ListResumeSourceReq>
	}
	export interface ListResumeSourceResp extends Struct<ListResumeSourceResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListResumeSourceRespData>
			success():bool
	}
	export interface ListResumeSourceRespData extends Struct<ListResumeSourceRespData>{

			items:Ref<ResumeSource>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface ListRoleIterator extends Struct<ListRoleIterator>{

			next():[bool,Ref<Role>]
			nextPageToken():Ref<string>
	}
	export interface ListRoleReq extends Struct<ListRoleReq>{

			limit:int
	}
	export interface ListRoleReqBuilder extends Struct<ListRoleReqBuilder>{

			limit(limit:int):Ref<ListRoleReqBuilder>
			pageToken(pageToken:string):Ref<ListRoleReqBuilder>
			pageSize(pageSize:int):Ref<ListRoleReqBuilder>
			build():Ref<ListRoleReq>
	}
	export interface ListRoleResp extends Struct<ListRoleResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListRoleRespData>
			success():bool
	}
	export interface ListRoleRespData extends Struct<ListRoleRespData>{

			items:Ref<Role>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListSubjectReq extends Struct<ListSubjectReq>{

	}
	export interface ListSubjectReqBuilder extends Struct<ListSubjectReqBuilder>{

			userIdType(userIdType:string):Ref<ListSubjectReqBuilder>
			subjectIds(subjectIds:string[]):Ref<ListSubjectReqBuilder>
			pageToken(pageToken:string):Ref<ListSubjectReqBuilder>
			pageSize(pageSize:int):Ref<ListSubjectReqBuilder>
			build():Ref<ListSubjectReq>
	}
	export interface ListSubjectResp extends Struct<ListSubjectResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListSubjectRespData>
			success():bool
	}
	export interface ListSubjectRespData extends Struct<ListSubjectRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<Subject>[]
	}
	export interface ListTalentFolderIterator extends Struct<ListTalentFolderIterator>{

			next():[bool,Ref<TalentFolderForList>]
			nextPageToken():Ref<string>
	}
	export interface ListTalentFolderReq extends Struct<ListTalentFolderReq>{

			limit:int
	}
	export interface ListTalentFolderReqBuilder extends Struct<ListTalentFolderReqBuilder>{

			limit(limit:int):Ref<ListTalentFolderReqBuilder>
			pageToken(pageToken:string):Ref<ListTalentFolderReqBuilder>
			pageSize(pageSize:int):Ref<ListTalentFolderReqBuilder>
			userIdType(userIdType:string):Ref<ListTalentFolderReqBuilder>
			build():Ref<ListTalentFolderReq>
	}
	export interface ListTalentFolderResp extends Struct<ListTalentFolderResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListTalentFolderRespData>
			success():bool
	}
	export interface ListTalentFolderRespData extends Struct<ListTalentFolderRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<TalentFolderForList>[]
	}
	export interface ListTalentReq extends Struct<ListTalentReq>{

	}
	export interface ListTalentReqBuilder extends Struct<ListTalentReqBuilder>{

			updateStartTime(updateStartTime:string):Ref<ListTalentReqBuilder>
			updateEndTime(updateEndTime:string):Ref<ListTalentReqBuilder>
			pageSize(pageSize:int):Ref<ListTalentReqBuilder>
			pageToken(pageToken:string):Ref<ListTalentReqBuilder>
			userIdType(userIdType:string):Ref<ListTalentReqBuilder>
			queryOption(queryOption:string):Ref<ListTalentReqBuilder>
			build():Ref<ListTalentReq>
	}
	export interface ListTalentResp extends Struct<ListTalentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListTalentRespData>
			success():bool
	}
	export interface ListTalentRespData extends Struct<ListTalentRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<Talent>[]
	}
	export interface ListTerminationReasonIterator extends Struct<ListTerminationReasonIterator>{

			next():[bool,Ref<TerminationReason>]
			nextPageToken():Ref<string>
	}
	export interface ListTerminationReasonReq extends Struct<ListTerminationReasonReq>{

			limit:int
	}
	export interface ListTerminationReasonReqBuilder extends Struct<ListTerminationReasonReqBuilder>{

			limit(limit:int):Ref<ListTerminationReasonReqBuilder>
			pageToken(pageToken:string):Ref<ListTerminationReasonReqBuilder>
			pageSize(pageSize:int):Ref<ListTerminationReasonReqBuilder>
			build():Ref<ListTerminationReasonReq>
	}
	export interface ListTerminationReasonResp extends Struct<ListTerminationReasonResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListTerminationReasonRespData>
			success():bool
	}
	export interface ListTerminationReasonRespData extends Struct<ListTerminationReasonRespData>{

			items:Ref<TerminationReason>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListTodoIterator extends Struct<ListTodoIterator>{

			next():[bool,Ref<Todo>]
			nextPageToken():Ref<string>
	}
	export interface ListTodoReq extends Struct<ListTodoReq>{

			limit:int
	}
	export interface ListTodoReqBuilder extends Struct<ListTodoReqBuilder>{

			limit(limit:int):Ref<ListTodoReqBuilder>
			pageToken(pageToken:string):Ref<ListTodoReqBuilder>
			pageSize(pageSize:string):Ref<ListTodoReqBuilder>
			userId(userId:string):Ref<ListTodoReqBuilder>
			userIdType(userIdType:string):Ref<ListTodoReqBuilder>
			type(type_:string):Ref<ListTodoReqBuilder>
			build():Ref<ListTodoReq>
	}
	export interface ListTodoResp extends Struct<ListTodoResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListTodoRespData>
			success():bool
	}
	export interface ListTodoRespData extends Struct<ListTodoRespData>{

			items:Ref<Todo>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListTripartiteAgreementIterator extends Struct<ListTripartiteAgreementIterator>{

			next():[bool,Ref<TripartiteAgreementInfo>]
			nextPageToken():Ref<string>
	}
	export interface ListTripartiteAgreementReq extends Struct<ListTripartiteAgreementReq>{

			limit:int
	}
	export interface ListTripartiteAgreementReqBuilder extends Struct<ListTripartiteAgreementReqBuilder>{

			limit(limit:int):Ref<ListTripartiteAgreementReqBuilder>
			pageSize(pageSize:int):Ref<ListTripartiteAgreementReqBuilder>
			pageToken(pageToken:string):Ref<ListTripartiteAgreementReqBuilder>
			applicationId(applicationId:string):Ref<ListTripartiteAgreementReqBuilder>
			tripartiteAgreementId(tripartiteAgreementId:string):Ref<ListTripartiteAgreementReqBuilder>
			build():Ref<ListTripartiteAgreementReq>
	}
	export interface ListTripartiteAgreementResp extends Struct<ListTripartiteAgreementResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListTripartiteAgreementRespData>
			success():bool
	}
	export interface ListTripartiteAgreementRespData extends Struct<ListTripartiteAgreementRespData>{

			items:Ref<TripartiteAgreementInfo>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface ListWebsiteChannelReq extends Struct<ListWebsiteChannelReq>{

	}
	export interface ListWebsiteChannelReqBuilder extends Struct<ListWebsiteChannelReqBuilder>{

			websiteId(websiteId:string):Ref<ListWebsiteChannelReqBuilder>
			pageSize(pageSize:string):Ref<ListWebsiteChannelReqBuilder>
			pageToken(pageToken:string):Ref<ListWebsiteChannelReqBuilder>
			build():Ref<ListWebsiteChannelReq>
	}
	export interface ListWebsiteChannelResp extends Struct<ListWebsiteChannelResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListWebsiteChannelRespData>
			success():bool
	}
	export interface ListWebsiteChannelRespData extends Struct<ListWebsiteChannelRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			websiteChannelList:Ref<WebsiteChannelInfo>[]
	}
	export interface ListWebsiteIterator extends Struct<ListWebsiteIterator>{

			next():[bool,Ref<Website>]
			nextPageToken():Ref<string>
	}
	export interface ListWebsiteJobPostIterator extends Struct<ListWebsiteJobPostIterator>{

			next():[bool,Ref<WebsiteJobPost>]
			nextPageToken():Ref<string>
	}
	export interface ListWebsiteJobPostReq extends Struct<ListWebsiteJobPostReq>{

			limit:int
	}
	export interface ListWebsiteJobPostReqBuilder extends Struct<ListWebsiteJobPostReqBuilder>{

			limit(limit:int):Ref<ListWebsiteJobPostReqBuilder>
			websiteId(websiteId:string):Ref<ListWebsiteJobPostReqBuilder>
			pageToken(pageToken:string):Ref<ListWebsiteJobPostReqBuilder>
			pageSize(pageSize:int):Ref<ListWebsiteJobPostReqBuilder>
			userIdType(userIdType:string):Ref<ListWebsiteJobPostReqBuilder>
			departmentIdType(departmentIdType:string):Ref<ListWebsiteJobPostReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<ListWebsiteJobPostReqBuilder>
			updateStartTime(updateStartTime:string):Ref<ListWebsiteJobPostReqBuilder>
			updateEndTime(updateEndTime:string):Ref<ListWebsiteJobPostReqBuilder>
			createStartTime(createStartTime:string):Ref<ListWebsiteJobPostReqBuilder>
			createEndTime(createEndTime:string):Ref<ListWebsiteJobPostReqBuilder>
			build():Ref<ListWebsiteJobPostReq>
	}
	export interface ListWebsiteJobPostResp extends Struct<ListWebsiteJobPostResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListWebsiteJobPostRespData>
			success():bool
	}
	export interface ListWebsiteJobPostRespData extends Struct<ListWebsiteJobPostRespData>{

			items:Ref<WebsiteJobPost>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ListWebsiteReq extends Struct<ListWebsiteReq>{

			limit:int
	}
	export interface ListWebsiteReqBuilder extends Struct<ListWebsiteReqBuilder>{

			limit(limit:int):Ref<ListWebsiteReqBuilder>
			pageToken(pageToken:string):Ref<ListWebsiteReqBuilder>
			pageSize(pageSize:int):Ref<ListWebsiteReqBuilder>
			build():Ref<ListWebsiteReq>
	}
	export interface ListWebsiteResp extends Struct<ListWebsiteResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListWebsiteRespData>
			success():bool
	}
	export interface ListWebsiteRespData extends Struct<ListWebsiteRespData>{

			items:Ref<Website>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface Location extends Struct<Location>{

			id:Ref<string>
			name:Ref<I18n>
			district:Ref<CodeNameObject>
			city:Ref<CodeNameObject>
			state:Ref<CodeNameObject>
			country:Ref<CodeNameObject>
			activeStatus:Ref<int>
	}
	export interface LocationBaseInfo extends Struct<LocationBaseInfo>{

			code:Ref<string>
			name:Ref<string>
			enName:Ref<string>
			locationType:Ref<int>
			i18nName:Ref<string>
			pyName:Ref<string>
	}
	export interface LocationBaseInfoBuilder extends Struct<LocationBaseInfoBuilder>{

			code(code:string):Ref<LocationBaseInfoBuilder>
			name(name:string):Ref<LocationBaseInfoBuilder>
			enName(enName:string):Ref<LocationBaseInfoBuilder>
			locationType(locationType:int):Ref<LocationBaseInfoBuilder>
			i18nName(i18nName:string):Ref<LocationBaseInfoBuilder>
			pyName(pyName:string):Ref<LocationBaseInfoBuilder>
			build():Ref<LocationBaseInfo>
	}
	export interface LocationBuilder extends Struct<LocationBuilder>{

			id(id:string):Ref<LocationBuilder>
			name(name:Ref<I18n>):Ref<LocationBuilder>
			district(district:Ref<CodeNameObject>):Ref<LocationBuilder>
			city(city:Ref<CodeNameObject>):Ref<LocationBuilder>
			state(state:Ref<CodeNameObject>):Ref<LocationBuilder>
			country(country:Ref<CodeNameObject>):Ref<LocationBuilder>
			activeStatus(activeStatus:int):Ref<LocationBuilder>
			build():Ref<Location>
	}
	export interface LocationCity extends Struct<LocationCity>{

			cityCode:Ref<string>
			stateCode:Ref<string>
			countryCode:Ref<string>
			cityNameInfo:Ref<LocationNameInfo>
	}
	export interface LocationCityBuilder extends Struct<LocationCityBuilder>{

			cityCode(cityCode:string):Ref<LocationCityBuilder>
			stateCode(stateCode:string):Ref<LocationCityBuilder>
			countryCode(countryCode:string):Ref<LocationCityBuilder>
			cityNameInfo(cityNameInfo:Ref<LocationNameInfo>):Ref<LocationCityBuilder>
			build():Ref<LocationCity>
	}
	export interface LocationCountry extends Struct<LocationCountry>{

			countryCode:Ref<string>
			countryNameInfo:Ref<LocationNameInfo>
	}
	export interface LocationCountryBuilder extends Struct<LocationCountryBuilder>{

			countryCode(countryCode:string):Ref<LocationCountryBuilder>
			countryNameInfo(countryNameInfo:Ref<LocationNameInfo>):Ref<LocationCountryBuilder>
			build():Ref<LocationCountry>
	}
	export interface LocationDistrict extends Struct<LocationDistrict>{

			districtCode:Ref<string>
			cityCode:Ref<string>
			stateCode:Ref<string>
			countryCode:Ref<string>
			districtNameInfo:Ref<LocationNameInfo>
	}
	export interface LocationDistrictBuilder extends Struct<LocationDistrictBuilder>{

			districtCode(districtCode:string):Ref<LocationDistrictBuilder>
			cityCode(cityCode:string):Ref<LocationDistrictBuilder>
			stateCode(stateCode:string):Ref<LocationDistrictBuilder>
			countryCode(countryCode:string):Ref<LocationDistrictBuilder>
			districtNameInfo(districtNameInfo:Ref<LocationNameInfo>):Ref<LocationDistrictBuilder>
			build():Ref<LocationDistrict>
	}
	export interface LocationDto extends Struct<LocationDto>{

			country:Ref<LocationCountry>
			state:Ref<LocationState>
			city:Ref<LocationCity>
			district:Ref<LocationDistrict>
	}
	export interface LocationDtoBuilder extends Struct<LocationDtoBuilder>{

			country(country:Ref<LocationCountry>):Ref<LocationDtoBuilder>
			state(state:Ref<LocationState>):Ref<LocationDtoBuilder>
			city(city:Ref<LocationCity>):Ref<LocationDtoBuilder>
			district(district:Ref<LocationDistrict>):Ref<LocationDtoBuilder>
			build():Ref<LocationDto>
	}
	export interface LocationNameInfo extends Struct<LocationNameInfo>{

			zhName:Ref<string>
			enName:Ref<string>
			pyName:Ref<string>
	}
	export interface LocationNameInfoBuilder extends Struct<LocationNameInfoBuilder>{

			zhName(zhName:string):Ref<LocationNameInfoBuilder>
			enName(enName:string):Ref<LocationNameInfoBuilder>
			pyName(pyName:string):Ref<LocationNameInfoBuilder>
			build():Ref<LocationNameInfo>
	}
	export interface LocationState extends Struct<LocationState>{

			stateCode:Ref<string>
			countryCode:Ref<string>
			stateNameInfo:Ref<LocationNameInfo>
	}
	export interface LocationStateBuilder extends Struct<LocationStateBuilder>{

			stateCode(stateCode:string):Ref<LocationStateBuilder>
			countryCode(countryCode:string):Ref<LocationStateBuilder>
			stateNameInfo(stateNameInfo:Ref<LocationNameInfo>):Ref<LocationStateBuilder>
			build():Ref<LocationState>
	}
	//1
	export const LocationType1:int
	//2
	export const LocationType2:int
	//3
	export const LocationType3:int
	//4
	export const LocationType4:int
	export interface LoginInfoEcoExamPathReqBodyBuilder extends Struct<LoginInfoEcoExamPathReqBodyBuilder>{

			result(result:int):Ref<LoginInfoEcoExamPathReqBodyBuilder>
			msg(msg:string):Ref<LoginInfoEcoExamPathReqBodyBuilder>
			examLoginInfo(examLoginInfo:Ref<EcoExamLoginInfo>):Ref<LoginInfoEcoExamPathReqBodyBuilder>
			build():Ref<LoginInfoEcoExamReqBody>
	}
	export interface LoginInfoEcoExamReq extends Struct<LoginInfoEcoExamReq>{

			body:Ref<LoginInfoEcoExamReqBody>
	}
	export interface LoginInfoEcoExamReqBody extends Struct<LoginInfoEcoExamReqBody>{

			result:Ref<int>
			msg:Ref<string>
			examLoginInfo:Ref<EcoExamLoginInfo>
	}
	export interface LoginInfoEcoExamReqBodyBuilder extends Struct<LoginInfoEcoExamReqBodyBuilder>{

			result(result:int):Ref<LoginInfoEcoExamReqBodyBuilder>
			msg(msg:string):Ref<LoginInfoEcoExamReqBodyBuilder>
			examLoginInfo(examLoginInfo:Ref<EcoExamLoginInfo>):Ref<LoginInfoEcoExamReqBodyBuilder>
			build():Ref<LoginInfoEcoExamReqBody>
	}
	export interface LoginInfoEcoExamReqBuilder extends Struct<LoginInfoEcoExamReqBuilder>{

			examId(examId:string):Ref<LoginInfoEcoExamReqBuilder>
			body(body:Ref<LoginInfoEcoExamReqBody>):Ref<LoginInfoEcoExamReqBuilder>
			build():Ref<LoginInfoEcoExamReq>
	}
	export interface LoginInfoEcoExamResp extends Struct<LoginInfoEcoExamResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface MasterLocationAddressInfo extends Struct<MasterLocationAddressInfo>{

			locationInfo:Ref<MasterLocationInfo>
			addressInfo:Ref<MasterLocationInfo>
	}
	export interface MasterLocationAddressInfoBuilder extends Struct<MasterLocationAddressInfoBuilder>{

			locationInfo(locationInfo:Ref<MasterLocationInfo>):Ref<MasterLocationAddressInfoBuilder>
			addressInfo(addressInfo:Ref<MasterLocationInfo>):Ref<MasterLocationAddressInfoBuilder>
			build():Ref<MasterLocationAddressInfo>
	}
	export interface MasterLocationInfo extends Struct<MasterLocationInfo>{

			id:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
	}
	export interface MasterLocationInfoBuilder extends Struct<MasterLocationInfoBuilder>{

			id(id:string):Ref<MasterLocationInfoBuilder>
			zhName(zhName:string):Ref<MasterLocationInfoBuilder>
			enName(enName:string):Ref<MasterLocationInfoBuilder>
			build():Ref<MasterLocationInfo>
	}
	export interface MentionEntity extends Struct<MentionEntity>{

			offset:Ref<int>
			userId:Ref<string>
	}
	export interface MentionEntityBuilder extends Struct<MentionEntityBuilder>{

			offset(offset:int):Ref<MentionEntityBuilder>
			userId(userId:string):Ref<MentionEntityBuilder>
			build():Ref<MentionEntity>
	}
	export interface Mobile extends Struct<Mobile>{

			code:Ref<string>
			number:Ref<string>
	}
	export interface MobileBuilder extends Struct<MobileBuilder>{

			code(code:string):Ref<MobileBuilder>
			number(number:string):Ref<MobileBuilder>
			build():Ref<Mobile>
	}
	export interface MoveTalentTalentPoolPathReqBodyBuilder extends Struct<MoveTalentTalentPoolPathReqBodyBuilder>{

			talentId(talentId:string):Ref<MoveTalentTalentPoolPathReqBodyBuilder>
			addType(addType:int):Ref<MoveTalentTalentPoolPathReqBodyBuilder>
			build():Ref<MoveTalentTalentPoolReqBody>
	}
	export interface MoveTalentTalentPoolReq extends Struct<MoveTalentTalentPoolReq>{

			body:Ref<MoveTalentTalentPoolReqBody>
	}
	export interface MoveTalentTalentPoolReqBody extends Struct<MoveTalentTalentPoolReqBody>{

			talentId:Ref<string>
			addType:Ref<int>
	}
	export interface MoveTalentTalentPoolReqBodyBuilder extends Struct<MoveTalentTalentPoolReqBodyBuilder>{

			talentId(talentId:string):Ref<MoveTalentTalentPoolReqBodyBuilder>
			addType(addType:int):Ref<MoveTalentTalentPoolReqBodyBuilder>
			build():Ref<MoveTalentTalentPoolReqBody>
	}
	export interface MoveTalentTalentPoolReqBuilder extends Struct<MoveTalentTalentPoolReqBuilder>{

			talentPoolId(talentPoolId:string):Ref<MoveTalentTalentPoolReqBuilder>
			body(body:Ref<MoveTalentTalentPoolReqBody>):Ref<MoveTalentTalentPoolReqBuilder>
			build():Ref<MoveTalentTalentPoolReq>
	}
	export interface MoveTalentTalentPoolResp extends Struct<MoveTalentTalentPoolResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<MoveTalentTalentPoolRespData>
			success():bool
	}
	export interface MoveTalentTalentPoolRespData extends Struct<MoveTalentTalentPoolRespData>{

			talentPoolId:Ref<string>
			talentId:Ref<string>
	}
	export interface Nationality extends Struct<Nationality>{

			nationalityCode:Ref<string>
			name:Ref<string>
			enName:Ref<string>
	}
	export interface NationalityBuilder extends Struct<NationalityBuilder>{

			nationalityCode(nationalityCode:string):Ref<NationalityBuilder>
			name(name:string):Ref<NationalityBuilder>
			enName(enName:string):Ref<NationalityBuilder>
			build():Ref<Nationality>
	}
	export function New(config:Ref<larkcore.Config>):Ref<V1>

	export function newAbilityBuilder():Ref<AbilityBuilder>

	export function newAcceptanceBuilder():Ref<AcceptanceBuilder>

	export function newAccountBuilder():Ref<AccountBuilder>

	export function newAddToFolderTalentPathReqBodyBuilder():Ref<AddToFolderTalentPathReqBodyBuilder>

	export function newAddToFolderTalentReqBodyBuilder():Ref<AddToFolderTalentReqBodyBuilder>

	export function newAddToFolderTalentReqBuilder():Ref<AddToFolderTalentReqBuilder>

	export function newAgencyBuilder():Ref<AgencyBuilder>

	export function newAgencyProtectionBuilder():Ref<AgencyProtectionBuilder>

	export function newAppliOfferBasicCustObjBuilder():Ref<AppliOfferBasicCustObjBuilder>

	export function newAppliOfferBasicCustObjOpVBuilder():Ref<AppliOfferBasicCustObjOpVBuilder>

	export function newAppliOfferBasicInfoUserBuilder():Ref<AppliOfferBasicInfoUserBuilder>

	export function newAppliOfferOnboardProfileAddBuilder():Ref<AppliOfferOnboardProfileAddBuilder>

	export function newAppliOfferOnboardProfileBuilder():Ref<AppliOfferOnboardProfileBuilder>

	export function newAppliOfferOnboardProfileCityBuilder():Ref<AppliOfferOnboardProfileCityBuilder>

	export function newAppliOfferSalaryPlanTemplateBuilder():Ref<AppliOfferSalaryPlanTemplateBuilder>

	export function newAppliTalentAttachResumeInfoBuilder():Ref<AppliTalentAttachResumeInfoBuilder>

	export function newAppliTalentCertificateInfoBuilder():Ref<AppliTalentCertificateInfoBuilder>

	export function newAppliTalentCompetitionInfoBuilder():Ref<AppliTalentCompetitionInfoBuilder>

	export function newAppliTalentEducationInfoBuilder():Ref<AppliTalentEducationInfoBuilder>

	export function newApplicationBasicInfoBuilder():Ref<ApplicationBasicInfoBuilder>

	export function newApplicationBuilder():Ref<ApplicationBuilder>

	export function newApplicationJobAddressBuilder():Ref<ApplicationJobAddressBuilder>

	export function newApplicationJobBuilder():Ref<ApplicationJobBuilder>

	export function newApplicationOfferAttachmentBuilder():Ref<ApplicationOfferAttachmentBuilder>

	export function newApplicationOfferBasicInfoBuilder():Ref<ApplicationOfferBasicInfoBuilder>

	export function newApplicationOfferBasicInfoCustomizedObjectBuilder():Ref<ApplicationOfferBasicInfoCustomizedObjectBuilder>

	export function newApplicationOfferBasicInfoCustomizedObjectOptionValueBuilder():Ref<ApplicationOfferBasicInfoCustomizedObjectOptionValueBuilder>

	export function newApplicationOfferBasicInfoUserBuilder():Ref<ApplicationOfferBasicInfoUserBuilder>

	export function newApplicationOfferBuilder():Ref<ApplicationOfferBuilder>

	export function newApplicationOfferCustomModuleBuilder():Ref<ApplicationOfferCustomModuleBuilder>

	export function newApplicationOfferCustomValueBuilder():Ref<ApplicationOfferCustomValueBuilder>

	export function newApplicationOfferOnboardProfileAddressBuilder():Ref<ApplicationOfferOnboardProfileAddressBuilder>

	export function newApplicationOfferOnboardProfileBuilder():Ref<ApplicationOfferOnboardProfileBuilder>

	export function newApplicationOfferOnboardProfileCityBuilder():Ref<ApplicationOfferOnboardProfileCityBuilder>

	export function newApplicationOfferSalaryPlanBuilder():Ref<ApplicationOfferSalaryPlanBuilder>

	export function newApplicationOfferSalaryPlanSalaryTemplateBuilder():Ref<ApplicationOfferSalaryPlanSalaryTemplateBuilder>

	export function newApplicationPrehireBuilder():Ref<ApplicationPrehireBuilder>

	export function newApplicationPrehireDepartmentBuilder():Ref<ApplicationPrehireDepartmentBuilder>

	export function newApplicationPrehireOfferBasicBuilder():Ref<ApplicationPrehireOfferBasicBuilder>

	export function newApplicationPrehireOfferBuilder():Ref<ApplicationPrehireOfferBuilder>

	export function newApplicationPrehireOptionalBuilder():Ref<ApplicationPrehireOptionalBuilder>

	export function newApplicationReferralBuilder():Ref<ApplicationReferralBuilder>

	export function newApplicationResumeSourceBuilder():Ref<ApplicationResumeSourceBuilder>

	export function newApplicationStageBuilder():Ref<ApplicationStageBuilder>

	export function newApplicationStageInfoBuilder():Ref<ApplicationStageInfoBuilder>

	export function newApplicationStageTimeBuilder():Ref<ApplicationStageTimeBuilder>

	export function newApplicationTalentAttachmentResumeInfoBuilder():Ref<ApplicationTalentAttachmentResumeInfoBuilder>

	export function newApplicationTalentAwardInfoBuilder():Ref<ApplicationTalentAwardInfoBuilder>

	export function newApplicationTalentBasicInfoBuilder():Ref<ApplicationTalentBasicInfoBuilder>

	export function newApplicationTalentBuilder():Ref<ApplicationTalentBuilder>

	export function newApplicationTalentCareerInfoBuilder():Ref<ApplicationTalentCareerInfoBuilder>

	export function newApplicationTalentCertificateInfoBuilder():Ref<ApplicationTalentCertificateInfoBuilder>

	export function newApplicationTalentCompetitionInfoBuilder():Ref<ApplicationTalentCompetitionInfoBuilder>

	export function newApplicationTalentEducationInfoBuilder():Ref<ApplicationTalentEducationInfoBuilder>

	export function newApplicationTalentLanguageInfoBuilder():Ref<ApplicationTalentLanguageInfoBuilder>

	export function newApplicationTalentProjectInfoBuilder():Ref<ApplicationTalentProjectInfoBuilder>

	export function newApplicationTalentSnsInfoBuilder():Ref<ApplicationTalentSnsInfoBuilder>

	export function newApplicationTalentWorksInfoBuilder():Ref<ApplicationTalentWorksInfoBuilder>

	export function newApplicationWebsiteChannelBuilder():Ref<ApplicationWebsiteChannelBuilder>

	export function newApplicationWebsiteResumeSourceBuilder():Ref<ApplicationWebsiteResumeSourceBuilder>

	export function newAssessmentScoreInfoBuilder():Ref<AssessmentScoreInfoBuilder>

	export function newAssetsBuilder():Ref<AssetsBuilder>

	export function newAttachmentBuilder():Ref<AttachmentBuilder>

	export function newAttachmentInfoBuilder():Ref<AttachmentInfoBuilder>

	export function newAttachmentV2Builder():Ref<AttachmentV2Builder>

	export function newAuthBuilder():Ref<AuthBuilder>

	export function newAwardInfoBuilder():Ref<AwardInfoBuilder>

	export function newBackgroundCheckCustomFieldDataValueBuilder():Ref<BackgroundCheckCustomFieldDataValueBuilder>

	export function newBackgroundCheckFeedbackInfoBuilder():Ref<BackgroundCheckFeedbackInfoBuilder>

	export function newBackgroundCheckItemInfoBuilder():Ref<BackgroundCheckItemInfoBuilder>

	export function newBackgroundCheckOrderBuilder():Ref<BackgroundCheckOrderBuilder>

	export function newBackgroundCheckOrderCreatorBuilder():Ref<BackgroundCheckOrderCreatorBuilder>

	export function newBackgroundCheckOrderFeedbackInfoBuilder():Ref<BackgroundCheckOrderFeedbackInfoBuilder>

	export function newBackgroundCheckOrderProcessInfoBuilder():Ref<BackgroundCheckOrderProcessInfoBuilder>

	export function newBackgroundCheckProcessInfoBuilder():Ref<BackgroundCheckProcessInfoBuilder>

	export function newBaseAddressBuilder():Ref<BaseAddressBuilder>

	export function newBaseBilingualWithIdBuilder():Ref<BaseBilingualWithIdBuilder>

	export function newBaseCityBuilder():Ref<BaseCityBuilder>

	export function newBaseCountryBuilder():Ref<BaseCountryBuilder>

	export function newBaseDistrictBuilder():Ref<BaseDistrictBuilder>

	export function newBaseRespBuilder():Ref<BaseRespBuilder>

	export function newBasicInfoBuilder():Ref<BasicInfoBuilder>

	export function newBatchDeleteEcoAccountCustomFieldPathReqBodyBuilder():Ref<BatchDeleteEcoAccountCustomFieldPathReqBodyBuilder>

	export function newBatchDeleteEcoAccountCustomFieldReqBodyBuilder():Ref<BatchDeleteEcoAccountCustomFieldReqBodyBuilder>

	export function newBatchDeleteEcoAccountCustomFieldReqBuilder():Ref<BatchDeleteEcoAccountCustomFieldReqBuilder>

	export function newBatchDeleteEcoBackgroundCheckCustomFieldPathReqBodyBuilder():Ref<BatchDeleteEcoBackgroundCheckCustomFieldPathReqBodyBuilder>

	export function newBatchDeleteEcoBackgroundCheckCustomFieldReqBodyBuilder():Ref<BatchDeleteEcoBackgroundCheckCustomFieldReqBodyBuilder>

	export function newBatchDeleteEcoBackgroundCheckCustomFieldReqBuilder():Ref<BatchDeleteEcoBackgroundCheckCustomFieldReqBuilder>

	export function newBatchDeleteEcoBackgroundCheckPackagePathReqBodyBuilder():Ref<BatchDeleteEcoBackgroundCheckPackagePathReqBodyBuilder>

	export function newBatchDeleteEcoBackgroundCheckPackageReqBodyBuilder():Ref<BatchDeleteEcoBackgroundCheckPackageReqBodyBuilder>

	export function newBatchDeleteEcoBackgroundCheckPackageReqBuilder():Ref<BatchDeleteEcoBackgroundCheckPackageReqBuilder>

	export function newBatchDeleteEcoExamPaperPathReqBodyBuilder():Ref<BatchDeleteEcoExamPaperPathReqBodyBuilder>

	export function newBatchDeleteEcoExamPaperReqBodyBuilder():Ref<BatchDeleteEcoExamPaperReqBodyBuilder>

	export function newBatchDeleteEcoExamPaperReqBuilder():Ref<BatchDeleteEcoExamPaperReqBuilder>

	export function newBatchGetIdTalentPathReqBodyBuilder():Ref<BatchGetIdTalentPathReqBodyBuilder>

	export function newBatchGetIdTalentReqBodyBuilder():Ref<BatchGetIdTalentReqBodyBuilder>

	export function newBatchGetIdTalentReqBuilder():Ref<BatchGetIdTalentReqBuilder>

	export function newBatchUpdateEcoAccountCustomFieldReqBuilder():Ref<BatchUpdateEcoAccountCustomFieldReqBuilder>

	export function newBatchUpdateEcoBackgroundCheckCustomFieldReqBuilder():Ref<BatchUpdateEcoBackgroundCheckCustomFieldReqBuilder>

	export function newBatchUpdateEcoBackgroundCheckPackageReqBuilder():Ref<BatchUpdateEcoBackgroundCheckPackageReqBuilder>

	export function newBatchUpdateEcoExamPaperReqBuilder():Ref<BatchUpdateEcoExamPaperReqBuilder>

	export function newBatchUpdateJobManagerPathReqBodyBuilder():Ref<BatchUpdateJobManagerPathReqBodyBuilder>

	export function newBatchUpdateJobManagerReqBodyBuilder():Ref<BatchUpdateJobManagerReqBodyBuilder>

	export function newBatchUpdateJobManagerReqBuilder():Ref<BatchUpdateJobManagerReqBuilder>

	export function newBonusAmountBuilder():Ref<BonusAmountBuilder>

	export function newBusinessManagementScopeBuilder():Ref<BusinessManagementScopeBuilder>

	export function newCancelEcoBackgroundCheckPathReqBodyBuilder():Ref<CancelEcoBackgroundCheckPathReqBodyBuilder>

	export function newCancelEcoBackgroundCheckReqBodyBuilder():Ref<CancelEcoBackgroundCheckReqBodyBuilder>

	export function newCancelEcoBackgroundCheckReqBuilder():Ref<CancelEcoBackgroundCheckReqBuilder>

	export function newCandidateTagFilterBuilder():Ref<CandidateTagFilterBuilder>

	export function newCareerInfoBuilder():Ref<CareerInfoBuilder>

	export function newCashBuilder():Ref<CashBuilder>

	export function newCertificateInfoBuilder():Ref<CertificateInfoBuilder>

	export function newChangeEmployeeStageBuilder():Ref<ChangeEmployeeStageBuilder>

	export function newCheckFailedAccountInfoBuilder():Ref<CheckFailedAccountInfoBuilder>

	export function newCityBuilder():Ref<CityBuilder>

	export function newCloseJobReqBuilder():Ref<CloseJobReqBuilder>

	export function newCodeNameObjectBuilder():Ref<CodeNameObjectBuilder>

	export function newCombinedCreateJobReqBuilder():Ref<CombinedCreateJobReqBuilder>

	export function newCombinedCreateTalentPathReqBodyBuilder():Ref<CombinedCreateTalentPathReqBodyBuilder>

	export function newCombinedCreateTalentReqBodyBuilder():Ref<CombinedCreateTalentReqBodyBuilder>

	export function newCombinedCreateTalentReqBuilder():Ref<CombinedCreateTalentReqBuilder>

	export function newCombinedJobBuilder():Ref<CombinedJobBuilder>

	export function newCombinedJobObjectValueMapBuilder():Ref<CombinedJobObjectValueMapBuilder>

	export function newCombinedJobResultBuilder():Ref<CombinedJobResultBuilder>

	export function newCombinedJobResultDefaultJobPostBuilder():Ref<CombinedJobResultDefaultJobPostBuilder>

	export function newCombinedUpdateJobReqBuilder():Ref<CombinedUpdateJobReqBuilder>

	export function newCombinedUpdateTalentPathReqBodyBuilder():Ref<CombinedUpdateTalentPathReqBodyBuilder>

	export function newCombinedUpdateTalentReqBodyBuilder():Ref<CombinedUpdateTalentReqBodyBuilder>

	export function newCombinedUpdateTalentReqBuilder():Ref<CombinedUpdateTalentReqBuilder>

	export function newCommonAddressBuilder():Ref<CommonAddressBuilder>

	export function newCommonSchemaBuilder():Ref<CommonSchemaBuilder>

	export function newCommonSchemaChildBuilder():Ref<CommonSchemaChildBuilder>

	export function newCommonSchemaConfigBuilder():Ref<CommonSchemaConfigBuilder>

	export function newCommonSchemaOptionBuilder():Ref<CommonSchemaOptionBuilder>

	export function newCommonSchemaSettingBuilder():Ref<CommonSchemaSettingBuilder>

	export function newCompetitionInfoBuilder():Ref<CompetitionInfoBuilder>

	export function newConfigJobReqBuilder():Ref<ConfigJobReqBuilder>

	export function newContractPeriodInfoBuilder():Ref<ContractPeriodInfoBuilder>

	export function newCountryBuilder():Ref<CountryBuilder>

	export function newCreateApplicationPathReqBodyBuilder():Ref<CreateApplicationPathReqBodyBuilder>

	export function newCreateApplicationReqBodyBuilder():Ref<CreateApplicationReqBodyBuilder>

	export function newCreateApplicationReqBuilder():Ref<CreateApplicationReqBuilder>

	export function newCreateByAttachmentWebsiteDeliveryReqBuilder():Ref<CreateByAttachmentWebsiteDeliveryReqBuilder>

	export function newCreateByResumeWebsiteDeliveryReqBuilder():Ref<CreateByResumeWebsiteDeliveryReqBuilder>

	export function newCreateEcoAccountCustomFieldReqBuilder():Ref<CreateEcoAccountCustomFieldReqBuilder>

	export function newCreateEcoBackgroundCheckCustomFieldReqBuilder():Ref<CreateEcoBackgroundCheckCustomFieldReqBuilder>

	export function newCreateEcoBackgroundCheckPackageReqBuilder():Ref<CreateEcoBackgroundCheckPackageReqBuilder>

	export function newCreateEcoExamPaperReqBuilder():Ref<CreateEcoExamPaperReqBuilder>

	export function newCreateExamPathReqBodyBuilder():Ref<CreateExamPathReqBodyBuilder>

	export function newCreateExamReqBodyBuilder():Ref<CreateExamReqBodyBuilder>

	export function newCreateExamReqBuilder():Ref<CreateExamReqBuilder>

	export function newCreateExternalApplicationReqBuilder():Ref<CreateExternalApplicationReqBuilder>

	export function newCreateExternalBackgroundCheckReqBuilder():Ref<CreateExternalBackgroundCheckReqBuilder>

	export function newCreateExternalInterviewAssessmentReqBuilder():Ref<CreateExternalInterviewAssessmentReqBuilder>

	export function newCreateExternalInterviewReqBuilder():Ref<CreateExternalInterviewReqBuilder>

	export function newCreateExternalReferralRewardReqBuilder():Ref<CreateExternalReferralRewardReqBuilder>

	export function newCreateJobRequirementReqBuilder():Ref<CreateJobRequirementReqBuilder>

	export function newCreateNoteReqBuilder():Ref<CreateNoteReqBuilder>

	export function newCreateOfferReqBuilder():Ref<CreateOfferReqBuilder>

	export function newCreateReferralAccountPathReqBodyBuilder():Ref<CreateReferralAccountPathReqBodyBuilder>

	export function newCreateReferralAccountReqBodyBuilder():Ref<CreateReferralAccountReqBodyBuilder>

	export function newCreateReferralAccountReqBuilder():Ref<CreateReferralAccountReqBuilder>

	export function newCreateTalentExternalInfoPathReqBodyBuilder():Ref<CreateTalentExternalInfoPathReqBodyBuilder>

	export function newCreateTalentExternalInfoReqBodyBuilder():Ref<CreateTalentExternalInfoReqBodyBuilder>

	export function newCreateTalentExternalInfoReqBuilder():Ref<CreateTalentExternalInfoReqBuilder>

	export function newCreateTripartiteAgreementReqBuilder():Ref<CreateTripartiteAgreementReqBuilder>

	export function newCreateWebsiteChannelPathReqBodyBuilder():Ref<CreateWebsiteChannelPathReqBodyBuilder>

	export function newCreateWebsiteChannelReqBodyBuilder():Ref<CreateWebsiteChannelReqBodyBuilder>

	export function newCreateWebsiteChannelReqBuilder():Ref<CreateWebsiteChannelReqBuilder>

	export function newCreateWebsiteSiteUserReqBuilder():Ref<CreateWebsiteSiteUserReqBuilder>

	export function newDataPermissionBuilder():Ref<DataPermissionBuilder>

	export function newDeactivateReferralAccountReqBuilder():Ref<DeactivateReferralAccountReqBuilder>

	export function newDegreeFilterBuilder():Ref<DegreeFilterBuilder>

	export function newDeleteExternalApplicationReqBuilder():Ref<DeleteExternalApplicationReqBuilder>

	export function newDeleteExternalReferralRewardReqBuilder():Ref<DeleteExternalReferralRewardReqBuilder>

	export function newDeleteJobRequirementReqBuilder():Ref<DeleteJobRequirementReqBuilder>

	export function newDeleteNoteReqBuilder():Ref<DeleteNoteReqBuilder>

	export function newDeleteTripartiteAgreementReqBuilder():Ref<DeleteTripartiteAgreementReqBuilder>

	export function newDeleteWebsiteChannelReqBuilder():Ref<DeleteWebsiteChannelReqBuilder>

	export function newDepartmentBuilder():Ref<DepartmentBuilder>

	export function newDepartmentIdBuilder():Ref<DepartmentIdBuilder>

	export function newDiDataBuilder():Ref<DiDataBuilder>

	export function newDiInfoBuilder():Ref<DiInfoBuilder>

	export function newDimensionAbilityBuilder():Ref<DimensionAbilityBuilder>

	export function newDummyBuilder():Ref<DummyBuilder>

	export function newEcoAccountCustomFieldBuilder():Ref<EcoAccountCustomFieldBuilder>

	export function newEcoAccountCustomFieldDataBuilder():Ref<EcoAccountCustomFieldDataBuilder>

	export function newEcoAccountCustomFieldEventDataBuilder():Ref<EcoAccountCustomFieldEventDataBuilder>

	export function newEcoBackgroundCheckCreateEventCandidateInfoBuilder():Ref<EcoBackgroundCheckCreateEventCandidateInfoBuilder>

	export function newEcoBackgroundCheckCreateEventContactInfoBuilder():Ref<EcoBackgroundCheckCreateEventContactInfoBuilder>

	export function newEcoBackgroundCheckCreateEventCustomKvBuilder():Ref<EcoBackgroundCheckCreateEventCustomKvBuilder>

	export function newEcoBackgroundCheckCreateEventMobileBuilder():Ref<EcoBackgroundCheckCreateEventMobileBuilder>

	export function newEcoBackgroundCheckCustomFieldBuilder():Ref<EcoBackgroundCheckCustomFieldBuilder>

	export function newEcoBackgroundCheckCustomFieldDataBuilder():Ref<EcoBackgroundCheckCustomFieldDataBuilder>

	export function newEcoBackgroundCheckCustomFieldDataOptionBuilder():Ref<EcoBackgroundCheckCustomFieldDataOptionBuilder>

	export function newEcoBackgroundCheckPackageAdditionalItemBuilder():Ref<EcoBackgroundCheckPackageAdditionalItemBuilder>

	export function newEcoBackgroundCheckPackageBuilder():Ref<EcoBackgroundCheckPackageBuilder>

	export function newEcoBackgroundCheckPackageDataBuilder():Ref<EcoBackgroundCheckPackageDataBuilder>

	export function newEcoBackgroundCheckReportFileBuilder():Ref<EcoBackgroundCheckReportFileBuilder>

	export function newEcoExamCreateEventCandidateInfoBuilder():Ref<EcoExamCreateEventCandidateInfoBuilder>

	export function newEcoExamCreateEventMobileBuilder():Ref<EcoExamCreateEventMobileBuilder>

	export function newEcoExamLoginInfoBuilder():Ref<EcoExamLoginInfoBuilder>

	export function newEcoExamPaperBuilder():Ref<EcoExamPaperBuilder>

	export function newEcoExamPaperDataBuilder():Ref<EcoExamPaperDataBuilder>

	export function newEcoExamResultBuilder():Ref<EcoExamResultBuilder>

	export function newEcoExamResultDetailBuilder():Ref<EcoExamResultDetailBuilder>

	export function newEcoExamResultReportBuilder():Ref<EcoExamResultReportBuilder>

	export function newEducationInfoBuilder():Ref<EducationInfoBuilder>

	export function newEhrImportTaskBuilder():Ref<EhrImportTaskBuilder>

	export function newEmployeeBuilder():Ref<EmployeeBuilder>

	export function newEmployeeConversionInfoBuilder():Ref<EmployeeConversionInfoBuilder>

	export function newEmployeeOverboardInfoBuilder():Ref<EmployeeOverboardInfoBuilder>

	export function newEntityInfoBuilder():Ref<EntityInfoBuilder>

	export function newEvaluationBuilder():Ref<EvaluationBuilder>

	export function newEvaluationTaskBuilder():Ref<EvaluationTaskBuilder>

	export function newExamMarkingTaskBuilder():Ref<ExamMarkingTaskBuilder>

	export function newExternalApplicationBuilder():Ref<ExternalApplicationBuilder>

	export function newExternalBackgroundCheckAttachmentBuilder():Ref<ExternalBackgroundCheckAttachmentBuilder>

	export function newExternalBackgroundCheckBuilder():Ref<ExternalBackgroundCheckBuilder>

	export function newExternalGrantRoleInfoBuilder():Ref<ExternalGrantRoleInfoBuilder>

	export function newExternalInterviewAssessmentBuilder():Ref<ExternalInterviewAssessmentBuilder>

	export function newExternalInterviewAssessmentDimensionBuilder():Ref<ExternalInterviewAssessmentDimensionBuilder>

	export function newExternalInterviewBuilder():Ref<ExternalInterviewBuilder>

	export function newExternalRewardBuilder():Ref<ExternalRewardBuilder>

	export function newFilterBuilder():Ref<FilterBuilder>

	export function newFiveStartScoringResultBuilder():Ref<FiveStartScoringResultBuilder>

	export function newGetAgencyReqBuilder():Ref<GetAgencyReqBuilder>

	export function newGetApplicationReqBuilder():Ref<GetApplicationReqBuilder>

	export function newGetAttachmentReqBuilder():Ref<GetAttachmentReqBuilder>

	export function newGetByApplicationEmployeeReqBuilder():Ref<GetByApplicationEmployeeReqBuilder>

	export function newGetByApplicationReferralReqBuilder():Ref<GetByApplicationReferralReqBuilder>

	export function newGetByTalentInterviewReqBuilder():Ref<GetByTalentInterviewReqBuilder>

	export function newGetEmployeeReqBuilder():Ref<GetEmployeeReqBuilder>

	export function newGetInterviewRecordAttachmentReqBuilder():Ref<GetInterviewRecordAttachmentReqBuilder>

	export function newGetInterviewRecordReqBuilder():Ref<GetInterviewRecordReqBuilder>

	export function newGetJobManagerReqBuilder():Ref<GetJobManagerReqBuilder>

	export function newGetJobReqBuilder():Ref<GetJobReqBuilder>

	export function newGetNoteReqBuilder():Ref<GetNoteReqBuilder>

	export function newGetOfferApplicationFormReqBuilder():Ref<GetOfferApplicationFormReqBuilder>

	export function newGetOfferReqBuilder():Ref<GetOfferReqBuilder>

	export function newGetOfferSchemaReqBuilder():Ref<GetOfferSchemaReqBuilder>

	export function newGetReferralWebsiteJobPostReqBuilder():Ref<GetReferralWebsiteJobPostReqBuilder>

	export function newGetRoleReqBuilder():Ref<GetRoleReqBuilder>

	export function newGetTalentReqBuilder():Ref<GetTalentReqBuilder>

	export function newGetWebsiteDeliveryTaskReqBuilder():Ref<GetWebsiteDeliveryTaskReqBuilder>

	export function newGetWebsiteJobPostReqBuilder():Ref<GetWebsiteJobPostReqBuilder>

	export function newI18nBuilder():Ref<I18nBuilder>

	export function newIdNameObjectBuilder():Ref<IdNameObjectBuilder>

	export function newIdentificationBuilder():Ref<IdentificationBuilder>

	export function newInternOfferOffboardingInfoBuilder():Ref<InternOfferOffboardingInfoBuilder>

	export function newInternOfferOnboardingInfoBuilder():Ref<InternOfferOnboardingInfoBuilder>

	export function newInternOfferStatusBuilder():Ref<InternOfferStatusBuilder>

	export function newInternOfferStatusOfferReqBuilder():Ref<InternOfferStatusOfferReqBuilder>

	export function newInternshipInfoBuilder():Ref<InternshipInfoBuilder>

	export function newInterviewAddressBuilder():Ref<InterviewAddressBuilder>

	export function newInterviewAppointmentConfigBuilder():Ref<InterviewAppointmentConfigBuilder>

	export function newInterviewAppointmentConfigContentBuilder():Ref<InterviewAppointmentConfigContentBuilder>

	export function newInterviewAssessmentDimensionArgsBuilder():Ref<InterviewAssessmentDimensionArgsBuilder>

	export function newInterviewAssessmentDimensionArgsScoreBuilder():Ref<InterviewAssessmentDimensionArgsScoreBuilder>

	export function newInterviewAssessmentDimensionBuilder():Ref<InterviewAssessmentDimensionBuilder>

	export function newInterviewAssessmentTemplateArgsBuilder():Ref<InterviewAssessmentTemplateArgsBuilder>

	export function newInterviewAssessmentTemplateBuilder():Ref<InterviewAssessmentTemplateBuilder>

	export function newInterviewBuilder():Ref<InterviewBuilder>

	export function newInterviewDimensionAssessmentBuilder():Ref<InterviewDimensionAssessmentBuilder>

	export function newInterviewDimensionOptionBuilder():Ref<InterviewDimensionOptionBuilder>

	export function newInterviewDimensionScoreBuilder():Ref<InterviewDimensionScoreBuilder>

	export function newInterviewExtendBuilder():Ref<InterviewExtendBuilder>

	export function newInterviewFeedbackFormBuilder():Ref<InterviewFeedbackFormBuilder>

	export function newInterviewFeedbackFormDimensionBuilder():Ref<InterviewFeedbackFormDimensionBuilder>

	export function newInterviewFeedbackFormModuleBuilder():Ref<InterviewFeedbackFormModuleBuilder>

	export function newInterviewMeetingRoomBuilder():Ref<InterviewMeetingRoomBuilder>

	export function newInterviewQuestionBuilder():Ref<InterviewQuestionBuilder>

	export function newInterviewRecordBuilder():Ref<InterviewRecordBuilder>

	export function newInterviewRecordTemplateBuilder():Ref<InterviewRecordTemplateBuilder>

	export function newInterviewRegistrationSchemaBuilder():Ref<InterviewRegistrationSchemaBuilder>

	export function newInterviewRoundTypeAssessmentTemplateBuilder():Ref<InterviewRoundTypeAssessmentTemplateBuilder>

	export function newInterviewRoundTypeBuilder():Ref<InterviewRoundTypeBuilder>

	export function newInterviewScoreBuilder():Ref<InterviewScoreBuilder>

	export function newInterviewTaskBuilder():Ref<InterviewTaskBuilder>

	export function newInterviewerBuilder():Ref<InterviewerBuilder>

	export function newJobBuilder():Ref<JobBuilder>

	export function newJobCategoryBuilder():Ref<JobCategoryBuilder>

	export function newJobCityBuilder():Ref<JobCityBuilder>

	export function newJobConfigBuilder():Ref<JobConfigBuilder>

	export function newJobConfigInterviewRoundBuilder():Ref<JobConfigInterviewRoundBuilder>

	export function newJobConfigInterviewRoundConfBuilder():Ref<JobConfigInterviewRoundConfBuilder>

	export function newJobConfigResultBuilder():Ref<JobConfigResultBuilder>

	export function newJobConfigRoundTypeBuilder():Ref<JobConfigRoundTypeBuilder>

	export function newJobConfigRoundTypeResultBuilder():Ref<JobConfigRoundTypeResultBuilder>

	export function newJobCustomizedDataBuilder():Ref<JobCustomizedDataBuilder>

	export function newJobCustomizedOptionBuilder():Ref<JobCustomizedOptionBuilder>

	export function newJobCustomizedTimeRangeBuilder():Ref<JobCustomizedTimeRangeBuilder>

	export function newJobCustomizedValueBuilder():Ref<JobCustomizedValueBuilder>

	export function newJobDepartmentBuilder():Ref<JobDepartmentBuilder>

	export function newJobFunctionBuilder():Ref<JobFunctionBuilder>

	export function newJobHighlightBuilder():Ref<JobHighlightBuilder>

	export function newJobLevelBuilder():Ref<JobLevelBuilder>

	export function newJobManagerBuilder():Ref<JobManagerBuilder>

	export function newJobProcessBuilder():Ref<JobProcessBuilder>

	export function newJobProcessesBuilder():Ref<JobProcessesBuilder>

	export function newJobProcessesStageBuilder():Ref<JobProcessesStageBuilder>

	export function newJobRecruiter2Builder():Ref<JobRecruiter2Builder>

	export function newJobRecruiterBuilder():Ref<JobRecruiterBuilder>

	export function newJobRecruitmentTypeBuilder():Ref<JobRecruitmentTypeBuilder>

	export function newJobRequirementBuilder():Ref<JobRequirementBuilder>

	export function newJobRequirementCustomizedDataBuilder():Ref<JobRequirementCustomizedDataBuilder>

	export function newJobRequirementCustomizedDataDtoBuilder():Ref<JobRequirementCustomizedDataDtoBuilder>

	export function newJobRequirementCustomizedOptionBuilder():Ref<JobRequirementCustomizedOptionBuilder>

	export function newJobRequirementCustomizedTimeRangeBuilder():Ref<JobRequirementCustomizedTimeRangeBuilder>

	export function newJobRequirementCustomizedValueBuilder():Ref<JobRequirementCustomizedValueBuilder>

	export function newJobRequirementDtoBuilder():Ref<JobRequirementDtoBuilder>

	export function newJobRequirementSchemaBuilder():Ref<JobRequirementSchemaBuilder>

	export function newJobSchemaBuilder():Ref<JobSchemaBuilder>

	export function newJobTypeBuilder():Ref<JobTypeBuilder>

	export function newJobTypeInfoBuilder():Ref<JobTypeInfoBuilder>

	export function newLanguageInfoBuilder():Ref<LanguageInfoBuilder>

	export function newLevelBuilder():Ref<LevelBuilder>

	export function newListApplicationInterviewReqBuilder():Ref<ListApplicationInterviewReqBuilder>

	export function newListApplicationReqBuilder():Ref<ListApplicationReqBuilder>

	export function newListBackgroundCheckOrderReqBuilder():Ref<ListBackgroundCheckOrderReqBuilder>

	export function newListByIdJobRequirementPathReqBodyBuilder():Ref<ListByIdJobRequirementPathReqBodyBuilder>

	export function newListByIdJobRequirementReqBodyBuilder():Ref<ListByIdJobRequirementReqBodyBuilder>

	export function newListByIdJobRequirementReqBuilder():Ref<ListByIdJobRequirementReqBuilder>

	export function newListEvaluationReqBuilder():Ref<ListEvaluationReqBuilder>

	export function newListEvaluationTaskReqBuilder():Ref<ListEvaluationTaskReqBuilder>

	export function newListExamMarkingTaskReqBuilder():Ref<ListExamMarkingTaskReqBuilder>

	export function newListExternalApplicationReqBuilder():Ref<ListExternalApplicationReqBuilder>

	export function newListInterviewFeedbackFormReqBuilder():Ref<ListInterviewFeedbackFormReqBuilder>

	export function newListInterviewRecordReqBuilder():Ref<ListInterviewRecordReqBuilder>

	export function newListInterviewRegistrationSchemaReqBuilder():Ref<ListInterviewRegistrationSchemaReqBuilder>

	export function newListInterviewReqBuilder():Ref<ListInterviewReqBuilder>

	export function newListInterviewRoundTypeReqBuilder():Ref<ListInterviewRoundTypeReqBuilder>

	export function newListInterviewTaskReqBuilder():Ref<ListInterviewTaskReqBuilder>

	export function newListJobFunctionReqBuilder():Ref<ListJobFunctionReqBuilder>

	export function newListJobProcessReqBuilder():Ref<ListJobProcessReqBuilder>

	export function newListJobReqBuilder():Ref<ListJobReqBuilder>

	export function newListJobRequirementReqBuilder():Ref<ListJobRequirementReqBuilder>

	export function newListJobRequirementSchemaReqBuilder():Ref<ListJobRequirementSchemaReqBuilder>

	export function newListJobSchemaReqBuilder():Ref<ListJobSchemaReqBuilder>

	export function newListJobTypeReqBuilder():Ref<ListJobTypeReqBuilder>

	export function newListLocationReqBuilder():Ref<ListLocationReqBuilder>

	export function newListNoteReqBuilder():Ref<ListNoteReqBuilder>

	export function newListOfferApplicationFormReqBuilder():Ref<ListOfferApplicationFormReqBuilder>

	export function newListOfferReqBuilder():Ref<ListOfferReqBuilder>

	export function newListQuestionnaireReqBuilder():Ref<ListQuestionnaireReqBuilder>

	export function newListReferralWebsiteJobPostReqBuilder():Ref<ListReferralWebsiteJobPostReqBuilder>

	export function newListRegistrationSchemaReqBuilder():Ref<ListRegistrationSchemaReqBuilder>

	export function newListResumeSourceReqBuilder():Ref<ListResumeSourceReqBuilder>

	export function newListRoleReqBuilder():Ref<ListRoleReqBuilder>

	export function newListSubjectReqBuilder():Ref<ListSubjectReqBuilder>

	export function newListTalentFolderReqBuilder():Ref<ListTalentFolderReqBuilder>

	export function newListTalentReqBuilder():Ref<ListTalentReqBuilder>

	export function newListTerminationReasonReqBuilder():Ref<ListTerminationReasonReqBuilder>

	export function newListTodoReqBuilder():Ref<ListTodoReqBuilder>

	export function newListTripartiteAgreementReqBuilder():Ref<ListTripartiteAgreementReqBuilder>

	export function newListWebsiteChannelReqBuilder():Ref<ListWebsiteChannelReqBuilder>

	export function newListWebsiteJobPostReqBuilder():Ref<ListWebsiteJobPostReqBuilder>

	export function newListWebsiteReqBuilder():Ref<ListWebsiteReqBuilder>

	export function newLocationBaseInfoBuilder():Ref<LocationBaseInfoBuilder>

	export function newLocationBuilder():Ref<LocationBuilder>

	export function newLocationCityBuilder():Ref<LocationCityBuilder>

	export function newLocationCountryBuilder():Ref<LocationCountryBuilder>

	export function newLocationDistrictBuilder():Ref<LocationDistrictBuilder>

	export function newLocationDtoBuilder():Ref<LocationDtoBuilder>

	export function newLocationNameInfoBuilder():Ref<LocationNameInfoBuilder>

	export function newLocationStateBuilder():Ref<LocationStateBuilder>

	export function newLoginInfoEcoExamPathReqBodyBuilder():Ref<LoginInfoEcoExamPathReqBodyBuilder>

	export function newLoginInfoEcoExamReqBodyBuilder():Ref<LoginInfoEcoExamReqBodyBuilder>

	export function newLoginInfoEcoExamReqBuilder():Ref<LoginInfoEcoExamReqBuilder>

	export function newMasterLocationAddressInfoBuilder():Ref<MasterLocationAddressInfoBuilder>

	export function newMasterLocationInfoBuilder():Ref<MasterLocationInfoBuilder>

	export function newMentionEntityBuilder():Ref<MentionEntityBuilder>

	export function newMobileBuilder():Ref<MobileBuilder>

	export function newMoveTalentTalentPoolPathReqBodyBuilder():Ref<MoveTalentTalentPoolPathReqBodyBuilder>

	export function newMoveTalentTalentPoolReqBodyBuilder():Ref<MoveTalentTalentPoolReqBodyBuilder>

	export function newMoveTalentTalentPoolReqBuilder():Ref<MoveTalentTalentPoolReqBuilder>

	export function newNationalityBuilder():Ref<NationalityBuilder>

	export function newNoteBuilder():Ref<NoteBuilder>

	export function newObjectAttributeBuilder():Ref<ObjectAttributeBuilder>

	export function newOfferApplicationReqBuilder():Ref<OfferApplicationReqBuilder>

	export function newOfferApplyFormBuilder():Ref<OfferApplyFormBuilder>

	export function newOfferApplyFormConfigFormulaInfoBuilder():Ref<OfferApplyFormConfigFormulaInfoBuilder>

	export function newOfferApplyFormConfigOptionInfoBuilder():Ref<OfferApplyFormConfigOptionInfoBuilder>

	export function newOfferApplyFormFormulaExtraMapInfoBuilder():Ref<OfferApplyFormFormulaExtraMapInfoBuilder>

	export function newOfferApplyFormInfoBuilder():Ref<OfferApplyFormInfoBuilder>

	export function newOfferApplyFormModuleInfoBuilder():Ref<OfferApplyFormModuleInfoBuilder>

	export function newOfferApplyFormObjectConfigInfoBuilder():Ref<OfferApplyFormObjectConfigInfoBuilder>

	export function newOfferApplyFormObjectDisplayConfigInfoBuilder():Ref<OfferApplyFormObjectDisplayConfigInfoBuilder>

	export function newOfferApplyFormObjectInfoBuilder():Ref<OfferApplyFormObjectInfoBuilder>

	export function newOfferApplyFormPreObjectConfigInfoBuilder():Ref<OfferApplyFormPreObjectConfigInfoBuilder>

	export function newOfferApplyFormSchemaBuilder():Ref<OfferApplyFormSchemaBuilder>

	export function newOfferApprovalTemplateBuilder():Ref<OfferApprovalTemplateBuilder>

	export function newOfferBasicInfoBuilder():Ref<OfferBasicInfoBuilder>

	export function newOfferBuilder():Ref<OfferBuilder>

	export function newOfferCustomFieldBuilder():Ref<OfferCustomFieldBuilder>

	export function newOfferCustomFieldConfigBuilder():Ref<OfferCustomFieldConfigBuilder>

	export function newOfferCustomFieldConfigOptionBuilder():Ref<OfferCustomFieldConfigOptionBuilder>

	export function newOfferCustomizedInfoBuilder():Ref<OfferCustomizedInfoBuilder>

	export function newOfferEmailInfoBuilder():Ref<OfferEmailInfoBuilder>

	export function newOfferFileBuilder():Ref<OfferFileBuilder>

	export function newOfferInfoBuilder():Ref<OfferInfoBuilder>

	export function newOfferJobInfoBuilder():Ref<OfferJobInfoBuilder>

	export function newOfferListInfoBuilder():Ref<OfferListInfoBuilder>

	export function newOfferSalaryInfoBuilder():Ref<OfferSalaryInfoBuilder>

	export function newOfferSchemaBuilder():Ref<OfferSchemaBuilder>

	export function newOfferSchemaChildBuilder():Ref<OfferSchemaChildBuilder>

	export function newOfferSchemaDetailBuilder():Ref<OfferSchemaDetailBuilder>

	export function newOfferSchemaDetailOptionBuilder():Ref<OfferSchemaDetailOptionBuilder>

	export function newOfferSchemaListInfoBuilder():Ref<OfferSchemaListInfoBuilder>

	export function newOfferSchemaNameBuilder():Ref<OfferSchemaNameBuilder>

	export function newOfferSelectionObjectBuilder():Ref<OfferSelectionObjectBuilder>

	export function newOfferSendRecordBuilder():Ref<OfferSendRecordBuilder>

	export function newOfferSignatureInfoBuilder():Ref<OfferSignatureInfoBuilder>

	export function newOfferStatusOfferPathReqBodyBuilder():Ref<OfferStatusOfferPathReqBodyBuilder>

	export function newOfferStatusOfferReqBodyBuilder():Ref<OfferStatusOfferReqBodyBuilder>

	export function newOfferStatusOfferReqBuilder():Ref<OfferStatusOfferReqBuilder>

	export function newOnboardStatusTalentPathReqBodyBuilder():Ref<OnboardStatusTalentPathReqBodyBuilder>

	export function newOnboardStatusTalentReqBodyBuilder():Ref<OnboardStatusTalentReqBodyBuilder>

	export function newOnboardStatusTalentReqBuilder():Ref<OnboardStatusTalentReqBuilder>

	export function newOpenJobPathReqBodyBuilder():Ref<OpenJobPathReqBodyBuilder>

	export function newOpenJobReqBodyBuilder():Ref<OpenJobReqBodyBuilder>

	export function newOpenJobReqBuilder():Ref<OpenJobReqBuilder>

	export function newP2ApplicationDeletedV1Handler(v1:(v2:context.Context,v1:Ref<P2ApplicationDeletedV1>)=>void/*error*/):Ref<P2ApplicationDeletedV1Handler>

	export function newP2ApplicationStageChangedV1Handler(v1:(v2:context.Context,v1:Ref<P2ApplicationStageChangedV1>)=>void/*error*/):Ref<P2ApplicationStageChangedV1Handler>

	export function newP2EcoAccountCreatedV1Handler(v1:(v2:context.Context,v1:Ref<P2EcoAccountCreatedV1>)=>void/*error*/):Ref<P2EcoAccountCreatedV1Handler>

	export function newP2EcoBackgroundCheckCanceledV1Handler(v1:(v2:context.Context,v1:Ref<P2EcoBackgroundCheckCanceledV1>)=>void/*error*/):Ref<P2EcoBackgroundCheckCanceledV1Handler>

	export function newP2EcoBackgroundCheckCreatedV1Handler(v1:(v2:context.Context,v1:Ref<P2EcoBackgroundCheckCreatedV1>)=>void/*error*/):Ref<P2EcoBackgroundCheckCreatedV1Handler>

	export function newP2EcoExamCreatedV1Handler(v1:(v2:context.Context,v1:Ref<P2EcoExamCreatedV1>)=>void/*error*/):Ref<P2EcoExamCreatedV1Handler>

	export function newP2EhrImportTaskForInternshipOfferImportedV1Handler(v1:(v2:context.Context,v1:Ref<P2EhrImportTaskForInternshipOfferImportedV1>)=>void/*error*/):Ref<P2EhrImportTaskForInternshipOfferImportedV1Handler>

	export function newP2EhrImportTaskImportedV1Handler(v1:(v2:context.Context,v1:Ref<P2EhrImportTaskImportedV1>)=>void/*error*/):Ref<P2EhrImportTaskImportedV1Handler>

	export function newP2OfferStatusChangedV1Handler(v1:(v2:context.Context,v1:Ref<P2OfferStatusChangedV1>)=>void/*error*/):Ref<P2OfferStatusChangedV1Handler>

	export function newP2ReferralAccountAssetsUpdateV1Handler(v1:(v2:context.Context,v1:Ref<P2ReferralAccountAssetsUpdateV1>)=>void/*error*/):Ref<P2ReferralAccountAssetsUpdateV1Handler>

	export function newP2TalentDeletedV1Handler(v1:(v2:context.Context,v1:Ref<P2TalentDeletedV1>)=>void/*error*/):Ref<P2TalentDeletedV1Handler>

	export function newPatchEhrImportTaskReqBuilder():Ref<PatchEhrImportTaskReqBuilder>

	export function newPatchEmployeeReqBuilder():Ref<PatchEmployeeReqBuilder>

	export function newPatchExternalInterviewAssessmentReqBuilder():Ref<PatchExternalInterviewAssessmentReqBuilder>

	export function newPatchNotePathReqBodyBuilder():Ref<PatchNotePathReqBodyBuilder>

	export function newPatchNoteReqBodyBuilder():Ref<PatchNoteReqBodyBuilder>

	export function newPatchNoteReqBuilder():Ref<PatchNoteReqBuilder>

	export function newPermissionCollectionBuilder():Ref<PermissionCollectionBuilder>

	export function newPermissionGroupInfoBuilder():Ref<PermissionGroupInfoBuilder>

	export function newPermissionScopeRuleBuilder():Ref<PermissionScopeRuleBuilder>

	export function newPointBuilder():Ref<PointBuilder>

	export function newPortalJobPostBuilder():Ref<PortalJobPostBuilder>

	export function newPreviewAttachmentReqBuilder():Ref<PreviewAttachmentReqBuilder>

	export function newProjectInfoBuilder():Ref<ProjectInfoBuilder>

	export function newProtectAgencyPathReqBodyBuilder():Ref<ProtectAgencyPathReqBodyBuilder>

	export function newProtectAgencyReqBodyBuilder():Ref<ProtectAgencyReqBodyBuilder>

	export function newProtectAgencyReqBuilder():Ref<ProtectAgencyReqBuilder>

	export function newProtectSearchAgencyPathReqBodyBuilder():Ref<ProtectSearchAgencyPathReqBodyBuilder>

	export function newProtectSearchAgencyReqBodyBuilder():Ref<ProtectSearchAgencyReqBodyBuilder>

	export function newProtectSearchAgencyReqBuilder():Ref<ProtectSearchAgencyReqBuilder>

	export function newProviderIdNameObjectBuilder():Ref<ProviderIdNameObjectBuilder>

	export function newPublishAdvertisementPathReqBodyBuilder():Ref<PublishAdvertisementPathReqBodyBuilder>

	export function newPublishAdvertisementReqBodyBuilder():Ref<PublishAdvertisementReqBodyBuilder>

	export function newPublishAdvertisementReqBuilder():Ref<PublishAdvertisementReqBuilder>

	export function newQueryAgencyReqBuilder():Ref<QueryAgencyReqBuilder>

	export function newQueryLocationPathReqBodyBuilder():Ref<QueryLocationPathReqBodyBuilder>

	export function newQueryLocationReqBodyBuilder():Ref<QueryLocationReqBodyBuilder>

	export function newQueryLocationReqBuilder():Ref<QueryLocationReqBuilder>

	export function newQuestionBuilder():Ref<QuestionBuilder>

	export function newQuestionnaireBuilder():Ref<QuestionnaireBuilder>

	export function newRangeFilterBuilder():Ref<RangeFilterBuilder>

	export function newReconciliationReferralAccountPathReqBodyBuilder():Ref<ReconciliationReferralAccountPathReqBodyBuilder>

	export function newReconciliationReferralAccountReqBodyBuilder():Ref<ReconciliationReferralAccountReqBodyBuilder>

	export function newReconciliationReferralAccountReqBuilder():Ref<ReconciliationReferralAccountReqBuilder>

	export function newRecoverApplicationReqBuilder():Ref<RecoverApplicationReqBuilder>

	export function newRecruiterJobReqBuilder():Ref<RecruiterJobReqBuilder>

	export function newRecruitmentTypeBuilder():Ref<RecruitmentTypeBuilder>

	export function newReferralBuilder():Ref<ReferralBuilder>

	export function newReferralInfoBuilder():Ref<ReferralInfoBuilder>

	export function newRegistrationBasicInfoBuilder():Ref<RegistrationBasicInfoBuilder>

	export function newRegistrationInfoBuilder():Ref<RegistrationInfoBuilder>

	export function newRegistrationSchemaBuilder():Ref<RegistrationSchemaBuilder>

	export function newRegistrationSchemaInfoBuilder():Ref<RegistrationSchemaInfoBuilder>

	export function newResumeSourceBuilder():Ref<ResumeSourceBuilder>

	export function newRoleBuilder():Ref<RoleBuilder>

	export function newRoleDetailBuilder():Ref<RoleDetailBuilder>

	export function newSalaryBuilder():Ref<SalaryBuilder>

	export function newScoreCalculationConfigBuilder():Ref<ScoreCalculationConfigBuilder>

	export function newScoreDimensionConfigBuilder():Ref<ScoreDimensionConfigBuilder>

	export function newSearchDiversityInclusionPathReqBodyBuilder():Ref<SearchDiversityInclusionPathReqBodyBuilder>

	export function newSearchDiversityInclusionReqBodyBuilder():Ref<SearchDiversityInclusionReqBodyBuilder>

	export function newSearchDiversityInclusionReqBuilder():Ref<SearchDiversityInclusionReqBuilder>

	export function newSearchJobPublishRecordPathReqBodyBuilder():Ref<SearchJobPublishRecordPathReqBodyBuilder>

	export function newSearchJobPublishRecordReqBodyBuilder():Ref<SearchJobPublishRecordReqBodyBuilder>

	export function newSearchJobPublishRecordReqBuilder():Ref<SearchJobPublishRecordReqBuilder>

	export function newSearchReferralPathReqBodyBuilder():Ref<SearchReferralPathReqBodyBuilder>

	export function newSearchReferralReqBodyBuilder():Ref<SearchReferralReqBodyBuilder>

	export function newSearchReferralReqBuilder():Ref<SearchReferralReqBuilder>

	export function newSearchTalentOperationLogPathReqBodyBuilder():Ref<SearchTalentOperationLogPathReqBodyBuilder>

	export function newSearchTalentOperationLogReqBodyBuilder():Ref<SearchTalentOperationLogReqBodyBuilder>

	export function newSearchTalentOperationLogReqBuilder():Ref<SearchTalentOperationLogReqBuilder>

	export function newSearchTalentPoolReqBuilder():Ref<SearchTalentPoolReqBuilder>

	export function newSearchTestPathReqBodyBuilder():Ref<SearchTestPathReqBodyBuilder>

	export function newSearchTestReqBodyBuilder():Ref<SearchTestReqBodyBuilder>

	export function newSearchTestReqBuilder():Ref<SearchTestReqBuilder>

	export function newSearchWebsiteJobPostPathReqBodyBuilder():Ref<SearchWebsiteJobPostPathReqBodyBuilder>

	export function newSearchWebsiteJobPostReqBodyBuilder():Ref<SearchWebsiteJobPostReqBodyBuilder>

	export function newSearchWebsiteJobPostReqBuilder():Ref<SearchWebsiteJobPostReqBuilder>

	export function newSelectOptionResultBuilder():Ref<SelectOptionResultBuilder>

	export function newSequenceBuilder():Ref<SequenceBuilder>

	export function newSignatureAttachmentBuilder():Ref<SignatureAttachmentBuilder>

	export function newSiteApplicationBuilder():Ref<SiteApplicationBuilder>

	export function newSiteApplicationResumeBuilder():Ref<SiteApplicationResumeBuilder>

	export function newSiteBuilder():Ref<SiteBuilder>

	export function newSiteJobCityBuilder():Ref<SiteJobCityBuilder>

	export function newSiteJobPostBuilder():Ref<SiteJobPostBuilder>

	export function newSiteJobPostSearchInfoBuilder():Ref<SiteJobPostSearchInfoBuilder>

	export function newSiteJobPostSearchRequestBuilder():Ref<SiteJobPostSearchRequestBuilder>

	export function newSiteJobRecruitmentTypeBuilder():Ref<SiteJobRecruitmentTypeBuilder>

	export function newSiteJobTypeBuilder():Ref<SiteJobTypeBuilder>

	export function newSiteNameBuilder():Ref<SiteNameBuilder>

	export function newSiteResumeAwardBuilder():Ref<SiteResumeAwardBuilder>

	export function newSiteResumeCareerBuilder():Ref<SiteResumeCareerBuilder>

	export function newSiteResumeCertificateBuilder():Ref<SiteResumeCertificateBuilder>

	export function newSiteResumeCompetitionBuilder():Ref<SiteResumeCompetitionBuilder>

	export function newSiteResumeEducationBuilder():Ref<SiteResumeEducationBuilder>

	export function newSiteResumeIdentificationBuilder():Ref<SiteResumeIdentificationBuilder>

	export function newSiteResumeInternshipBuilder():Ref<SiteResumeInternshipBuilder>

	export function newSiteResumeLanguageSkillBuilder():Ref<SiteResumeLanguageSkillBuilder>

	export function newSiteResumeProjectBuilder():Ref<SiteResumeProjectBuilder>

	export function newSiteResumeSnsBuilder():Ref<SiteResumeSnsBuilder>

	export function newSiteResumeWorkBuilder():Ref<SiteResumeWorkBuilder>

	export function newSnsInfoBuilder():Ref<SnsInfoBuilder>

	export function newStoreBuilder():Ref<StoreBuilder>

	export function newSubjectBuilder():Ref<SubjectBuilder>

	export function newTalentAwardInfoBuilder():Ref<TalentAwardInfoBuilder>

	export function newTalentBasicInfoBuilder():Ref<TalentBasicInfoBuilder>

	export function newTalentBatchInfoBuilder():Ref<TalentBatchInfoBuilder>

	export function newTalentBuilder():Ref<TalentBuilder>

	export function newTalentCareerInfoBuilder():Ref<TalentCareerInfoBuilder>

	export function newTalentCertificateInfoBuilder():Ref<TalentCertificateInfoBuilder>

	export function newTalentCityInfoBuilder():Ref<TalentCityInfoBuilder>

	export function newTalentCombinedAwardInfoBuilder():Ref<TalentCombinedAwardInfoBuilder>

	export function newTalentCombinedBasicInfoBuilder():Ref<TalentCombinedBasicInfoBuilder>

	export function newTalentCombinedCareerInfoBuilder():Ref<TalentCombinedCareerInfoBuilder>

	export function newTalentCombinedEducationInfoBuilder():Ref<TalentCombinedEducationInfoBuilder>

	export function newTalentCombinedLanguageInfoBuilder():Ref<TalentCombinedLanguageInfoBuilder>

	export function newTalentCombinedProjectInfoBuilder():Ref<TalentCombinedProjectInfoBuilder>

	export function newTalentCombinedSnsInfoBuilder():Ref<TalentCombinedSnsInfoBuilder>

	export function newTalentCombinedWorkInfoBuilder():Ref<TalentCombinedWorkInfoBuilder>

	export function newTalentCompetitionInfoBuilder():Ref<TalentCompetitionInfoBuilder>

	export function newTalentCustomizedAttachmentBuilder():Ref<TalentCustomizedAttachmentBuilder>

	export function newTalentCustomizedDataBuilder():Ref<TalentCustomizedDataBuilder>

	export function newTalentCustomizedDataChildBuilder():Ref<TalentCustomizedDataChildBuilder>

	export function newTalentCustomizedDataObjectValueBuilder():Ref<TalentCustomizedDataObjectValueBuilder>

	export function newTalentCustomizedDataObjectValueChildBuilder():Ref<TalentCustomizedDataObjectValueChildBuilder>

	export function newTalentCustomizedOptionBuilder():Ref<TalentCustomizedOptionBuilder>

	export function newTalentCustomizedTimeRangeBuilder():Ref<TalentCustomizedTimeRangeBuilder>

	export function newTalentCustomizedValueBuilder():Ref<TalentCustomizedValueBuilder>

	export function newTalentEducationInfoBuilder():Ref<TalentEducationInfoBuilder>

	export function newTalentExternalInfoBuilder():Ref<TalentExternalInfoBuilder>

	export function newTalentFolderBuilder():Ref<TalentFolderBuilder>

	export function newTalentFolderForListBuilder():Ref<TalentFolderForListBuilder>

	export function newTalentIdentificationInfoBuilder():Ref<TalentIdentificationInfoBuilder>

	export function newTalentInternshipInfoBuilder():Ref<TalentInternshipInfoBuilder>

	export function newTalentInterviewBuilder():Ref<TalentInterviewBuilder>

	export function newTalentInterviewRegistrationSimpleBuilder():Ref<TalentInterviewRegistrationSimpleBuilder>

	export function newTalentLanguageInfoBuilder():Ref<TalentLanguageInfoBuilder>

	export function newTalentNationalityBuilder():Ref<TalentNationalityBuilder>

	export function newTalentOperationLogBuilder():Ref<TalentOperationLogBuilder>

	export function newTalentPoolBuilder():Ref<TalentPoolBuilder>

	export function newTalentProjectInfoBuilder():Ref<TalentProjectInfoBuilder>

	export function newTalentResumeSourceBuilder():Ref<TalentResumeSourceBuilder>

	export function newTalentSchemaChildObjectBuilder():Ref<TalentSchemaChildObjectBuilder>

	export function newTalentSchemaObjectBuilder():Ref<TalentSchemaObjectBuilder>

	export function newTalentSchemaOptionBuilder():Ref<TalentSchemaOptionBuilder>

	export function newTalentSelfEvaluationBuilder():Ref<TalentSelfEvaluationBuilder>

	export function newTalentSnsInfoBuilder():Ref<TalentSnsInfoBuilder>

	export function newTalentWorksInfoBuilder():Ref<TalentWorksInfoBuilder>

	export function newTargetMajorInfoBuilder():Ref<TargetMajorInfoBuilder>

	export function newTerminateApplicationPathReqBodyBuilder():Ref<TerminateApplicationPathReqBodyBuilder>

	export function newTerminateApplicationReqBodyBuilder():Ref<TerminateApplicationReqBodyBuilder>

	export function newTerminateApplicationReqBuilder():Ref<TerminateApplicationReqBuilder>

	export function newTerminationReasonBuilder():Ref<TerminationReasonBuilder>

	export function newTestBuilder():Ref<TestBuilder>

	export function newTestResultDetailBuilder():Ref<TestResultDetailBuilder>

	export function newTestScheduleBuilder():Ref<TestScheduleBuilder>

	export function newTodoBuilder():Ref<TodoBuilder>

	export function newTodoCommonBuilder():Ref<TodoCommonBuilder>

	export function newTradeDetailBuilder():Ref<TradeDetailBuilder>

	export function newTransferOnboardApplicationPathReqBodyBuilder():Ref<TransferOnboardApplicationPathReqBodyBuilder>

	export function newTransferOnboardApplicationReqBodyBuilder():Ref<TransferOnboardApplicationReqBodyBuilder>

	export function newTransferOnboardApplicationReqBuilder():Ref<TransferOnboardApplicationReqBuilder>

	export function newTransferStageApplicationPathReqBodyBuilder():Ref<TransferStageApplicationPathReqBodyBuilder>

	export function newTransferStageApplicationReqBodyBuilder():Ref<TransferStageApplicationReqBodyBuilder>

	export function newTransferStageApplicationReqBuilder():Ref<TransferStageApplicationReqBuilder>

	export function newTripartiteAgreementInfoBuilder():Ref<TripartiteAgreementInfoBuilder>

	export function newUpdateConfigJobReqBuilder():Ref<UpdateConfigJobReqBuilder>

	export function newUpdateExternalApplicationReqBuilder():Ref<UpdateExternalApplicationReqBuilder>

	export function newUpdateJobRequirementReqBuilder():Ref<UpdateJobRequirementReqBuilder>

	export function newUpdateOfferCustomFieldReqBuilder():Ref<UpdateOfferCustomFieldReqBuilder>

	export function newUpdateOfferReqBuilder():Ref<UpdateOfferReqBuilder>

	export function newUpdateProgressEcoBackgroundCheckPathReqBodyBuilder():Ref<UpdateProgressEcoBackgroundCheckPathReqBodyBuilder>

	export function newUpdateProgressEcoBackgroundCheckReqBodyBuilder():Ref<UpdateProgressEcoBackgroundCheckReqBodyBuilder>

	export function newUpdateProgressEcoBackgroundCheckReqBuilder():Ref<UpdateProgressEcoBackgroundCheckReqBuilder>

	export function newUpdateResultEcoBackgroundCheckPathReqBodyBuilder():Ref<UpdateResultEcoBackgroundCheckPathReqBodyBuilder>

	export function newUpdateResultEcoBackgroundCheckReqBodyBuilder():Ref<UpdateResultEcoBackgroundCheckReqBodyBuilder>

	export function newUpdateResultEcoBackgroundCheckReqBuilder():Ref<UpdateResultEcoBackgroundCheckReqBuilder>

	export function newUpdateResultEcoExamReqBuilder():Ref<UpdateResultEcoExamReqBuilder>

	export function newUpdateTalentExternalInfoPathReqBodyBuilder():Ref<UpdateTalentExternalInfoPathReqBodyBuilder>

	export function newUpdateTalentExternalInfoReqBodyBuilder():Ref<UpdateTalentExternalInfoReqBodyBuilder>

	export function newUpdateTalentExternalInfoReqBuilder():Ref<UpdateTalentExternalInfoReqBuilder>

	export function newUpdateTripartiteAgreementReqBuilder():Ref<UpdateTripartiteAgreementReqBuilder>

	export function newUpdateWebsiteChannelPathReqBodyBuilder():Ref<UpdateWebsiteChannelPathReqBodyBuilder>

	export function newUpdateWebsiteChannelReqBodyBuilder():Ref<UpdateWebsiteChannelReqBodyBuilder>

	export function newUpdateWebsiteChannelReqBuilder():Ref<UpdateWebsiteChannelReqBuilder>

	export function newUserBusinessManagementScopeBuilder():Ref<UserBusinessManagementScopeBuilder>

	export function newUserContactInfoBuilder():Ref<UserContactInfoBuilder>

	export function newUserIdBuilder():Ref<UserIdBuilder>

	export function newUserRoleBuilder():Ref<UserRoleBuilder>

	export function newWebsiteBuilder():Ref<WebsiteBuilder>

	export function newWebsiteChannelInfoBuilder():Ref<WebsiteChannelInfoBuilder>

	export function newWebsiteDeliveryAttachmentBuilder():Ref<WebsiteDeliveryAttachmentBuilder>

	export function newWebsiteDeliveryAttachmentIndentificationBuilder():Ref<WebsiteDeliveryAttachmentIndentificationBuilder>

	export function newWebsiteDeliveryAwardBuilder():Ref<WebsiteDeliveryAwardBuilder>

	export function newWebsiteDeliveryBasicInfoBuilder():Ref<WebsiteDeliveryBasicInfoBuilder>

	export function newWebsiteDeliveryBuilder():Ref<WebsiteDeliveryBuilder>

	export function newWebsiteDeliveryCareerBuilder():Ref<WebsiteDeliveryCareerBuilder>

	export function newWebsiteDeliveryCertificateBuilder():Ref<WebsiteDeliveryCertificateBuilder>

	export function newWebsiteDeliveryCompetitionBuilder():Ref<WebsiteDeliveryCompetitionBuilder>

	export function newWebsiteDeliveryCustomizedDataBuilder():Ref<WebsiteDeliveryCustomizedDataBuilder>

	export function newWebsiteDeliveryCustomizedDataParentBuilder():Ref<WebsiteDeliveryCustomizedDataParentBuilder>

	export function newWebsiteDeliveryDtoBuilder():Ref<WebsiteDeliveryDtoBuilder>

	export function newWebsiteDeliveryEducationBuilder():Ref<WebsiteDeliveryEducationBuilder>

	export function newWebsiteDeliveryIdentificationBuilder():Ref<WebsiteDeliveryIdentificationBuilder>

	export function newWebsiteDeliveryInternshipBuilder():Ref<WebsiteDeliveryInternshipBuilder>

	export function newWebsiteDeliveryLanguageBuilder():Ref<WebsiteDeliveryLanguageBuilder>

	export function newWebsiteDeliveryProjectBuilder():Ref<WebsiteDeliveryProjectBuilder>

	export function newWebsiteDeliveryResumeBuilder():Ref<WebsiteDeliveryResumeBuilder>

	export function newWebsiteDeliverySelfEvaluationBuilder():Ref<WebsiteDeliverySelfEvaluationBuilder>

	export function newWebsiteDeliverySnsBuilder():Ref<WebsiteDeliverySnsBuilder>

	export function newWebsiteDeliveryWorksAttachmentBuilder():Ref<WebsiteDeliveryWorksAttachmentBuilder>

	export function newWebsiteDeliveryWorksBuilder():Ref<WebsiteDeliveryWorksBuilder>

	export function newWebsiteJobPostBuilder():Ref<WebsiteJobPostBuilder>

	export function newWebsiteJobPostCustomizedDataBuilder():Ref<WebsiteJobPostCustomizedDataBuilder>

	export function newWebsiteJobPostCustomizedOptionBuilder():Ref<WebsiteJobPostCustomizedOptionBuilder>

	export function newWebsiteJobPostCustomizedTimeRangeBuilder():Ref<WebsiteJobPostCustomizedTimeRangeBuilder>

	export function newWebsiteJobPostCustomizedValueBuilder():Ref<WebsiteJobPostCustomizedValueBuilder>

	export function newWebsiteUserBuilder():Ref<WebsiteUserBuilder>

	export function newWithdrawReferralAccountPathReqBodyBuilder():Ref<WithdrawReferralAccountPathReqBodyBuilder>

	export function newWithdrawReferralAccountReqBodyBuilder():Ref<WithdrawReferralAccountReqBodyBuilder>

	export function newWithdrawReferralAccountReqBuilder():Ref<WithdrawReferralAccountReqBuilder>

	export function newWorksInfoBuilder():Ref<WorksInfoBuilder>

	export interface Note extends Struct<Note>{

			id:Ref<string>
			talentId:Ref<string>
			applicationId:Ref<string>
			isPrivate:Ref<bool>
			createTime:Ref<int>
			modifyTime:Ref<int>
			creatorId:Ref<string>
			content:Ref<string>
			privacy:Ref<int>
			notifyMentionedUser:Ref<bool>
			mentionEntityList:Ref<MentionEntity>[]
	}
	export interface NoteBuilder extends Struct<NoteBuilder>{

			id(id:string):Ref<NoteBuilder>
			talentId(talentId:string):Ref<NoteBuilder>
			applicationId(applicationId:string):Ref<NoteBuilder>
			isPrivate(isPrivate:bool):Ref<NoteBuilder>
			createTime(createTime:int):Ref<NoteBuilder>
			modifyTime(modifyTime:int):Ref<NoteBuilder>
			creatorId(creatorId:string):Ref<NoteBuilder>
			content(content:string):Ref<NoteBuilder>
			privacy(privacy:int):Ref<NoteBuilder>
			notifyMentionedUser(notifyMentionedUser:bool):Ref<NoteBuilder>
			mentionEntityList(mentionEntityList:Ref<MentionEntity>[]):Ref<NoteBuilder>
			build():Ref<Note>
	}
	export interface ObjectAttribute extends Struct<ObjectAttribute>{

			title:Ref<I18n>
			description:Ref<I18n>
			dataType:Ref<int>
			tags:int[]
			isFcfData:Ref<bool>
			isDiData:Ref<bool>
	}
	export interface ObjectAttributeBuilder extends Struct<ObjectAttributeBuilder>{

			title(title:Ref<I18n>):Ref<ObjectAttributeBuilder>
			description(description:Ref<I18n>):Ref<ObjectAttributeBuilder>
			dataType(dataType:int):Ref<ObjectAttributeBuilder>
			tags(tags:int[]):Ref<ObjectAttributeBuilder>
			isFcfData(isFcfData:bool):Ref<ObjectAttributeBuilder>
			isDiData(isDiData:bool):Ref<ObjectAttributeBuilder>
			build():Ref<ObjectAttribute>
	}
	export interface Offer extends Struct<Offer>{

			id:Ref<string>
			applicationId:Ref<string>
			basicInfo:Ref<ApplicationOfferBasicInfo>
			salaryPlan:Ref<ApplicationOfferSalaryPlan>
			schemaId:Ref<string>
			offerStatus:Ref<int>
			offerType:Ref<int>
			jobInfo:Ref<OfferJobInfo>
			customizedModuleList:Ref<ApplicationOfferCustomModule>[]
			jobRequirementId:Ref<string>
			offerSendRecordList:Ref<OfferSendRecord>[]
	}
	export interface OfferApplicationReq extends Struct<OfferApplicationReq>{

	}
	export interface OfferApplicationReqBuilder extends Struct<OfferApplicationReqBuilder>{

			applicationId(applicationId:string):Ref<OfferApplicationReqBuilder>
			userIdType(userIdType:string):Ref<OfferApplicationReqBuilder>
			departmentIdType(departmentIdType:string):Ref<OfferApplicationReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<OfferApplicationReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<OfferApplicationReqBuilder>
			employeeTypeIdType(employeeTypeIdType:string):Ref<OfferApplicationReqBuilder>
			build():Ref<OfferApplicationReq>
	}
	export interface OfferApplicationResp extends Struct<OfferApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<OfferApplicationRespData>
			success():bool
	}
	export interface OfferApplicationRespData extends Struct<OfferApplicationRespData>{

			offer:Ref<ApplicationOffer>
	}
	export interface OfferApplyForm extends Struct<OfferApplyForm>{

			id:Ref<string>
			name:Ref<I18n>
			createTime:Ref<string>
	}
	export interface OfferApplyFormBuilder extends Struct<OfferApplyFormBuilder>{

			id(id:string):Ref<OfferApplyFormBuilder>
			name(name:Ref<I18n>):Ref<OfferApplyFormBuilder>
			createTime(createTime:string):Ref<OfferApplyFormBuilder>
			build():Ref<OfferApplyForm>
	}
	export interface OfferApplyFormConfigFormulaInfo extends Struct<OfferApplyFormConfigFormulaInfo>{

			value:Ref<string>
			result:Ref<int>
			extraMap:Ref<OfferApplyFormFormulaExtraMapInfo>[]
	}
	export interface OfferApplyFormConfigFormulaInfoBuilder extends Struct<OfferApplyFormConfigFormulaInfoBuilder>{

			value(value:string):Ref<OfferApplyFormConfigFormulaInfoBuilder>
			result(result:int):Ref<OfferApplyFormConfigFormulaInfoBuilder>
			extraMap(extraMap:Ref<OfferApplyFormFormulaExtraMapInfo>[]):Ref<OfferApplyFormConfigFormulaInfoBuilder>
			build():Ref<OfferApplyFormConfigFormulaInfo>
	}
	export interface OfferApplyFormConfigOptionInfo extends Struct<OfferApplyFormConfigOptionInfo>{

			id:Ref<string>
			name:Ref<I18n>
			description:Ref<I18n>
	}
	export interface OfferApplyFormConfigOptionInfoBuilder extends Struct<OfferApplyFormConfigOptionInfoBuilder>{

			id(id:string):Ref<OfferApplyFormConfigOptionInfoBuilder>
			name(name:Ref<I18n>):Ref<OfferApplyFormConfigOptionInfoBuilder>
			description(description:Ref<I18n>):Ref<OfferApplyFormConfigOptionInfoBuilder>
			build():Ref<OfferApplyFormConfigOptionInfo>
	}
	export interface OfferApplyFormFormulaExtraMapInfo extends Struct<OfferApplyFormFormulaExtraMapInfo>{

			key:Ref<string>
			value:Ref<I18n>
	}
	export interface OfferApplyFormFormulaExtraMapInfoBuilder extends Struct<OfferApplyFormFormulaExtraMapInfoBuilder>{

			key(key:string):Ref<OfferApplyFormFormulaExtraMapInfoBuilder>
			value(value:Ref<I18n>):Ref<OfferApplyFormFormulaExtraMapInfoBuilder>
			build():Ref<OfferApplyFormFormulaExtraMapInfo>
	}
	export interface OfferApplyFormInfo extends Struct<OfferApplyFormInfo>{

			id:Ref<string>
			name:Ref<I18n>
			schema:Ref<OfferApplyFormSchema>
	}
	export interface OfferApplyFormInfoBuilder extends Struct<OfferApplyFormInfoBuilder>{

			id(id:string):Ref<OfferApplyFormInfoBuilder>
			name(name:Ref<I18n>):Ref<OfferApplyFormInfoBuilder>
			schema(schema:Ref<OfferApplyFormSchema>):Ref<OfferApplyFormInfoBuilder>
			build():Ref<OfferApplyFormInfo>
	}
	export interface OfferApplyFormModuleInfo extends Struct<OfferApplyFormModuleInfo>{

			id:Ref<string>
			name:Ref<I18n>
			isCustomized:Ref<bool>
			activeStatus:Ref<int>
			hint:Ref<I18n>
			objectList:Ref<OfferApplyFormObjectInfo>[]
	}
	export interface OfferApplyFormModuleInfoBuilder extends Struct<OfferApplyFormModuleInfoBuilder>{

			id(id:string):Ref<OfferApplyFormModuleInfoBuilder>
			name(name:Ref<I18n>):Ref<OfferApplyFormModuleInfoBuilder>
			isCustomized(isCustomized:bool):Ref<OfferApplyFormModuleInfoBuilder>
			activeStatus(activeStatus:int):Ref<OfferApplyFormModuleInfoBuilder>
			hint(hint:Ref<I18n>):Ref<OfferApplyFormModuleInfoBuilder>
			objectList(objectList:Ref<OfferApplyFormObjectInfo>[]):Ref<OfferApplyFormModuleInfoBuilder>
			build():Ref<OfferApplyFormModuleInfo>
	}
	export interface OfferApplyFormObjectConfigInfo extends Struct<OfferApplyFormObjectConfigInfo>{

			options:Ref<OfferApplyFormConfigOptionInfo>[]
			formula:Ref<OfferApplyFormConfigFormulaInfo>
			objectDisplayConfig:Ref<OfferApplyFormObjectDisplayConfigInfo>
	}
	export interface OfferApplyFormObjectConfigInfoBuilder extends Struct<OfferApplyFormObjectConfigInfoBuilder>{

			options(options:Ref<OfferApplyFormConfigOptionInfo>[]):Ref<OfferApplyFormObjectConfigInfoBuilder>
			formula(formula:Ref<OfferApplyFormConfigFormulaInfo>):Ref<OfferApplyFormObjectConfigInfoBuilder>
			objectDisplayConfig(objectDisplayConfig:Ref<OfferApplyFormObjectDisplayConfigInfo>):Ref<OfferApplyFormObjectConfigInfoBuilder>
			build():Ref<OfferApplyFormObjectConfigInfo>
	}
	export interface OfferApplyFormObjectDisplayConfigInfo extends Struct<OfferApplyFormObjectDisplayConfigInfo>{

			displayCondition:Ref<int>
			preObjectConfigList:Ref<OfferApplyFormPreObjectConfigInfo>[]
	}
	export interface OfferApplyFormObjectDisplayConfigInfoBuilder extends Struct<OfferApplyFormObjectDisplayConfigInfoBuilder>{

			displayCondition(displayCondition:int):Ref<OfferApplyFormObjectDisplayConfigInfoBuilder>
			preObjectConfigList(preObjectConfigList:Ref<OfferApplyFormPreObjectConfigInfo>[]):Ref<OfferApplyFormObjectDisplayConfigInfoBuilder>
			build():Ref<OfferApplyFormObjectDisplayConfigInfo>
	}
	export interface OfferApplyFormObjectInfo extends Struct<OfferApplyFormObjectInfo>{

			id:Ref<string>
			name:Ref<I18n>
			description:Ref<I18n>
			moduleId:Ref<string>
			isCustomized:Ref<bool>
			isRequired:Ref<bool>
			activeStatus:Ref<int>
			needApprove:Ref<bool>
			isSensitive:Ref<bool>
			objectType:Ref<int>
			config:Ref<OfferApplyFormObjectConfigInfo>
	}
	export interface OfferApplyFormObjectInfoBuilder extends Struct<OfferApplyFormObjectInfoBuilder>{

			id(id:string):Ref<OfferApplyFormObjectInfoBuilder>
			name(name:Ref<I18n>):Ref<OfferApplyFormObjectInfoBuilder>
			description(description:Ref<I18n>):Ref<OfferApplyFormObjectInfoBuilder>
			moduleId(moduleId:string):Ref<OfferApplyFormObjectInfoBuilder>
			isCustomized(isCustomized:bool):Ref<OfferApplyFormObjectInfoBuilder>
			isRequired(isRequired:bool):Ref<OfferApplyFormObjectInfoBuilder>
			activeStatus(activeStatus:int):Ref<OfferApplyFormObjectInfoBuilder>
			needApprove(needApprove:bool):Ref<OfferApplyFormObjectInfoBuilder>
			isSensitive(isSensitive:bool):Ref<OfferApplyFormObjectInfoBuilder>
			objectType(objectType:int):Ref<OfferApplyFormObjectInfoBuilder>
			config(config:Ref<OfferApplyFormObjectConfigInfo>):Ref<OfferApplyFormObjectInfoBuilder>
			build():Ref<OfferApplyFormObjectInfo>
	}
	export interface OfferApplyFormPreObjectConfigInfo extends Struct<OfferApplyFormPreObjectConfigInfo>{

			id:Ref<string>
			operator:Ref<int>
			value:string[]
	}
	export interface OfferApplyFormPreObjectConfigInfoBuilder extends Struct<OfferApplyFormPreObjectConfigInfoBuilder>{

			id(id:string):Ref<OfferApplyFormPreObjectConfigInfoBuilder>
			operator(operator:int):Ref<OfferApplyFormPreObjectConfigInfoBuilder>
			value(value:string[]):Ref<OfferApplyFormPreObjectConfigInfoBuilder>
			build():Ref<OfferApplyFormPreObjectConfigInfo>
	}
	export interface OfferApplyFormSchema extends Struct<OfferApplyFormSchema>{

			id:Ref<string>
			moduleList:Ref<OfferApplyFormModuleInfo>[]
	}
	export interface OfferApplyFormSchemaBuilder extends Struct<OfferApplyFormSchemaBuilder>{

			id(id:string):Ref<OfferApplyFormSchemaBuilder>
			moduleList(moduleList:Ref<OfferApplyFormModuleInfo>[]):Ref<OfferApplyFormSchemaBuilder>
			build():Ref<OfferApplyFormSchema>
	}
	export interface OfferApprovalTemplate extends Struct<OfferApprovalTemplate>{

			id:Ref<string>
			name:Ref<I18n>
			createTime:Ref<string>
			remark:Ref<string>
			departmentList:Ref<Department>[]
	}
	export interface OfferApprovalTemplateBuilder extends Struct<OfferApprovalTemplateBuilder>{

			id(id:string):Ref<OfferApprovalTemplateBuilder>
			name(name:Ref<I18n>):Ref<OfferApprovalTemplateBuilder>
			createTime(createTime:string):Ref<OfferApprovalTemplateBuilder>
			remark(remark:string):Ref<OfferApprovalTemplateBuilder>
			departmentList(departmentList:Ref<Department>[]):Ref<OfferApprovalTemplateBuilder>
			build():Ref<OfferApprovalTemplate>
	}
	export interface OfferBasicInfo extends Struct<OfferBasicInfo>{

			departmentId:Ref<string>
			leaderUserId:Ref<string>
			employmentJobId:Ref<string>
			employeeTypeId:Ref<string>
			jobFamilyId:Ref<string>
			jobLevelId:Ref<string>
			probationMonth:Ref<int>
			contractYear:Ref<int>
			contractPeriod:Ref<ContractPeriodInfo>
			expectedOnboardDate:Ref<string>
			onboardAddressId:Ref<string>
			workAddressId:Ref<string>
			ownerUserId:Ref<string>
			recommendedWords:Ref<string>
			jobRequirementId:Ref<string>
			jobProcessTypeId:Ref<int>
			attachmentIdList:string[]
			attachmentDescription:Ref<string>
			operatorUserId:Ref<string>
	}
	export interface OfferBasicInfoBuilder extends Struct<OfferBasicInfoBuilder>{

			departmentId(departmentId:string):Ref<OfferBasicInfoBuilder>
			leaderUserId(leaderUserId:string):Ref<OfferBasicInfoBuilder>
			employmentJobId(employmentJobId:string):Ref<OfferBasicInfoBuilder>
			employeeTypeId(employeeTypeId:string):Ref<OfferBasicInfoBuilder>
			jobFamilyId(jobFamilyId:string):Ref<OfferBasicInfoBuilder>
			jobLevelId(jobLevelId:string):Ref<OfferBasicInfoBuilder>
			probationMonth(probationMonth:int):Ref<OfferBasicInfoBuilder>
			contractYear(contractYear:int):Ref<OfferBasicInfoBuilder>
			contractPeriod(contractPeriod:Ref<ContractPeriodInfo>):Ref<OfferBasicInfoBuilder>
			expectedOnboardDate(expectedOnboardDate:string):Ref<OfferBasicInfoBuilder>
			onboardAddressId(onboardAddressId:string):Ref<OfferBasicInfoBuilder>
			workAddressId(workAddressId:string):Ref<OfferBasicInfoBuilder>
			ownerUserId(ownerUserId:string):Ref<OfferBasicInfoBuilder>
			recommendedWords(recommendedWords:string):Ref<OfferBasicInfoBuilder>
			jobRequirementId(jobRequirementId:string):Ref<OfferBasicInfoBuilder>
			jobProcessTypeId(jobProcessTypeId:int):Ref<OfferBasicInfoBuilder>
			attachmentIdList(attachmentIdList:string[]):Ref<OfferBasicInfoBuilder>
			attachmentDescription(attachmentDescription:string):Ref<OfferBasicInfoBuilder>
			operatorUserId(operatorUserId:string):Ref<OfferBasicInfoBuilder>
			build():Ref<OfferBasicInfo>
	}
	export interface OfferBuilder extends Struct<OfferBuilder>{

			id(id:string):Ref<OfferBuilder>
			applicationId(applicationId:string):Ref<OfferBuilder>
			basicInfo(basicInfo:Ref<ApplicationOfferBasicInfo>):Ref<OfferBuilder>
			salaryPlan(salaryPlan:Ref<ApplicationOfferSalaryPlan>):Ref<OfferBuilder>
			schemaId(schemaId:string):Ref<OfferBuilder>
			offerStatus(offerStatus:int):Ref<OfferBuilder>
			offerType(offerType:int):Ref<OfferBuilder>
			jobInfo(jobInfo:Ref<OfferJobInfo>):Ref<OfferBuilder>
			customizedModuleList(customizedModuleList:Ref<ApplicationOfferCustomModule>[]):Ref<OfferBuilder>
			jobRequirementId(jobRequirementId:string):Ref<OfferBuilder>
			offerSendRecordList(offerSendRecordList:Ref<OfferSendRecord>[]):Ref<OfferBuilder>
			build():Ref<Offer>
	}
	export interface OfferCustomField extends Struct<OfferCustomField>{

			id:Ref<string>
			name:Ref<I18n>
			config:Ref<OfferCustomFieldConfig>
	}
	export interface OfferCustomFieldBuilder extends Struct<OfferCustomFieldBuilder>{

			id(id:string):Ref<OfferCustomFieldBuilder>
			name(name:Ref<I18n>):Ref<OfferCustomFieldBuilder>
			config(config:Ref<OfferCustomFieldConfig>):Ref<OfferCustomFieldBuilder>
			build():Ref<OfferCustomField>
	}
	export interface OfferCustomFieldConfig extends Struct<OfferCustomFieldConfig>{

			options:Ref<OfferCustomFieldConfigOption>[]
	}
	export interface OfferCustomFieldConfigBuilder extends Struct<OfferCustomFieldConfigBuilder>{

			options(options:Ref<OfferCustomFieldConfigOption>[]):Ref<OfferCustomFieldConfigBuilder>
			build():Ref<OfferCustomFieldConfig>
	}
	export interface OfferCustomFieldConfigOption extends Struct<OfferCustomFieldConfigOption>{

			name:Ref<I18n>
	}
	export interface OfferCustomFieldConfigOptionBuilder extends Struct<OfferCustomFieldConfigOptionBuilder>{

			name(name:Ref<I18n>):Ref<OfferCustomFieldConfigOptionBuilder>
			build():Ref<OfferCustomFieldConfigOption>
	}
	export interface OfferCustomizedInfo extends Struct<OfferCustomizedInfo>{

			id:Ref<string>
			value:Ref<string>
	}
	export interface OfferCustomizedInfoBuilder extends Struct<OfferCustomizedInfoBuilder>{

			id(id:string):Ref<OfferCustomizedInfoBuilder>
			value(value:string):Ref<OfferCustomizedInfoBuilder>
			build():Ref<OfferCustomizedInfo>
	}
	export interface OfferEmailInfo extends Struct<OfferEmailInfo>{

			ccEmailList:string[]
			receiverEmailList:string[]
			content:Ref<string>
	}
	export interface OfferEmailInfoBuilder extends Struct<OfferEmailInfoBuilder>{

			ccEmailList(ccEmailList:string[]):Ref<OfferEmailInfoBuilder>
			receiverEmailList(receiverEmailList:string[]):Ref<OfferEmailInfoBuilder>
			content(content:string):Ref<OfferEmailInfoBuilder>
			build():Ref<OfferEmailInfo>
	}
	export interface OfferFile extends Struct<OfferFile>{

			id:Ref<string>
			fileTemplateId:Ref<string>
			fileTemplateName:Ref<string>
			fileTemplateTypeId:Ref<string>
			fileTemplateTypeName:Ref<string>
	}
	export interface OfferFileBuilder extends Struct<OfferFileBuilder>{

			id(id:string):Ref<OfferFileBuilder>
			fileTemplateId(fileTemplateId:string):Ref<OfferFileBuilder>
			fileTemplateName(fileTemplateName:string):Ref<OfferFileBuilder>
			fileTemplateTypeId(fileTemplateTypeId:string):Ref<OfferFileBuilder>
			fileTemplateTypeName(fileTemplateTypeName:string):Ref<OfferFileBuilder>
			build():Ref<OfferFile>
	}
	export interface OfferInfo extends Struct<OfferInfo>{

			offerId:Ref<string>
			applicationId:Ref<string>
			schemaId:Ref<string>
			offerType:Ref<int>
			basicInfo:Ref<OfferBasicInfo>
			salaryInfo:Ref<OfferSalaryInfo>
			customizedInfoList:Ref<OfferCustomizedInfo>[]
	}
	export interface OfferInfoBuilder extends Struct<OfferInfoBuilder>{

			offerId(offerId:string):Ref<OfferInfoBuilder>
			applicationId(applicationId:string):Ref<OfferInfoBuilder>
			schemaId(schemaId:string):Ref<OfferInfoBuilder>
			offerType(offerType:int):Ref<OfferInfoBuilder>
			basicInfo(basicInfo:Ref<OfferBasicInfo>):Ref<OfferInfoBuilder>
			salaryInfo(salaryInfo:Ref<OfferSalaryInfo>):Ref<OfferInfoBuilder>
			customizedInfoList(customizedInfoList:Ref<OfferCustomizedInfo>[]):Ref<OfferInfoBuilder>
			build():Ref<OfferInfo>
	}
	export interface OfferJobInfo extends Struct<OfferJobInfo>{

			jobId:Ref<string>
			jobName:Ref<string>
	}
	export interface OfferJobInfoBuilder extends Struct<OfferJobInfoBuilder>{

			jobId(jobId:string):Ref<OfferJobInfoBuilder>
			jobName(jobName:string):Ref<OfferJobInfoBuilder>
			build():Ref<OfferJobInfo>
	}
	export interface OfferListInfo extends Struct<OfferListInfo>{

			id:Ref<string>
			jobInfo:Ref<OfferJobInfo>
			createTime:Ref<string>
			offerStatus:Ref<int>
			offerType:Ref<int>
			employeeType:Ref<BaseBilingualWithId>
			applicationId:Ref<string>
	}
	export interface OfferListInfoBuilder extends Struct<OfferListInfoBuilder>{

			id(id:string):Ref<OfferListInfoBuilder>
			jobInfo(jobInfo:Ref<OfferJobInfo>):Ref<OfferListInfoBuilder>
			createTime(createTime:string):Ref<OfferListInfoBuilder>
			offerStatus(offerStatus:int):Ref<OfferListInfoBuilder>
			offerType(offerType:int):Ref<OfferListInfoBuilder>
			employeeType(employeeType:Ref<BaseBilingualWithId>):Ref<OfferListInfoBuilder>
			applicationId(applicationId:string):Ref<OfferListInfoBuilder>
			build():Ref<OfferListInfo>
	}
	export interface OfferSalaryInfo extends Struct<OfferSalaryInfo>{

			currency:Ref<string>
			basicSalary:Ref<string>
			probationSalaryPercentage:Ref<string>
			awardSalaryMultiple:Ref<string>
			optionShares:Ref<string>
			quarterlyBonus:Ref<string>
			halfYearBonus:Ref<string>
	}
	export interface OfferSalaryInfoBuilder extends Struct<OfferSalaryInfoBuilder>{

			currency(currency:string):Ref<OfferSalaryInfoBuilder>
			basicSalary(basicSalary:string):Ref<OfferSalaryInfoBuilder>
			probationSalaryPercentage(probationSalaryPercentage:string):Ref<OfferSalaryInfoBuilder>
			awardSalaryMultiple(awardSalaryMultiple:string):Ref<OfferSalaryInfoBuilder>
			optionShares(optionShares:string):Ref<OfferSalaryInfoBuilder>
			quarterlyBonus(quarterlyBonus:string):Ref<OfferSalaryInfoBuilder>
			halfYearBonus(halfYearBonus:string):Ref<OfferSalaryInfoBuilder>
			build():Ref<OfferSalaryInfo>
	}
	export interface OfferSchema extends Struct<OfferSchema>{

			id:Ref<string>
			scenario:Ref<int>
			version:Ref<int>
			objectList:Ref<OfferSchemaDetail>[]
	}
	export interface OfferSchemaBuilder extends Struct<OfferSchemaBuilder>{

			id(id:string):Ref<OfferSchemaBuilder>
			scenario(scenario:int):Ref<OfferSchemaBuilder>
			version(version:int):Ref<OfferSchemaBuilder>
			objectList(objectList:Ref<OfferSchemaDetail>[]):Ref<OfferSchemaBuilder>
			build():Ref<OfferSchema>
	}
	export interface OfferSchemaChild extends Struct<OfferSchemaChild>{

			id:Ref<string>
			scenario:Ref<int>
			version:Ref<int>
			objectList:Ref<OfferSchemaDetail>[]
	}
	export interface OfferSchemaChildBuilder extends Struct<OfferSchemaChildBuilder>{

			id(id:string):Ref<OfferSchemaChildBuilder>
			scenario(scenario:int):Ref<OfferSchemaChildBuilder>
			version(version:int):Ref<OfferSchemaChildBuilder>
			objectList(objectList:Ref<OfferSchemaDetail>[]):Ref<OfferSchemaChildBuilder>
			build():Ref<OfferSchemaChild>
	}
	export interface OfferSchemaDetail extends Struct<OfferSchemaDetail>{

			id:Ref<string>
			name:Ref<OfferSchemaName>
			type:Ref<string>
			isCustomized:Ref<bool>
			optionList:Ref<OfferSchemaDetailOption>[]
	}
	export interface OfferSchemaDetailBuilder extends Struct<OfferSchemaDetailBuilder>{

			id(id:string):Ref<OfferSchemaDetailBuilder>
			name(name:Ref<OfferSchemaName>):Ref<OfferSchemaDetailBuilder>
			type(type_:string):Ref<OfferSchemaDetailBuilder>
			isCustomized(isCustomized:bool):Ref<OfferSchemaDetailBuilder>
			optionList(optionList:Ref<OfferSchemaDetailOption>[]):Ref<OfferSchemaDetailBuilder>
			build():Ref<OfferSchemaDetail>
	}
	export interface OfferSchemaDetailOption extends Struct<OfferSchemaDetailOption>{

			name:Ref<OfferSchemaName>
			index:Ref<int>
			activeStatus:Ref<int>
	}
	export interface OfferSchemaDetailOptionBuilder extends Struct<OfferSchemaDetailOptionBuilder>{

			name(name:Ref<OfferSchemaName>):Ref<OfferSchemaDetailOptionBuilder>
			index(index:int):Ref<OfferSchemaDetailOptionBuilder>
			activeStatus(activeStatus:int):Ref<OfferSchemaDetailOptionBuilder>
			build():Ref<OfferSchemaDetailOption>
	}
	export interface OfferSchemaListInfo extends Struct<OfferSchemaListInfo>{

			schemaList:Ref<OfferSchemaChild>[]
	}
	export interface OfferSchemaListInfoBuilder extends Struct<OfferSchemaListInfoBuilder>{

			schemaList(schemaList:Ref<OfferSchemaChild>[]):Ref<OfferSchemaListInfoBuilder>
			build():Ref<OfferSchemaListInfo>
	}
	export interface OfferSchemaName extends Struct<OfferSchemaName>{

			zhCn:Ref<string>
			enUs:Ref<string>
	}
	export interface OfferSchemaNameBuilder extends Struct<OfferSchemaNameBuilder>{

			zhCn(zhCn:string):Ref<OfferSchemaNameBuilder>
			enUs(enUs:string):Ref<OfferSchemaNameBuilder>
			build():Ref<OfferSchemaName>
	}
	export interface OfferSelectionObject extends Struct<OfferSelectionObject>{

			schemaVersion:Ref<int>
			optionList:Ref<OfferSchemaDetailOption>[]
	}
	export interface OfferSelectionObjectBuilder extends Struct<OfferSelectionObjectBuilder>{

			schemaVersion(schemaVersion:int):Ref<OfferSelectionObjectBuilder>
			optionList(optionList:Ref<OfferSchemaDetailOption>[]):Ref<OfferSelectionObjectBuilder>
			build():Ref<OfferSelectionObject>
	}
	export interface OfferSendRecord extends Struct<OfferSendRecord>{

			offerSendRecordId:Ref<string>
			operatorUserId:Ref<string>
			sendTime:Ref<string>
			offerLetterStatus:Ref<int>
			emailInfo:Ref<OfferEmailInfo>
			acceptanceList:Ref<Acceptance>[]
			offerFileList:Ref<OfferFile>[]
			offerSignatureInfo:Ref<OfferSignatureInfo>
	}
	export interface OfferSendRecordBuilder extends Struct<OfferSendRecordBuilder>{

			offerSendRecordId(offerSendRecordId:string):Ref<OfferSendRecordBuilder>
			operatorUserId(operatorUserId:string):Ref<OfferSendRecordBuilder>
			sendTime(sendTime:string):Ref<OfferSendRecordBuilder>
			offerLetterStatus(offerLetterStatus:int):Ref<OfferSendRecordBuilder>
			emailInfo(emailInfo:Ref<OfferEmailInfo>):Ref<OfferSendRecordBuilder>
			acceptanceList(acceptanceList:Ref<Acceptance>[]):Ref<OfferSendRecordBuilder>
			offerFileList(offerFileList:Ref<OfferFile>[]):Ref<OfferSendRecordBuilder>
			offerSignatureInfo(offerSignatureInfo:Ref<OfferSignatureInfo>):Ref<OfferSendRecordBuilder>
			build():Ref<OfferSendRecord>
	}
	export interface OfferSignatureInfo extends Struct<OfferSignatureInfo>{

			id:Ref<string>
			signatureStatus:Ref<int>
			attachmentList:Ref<SignatureAttachment>[]
	}
	export interface OfferSignatureInfoBuilder extends Struct<OfferSignatureInfoBuilder>{

			id(id:string):Ref<OfferSignatureInfoBuilder>
			signatureStatus(signatureStatus:int):Ref<OfferSignatureInfoBuilder>
			attachmentList(attachmentList:Ref<SignatureAttachment>[]):Ref<OfferSignatureInfoBuilder>
			build():Ref<OfferSignatureInfo>
	}
	//4
	export const OfferStatusApproved:int
	//2
	export const OfferStatusApproving:int
	//10
	export const OfferStatusNoApproval:int
	//9
	export const OfferStatusObsolete:int
	//7
	export const OfferStatusOfferAccepted:int
	//6
	export const OfferStatusOfferLetterSent:int
	export interface OfferStatusOfferPathReqBodyBuilder extends Struct<OfferStatusOfferPathReqBodyBuilder>{

			offerStatus(offerStatus:int):Ref<OfferStatusOfferPathReqBodyBuilder>
			expirationDate(expirationDate:string):Ref<OfferStatusOfferPathReqBodyBuilder>
			terminationReasonIdList(terminationReasonIdList:string[]):Ref<OfferStatusOfferPathReqBodyBuilder>
			terminationReasonNote(terminationReasonNote:string):Ref<OfferStatusOfferPathReqBodyBuilder>
			build():Ref<OfferStatusOfferReqBody>
	}
	//8
	export const OfferStatusOfferRejected:int
	export interface OfferStatusOfferReq extends Struct<OfferStatusOfferReq>{

			body:Ref<OfferStatusOfferReqBody>
	}
	export interface OfferStatusOfferReqBody extends Struct<OfferStatusOfferReqBody>{

			offerStatus:Ref<int>
			expirationDate:Ref<string>
			terminationReasonIdList:string[]
			terminationReasonNote:Ref<string>
	}
	export interface OfferStatusOfferReqBodyBuilder extends Struct<OfferStatusOfferReqBodyBuilder>{

			offerStatus(offerStatus:int):Ref<OfferStatusOfferReqBodyBuilder>
			expirationDate(expirationDate:string):Ref<OfferStatusOfferReqBodyBuilder>
			terminationReasonIdList(terminationReasonIdList:string[]):Ref<OfferStatusOfferReqBodyBuilder>
			terminationReasonNote(terminationReasonNote:string):Ref<OfferStatusOfferReqBodyBuilder>
			build():Ref<OfferStatusOfferReqBody>
	}
	export interface OfferStatusOfferReqBuilder extends Struct<OfferStatusOfferReqBuilder>{

			offerId(offerId:string):Ref<OfferStatusOfferReqBuilder>
			body(body:Ref<OfferStatusOfferReqBody>):Ref<OfferStatusOfferReqBuilder>
			build():Ref<OfferStatusOfferReq>
	}
	export interface OfferStatusOfferResp extends Struct<OfferStatusOfferResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	//5
	export const OfferStatusRejected:int
	//3
	export const OfferStatusWithdrawn:int
	//2
	export const OfferType实习Offer:int
	//1
	export const OfferType正式Offer:int
	export interface OnboardStatusTalentPathReqBodyBuilder extends Struct<OnboardStatusTalentPathReqBodyBuilder>{

			operation(operation:int):Ref<OnboardStatusTalentPathReqBodyBuilder>
			onboardTime(onboardTime:string):Ref<OnboardStatusTalentPathReqBodyBuilder>
			overboardTime(overboardTime:string):Ref<OnboardStatusTalentPathReqBodyBuilder>
			build():Ref<OnboardStatusTalentReqBody>
	}
	export interface OnboardStatusTalentReq extends Struct<OnboardStatusTalentReq>{

			body:Ref<OnboardStatusTalentReqBody>
	}
	export interface OnboardStatusTalentReqBody extends Struct<OnboardStatusTalentReqBody>{

			operation:Ref<int>
			onboardTime:Ref<string>
			overboardTime:Ref<string>
	}
	export interface OnboardStatusTalentReqBodyBuilder extends Struct<OnboardStatusTalentReqBodyBuilder>{

			operation(operation:int):Ref<OnboardStatusTalentReqBodyBuilder>
			onboardTime(onboardTime:string):Ref<OnboardStatusTalentReqBodyBuilder>
			overboardTime(overboardTime:string):Ref<OnboardStatusTalentReqBodyBuilder>
			build():Ref<OnboardStatusTalentReqBody>
	}
	export interface OnboardStatusTalentReqBuilder extends Struct<OnboardStatusTalentReqBuilder>{

			talentId(talentId:string):Ref<OnboardStatusTalentReqBuilder>
			body(body:Ref<OnboardStatusTalentReqBody>):Ref<OnboardStatusTalentReqBuilder>
			build():Ref<OnboardStatusTalentReq>
	}
	export interface OnboardStatusTalentResp extends Struct<OnboardStatusTalentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface OpenJobPathReqBodyBuilder extends Struct<OpenJobPathReqBodyBuilder>{

			expiryTime(expiryTime:int):Ref<OpenJobPathReqBodyBuilder>
			isNeverExpired(isNeverExpired:bool):Ref<OpenJobPathReqBodyBuilder>
			build():Ref<OpenJobReqBody>
	}
	export interface OpenJobReq extends Struct<OpenJobReq>{

			body:Ref<OpenJobReqBody>
	}
	export interface OpenJobReqBody extends Struct<OpenJobReqBody>{

			expiryTime:Ref<int>
			isNeverExpired:Ref<bool>
	}
	export interface OpenJobReqBodyBuilder extends Struct<OpenJobReqBodyBuilder>{

			expiryTime(expiryTime:int):Ref<OpenJobReqBodyBuilder>
			isNeverExpired(isNeverExpired:bool):Ref<OpenJobReqBodyBuilder>
			build():Ref<OpenJobReqBody>
	}
	export interface OpenJobReqBuilder extends Struct<OpenJobReqBuilder>{

			jobId(jobId:string):Ref<OpenJobReqBuilder>
			body(body:Ref<OpenJobReqBody>):Ref<OpenJobReqBuilder>
			build():Ref<OpenJobReq>
	}
	export interface OpenJobResp extends Struct<OpenJobResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	//1
	export const OperationConvert:int
	//"cancel_onboarding"
	export const OperationInternOfferStatusOfferCancelOnboarding:string
	//"confirm_onboarding"
	export const OperationInternOfferStatusOfferConfirmOnboarding:string
	//"offboard"
	export const OperationInternOfferStatusOfferOffboard:string
	//1
	export const OperationOnboardStatusTalentOnboard:int
	//2
	export const OperationOnboardStatusTalentOverboard:int
	//2
	export const OperationOverboard:int
	//1
	export const OperatorAccountType员工体系:int
	//3
	export const OperatorAccountType系统:int
	export interface P2ApplicationDeletedV1 extends Struct<P2ApplicationDeletedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ApplicationDeletedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ApplicationDeletedV1Data extends Struct<P2ApplicationDeletedV1Data>{

			applicationIds:string[]
	}
	export interface P2ApplicationDeletedV1Handler extends Struct<P2ApplicationDeletedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2ApplicationStageChangedV1 extends Struct<P2ApplicationStageChangedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ApplicationStageChangedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ApplicationStageChangedV1Data extends Struct<P2ApplicationStageChangedV1Data>{

			applicationId:Ref<string>
			originStageId:Ref<string>
			targetStageId:Ref<string>
			updateTime:Ref<int>
	}
	export interface P2ApplicationStageChangedV1Handler extends Struct<P2ApplicationStageChangedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2EcoAccountCreatedV1 extends Struct<P2EcoAccountCreatedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2EcoAccountCreatedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2EcoAccountCreatedV1Data extends Struct<P2EcoAccountCreatedV1Data>{

			scope:Ref<int>
			accountId:Ref<string>
			accountName:Ref<string>
			usageList:int[]
			customFieldList:Ref<EcoAccountCustomFieldEventData>[]
	}
	export interface P2EcoAccountCreatedV1Handler extends Struct<P2EcoAccountCreatedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2EcoBackgroundCheckCanceledV1 extends Struct<P2EcoBackgroundCheckCanceledV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2EcoBackgroundCheckCanceledV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2EcoBackgroundCheckCanceledV1Data extends Struct<P2EcoBackgroundCheckCanceledV1Data>{

			backgroundCheckId:Ref<string>
			terminationReason:Ref<string>
	}
	export interface P2EcoBackgroundCheckCanceledV1Handler extends larkevent.EventHandler,Struct<P2EcoBackgroundCheckCanceledV1Handler>{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2EcoBackgroundCheckCreatedV1 extends larkevent.EventHandlerModel,Struct<P2EcoBackgroundCheckCreatedV1>{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2EcoBackgroundCheckCreatedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2EcoBackgroundCheckCreatedV1Data extends Struct<P2EcoBackgroundCheckCreatedV1Data>{

			backgroundCheckId:Ref<string>
			accountId:Ref<string>
			packageId:Ref<string>
			additionalItemIdList:string[]
			comment:Ref<string>
			candidateInfo:Ref<EcoBackgroundCheckCreateEventCandidateInfo>
			clientContactInfo:Ref<EcoBackgroundCheckCreateEventContactInfo>
			customFieldList:Ref<EcoBackgroundCheckCreateEventCustomKv>[]
	}
	export interface P2EcoBackgroundCheckCreatedV1Handler extends Struct<P2EcoBackgroundCheckCreatedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2EcoExamCreatedV1 extends Struct<P2EcoExamCreatedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2EcoExamCreatedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2EcoExamCreatedV1Data extends Struct<P2EcoExamCreatedV1Data>{

			examId:Ref<string>
			accountId:Ref<string>
			paperId:Ref<string>
			candidateInfo:Ref<EcoExamCreateEventCandidateInfo>
	}
	export interface P2EcoExamCreatedV1Handler extends Struct<P2EcoExamCreatedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2EhrImportTaskForInternshipOfferImportedV1 extends Struct<P2EhrImportTaskForInternshipOfferImportedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2EhrImportTaskForInternshipOfferImportedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2EhrImportTaskForInternshipOfferImportedV1Data extends Struct<P2EhrImportTaskForInternshipOfferImportedV1Data>{

			taskId:Ref<string>
			applicationId:Ref<string>
			offerId:Ref<string>
			preOnboardId:Ref<string>
			ehrDepartmentId:Ref<string>
			operatorId:Ref<string>
			operatorUserId:Ref<UserId>
			ehrDepartment:Ref<DepartmentId>
	}
	export interface P2EhrImportTaskForInternshipOfferImportedV1Handler extends Struct<P2EhrImportTaskForInternshipOfferImportedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2EhrImportTaskImportedV1 extends Struct<P2EhrImportTaskImportedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2EhrImportTaskImportedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2EhrImportTaskImportedV1Data extends Struct<P2EhrImportTaskImportedV1Data>{

			taskId:Ref<string>
			applicationId:Ref<string>
			ehrDepartmentId:Ref<string>
			ehrRequirementId:Ref<string>
			operatorId:Ref<string>
			operatorUserId:Ref<UserId>
			ehrDepartment:Ref<DepartmentId>
	}
	export interface P2EhrImportTaskImportedV1Handler extends Struct<P2EhrImportTaskImportedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2OfferStatusChangedV1 extends Struct<P2OfferStatusChangedV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2OfferStatusChangedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2OfferStatusChangedV1Data extends Struct<P2OfferStatusChangedV1Data>{

			offerId:Ref<string>
	}
	export interface P2OfferStatusChangedV1Handler extends Struct<P2OfferStatusChangedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2ReferralAccountAssetsUpdateV1 extends Struct<P2ReferralAccountAssetsUpdateV1>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ReferralAccountAssetsUpdateV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ReferralAccountAssetsUpdateV1Data extends Struct<P2ReferralAccountAssetsUpdateV1Data>{

			accountId:Ref<string>
			assets:Ref<Assets>
			modifyTime:Ref<string>
	}
	export interface P2ReferralAccountAssetsUpdateV1Handler extends Struct<P2ReferralAccountAssetsUpdateV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2TalentDeletedV1 extends larkevent.EventHandlerModel,Struct<P2TalentDeletedV1>{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2TalentDeletedV1Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2TalentDeletedV1Data extends Struct<P2TalentDeletedV1Data>{

			talentId:Ref<string>
	}
	export interface P2TalentDeletedV1Handler extends Struct<P2TalentDeletedV1Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	//2
	export const ParticipateStatus参与:int
	//1
	export const ParticipateStatus未参与:int
	//3
	export const ParticipateStatus爽约:int
	export interface PatchEhrImportTaskReq extends Struct<PatchEhrImportTaskReq>{

			ehrImportTask:Ref<EhrImportTask>
	}
	export interface PatchEhrImportTaskReqBuilder extends Struct<PatchEhrImportTaskReqBuilder>{

			ehrImportTaskId(ehrImportTaskId:string):Ref<PatchEhrImportTaskReqBuilder>
			ehrImportTask(ehrImportTask:Ref<EhrImportTask>):Ref<PatchEhrImportTaskReqBuilder>
			build():Ref<PatchEhrImportTaskReq>
	}
	export interface PatchEhrImportTaskResp extends Struct<PatchEhrImportTaskResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface PatchEmployeeReq extends Struct<PatchEmployeeReq>{

			changeEmployeeStage:Ref<ChangeEmployeeStage>
	}
	export interface PatchEmployeeReqBuilder extends Struct<PatchEmployeeReqBuilder>{

			employeeId(employeeId:string):Ref<PatchEmployeeReqBuilder>
			userIdType(userIdType:string):Ref<PatchEmployeeReqBuilder>
			departmentIdType(departmentIdType:string):Ref<PatchEmployeeReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<PatchEmployeeReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<PatchEmployeeReqBuilder>
			employeeTypeIdType(employeeTypeIdType:string):Ref<PatchEmployeeReqBuilder>
			changeEmployeeStage(changeEmployeeStage:Ref<ChangeEmployeeStage>):Ref<PatchEmployeeReqBuilder>
			build():Ref<PatchEmployeeReq>
	}
	export interface PatchEmployeeResp extends Struct<PatchEmployeeResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<PatchEmployeeRespData>
			success():bool
	}
	export interface PatchEmployeeRespData extends Struct<PatchEmployeeRespData>{

			employee:Ref<Employee>
	}
	export interface PatchExternalInterviewAssessmentReq extends Struct<PatchExternalInterviewAssessmentReq>{

			externalInterviewAssessment:Ref<ExternalInterviewAssessment>
	}
	export interface PatchExternalInterviewAssessmentReqBuilder extends Struct<PatchExternalInterviewAssessmentReqBuilder>{

			externalInterviewAssessmentId(externalInterviewAssessmentId:string):Ref<PatchExternalInterviewAssessmentReqBuilder>
			externalInterviewAssessment(externalInterviewAssessment:Ref<ExternalInterviewAssessment>):Ref<PatchExternalInterviewAssessmentReqBuilder>
			build():Ref<PatchExternalInterviewAssessmentReq>
	}
	export interface PatchExternalInterviewAssessmentResp extends Struct<PatchExternalInterviewAssessmentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<PatchExternalInterviewAssessmentRespData>
			success():bool
	}
	export interface PatchExternalInterviewAssessmentRespData extends Struct<PatchExternalInterviewAssessmentRespData>{

			externalInterviewAssessment:Ref<ExternalInterviewAssessment>
	}
	export interface PatchNotePathReqBodyBuilder extends Struct<PatchNotePathReqBodyBuilder>{

			content(content:string):Ref<PatchNotePathReqBodyBuilder>
			operatorId(operatorId:string):Ref<PatchNotePathReqBodyBuilder>
			notifyMentionedUser(notifyMentionedUser:bool):Ref<PatchNotePathReqBodyBuilder>
			mentionEntityList(mentionEntityList:Ref<MentionEntity>[]):Ref<PatchNotePathReqBodyBuilder>
			build():Ref<PatchNoteReqBody>
	}
	export interface PatchNoteReq extends Struct<PatchNoteReq>{

			body:Ref<PatchNoteReqBody>
	}
	export interface PatchNoteReqBody extends Struct<PatchNoteReqBody>{

			content:Ref<string>
			operatorId:Ref<string>
			notifyMentionedUser:Ref<bool>
			mentionEntityList:Ref<MentionEntity>[]
	}
	export interface PatchNoteReqBodyBuilder extends Struct<PatchNoteReqBodyBuilder>{

			content(content:string):Ref<PatchNoteReqBodyBuilder>
			operatorId(operatorId:string):Ref<PatchNoteReqBodyBuilder>
			notifyMentionedUser(notifyMentionedUser:bool):Ref<PatchNoteReqBodyBuilder>
			mentionEntityList(mentionEntityList:Ref<MentionEntity>[]):Ref<PatchNoteReqBodyBuilder>
			build():Ref<PatchNoteReqBody>
	}
	export interface PatchNoteReqBuilder extends Struct<PatchNoteReqBuilder>{

			noteId(noteId:string):Ref<PatchNoteReqBuilder>
			userIdType(userIdType:string):Ref<PatchNoteReqBuilder>
			body(body:Ref<PatchNoteReqBody>):Ref<PatchNoteReqBuilder>
			build():Ref<PatchNoteReq>
	}
	export interface PatchNoteResp extends Struct<PatchNoteResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<PatchNoteRespData>
			success():bool
	}
	export interface PatchNoteRespData extends Struct<PatchNoteRespData>{

			note:Ref<Note>
	}
	export interface PermissionCollection extends Struct<PermissionCollection>{

			featurePermissions:Ref<IdNameObject>[]
			managementPermissions:Ref<IdNameObject>[]
			dataPermissions:Ref<DataPermission>[]
			businessManagementScopes:Ref<BusinessManagementScope>[]
	}
	export interface PermissionCollectionBuilder extends Struct<PermissionCollectionBuilder>{

			featurePermissions(featurePermissions:Ref<IdNameObject>[]):Ref<PermissionCollectionBuilder>
			managementPermissions(managementPermissions:Ref<IdNameObject>[]):Ref<PermissionCollectionBuilder>
			dataPermissions(dataPermissions:Ref<DataPermission>[]):Ref<PermissionCollectionBuilder>
			businessManagementScopes(businessManagementScopes:Ref<BusinessManagementScope>[]):Ref<PermissionCollectionBuilder>
			build():Ref<PermissionCollection>
	}
	export interface PermissionGroupInfo extends Struct<PermissionGroupInfo>{

			permissionIds:string[]
			scopeRule:Ref<PermissionScopeRule>
	}
	export interface PermissionGroupInfoBuilder extends Struct<PermissionGroupInfoBuilder>{

			permissionIds(permissionIds:string[]):Ref<PermissionGroupInfoBuilder>
			scopeRule(scopeRule:Ref<PermissionScopeRule>):Ref<PermissionGroupInfoBuilder>
			build():Ref<PermissionGroupInfo>
	}
	export interface PermissionScopeRule extends Struct<PermissionScopeRule>{

			ruleType:Ref<int>
	}
	export interface PermissionScopeRuleBuilder extends Struct<PermissionScopeRuleBuilder>{

			ruleType(ruleType:int):Ref<PermissionScopeRuleBuilder>
			build():Ref<PermissionScopeRule>
	}
	export interface Point extends Struct<Point>{

			amount:Ref<int>
	}
	export interface PointBuilder extends Struct<PointBuilder>{

			amount(amount:int):Ref<PointBuilder>
			build():Ref<Point>
	}
	export interface PortalJobPost extends Struct<PortalJobPost>{

			id:Ref<string>
			title:Ref<string>
			jobId:Ref<string>
			jobCode:Ref<string>
			jobExpireTime:Ref<string>
			jobActiveStatus:Ref<int>
			jobProcessType:Ref<int>
			jobRecruitmentType:Ref<IdNameObject>
			jobDepartment:Ref<IdNameObject>
			jobType:Ref<IdNameObject>
			minJobLevel:Ref<IdNameObject>
			maxJobLevel:Ref<IdNameObject>
			address:Ref<CommonAddress>
			minSalary:Ref<string>
			maxSalary:Ref<string>
			requiredDegree:Ref<int>
			experience:Ref<int>
			headcount:Ref<int>
			highLightList:Ref<IdNameObject>[]
			description:Ref<string>
			requirement:Ref<string>
			creator:Ref<IdNameObject>
			createTime:Ref<string>
			modifyTime:Ref<string>
			customizedDataList:Ref<WebsiteJobPostCustomizedData>[]
			jobFunction:Ref<IdNameObject>
			subject:Ref<IdNameObject>
			addressList:Ref<CommonAddress>[]
	}
	export interface PortalJobPostBuilder extends Struct<PortalJobPostBuilder>{

			id(id:string):Ref<PortalJobPostBuilder>
			title(title:string):Ref<PortalJobPostBuilder>
			jobId(jobId:string):Ref<PortalJobPostBuilder>
			jobCode(jobCode:string):Ref<PortalJobPostBuilder>
			jobExpireTime(jobExpireTime:string):Ref<PortalJobPostBuilder>
			jobActiveStatus(jobActiveStatus:int):Ref<PortalJobPostBuilder>
			jobProcessType(jobProcessType:int):Ref<PortalJobPostBuilder>
			jobRecruitmentType(jobRecruitmentType:Ref<IdNameObject>):Ref<PortalJobPostBuilder>
			jobDepartment(jobDepartment:Ref<IdNameObject>):Ref<PortalJobPostBuilder>
			jobType(jobType:Ref<IdNameObject>):Ref<PortalJobPostBuilder>
			minJobLevel(minJobLevel:Ref<IdNameObject>):Ref<PortalJobPostBuilder>
			maxJobLevel(maxJobLevel:Ref<IdNameObject>):Ref<PortalJobPostBuilder>
			address(address:Ref<CommonAddress>):Ref<PortalJobPostBuilder>
			minSalary(minSalary:string):Ref<PortalJobPostBuilder>
			maxSalary(maxSalary:string):Ref<PortalJobPostBuilder>
			requiredDegree(requiredDegree:int):Ref<PortalJobPostBuilder>
			experience(experience:int):Ref<PortalJobPostBuilder>
			headcount(headcount:int):Ref<PortalJobPostBuilder>
			highLightList(highLightList:Ref<IdNameObject>[]):Ref<PortalJobPostBuilder>
			description(description:string):Ref<PortalJobPostBuilder>
			requirement(requirement:string):Ref<PortalJobPostBuilder>
			creator(creator:Ref<IdNameObject>):Ref<PortalJobPostBuilder>
			createTime(createTime:string):Ref<PortalJobPostBuilder>
			modifyTime(modifyTime:string):Ref<PortalJobPostBuilder>
			customizedDataList(customizedDataList:Ref<WebsiteJobPostCustomizedData>[]):Ref<PortalJobPostBuilder>
			jobFunction(jobFunction:Ref<IdNameObject>):Ref<PortalJobPostBuilder>
			subject(subject:Ref<IdNameObject>):Ref<PortalJobPostBuilder>
			addressList(addressList:Ref<CommonAddress>[]):Ref<PortalJobPostBuilder>
			build():Ref<PortalJobPost>
	}
	export interface PreviewAttachmentReq extends Struct<PreviewAttachmentReq>{

	}
	export interface PreviewAttachmentReqBuilder extends Struct<PreviewAttachmentReqBuilder>{

			attachmentId(attachmentId:string):Ref<PreviewAttachmentReqBuilder>
			build():Ref<PreviewAttachmentReq>
	}
	export interface PreviewAttachmentResp extends Struct<PreviewAttachmentResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<PreviewAttachmentRespData>
			success():bool
	}
	export interface PreviewAttachmentRespData extends Struct<PreviewAttachmentRespData>{

			url:Ref<string>
	}
	//1
	export const PriorityHigh:int
	//3
	export const PriorityLow:int
	//2
	export const PriorityMedium:int
	//1
	export const PriorityUpdateJobRequirementHigh:int
	//3
	export const PriorityUpdateJobRequirementLow:int
	//2
	export const PriorityUpdateJobRequirementMedium:int
	//1
	export const PrivacyPrivate:int
	//2
	export const PrivacyPublic:int
	//2
	export const ProcessTypeCombinedCreateJobCampusProcess:int
	//1
	export const ProcessTypeCombinedCreateJobSocialProcess:int
	//2
	export const ProcessTypeCreateJobRequirementCampus:int
	//1
	export const ProcessTypeCreateJobRequirementSocial:int
	//2
	export const ProcessTypeListReferralWebsiteJobPostCampusProcess:int
	//1
	export const ProcessTypeListReferralWebsiteJobPostSocialProcess:int
	//2
	export const ProcessTypeUpdateJobRequirementCampus:int
	//1
	export const ProcessTypeUpdateJobRequirementSocial:int
	//2
	export const ProcessType校招流程:int
	//1
	export const ProcessType社招流程:int
	export interface ProjectInfo extends Struct<ProjectInfo>{

			desc:Ref<string>
			endTime:Ref<int>
			link:Ref<string>
			name:Ref<string>
			role:Ref<string>
			startTime:Ref<int>
	}
	export interface ProjectInfoBuilder extends Struct<ProjectInfoBuilder>{

			desc(desc:string):Ref<ProjectInfoBuilder>
			endTime(endTime:int):Ref<ProjectInfoBuilder>
			link(link:string):Ref<ProjectInfoBuilder>
			name(name:string):Ref<ProjectInfoBuilder>
			role(role:string):Ref<ProjectInfoBuilder>
			startTime(startTime:int):Ref<ProjectInfoBuilder>
			build():Ref<ProjectInfo>
	}
	export interface ProtectAgencyPathReqBodyBuilder extends Struct<ProtectAgencyPathReqBodyBuilder>{

			talentId(talentId:string):Ref<ProtectAgencyPathReqBodyBuilder>
			supplierId(supplierId:string):Ref<ProtectAgencyPathReqBodyBuilder>
			consultantId(consultantId:string):Ref<ProtectAgencyPathReqBodyBuilder>
			protectCreateTime(protectCreateTime:int):Ref<ProtectAgencyPathReqBodyBuilder>
			protectExpireTime(protectExpireTime:int):Ref<ProtectAgencyPathReqBodyBuilder>
			comment(comment:string):Ref<ProtectAgencyPathReqBodyBuilder>
			currentSalary(currentSalary:string):Ref<ProtectAgencyPathReqBodyBuilder>
			expectedSalary(expectedSalary:string):Ref<ProtectAgencyPathReqBodyBuilder>
			build():Ref<ProtectAgencyReqBody>
	}
	export interface ProtectAgencyReq extends Struct<ProtectAgencyReq>{

			body:Ref<ProtectAgencyReqBody>
	}
	export interface ProtectAgencyReqBody extends Struct<ProtectAgencyReqBody>{

			talentId:Ref<string>
			supplierId:Ref<string>
			consultantId:Ref<string>
			protectCreateTime:Ref<int>
			protectExpireTime:Ref<int>
			comment:Ref<string>
			currentSalary:Ref<string>
			expectedSalary:Ref<string>
	}
	export interface ProtectAgencyReqBodyBuilder extends Struct<ProtectAgencyReqBodyBuilder>{

			talentId(talentId:string):Ref<ProtectAgencyReqBodyBuilder>
			supplierId(supplierId:string):Ref<ProtectAgencyReqBodyBuilder>
			consultantId(consultantId:string):Ref<ProtectAgencyReqBodyBuilder>
			protectCreateTime(protectCreateTime:int):Ref<ProtectAgencyReqBodyBuilder>
			protectExpireTime(protectExpireTime:int):Ref<ProtectAgencyReqBodyBuilder>
			comment(comment:string):Ref<ProtectAgencyReqBodyBuilder>
			currentSalary(currentSalary:string):Ref<ProtectAgencyReqBodyBuilder>
			expectedSalary(expectedSalary:string):Ref<ProtectAgencyReqBodyBuilder>
			build():Ref<ProtectAgencyReqBody>
	}
	export interface ProtectAgencyReqBuilder extends Struct<ProtectAgencyReqBuilder>{

			userIdType(userIdType:string):Ref<ProtectAgencyReqBuilder>
			body(body:Ref<ProtectAgencyReqBody>):Ref<ProtectAgencyReqBuilder>
			build():Ref<ProtectAgencyReq>
	}
	export interface ProtectAgencyResp extends Struct<ProtectAgencyResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface ProtectSearchAgencyPathReqBodyBuilder extends Struct<ProtectSearchAgencyPathReqBodyBuilder>{

			talentId(talentId:string):Ref<ProtectSearchAgencyPathReqBodyBuilder>
			build():Ref<ProtectSearchAgencyReqBody>
	}
	export interface ProtectSearchAgencyReq extends Struct<ProtectSearchAgencyReq>{

			body:Ref<ProtectSearchAgencyReqBody>
	}
	export interface ProtectSearchAgencyReqBody extends Struct<ProtectSearchAgencyReqBody>{

			talentId:Ref<string>
	}
	export interface ProtectSearchAgencyReqBodyBuilder extends Struct<ProtectSearchAgencyReqBodyBuilder>{

			talentId(talentId:string):Ref<ProtectSearchAgencyReqBodyBuilder>
			build():Ref<ProtectSearchAgencyReqBody>
	}
	export interface ProtectSearchAgencyReqBuilder extends Struct<ProtectSearchAgencyReqBuilder>{

			body(body:Ref<ProtectSearchAgencyReqBody>):Ref<ProtectSearchAgencyReqBuilder>
			build():Ref<ProtectSearchAgencyReq>
	}
	export interface ProtectSearchAgencyResp extends Struct<ProtectSearchAgencyResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ProtectSearchAgencyRespData>
			success():bool
	}
	export interface ProtectSearchAgencyRespData extends Struct<ProtectSearchAgencyRespData>{

			isOnboarded:Ref<bool>
			onboardedInProtection:Ref<bool>
			onboardedProtection:Ref<AgencyProtection>
			protectionList:Ref<AgencyProtection>[]
	}
	export interface ProviderIdNameObject extends Struct<ProviderIdNameObject>{

			providerId:Ref<string>
			providerName:Ref<I18n>
	}
	export interface ProviderIdNameObjectBuilder extends Struct<ProviderIdNameObjectBuilder>{

			providerId(providerId:string):Ref<ProviderIdNameObjectBuilder>
			providerName(providerName:Ref<I18n>):Ref<ProviderIdNameObjectBuilder>
			build():Ref<ProviderIdNameObject>
	}
	export interface PublishAdvertisementPathReqBodyBuilder extends Struct<PublishAdvertisementPathReqBodyBuilder>{

			jobChannelId(jobChannelId:string):Ref<PublishAdvertisementPathReqBodyBuilder>
			build():Ref<PublishAdvertisementReqBody>
	}
	export interface PublishAdvertisementReq extends Struct<PublishAdvertisementReq>{

			body:Ref<PublishAdvertisementReqBody>
	}
	export interface PublishAdvertisementReqBody extends Struct<PublishAdvertisementReqBody>{

			jobChannelId:Ref<string>
	}
	export interface PublishAdvertisementReqBodyBuilder extends Struct<PublishAdvertisementReqBodyBuilder>{

			jobChannelId(jobChannelId:string):Ref<PublishAdvertisementReqBodyBuilder>
			build():Ref<PublishAdvertisementReqBody>
	}
	export interface PublishAdvertisementReqBuilder extends Struct<PublishAdvertisementReqBuilder>{

			advertisementId(advertisementId:string):Ref<PublishAdvertisementReqBuilder>
			body(body:Ref<PublishAdvertisementReqBody>):Ref<PublishAdvertisementReqBuilder>
			build():Ref<PublishAdvertisementReq>
	}
	export interface PublishAdvertisementResp extends Struct<PublishAdvertisementResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface PushStage extends Alias<Nothing>{

	}
	export interface QueryAgencyReq extends Struct<QueryAgencyReq>{

	}
	export interface QueryAgencyReqBuilder extends Struct<QueryAgencyReqBuilder>{

			name(name:string):Ref<QueryAgencyReqBuilder>
			userIdType(userIdType:string):Ref<QueryAgencyReqBuilder>
			build():Ref<QueryAgencyReq>
	}
	export interface QueryAgencyResp extends Struct<QueryAgencyResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<QueryAgencyRespData>
			success():bool
	}
	export interface QueryAgencyRespData extends Struct<QueryAgencyRespData>{

			items:Ref<Agency>[]
	}
	export interface QueryLocationPathReqBodyBuilder extends Struct<QueryLocationPathReqBodyBuilder>{

			codeList(codeList:string[]):Ref<QueryLocationPathReqBodyBuilder>
			locationType(locationType:int):Ref<QueryLocationPathReqBodyBuilder>
			build():Ref<QueryLocationReqBody>
	}
	export interface QueryLocationReq extends Struct<QueryLocationReq>{

			body:Ref<QueryLocationReqBody>
	}
	export interface QueryLocationReqBody extends Struct<QueryLocationReqBody>{

			codeList:string[]
			locationType:Ref<int>
	}
	export interface QueryLocationReqBodyBuilder extends Struct<QueryLocationReqBodyBuilder>{

			codeList(codeList:string[]):Ref<QueryLocationReqBodyBuilder>
			locationType(locationType:int):Ref<QueryLocationReqBodyBuilder>
			build():Ref<QueryLocationReqBody>
	}
	export interface QueryLocationReqBuilder extends Struct<QueryLocationReqBuilder>{

			pageToken(pageToken:string):Ref<QueryLocationReqBuilder>
			pageSize(pageSize:int):Ref<QueryLocationReqBuilder>
			body(body:Ref<QueryLocationReqBody>):Ref<QueryLocationReqBuilder>
			build():Ref<QueryLocationReq>
	}
	export interface QueryLocationResp extends Struct<QueryLocationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<QueryLocationRespData>
			success():bool
	}
	export interface QueryLocationRespData extends Struct<QueryLocationRespData>{

			items:Ref<LocationDto>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	//"ignore_empty_error"
	export const QueryOptionIgnoreEmptyError:string
	export interface QueryTalentObjectResp extends Struct<QueryTalentObjectResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<QueryTalentObjectRespData>
			success():bool
	}
	export interface QueryTalentObjectRespData extends Struct<QueryTalentObjectRespData>{

			items:Ref<CommonSchema>[]
	}
	export interface Question extends Struct<Question>{

			questionId:Ref<string>
			questionName:Ref<string>
			questionEnName:Ref<string>
			questionDesc:Ref<string>
			questionEnDesc:Ref<string>
			questionType:Ref<int>
			isRequired:Ref<bool>
			selectOptionResultList:Ref<SelectOptionResult>[]
			fiveStartScoringResult:Ref<FiveStartScoringResult>
			descriptionResult:Ref<string>
	}
	export interface QuestionBuilder extends Struct<QuestionBuilder>{

			questionId(questionId:string):Ref<QuestionBuilder>
			questionName(questionName:string):Ref<QuestionBuilder>
			questionEnName(questionEnName:string):Ref<QuestionBuilder>
			questionDesc(questionDesc:string):Ref<QuestionBuilder>
			questionEnDesc(questionEnDesc:string):Ref<QuestionBuilder>
			questionType(questionType:int):Ref<QuestionBuilder>
			isRequired(isRequired:bool):Ref<QuestionBuilder>
			selectOptionResultList(selectOptionResultList:Ref<SelectOptionResult>[]):Ref<QuestionBuilder>
			fiveStartScoringResult(fiveStartScoringResult:Ref<FiveStartScoringResult>):Ref<QuestionBuilder>
			descriptionResult(descriptionResult:string):Ref<QuestionBuilder>
			build():Ref<Question>
	}
	export interface Questionnaire extends Struct<Questionnaire>{

			questionnaireId:Ref<string>
			applicationId:Ref<string>
			interviewId:Ref<string>
			version:Ref<int>
			questions:Ref<Question>[]
			hasAnswers:Ref<bool>
			updateTime:Ref<string>
	}
	export interface QuestionnaireBuilder extends Struct<QuestionnaireBuilder>{

			questionnaireId(questionnaireId:string):Ref<QuestionnaireBuilder>
			applicationId(applicationId:string):Ref<QuestionnaireBuilder>
			interviewId(interviewId:string):Ref<QuestionnaireBuilder>
			version(version:int):Ref<QuestionnaireBuilder>
			questions(questions:Ref<Question>[]):Ref<QuestionnaireBuilder>
			hasAnswers(hasAnswers:bool):Ref<QuestionnaireBuilder>
			updateTime(updateTime:string):Ref<QuestionnaireBuilder>
			build():Ref<Questionnaire>
	}
	export interface RangeFilter extends Struct<RangeFilter>{

			from:Ref<string>
			to:Ref<string>
	}
	export interface RangeFilterBuilder extends Struct<RangeFilterBuilder>{

			from(from:string):Ref<RangeFilterBuilder>
			to(to:string):Ref<RangeFilterBuilder>
			build():Ref<RangeFilter>
	}
	export interface ReconciliationReferralAccountPathReqBodyBuilder extends Struct<ReconciliationReferralAccountPathReqBodyBuilder>{

			startTransTime(startTransTime:string):Ref<ReconciliationReferralAccountPathReqBodyBuilder>
			endTransTime(endTransTime:string):Ref<ReconciliationReferralAccountPathReqBodyBuilder>
			tradeDetails(tradeDetails:Ref<TradeDetail>[]):Ref<ReconciliationReferralAccountPathReqBodyBuilder>
			build():Ref<ReconciliationReferralAccountReqBody>
	}
	export interface ReconciliationReferralAccountReq extends Struct<ReconciliationReferralAccountReq>{

			body:Ref<ReconciliationReferralAccountReqBody>
	}
	export interface ReconciliationReferralAccountReqBody extends Struct<ReconciliationReferralAccountReqBody>{

			startTransTime:Ref<string>
			endTransTime:Ref<string>
			tradeDetails:Ref<TradeDetail>[]
	}
	export interface ReconciliationReferralAccountReqBodyBuilder extends Struct<ReconciliationReferralAccountReqBodyBuilder>{

			startTransTime(startTransTime:string):Ref<ReconciliationReferralAccountReqBodyBuilder>
			endTransTime(endTransTime:string):Ref<ReconciliationReferralAccountReqBodyBuilder>
			tradeDetails(tradeDetails:Ref<TradeDetail>[]):Ref<ReconciliationReferralAccountReqBodyBuilder>
			build():Ref<ReconciliationReferralAccountReqBody>
	}
	export interface ReconciliationReferralAccountReqBuilder extends Struct<ReconciliationReferralAccountReqBuilder>{

			body(body:Ref<ReconciliationReferralAccountReqBody>):Ref<ReconciliationReferralAccountReqBuilder>
			build():Ref<ReconciliationReferralAccountReq>
	}
	export interface ReconciliationReferralAccountResp extends Struct<ReconciliationReferralAccountResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ReconciliationReferralAccountRespData>
			success():bool
	}
	export interface ReconciliationReferralAccountRespData extends Struct<ReconciliationReferralAccountRespData>{

			checkFailedList:Ref<CheckFailedAccountInfo>[]
	}
	export interface RecoverApplicationReq extends Struct<RecoverApplicationReq>{

	}
	export interface RecoverApplicationReqBuilder extends Struct<RecoverApplicationReqBuilder>{

			applicationId(applicationId:string):Ref<RecoverApplicationReqBuilder>
			build():Ref<RecoverApplicationReq>
	}
	export interface RecoverApplicationResp extends Struct<RecoverApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface RecruiterJobReq extends Struct<RecruiterJobReq>{

	}
	export interface RecruiterJobReqBuilder extends Struct<RecruiterJobReqBuilder>{

			jobId(jobId:string):Ref<RecruiterJobReqBuilder>
			userIdType(userIdType:string):Ref<RecruiterJobReqBuilder>
			build():Ref<RecruiterJobReq>
	}
	export interface RecruiterJobResp extends Struct<RecruiterJobResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<RecruiterJobRespData>
			success():bool
	}
	export interface RecruiterJobRespData extends Struct<RecruiterJobRespData>{

			info:Ref<JobRecruiter2>
	}
	export interface RecruitmentType extends Struct<RecruitmentType>{

			id:Ref<string>
			name:Ref<string>
			enName:Ref<string>
	}
	export interface RecruitmentTypeBuilder extends Struct<RecruitmentTypeBuilder>{

			id(id:string):Ref<RecruitmentTypeBuilder>
			name(name:string):Ref<RecruitmentTypeBuilder>
			enName(enName:string):Ref<RecruitmentTypeBuilder>
			build():Ref<RecruitmentType>
	}
	export interface Referral extends Struct<Referral>{

			id:Ref<string>
			applicationId:Ref<string>
			createTime:Ref<int>
			referralUserId:Ref<string>
			referralUser:Ref<IdNameObject>
	}
	export interface ReferralBuilder extends Struct<ReferralBuilder>{

			id(id:string):Ref<ReferralBuilder>
			applicationId(applicationId:string):Ref<ReferralBuilder>
			createTime(createTime:int):Ref<ReferralBuilder>
			referralUserId(referralUserId:string):Ref<ReferralBuilder>
			referralUser(referralUser:Ref<IdNameObject>):Ref<ReferralBuilder>
			build():Ref<Referral>
	}
	export interface ReferralInfo extends Struct<ReferralInfo>{

			id:Ref<string>
			applicationIds:string[]
			createTime:Ref<string>
			referralUser:Ref<IdNameObject>
	}
	export interface ReferralInfoBuilder extends Struct<ReferralInfoBuilder>{

			id(id:string):Ref<ReferralInfoBuilder>
			applicationIds(applicationIds:string[]):Ref<ReferralInfoBuilder>
			createTime(createTime:string):Ref<ReferralInfoBuilder>
			referralUser(referralUser:Ref<IdNameObject>):Ref<ReferralInfoBuilder>
			build():Ref<ReferralInfo>
	}
	export interface RegistrationBasicInfo extends Struct<RegistrationBasicInfo>{

			id:Ref<string>
			registrationTime:Ref<int>
			downloadUrl:Ref<string>
			scenario:Ref<int>
	}
	export interface RegistrationBasicInfoBuilder extends Struct<RegistrationBasicInfoBuilder>{

			id(id:string):Ref<RegistrationBasicInfoBuilder>
			registrationTime(registrationTime:int):Ref<RegistrationBasicInfoBuilder>
			downloadUrl(downloadUrl:string):Ref<RegistrationBasicInfoBuilder>
			scenario(scenario:int):Ref<RegistrationBasicInfoBuilder>
			build():Ref<RegistrationBasicInfo>
	}
	export interface RegistrationInfo extends Struct<RegistrationInfo>{

			schemaId:Ref<string>
			name:Ref<string>
	}
	export interface RegistrationInfoBuilder extends Struct<RegistrationInfoBuilder>{

			schemaId(schemaId:string):Ref<RegistrationInfoBuilder>
			name(name:string):Ref<RegistrationInfoBuilder>
			build():Ref<RegistrationInfo>
	}
	export interface RegistrationSchema extends Struct<RegistrationSchema>{

			id:Ref<string>
			name:Ref<string>
			scenarios:int[]
			objects:Ref<CommonSchema>[]
	}
	export interface RegistrationSchemaBuilder extends Struct<RegistrationSchemaBuilder>{

			id(id:string):Ref<RegistrationSchemaBuilder>
			name(name:string):Ref<RegistrationSchemaBuilder>
			scenarios(scenarios:int[]):Ref<RegistrationSchemaBuilder>
			objects(objects:Ref<CommonSchema>[]):Ref<RegistrationSchemaBuilder>
			build():Ref<RegistrationSchema>
	}
	export interface RegistrationSchemaInfo extends Struct<RegistrationSchemaInfo>{

			schemaId:Ref<string>
			name:Ref<string>
	}
	export interface RegistrationSchemaInfoBuilder extends Struct<RegistrationSchemaInfoBuilder>{

			schemaId(schemaId:string):Ref<RegistrationSchemaInfoBuilder>
			name(name:string):Ref<RegistrationSchemaInfoBuilder>
			build():Ref<RegistrationSchemaInfo>
	}
	//5
	export const RequiredDegreeAssociate:int
	//6
	export const RequiredDegreeBachelor:int
	//5
	export const RequiredDegreeCombinedUpdateJobAssociate:int
	//6
	export const RequiredDegreeCombinedUpdateJobBachelor:int
	//2
	export const RequiredDegreeCombinedUpdateJobJuniorMiddleSchoolEducation:int
	//7
	export const RequiredDegreeCombinedUpdateJobMaster:int
	//20
	export const RequiredDegreeCombinedUpdateJobNoLimit:int
	//8
	export const RequiredDegreeCombinedUpdateJobPhd:int
	//1
	export const RequiredDegreeCombinedUpdateJobPrimaryEducation:int
	//3
	export const RequiredDegreeCombinedUpdateJobSecondary:int
	//4
	export const RequiredDegreeCombinedUpdateJobSeniorSchoolGraduates:int
	//5
	export const RequiredDegreeCreateJobRequirementAssociate:int
	//6
	export const RequiredDegreeCreateJobRequirementBachelor:int
	//2
	export const RequiredDegreeCreateJobRequirementJuniorMiddleSchoolEducation:int
	//7
	export const RequiredDegreeCreateJobRequirementMaster:int
	//20
	export const RequiredDegreeCreateJobRequirementNoLimit:int
	//8
	export const RequiredDegreeCreateJobRequirementPhd:int
	//1
	export const RequiredDegreeCreateJobRequirementPrimaryEducation:int
	//3
	export const RequiredDegreeCreateJobRequirementSecondary:int
	//4
	export const RequiredDegreeCreateJobRequirementSeniorSchoolGraduates:int
	//2
	export const RequiredDegreeJuniorMiddleSchoolEducation:int
	//7
	export const RequiredDegreeMaster:int
	//20
	export const RequiredDegreeNoLimit:int
	//8
	export const RequiredDegreePhd:int
	//1
	export const RequiredDegreePrimaryEducation:int
	//3
	export const RequiredDegreeSecondary:int
	//4
	export const RequiredDegreeSeniorSchoolGraduates:int
	//5
	export const RequiredDegreeUpdateJobRequirementAssociate:int
	//6
	export const RequiredDegreeUpdateJobRequirementBachelor:int
	//2
	export const RequiredDegreeUpdateJobRequirementJuniorMiddleSchoolEducation:int
	//7
	export const RequiredDegreeUpdateJobRequirementMaster:int
	//20
	export const RequiredDegreeUpdateJobRequirementNoLimit:int
	//8
	export const RequiredDegreeUpdateJobRequirementPhd:int
	//1
	export const RequiredDegreeUpdateJobRequirementPrimaryEducation:int
	//3
	export const RequiredDegreeUpdateJobRequirementSecondary:int
	//4
	export const RequiredDegreeUpdateJobRequirementSeniorSchoolGraduates:int
	export interface ResumeSource extends Struct<ResumeSource>{

			id:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
			activeStatus:Ref<int>
			resumeSourceType:Ref<string>
	}
	export interface ResumeSourceBuilder extends Struct<ResumeSourceBuilder>{

			id(id:string):Ref<ResumeSourceBuilder>
			zhName(zhName:string):Ref<ResumeSourceBuilder>
			enName(enName:string):Ref<ResumeSourceBuilder>
			activeStatus(activeStatus:int):Ref<ResumeSourceBuilder>
			resumeSourceType(resumeSourceType:string):Ref<ResumeSourceBuilder>
			build():Ref<ResumeSource>
	}
	export interface Role extends Struct<Role>{

			id:Ref<string>
			name:Ref<I18n>
			description:Ref<I18n>
			scopeOfApplication:Ref<int>
			modifyTime:Ref<string>
			roleStatus:Ref<int>
			roleType:Ref<int>
	}
	export interface RoleBuilder extends Struct<RoleBuilder>{

			id(id:string):Ref<RoleBuilder>
			name(name:Ref<I18n>):Ref<RoleBuilder>
			description(description:Ref<I18n>):Ref<RoleBuilder>
			scopeOfApplication(scopeOfApplication:int):Ref<RoleBuilder>
			modifyTime(modifyTime:string):Ref<RoleBuilder>
			roleStatus(roleStatus:int):Ref<RoleBuilder>
			roleType(roleType:int):Ref<RoleBuilder>
			build():Ref<Role>
	}
	export interface RoleDetail extends Struct<RoleDetail>{

			id:Ref<string>
			name:Ref<I18n>
			description:Ref<I18n>
			modifyTime:Ref<string>
			roleStatus:Ref<int>
			roleType:Ref<int>
			scopeOfApplication:Ref<int>
			hasBusinessManagementScope:Ref<bool>
			socailPermissionCollection:Ref<PermissionCollection>
			campusPermissionCollection:Ref<PermissionCollection>
	}
	export interface RoleDetailBuilder extends Struct<RoleDetailBuilder>{

			id(id:string):Ref<RoleDetailBuilder>
			name(name:Ref<I18n>):Ref<RoleDetailBuilder>
			description(description:Ref<I18n>):Ref<RoleDetailBuilder>
			modifyTime(modifyTime:string):Ref<RoleDetailBuilder>
			roleStatus(roleStatus:int):Ref<RoleDetailBuilder>
			roleType(roleType:int):Ref<RoleDetailBuilder>
			scopeOfApplication(scopeOfApplication:int):Ref<RoleDetailBuilder>
			hasBusinessManagementScope(hasBusinessManagementScope:bool):Ref<RoleDetailBuilder>
			socailPermissionCollection(socailPermissionCollection:Ref<PermissionCollection>):Ref<RoleDetailBuilder>
			campusPermissionCollection(campusPermissionCollection:Ref<PermissionCollection>):Ref<RoleDetailBuilder>
			build():Ref<RoleDetail>
	}
	//3
	export const RuleTypeActive:int
	//1
	export const RuleTypeOnboard:int
	//4
	export const RuleTypeOpenSource:int
	//5
	export const RuleTypeOther:int
	//2
	export const RuleTypeProcesse:int
	export interface Salary extends Struct<Salary>{

			operateTime:Ref<string>
			salaryStatus:Ref<int>
			offerId:Ref<string>
			salayId:Ref<string>
			operatorId:Ref<string>
	}
	export interface SalaryBuilder extends Struct<SalaryBuilder>{

			operateTime(operateTime:string):Ref<SalaryBuilder>
			salaryStatus(salaryStatus:int):Ref<SalaryBuilder>
			offerId(offerId:string):Ref<SalaryBuilder>
			salayId(salayId:string):Ref<SalaryBuilder>
			operatorId(operatorId:string):Ref<SalaryBuilder>
			build():Ref<Salary>
	}
	//14
	export const ScenarioListRegistrationSchemaInfoUpdateRegistration:int
	//5
	export const ScenarioListRegistrationSchemaInterviewRegistration:int
	//6
	export const ScenarioListRegistrationSchemaOnboardRegistration:int
	//2
	export const Scenario校招:int
	//1
	export const Scenario社招:int
	//2
	export const ScopeBatchUpdateEcoAccountCustomField笔试:int
	//1
	export const ScopeBatchUpdateEcoAccountCustomField背调:int
	//2
	export const ScopeCreateEcoAccountCustomField笔试:int
	//1
	export const ScopeCreateEcoAccountCustomField背调:int
	//2
	export const Scope笔试:int
	//1
	export const Scope背调:int
	export interface ScoreCalculationConfig extends Struct<ScoreCalculationConfig>{

			enabled:Ref<bool>
			calculationMode:Ref<int>
	}
	export interface ScoreCalculationConfigBuilder extends Struct<ScoreCalculationConfigBuilder>{

			enabled(enabled:bool):Ref<ScoreCalculationConfigBuilder>
			calculationMode(calculationMode:int):Ref<ScoreCalculationConfigBuilder>
			build():Ref<ScoreCalculationConfig>
	}
	export interface ScoreDimensionConfig extends Struct<ScoreDimensionConfig>{

			scoreDimensionType:Ref<int>
			lowerLimitScore:Ref<int>
			upperLimitScore:Ref<int>
	}
	export interface ScoreDimensionConfigBuilder extends Struct<ScoreDimensionConfigBuilder>{

			scoreDimensionType(scoreDimensionType:int):Ref<ScoreDimensionConfigBuilder>
			lowerLimitScore(lowerLimitScore:int):Ref<ScoreDimensionConfigBuilder>
			upperLimitScore(upperLimitScore:int):Ref<ScoreDimensionConfigBuilder>
			build():Ref<ScoreDimensionConfig>
	}
	export interface SearchDiversityInclusionPathReqBodyBuilder extends Struct<SearchDiversityInclusionPathReqBodyBuilder>{

			talentIds(talentIds:string[]):Ref<SearchDiversityInclusionPathReqBodyBuilder>
			applicationIds(applicationIds:string[]):Ref<SearchDiversityInclusionPathReqBodyBuilder>
			build():Ref<SearchDiversityInclusionReqBody>
	}
	export interface SearchDiversityInclusionReq extends Struct<SearchDiversityInclusionReq>{

			body:Ref<SearchDiversityInclusionReqBody>
	}
	export interface SearchDiversityInclusionReqBody extends Struct<SearchDiversityInclusionReqBody>{

			talentIds:string[]
			applicationIds:string[]
	}
	export interface SearchDiversityInclusionReqBodyBuilder extends Struct<SearchDiversityInclusionReqBodyBuilder>{

			talentIds(talentIds:string[]):Ref<SearchDiversityInclusionReqBodyBuilder>
			applicationIds(applicationIds:string[]):Ref<SearchDiversityInclusionReqBodyBuilder>
			build():Ref<SearchDiversityInclusionReqBody>
	}
	export interface SearchDiversityInclusionReqBuilder extends Struct<SearchDiversityInclusionReqBuilder>{

			body(body:Ref<SearchDiversityInclusionReqBody>):Ref<SearchDiversityInclusionReqBuilder>
			build():Ref<SearchDiversityInclusionReq>
	}
	export interface SearchDiversityInclusionResp extends Struct<SearchDiversityInclusionResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchDiversityInclusionRespData>
			success():bool
	}
	export interface SearchDiversityInclusionRespData extends Struct<SearchDiversityInclusionRespData>{

			items:Ref<DiInfo>[]
	}
	export interface SearchJobPublishRecordPathReqBodyBuilder extends Struct<SearchJobPublishRecordPathReqBodyBuilder>{

			jobChannelId(jobChannelId:string):Ref<SearchJobPublishRecordPathReqBodyBuilder>
			build():Ref<SearchJobPublishRecordReqBody>
	}
	export interface SearchJobPublishRecordReq extends Struct<SearchJobPublishRecordReq>{

			body:Ref<SearchJobPublishRecordReqBody>
	}
	export interface SearchJobPublishRecordReqBody extends Struct<SearchJobPublishRecordReqBody>{

			jobChannelId:Ref<string>
	}
	export interface SearchJobPublishRecordReqBodyBuilder extends Struct<SearchJobPublishRecordReqBodyBuilder>{

			jobChannelId(jobChannelId:string):Ref<SearchJobPublishRecordReqBodyBuilder>
			build():Ref<SearchJobPublishRecordReqBody>
	}
	export interface SearchJobPublishRecordReqBuilder extends Struct<SearchJobPublishRecordReqBuilder>{

			pageToken(pageToken:string):Ref<SearchJobPublishRecordReqBuilder>
			pageSize(pageSize:int):Ref<SearchJobPublishRecordReqBuilder>
			userIdType(userIdType:string):Ref<SearchJobPublishRecordReqBuilder>
			departmentIdType(departmentIdType:string):Ref<SearchJobPublishRecordReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<SearchJobPublishRecordReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<SearchJobPublishRecordReqBuilder>
			body(body:Ref<SearchJobPublishRecordReqBody>):Ref<SearchJobPublishRecordReqBuilder>
			build():Ref<SearchJobPublishRecordReq>
	}
	export interface SearchJobPublishRecordResp extends Struct<SearchJobPublishRecordResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchJobPublishRecordRespData>
			success():bool
	}
	export interface SearchJobPublishRecordRespData extends Struct<SearchJobPublishRecordRespData>{

			items:Ref<WebsiteJobPost>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface SearchReferralPathReqBodyBuilder extends Struct<SearchReferralPathReqBodyBuilder>{

			talentId(talentId:string):Ref<SearchReferralPathReqBodyBuilder>
			startTime(startTime:string):Ref<SearchReferralPathReqBodyBuilder>
			endTime(endTime:string):Ref<SearchReferralPathReqBodyBuilder>
			build():Ref<SearchReferralReqBody>
	}
	export interface SearchReferralReq extends Struct<SearchReferralReq>{

			body:Ref<SearchReferralReqBody>
	}
	export interface SearchReferralReqBody extends Struct<SearchReferralReqBody>{

			talentId:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
	}
	export interface SearchReferralReqBodyBuilder extends Struct<SearchReferralReqBodyBuilder>{

			talentId(talentId:string):Ref<SearchReferralReqBodyBuilder>
			startTime(startTime:string):Ref<SearchReferralReqBodyBuilder>
			endTime(endTime:string):Ref<SearchReferralReqBodyBuilder>
			build():Ref<SearchReferralReqBody>
	}
	export interface SearchReferralReqBuilder extends Struct<SearchReferralReqBuilder>{

			userIdType(userIdType:string):Ref<SearchReferralReqBuilder>
			body(body:Ref<SearchReferralReqBody>):Ref<SearchReferralReqBuilder>
			build():Ref<SearchReferralReq>
	}
	export interface SearchReferralResp extends Struct<SearchReferralResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchReferralRespData>
			success():bool
	}
	export interface SearchReferralRespData extends Struct<SearchReferralRespData>{

			items:Ref<ReferralInfo>[]
	}
	export interface SearchTalentOperationLogPathReqBodyBuilder extends Struct<SearchTalentOperationLogPathReqBodyBuilder>{

			jobIdList(jobIdList:string[]):Ref<SearchTalentOperationLogPathReqBodyBuilder>
			operatorIdList(operatorIdList:string[]):Ref<SearchTalentOperationLogPathReqBodyBuilder>
			operationList(operationList:int[]):Ref<SearchTalentOperationLogPathReqBodyBuilder>
			build():Ref<SearchTalentOperationLogReqBody>
	}
	export interface SearchTalentOperationLogReq extends Struct<SearchTalentOperationLogReq>{

			body:Ref<SearchTalentOperationLogReqBody>
	}
	export interface SearchTalentOperationLogReqBody extends Struct<SearchTalentOperationLogReqBody>{

			jobIdList:string[]
			operatorIdList:string[]
			operationList:int[]
	}
	export interface SearchTalentOperationLogReqBodyBuilder extends Struct<SearchTalentOperationLogReqBodyBuilder>{

			jobIdList(jobIdList:string[]):Ref<SearchTalentOperationLogReqBodyBuilder>
			operatorIdList(operatorIdList:string[]):Ref<SearchTalentOperationLogReqBodyBuilder>
			operationList(operationList:int[]):Ref<SearchTalentOperationLogReqBodyBuilder>
			build():Ref<SearchTalentOperationLogReqBody>
	}
	export interface SearchTalentOperationLogReqBuilder extends Struct<SearchTalentOperationLogReqBuilder>{

			pageToken(pageToken:string):Ref<SearchTalentOperationLogReqBuilder>
			pageSize(pageSize:int):Ref<SearchTalentOperationLogReqBuilder>
			userIdType(userIdType:string):Ref<SearchTalentOperationLogReqBuilder>
			body(body:Ref<SearchTalentOperationLogReqBody>):Ref<SearchTalentOperationLogReqBuilder>
			build():Ref<SearchTalentOperationLogReq>
	}
	export interface SearchTalentOperationLogResp extends Struct<SearchTalentOperationLogResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchTalentOperationLogRespData>
			success():bool
	}
	export interface SearchTalentOperationLogRespData extends Struct<SearchTalentOperationLogRespData>{

			items:Ref<TalentOperationLog>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface SearchTalentPoolIterator extends Struct<SearchTalentPoolIterator>{

			next():[bool,Ref<TalentPool>]
			nextPageToken():Ref<string>
	}
	export interface SearchTalentPoolReq extends Struct<SearchTalentPoolReq>{

			limit:int
	}
	export interface SearchTalentPoolReqBuilder extends Struct<SearchTalentPoolReqBuilder>{

			limit(limit:int):Ref<SearchTalentPoolReqBuilder>
			pageSize(pageSize:int):Ref<SearchTalentPoolReqBuilder>
			pageToken(pageToken:string):Ref<SearchTalentPoolReqBuilder>
			idList(idList:string[]):Ref<SearchTalentPoolReqBuilder>
			build():Ref<SearchTalentPoolReq>
	}
	export interface SearchTalentPoolResp extends Struct<SearchTalentPoolResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchTalentPoolRespData>
			success():bool
	}
	export interface SearchTalentPoolRespData extends Struct<SearchTalentPoolRespData>{

			items:Ref<TalentPool>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface SearchTestIterator extends Struct<SearchTestIterator>{

			next():[bool,Ref<Test>]
			nextPageToken():Ref<string>
	}
	export interface SearchTestPathReqBodyBuilder extends Struct<SearchTestPathReqBodyBuilder>{

			applicationIdList(applicationIdList:string[]):Ref<SearchTestPathReqBodyBuilder>
			testStartTimeMin(testStartTimeMin:string):Ref<SearchTestPathReqBodyBuilder>
			testStartTimeMax(testStartTimeMax:string):Ref<SearchTestPathReqBodyBuilder>
			build():Ref<SearchTestReqBody>
	}
	export interface SearchTestReq extends Struct<SearchTestReq>{

			body:Ref<SearchTestReqBody>
			limit:int
	}
	export interface SearchTestReqBody extends Struct<SearchTestReqBody>{

			applicationIdList:string[]
			testStartTimeMin:Ref<string>
			testStartTimeMax:Ref<string>
	}
	export interface SearchTestReqBodyBuilder extends Struct<SearchTestReqBodyBuilder>{

			applicationIdList(applicationIdList:string[]):Ref<SearchTestReqBodyBuilder>
			testStartTimeMin(testStartTimeMin:string):Ref<SearchTestReqBodyBuilder>
			testStartTimeMax(testStartTimeMax:string):Ref<SearchTestReqBodyBuilder>
			build():Ref<SearchTestReqBody>
	}
	export interface SearchTestReqBuilder extends Struct<SearchTestReqBuilder>{

			limit(limit:int):Ref<SearchTestReqBuilder>
			pageToken(pageToken:string):Ref<SearchTestReqBuilder>
			pageSize(pageSize:int):Ref<SearchTestReqBuilder>
			userIdType(userIdType:string):Ref<SearchTestReqBuilder>
			body(body:Ref<SearchTestReqBody>):Ref<SearchTestReqBuilder>
			build():Ref<SearchTestReq>
	}
	export interface SearchTestResp extends Struct<SearchTestResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchTestRespData>
			success():bool
	}
	export interface SearchTestRespData extends Struct<SearchTestRespData>{

			items:Ref<Test>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface SearchWebsiteJobPostIterator extends Struct<SearchWebsiteJobPostIterator>{

			next():[bool,Ref<WebsiteJobPost>]
			nextPageToken():Ref<string>
	}
	export interface SearchWebsiteJobPostPathReqBodyBuilder extends Struct<SearchWebsiteJobPostPathReqBodyBuilder>{

			jobTypeIdList(jobTypeIdList:string[]):Ref<SearchWebsiteJobPostPathReqBodyBuilder>
			cityCodeList(cityCodeList:string[]):Ref<SearchWebsiteJobPostPathReqBodyBuilder>
			jobFunctionIdList(jobFunctionIdList:string[]):Ref<SearchWebsiteJobPostPathReqBodyBuilder>
			subjectIdList(subjectIdList:string[]):Ref<SearchWebsiteJobPostPathReqBodyBuilder>
			keyword(keyword:string):Ref<SearchWebsiteJobPostPathReqBodyBuilder>
			updateStartTime(updateStartTime:string):Ref<SearchWebsiteJobPostPathReqBodyBuilder>
			updateEndTime(updateEndTime:string):Ref<SearchWebsiteJobPostPathReqBodyBuilder>
			createStartTime(createStartTime:string):Ref<SearchWebsiteJobPostPathReqBodyBuilder>
			createEndTime(createEndTime:string):Ref<SearchWebsiteJobPostPathReqBodyBuilder>
			build():Ref<SearchWebsiteJobPostReqBody>
	}
	export interface SearchWebsiteJobPostReq extends Struct<SearchWebsiteJobPostReq>{

			body:Ref<SearchWebsiteJobPostReqBody>
			limit:int
	}
	export interface SearchWebsiteJobPostReqBody extends Struct<SearchWebsiteJobPostReqBody>{

			jobTypeIdList:string[]
			cityCodeList:string[]
			jobFunctionIdList:string[]
			subjectIdList:string[]
			keyword:Ref<string>
			updateStartTime:Ref<string>
			updateEndTime:Ref<string>
			createStartTime:Ref<string>
			createEndTime:Ref<string>
	}
	export interface SearchWebsiteJobPostReqBodyBuilder extends Struct<SearchWebsiteJobPostReqBodyBuilder>{

			jobTypeIdList(jobTypeIdList:string[]):Ref<SearchWebsiteJobPostReqBodyBuilder>
			cityCodeList(cityCodeList:string[]):Ref<SearchWebsiteJobPostReqBodyBuilder>
			jobFunctionIdList(jobFunctionIdList:string[]):Ref<SearchWebsiteJobPostReqBodyBuilder>
			subjectIdList(subjectIdList:string[]):Ref<SearchWebsiteJobPostReqBodyBuilder>
			keyword(keyword:string):Ref<SearchWebsiteJobPostReqBodyBuilder>
			updateStartTime(updateStartTime:string):Ref<SearchWebsiteJobPostReqBodyBuilder>
			updateEndTime(updateEndTime:string):Ref<SearchWebsiteJobPostReqBodyBuilder>
			createStartTime(createStartTime:string):Ref<SearchWebsiteJobPostReqBodyBuilder>
			createEndTime(createEndTime:string):Ref<SearchWebsiteJobPostReqBodyBuilder>
			build():Ref<SearchWebsiteJobPostReqBody>
	}
	export interface SearchWebsiteJobPostReqBuilder extends Struct<SearchWebsiteJobPostReqBuilder>{

			limit(limit:int):Ref<SearchWebsiteJobPostReqBuilder>
			websiteId(websiteId:string):Ref<SearchWebsiteJobPostReqBuilder>
			pageToken(pageToken:string):Ref<SearchWebsiteJobPostReqBuilder>
			pageSize(pageSize:int):Ref<SearchWebsiteJobPostReqBuilder>
			userIdType(userIdType:string):Ref<SearchWebsiteJobPostReqBuilder>
			departmentIdType(departmentIdType:string):Ref<SearchWebsiteJobPostReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<SearchWebsiteJobPostReqBuilder>
			body(body:Ref<SearchWebsiteJobPostReqBody>):Ref<SearchWebsiteJobPostReqBuilder>
			build():Ref<SearchWebsiteJobPostReq>
	}
	export interface SearchWebsiteJobPostResp extends Struct<SearchWebsiteJobPostResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<SearchWebsiteJobPostRespData>
			success():bool
	}
	export interface SearchWebsiteJobPostRespData extends Struct<SearchWebsiteJobPostRespData>{

			items:Ref<WebsiteJobPost>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface SelectOptionResult extends Struct<SelectOptionResult>{

			optionId:Ref<string>
			optionName:Ref<string>
			optionEnName:Ref<string>
			optionDesc:Ref<string>
			optionEnDesc:Ref<string>
			isSelected:Ref<bool>
	}
	export interface SelectOptionResultBuilder extends Struct<SelectOptionResultBuilder>{

			optionId(optionId:string):Ref<SelectOptionResultBuilder>
			optionName(optionName:string):Ref<SelectOptionResultBuilder>
			optionEnName(optionEnName:string):Ref<SelectOptionResultBuilder>
			optionDesc(optionDesc:string):Ref<SelectOptionResultBuilder>
			optionEnDesc(optionEnDesc:string):Ref<SelectOptionResultBuilder>
			isSelected(isSelected:bool):Ref<SelectOptionResultBuilder>
			build():Ref<SelectOptionResult>
	}
	export interface Sequence extends Struct<Sequence>{

			id:Ref<string>
			name:Ref<string>
			enName:Ref<string>
	}
	export interface SequenceBuilder extends Struct<SequenceBuilder>{

			id(id:string):Ref<SequenceBuilder>
			name(name:string):Ref<SequenceBuilder>
			enName(enName:string):Ref<SequenceBuilder>
			build():Ref<Sequence>
	}
	export interface SignatureAttachment extends Struct<SignatureAttachment>{

			id:Ref<string>
			fileName:Ref<string>
			fileTemplateId:Ref<string>
			fileTemplateName:Ref<string>
			fileTemplateTypeId:Ref<string>
			fileTemplateTypeName:Ref<string>
	}
	export interface SignatureAttachmentBuilder extends Struct<SignatureAttachmentBuilder>{

			id(id:string):Ref<SignatureAttachmentBuilder>
			fileName(fileName:string):Ref<SignatureAttachmentBuilder>
			fileTemplateId(fileTemplateId:string):Ref<SignatureAttachmentBuilder>
			fileTemplateName(fileTemplateName:string):Ref<SignatureAttachmentBuilder>
			fileTemplateTypeId(fileTemplateTypeId:string):Ref<SignatureAttachmentBuilder>
			fileTemplateTypeName(fileTemplateTypeName:string):Ref<SignatureAttachmentBuilder>
			build():Ref<SignatureAttachment>
	}
	export interface Site extends Struct<Site>{

			id:Ref<string>
			name:Ref<SiteName>
	}
	export interface SiteApplication extends Struct<SiteApplication>{

			externalId:Ref<string>
			jobPostId:Ref<string>
			resume:Ref<SiteApplicationResume>
			status:Ref<string>
	}
	export interface SiteApplicationBuilder extends Struct<SiteApplicationBuilder>{

			externalId(externalId:string):Ref<SiteApplicationBuilder>
			jobPostId(jobPostId:string):Ref<SiteApplicationBuilder>
			resume(resume:Ref<SiteApplicationResume>):Ref<SiteApplicationBuilder>
			status(status:string):Ref<SiteApplicationBuilder>
			build():Ref<SiteApplication>
	}
	export interface SiteApplicationResume extends Struct<SiteApplicationResume>{

			name:Ref<string>
			mobileNumber:Ref<string>
			moblieCode:Ref<string>
			email:Ref<string>
			siteAttachmentId:Ref<string>
			selfEvaluation:Ref<string>
			age:Ref<string>
			workingYear:Ref<string>
			educationList:Ref<SiteResumeEducation>[]
			careerList:Ref<SiteResumeCareer>[]
			projectList:Ref<SiteResumeProject>[]
			internshipList:Ref<SiteResumeInternship>[]
			workList:Ref<SiteResumeWork>[]
			awardList:Ref<SiteResumeAward>[]
			languageSkillList:Ref<SiteResumeLanguageSkill>[]
			snsList:Ref<SiteResumeSns>[]
			identification:Ref<SiteResumeIdentification>
			competitionList:Ref<SiteResumeCompetition>[]
			certificateList:Ref<SiteResumeCertificate>[]
	}
	export interface SiteApplicationResumeBuilder extends Struct<SiteApplicationResumeBuilder>{

			name(name:string):Ref<SiteApplicationResumeBuilder>
			mobileNumber(mobileNumber:string):Ref<SiteApplicationResumeBuilder>
			moblieCode(moblieCode:string):Ref<SiteApplicationResumeBuilder>
			email(email:string):Ref<SiteApplicationResumeBuilder>
			siteAttachmentId(siteAttachmentId:string):Ref<SiteApplicationResumeBuilder>
			selfEvaluation(selfEvaluation:string):Ref<SiteApplicationResumeBuilder>
			age(age:string):Ref<SiteApplicationResumeBuilder>
			workingYear(workingYear:string):Ref<SiteApplicationResumeBuilder>
			educationList(educationList:Ref<SiteResumeEducation>[]):Ref<SiteApplicationResumeBuilder>
			careerList(careerList:Ref<SiteResumeCareer>[]):Ref<SiteApplicationResumeBuilder>
			projectList(projectList:Ref<SiteResumeProject>[]):Ref<SiteApplicationResumeBuilder>
			internshipList(internshipList:Ref<SiteResumeInternship>[]):Ref<SiteApplicationResumeBuilder>
			workList(workList:Ref<SiteResumeWork>[]):Ref<SiteApplicationResumeBuilder>
			awardList(awardList:Ref<SiteResumeAward>[]):Ref<SiteApplicationResumeBuilder>
			languageSkillList(languageSkillList:Ref<SiteResumeLanguageSkill>[]):Ref<SiteApplicationResumeBuilder>
			snsList(snsList:Ref<SiteResumeSns>[]):Ref<SiteApplicationResumeBuilder>
			identification(identification:Ref<SiteResumeIdentification>):Ref<SiteApplicationResumeBuilder>
			competitionList(competitionList:Ref<SiteResumeCompetition>[]):Ref<SiteApplicationResumeBuilder>
			certificateList(certificateList:Ref<SiteResumeCertificate>[]):Ref<SiteApplicationResumeBuilder>
			build():Ref<SiteApplicationResume>
	}
	export interface SiteBuilder extends Struct<SiteBuilder>{

			id(id:string):Ref<SiteBuilder>
			name(name:Ref<SiteName>):Ref<SiteBuilder>
			build():Ref<Site>
	}
	export interface SiteJobCity extends Struct<SiteJobCity>{

			cityCode:Ref<string>
			name:Ref<SiteName>
	}
	export interface SiteJobCityBuilder extends Struct<SiteJobCityBuilder>{

			cityCode(cityCode:string):Ref<SiteJobCityBuilder>
			name(name:Ref<SiteName>):Ref<SiteJobCityBuilder>
			build():Ref<SiteJobCity>
	}
	export interface SiteJobPost extends Struct<SiteJobPost>{

			id:Ref<string>
			title:Ref<string>
			description:Ref<string>
			requirement:Ref<string>
			jobTypeInfo:Ref<SiteJobType>
			cityInfo:Ref<SiteJobCity>
			recruitmentType:Ref<SiteJobRecruitmentType>
			publishTime:Ref<int>
	}
	export interface SiteJobPostBuilder extends Struct<SiteJobPostBuilder>{

			id(id:string):Ref<SiteJobPostBuilder>
			title(title:string):Ref<SiteJobPostBuilder>
			description(description:string):Ref<SiteJobPostBuilder>
			requirement(requirement:string):Ref<SiteJobPostBuilder>
			jobTypeInfo(jobTypeInfo:Ref<SiteJobType>):Ref<SiteJobPostBuilder>
			cityInfo(cityInfo:Ref<SiteJobCity>):Ref<SiteJobPostBuilder>
			recruitmentType(recruitmentType:Ref<SiteJobRecruitmentType>):Ref<SiteJobPostBuilder>
			publishTime(publishTime:int):Ref<SiteJobPostBuilder>
			build():Ref<SiteJobPost>
	}
	export interface SiteJobPostSearchInfo extends Struct<SiteJobPostSearchInfo>{

			jobPostInfo:Ref<SiteJobPost>[]
			count:Ref<int>
	}
	export interface SiteJobPostSearchInfoBuilder extends Struct<SiteJobPostSearchInfoBuilder>{

			jobPostInfo(jobPostInfo:Ref<SiteJobPost>[]):Ref<SiteJobPostSearchInfoBuilder>
			count(count:int):Ref<SiteJobPostSearchInfoBuilder>
			build():Ref<SiteJobPostSearchInfo>
	}
	export interface SiteJobPostSearchRequest extends Struct<SiteJobPostSearchRequest>{

			keyword:Ref<string>
			offset:Ref<int>
			limit:Ref<int>
			jobTypeIdList:string[]
			cityCodeList:string[]
			siteId:Ref<string>
	}
	export interface SiteJobPostSearchRequestBuilder extends Struct<SiteJobPostSearchRequestBuilder>{

			keyword(keyword:string):Ref<SiteJobPostSearchRequestBuilder>
			offset(offset:int):Ref<SiteJobPostSearchRequestBuilder>
			limit(limit:int):Ref<SiteJobPostSearchRequestBuilder>
			jobTypeIdList(jobTypeIdList:string[]):Ref<SiteJobPostSearchRequestBuilder>
			cityCodeList(cityCodeList:string[]):Ref<SiteJobPostSearchRequestBuilder>
			siteId(siteId:string):Ref<SiteJobPostSearchRequestBuilder>
			build():Ref<SiteJobPostSearchRequest>
	}
	export interface SiteJobRecruitmentType extends Struct<SiteJobRecruitmentType>{

			id:Ref<string>
			name:Ref<SiteName>
	}
	export interface SiteJobRecruitmentTypeBuilder extends Struct<SiteJobRecruitmentTypeBuilder>{

			id(id:string):Ref<SiteJobRecruitmentTypeBuilder>
			name(name:Ref<SiteName>):Ref<SiteJobRecruitmentTypeBuilder>
			build():Ref<SiteJobRecruitmentType>
	}
	export interface SiteJobType extends Struct<SiteJobType>{

			id:Ref<string>
			name:Ref<SiteName>
	}
	export interface SiteJobTypeBuilder extends Struct<SiteJobTypeBuilder>{

			id(id:string):Ref<SiteJobTypeBuilder>
			name(name:Ref<SiteName>):Ref<SiteJobTypeBuilder>
			build():Ref<SiteJobType>
	}
	export interface SiteName extends Struct<SiteName>{

			zhCn:Ref<string>
			enUs:Ref<string>
	}
	export interface SiteNameBuilder extends Struct<SiteNameBuilder>{

			zhCn(zhCn:string):Ref<SiteNameBuilder>
			enUs(enUs:string):Ref<SiteNameBuilder>
			build():Ref<SiteName>
	}
	export interface SiteResumeAward extends Struct<SiteResumeAward>{

			title:Ref<string>
			awardTime:Ref<string>
			description:Ref<string>
	}
	export interface SiteResumeAwardBuilder extends Struct<SiteResumeAwardBuilder>{

			title(title:string):Ref<SiteResumeAwardBuilder>
			awardTime(awardTime:string):Ref<SiteResumeAwardBuilder>
			description(description:string):Ref<SiteResumeAwardBuilder>
			build():Ref<SiteResumeAward>
	}
	export interface SiteResumeCareer extends Struct<SiteResumeCareer>{

			company:Ref<string>
			title:Ref<string>
			careerType:Ref<string>
			description:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
	}
	export interface SiteResumeCareerBuilder extends Struct<SiteResumeCareerBuilder>{

			company(company:string):Ref<SiteResumeCareerBuilder>
			title(title:string):Ref<SiteResumeCareerBuilder>
			careerType(careerType:string):Ref<SiteResumeCareerBuilder>
			description(description:string):Ref<SiteResumeCareerBuilder>
			startTime(startTime:string):Ref<SiteResumeCareerBuilder>
			endTime(endTime:string):Ref<SiteResumeCareerBuilder>
			build():Ref<SiteResumeCareer>
	}
	export interface SiteResumeCertificate extends Struct<SiteResumeCertificate>{

			name:Ref<string>
			description:Ref<string>
	}
	export interface SiteResumeCertificateBuilder extends Struct<SiteResumeCertificateBuilder>{

			name(name:string):Ref<SiteResumeCertificateBuilder>
			description(description:string):Ref<SiteResumeCertificateBuilder>
			build():Ref<SiteResumeCertificate>
	}
	export interface SiteResumeCompetition extends Struct<SiteResumeCompetition>{

			name:Ref<string>
			description:Ref<string>
	}
	export interface SiteResumeCompetitionBuilder extends Struct<SiteResumeCompetitionBuilder>{

			name(name:string):Ref<SiteResumeCompetitionBuilder>
			description(description:string):Ref<SiteResumeCompetitionBuilder>
			build():Ref<SiteResumeCompetition>
	}
	export interface SiteResumeEducation extends Struct<SiteResumeEducation>{

			degree:Ref<string>
			school:Ref<string>
			major:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			educationType:Ref<string>
			academicRanking:Ref<string>
	}
	export interface SiteResumeEducationBuilder extends Struct<SiteResumeEducationBuilder>{

			degree(degree:string):Ref<SiteResumeEducationBuilder>
			school(school:string):Ref<SiteResumeEducationBuilder>
			major(major:string):Ref<SiteResumeEducationBuilder>
			startTime(startTime:string):Ref<SiteResumeEducationBuilder>
			endTime(endTime:string):Ref<SiteResumeEducationBuilder>
			educationType(educationType:string):Ref<SiteResumeEducationBuilder>
			academicRanking(academicRanking:string):Ref<SiteResumeEducationBuilder>
			build():Ref<SiteResumeEducation>
	}
	export interface SiteResumeIdentification extends Struct<SiteResumeIdentification>{

			identificationType:Ref<string>
			code:Ref<string>
	}
	export interface SiteResumeIdentificationBuilder extends Struct<SiteResumeIdentificationBuilder>{

			identificationType(identificationType:string):Ref<SiteResumeIdentificationBuilder>
			code(code:string):Ref<SiteResumeIdentificationBuilder>
			build():Ref<SiteResumeIdentification>
	}
	export interface SiteResumeInternship extends Struct<SiteResumeInternship>{

			company:Ref<string>
			position:Ref<string>
			description:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
	}
	export interface SiteResumeInternshipBuilder extends Struct<SiteResumeInternshipBuilder>{

			company(company:string):Ref<SiteResumeInternshipBuilder>
			position(position:string):Ref<SiteResumeInternshipBuilder>
			description(description:string):Ref<SiteResumeInternshipBuilder>
			startTime(startTime:string):Ref<SiteResumeInternshipBuilder>
			endTime(endTime:string):Ref<SiteResumeInternshipBuilder>
			build():Ref<SiteResumeInternship>
	}
	export interface SiteResumeLanguageSkill extends Struct<SiteResumeLanguageSkill>{

			language:Ref<string>
			proficiency:Ref<string>
	}
	export interface SiteResumeLanguageSkillBuilder extends Struct<SiteResumeLanguageSkillBuilder>{

			language(language:string):Ref<SiteResumeLanguageSkillBuilder>
			proficiency(proficiency:string):Ref<SiteResumeLanguageSkillBuilder>
			build():Ref<SiteResumeLanguageSkill>
	}
	export interface SiteResumeProject extends Struct<SiteResumeProject>{

			name:Ref<string>
			role:Ref<string>
			description:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
	}
	export interface SiteResumeProjectBuilder extends Struct<SiteResumeProjectBuilder>{

			name(name:string):Ref<SiteResumeProjectBuilder>
			role(role:string):Ref<SiteResumeProjectBuilder>
			description(description:string):Ref<SiteResumeProjectBuilder>
			startTime(startTime:string):Ref<SiteResumeProjectBuilder>
			endTime(endTime:string):Ref<SiteResumeProjectBuilder>
			build():Ref<SiteResumeProject>
	}
	export interface SiteResumeSns extends Struct<SiteResumeSns>{

			snsType:Ref<string>
			link:Ref<string>
	}
	export interface SiteResumeSnsBuilder extends Struct<SiteResumeSnsBuilder>{

			snsType(snsType:string):Ref<SiteResumeSnsBuilder>
			link(link:string):Ref<SiteResumeSnsBuilder>
			build():Ref<SiteResumeSns>
	}
	export interface SiteResumeWork extends Struct<SiteResumeWork>{

			link:Ref<string>
			description:Ref<string>
			siteAttachmentId:Ref<string>
	}
	export interface SiteResumeWorkBuilder extends Struct<SiteResumeWorkBuilder>{

			link(link:string):Ref<SiteResumeWorkBuilder>
			description(description:string):Ref<SiteResumeWorkBuilder>
			siteAttachmentId(siteAttachmentId:string):Ref<SiteResumeWorkBuilder>
			build():Ref<SiteResumeWork>
	}
	export interface SnsInfo extends Struct<SnsInfo>{

			link:Ref<string>
			snsType:Ref<int>
	}
	export interface SnsInfoBuilder extends Struct<SnsInfoBuilder>{

			link(link:string):Ref<SnsInfoBuilder>
			snsType(snsType:int):Ref<SnsInfoBuilder>
			build():Ref<SnsInfo>
	}
	//2
	export const StageConfirmed:int
	//3
	export const StagePaid:int
	//1
	export const StageToBeConfirmed:int
	//2
	export const StateCreateTripartiteAgreementApplied:int
	//4
	export const StateCreateTripartiteAgreementCompanyProcessing:int
	//7
	export const StateCreateTripartiteAgreementCompleted:int
	//6
	export const StateCreateTripartiteAgreementEnded:int
	//1
	export const StateCreateTripartiteAgreementNotStarted:int
	//5
	export const StateCreateTripartiteAgreementSchoolProcessing:int
	//3
	export const StateCreateTripartiteAgreementStudentProcessing:int
	//9
	export const StateCreateTripartiteAgreementTerminated:int
	//8
	export const StateCreateTripartiteAgreementTerminationProcessing:int
	//2
	export const StateUpdateTripartiteAgreementApplied:int
	//4
	export const StateUpdateTripartiteAgreementCompanyProcessing:int
	//7
	export const StateUpdateTripartiteAgreementCompleted:int
	//6
	export const StateUpdateTripartiteAgreementEnded:int
	//1
	export const StateUpdateTripartiteAgreementNotStarted:int
	//5
	export const StateUpdateTripartiteAgreementSchoolProcessing:int
	//3
	export const StateUpdateTripartiteAgreementStudentProcessing:int
	//9
	export const StateUpdateTripartiteAgreementTerminated:int
	//8
	export const StateUpdateTripartiteAgreementTerminationProcessing:int
	//2
	export const State导入失败:int
	//1
	export const State导入成功:int
	export interface Store extends Struct<Store>{

			id:Ref<string>
			name:Ref<string>
			nameEn:Ref<string>
			departmentId:Ref<string>
			activeStatus:Ref<int>
			addressId:Ref<string>
			managerId:Ref<string>
			remark:Ref<string>
			remarkEn:Ref<string>
	}
	export interface StoreBuilder extends Struct<StoreBuilder>{

			id(id:string):Ref<StoreBuilder>
			name(name:string):Ref<StoreBuilder>
			nameEn(nameEn:string):Ref<StoreBuilder>
			departmentId(departmentId:string):Ref<StoreBuilder>
			activeStatus(activeStatus:int):Ref<StoreBuilder>
			addressId(addressId:string):Ref<StoreBuilder>
			managerId(managerId:string):Ref<StoreBuilder>
			remark(remark:string):Ref<StoreBuilder>
			remarkEn(remarkEn:string):Ref<StoreBuilder>
			build():Ref<Store>
	}
	export interface Subject extends Struct<Subject>{

			id:Ref<string>
			name:Ref<I18n>
			createTime:Ref<string>
			activeStatus:Ref<int>
			applicationLimit:Ref<int>
			creator:Ref<IdNameObject>
	}
	export interface SubjectBuilder extends Struct<SubjectBuilder>{

			id(id:string):Ref<SubjectBuilder>
			name(name:Ref<I18n>):Ref<SubjectBuilder>
			createTime(createTime:string):Ref<SubjectBuilder>
			activeStatus(activeStatus:int):Ref<SubjectBuilder>
			applicationLimit(applicationLimit:int):Ref<SubjectBuilder>
			creator(creator:Ref<IdNameObject>):Ref<SubjectBuilder>
			build():Ref<Subject>
	}
	export interface Talent extends Struct<Talent>{

			id:Ref<string>
			isInAgencyPeriod:Ref<bool>
			isOnboarded:Ref<bool>
			basicInfo:Ref<TalentBasicInfo>
			educationList:Ref<TalentEducationInfo>[]
			careerList:Ref<TalentCareerInfo>[]
			projectList:Ref<TalentProjectInfo>[]
			worksList:Ref<TalentWorksInfo>[]
			awardList:Ref<TalentAwardInfo>[]
			languageList:Ref<TalentLanguageInfo>[]
			snsList:Ref<TalentSnsInfo>[]
			resumeSourceList:Ref<TalentResumeSource>[]
			interviewRegistrationList:Ref<TalentInterviewRegistrationSimple>[]
			registrationList:Ref<RegistrationBasicInfo>[]
			resumeAttachmentIdList:string[]
			customizedDataList:Ref<TalentCustomizedData>[]
			topDegree:Ref<int>
			firstDegree:Ref<int>
	}
	export interface TalentAwardInfo extends Struct<TalentAwardInfo>{

			id:Ref<string>
			title:Ref<string>
			awardTime:Ref<string>
			desc:Ref<string>
			customizedDataList:Ref<TalentCustomizedDataChild>[]
	}
	export interface TalentAwardInfoBuilder extends Struct<TalentAwardInfoBuilder>{

			id(id:string):Ref<TalentAwardInfoBuilder>
			title(title:string):Ref<TalentAwardInfoBuilder>
			awardTime(awardTime:string):Ref<TalentAwardInfoBuilder>
			desc(desc:string):Ref<TalentAwardInfoBuilder>
			customizedDataList(customizedDataList:Ref<TalentCustomizedDataChild>[]):Ref<TalentAwardInfoBuilder>
			build():Ref<TalentAwardInfo>
	}
	export interface TalentBasicInfo extends Struct<TalentBasicInfo>{

			name:Ref<string>
			mobile:Ref<string>
			mobileCode:Ref<string>
			mobileCountryCode:Ref<string>
			email:Ref<string>
			experienceYears:Ref<int>
			age:Ref<int>
			nationality:Ref<TalentNationality>
			gender:Ref<int>
			currentCity:Ref<TalentCityInfo>
			hometownCity:Ref<TalentCityInfo>
			preferredCityList:Ref<TalentCityInfo>[]
			identificationType:Ref<int>
			identificationNumber:Ref<string>
			birthday:Ref<int>
			creatorId:Ref<string>
			maritalStatus:Ref<int>
			currentHomeAddress:Ref<string>
			customizedDataList:Ref<TalentCustomizedDataChild>[]
			modifyTime:Ref<string>
			hukouLocationCode:Ref<string>
	}
	export interface TalentBasicInfoBuilder extends Struct<TalentBasicInfoBuilder>{

			name(name:string):Ref<TalentBasicInfoBuilder>
			mobile(mobile:string):Ref<TalentBasicInfoBuilder>
			mobileCode(mobileCode:string):Ref<TalentBasicInfoBuilder>
			mobileCountryCode(mobileCountryCode:string):Ref<TalentBasicInfoBuilder>
			email(email:string):Ref<TalentBasicInfoBuilder>
			experienceYears(experienceYears:int):Ref<TalentBasicInfoBuilder>
			age(age:int):Ref<TalentBasicInfoBuilder>
			nationality(nationality:Ref<TalentNationality>):Ref<TalentBasicInfoBuilder>
			gender(gender:int):Ref<TalentBasicInfoBuilder>
			currentCity(currentCity:Ref<TalentCityInfo>):Ref<TalentBasicInfoBuilder>
			hometownCity(hometownCity:Ref<TalentCityInfo>):Ref<TalentBasicInfoBuilder>
			preferredCityList(preferredCityList:Ref<TalentCityInfo>[]):Ref<TalentBasicInfoBuilder>
			identificationType(identificationType:int):Ref<TalentBasicInfoBuilder>
			identificationNumber(identificationNumber:string):Ref<TalentBasicInfoBuilder>
			birthday(birthday:int):Ref<TalentBasicInfoBuilder>
			creatorId(creatorId:string):Ref<TalentBasicInfoBuilder>
			maritalStatus(maritalStatus:int):Ref<TalentBasicInfoBuilder>
			currentHomeAddress(currentHomeAddress:string):Ref<TalentBasicInfoBuilder>
			customizedDataList(customizedDataList:Ref<TalentCustomizedDataChild>[]):Ref<TalentBasicInfoBuilder>
			modifyTime(modifyTime:string):Ref<TalentBasicInfoBuilder>
			hukouLocationCode(hukouLocationCode:string):Ref<TalentBasicInfoBuilder>
			build():Ref<TalentBasicInfo>
	}
	export interface TalentBatchInfo extends Struct<TalentBatchInfo>{

			talentId:Ref<string>
			mobileCode:Ref<string>
			mobileNumber:Ref<string>
			email:Ref<string>
			identificationType:Ref<int>
			identificationNumber:Ref<string>
	}
	export interface TalentBatchInfoBuilder extends Struct<TalentBatchInfoBuilder>{

			talentId(talentId:string):Ref<TalentBatchInfoBuilder>
			mobileCode(mobileCode:string):Ref<TalentBatchInfoBuilder>
			mobileNumber(mobileNumber:string):Ref<TalentBatchInfoBuilder>
			email(email:string):Ref<TalentBatchInfoBuilder>
			identificationType(identificationType:int):Ref<TalentBatchInfoBuilder>
			identificationNumber(identificationNumber:string):Ref<TalentBatchInfoBuilder>
			build():Ref<TalentBatchInfo>
	}
	export interface TalentBuilder extends Struct<TalentBuilder>{

			id(id:string):Ref<TalentBuilder>
			isInAgencyPeriod(isInAgencyPeriod:bool):Ref<TalentBuilder>
			isOnboarded(isOnboarded:bool):Ref<TalentBuilder>
			basicInfo(basicInfo:Ref<TalentBasicInfo>):Ref<TalentBuilder>
			educationList(educationList:Ref<TalentEducationInfo>[]):Ref<TalentBuilder>
			careerList(careerList:Ref<TalentCareerInfo>[]):Ref<TalentBuilder>
			projectList(projectList:Ref<TalentProjectInfo>[]):Ref<TalentBuilder>
			worksList(worksList:Ref<TalentWorksInfo>[]):Ref<TalentBuilder>
			awardList(awardList:Ref<TalentAwardInfo>[]):Ref<TalentBuilder>
			languageList(languageList:Ref<TalentLanguageInfo>[]):Ref<TalentBuilder>
			snsList(snsList:Ref<TalentSnsInfo>[]):Ref<TalentBuilder>
			resumeSourceList(resumeSourceList:Ref<TalentResumeSource>[]):Ref<TalentBuilder>
			interviewRegistrationList(interviewRegistrationList:Ref<TalentInterviewRegistrationSimple>[]):Ref<TalentBuilder>
			registrationList(registrationList:Ref<RegistrationBasicInfo>[]):Ref<TalentBuilder>
			resumeAttachmentIdList(resumeAttachmentIdList:string[]):Ref<TalentBuilder>
			customizedDataList(customizedDataList:Ref<TalentCustomizedData>[]):Ref<TalentBuilder>
			topDegree(topDegree:int):Ref<TalentBuilder>
			firstDegree(firstDegree:int):Ref<TalentBuilder>
			build():Ref<Talent>
	}
	export interface TalentCareerInfo extends Struct<TalentCareerInfo>{

			id:Ref<string>
			company:Ref<string>
			title:Ref<string>
			desc:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			careerType:Ref<int>
			tagList:int[]
			customizedDataList:Ref<TalentCustomizedDataChild>[]
	}
	export interface TalentCareerInfoBuilder extends Struct<TalentCareerInfoBuilder>{

			id(id:string):Ref<TalentCareerInfoBuilder>
			company(company:string):Ref<TalentCareerInfoBuilder>
			title(title:string):Ref<TalentCareerInfoBuilder>
			desc(desc:string):Ref<TalentCareerInfoBuilder>
			startTime(startTime:string):Ref<TalentCareerInfoBuilder>
			endTime(endTime:string):Ref<TalentCareerInfoBuilder>
			careerType(careerType:int):Ref<TalentCareerInfoBuilder>
			tagList(tagList:int[]):Ref<TalentCareerInfoBuilder>
			customizedDataList(customizedDataList:Ref<TalentCustomizedDataChild>[]):Ref<TalentCareerInfoBuilder>
			build():Ref<TalentCareerInfo>
	}
	export interface TalentCertificateInfo extends Struct<TalentCertificateInfo>{

			id:Ref<string>
			name:Ref<string>
			desc:Ref<string>
			customizedDataList:Ref<TalentCustomizedDataChild>[]
	}
	export interface TalentCertificateInfoBuilder extends Struct<TalentCertificateInfoBuilder>{

			id(id:string):Ref<TalentCertificateInfoBuilder>
			name(name:string):Ref<TalentCertificateInfoBuilder>
			desc(desc:string):Ref<TalentCertificateInfoBuilder>
			customizedDataList(customizedDataList:Ref<TalentCustomizedDataChild>[]):Ref<TalentCertificateInfoBuilder>
			build():Ref<TalentCertificateInfo>
	}
	export interface TalentCityInfo extends Struct<TalentCityInfo>{

			cityCode:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
	}
	export interface TalentCityInfoBuilder extends Struct<TalentCityInfoBuilder>{

			cityCode(cityCode:string):Ref<TalentCityInfoBuilder>
			zhName(zhName:string):Ref<TalentCityInfoBuilder>
			enName(enName:string):Ref<TalentCityInfoBuilder>
			build():Ref<TalentCityInfo>
	}
	export interface TalentCombinedAwardInfo extends Struct<TalentCombinedAwardInfo>{

			id:Ref<string>
			title:Ref<string>
			awardTime:Ref<string>
			desc:Ref<string>
			customizedData:Ref<TalentCustomizedDataObjectValue>[]
	}
	export interface TalentCombinedAwardInfoBuilder extends Struct<TalentCombinedAwardInfoBuilder>{

			id(id:string):Ref<TalentCombinedAwardInfoBuilder>
			title(title:string):Ref<TalentCombinedAwardInfoBuilder>
			awardTime(awardTime:string):Ref<TalentCombinedAwardInfoBuilder>
			desc(desc:string):Ref<TalentCombinedAwardInfoBuilder>
			customizedData(customizedData:Ref<TalentCustomizedDataObjectValue>[]):Ref<TalentCombinedAwardInfoBuilder>
			build():Ref<TalentCombinedAwardInfo>
	}
	export interface TalentCombinedBasicInfo extends Struct<TalentCombinedBasicInfo>{

			name:Ref<string>
			mobile:Ref<string>
			mobileCountryCode:Ref<string>
			email:Ref<string>
			identificationType:Ref<int>
			identificationNumber:Ref<string>
			identification:Ref<TalentIdentificationInfo>
			startWorkTime:Ref<string>
			birthday:Ref<string>
			gender:Ref<int>
			nationalityId:Ref<string>
			currentCityCode:Ref<string>
			hometownCityCode:Ref<string>
			customizedData:Ref<TalentCustomizedDataObjectValue>[]
	}
	export interface TalentCombinedBasicInfoBuilder extends Struct<TalentCombinedBasicInfoBuilder>{

			name(name:string):Ref<TalentCombinedBasicInfoBuilder>
			mobile(mobile:string):Ref<TalentCombinedBasicInfoBuilder>
			mobileCountryCode(mobileCountryCode:string):Ref<TalentCombinedBasicInfoBuilder>
			email(email:string):Ref<TalentCombinedBasicInfoBuilder>
			identificationType(identificationType:int):Ref<TalentCombinedBasicInfoBuilder>
			identificationNumber(identificationNumber:string):Ref<TalentCombinedBasicInfoBuilder>
			identification(identification:Ref<TalentIdentificationInfo>):Ref<TalentCombinedBasicInfoBuilder>
			startWorkTime(startWorkTime:string):Ref<TalentCombinedBasicInfoBuilder>
			birthday(birthday:string):Ref<TalentCombinedBasicInfoBuilder>
			gender(gender:int):Ref<TalentCombinedBasicInfoBuilder>
			nationalityId(nationalityId:string):Ref<TalentCombinedBasicInfoBuilder>
			currentCityCode(currentCityCode:string):Ref<TalentCombinedBasicInfoBuilder>
			hometownCityCode(hometownCityCode:string):Ref<TalentCombinedBasicInfoBuilder>
			customizedData(customizedData:Ref<TalentCustomizedDataObjectValue>[]):Ref<TalentCombinedBasicInfoBuilder>
			build():Ref<TalentCombinedBasicInfo>
	}
	export interface TalentCombinedCareerInfo extends Struct<TalentCombinedCareerInfo>{

			id:Ref<string>
			company:Ref<string>
			title:Ref<string>
			desc:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			careerType:Ref<int>
			customizedData:Ref<TalentCustomizedDataObjectValue>[]
	}
	export interface TalentCombinedCareerInfoBuilder extends Struct<TalentCombinedCareerInfoBuilder>{

			id(id:string):Ref<TalentCombinedCareerInfoBuilder>
			company(company:string):Ref<TalentCombinedCareerInfoBuilder>
			title(title:string):Ref<TalentCombinedCareerInfoBuilder>
			desc(desc:string):Ref<TalentCombinedCareerInfoBuilder>
			startTime(startTime:string):Ref<TalentCombinedCareerInfoBuilder>
			endTime(endTime:string):Ref<TalentCombinedCareerInfoBuilder>
			careerType(careerType:int):Ref<TalentCombinedCareerInfoBuilder>
			customizedData(customizedData:Ref<TalentCustomizedDataObjectValue>[]):Ref<TalentCombinedCareerInfoBuilder>
			build():Ref<TalentCombinedCareerInfo>
	}
	export interface TalentCombinedEducationInfo extends Struct<TalentCombinedEducationInfo>{

			id:Ref<string>
			degree:Ref<int>
			school:Ref<string>
			fieldOfStudy:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			educationType:Ref<int>
			academicRanking:Ref<int>
			customizedData:Ref<TalentCustomizedDataObjectValue>[]
	}
	export interface TalentCombinedEducationInfoBuilder extends Struct<TalentCombinedEducationInfoBuilder>{

			id(id:string):Ref<TalentCombinedEducationInfoBuilder>
			degree(degree:int):Ref<TalentCombinedEducationInfoBuilder>
			school(school:string):Ref<TalentCombinedEducationInfoBuilder>
			fieldOfStudy(fieldOfStudy:string):Ref<TalentCombinedEducationInfoBuilder>
			startTime(startTime:string):Ref<TalentCombinedEducationInfoBuilder>
			endTime(endTime:string):Ref<TalentCombinedEducationInfoBuilder>
			educationType(educationType:int):Ref<TalentCombinedEducationInfoBuilder>
			academicRanking(academicRanking:int):Ref<TalentCombinedEducationInfoBuilder>
			customizedData(customizedData:Ref<TalentCustomizedDataObjectValue>[]):Ref<TalentCombinedEducationInfoBuilder>
			build():Ref<TalentCombinedEducationInfo>
	}
	export interface TalentCombinedLanguageInfo extends Struct<TalentCombinedLanguageInfo>{

			id:Ref<string>
			language:Ref<int>
			proficiency:Ref<int>
			customizedData:Ref<TalentCustomizedDataObjectValue>[]
	}
	export interface TalentCombinedLanguageInfoBuilder extends Struct<TalentCombinedLanguageInfoBuilder>{

			id(id:string):Ref<TalentCombinedLanguageInfoBuilder>
			language(language:int):Ref<TalentCombinedLanguageInfoBuilder>
			proficiency(proficiency:int):Ref<TalentCombinedLanguageInfoBuilder>
			customizedData(customizedData:Ref<TalentCustomizedDataObjectValue>[]):Ref<TalentCombinedLanguageInfoBuilder>
			build():Ref<TalentCombinedLanguageInfo>
	}
	export interface TalentCombinedProjectInfo extends Struct<TalentCombinedProjectInfo>{

			id:Ref<string>
			name:Ref<string>
			role:Ref<string>
			link:Ref<string>
			desc:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			customizedData:Ref<TalentCustomizedDataObjectValue>[]
	}
	export interface TalentCombinedProjectInfoBuilder extends Struct<TalentCombinedProjectInfoBuilder>{

			id(id:string):Ref<TalentCombinedProjectInfoBuilder>
			name(name:string):Ref<TalentCombinedProjectInfoBuilder>
			role(role:string):Ref<TalentCombinedProjectInfoBuilder>
			link(link:string):Ref<TalentCombinedProjectInfoBuilder>
			desc(desc:string):Ref<TalentCombinedProjectInfoBuilder>
			startTime(startTime:string):Ref<TalentCombinedProjectInfoBuilder>
			endTime(endTime:string):Ref<TalentCombinedProjectInfoBuilder>
			customizedData(customizedData:Ref<TalentCustomizedDataObjectValue>[]):Ref<TalentCombinedProjectInfoBuilder>
			build():Ref<TalentCombinedProjectInfo>
	}
	export interface TalentCombinedSnsInfo extends Struct<TalentCombinedSnsInfo>{

			id:Ref<string>
			snsType:Ref<int>
			link:Ref<string>
			customizedData:Ref<TalentCustomizedDataObjectValue>[]
	}
	export interface TalentCombinedSnsInfoBuilder extends Struct<TalentCombinedSnsInfoBuilder>{

			id(id:string):Ref<TalentCombinedSnsInfoBuilder>
			snsType(snsType:int):Ref<TalentCombinedSnsInfoBuilder>
			link(link:string):Ref<TalentCombinedSnsInfoBuilder>
			customizedData(customizedData:Ref<TalentCustomizedDataObjectValue>[]):Ref<TalentCombinedSnsInfoBuilder>
			build():Ref<TalentCombinedSnsInfo>
	}
	export interface TalentCombinedWorkInfo extends Struct<TalentCombinedWorkInfo>{

			id:Ref<string>
			link:Ref<string>
			desc:Ref<string>
			attachmentId:Ref<string>
			customizedData:Ref<TalentCustomizedDataObjectValue>[]
	}
	export interface TalentCombinedWorkInfoBuilder extends Struct<TalentCombinedWorkInfoBuilder>{

			id(id:string):Ref<TalentCombinedWorkInfoBuilder>
			link(link:string):Ref<TalentCombinedWorkInfoBuilder>
			desc(desc:string):Ref<TalentCombinedWorkInfoBuilder>
			attachmentId(attachmentId:string):Ref<TalentCombinedWorkInfoBuilder>
			customizedData(customizedData:Ref<TalentCustomizedDataObjectValue>[]):Ref<TalentCombinedWorkInfoBuilder>
			build():Ref<TalentCombinedWorkInfo>
	}
	export interface TalentCompetitionInfo extends Struct<TalentCompetitionInfo>{

			id:Ref<string>
			name:Ref<string>
			desc:Ref<string>
			customizedDataList:Ref<TalentCustomizedDataChild>[]
	}
	export interface TalentCompetitionInfoBuilder extends Struct<TalentCompetitionInfoBuilder>{

			id(id:string):Ref<TalentCompetitionInfoBuilder>
			name(name:string):Ref<TalentCompetitionInfoBuilder>
			desc(desc:string):Ref<TalentCompetitionInfoBuilder>
			customizedDataList(customizedDataList:Ref<TalentCustomizedDataChild>[]):Ref<TalentCompetitionInfoBuilder>
			build():Ref<TalentCompetitionInfo>
	}
	export interface TalentCustomizedAttachment extends Struct<TalentCustomizedAttachment>{

			fileId:Ref<string>
			name:Ref<string>
			contentType:Ref<string>
			fileSize:Ref<int>
	}
	export interface TalentCustomizedAttachmentBuilder extends Struct<TalentCustomizedAttachmentBuilder>{

			fileId(fileId:string):Ref<TalentCustomizedAttachmentBuilder>
			name(name:string):Ref<TalentCustomizedAttachmentBuilder>
			contentType(contentType:string):Ref<TalentCustomizedAttachmentBuilder>
			fileSize(fileSize:int):Ref<TalentCustomizedAttachmentBuilder>
			build():Ref<TalentCustomizedAttachment>
	}
	export interface TalentCustomizedData extends Struct<TalentCustomizedData>{

			objectId:Ref<string>
			name:Ref<I18n>
			objectType:Ref<int>
			children:Ref<TalentCustomizedDataChild>[]
	}
	export interface TalentCustomizedDataBuilder extends Struct<TalentCustomizedDataBuilder>{

			objectId(objectId:string):Ref<TalentCustomizedDataBuilder>
			name(name:Ref<I18n>):Ref<TalentCustomizedDataBuilder>
			objectType(objectType:int):Ref<TalentCustomizedDataBuilder>
			children(children:Ref<TalentCustomizedDataChild>[]):Ref<TalentCustomizedDataBuilder>
			build():Ref<TalentCustomizedData>
	}
	export interface TalentCustomizedDataChild extends Struct<TalentCustomizedDataChild>{

			objectId:Ref<string>
			name:Ref<I18n>
			objectType:Ref<int>
			value:Ref<TalentCustomizedValue>
	}
	export interface TalentCustomizedDataChildBuilder extends Struct<TalentCustomizedDataChildBuilder>{

			objectId(objectId:string):Ref<TalentCustomizedDataChildBuilder>
			name(name:Ref<I18n>):Ref<TalentCustomizedDataChildBuilder>
			objectType(objectType:int):Ref<TalentCustomizedDataChildBuilder>
			value(value:Ref<TalentCustomizedValue>):Ref<TalentCustomizedDataChildBuilder>
			build():Ref<TalentCustomizedDataChild>
	}
	export interface TalentCustomizedDataObjectValue extends Struct<TalentCustomizedDataObjectValue>{

			objectId:Ref<string>
			children:Ref<TalentCustomizedDataObjectValueChild>[]
	}
	export interface TalentCustomizedDataObjectValueBuilder extends Struct<TalentCustomizedDataObjectValueBuilder>{

			objectId(objectId:string):Ref<TalentCustomizedDataObjectValueBuilder>
			children(children:Ref<TalentCustomizedDataObjectValueChild>[]):Ref<TalentCustomizedDataObjectValueBuilder>
			build():Ref<TalentCustomizedDataObjectValue>
	}
	export interface TalentCustomizedDataObjectValueChild extends Struct<TalentCustomizedDataObjectValueChild>{

			objectId:Ref<string>
			value:Ref<string>
	}
	export interface TalentCustomizedDataObjectValueChildBuilder extends Struct<TalentCustomizedDataObjectValueChildBuilder>{

			objectId(objectId:string):Ref<TalentCustomizedDataObjectValueChildBuilder>
			value(value:string):Ref<TalentCustomizedDataObjectValueChildBuilder>
			build():Ref<TalentCustomizedDataObjectValueChild>
	}
	export interface TalentCustomizedOption extends Struct<TalentCustomizedOption>{

			key:Ref<string>
			name:Ref<I18n>
	}
	export interface TalentCustomizedOptionBuilder extends Struct<TalentCustomizedOptionBuilder>{

			key(key:string):Ref<TalentCustomizedOptionBuilder>
			name(name:Ref<I18n>):Ref<TalentCustomizedOptionBuilder>
			build():Ref<TalentCustomizedOption>
	}
	export interface TalentCustomizedTimeRange extends Struct<TalentCustomizedTimeRange>{

			startTime:Ref<string>
			endTime:Ref<string>
	}
	export interface TalentCustomizedTimeRangeBuilder extends Struct<TalentCustomizedTimeRangeBuilder>{

			startTime(startTime:string):Ref<TalentCustomizedTimeRangeBuilder>
			endTime(endTime:string):Ref<TalentCustomizedTimeRangeBuilder>
			build():Ref<TalentCustomizedTimeRange>
	}
	export interface TalentCustomizedValue extends Struct<TalentCustomizedValue>{

			content:Ref<string>
			option:Ref<TalentCustomizedOption>
			optionList:Ref<TalentCustomizedOption>[]
			timeRange:Ref<TalentCustomizedTimeRange>
			time:Ref<string>
			number:Ref<string>
			customizedAttachment:Ref<TalentCustomizedAttachment>[]
	}
	export interface TalentCustomizedValueBuilder extends Struct<TalentCustomizedValueBuilder>{

			content(content:string):Ref<TalentCustomizedValueBuilder>
			option(option:Ref<TalentCustomizedOption>):Ref<TalentCustomizedValueBuilder>
			optionList(optionList:Ref<TalentCustomizedOption>[]):Ref<TalentCustomizedValueBuilder>
			timeRange(timeRange:Ref<TalentCustomizedTimeRange>):Ref<TalentCustomizedValueBuilder>
			time(time:string):Ref<TalentCustomizedValueBuilder>
			number(number:string):Ref<TalentCustomizedValueBuilder>
			customizedAttachment(customizedAttachment:Ref<TalentCustomizedAttachment>[]):Ref<TalentCustomizedValueBuilder>
			build():Ref<TalentCustomizedValue>
	}
	export interface TalentEducationInfo extends Struct<TalentEducationInfo>{

			id:Ref<string>
			degree:Ref<int>
			school:Ref<string>
			fieldOfStudy:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			endTimeV2:Ref<string>
			educationType:Ref<int>
			academicRanking:Ref<int>
			tagList:int[]
			customizedDataList:Ref<TalentCustomizedDataChild>[]
	}
	export interface TalentEducationInfoBuilder extends Struct<TalentEducationInfoBuilder>{

			id(id:string):Ref<TalentEducationInfoBuilder>
			degree(degree:int):Ref<TalentEducationInfoBuilder>
			school(school:string):Ref<TalentEducationInfoBuilder>
			fieldOfStudy(fieldOfStudy:string):Ref<TalentEducationInfoBuilder>
			startTime(startTime:string):Ref<TalentEducationInfoBuilder>
			endTime(endTime:string):Ref<TalentEducationInfoBuilder>
			endTimeV2(endTimeV2:string):Ref<TalentEducationInfoBuilder>
			educationType(educationType:int):Ref<TalentEducationInfoBuilder>
			academicRanking(academicRanking:int):Ref<TalentEducationInfoBuilder>
			tagList(tagList:int[]):Ref<TalentEducationInfoBuilder>
			customizedDataList(customizedDataList:Ref<TalentCustomizedDataChild>[]):Ref<TalentEducationInfoBuilder>
			build():Ref<TalentEducationInfo>
	}
	export interface TalentExternalInfo extends Struct<TalentExternalInfo>{

			talentId:Ref<string>
			externalCreateTime:Ref<string>
	}
	export interface TalentExternalInfoBuilder extends Struct<TalentExternalInfoBuilder>{

			talentId(talentId:string):Ref<TalentExternalInfoBuilder>
			externalCreateTime(externalCreateTime:string):Ref<TalentExternalInfoBuilder>
			build():Ref<TalentExternalInfo>
	}
	export interface TalentFolder extends Struct<TalentFolder>{

			externalId:Ref<string>
			name:Ref<string>
			parentId:Ref<string>
			creatorId:Ref<string>
			folderId:Ref<string>
			ownerId:Ref<string>
	}
	export interface TalentFolderBuilder extends Struct<TalentFolderBuilder>{

			externalId(externalId:string):Ref<TalentFolderBuilder>
			name(name:string):Ref<TalentFolderBuilder>
			parentId(parentId:string):Ref<TalentFolderBuilder>
			creatorId(creatorId:string):Ref<TalentFolderBuilder>
			folderId(folderId:string):Ref<TalentFolderBuilder>
			ownerId(ownerId:string):Ref<TalentFolderBuilder>
			build():Ref<TalentFolder>
	}
	export interface TalentFolderForList extends Struct<TalentFolderForList>{

			folderId:Ref<string>
			folderName:Ref<string>
			ownerId:Ref<string>
	}
	export interface TalentFolderForListBuilder extends Struct<TalentFolderForListBuilder>{

			folderId(folderId:string):Ref<TalentFolderForListBuilder>
			folderName(folderName:string):Ref<TalentFolderForListBuilder>
			ownerId(ownerId:string):Ref<TalentFolderForListBuilder>
			build():Ref<TalentFolderForList>
	}
	export interface TalentIdentificationInfo extends Struct<TalentIdentificationInfo>{

			identificationType:Ref<int>
			identificationNumber:Ref<string>
	}
	export interface TalentIdentificationInfoBuilder extends Struct<TalentIdentificationInfoBuilder>{

			identificationType(identificationType:int):Ref<TalentIdentificationInfoBuilder>
			identificationNumber(identificationNumber:string):Ref<TalentIdentificationInfoBuilder>
			build():Ref<TalentIdentificationInfo>
	}
	export interface TalentInternshipInfo extends Struct<TalentInternshipInfo>{

			id:Ref<string>
			company:Ref<string>
			desc:Ref<string>
			endTime:Ref<int>
			startTime:Ref<int>
			title:Ref<string>
			tagList:int[]
	}
	export interface TalentInternshipInfoBuilder extends Struct<TalentInternshipInfoBuilder>{

			id(id:string):Ref<TalentInternshipInfoBuilder>
			company(company:string):Ref<TalentInternshipInfoBuilder>
			desc(desc:string):Ref<TalentInternshipInfoBuilder>
			endTime(endTime:int):Ref<TalentInternshipInfoBuilder>
			startTime(startTime:int):Ref<TalentInternshipInfoBuilder>
			title(title:string):Ref<TalentInternshipInfoBuilder>
			tagList(tagList:int[]):Ref<TalentInternshipInfoBuilder>
			build():Ref<TalentInternshipInfo>
	}
	export interface TalentInterview extends Struct<TalentInterview>{

			applicationId:Ref<string>
			interviewList:Ref<InterviewExtend>[]
	}
	export interface TalentInterviewBuilder extends Struct<TalentInterviewBuilder>{

			applicationId(applicationId:string):Ref<TalentInterviewBuilder>
			interviewList(interviewList:Ref<InterviewExtend>[]):Ref<TalentInterviewBuilder>
			build():Ref<TalentInterview>
	}
	export interface TalentInterviewRegistration extends Alias<Nothing>{

	}
	export interface TalentInterviewRegistrationSimple extends Struct<TalentInterviewRegistrationSimple>{

			id:Ref<string>
			registrationTime:Ref<int>
			downloadUrl:Ref<string>
	}
	export interface TalentInterviewRegistrationSimpleBuilder extends Struct<TalentInterviewRegistrationSimpleBuilder>{

			id(id:string):Ref<TalentInterviewRegistrationSimpleBuilder>
			registrationTime(registrationTime:int):Ref<TalentInterviewRegistrationSimpleBuilder>
			downloadUrl(downloadUrl:string):Ref<TalentInterviewRegistrationSimpleBuilder>
			build():Ref<TalentInterviewRegistrationSimple>
	}
	export interface TalentLanguageInfo extends Struct<TalentLanguageInfo>{

			id:Ref<string>
			language:Ref<int>
			proficiency:Ref<int>
			customizedDataList:Ref<TalentCustomizedDataChild>[]
	}
	export interface TalentLanguageInfoBuilder extends Struct<TalentLanguageInfoBuilder>{

			id(id:string):Ref<TalentLanguageInfoBuilder>
			language(language:int):Ref<TalentLanguageInfoBuilder>
			proficiency(proficiency:int):Ref<TalentLanguageInfoBuilder>
			customizedDataList(customizedDataList:Ref<TalentCustomizedDataChild>[]):Ref<TalentLanguageInfoBuilder>
			build():Ref<TalentLanguageInfo>
	}
	export interface TalentNationality extends Struct<TalentNationality>{

			nationalityCode:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
	}
	export interface TalentNationalityBuilder extends Struct<TalentNationalityBuilder>{

			nationalityCode(nationalityCode:string):Ref<TalentNationalityBuilder>
			zhName(zhName:string):Ref<TalentNationalityBuilder>
			enName(enName:string):Ref<TalentNationalityBuilder>
			build():Ref<TalentNationality>
	}
	export interface TalentOperationLog extends Struct<TalentOperationLog>{

			applicationId:Ref<string>
			talentId:Ref<string>
			operator:Ref<IdNameObject>
			operationType:Ref<int>
			operationTime:Ref<string>
			operatorType:Ref<int>
	}
	export interface TalentOperationLogBuilder extends Struct<TalentOperationLogBuilder>{

			applicationId(applicationId:string):Ref<TalentOperationLogBuilder>
			talentId(talentId:string):Ref<TalentOperationLogBuilder>
			operator(operator:Ref<IdNameObject>):Ref<TalentOperationLogBuilder>
			operationType(operationType:int):Ref<TalentOperationLogBuilder>
			operationTime(operationTime:string):Ref<TalentOperationLogBuilder>
			operatorType(operatorType:int):Ref<TalentOperationLogBuilder>
			build():Ref<TalentOperationLog>
	}
	export interface TalentPool extends Struct<TalentPool>{

			id:Ref<string>
			i18nName:Ref<I18n>
			i18nDescription:Ref<I18n>
			parentId:Ref<string>
			isPrivate:Ref<int>
			createTime:Ref<string>
			modifyTime:Ref<string>
	}
	export interface TalentPoolBuilder extends Struct<TalentPoolBuilder>{

			id(id:string):Ref<TalentPoolBuilder>
			i18nName(i18nName:Ref<I18n>):Ref<TalentPoolBuilder>
			i18nDescription(i18nDescription:Ref<I18n>):Ref<TalentPoolBuilder>
			parentId(parentId:string):Ref<TalentPoolBuilder>
			isPrivate(isPrivate:int):Ref<TalentPoolBuilder>
			createTime(createTime:string):Ref<TalentPoolBuilder>
			modifyTime(modifyTime:string):Ref<TalentPoolBuilder>
			build():Ref<TalentPool>
	}
	export interface TalentProjectInfo extends Struct<TalentProjectInfo>{

			id:Ref<string>
			name:Ref<string>
			role:Ref<string>
			link:Ref<string>
			desc:Ref<string>
			startTime:Ref<string>
			endTime:Ref<string>
			customizedDataList:Ref<TalentCustomizedDataChild>[]
	}
	export interface TalentProjectInfoBuilder extends Struct<TalentProjectInfoBuilder>{

			id(id:string):Ref<TalentProjectInfoBuilder>
			name(name:string):Ref<TalentProjectInfoBuilder>
			role(role:string):Ref<TalentProjectInfoBuilder>
			link(link:string):Ref<TalentProjectInfoBuilder>
			desc(desc:string):Ref<TalentProjectInfoBuilder>
			startTime(startTime:string):Ref<TalentProjectInfoBuilder>
			endTime(endTime:string):Ref<TalentProjectInfoBuilder>
			customizedDataList(customizedDataList:Ref<TalentCustomizedDataChild>[]):Ref<TalentProjectInfoBuilder>
			build():Ref<TalentProjectInfo>
	}
	export interface TalentResumeSource extends Struct<TalentResumeSource>{

			id:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
	}
	export interface TalentResumeSourceBuilder extends Struct<TalentResumeSourceBuilder>{

			id(id:string):Ref<TalentResumeSourceBuilder>
			zhName(zhName:string):Ref<TalentResumeSourceBuilder>
			enName(enName:string):Ref<TalentResumeSourceBuilder>
			build():Ref<TalentResumeSource>
	}
	export interface TalentSchema extends Alias<Nothing>{

	}
	export interface TalentSchemaChildObject extends Struct<TalentSchemaChildObject>{

			id:Ref<string>
			activeStatus:Ref<int>
			isCustomized:Ref<bool>
			name:Ref<I18n>
			optionList:Ref<TalentSchemaOption>[]
	}
	export interface TalentSchemaChildObjectBuilder extends Struct<TalentSchemaChildObjectBuilder>{

			id(id:string):Ref<TalentSchemaChildObjectBuilder>
			activeStatus(activeStatus:int):Ref<TalentSchemaChildObjectBuilder>
			isCustomized(isCustomized:bool):Ref<TalentSchemaChildObjectBuilder>
			name(name:Ref<I18n>):Ref<TalentSchemaChildObjectBuilder>
			optionList(optionList:Ref<TalentSchemaOption>[]):Ref<TalentSchemaChildObjectBuilder>
			build():Ref<TalentSchemaChildObject>
	}
	export interface TalentSchemaObject extends Struct<TalentSchemaObject>{

			id:Ref<string>
			activeStatus:Ref<int>
			isCustomized:Ref<bool>
			name:Ref<I18n>
			optionList:Ref<TalentSchemaOption>[]
			children:Ref<TalentSchemaChildObject>[]
	}
	export interface TalentSchemaObjectBuilder extends Struct<TalentSchemaObjectBuilder>{

			id(id:string):Ref<TalentSchemaObjectBuilder>
			activeStatus(activeStatus:int):Ref<TalentSchemaObjectBuilder>
			isCustomized(isCustomized:bool):Ref<TalentSchemaObjectBuilder>
			name(name:Ref<I18n>):Ref<TalentSchemaObjectBuilder>
			optionList(optionList:Ref<TalentSchemaOption>[]):Ref<TalentSchemaObjectBuilder>
			children(children:Ref<TalentSchemaChildObject>[]):Ref<TalentSchemaObjectBuilder>
			build():Ref<TalentSchemaObject>
	}
	export interface TalentSchemaOption extends Struct<TalentSchemaOption>{

			activeStatus:Ref<int>
			value:Ref<string>
			name:Ref<I18n>
	}
	export interface TalentSchemaOptionBuilder extends Struct<TalentSchemaOptionBuilder>{

			activeStatus(activeStatus:int):Ref<TalentSchemaOptionBuilder>
			value(value:string):Ref<TalentSchemaOptionBuilder>
			name(name:Ref<I18n>):Ref<TalentSchemaOptionBuilder>
			build():Ref<TalentSchemaOption>
	}
	export interface TalentSelfEvaluation extends Struct<TalentSelfEvaluation>{

			id:Ref<string>
			content:Ref<string>
			customizedData:Ref<TalentCustomizedDataObjectValue>[]
	}
	export interface TalentSelfEvaluationBuilder extends Struct<TalentSelfEvaluationBuilder>{

			id(id:string):Ref<TalentSelfEvaluationBuilder>
			content(content:string):Ref<TalentSelfEvaluationBuilder>
			customizedData(customizedData:Ref<TalentCustomizedDataObjectValue>[]):Ref<TalentSelfEvaluationBuilder>
			build():Ref<TalentSelfEvaluation>
	}
	export interface TalentSnsInfo extends Struct<TalentSnsInfo>{

			id:Ref<string>
			snsType:Ref<int>
			link:Ref<string>
			customizedDataList:Ref<TalentCustomizedDataChild>[]
	}
	export interface TalentSnsInfoBuilder extends Struct<TalentSnsInfoBuilder>{

			id(id:string):Ref<TalentSnsInfoBuilder>
			snsType(snsType:int):Ref<TalentSnsInfoBuilder>
			link(link:string):Ref<TalentSnsInfoBuilder>
			customizedDataList(customizedDataList:Ref<TalentCustomizedDataChild>[]):Ref<TalentSnsInfoBuilder>
			build():Ref<TalentSnsInfo>
	}
	export interface TalentWorksInfo extends Struct<TalentWorksInfo>{

			id:Ref<string>
			link:Ref<string>
			desc:Ref<string>
			name:Ref<string>
			customizedDataList:Ref<TalentCustomizedDataChild>[]
	}
	export interface TalentWorksInfoBuilder extends Struct<TalentWorksInfoBuilder>{

			id(id:string):Ref<TalentWorksInfoBuilder>
			link(link:string):Ref<TalentWorksInfoBuilder>
			desc(desc:string):Ref<TalentWorksInfoBuilder>
			name(name:string):Ref<TalentWorksInfoBuilder>
			customizedDataList(customizedDataList:Ref<TalentCustomizedDataChild>[]):Ref<TalentWorksInfoBuilder>
			build():Ref<TalentWorksInfo>
	}
	export interface TargetMajorInfo extends Struct<TargetMajorInfo>{

			id:Ref<string>
			zhName:Ref<string>
			enName:Ref<string>
	}
	export interface TargetMajorInfoBuilder extends Struct<TargetMajorInfoBuilder>{

			id(id:string):Ref<TargetMajorInfoBuilder>
			zhName(zhName:string):Ref<TargetMajorInfoBuilder>
			enName(enName:string):Ref<TargetMajorInfoBuilder>
			build():Ref<TargetMajorInfo>
	}
	export interface TerminateApplicationPathReqBodyBuilder extends Struct<TerminateApplicationPathReqBodyBuilder>{

			terminationType(terminationType:int):Ref<TerminateApplicationPathReqBodyBuilder>
			terminationReasonList(terminationReasonList:string[]):Ref<TerminateApplicationPathReqBodyBuilder>
			terminationReasonNote(terminationReasonNote:string):Ref<TerminateApplicationPathReqBodyBuilder>
			build():Ref<TerminateApplicationReqBody>
	}
	export interface TerminateApplicationReq extends Struct<TerminateApplicationReq>{

			body:Ref<TerminateApplicationReqBody>
	}
	export interface TerminateApplicationReqBody extends Struct<TerminateApplicationReqBody>{

			terminationType:Ref<int>
			terminationReasonList:string[]
			terminationReasonNote:Ref<string>
	}
	export interface TerminateApplicationReqBodyBuilder extends Struct<TerminateApplicationReqBodyBuilder>{

			terminationType(terminationType:int):Ref<TerminateApplicationReqBodyBuilder>
			terminationReasonList(terminationReasonList:string[]):Ref<TerminateApplicationReqBodyBuilder>
			terminationReasonNote(terminationReasonNote:string):Ref<TerminateApplicationReqBodyBuilder>
			build():Ref<TerminateApplicationReqBody>
	}
	export interface TerminateApplicationReqBuilder extends Struct<TerminateApplicationReqBuilder>{

			applicationId(applicationId:string):Ref<TerminateApplicationReqBuilder>
			body(body:Ref<TerminateApplicationReqBody>):Ref<TerminateApplicationReqBuilder>
			build():Ref<TerminateApplicationReq>
	}
	export interface TerminateApplicationResp extends Struct<TerminateApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface TerminationReason extends Struct<TerminationReason>{

			id:Ref<string>
			name:Ref<I18n>
			referralName:Ref<I18n>
			terminationType:Ref<int>
			isUsedAsEvaluation:Ref<bool>
			activeStatus:Ref<int>
	}
	export interface TerminationReasonBuilder extends Struct<TerminationReasonBuilder>{

			id(id:string):Ref<TerminationReasonBuilder>
			name(name:Ref<I18n>):Ref<TerminationReasonBuilder>
			referralName(referralName:Ref<I18n>):Ref<TerminationReasonBuilder>
			terminationType(terminationType:int):Ref<TerminationReasonBuilder>
			isUsedAsEvaluation(isUsedAsEvaluation:bool):Ref<TerminationReasonBuilder>
			activeStatus(activeStatus:int):Ref<TerminationReasonBuilder>
			build():Ref<TerminationReason>
	}
	//22
	export const TerminationType候选人拒绝了我们:int
	//27
	export const TerminationType其他:int
	//1
	export const TerminationType我们拒绝了候选人:int
	export interface Test extends Struct<Test>{

			testId:Ref<string>
			applicationId:Ref<string>
			testPaperId:Ref<string>
			testPaperName:Ref<string>
			testPaperSourceId:Ref<string>
			testPaperSourceName:Ref<I18n>
			replyStatus:Ref<int>
			testStatus:Ref<int>
			testSchedule:Ref<TestSchedule>
			testCompleteTime:Ref<string>
			reportUrlList:string[]
			resultDetailList:Ref<TestResultDetail>[]
			resultUploadTime:Ref<string>
			score:Ref<string>
			scoreSubmitTime:Ref<string>
			reviewer:Ref<string>
			createdAt:Ref<string>
	}
	export interface TestBuilder extends Struct<TestBuilder>{

			testId(testId:string):Ref<TestBuilder>
			applicationId(applicationId:string):Ref<TestBuilder>
			testPaperId(testPaperId:string):Ref<TestBuilder>
			testPaperName(testPaperName:string):Ref<TestBuilder>
			testPaperSourceId(testPaperSourceId:string):Ref<TestBuilder>
			testPaperSourceName(testPaperSourceName:Ref<I18n>):Ref<TestBuilder>
			replyStatus(replyStatus:int):Ref<TestBuilder>
			testStatus(testStatus:int):Ref<TestBuilder>
			testSchedule(testSchedule:Ref<TestSchedule>):Ref<TestBuilder>
			testCompleteTime(testCompleteTime:string):Ref<TestBuilder>
			reportUrlList(reportUrlList:string[]):Ref<TestBuilder>
			resultDetailList(resultDetailList:Ref<TestResultDetail>[]):Ref<TestBuilder>
			resultUploadTime(resultUploadTime:string):Ref<TestBuilder>
			score(score:string):Ref<TestBuilder>
			scoreSubmitTime(scoreSubmitTime:string):Ref<TestBuilder>
			reviewer(reviewer:string):Ref<TestBuilder>
			createdAt(createdAt:string):Ref<TestBuilder>
			build():Ref<Test>
	}
	export interface TestResultDetail extends Struct<TestResultDetail>{

			subject:Ref<string>
			result:Ref<string>
	}
	export interface TestResultDetailBuilder extends Struct<TestResultDetailBuilder>{

			subject(subject:string):Ref<TestResultDetailBuilder>
			result(result:string):Ref<TestResultDetailBuilder>
			build():Ref<TestResultDetail>
	}
	export interface TestSchedule extends Struct<TestSchedule>{

			startTime:Ref<string>
			endTime:Ref<string>
	}
	export interface TestScheduleBuilder extends Struct<TestScheduleBuilder>{

			startTime(startTime:string):Ref<TestScheduleBuilder>
			endTime(endTime:string):Ref<TestScheduleBuilder>
			build():Ref<TestSchedule>
	}
	export interface Todo extends Struct<Todo>{

			evaluation:Ref<TodoCommon>
			offer:Ref<TodoCommon>
			exam:Ref<TodoCommon>
			interview:Ref<TodoCommon>
	}
	export interface TodoBuilder extends Struct<TodoBuilder>{

			evaluation(evaluation:Ref<TodoCommon>):Ref<TodoBuilder>
			offer(offer:Ref<TodoCommon>):Ref<TodoBuilder>
			exam(exam:Ref<TodoCommon>):Ref<TodoBuilder>
			interview(interview:Ref<TodoCommon>):Ref<TodoBuilder>
			build():Ref<Todo>
	}
	export interface TodoCommon extends Struct<TodoCommon>{

			talentId:Ref<string>
			jobId:Ref<string>
			applicationId:Ref<string>
			id:Ref<string>
	}
	export interface TodoCommonBuilder extends Struct<TodoCommonBuilder>{

			talentId(talentId:string):Ref<TodoCommonBuilder>
			jobId(jobId:string):Ref<TodoCommonBuilder>
			applicationId(applicationId:string):Ref<TodoCommonBuilder>
			id(id:string):Ref<TodoCommonBuilder>
			build():Ref<TodoCommon>
	}
	export interface TradeDetail extends Struct<TradeDetail>{

			accountId:Ref<string>
			totalRechargeRewardInfo:Ref<BonusAmount>
	}
	export interface TradeDetailBuilder extends Struct<TradeDetailBuilder>{

			accountId(accountId:string):Ref<TradeDetailBuilder>
			totalRechargeRewardInfo(totalRechargeRewardInfo:Ref<BonusAmount>):Ref<TradeDetailBuilder>
			build():Ref<TradeDetail>
	}
	export interface TransferOnboardApplicationPathReqBodyBuilder extends Struct<TransferOnboardApplicationPathReqBodyBuilder>{

			actualOnboardTime(actualOnboardTime:int):Ref<TransferOnboardApplicationPathReqBodyBuilder>
			expectedConversionTime(expectedConversionTime:int):Ref<TransferOnboardApplicationPathReqBodyBuilder>
			jobRequirementId(jobRequirementId:string):Ref<TransferOnboardApplicationPathReqBodyBuilder>
			operatorId(operatorId:string):Ref<TransferOnboardApplicationPathReqBodyBuilder>
			onboardCityCode(onboardCityCode:string):Ref<TransferOnboardApplicationPathReqBodyBuilder>
			department(department:string):Ref<TransferOnboardApplicationPathReqBodyBuilder>
			leader(leader:string):Ref<TransferOnboardApplicationPathReqBodyBuilder>
			sequence(sequence:string):Ref<TransferOnboardApplicationPathReqBodyBuilder>
			level(level:string):Ref<TransferOnboardApplicationPathReqBodyBuilder>
			employeeType(employeeType:string):Ref<TransferOnboardApplicationPathReqBodyBuilder>
			build():Ref<TransferOnboardApplicationReqBody>
	}
	export interface TransferOnboardApplicationReq extends Struct<TransferOnboardApplicationReq>{

			body:Ref<TransferOnboardApplicationReqBody>
	}
	export interface TransferOnboardApplicationReqBody extends Struct<TransferOnboardApplicationReqBody>{

			actualOnboardTime:Ref<int>
			expectedConversionTime:Ref<int>
			jobRequirementId:Ref<string>
			operatorId:Ref<string>
			onboardCityCode:Ref<string>
			department:Ref<string>
			leader:Ref<string>
			sequence:Ref<string>
			level:Ref<string>
			employeeType:Ref<string>
	}
	export interface TransferOnboardApplicationReqBodyBuilder extends Struct<TransferOnboardApplicationReqBodyBuilder>{

			actualOnboardTime(actualOnboardTime:int):Ref<TransferOnboardApplicationReqBodyBuilder>
			expectedConversionTime(expectedConversionTime:int):Ref<TransferOnboardApplicationReqBodyBuilder>
			jobRequirementId(jobRequirementId:string):Ref<TransferOnboardApplicationReqBodyBuilder>
			operatorId(operatorId:string):Ref<TransferOnboardApplicationReqBodyBuilder>
			onboardCityCode(onboardCityCode:string):Ref<TransferOnboardApplicationReqBodyBuilder>
			department(department:string):Ref<TransferOnboardApplicationReqBodyBuilder>
			leader(leader:string):Ref<TransferOnboardApplicationReqBodyBuilder>
			sequence(sequence:string):Ref<TransferOnboardApplicationReqBodyBuilder>
			level(level:string):Ref<TransferOnboardApplicationReqBodyBuilder>
			employeeType(employeeType:string):Ref<TransferOnboardApplicationReqBodyBuilder>
			build():Ref<TransferOnboardApplicationReqBody>
	}
	export interface TransferOnboardApplicationReqBuilder extends Struct<TransferOnboardApplicationReqBuilder>{

			applicationId(applicationId:string):Ref<TransferOnboardApplicationReqBuilder>
			userIdType(userIdType:string):Ref<TransferOnboardApplicationReqBuilder>
			departmentIdType(departmentIdType:string):Ref<TransferOnboardApplicationReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<TransferOnboardApplicationReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<TransferOnboardApplicationReqBuilder>
			employeeTypeIdType(employeeTypeIdType:string):Ref<TransferOnboardApplicationReqBuilder>
			body(body:Ref<TransferOnboardApplicationReqBody>):Ref<TransferOnboardApplicationReqBuilder>
			build():Ref<TransferOnboardApplicationReq>
	}
	export interface TransferOnboardApplicationResp extends Struct<TransferOnboardApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<TransferOnboardApplicationRespData>
			success():bool
	}
	export interface TransferOnboardApplicationRespData extends Struct<TransferOnboardApplicationRespData>{

			employee:Ref<Employee>
	}
	export interface TransferStageApplicationPathReqBodyBuilder extends Struct<TransferStageApplicationPathReqBodyBuilder>{

			stageId(stageId:string):Ref<TransferStageApplicationPathReqBodyBuilder>
			build():Ref<TransferStageApplicationReqBody>
	}
	export interface TransferStageApplicationReq extends Struct<TransferStageApplicationReq>{

			body:Ref<TransferStageApplicationReqBody>
	}
	export interface TransferStageApplicationReqBody extends Struct<TransferStageApplicationReqBody>{

			stageId:Ref<string>
	}
	export interface TransferStageApplicationReqBodyBuilder extends Struct<TransferStageApplicationReqBodyBuilder>{

			stageId(stageId:string):Ref<TransferStageApplicationReqBodyBuilder>
			build():Ref<TransferStageApplicationReqBody>
	}
	export interface TransferStageApplicationReqBuilder extends Struct<TransferStageApplicationReqBuilder>{

			applicationId(applicationId:string):Ref<TransferStageApplicationReqBuilder>
			body(body:Ref<TransferStageApplicationReqBody>):Ref<TransferStageApplicationReqBuilder>
			build():Ref<TransferStageApplicationReq>
	}
	export interface TransferStageApplicationResp extends Struct<TransferStageApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface TripartiteAgreementInfo extends Struct<TripartiteAgreementInfo>{

			id:Ref<string>
			applicationId:Ref<string>
			state:Ref<int>
			createTime:Ref<string>
			modifyTime:Ref<string>
	}
	export interface TripartiteAgreementInfoBuilder extends Struct<TripartiteAgreementInfoBuilder>{

			id(id:string):Ref<TripartiteAgreementInfoBuilder>
			applicationId(applicationId:string):Ref<TripartiteAgreementInfoBuilder>
			state(state:int):Ref<TripartiteAgreementInfoBuilder>
			createTime(createTime:string):Ref<TripartiteAgreementInfoBuilder>
			modifyTime(modifyTime:string):Ref<TripartiteAgreementInfoBuilder>
			build():Ref<TripartiteAgreementInfo>
	}
	//"evaluation"
	export const TypeListTodoEvaluation:string
	//"exam"
	export const TypeListTodoExam:string
	//"interview"
	export const TypeListTodoInterview:string
	//"offer"
	export const TypeListTodoOffer:string
	//2
	export const Type候选人作品:int
	//3
	export const Type自定义附件:int
	//1
	export const Type附件简历:int
	export interface UpdateConfigJobReq extends Struct<UpdateConfigJobReq>{

			jobConfig:Ref<JobConfig>
	}
	export interface UpdateConfigJobReqBuilder extends Struct<UpdateConfigJobReqBuilder>{

			jobId(jobId:string):Ref<UpdateConfigJobReqBuilder>
			userIdType(userIdType:string):Ref<UpdateConfigJobReqBuilder>
			jobConfig(jobConfig:Ref<JobConfig>):Ref<UpdateConfigJobReqBuilder>
			build():Ref<UpdateConfigJobReq>
	}
	export interface UpdateConfigJobResp extends Struct<UpdateConfigJobResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<UpdateConfigJobRespData>
			success():bool
	}
	export interface UpdateConfigJobRespData extends Struct<UpdateConfigJobRespData>{

			jobConfig:Ref<JobConfigResult>
	}
	export interface UpdateExternalApplicationReq extends Struct<UpdateExternalApplicationReq>{

			externalApplication:Ref<ExternalApplication>
	}
	export interface UpdateExternalApplicationReqBuilder extends Struct<UpdateExternalApplicationReqBuilder>{

			externalApplicationId(externalApplicationId:string):Ref<UpdateExternalApplicationReqBuilder>
			externalApplication(externalApplication:Ref<ExternalApplication>):Ref<UpdateExternalApplicationReqBuilder>
			build():Ref<UpdateExternalApplicationReq>
	}
	export interface UpdateExternalApplicationResp extends Struct<UpdateExternalApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<UpdateExternalApplicationRespData>
			success():bool
	}
	export interface UpdateExternalApplicationRespData extends Struct<UpdateExternalApplicationRespData>{

			externalApplication:Ref<ExternalApplication>
	}
	export interface UpdateJobRequirementReq extends Struct<UpdateJobRequirementReq>{

			jobRequirement:Ref<JobRequirement>
	}
	export interface UpdateJobRequirementReqBuilder extends Struct<UpdateJobRequirementReqBuilder>{

			jobRequirementId(jobRequirementId:string):Ref<UpdateJobRequirementReqBuilder>
			userIdType(userIdType:string):Ref<UpdateJobRequirementReqBuilder>
			departmentIdType(departmentIdType:string):Ref<UpdateJobRequirementReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<UpdateJobRequirementReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<UpdateJobRequirementReqBuilder>
			employeeTypeIdType(employeeTypeIdType:string):Ref<UpdateJobRequirementReqBuilder>
			jobRequirement(jobRequirement:Ref<JobRequirement>):Ref<UpdateJobRequirementReqBuilder>
			build():Ref<UpdateJobRequirementReq>
	}
	export interface UpdateJobRequirementResp extends Struct<UpdateJobRequirementResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface UpdateOfferCustomFieldReq extends Struct<UpdateOfferCustomFieldReq>{

			offerCustomField:Ref<OfferCustomField>
	}
	export interface UpdateOfferCustomFieldReqBuilder extends Struct<UpdateOfferCustomFieldReqBuilder>{

			offerCustomFieldId(offerCustomFieldId:string):Ref<UpdateOfferCustomFieldReqBuilder>
			offerCustomField(offerCustomField:Ref<OfferCustomField>):Ref<UpdateOfferCustomFieldReqBuilder>
			build():Ref<UpdateOfferCustomFieldReq>
	}
	export interface UpdateOfferCustomFieldResp extends Struct<UpdateOfferCustomFieldResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface UpdateOfferReq extends Struct<UpdateOfferReq>{

			offerInfo:Ref<OfferInfo>
	}
	export interface UpdateOfferReqBuilder extends Struct<UpdateOfferReqBuilder>{

			offerId(offerId:string):Ref<UpdateOfferReqBuilder>
			userIdType(userIdType:string):Ref<UpdateOfferReqBuilder>
			departmentIdType(departmentIdType:string):Ref<UpdateOfferReqBuilder>
			jobLevelIdType(jobLevelIdType:string):Ref<UpdateOfferReqBuilder>
			jobFamilyIdType(jobFamilyIdType:string):Ref<UpdateOfferReqBuilder>
			employeeTypeIdType(employeeTypeIdType:string):Ref<UpdateOfferReqBuilder>
			offerInfo(offerInfo:Ref<OfferInfo>):Ref<UpdateOfferReqBuilder>
			build():Ref<UpdateOfferReq>
	}
	export interface UpdateOfferResp extends Struct<UpdateOfferResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<UpdateOfferRespData>
			success():bool
	}
	export interface UpdateOfferRespData extends Struct<UpdateOfferRespData>{

			offerId:Ref<string>
			schemaId:Ref<string>
			basicInfo:Ref<OfferBasicInfo>
			salaryInfo:Ref<OfferSalaryInfo>
			customizedInfoList:Ref<OfferCustomizedInfo>[]
	}
	export interface UpdateProgressEcoBackgroundCheckPathReqBodyBuilder extends Struct<UpdateProgressEcoBackgroundCheckPathReqBodyBuilder>{

			backgroundCheckId(backgroundCheckId:string):Ref<UpdateProgressEcoBackgroundCheckPathReqBodyBuilder>
			stageId(stageId:string):Ref<UpdateProgressEcoBackgroundCheckPathReqBodyBuilder>
			stageEnName(stageEnName:string):Ref<UpdateProgressEcoBackgroundCheckPathReqBodyBuilder>
			stageName(stageName:string):Ref<UpdateProgressEcoBackgroundCheckPathReqBodyBuilder>
			stageTime(stageTime:string):Ref<UpdateProgressEcoBackgroundCheckPathReqBodyBuilder>
			result(result:string):Ref<UpdateProgressEcoBackgroundCheckPathReqBodyBuilder>
			reportFileList(reportFileList:Ref<EcoBackgroundCheckReportFile>[]):Ref<UpdateProgressEcoBackgroundCheckPathReqBodyBuilder>
			build():Ref<UpdateProgressEcoBackgroundCheckReqBody>
	}
	export interface UpdateProgressEcoBackgroundCheckReq extends Struct<UpdateProgressEcoBackgroundCheckReq>{

			body:Ref<UpdateProgressEcoBackgroundCheckReqBody>
	}
	export interface UpdateProgressEcoBackgroundCheckReqBody extends Struct<UpdateProgressEcoBackgroundCheckReqBody>{

			backgroundCheckId:Ref<string>
			stageId:Ref<string>
			stageEnName:Ref<string>
			stageName:Ref<string>
			stageTime:Ref<string>
			result:Ref<string>
			reportFileList:Ref<EcoBackgroundCheckReportFile>[]
	}
	export interface UpdateProgressEcoBackgroundCheckReqBodyBuilder extends Struct<UpdateProgressEcoBackgroundCheckReqBodyBuilder>{

			backgroundCheckId(backgroundCheckId:string):Ref<UpdateProgressEcoBackgroundCheckReqBodyBuilder>
			stageId(stageId:string):Ref<UpdateProgressEcoBackgroundCheckReqBodyBuilder>
			stageEnName(stageEnName:string):Ref<UpdateProgressEcoBackgroundCheckReqBodyBuilder>
			stageName(stageName:string):Ref<UpdateProgressEcoBackgroundCheckReqBodyBuilder>
			stageTime(stageTime:string):Ref<UpdateProgressEcoBackgroundCheckReqBodyBuilder>
			result(result:string):Ref<UpdateProgressEcoBackgroundCheckReqBodyBuilder>
			reportFileList(reportFileList:Ref<EcoBackgroundCheckReportFile>[]):Ref<UpdateProgressEcoBackgroundCheckReqBodyBuilder>
			build():Ref<UpdateProgressEcoBackgroundCheckReqBody>
	}
	export interface UpdateProgressEcoBackgroundCheckReqBuilder extends Struct<UpdateProgressEcoBackgroundCheckReqBuilder>{

			body(body:Ref<UpdateProgressEcoBackgroundCheckReqBody>):Ref<UpdateProgressEcoBackgroundCheckReqBuilder>
			build():Ref<UpdateProgressEcoBackgroundCheckReq>
	}
	export interface UpdateProgressEcoBackgroundCheckResp extends Struct<UpdateProgressEcoBackgroundCheckResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface UpdateResultEcoBackgroundCheckPathReqBodyBuilder extends Struct<UpdateResultEcoBackgroundCheckPathReqBodyBuilder>{

			backgroundCheckId(backgroundCheckId:string):Ref<UpdateResultEcoBackgroundCheckPathReqBodyBuilder>
			result(result:string):Ref<UpdateResultEcoBackgroundCheckPathReqBodyBuilder>
			resultTime(resultTime:string):Ref<UpdateResultEcoBackgroundCheckPathReqBodyBuilder>
			reportFileList(reportFileList:Ref<EcoBackgroundCheckReportFile>[]):Ref<UpdateResultEcoBackgroundCheckPathReqBodyBuilder>
			build():Ref<UpdateResultEcoBackgroundCheckReqBody>
	}
	export interface UpdateResultEcoBackgroundCheckReq extends Struct<UpdateResultEcoBackgroundCheckReq>{

			body:Ref<UpdateResultEcoBackgroundCheckReqBody>
	}
	export interface UpdateResultEcoBackgroundCheckReqBody extends Struct<UpdateResultEcoBackgroundCheckReqBody>{

			backgroundCheckId:Ref<string>
			result:Ref<string>
			resultTime:Ref<string>
			reportFileList:Ref<EcoBackgroundCheckReportFile>[]
	}
	export interface UpdateResultEcoBackgroundCheckReqBodyBuilder extends Struct<UpdateResultEcoBackgroundCheckReqBodyBuilder>{

			backgroundCheckId(backgroundCheckId:string):Ref<UpdateResultEcoBackgroundCheckReqBodyBuilder>
			result(result:string):Ref<UpdateResultEcoBackgroundCheckReqBodyBuilder>
			resultTime(resultTime:string):Ref<UpdateResultEcoBackgroundCheckReqBodyBuilder>
			reportFileList(reportFileList:Ref<EcoBackgroundCheckReportFile>[]):Ref<UpdateResultEcoBackgroundCheckReqBodyBuilder>
			build():Ref<UpdateResultEcoBackgroundCheckReqBody>
	}
	export interface UpdateResultEcoBackgroundCheckReqBuilder extends Struct<UpdateResultEcoBackgroundCheckReqBuilder>{

			body(body:Ref<UpdateResultEcoBackgroundCheckReqBody>):Ref<UpdateResultEcoBackgroundCheckReqBuilder>
			build():Ref<UpdateResultEcoBackgroundCheckReq>
	}
	export interface UpdateResultEcoBackgroundCheckResp extends Struct<UpdateResultEcoBackgroundCheckResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface UpdateResultEcoExamReq extends Struct<UpdateResultEcoExamReq>{

			ecoExamResult:Ref<EcoExamResult>
	}
	export interface UpdateResultEcoExamReqBuilder extends Struct<UpdateResultEcoExamReqBuilder>{

			examId(examId:string):Ref<UpdateResultEcoExamReqBuilder>
			ecoExamResult(ecoExamResult:Ref<EcoExamResult>):Ref<UpdateResultEcoExamReqBuilder>
			build():Ref<UpdateResultEcoExamReq>
	}
	export interface UpdateResultEcoExamResp extends Struct<UpdateResultEcoExamResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface UpdateTalentExternalInfoPathReqBodyBuilder extends Struct<UpdateTalentExternalInfoPathReqBodyBuilder>{

			externalCreateTime(externalCreateTime:string):Ref<UpdateTalentExternalInfoPathReqBodyBuilder>
			build():Ref<UpdateTalentExternalInfoReqBody>
	}
	export interface UpdateTalentExternalInfoReq extends Struct<UpdateTalentExternalInfoReq>{

			body:Ref<UpdateTalentExternalInfoReqBody>
	}
	export interface UpdateTalentExternalInfoReqBody extends Struct<UpdateTalentExternalInfoReqBody>{

			externalCreateTime:Ref<string>
	}
	export interface UpdateTalentExternalInfoReqBodyBuilder extends Struct<UpdateTalentExternalInfoReqBodyBuilder>{

			externalCreateTime(externalCreateTime:string):Ref<UpdateTalentExternalInfoReqBodyBuilder>
			build():Ref<UpdateTalentExternalInfoReqBody>
	}
	export interface UpdateTalentExternalInfoReqBuilder extends Struct<UpdateTalentExternalInfoReqBuilder>{

			talentId(talentId:string):Ref<UpdateTalentExternalInfoReqBuilder>
			body(body:Ref<UpdateTalentExternalInfoReqBody>):Ref<UpdateTalentExternalInfoReqBuilder>
			build():Ref<UpdateTalentExternalInfoReq>
	}
	export interface UpdateTalentExternalInfoResp extends Struct<UpdateTalentExternalInfoResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<UpdateTalentExternalInfoRespData>
			success():bool
	}
	export interface UpdateTalentExternalInfoRespData extends Struct<UpdateTalentExternalInfoRespData>{

			externalInfo:Ref<TalentExternalInfo>
	}
	export interface UpdateTripartiteAgreementReq extends Struct<UpdateTripartiteAgreementReq>{

			tripartiteAgreementInfo:Ref<TripartiteAgreementInfo>
	}
	export interface UpdateTripartiteAgreementReqBuilder extends Struct<UpdateTripartiteAgreementReqBuilder>{

			tripartiteAgreementId(tripartiteAgreementId:string):Ref<UpdateTripartiteAgreementReqBuilder>
			tripartiteAgreementInfo(tripartiteAgreementInfo:Ref<TripartiteAgreementInfo>):Ref<UpdateTripartiteAgreementReqBuilder>
			build():Ref<UpdateTripartiteAgreementReq>
	}
	export interface UpdateTripartiteAgreementResp extends Struct<UpdateTripartiteAgreementResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<UpdateTripartiteAgreementRespData>
			success():bool
	}
	export interface UpdateTripartiteAgreementRespData extends Struct<UpdateTripartiteAgreementRespData>{

			tripartiteAgreement:Ref<TripartiteAgreementInfo>
	}
	export interface UpdateWebsiteChannelPathReqBodyBuilder extends Struct<UpdateWebsiteChannelPathReqBodyBuilder>{

			channelName(channelName:string):Ref<UpdateWebsiteChannelPathReqBodyBuilder>
			build():Ref<UpdateWebsiteChannelReqBody>
	}
	export interface UpdateWebsiteChannelReq extends Struct<UpdateWebsiteChannelReq>{

			body:Ref<UpdateWebsiteChannelReqBody>
	}
	export interface UpdateWebsiteChannelReqBody extends Struct<UpdateWebsiteChannelReqBody>{

			channelName:Ref<string>
	}
	export interface UpdateWebsiteChannelReqBodyBuilder extends Struct<UpdateWebsiteChannelReqBodyBuilder>{

			channelName(channelName:string):Ref<UpdateWebsiteChannelReqBodyBuilder>
			build():Ref<UpdateWebsiteChannelReqBody>
	}
	export interface UpdateWebsiteChannelReqBuilder extends Struct<UpdateWebsiteChannelReqBuilder>{

			websiteId(websiteId:string):Ref<UpdateWebsiteChannelReqBuilder>
			channelId(channelId:string):Ref<UpdateWebsiteChannelReqBuilder>
			body(body:Ref<UpdateWebsiteChannelReqBody>):Ref<UpdateWebsiteChannelReqBuilder>
			build():Ref<UpdateWebsiteChannelReq>
	}
	export interface UpdateWebsiteChannelResp extends Struct<UpdateWebsiteChannelResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<UpdateWebsiteChannelRespData>
			success():bool
	}
	export interface UpdateWebsiteChannelRespData extends Struct<UpdateWebsiteChannelRespData>{

			id:Ref<string>
			name:Ref<string>
			link:Ref<string>
			code:Ref<string>
	}
	//"interview_location"
	export const UsageInterviewLocation:string
	//"position_location"
	export const UsagePositionLocation:string
	//"store_location"
	export const UsageStoreLocation:string
	export interface UserBusinessManagementScope extends Struct<UserBusinessManagementScope>{

			entity:Ref<EntityInfo>
			scopeRule:Ref<PermissionScopeRule>
	}
	export interface UserBusinessManagementScopeBuilder extends Struct<UserBusinessManagementScopeBuilder>{

			entity(entity:Ref<EntityInfo>):Ref<UserBusinessManagementScopeBuilder>
			scopeRule(scopeRule:Ref<PermissionScopeRule>):Ref<UserBusinessManagementScopeBuilder>
			build():Ref<UserBusinessManagementScope>
	}
	export interface UserContactInfo extends Struct<UserContactInfo>{

			name:Ref<string>
			mobile:Ref<string>
			email:Ref<string>
			firstName:Ref<string>
			lastName:Ref<string>
	}
	export interface UserContactInfoBuilder extends Struct<UserContactInfoBuilder>{

			name(name:string):Ref<UserContactInfoBuilder>
			mobile(mobile:string):Ref<UserContactInfoBuilder>
			email(email:string):Ref<UserContactInfoBuilder>
			firstName(firstName:string):Ref<UserContactInfoBuilder>
			lastName(lastName:string):Ref<UserContactInfoBuilder>
			build():Ref<UserContactInfo>
	}
	export interface UserId extends Struct<UserId>{

			userId:Ref<string>
			openId:Ref<string>
			unionId:Ref<string>
	}
	export interface UserIdBuilder extends Struct<UserIdBuilder>{

			userId(userId:string):Ref<UserIdBuilder>
			openId(openId:string):Ref<UserIdBuilder>
			unionId(unionId:string):Ref<UserIdBuilder>
			build():Ref<UserId>
	}
	//"open_id"
	export const UserIdTypeBatchUpdateJobManagerOpenId:string
	//"union_id"
	export const UserIdTypeBatchUpdateJobManagerUnionId:string
	//"user_id"
	export const UserIdTypeBatchUpdateJobManagerUserId:string
	//"open_id"
	export const UserIdTypeCombinedCreateJobOpenId:string
	//"union_id"
	export const UserIdTypeCombinedCreateJobUnionId:string
	//"user_id"
	export const UserIdTypeCombinedCreateJobUserId:string
	//"open_id"
	export const UserIdTypeCombinedCreateTalentOpenId:string
	//"people_admin_id"
	export const UserIdTypeCombinedCreateTalentPeopleAdminId:string
	//"union_id"
	export const UserIdTypeCombinedCreateTalentUnionId:string
	//"user_id"
	export const UserIdTypeCombinedCreateTalentUserId:string
	//"open_id"
	export const UserIdTypeCombinedUpdateJobOpenId:string
	//"union_id"
	export const UserIdTypeCombinedUpdateJobUnionId:string
	//"user_id"
	export const UserIdTypeCombinedUpdateJobUserId:string
	//"open_id"
	export const UserIdTypeCombinedUpdateTalentOpenId:string
	//"people_admin_id"
	export const UserIdTypeCombinedUpdateTalentPeopleAdminId:string
	//"union_id"
	export const UserIdTypeCombinedUpdateTalentUnionId:string
	//"user_id"
	export const UserIdTypeCombinedUpdateTalentUserId:string
	//"open_id"
	export const UserIdTypeConfigJobOpenId:string
	//"people_admin_id"
	export const UserIdTypeConfigJobPeopleAdminId:string
	//"union_id"
	export const UserIdTypeConfigJobUnionId:string
	//"user_id"
	export const UserIdTypeConfigJobUserId:string
	//"open_id"
	export const UserIdTypeCreateApplicationOpenId:string
	//"union_id"
	export const UserIdTypeCreateApplicationUnionId:string
	//"user_id"
	export const UserIdTypeCreateApplicationUserId:string
	//"open_id"
	export const UserIdTypeCreateByResumeWebsiteDeliveryOpenId:string
	//"union_id"
	export const UserIdTypeCreateByResumeWebsiteDeliveryUnionId:string
	//"user_id"
	export const UserIdTypeCreateByResumeWebsiteDeliveryUserId:string
	//"open_id"
	export const UserIdTypeCreateExamOpenId:string
	//"people_admin_id"
	export const UserIdTypeCreateExamPeopleAdminId:string
	//"union_id"
	export const UserIdTypeCreateExamUnionId:string
	//"user_id"
	export const UserIdTypeCreateExamUserId:string
	//"open_id"
	export const UserIdTypeCreateExternalReferralRewardOpenId:string
	//"union_id"
	export const UserIdTypeCreateExternalReferralRewardUnionId:string
	//"user_id"
	export const UserIdTypeCreateExternalReferralRewardUserId:string
	//"open_id"
	export const UserIdTypeCreateJobRequirementOpenId:string
	//"union_id"
	export const UserIdTypeCreateJobRequirementUnionId:string
	//"user_id"
	export const UserIdTypeCreateJobRequirementUserId:string
	//"open_id"
	export const UserIdTypeCreateNoteOpenId:string
	//"people_admin_id"
	export const UserIdTypeCreateNotePeopleAdminId:string
	//"union_id"
	export const UserIdTypeCreateNoteUnionId:string
	//"user_id"
	export const UserIdTypeCreateNoteUserId:string
	//"open_id"
	export const UserIdTypeCreateOfferOpenId:string
	//"people_admin_id"
	export const UserIdTypeCreateOfferPeopleAdminId:string
	//"union_id"
	export const UserIdTypeCreateOfferUnionId:string
	//"user_id"
	export const UserIdTypeCreateOfferUserId:string
	//"open_id"
	export const UserIdTypeGetApplicationOpenId:string
	//"union_id"
	export const UserIdTypeGetApplicationUnionId:string
	//"user_id"
	export const UserIdTypeGetApplicationUserId:string
	//"open_id"
	export const UserIdTypeGetByApplicationEmployeeOpenId:string
	//"union_id"
	export const UserIdTypeGetByApplicationEmployeeUnionId:string
	//"user_id"
	export const UserIdTypeGetByApplicationEmployeeUserId:string
	//"open_id"
	export const UserIdTypeGetByApplicationReferralOpenId:string
	//"people_admin_id"
	export const UserIdTypeGetByApplicationReferralPeopleAdminId:string
	//"union_id"
	export const UserIdTypeGetByApplicationReferralUnionId:string
	//"user_id"
	export const UserIdTypeGetByApplicationReferralUserId:string
	//"open_id"
	export const UserIdTypeGetByTalentInterviewOpenId:string
	//"people_admin_id"
	export const UserIdTypeGetByTalentInterviewPeopleAdminId:string
	//"union_id"
	export const UserIdTypeGetByTalentInterviewUnionId:string
	//"user_id"
	export const UserIdTypeGetByTalentInterviewUserId:string
	//"open_id"
	export const UserIdTypeGetEmployeeOpenId:string
	//"union_id"
	export const UserIdTypeGetEmployeeUnionId:string
	//"user_id"
	export const UserIdTypeGetEmployeeUserId:string
	//"open_id"
	export const UserIdTypeGetInterviewRecordOpenId:string
	//"union_id"
	export const UserIdTypeGetInterviewRecordUnionId:string
	//"user_id"
	export const UserIdTypeGetInterviewRecordUserId:string
	//"open_id"
	export const UserIdTypeGetJobManagerOpenId:string
	//"people_admin_id"
	export const UserIdTypeGetJobManagerPeopleAdminId:string
	//"union_id"
	export const UserIdTypeGetJobManagerUnionId:string
	//"user_id"
	export const UserIdTypeGetJobManagerUserId:string
	//"open_id"
	export const UserIdTypeGetJobOpenId:string
	//"people_admin_id"
	export const UserIdTypeGetJobPeopleAdminId:string
	//"union_id"
	export const UserIdTypeGetJobUnionId:string
	//"user_id"
	export const UserIdTypeGetJobUserId:string
	//"open_id"
	export const UserIdTypeGetNoteOpenId:string
	//"people_admin_id"
	export const UserIdTypeGetNotePeopleAdminId:string
	//"union_id"
	export const UserIdTypeGetNoteUnionId:string
	//"user_id"
	export const UserIdTypeGetNoteUserId:string
	//"open_id"
	export const UserIdTypeGetOfferOpenId:string
	//"people_admin_id"
	export const UserIdTypeGetOfferPeopleAdminId:string
	//"union_id"
	export const UserIdTypeGetOfferUnionId:string
	//"user_id"
	export const UserIdTypeGetOfferUserId:string
	//"open_id"
	export const UserIdTypeGetReferralWebsiteJobPostOpenId:string
	//"union_id"
	export const UserIdTypeGetReferralWebsiteJobPostUnionId:string
	//"user_id"
	export const UserIdTypeGetReferralWebsiteJobPostUserId:string
	//"open_id"
	export const UserIdTypeGetTalentOpenId:string
	//"people_admin_id"
	export const UserIdTypeGetTalentPeopleAdminId:string
	//"union_id"
	export const UserIdTypeGetTalentUnionId:string
	//"user_id"
	export const UserIdTypeGetTalentUserId:string
	//"open_id"
	export const UserIdTypeGetWebsiteJobPostOpenId:string
	//"union_id"
	export const UserIdTypeGetWebsiteJobPostUnionId:string
	//"user_id"
	export const UserIdTypeGetWebsiteJobPostUserId:string
	//"open_id"
	export const UserIdTypeListApplicationInterviewOpenId:string
	//"people_admin_id"
	export const UserIdTypeListApplicationInterviewPeopleAdminId:string
	//"union_id"
	export const UserIdTypeListApplicationInterviewUnionId:string
	//"user_id"
	export const UserIdTypeListApplicationInterviewUserId:string
	//"open_id"
	export const UserIdTypeListBackgroundCheckOrderOpenId:string
	//"union_id"
	export const UserIdTypeListBackgroundCheckOrderUnionId:string
	//"user_id"
	export const UserIdTypeListBackgroundCheckOrderUserId:string
	//"open_id"
	export const UserIdTypeListByIdJobRequirementOpenId:string
	//"union_id"
	export const UserIdTypeListByIdJobRequirementUnionId:string
	//"user_id"
	export const UserIdTypeListByIdJobRequirementUserId:string
	//"open_id"
	export const UserIdTypeListEvaluationOpenId:string
	//"people_admin_id"
	export const UserIdTypeListEvaluationPeopleAdminId:string
	//"open_id"
	export const UserIdTypeListEvaluationTaskOpenId:string
	//"people_admin_id"
	export const UserIdTypeListEvaluationTaskPeopleAdminId:string
	//"union_id"
	export const UserIdTypeListEvaluationTaskUnionId:string
	//"user_id"
	export const UserIdTypeListEvaluationTaskUserId:string
	//"union_id"
	export const UserIdTypeListEvaluationUnionId:string
	//"user_id"
	export const UserIdTypeListEvaluationUserId:string
	//"open_id"
	export const UserIdTypeListExamMarkingTaskOpenId:string
	//"people_admin_id"
	export const UserIdTypeListExamMarkingTaskPeopleAdminId:string
	//"union_id"
	export const UserIdTypeListExamMarkingTaskUnionId:string
	//"user_id"
	export const UserIdTypeListExamMarkingTaskUserId:string
	//"open_id"
	export const UserIdTypeListInterviewOpenId:string
	//"open_id"
	export const UserIdTypeListInterviewRecordOpenId:string
	//"union_id"
	export const UserIdTypeListInterviewRecordUnionId:string
	//"user_id"
	export const UserIdTypeListInterviewRecordUserId:string
	//"open_id"
	export const UserIdTypeListInterviewTaskOpenId:string
	//"people_admin_id"
	export const UserIdTypeListInterviewTaskPeopleAdminId:string
	//"union_id"
	export const UserIdTypeListInterviewTaskUnionId:string
	//"user_id"
	export const UserIdTypeListInterviewTaskUserId:string
	//"union_id"
	export const UserIdTypeListInterviewUnionId:string
	//"user_id"
	export const UserIdTypeListInterviewUserId:string
	//"open_id"
	export const UserIdTypeListJobOpenId:string
	//"open_id"
	export const UserIdTypeListJobRequirementOpenId:string
	//"union_id"
	export const UserIdTypeListJobRequirementUnionId:string
	//"user_id"
	export const UserIdTypeListJobRequirementUserId:string
	//"union_id"
	export const UserIdTypeListJobUnionId:string
	//"user_id"
	export const UserIdTypeListJobUserId:string
	//"open_id"
	export const UserIdTypeListNoteOpenId:string
	//"people_admin_id"
	export const UserIdTypeListNotePeopleAdminId:string
	//"union_id"
	export const UserIdTypeListNoteUnionId:string
	//"user_id"
	export const UserIdTypeListNoteUserId:string
	//"open_id"
	export const UserIdTypeListOfferOpenId:string
	//"people_admin_id"
	export const UserIdTypeListOfferPeopleAdminId:string
	//"union_id"
	export const UserIdTypeListOfferUnionId:string
	//"user_id"
	export const UserIdTypeListOfferUserId:string
	//"open_id"
	export const UserIdTypeListReferralWebsiteJobPostOpenId:string
	//"union_id"
	export const UserIdTypeListReferralWebsiteJobPostUnionId:string
	//"user_id"
	export const UserIdTypeListReferralWebsiteJobPostUserId:string
	//"open_id"
	export const UserIdTypeListSubjectOpenId:string
	//"union_id"
	export const UserIdTypeListSubjectUnionId:string
	//"user_id"
	export const UserIdTypeListSubjectUserId:string
	//"open_id"
	export const UserIdTypeListTalentFolderOpenId:string
	//"people_admin_id"
	export const UserIdTypeListTalentFolderPeopleAdminId:string
	//"union_id"
	export const UserIdTypeListTalentFolderUnionId:string
	//"user_id"
	export const UserIdTypeListTalentFolderUserId:string
	//"open_id"
	export const UserIdTypeListTalentOpenId:string
	//"people_admin_id"
	export const UserIdTypeListTalentPeopleAdminId:string
	//"union_id"
	export const UserIdTypeListTalentUnionId:string
	//"user_id"
	export const UserIdTypeListTalentUserId:string
	//"open_id"
	export const UserIdTypeListTodoOpenId:string
	//"people_admin_id"
	export const UserIdTypeListTodoPeopleAdminId:string
	//"union_id"
	export const UserIdTypeListTodoUnionId:string
	//"user_id"
	export const UserIdTypeListTodoUserId:string
	//"open_id"
	export const UserIdTypeListWebsiteJobPostOpenId:string
	//"union_id"
	export const UserIdTypeListWebsiteJobPostUnionId:string
	//"user_id"
	export const UserIdTypeListWebsiteJobPostUserId:string
	//"open_id"
	export const UserIdTypeOfferApplicationOpenId:string
	//"union_id"
	export const UserIdTypeOfferApplicationUnionId:string
	//"user_id"
	export const UserIdTypeOfferApplicationUserId:string
	//"open_id"
	export const UserIdTypeOpenId:string
	//"open_id"
	export const UserIdTypePatchEmployeeOpenId:string
	//"union_id"
	export const UserIdTypePatchEmployeeUnionId:string
	//"user_id"
	export const UserIdTypePatchEmployeeUserId:string
	//"open_id"
	export const UserIdTypePatchNoteOpenId:string
	//"people_admin_id"
	export const UserIdTypePatchNotePeopleAdminId:string
	//"union_id"
	export const UserIdTypePatchNoteUnionId:string
	//"user_id"
	export const UserIdTypePatchNoteUserId:string
	//"people_admin_id"
	export const UserIdTypePeopleAdminId:string
	//"open_id"
	export const UserIdTypeProtectAgencyOpenId:string
	//"people_admin_id"
	export const UserIdTypeProtectAgencyPeopleAdminId:string
	//"union_id"
	export const UserIdTypeProtectAgencyUnionId:string
	//"user_id"
	export const UserIdTypeProtectAgencyUserId:string
	//"open_id"
	export const UserIdTypeQueryAgencyOpenId:string
	//"union_id"
	export const UserIdTypeQueryAgencyUnionId:string
	//"user_id"
	export const UserIdTypeQueryAgencyUserId:string
	//"open_id"
	export const UserIdTypeRecruiterJobOpenId:string
	//"union_id"
	export const UserIdTypeRecruiterJobUnionId:string
	//"user_id"
	export const UserIdTypeRecruiterJobUserId:string
	//"open_id"
	export const UserIdTypeSearchJobPublishRecordOpenId:string
	//"union_id"
	export const UserIdTypeSearchJobPublishRecordUnionId:string
	//"user_id"
	export const UserIdTypeSearchJobPublishRecordUserId:string
	//"open_id"
	export const UserIdTypeSearchReferralOpenId:string
	//"union_id"
	export const UserIdTypeSearchReferralUnionId:string
	//"user_id"
	export const UserIdTypeSearchReferralUserId:string
	//"open_id"
	export const UserIdTypeSearchTalentOperationLogOpenId:string
	//"union_id"
	export const UserIdTypeSearchTalentOperationLogUnionId:string
	//"user_id"
	export const UserIdTypeSearchTalentOperationLogUserId:string
	//"open_id"
	export const UserIdTypeSearchTestOpenId:string
	//"union_id"
	export const UserIdTypeSearchTestUnionId:string
	//"user_id"
	export const UserIdTypeSearchTestUserId:string
	//"open_id"
	export const UserIdTypeSearchWebsiteJobPostOpenId:string
	//"union_id"
	export const UserIdTypeSearchWebsiteJobPostUnionId:string
	//"user_id"
	export const UserIdTypeSearchWebsiteJobPostUserId:string
	//"open_id"
	export const UserIdTypeTransferOnboardApplicationOpenId:string
	//"union_id"
	export const UserIdTypeTransferOnboardApplicationUnionId:string
	//"user_id"
	export const UserIdTypeTransferOnboardApplicationUserId:string
	//"union_id"
	export const UserIdTypeUnionId:string
	//"open_id"
	export const UserIdTypeUpdateConfigJobOpenId:string
	//"union_id"
	export const UserIdTypeUpdateConfigJobUnionId:string
	//"user_id"
	export const UserIdTypeUpdateConfigJobUserId:string
	//"open_id"
	export const UserIdTypeUpdateJobRequirementOpenId:string
	//"union_id"
	export const UserIdTypeUpdateJobRequirementUnionId:string
	//"user_id"
	export const UserIdTypeUpdateJobRequirementUserId:string
	//"open_id"
	export const UserIdTypeUpdateOfferOpenId:string
	//"people_admin_id"
	export const UserIdTypeUpdateOfferPeopleAdminId:string
	//"union_id"
	export const UserIdTypeUpdateOfferUnionId:string
	//"user_id"
	export const UserIdTypeUpdateOfferUserId:string
	//"user_id"
	export const UserIdTypeUserId:string
	export interface UserRole extends Struct<UserRole>{

			userId:Ref<string>
			roleId:Ref<string>
			modifyTime:Ref<string>
			roleName:Ref<I18n>
			roleDescription:Ref<I18n>
			businessManagementScopes:Ref<UserBusinessManagementScope>[]
	}
	export interface UserRoleBuilder extends Struct<UserRoleBuilder>{

			userId(userId:string):Ref<UserRoleBuilder>
			roleId(roleId:string):Ref<UserRoleBuilder>
			modifyTime(modifyTime:string):Ref<UserRoleBuilder>
			roleName(roleName:Ref<I18n>):Ref<UserRoleBuilder>
			roleDescription(roleDescription:Ref<I18n>):Ref<UserRoleBuilder>
			businessManagementScopes(businessManagementScopes:Ref<UserBusinessManagementScope>[]):Ref<UserRoleBuilder>
			build():Ref<UserRole>
	}
	export interface V1 extends Struct<V1>{

			advertisement:Ref<{
			
				publish(ctx:context.Context,req:Ref<PublishAdvertisementReq>,...options:larkcore.RequestOptionFunc[]):Ref<PublishAdvertisementResp>
			}>
			agency:Ref<{
			
				get(ctx:context.Context,req:Ref<GetAgencyReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetAgencyResp>
				protect(ctx:context.Context,req:Ref<ProtectAgencyReq>,...options:larkcore.RequestOptionFunc[]):Ref<ProtectAgencyResp>
				protectSearch(ctx:context.Context,req:Ref<ProtectSearchAgencyReq>,...options:larkcore.RequestOptionFunc[]):Ref<ProtectSearchAgencyResp>
				query(ctx:context.Context,req:Ref<QueryAgencyReq>,...options:larkcore.RequestOptionFunc[]):Ref<QueryAgencyResp>
			}>
			application:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateApplicationResp>
				get(ctx:context.Context,req:Ref<GetApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetApplicationResp>
				list(ctx:context.Context,req:Ref<ListApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListApplicationResp>
				offer(ctx:context.Context,req:Ref<OfferApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<OfferApplicationResp>
				recover(ctx:context.Context,req:Ref<RecoverApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecoverApplicationResp>
				terminate(ctx:context.Context,req:Ref<TerminateApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<TerminateApplicationResp>
				transferOnboard(ctx:context.Context,req:Ref<TransferOnboardApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<TransferOnboardApplicationResp>
				transferStage(ctx:context.Context,req:Ref<TransferStageApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<TransferStageApplicationResp>
			}>
			applicationInterview:Ref<{
			
				list(ctx:context.Context,req:Ref<ListApplicationInterviewReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListApplicationInterviewResp>
			}>
			attachment:Ref<{
			
				create(ctx:context.Context,...options:larkcore.RequestOptionFunc[]):Ref<CreateAttachmentResp>
				get(ctx:context.Context,req:Ref<GetAttachmentReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetAttachmentResp>
				preview(ctx:context.Context,req:Ref<PreviewAttachmentReq>,...options:larkcore.RequestOptionFunc[]):Ref<PreviewAttachmentResp>
			}>
			backgroundCheckOrder:Ref<{
			
				list(ctx:context.Context,req:Ref<ListBackgroundCheckOrderReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListBackgroundCheckOrderResp>
			}>
			diversityInclusion:Ref<{
			
				search(ctx:context.Context,req:Ref<SearchDiversityInclusionReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchDiversityInclusionResp>
			}>
			ecoAccountCustomField:Ref<{
			
				batchDelete(ctx:context.Context,req:Ref<BatchDeleteEcoAccountCustomFieldReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchDeleteEcoAccountCustomFieldResp>
				batchUpdate(ctx:context.Context,req:Ref<BatchUpdateEcoAccountCustomFieldReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchUpdateEcoAccountCustomFieldResp>
				create(ctx:context.Context,req:Ref<CreateEcoAccountCustomFieldReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateEcoAccountCustomFieldResp>
			}>
			ecoBackgroundCheck:Ref<{
			
				cancel(ctx:context.Context,req:Ref<CancelEcoBackgroundCheckReq>,...options:larkcore.RequestOptionFunc[]):Ref<CancelEcoBackgroundCheckResp>
				updateProgress(ctx:context.Context,req:Ref<UpdateProgressEcoBackgroundCheckReq>,...options:larkcore.RequestOptionFunc[]):Ref<UpdateProgressEcoBackgroundCheckResp>
				updateResult(ctx:context.Context,req:Ref<UpdateResultEcoBackgroundCheckReq>,...options:larkcore.RequestOptionFunc[]):Ref<UpdateResultEcoBackgroundCheckResp>
			}>
			ecoBackgroundCheckCustomField:Ref<{
			
				batchDelete(ctx:context.Context,req:Ref<BatchDeleteEcoBackgroundCheckCustomFieldReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchDeleteEcoBackgroundCheckCustomFieldResp>
				batchUpdate(ctx:context.Context,req:Ref<BatchUpdateEcoBackgroundCheckCustomFieldReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchUpdateEcoBackgroundCheckCustomFieldResp>
				create(ctx:context.Context,req:Ref<CreateEcoBackgroundCheckCustomFieldReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateEcoBackgroundCheckCustomFieldResp>
			}>
			ecoBackgroundCheckPackage:Ref<{
			
				batchDelete(ctx:context.Context,req:Ref<BatchDeleteEcoBackgroundCheckPackageReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchDeleteEcoBackgroundCheckPackageResp>
				batchUpdate(ctx:context.Context,req:Ref<BatchUpdateEcoBackgroundCheckPackageReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchUpdateEcoBackgroundCheckPackageResp>
				create(ctx:context.Context,req:Ref<CreateEcoBackgroundCheckPackageReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateEcoBackgroundCheckPackageResp>
			}>
			ecoExam:Ref<{
			
				loginInfo(ctx:context.Context,req:Ref<LoginInfoEcoExamReq>,...options:larkcore.RequestOptionFunc[]):Ref<LoginInfoEcoExamResp>
				updateResult(ctx:context.Context,req:Ref<UpdateResultEcoExamReq>,...options:larkcore.RequestOptionFunc[]):Ref<UpdateResultEcoExamResp>
			}>
			ecoExamPaper:Ref<{
			
				batchDelete(ctx:context.Context,req:Ref<BatchDeleteEcoExamPaperReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchDeleteEcoExamPaperResp>
				batchUpdate(ctx:context.Context,req:Ref<BatchUpdateEcoExamPaperReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchUpdateEcoExamPaperResp>
				create(ctx:context.Context,req:Ref<CreateEcoExamPaperReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateEcoExamPaperResp>
			}>
			ehrImportTask:Ref<{
			
				patch(ctx:context.Context,req:Ref<PatchEhrImportTaskReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchEhrImportTaskResp>
			}>
			employee:Ref<{
			
				get(ctx:context.Context,req:Ref<GetEmployeeReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetEmployeeResp>
				getByApplication(ctx:context.Context,req:Ref<GetByApplicationEmployeeReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetByApplicationEmployeeResp>
				patch(ctx:context.Context,req:Ref<PatchEmployeeReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchEmployeeResp>
			}>
			evaluation:Ref<{
			
				list(ctx:context.Context,req:Ref<ListEvaluationReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListEvaluationResp>
				listByIterator(ctx:context.Context,req:Ref<ListEvaluationReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListEvaluationIterator>
			}>
			evaluationTask:Ref<{
			
				list(ctx:context.Context,req:Ref<ListEvaluationTaskReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListEvaluationTaskResp>
				listByIterator(ctx:context.Context,req:Ref<ListEvaluationTaskReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListEvaluationTaskIterator>
			}>
			exam:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateExamReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateExamResp>
			}>
			examMarkingTask:Ref<{
			
				list(ctx:context.Context,req:Ref<ListExamMarkingTaskReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListExamMarkingTaskResp>
				listByIterator(ctx:context.Context,req:Ref<ListExamMarkingTaskReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListExamMarkingTaskIterator>
			}>
			externalApplication:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateExternalApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateExternalApplicationResp>
				delete(ctx:context.Context,req:Ref<DeleteExternalApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteExternalApplicationResp>
				list(ctx:context.Context,req:Ref<ListExternalApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListExternalApplicationResp>
				listByIterator(ctx:context.Context,req:Ref<ListExternalApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListExternalApplicationIterator>
				update(ctx:context.Context,req:Ref<UpdateExternalApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<UpdateExternalApplicationResp>
			}>
			externalBackgroundCheck:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateExternalBackgroundCheckReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateExternalBackgroundCheckResp>
			}>
			externalInterview:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateExternalInterviewReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateExternalInterviewResp>
			}>
			externalInterviewAssessment:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateExternalInterviewAssessmentReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateExternalInterviewAssessmentResp>
				patch(ctx:context.Context,req:Ref<PatchExternalInterviewAssessmentReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchExternalInterviewAssessmentResp>
			}>
			externalReferralReward:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateExternalReferralRewardReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateExternalReferralRewardResp>
				delete(ctx:context.Context,req:Ref<DeleteExternalReferralRewardReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteExternalReferralRewardResp>
			}>
			interview:Ref<{
			
				getByTalent(ctx:context.Context,req:Ref<GetByTalentInterviewReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetByTalentInterviewResp>
				list(ctx:context.Context,req:Ref<ListInterviewReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListInterviewResp>
			}>
			interviewFeedbackForm:Ref<{
			
				list(ctx:context.Context,req:Ref<ListInterviewFeedbackFormReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListInterviewFeedbackFormResp>
				listByIterator(ctx:context.Context,req:Ref<ListInterviewFeedbackFormReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListInterviewFeedbackFormIterator>
			}>
			interviewRecord:Ref<{
			
				get(ctx:context.Context,req:Ref<GetInterviewRecordReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetInterviewRecordResp>
				list(ctx:context.Context,req:Ref<ListInterviewRecordReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListInterviewRecordResp>
				listByIterator(ctx:context.Context,req:Ref<ListInterviewRecordReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListInterviewRecordIterator>
			}>
			interviewRecordAttachment:Ref<{
			
				get(ctx:context.Context,req:Ref<GetInterviewRecordAttachmentReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetInterviewRecordAttachmentResp>
			}>
			interviewRegistrationSchema:Ref<{
			
				list(ctx:context.Context,req:Ref<ListInterviewRegistrationSchemaReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListInterviewRegistrationSchemaResp>
				listByIterator(ctx:context.Context,req:Ref<ListInterviewRegistrationSchemaReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListInterviewRegistrationSchemaIterator>
			}>
			interviewRoundType:Ref<{
			
				list(ctx:context.Context,req:Ref<ListInterviewRoundTypeReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListInterviewRoundTypeResp>
			}>
			interviewTask:Ref<{
			
				list(ctx:context.Context,req:Ref<ListInterviewTaskReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListInterviewTaskResp>
				listByIterator(ctx:context.Context,req:Ref<ListInterviewTaskReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListInterviewTaskIterator>
			}>
			job:Ref<{
			
				close(ctx:context.Context,req:Ref<CloseJobReq>,...options:larkcore.RequestOptionFunc[]):[Ref<CloseJobResp>,error]
				combinedCreate(ctx:context.Context,req:Ref<CombinedCreateJobReq>,...options:larkcore.RequestOptionFunc[]):Ref<CombinedCreateJobResp>
				combinedUpdate(ctx:context.Context,req:Ref<CombinedUpdateJobReq>,...options:larkcore.RequestOptionFunc[]):Ref<CombinedUpdateJobResp>
				config(ctx:context.Context,req:Ref<ConfigJobReq>,...options:larkcore.RequestOptionFunc[]):Ref<ConfigJobResp>
				get(ctx:context.Context,req:Ref<GetJobReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetJobResp>
				list(ctx:context.Context,req:Ref<ListJobReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListJobResp>
				open(ctx:context.Context,req:Ref<OpenJobReq>,...options:larkcore.RequestOptionFunc[]):Ref<OpenJobResp>
				recruiter(ctx:context.Context,req:Ref<RecruiterJobReq>,...options:larkcore.RequestOptionFunc[]):Ref<RecruiterJobResp>
				updateConfig(ctx:context.Context,req:Ref<UpdateConfigJobReq>,...options:larkcore.RequestOptionFunc[]):Ref<UpdateConfigJobResp>
			}>
			jobManager:Ref<{
			
				batchUpdate(ctx:context.Context,req:Ref<BatchUpdateJobManagerReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchUpdateJobManagerResp>
				get(ctx:context.Context,req:Ref<GetJobManagerReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetJobManagerResp>
			}>
			jobFunction:Ref<{
			
				list(ctx:context.Context,req:Ref<ListJobFunctionReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListJobFunctionResp>
				listByIterator(ctx:context.Context,req:Ref<ListJobFunctionReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListJobFunctionIterator>
			}>
			jobProcess:Ref<{
			
				list(ctx:context.Context,req:Ref<ListJobProcessReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListJobProcessResp>
			}>
			jobPublishRecord:Ref<{
			
				search(ctx:context.Context,req:Ref<SearchJobPublishRecordReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchJobPublishRecordResp>
			}>
			jobRequirement:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateJobRequirementReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateJobRequirementResp>
				delete(ctx:context.Context,req:Ref<DeleteJobRequirementReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteJobRequirementResp>
				list(ctx:context.Context,req:Ref<ListJobRequirementReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListJobRequirementResp>
				listById(ctx:context.Context,req:Ref<ListByIdJobRequirementReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListByIdJobRequirementResp>
				update(ctx:context.Context,req:Ref<UpdateJobRequirementReq>,...options:larkcore.RequestOptionFunc[]):Ref<UpdateJobRequirementResp>
			}>
			jobRequirementSchema:Ref<{
			
				list(ctx:context.Context,req:Ref<ListJobRequirementSchemaReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListJobRequirementSchemaResp>
			}>
			jobSchema:Ref<{
			
				list(ctx:context.Context,req:Ref<ListJobSchemaReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListJobSchemaResp>
			}>
			jobType:Ref<{
			
				list(ctx:context.Context,req:Ref<ListJobTypeReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListJobTypeResp>
				listByIterator(ctx:context.Context,req:Ref<ListJobTypeReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListJobTypeIterator>
			}>
			location:Ref<{
			
				list(ctx:context.Context,req:Ref<ListLocationReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListLocationResp>
				listByIterator(ctx:context.Context,req:Ref<ListLocationReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListLocationIterator>
				query(ctx:context.Context,req:Ref<QueryLocationReq>,...options:larkcore.RequestOptionFunc[]):Ref<QueryLocationResp>
			}>
			note:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateNoteReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateNoteResp>
				delete(ctx:context.Context,req:Ref<DeleteNoteReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteNoteResp>
				get(ctx:context.Context,req:Ref<GetNoteReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetNoteResp>
				list(ctx:context.Context,req:Ref<ListNoteReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListNoteResp>
				patch(ctx:context.Context,req:Ref<PatchNoteReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchNoteResp>
			}>
			offer:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateOfferReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateOfferResp>
				get(ctx:context.Context,req:Ref<GetOfferReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetOfferResp>
				internOfferStatus(ctx:context.Context,req:Ref<InternOfferStatusOfferReq>,...options:larkcore.RequestOptionFunc[]):Ref<InternOfferStatusOfferResp>
				list(ctx:context.Context,req:Ref<ListOfferReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListOfferResp>
				offerStatus(ctx:context.Context,req:Ref<OfferStatusOfferReq>,...options:larkcore.RequestOptionFunc[]):Ref<OfferStatusOfferResp>
				update(ctx:context.Context,req:Ref<UpdateOfferReq>,...options:larkcore.RequestOptionFunc[]):Ref<UpdateOfferResp>
			}>
			offerApplicationForm:Ref<{
			
				get(ctx:context.Context,req:Ref<GetOfferApplicationFormReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetOfferApplicationFormResp>
				list(ctx:context.Context,req:Ref<ListOfferApplicationFormReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListOfferApplicationFormResp>
			}>
			offerCustomField:Ref<{
			
				update(ctx:context.Context,req:Ref<UpdateOfferCustomFieldReq>,...options:larkcore.RequestOptionFunc[]):Ref<UpdateOfferCustomFieldResp>
			}>
			offerSchema:Ref<{
			
				get(ctx:context.Context,req:Ref<GetOfferSchemaReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetOfferSchemaResp>
			}>
			questionnaire:Ref<{
			
				list(ctx:context.Context,req:Ref<ListQuestionnaireReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListQuestionnaireResp>
			}>
			referral:Ref<{
			
				getByApplication(ctx:context.Context,req:Ref<GetByApplicationReferralReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetByApplicationReferralResp>
				search(ctx:context.Context,req:Ref<SearchReferralReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchReferralResp>
			}>
			referralAccount:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateReferralAccountReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateReferralAccountResp>
				deactivate(ctx:context.Context,req:Ref<DeactivateReferralAccountReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeactivateReferralAccountResp>
				reconciliation(ctx:context.Context,req:Ref<ReconciliationReferralAccountReq>,...options:larkcore.RequestOptionFunc[]):Ref<ReconciliationReferralAccountResp>
				withdraw(ctx:context.Context,req:Ref<WithdrawReferralAccountReq>,...options:larkcore.RequestOptionFunc[]):Ref<WithdrawReferralAccountResp>
			}>
			referralWebsiteJobPost:Ref<{
			
				get(ctx:context.Context,req:Ref<GetReferralWebsiteJobPostReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetReferralWebsiteJobPostResp>
				list(ctx:context.Context,req:Ref<ListReferralWebsiteJobPostReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListReferralWebsiteJobPostResp>
				listByIterator(ctx:context.Context,req:Ref<ListReferralWebsiteJobPostReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListReferralWebsiteJobPostIterator>
			}>
			registrationSchema:Ref<{
			
				list(ctx:context.Context,req:Ref<ListRegistrationSchemaReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListRegistrationSchemaResp>
				listByIterator(ctx:context.Context,req:Ref<ListRegistrationSchemaReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListRegistrationSchemaIterator>
			}>
			resumeSource:Ref<{
			
				list(ctx:context.Context,req:Ref<ListResumeSourceReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListResumeSourceResp>
				listByIterator(ctx:context.Context,req:Ref<ListResumeSourceReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListResumeSourceIterator>
			}>
			role:Ref<{
			
				get(ctx:context.Context,req:Ref<GetRoleReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetRoleResp>
				list(ctx:context.Context,req:Ref<ListRoleReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListRoleResp>
				listByIterator(ctx:context.Context,req:Ref<ListRoleReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListRoleIterator>
			}>
			subject:Ref<{
			
				list(ctx:context.Context,req:Ref<ListSubjectReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListSubjectResp>
			}>
			talent:Ref<{
			
				addToFolder(ctx:context.Context,req:Ref<AddToFolderTalentReq>,...options:larkcore.RequestOptionFunc[]):Ref<AddToFolderTalentResp>
				batchGetId(ctx:context.Context,req:Ref<BatchGetIdTalentReq>,...options:larkcore.RequestOptionFunc[]):Ref<BatchGetIdTalentResp>
				combinedCreate(ctx:context.Context,req:Ref<CombinedCreateTalentReq>,...options:larkcore.RequestOptionFunc[]):Ref<CombinedCreateTalentResp>
				combinedUpdate(ctx:context.Context,req:Ref<CombinedUpdateTalentReq>,...options:larkcore.RequestOptionFunc[]):Ref<CombinedUpdateTalentResp>
				get(ctx:context.Context,req:Ref<GetTalentReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetTalentResp>
				list(ctx:context.Context,req:Ref<ListTalentReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListTalentResp>
				onboardStatus(ctx:context.Context,req:Ref<OnboardStatusTalentReq>,...options:larkcore.RequestOptionFunc[]):Ref<OnboardStatusTalentResp>
			}>
			talentExternalInfo:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateTalentExternalInfoReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateTalentExternalInfoResp>
				update(ctx:context.Context,req:Ref<UpdateTalentExternalInfoReq>,...options:larkcore.RequestOptionFunc[]):Ref<UpdateTalentExternalInfoResp>
			}>
			talentFolder:Ref<{
			
				list(ctx:context.Context,req:Ref<ListTalentFolderReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListTalentFolderResp>
				listByIterator(ctx:context.Context,req:Ref<ListTalentFolderReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListTalentFolderIterator>
			}>
			talentObject:Ref<{
			
				query(ctx:context.Context,...options:larkcore.RequestOptionFunc[]):Ref<QueryTalentObjectResp>
			}>
			talentOperationLog:Ref<{
			
				search(ctx:context.Context,req:Ref<SearchTalentOperationLogReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchTalentOperationLogResp>
			}>
			talentPool:Ref<{
			
				moveTalent(ctx:context.Context,req:Ref<MoveTalentTalentPoolReq>,...options:larkcore.RequestOptionFunc[]):Ref<MoveTalentTalentPoolResp>
				search(ctx:context.Context,req:Ref<SearchTalentPoolReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchTalentPoolResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchTalentPoolReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchTalentPoolIterator>
			}>
			terminationReason:Ref<{
			
				list(ctx:context.Context,req:Ref<ListTerminationReasonReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListTerminationReasonResp>
				listByIterator(ctx:context.Context,req:Ref<ListTerminationReasonReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListTerminationReasonIterator>
			}>
			test:Ref<{
			
				search(ctx:context.Context,req:Ref<SearchTestReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchTestResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchTestReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchTestIterator>
			}>
			todo:Ref<{
			
				list(ctx:context.Context,req:Ref<ListTodoReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListTodoResp>
				listByIterator(ctx:context.Context,req:Ref<ListTodoReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListTodoIterator>
			}>
			tripartiteAgreement:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateTripartiteAgreementReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateTripartiteAgreementResp>
				delete(ctx:context.Context,req:Ref<DeleteTripartiteAgreementReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteTripartiteAgreementResp>
				list(ctx:context.Context,req:Ref<ListTripartiteAgreementReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListTripartiteAgreementResp>
				listByIterator(ctx:context.Context,req:Ref<ListTripartiteAgreementReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListTripartiteAgreementIterator>
				update(ctx:context.Context,req:Ref<UpdateTripartiteAgreementReq>,...options:larkcore.RequestOptionFunc[]):Ref<UpdateTripartiteAgreementResp>
			}>
			website:Ref<{
			
				list(ctx:context.Context,req:Ref<ListWebsiteReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListWebsiteResp>
				listByIterator(ctx:context.Context,req:Ref<ListWebsiteReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListWebsiteIterator>
			}>
			websiteChannel:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateWebsiteChannelReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateWebsiteChannelResp>
				delete(ctx:context.Context,req:Ref<DeleteWebsiteChannelReq>,...options:larkcore.RequestOptionFunc[]):Ref<DeleteWebsiteChannelResp>
				list(ctx:context.Context,req:Ref<ListWebsiteChannelReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListWebsiteChannelResp>
				update(ctx:context.Context,req:Ref<UpdateWebsiteChannelReq>,...options:larkcore.RequestOptionFunc[]):Ref<UpdateWebsiteChannelResp>
			}>
			websiteDelivery:Ref<{
			
				createByAttachment(ctx:context.Context,req:Ref<CreateByAttachmentWebsiteDeliveryReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateByAttachmentWebsiteDeliveryResp>
				createByResume(ctx:context.Context,req:Ref<CreateByResumeWebsiteDeliveryReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateByResumeWebsiteDeliveryResp>
			}>
			websiteDeliveryTask:Ref<{
			
				get(ctx:context.Context,req:Ref<GetWebsiteDeliveryTaskReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetWebsiteDeliveryTaskResp>
			}>
			websiteJobPost:Ref<{
			
				get(ctx:context.Context,req:Ref<GetWebsiteJobPostReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetWebsiteJobPostResp>
				list(ctx:context.Context,req:Ref<ListWebsiteJobPostReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListWebsiteJobPostResp>
				listByIterator(ctx:context.Context,req:Ref<ListWebsiteJobPostReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListWebsiteJobPostIterator>
				search(ctx:context.Context,req:Ref<SearchWebsiteJobPostReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchWebsiteJobPostResp>
				searchByIterator(ctx:context.Context,req:Ref<SearchWebsiteJobPostReq>,...options:larkcore.RequestOptionFunc[]):Ref<SearchWebsiteJobPostIterator>
			}>
			websiteSiteUser:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateWebsiteSiteUserReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateWebsiteSiteUserResp>
			}>
	}
	export interface Website extends Struct<Website>{

			id:Ref<string>
			name:Ref<I18n>
			processTypeList:int[]
			jobChannelId:Ref<string>
	}
	export interface WebsiteBuilder extends Struct<WebsiteBuilder>{

			id(id:string):Ref<WebsiteBuilder>
			name(name:Ref<I18n>):Ref<WebsiteBuilder>
			processTypeList(processTypeList:int[]):Ref<WebsiteBuilder>
			jobChannelId(jobChannelId:string):Ref<WebsiteBuilder>
			build():Ref<Website>
	}
	export interface WebsiteChannelInfo extends Struct<WebsiteChannelInfo>{

			id:Ref<string>
			name:Ref<string>
			link:Ref<string>
			code:Ref<string>
	}
	export interface WebsiteChannelInfoBuilder extends Struct<WebsiteChannelInfoBuilder>{

			id(id:string):Ref<WebsiteChannelInfoBuilder>
			name(name:string):Ref<WebsiteChannelInfoBuilder>
			link(link:string):Ref<WebsiteChannelInfoBuilder>
			code(code:string):Ref<WebsiteChannelInfoBuilder>
			build():Ref<WebsiteChannelInfo>
	}
	export interface WebsiteDelivery extends Struct<WebsiteDelivery>{

			jobPostId:Ref<string>
			resume:Ref<WebsiteDeliveryResume>
			userId:Ref<string>
			applicationPreferredCityCodeList:string[]
			channelId:Ref<string>
	}
	export interface WebsiteDeliveryAttachment extends Struct<WebsiteDeliveryAttachment>{

			jobPostId:Ref<string>
			userId:Ref<string>
			resumeFileId:Ref<string>
			channelId:Ref<string>
			applicationPreferredCityCodeList:string[]
			mobileCountryCode:Ref<string>
			mobile:Ref<string>
			email:Ref<string>
			identification:Ref<WebsiteDeliveryAttachmentIndentification>
	}
	export interface WebsiteDeliveryAttachmentBuilder extends Struct<WebsiteDeliveryAttachmentBuilder>{

			jobPostId(jobPostId:string):Ref<WebsiteDeliveryAttachmentBuilder>
			userId(userId:string):Ref<WebsiteDeliveryAttachmentBuilder>
			resumeFileId(resumeFileId:string):Ref<WebsiteDeliveryAttachmentBuilder>
			channelId(channelId:string):Ref<WebsiteDeliveryAttachmentBuilder>
			applicationPreferredCityCodeList(applicationPreferredCityCodeList:string[]):Ref<WebsiteDeliveryAttachmentBuilder>
			mobileCountryCode(mobileCountryCode:string):Ref<WebsiteDeliveryAttachmentBuilder>
			mobile(mobile:string):Ref<WebsiteDeliveryAttachmentBuilder>
			email(email:string):Ref<WebsiteDeliveryAttachmentBuilder>
			identification(identification:Ref<WebsiteDeliveryAttachmentIndentification>):Ref<WebsiteDeliveryAttachmentBuilder>
			build():Ref<WebsiteDeliveryAttachment>
	}
	export interface WebsiteDeliveryAttachmentIndentification extends Struct<WebsiteDeliveryAttachmentIndentification>{

			identificationType:Ref<int>
			identificationNumber:Ref<string>
	}
	export interface WebsiteDeliveryAttachmentIndentificationBuilder extends Struct<WebsiteDeliveryAttachmentIndentificationBuilder>{

			identificationType(identificationType:int):Ref<WebsiteDeliveryAttachmentIndentificationBuilder>
			identificationNumber(identificationNumber:string):Ref<WebsiteDeliveryAttachmentIndentificationBuilder>
			build():Ref<WebsiteDeliveryAttachmentIndentification>
	}
	export interface WebsiteDeliveryAward extends Struct<WebsiteDeliveryAward>{

			customizedData:Ref<WebsiteDeliveryCustomizedData>[]
			desc:Ref<string>
			title:Ref<string>
			awardTime:Ref<int>
	}
	export interface WebsiteDeliveryAwardBuilder extends Struct<WebsiteDeliveryAwardBuilder>{

			customizedData(customizedData:Ref<WebsiteDeliveryCustomizedData>[]):Ref<WebsiteDeliveryAwardBuilder>
			desc(desc:string):Ref<WebsiteDeliveryAwardBuilder>
			title(title:string):Ref<WebsiteDeliveryAwardBuilder>
			awardTime(awardTime:int):Ref<WebsiteDeliveryAwardBuilder>
			build():Ref<WebsiteDeliveryAward>
	}
	export interface WebsiteDeliveryBasicInfo extends Struct<WebsiteDeliveryBasicInfo>{

			nationalityId:Ref<string>
			startWorkTime:Ref<int>
			currentHomeAddress:Ref<string>
			hometownCityCode:Ref<string>
			mobileCountryCode:Ref<string>
			identification:Ref<WebsiteDeliveryIdentification>
			maritalStatus:Ref<int>
			mobile:Ref<string>
			currentCityCode:Ref<string>
			experienceYears:Ref<int>
			gender:Ref<int>
			birthday:Ref<int>
			name:Ref<string>
			preferredCityCodeList:string[]
			resumeSourceId:Ref<string>
			age:Ref<int>
			customizedData:Ref<WebsiteDeliveryCustomizedData>[]
			email:Ref<string>
	}
	export interface WebsiteDeliveryBasicInfoBuilder extends Struct<WebsiteDeliveryBasicInfoBuilder>{

			nationalityId(nationalityId:string):Ref<WebsiteDeliveryBasicInfoBuilder>
			startWorkTime(startWorkTime:int):Ref<WebsiteDeliveryBasicInfoBuilder>
			currentHomeAddress(currentHomeAddress:string):Ref<WebsiteDeliveryBasicInfoBuilder>
			hometownCityCode(hometownCityCode:string):Ref<WebsiteDeliveryBasicInfoBuilder>
			mobileCountryCode(mobileCountryCode:string):Ref<WebsiteDeliveryBasicInfoBuilder>
			identification(identification:Ref<WebsiteDeliveryIdentification>):Ref<WebsiteDeliveryBasicInfoBuilder>
			maritalStatus(maritalStatus:int):Ref<WebsiteDeliveryBasicInfoBuilder>
			mobile(mobile:string):Ref<WebsiteDeliveryBasicInfoBuilder>
			currentCityCode(currentCityCode:string):Ref<WebsiteDeliveryBasicInfoBuilder>
			experienceYears(experienceYears:int):Ref<WebsiteDeliveryBasicInfoBuilder>
			gender(gender:int):Ref<WebsiteDeliveryBasicInfoBuilder>
			birthday(birthday:int):Ref<WebsiteDeliveryBasicInfoBuilder>
			name(name:string):Ref<WebsiteDeliveryBasicInfoBuilder>
			preferredCityCodeList(preferredCityCodeList:string[]):Ref<WebsiteDeliveryBasicInfoBuilder>
			resumeSourceId(resumeSourceId:string):Ref<WebsiteDeliveryBasicInfoBuilder>
			age(age:int):Ref<WebsiteDeliveryBasicInfoBuilder>
			customizedData(customizedData:Ref<WebsiteDeliveryCustomizedData>[]):Ref<WebsiteDeliveryBasicInfoBuilder>
			email(email:string):Ref<WebsiteDeliveryBasicInfoBuilder>
			build():Ref<WebsiteDeliveryBasicInfo>
	}
	export interface WebsiteDeliveryBuilder extends Struct<WebsiteDeliveryBuilder>{

			jobPostId(jobPostId:string):Ref<WebsiteDeliveryBuilder>
			resume(resume:Ref<WebsiteDeliveryResume>):Ref<WebsiteDeliveryBuilder>
			userId(userId:string):Ref<WebsiteDeliveryBuilder>
			applicationPreferredCityCodeList(applicationPreferredCityCodeList:string[]):Ref<WebsiteDeliveryBuilder>
			channelId(channelId:string):Ref<WebsiteDeliveryBuilder>
			build():Ref<WebsiteDelivery>
	}
	export interface WebsiteDeliveryCareer extends Struct<WebsiteDeliveryCareer>{

			desc:Ref<string>
			endTime:Ref<int>
			startTime:Ref<int>
			title:Ref<string>
			company:Ref<string>
			customizedData:Ref<WebsiteDeliveryCustomizedData>[]
	}
	export interface WebsiteDeliveryCareerBuilder extends Struct<WebsiteDeliveryCareerBuilder>{

			desc(desc:string):Ref<WebsiteDeliveryCareerBuilder>
			endTime(endTime:int):Ref<WebsiteDeliveryCareerBuilder>
			startTime(startTime:int):Ref<WebsiteDeliveryCareerBuilder>
			title(title:string):Ref<WebsiteDeliveryCareerBuilder>
			company(company:string):Ref<WebsiteDeliveryCareerBuilder>
			customizedData(customizedData:Ref<WebsiteDeliveryCustomizedData>[]):Ref<WebsiteDeliveryCareerBuilder>
			build():Ref<WebsiteDeliveryCareer>
	}
	export interface WebsiteDeliveryCertificate extends Struct<WebsiteDeliveryCertificate>{

			customizedData:Ref<WebsiteDeliveryCustomizedData>[]
			desc:Ref<string>
			name:Ref<string>
	}
	export interface WebsiteDeliveryCertificateBuilder extends Struct<WebsiteDeliveryCertificateBuilder>{

			customizedData(customizedData:Ref<WebsiteDeliveryCustomizedData>[]):Ref<WebsiteDeliveryCertificateBuilder>
			desc(desc:string):Ref<WebsiteDeliveryCertificateBuilder>
			name(name:string):Ref<WebsiteDeliveryCertificateBuilder>
			build():Ref<WebsiteDeliveryCertificate>
	}
	export interface WebsiteDeliveryCompetition extends Struct<WebsiteDeliveryCompetition>{

			customizedData:Ref<WebsiteDeliveryCustomizedData>[]
			desc:Ref<string>
			name:Ref<string>
	}
	export interface WebsiteDeliveryCompetitionBuilder extends Struct<WebsiteDeliveryCompetitionBuilder>{

			customizedData(customizedData:Ref<WebsiteDeliveryCustomizedData>[]):Ref<WebsiteDeliveryCompetitionBuilder>
			desc(desc:string):Ref<WebsiteDeliveryCompetitionBuilder>
			name(name:string):Ref<WebsiteDeliveryCompetitionBuilder>
			build():Ref<WebsiteDeliveryCompetition>
	}
	export interface WebsiteDeliveryCustomizedData extends Struct<WebsiteDeliveryCustomizedData>{

			objectId:Ref<string>
			value:Ref<string>
	}
	export interface WebsiteDeliveryCustomizedDataBuilder extends Struct<WebsiteDeliveryCustomizedDataBuilder>{

			objectId(objectId:string):Ref<WebsiteDeliveryCustomizedDataBuilder>
			value(value:string):Ref<WebsiteDeliveryCustomizedDataBuilder>
			build():Ref<WebsiteDeliveryCustomizedData>
	}
	export interface WebsiteDeliveryCustomizedDataParent extends Struct<WebsiteDeliveryCustomizedDataParent>{

			objectId:Ref<string>
			children:Ref<WebsiteDeliveryCustomizedData>[]
	}
	export interface WebsiteDeliveryCustomizedDataParentBuilder extends Struct<WebsiteDeliveryCustomizedDataParentBuilder>{

			objectId(objectId:string):Ref<WebsiteDeliveryCustomizedDataParentBuilder>
			children(children:Ref<WebsiteDeliveryCustomizedData>[]):Ref<WebsiteDeliveryCustomizedDataParentBuilder>
			build():Ref<WebsiteDeliveryCustomizedDataParent>
	}
	export interface WebsiteDeliveryDto extends Struct<WebsiteDeliveryDto>{

			applicationId:Ref<string>
			id:Ref<string>
			jobId:Ref<string>
			jobPostId:Ref<string>
			portalResumeId:Ref<string>
			userId:Ref<string>
			talentId:Ref<string>
	}
	export interface WebsiteDeliveryDtoBuilder extends Struct<WebsiteDeliveryDtoBuilder>{

			applicationId(applicationId:string):Ref<WebsiteDeliveryDtoBuilder>
			id(id:string):Ref<WebsiteDeliveryDtoBuilder>
			jobId(jobId:string):Ref<WebsiteDeliveryDtoBuilder>
			jobPostId(jobPostId:string):Ref<WebsiteDeliveryDtoBuilder>
			portalResumeId(portalResumeId:string):Ref<WebsiteDeliveryDtoBuilder>
			userId(userId:string):Ref<WebsiteDeliveryDtoBuilder>
			talentId(talentId:string):Ref<WebsiteDeliveryDtoBuilder>
			build():Ref<WebsiteDeliveryDto>
	}
	export interface WebsiteDeliveryEducation extends Struct<WebsiteDeliveryEducation>{

			educationType:Ref<int>
			endTime:Ref<int>
			endTimeV2:Ref<int>
			fieldOfStudy:Ref<string>
			school:Ref<string>
			startTime:Ref<int>
			academicRanking:Ref<int>
			customizedData:Ref<WebsiteDeliveryCustomizedData>[]
			degree:Ref<int>
	}
	export interface WebsiteDeliveryEducationBuilder extends Struct<WebsiteDeliveryEducationBuilder>{

			educationType(educationType:int):Ref<WebsiteDeliveryEducationBuilder>
			endTime(endTime:int):Ref<WebsiteDeliveryEducationBuilder>
			endTimeV2(endTimeV2:int):Ref<WebsiteDeliveryEducationBuilder>
			fieldOfStudy(fieldOfStudy:string):Ref<WebsiteDeliveryEducationBuilder>
			school(school:string):Ref<WebsiteDeliveryEducationBuilder>
			startTime(startTime:int):Ref<WebsiteDeliveryEducationBuilder>
			academicRanking(academicRanking:int):Ref<WebsiteDeliveryEducationBuilder>
			customizedData(customizedData:Ref<WebsiteDeliveryCustomizedData>[]):Ref<WebsiteDeliveryEducationBuilder>
			degree(degree:int):Ref<WebsiteDeliveryEducationBuilder>
			build():Ref<WebsiteDeliveryEducation>
	}
	export interface WebsiteDeliveryIdentification extends Struct<WebsiteDeliveryIdentification>{

			identificationNumber:Ref<string>
			identificationType:Ref<int>
	}
	export interface WebsiteDeliveryIdentificationBuilder extends Struct<WebsiteDeliveryIdentificationBuilder>{

			identificationNumber(identificationNumber:string):Ref<WebsiteDeliveryIdentificationBuilder>
			identificationType(identificationType:int):Ref<WebsiteDeliveryIdentificationBuilder>
			build():Ref<WebsiteDeliveryIdentification>
	}
	export interface WebsiteDeliveryInternship extends Struct<WebsiteDeliveryInternship>{

			desc:Ref<string>
			endTime:Ref<int>
			startTime:Ref<int>
			title:Ref<string>
			company:Ref<string>
			customizedData:Ref<WebsiteDeliveryCustomizedData>[]
	}
	export interface WebsiteDeliveryInternshipBuilder extends Struct<WebsiteDeliveryInternshipBuilder>{

			desc(desc:string):Ref<WebsiteDeliveryInternshipBuilder>
			endTime(endTime:int):Ref<WebsiteDeliveryInternshipBuilder>
			startTime(startTime:int):Ref<WebsiteDeliveryInternshipBuilder>
			title(title:string):Ref<WebsiteDeliveryInternshipBuilder>
			company(company:string):Ref<WebsiteDeliveryInternshipBuilder>
			customizedData(customizedData:Ref<WebsiteDeliveryCustomizedData>[]):Ref<WebsiteDeliveryInternshipBuilder>
			build():Ref<WebsiteDeliveryInternship>
	}
	export interface WebsiteDeliveryLanguage extends Struct<WebsiteDeliveryLanguage>{

			customizedData:Ref<WebsiteDeliveryCustomizedData>[]
			language:Ref<int>
			proficiency:Ref<int>
	}
	export interface WebsiteDeliveryLanguageBuilder extends Struct<WebsiteDeliveryLanguageBuilder>{

			customizedData(customizedData:Ref<WebsiteDeliveryCustomizedData>[]):Ref<WebsiteDeliveryLanguageBuilder>
			language(language:int):Ref<WebsiteDeliveryLanguageBuilder>
			proficiency(proficiency:int):Ref<WebsiteDeliveryLanguageBuilder>
			build():Ref<WebsiteDeliveryLanguage>
	}
	export interface WebsiteDeliveryProject extends Struct<WebsiteDeliveryProject>{

			customizedData:Ref<WebsiteDeliveryCustomizedData>[]
			desc:Ref<string>
			endTime:Ref<int>
			link:Ref<string>
			name:Ref<string>
			role:Ref<string>
			startTime:Ref<int>
	}
	export interface WebsiteDeliveryProjectBuilder extends Struct<WebsiteDeliveryProjectBuilder>{

			customizedData(customizedData:Ref<WebsiteDeliveryCustomizedData>[]):Ref<WebsiteDeliveryProjectBuilder>
			desc(desc:string):Ref<WebsiteDeliveryProjectBuilder>
			endTime(endTime:int):Ref<WebsiteDeliveryProjectBuilder>
			link(link:string):Ref<WebsiteDeliveryProjectBuilder>
			name(name:string):Ref<WebsiteDeliveryProjectBuilder>
			role(role:string):Ref<WebsiteDeliveryProjectBuilder>
			startTime(startTime:int):Ref<WebsiteDeliveryProjectBuilder>
			build():Ref<WebsiteDeliveryProject>
	}
	export interface WebsiteDeliveryResume extends Struct<WebsiteDeliveryResume>{

			internshipList:Ref<WebsiteDeliveryInternship>[]
			basicInfo:Ref<WebsiteDeliveryBasicInfo>
			educationList:Ref<WebsiteDeliveryEducation>[]
			selfEvaluation:Ref<WebsiteDeliverySelfEvaluation>
			careerList:Ref<WebsiteDeliveryCareer>[]
			customizedData:Ref<WebsiteDeliveryCustomizedDataParent>[]
			resumeAttachmentId:Ref<string>
			snsList:Ref<WebsiteDeliverySns>[]
			worksList:Ref<WebsiteDeliveryWorks>[]
			awardList:Ref<WebsiteDeliveryAward>[]
			projectList:Ref<WebsiteDeliveryProject>[]
			languageList:Ref<WebsiteDeliveryLanguage>[]
	}
	export interface WebsiteDeliveryResumeBuilder extends Struct<WebsiteDeliveryResumeBuilder>{

			internshipList(internshipList:Ref<WebsiteDeliveryInternship>[]):Ref<WebsiteDeliveryResumeBuilder>
			basicInfo(basicInfo:Ref<WebsiteDeliveryBasicInfo>):Ref<WebsiteDeliveryResumeBuilder>
			educationList(educationList:Ref<WebsiteDeliveryEducation>[]):Ref<WebsiteDeliveryResumeBuilder>
			selfEvaluation(selfEvaluation:Ref<WebsiteDeliverySelfEvaluation>):Ref<WebsiteDeliveryResumeBuilder>
			careerList(careerList:Ref<WebsiteDeliveryCareer>[]):Ref<WebsiteDeliveryResumeBuilder>
			customizedData(customizedData:Ref<WebsiteDeliveryCustomizedDataParent>[]):Ref<WebsiteDeliveryResumeBuilder>
			resumeAttachmentId(resumeAttachmentId:string):Ref<WebsiteDeliveryResumeBuilder>
			snsList(snsList:Ref<WebsiteDeliverySns>[]):Ref<WebsiteDeliveryResumeBuilder>
			worksList(worksList:Ref<WebsiteDeliveryWorks>[]):Ref<WebsiteDeliveryResumeBuilder>
			awardList(awardList:Ref<WebsiteDeliveryAward>[]):Ref<WebsiteDeliveryResumeBuilder>
			projectList(projectList:Ref<WebsiteDeliveryProject>[]):Ref<WebsiteDeliveryResumeBuilder>
			languageList(languageList:Ref<WebsiteDeliveryLanguage>[]):Ref<WebsiteDeliveryResumeBuilder>
			build():Ref<WebsiteDeliveryResume>
	}
	export interface WebsiteDeliverySelfEvaluation extends Struct<WebsiteDeliverySelfEvaluation>{

			content:Ref<string>
			customizedData:Ref<WebsiteDeliveryCustomizedData>[]
	}
	export interface WebsiteDeliverySelfEvaluationBuilder extends Struct<WebsiteDeliverySelfEvaluationBuilder>{

			content(content:string):Ref<WebsiteDeliverySelfEvaluationBuilder>
			customizedData(customizedData:Ref<WebsiteDeliveryCustomizedData>[]):Ref<WebsiteDeliverySelfEvaluationBuilder>
			build():Ref<WebsiteDeliverySelfEvaluation>
	}
	export interface WebsiteDeliverySns extends Struct<WebsiteDeliverySns>{

			snsType:Ref<int>
			customizedData:Ref<WebsiteDeliveryCustomizedData>[]
			link:Ref<string>
	}
	export interface WebsiteDeliverySnsBuilder extends Struct<WebsiteDeliverySnsBuilder>{

			snsType(snsType:int):Ref<WebsiteDeliverySnsBuilder>
			customizedData(customizedData:Ref<WebsiteDeliveryCustomizedData>[]):Ref<WebsiteDeliverySnsBuilder>
			link(link:string):Ref<WebsiteDeliverySnsBuilder>
			build():Ref<WebsiteDeliverySns>
	}
	export interface WebsiteDeliveryWorks extends Struct<WebsiteDeliveryWorks>{

			desc:Ref<string>
			link:Ref<string>
			attachment:Ref<WebsiteDeliveryWorksAttachment>
			customizedData:Ref<WebsiteDeliveryCustomizedData>[]
	}
	export interface WebsiteDeliveryWorksAttachment extends Struct<WebsiteDeliveryWorksAttachment>{

			fileId:Ref<string>
	}
	export interface WebsiteDeliveryWorksAttachmentBuilder extends Struct<WebsiteDeliveryWorksAttachmentBuilder>{

			fileId(fileId:string):Ref<WebsiteDeliveryWorksAttachmentBuilder>
			build():Ref<WebsiteDeliveryWorksAttachment>
	}
	export interface WebsiteDeliveryWorksBuilder extends Struct<WebsiteDeliveryWorksBuilder>{

			desc(desc:string):Ref<WebsiteDeliveryWorksBuilder>
			link(link:string):Ref<WebsiteDeliveryWorksBuilder>
			attachment(attachment:Ref<WebsiteDeliveryWorksAttachment>):Ref<WebsiteDeliveryWorksBuilder>
			customizedData(customizedData:Ref<WebsiteDeliveryCustomizedData>[]):Ref<WebsiteDeliveryWorksBuilder>
			build():Ref<WebsiteDeliveryWorks>
	}
	export interface WebsiteJobPost extends Struct<WebsiteJobPost>{

			id:Ref<string>
			title:Ref<string>
			jobId:Ref<string>
			jobCode:Ref<string>
			jobExpireTime:Ref<string>
			jobActiveStatus:Ref<int>
			jobProcessType:Ref<int>
			jobRecruitmentType:Ref<IdNameObject>
			jobDepartment:Ref<IdNameObject>
			jobType:Ref<IdNameObject>
			minJobLevel:Ref<IdNameObject>
			maxJobLevel:Ref<IdNameObject>
			address:Ref<CommonAddress>
			minSalary:Ref<string>
			maxSalary:Ref<string>
			requiredDegree:Ref<int>
			experience:Ref<int>
			headcount:Ref<int>
			highLightList:Ref<IdNameObject>[]
			description:Ref<string>
			requirement:Ref<string>
			creator:Ref<IdNameObject>
			createTime:Ref<string>
			modifyTime:Ref<string>
			customizedDataList:Ref<WebsiteJobPostCustomizedData>[]
			jobFunction:Ref<IdNameObject>
			subject:Ref<IdNameObject>
			addressList:Ref<CommonAddress>[]
			targetMajorList:Ref<IdNameObject>[]
	}
	export interface WebsiteJobPostBuilder extends Struct<WebsiteJobPostBuilder>{

			id(id:string):Ref<WebsiteJobPostBuilder>
			title(title:string):Ref<WebsiteJobPostBuilder>
			jobId(jobId:string):Ref<WebsiteJobPostBuilder>
			jobCode(jobCode:string):Ref<WebsiteJobPostBuilder>
			jobExpireTime(jobExpireTime:string):Ref<WebsiteJobPostBuilder>
			jobActiveStatus(jobActiveStatus:int):Ref<WebsiteJobPostBuilder>
			jobProcessType(jobProcessType:int):Ref<WebsiteJobPostBuilder>
			jobRecruitmentType(jobRecruitmentType:Ref<IdNameObject>):Ref<WebsiteJobPostBuilder>
			jobDepartment(jobDepartment:Ref<IdNameObject>):Ref<WebsiteJobPostBuilder>
			jobType(jobType:Ref<IdNameObject>):Ref<WebsiteJobPostBuilder>
			minJobLevel(minJobLevel:Ref<IdNameObject>):Ref<WebsiteJobPostBuilder>
			maxJobLevel(maxJobLevel:Ref<IdNameObject>):Ref<WebsiteJobPostBuilder>
			address(address:Ref<CommonAddress>):Ref<WebsiteJobPostBuilder>
			minSalary(minSalary:string):Ref<WebsiteJobPostBuilder>
			maxSalary(maxSalary:string):Ref<WebsiteJobPostBuilder>
			requiredDegree(requiredDegree:int):Ref<WebsiteJobPostBuilder>
			experience(experience:int):Ref<WebsiteJobPostBuilder>
			headcount(headcount:int):Ref<WebsiteJobPostBuilder>
			highLightList(highLightList:Ref<IdNameObject>[]):Ref<WebsiteJobPostBuilder>
			description(description:string):Ref<WebsiteJobPostBuilder>
			requirement(requirement:string):Ref<WebsiteJobPostBuilder>
			creator(creator:Ref<IdNameObject>):Ref<WebsiteJobPostBuilder>
			createTime(createTime:string):Ref<WebsiteJobPostBuilder>
			modifyTime(modifyTime:string):Ref<WebsiteJobPostBuilder>
			customizedDataList(customizedDataList:Ref<WebsiteJobPostCustomizedData>[]):Ref<WebsiteJobPostBuilder>
			jobFunction(jobFunction:Ref<IdNameObject>):Ref<WebsiteJobPostBuilder>
			subject(subject:Ref<IdNameObject>):Ref<WebsiteJobPostBuilder>
			addressList(addressList:Ref<CommonAddress>[]):Ref<WebsiteJobPostBuilder>
			targetMajorList(targetMajorList:Ref<IdNameObject>[]):Ref<WebsiteJobPostBuilder>
			build():Ref<WebsiteJobPost>
	}
	export interface WebsiteJobPostCustomizedData extends Struct<WebsiteJobPostCustomizedData>{

			objectId:Ref<string>
			name:Ref<I18n>
			objectType:Ref<int>
			value:Ref<WebsiteJobPostCustomizedValue>
	}
	export interface WebsiteJobPostCustomizedDataBuilder extends Struct<WebsiteJobPostCustomizedDataBuilder>{

			objectId(objectId:string):Ref<WebsiteJobPostCustomizedDataBuilder>
			name(name:Ref<I18n>):Ref<WebsiteJobPostCustomizedDataBuilder>
			objectType(objectType:int):Ref<WebsiteJobPostCustomizedDataBuilder>
			value(value:Ref<WebsiteJobPostCustomizedValue>):Ref<WebsiteJobPostCustomizedDataBuilder>
			build():Ref<WebsiteJobPostCustomizedData>
	}
	export interface WebsiteJobPostCustomizedOption extends Struct<WebsiteJobPostCustomizedOption>{

			key:Ref<string>
			name:Ref<I18n>
	}
	export interface WebsiteJobPostCustomizedOptionBuilder extends Struct<WebsiteJobPostCustomizedOptionBuilder>{

			key(key:string):Ref<WebsiteJobPostCustomizedOptionBuilder>
			name(name:Ref<I18n>):Ref<WebsiteJobPostCustomizedOptionBuilder>
			build():Ref<WebsiteJobPostCustomizedOption>
	}
	export interface WebsiteJobPostCustomizedTimeRange extends Struct<WebsiteJobPostCustomizedTimeRange>{

			startTime:Ref<string>
			endTime:Ref<string>
	}
	export interface WebsiteJobPostCustomizedTimeRangeBuilder extends Struct<WebsiteJobPostCustomizedTimeRangeBuilder>{

			startTime(startTime:string):Ref<WebsiteJobPostCustomizedTimeRangeBuilder>
			endTime(endTime:string):Ref<WebsiteJobPostCustomizedTimeRangeBuilder>
			build():Ref<WebsiteJobPostCustomizedTimeRange>
	}
	export interface WebsiteJobPostCustomizedValue extends Struct<WebsiteJobPostCustomizedValue>{

			content:Ref<string>
			option:Ref<WebsiteJobPostCustomizedOption>
			optionList:Ref<WebsiteJobPostCustomizedOption>[]
			timeRange:Ref<WebsiteJobPostCustomizedTimeRange>
			time:Ref<string>
			number:Ref<string>
	}
	export interface WebsiteJobPostCustomizedValueBuilder extends Struct<WebsiteJobPostCustomizedValueBuilder>{

			content(content:string):Ref<WebsiteJobPostCustomizedValueBuilder>
			option(option:Ref<WebsiteJobPostCustomizedOption>):Ref<WebsiteJobPostCustomizedValueBuilder>
			optionList(optionList:Ref<WebsiteJobPostCustomizedOption>[]):Ref<WebsiteJobPostCustomizedValueBuilder>
			timeRange(timeRange:Ref<WebsiteJobPostCustomizedTimeRange>):Ref<WebsiteJobPostCustomizedValueBuilder>
			time(time:string):Ref<WebsiteJobPostCustomizedValueBuilder>
			number(number:string):Ref<WebsiteJobPostCustomizedValueBuilder>
			build():Ref<WebsiteJobPostCustomizedValue>
	}
	export interface WebsiteUser extends Struct<WebsiteUser>{

			userId:Ref<string>
			name:Ref<string>
			email:Ref<string>
			externalId:Ref<string>
			mobile:Ref<string>
			mobileCountryCode:Ref<string>
	}
	export interface WebsiteUserBuilder extends Struct<WebsiteUserBuilder>{

			userId(userId:string):Ref<WebsiteUserBuilder>
			name(name:string):Ref<WebsiteUserBuilder>
			email(email:string):Ref<WebsiteUserBuilder>
			externalId(externalId:string):Ref<WebsiteUserBuilder>
			mobile(mobile:string):Ref<WebsiteUserBuilder>
			mobileCountryCode(mobileCountryCode:string):Ref<WebsiteUserBuilder>
			build():Ref<WebsiteUser>
	}
	export interface WithdrawReferralAccountPathReqBodyBuilder extends Struct<WithdrawReferralAccountPathReqBodyBuilder>{

			withdrawBonusType(withdrawBonusType:int[]):Ref<WithdrawReferralAccountPathReqBodyBuilder>
			externalOrderId(externalOrderId:string):Ref<WithdrawReferralAccountPathReqBodyBuilder>
			build():Ref<WithdrawReferralAccountReqBody>
	}
	export interface WithdrawReferralAccountReq extends Struct<WithdrawReferralAccountReq>{

			body:Ref<WithdrawReferralAccountReqBody>
	}
	export interface WithdrawReferralAccountReqBody extends Struct<WithdrawReferralAccountReqBody>{

			withdrawBonusType:int[]
			externalOrderId:Ref<string>
	}
	export interface WithdrawReferralAccountReqBodyBuilder extends Struct<WithdrawReferralAccountReqBodyBuilder>{

			withdrawBonusType(withdrawBonusType:int[]):Ref<WithdrawReferralAccountReqBodyBuilder>
			externalOrderId(externalOrderId:string):Ref<WithdrawReferralAccountReqBodyBuilder>
			build():Ref<WithdrawReferralAccountReqBody>
	}
	export interface WithdrawReferralAccountReqBuilder extends Struct<WithdrawReferralAccountReqBuilder>{

			referralAccountId(referralAccountId:string):Ref<WithdrawReferralAccountReqBuilder>
			body(body:Ref<WithdrawReferralAccountReqBody>):Ref<WithdrawReferralAccountReqBuilder>
			build():Ref<WithdrawReferralAccountReq>
	}
	export interface WithdrawReferralAccountResp extends Struct<WithdrawReferralAccountResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<WithdrawReferralAccountRespData>
			success():bool
	}
	export interface WithdrawReferralAccountRespData extends Struct<WithdrawReferralAccountRespData>{

			externalOrderId:Ref<string>
			transTime:Ref<string>
			withdrawalDetails:Ref<BonusAmount>
	}
	export interface WorksInfo extends Struct<WorksInfo>{

			attachmentId:Ref<string>
			desc:Ref<string>
			link:Ref<string>
	}
	export interface WorksInfoBuilder extends Struct<WorksInfoBuilder>{

			attachmentId(attachmentId:string):Ref<WorksInfoBuilder>
			desc(desc:string):Ref<WorksInfoBuilder>
			link(link:string):Ref<WorksInfoBuilder>
			build():Ref<WorksInfo>
	}
	export function emptyTalentCombinedAwardInfo():TalentCombinedAwardInfo
	export function emptyRefTalentCombinedAwardInfo():Ref<TalentCombinedAwardInfo>
	export function refOfTalentCombinedAwardInfo(x:TalentCombinedAwardInfo,v:Ref<TalentCombinedAwardInfo>)
	export function unRefTalentCombinedAwardInfo(v:Ref<TalentCombinedAwardInfo>):TalentCombinedAwardInfo
	export function emptyOfferSchemaDetail():OfferSchemaDetail
	export function emptyRefOfferSchemaDetail():Ref<OfferSchemaDetail>
	export function refOfOfferSchemaDetail(x:OfferSchemaDetail,v:Ref<OfferSchemaDetail>)
	export function unRefOfferSchemaDetail(v:Ref<OfferSchemaDetail>):OfferSchemaDetail
	export function emptyDeleteTripartiteAgreementResp():DeleteTripartiteAgreementResp
	export function emptyRefDeleteTripartiteAgreementResp():Ref<DeleteTripartiteAgreementResp>
	export function refOfDeleteTripartiteAgreementResp(x:DeleteTripartiteAgreementResp,v:Ref<DeleteTripartiteAgreementResp>)
	export function unRefDeleteTripartiteAgreementResp(v:Ref<DeleteTripartiteAgreementResp>):DeleteTripartiteAgreementResp
	export function emptyInterviewAppointmentConfig():InterviewAppointmentConfig
	export function emptyRefInterviewAppointmentConfig():Ref<InterviewAppointmentConfig>
	export function refOfInterviewAppointmentConfig(x:InterviewAppointmentConfig,v:Ref<InterviewAppointmentConfig>)
	export function unRefInterviewAppointmentConfig(v:Ref<InterviewAppointmentConfig>):InterviewAppointmentConfig
	export function emptyListJobRespData():ListJobRespData
	export function emptyRefListJobRespData():Ref<ListJobRespData>
	export function refOfListJobRespData(x:ListJobRespData,v:Ref<ListJobRespData>)
	export function unRefListJobRespData(v:Ref<ListJobRespData>):ListJobRespData
	export function emptyListJobFunctionResp():ListJobFunctionResp
	export function emptyRefListJobFunctionResp():Ref<ListJobFunctionResp>
	export function refOfListJobFunctionResp(x:ListJobFunctionResp,v:Ref<ListJobFunctionResp>)
	export function unRefListJobFunctionResp(v:Ref<ListJobFunctionResp>):ListJobFunctionResp
	export function emptyJobConfigResult():JobConfigResult
	export function emptyRefJobConfigResult():Ref<JobConfigResult>
	export function refOfJobConfigResult(x:JobConfigResult,v:Ref<JobConfigResult>)
	export function unRefJobConfigResult(v:Ref<JobConfigResult>):JobConfigResult
	export function emptyDeleteWebsiteChannelReq():DeleteWebsiteChannelReq
	export function emptyRefDeleteWebsiteChannelReq():Ref<DeleteWebsiteChannelReq>
	export function refOfDeleteWebsiteChannelReq(x:DeleteWebsiteChannelReq,v:Ref<DeleteWebsiteChannelReq>)
	export function unRefDeleteWebsiteChannelReq(v:Ref<DeleteWebsiteChannelReq>):DeleteWebsiteChannelReq
	export function emptyOfferApplyFormConfigFormulaInfo():OfferApplyFormConfigFormulaInfo
	export function emptyRefOfferApplyFormConfigFormulaInfo():Ref<OfferApplyFormConfigFormulaInfo>
	export function refOfOfferApplyFormConfigFormulaInfo(x:OfferApplyFormConfigFormulaInfo,v:Ref<OfferApplyFormConfigFormulaInfo>)
	export function unRefOfferApplyFormConfigFormulaInfo(v:Ref<OfferApplyFormConfigFormulaInfo>):OfferApplyFormConfigFormulaInfo
	export function emptyListInterviewRegistrationSchemaReq():ListInterviewRegistrationSchemaReq
	export function emptyRefListInterviewRegistrationSchemaReq():Ref<ListInterviewRegistrationSchemaReq>
	export function refOfListInterviewRegistrationSchemaReq(x:ListInterviewRegistrationSchemaReq,v:Ref<ListInterviewRegistrationSchemaReq>)
	export function unRefListInterviewRegistrationSchemaReq(v:Ref<ListInterviewRegistrationSchemaReq>):ListInterviewRegistrationSchemaReq
	export function emptyJobLevel():JobLevel
	export function emptyRefJobLevel():Ref<JobLevel>
	export function refOfJobLevel(x:JobLevel,v:Ref<JobLevel>)
	export function unRefJobLevel(v:Ref<JobLevel>):JobLevel
	export function emptyOfferApplyFormModuleInfo():OfferApplyFormModuleInfo
	export function emptyRefOfferApplyFormModuleInfo():Ref<OfferApplyFormModuleInfo>
	export function refOfOfferApplyFormModuleInfo(x:OfferApplyFormModuleInfo,v:Ref<OfferApplyFormModuleInfo>)
	export function unRefOfferApplyFormModuleInfo(v:Ref<OfferApplyFormModuleInfo>):OfferApplyFormModuleInfo
	export function emptyPreviewAttachmentRespData():PreviewAttachmentRespData
	export function emptyRefPreviewAttachmentRespData():Ref<PreviewAttachmentRespData>
	export function refOfPreviewAttachmentRespData(x:PreviewAttachmentRespData,v:Ref<PreviewAttachmentRespData>)
	export function unRefPreviewAttachmentRespData(v:Ref<PreviewAttachmentRespData>):PreviewAttachmentRespData
	export function emptyOfferCustomField():OfferCustomField
	export function emptyRefOfferCustomField():Ref<OfferCustomField>
	export function refOfOfferCustomField(x:OfferCustomField,v:Ref<OfferCustomField>)
	export function unRefOfferCustomField(v:Ref<OfferCustomField>):OfferCustomField
	export function emptyApplicationWebsiteResumeSource():ApplicationWebsiteResumeSource
	export function emptyRefApplicationWebsiteResumeSource():Ref<ApplicationWebsiteResumeSource>
	export function refOfApplicationWebsiteResumeSource(x:ApplicationWebsiteResumeSource,v:Ref<ApplicationWebsiteResumeSource>)
	export function unRefApplicationWebsiteResumeSource(v:Ref<ApplicationWebsiteResumeSource>):ApplicationWebsiteResumeSource
	export function emptyGetJobManagerRespData():GetJobManagerRespData
	export function emptyRefGetJobManagerRespData():Ref<GetJobManagerRespData>
	export function refOfGetJobManagerRespData(x:GetJobManagerRespData,v:Ref<GetJobManagerRespData>)
	export function unRefGetJobManagerRespData(v:Ref<GetJobManagerRespData>):GetJobManagerRespData
	export function emptyInterviewAssessmentTemplateArgs():InterviewAssessmentTemplateArgs
	export function emptyRefInterviewAssessmentTemplateArgs():Ref<InterviewAssessmentTemplateArgs>
	export function refOfInterviewAssessmentTemplateArgs(x:InterviewAssessmentTemplateArgs,v:Ref<InterviewAssessmentTemplateArgs>)
	export function unRefInterviewAssessmentTemplateArgs(v:Ref<InterviewAssessmentTemplateArgs>):InterviewAssessmentTemplateArgs
	export function emptyInterviewFeedbackFormModule():InterviewFeedbackFormModule
	export function emptyRefInterviewFeedbackFormModule():Ref<InterviewFeedbackFormModule>
	export function refOfInterviewFeedbackFormModule(x:InterviewFeedbackFormModule,v:Ref<InterviewFeedbackFormModule>)
	export function unRefInterviewFeedbackFormModule(v:Ref<InterviewFeedbackFormModule>):InterviewFeedbackFormModule
	export function emptyCancelEcoBackgroundCheckReq():CancelEcoBackgroundCheckReq
	export function emptyRefCancelEcoBackgroundCheckReq():Ref<CancelEcoBackgroundCheckReq>
	export function refOfCancelEcoBackgroundCheckReq(x:CancelEcoBackgroundCheckReq,v:Ref<CancelEcoBackgroundCheckReq>)
	export function unRefCancelEcoBackgroundCheckReq(v:Ref<CancelEcoBackgroundCheckReq>):CancelEcoBackgroundCheckReq
	export function emptyPatchExternalInterviewAssessmentResp():PatchExternalInterviewAssessmentResp
	export function emptyRefPatchExternalInterviewAssessmentResp():Ref<PatchExternalInterviewAssessmentResp>
	export function refOfPatchExternalInterviewAssessmentResp(x:PatchExternalInterviewAssessmentResp,v:Ref<PatchExternalInterviewAssessmentResp>)
	export function unRefPatchExternalInterviewAssessmentResp(v:Ref<PatchExternalInterviewAssessmentResp>):PatchExternalInterviewAssessmentResp
	export function emptyApplicationPrehireOfferBasic():ApplicationPrehireOfferBasic
	export function emptyRefApplicationPrehireOfferBasic():Ref<ApplicationPrehireOfferBasic>
	export function refOfApplicationPrehireOfferBasic(x:ApplicationPrehireOfferBasic,v:Ref<ApplicationPrehireOfferBasic>)
	export function unRefApplicationPrehireOfferBasic(v:Ref<ApplicationPrehireOfferBasic>):ApplicationPrehireOfferBasic
	export function emptyListExamMarkingTaskResp():ListExamMarkingTaskResp
	export function emptyRefListExamMarkingTaskResp():Ref<ListExamMarkingTaskResp>
	export function refOfListExamMarkingTaskResp(x:ListExamMarkingTaskResp,v:Ref<ListExamMarkingTaskResp>)
	export function unRefListExamMarkingTaskResp(v:Ref<ListExamMarkingTaskResp>):ListExamMarkingTaskResp
	export function emptyListInterviewRecordIterator():ListInterviewRecordIterator
	export function emptyRefListInterviewRecordIterator():Ref<ListInterviewRecordIterator>
	export function refOfListInterviewRecordIterator(x:ListInterviewRecordIterator,v:Ref<ListInterviewRecordIterator>)
	export function unRefListInterviewRecordIterator(v:Ref<ListInterviewRecordIterator>):ListInterviewRecordIterator
	export function emptyListJobSchemaReq():ListJobSchemaReq
	export function emptyRefListJobSchemaReq():Ref<ListJobSchemaReq>
	export function refOfListJobSchemaReq(x:ListJobSchemaReq,v:Ref<ListJobSchemaReq>)
	export function unRefListJobSchemaReq(v:Ref<ListJobSchemaReq>):ListJobSchemaReq
	export function emptyJobFunction():JobFunction
	export function emptyRefJobFunction():Ref<JobFunction>
	export function refOfJobFunction(x:JobFunction,v:Ref<JobFunction>)
	export function unRefJobFunction(v:Ref<JobFunction>):JobFunction
	export function emptyQuestionnaire():Questionnaire
	export function emptyRefQuestionnaire():Ref<Questionnaire>
	export function refOfQuestionnaire(x:Questionnaire,v:Ref<Questionnaire>)
	export function unRefQuestionnaire(v:Ref<Questionnaire>):Questionnaire
	export function emptyApplicationOfferBasicInfoUser():ApplicationOfferBasicInfoUser
	export function emptyRefApplicationOfferBasicInfoUser():Ref<ApplicationOfferBasicInfoUser>
	export function refOfApplicationOfferBasicInfoUser(x:ApplicationOfferBasicInfoUser,v:Ref<ApplicationOfferBasicInfoUser>)
	export function unRefApplicationOfferBasicInfoUser(v:Ref<ApplicationOfferBasicInfoUser>):ApplicationOfferBasicInfoUser
	export function emptyJobProcessesStage():JobProcessesStage
	export function emptyRefJobProcessesStage():Ref<JobProcessesStage>
	export function refOfJobProcessesStage(x:JobProcessesStage,v:Ref<JobProcessesStage>)
	export function unRefJobProcessesStage(v:Ref<JobProcessesStage>):JobProcessesStage
	export function emptyTalentInterview():TalentInterview
	export function emptyRefTalentInterview():Ref<TalentInterview>
	export function refOfTalentInterview(x:TalentInterview,v:Ref<TalentInterview>)
	export function unRefTalentInterview(v:Ref<TalentInterview>):TalentInterview
	export function emptyInterviewTask():InterviewTask
	export function emptyRefInterviewTask():Ref<InterviewTask>
	export function refOfInterviewTask(x:InterviewTask,v:Ref<InterviewTask>)
	export function unRefInterviewTask(v:Ref<InterviewTask>):InterviewTask
	export function emptyRecruiterJobResp():RecruiterJobResp
	export function emptyRefRecruiterJobResp():Ref<RecruiterJobResp>
	export function refOfRecruiterJobResp(x:RecruiterJobResp,v:Ref<RecruiterJobResp>)
	export function unRefRecruiterJobResp(v:Ref<RecruiterJobResp>):RecruiterJobResp
	export function emptyScoreCalculationConfig():ScoreCalculationConfig
	export function emptyRefScoreCalculationConfig():Ref<ScoreCalculationConfig>
	export function refOfScoreCalculationConfig(x:ScoreCalculationConfig,v:Ref<ScoreCalculationConfig>)
	export function unRefScoreCalculationConfig(v:Ref<ScoreCalculationConfig>):ScoreCalculationConfig
	export function emptyListResumeSourceResp():ListResumeSourceResp
	export function emptyRefListResumeSourceResp():Ref<ListResumeSourceResp>
	export function refOfListResumeSourceResp(x:ListResumeSourceResp,v:Ref<ListResumeSourceResp>)
	export function unRefListResumeSourceResp(v:Ref<ListResumeSourceResp>):ListResumeSourceResp
	export function emptyMasterLocationAddressInfo():MasterLocationAddressInfo
	export function emptyRefMasterLocationAddressInfo():Ref<MasterLocationAddressInfo>
	export function refOfMasterLocationAddressInfo(x:MasterLocationAddressInfo,v:Ref<MasterLocationAddressInfo>)
	export function unRefMasterLocationAddressInfo(v:Ref<MasterLocationAddressInfo>):MasterLocationAddressInfo
	export function emptyProtectAgencyResp():ProtectAgencyResp
	export function emptyRefProtectAgencyResp():Ref<ProtectAgencyResp>
	export function refOfProtectAgencyResp(x:ProtectAgencyResp,v:Ref<ProtectAgencyResp>)
	export function unRefProtectAgencyResp(v:Ref<ProtectAgencyResp>):ProtectAgencyResp
	export function emptyListExternalApplicationReq():ListExternalApplicationReq
	export function emptyRefListExternalApplicationReq():Ref<ListExternalApplicationReq>
	export function refOfListExternalApplicationReq(x:ListExternalApplicationReq,v:Ref<ListExternalApplicationReq>)
	export function unRefListExternalApplicationReq(v:Ref<ListExternalApplicationReq>):ListExternalApplicationReq
	export function emptyGetJobResp():GetJobResp
	export function emptyRefGetJobResp():Ref<GetJobResp>
	export function refOfGetJobResp(x:GetJobResp,v:Ref<GetJobResp>)
	export function unRefGetJobResp(v:Ref<GetJobResp>):GetJobResp
	export function emptyTerminationReason():TerminationReason
	export function emptyRefTerminationReason():Ref<TerminationReason>
	export function refOfTerminationReason(x:TerminationReason,v:Ref<TerminationReason>)
	export function unRefTerminationReason(v:Ref<TerminationReason>):TerminationReason
	export function emptyUserId():UserId
	export function emptyRefUserId():Ref<UserId>
	export function refOfUserId(x:UserId,v:Ref<UserId>)
	export function unRefUserId(v:Ref<UserId>):UserId
	export function emptyCreateApplicationReqBody():CreateApplicationReqBody
	export function emptyRefCreateApplicationReqBody():Ref<CreateApplicationReqBody>
	export function refOfCreateApplicationReqBody(x:CreateApplicationReqBody,v:Ref<CreateApplicationReqBody>)
	export function unRefCreateApplicationReqBody(v:Ref<CreateApplicationReqBody>):CreateApplicationReqBody
	export function emptyListTalentRespData():ListTalentRespData
	export function emptyRefListTalentRespData():Ref<ListTalentRespData>
	export function refOfListTalentRespData(x:ListTalentRespData,v:Ref<ListTalentRespData>)
	export function unRefListTalentRespData(v:Ref<ListTalentRespData>):ListTalentRespData
	export function emptyWebsiteDeliveryProject():WebsiteDeliveryProject
	export function emptyRefWebsiteDeliveryProject():Ref<WebsiteDeliveryProject>
	export function refOfWebsiteDeliveryProject(x:WebsiteDeliveryProject,v:Ref<WebsiteDeliveryProject>)
	export function unRefWebsiteDeliveryProject(v:Ref<WebsiteDeliveryProject>):WebsiteDeliveryProject
	export function emptyContractPeriodInfo():ContractPeriodInfo
	export function emptyRefContractPeriodInfo():Ref<ContractPeriodInfo>
	export function refOfContractPeriodInfo(x:ContractPeriodInfo,v:Ref<ContractPeriodInfo>)
	export function unRefContractPeriodInfo(v:Ref<ContractPeriodInfo>):ContractPeriodInfo
	export function emptyListInterviewFeedbackFormIterator():ListInterviewFeedbackFormIterator
	export function emptyRefListInterviewFeedbackFormIterator():Ref<ListInterviewFeedbackFormIterator>
	export function refOfListInterviewFeedbackFormIterator(x:ListInterviewFeedbackFormIterator,v:Ref<ListInterviewFeedbackFormIterator>)
	export function unRefListInterviewFeedbackFormIterator(v:Ref<ListInterviewFeedbackFormIterator>):ListInterviewFeedbackFormIterator
	export function emptyOfferSchema():OfferSchema
	export function emptyRefOfferSchema():Ref<OfferSchema>
	export function refOfOfferSchema(x:OfferSchema,v:Ref<OfferSchema>)
	export function unRefOfferSchema(v:Ref<OfferSchema>):OfferSchema
	export function emptyCombinedCreateTalentReq():CombinedCreateTalentReq
	export function emptyRefCombinedCreateTalentReq():Ref<CombinedCreateTalentReq>
	export function refOfCombinedCreateTalentReq(x:CombinedCreateTalentReq,v:Ref<CombinedCreateTalentReq>)
	export function unRefCombinedCreateTalentReq(v:Ref<CombinedCreateTalentReq>):CombinedCreateTalentReq
	export function emptyListJobRequirementSchemaResp():ListJobRequirementSchemaResp
	export function emptyRefListJobRequirementSchemaResp():Ref<ListJobRequirementSchemaResp>
	export function refOfListJobRequirementSchemaResp(x:ListJobRequirementSchemaResp,v:Ref<ListJobRequirementSchemaResp>)
	export function unRefListJobRequirementSchemaResp(v:Ref<ListJobRequirementSchemaResp>):ListJobRequirementSchemaResp
	export function emptySiteResumeCompetition():SiteResumeCompetition
	export function emptyRefSiteResumeCompetition():Ref<SiteResumeCompetition>
	export function refOfSiteResumeCompetition(x:SiteResumeCompetition,v:Ref<SiteResumeCompetition>)
	export function unRefSiteResumeCompetition(v:Ref<SiteResumeCompetition>):SiteResumeCompetition
	export function emptyTalentLanguageInfo():TalentLanguageInfo
	export function emptyRefTalentLanguageInfo():Ref<TalentLanguageInfo>
	export function refOfTalentLanguageInfo(x:TalentLanguageInfo,v:Ref<TalentLanguageInfo>)
	export function unRefTalentLanguageInfo(v:Ref<TalentLanguageInfo>):TalentLanguageInfo
	export function emptyTalentWorksInfo():TalentWorksInfo
	export function emptyRefTalentWorksInfo():Ref<TalentWorksInfo>
	export function refOfTalentWorksInfo(x:TalentWorksInfo,v:Ref<TalentWorksInfo>)
	export function unRefTalentWorksInfo(v:Ref<TalentWorksInfo>):TalentWorksInfo
	export function emptyGetInterviewRecordAttachmentRespData():GetInterviewRecordAttachmentRespData
	export function emptyRefGetInterviewRecordAttachmentRespData():Ref<GetInterviewRecordAttachmentRespData>
	export function refOfGetInterviewRecordAttachmentRespData(x:GetInterviewRecordAttachmentRespData,v:Ref<GetInterviewRecordAttachmentRespData>)
	export function unRefGetInterviewRecordAttachmentRespData(v:Ref<GetInterviewRecordAttachmentRespData>):GetInterviewRecordAttachmentRespData
	export function emptyOfferApplicationReq():OfferApplicationReq
	export function emptyRefOfferApplicationReq():Ref<OfferApplicationReq>
	export function refOfOfferApplicationReq(x:OfferApplicationReq,v:Ref<OfferApplicationReq>)
	export function unRefOfferApplicationReq(v:Ref<OfferApplicationReq>):OfferApplicationReq
	export function emptyApplicationOfferBasicInfoCustomizedObject():ApplicationOfferBasicInfoCustomizedObject
	export function emptyRefApplicationOfferBasicInfoCustomizedObject():Ref<ApplicationOfferBasicInfoCustomizedObject>
	export function refOfApplicationOfferBasicInfoCustomizedObject(x:ApplicationOfferBasicInfoCustomizedObject,v:Ref<ApplicationOfferBasicInfoCustomizedObject>)
	export function unRefApplicationOfferBasicInfoCustomizedObject(v:Ref<ApplicationOfferBasicInfoCustomizedObject>):ApplicationOfferBasicInfoCustomizedObject
	export function emptyJobRequirementSchema():JobRequirementSchema
	export function emptyRefJobRequirementSchema():Ref<JobRequirementSchema>
	export function refOfJobRequirementSchema(x:JobRequirementSchema,v:Ref<JobRequirementSchema>)
	export function unRefJobRequirementSchema(v:Ref<JobRequirementSchema>):JobRequirementSchema
	export function emptyJobSchema():JobSchema
	export function emptyRefJobSchema():Ref<JobSchema>
	export function refOfJobSchema(x:JobSchema,v:Ref<JobSchema>)
	export function unRefJobSchema(v:Ref<JobSchema>):JobSchema
	export function emptyListInterviewTaskResp():ListInterviewTaskResp
	export function emptyRefListInterviewTaskResp():Ref<ListInterviewTaskResp>
	export function refOfListInterviewTaskResp(x:ListInterviewTaskResp,v:Ref<ListInterviewTaskResp>)
	export function unRefListInterviewTaskResp(v:Ref<ListInterviewTaskResp>):ListInterviewTaskResp
	export function emptyResumeSource():ResumeSource
	export function emptyRefResumeSource():Ref<ResumeSource>
	export function refOfResumeSource(x:ResumeSource,v:Ref<ResumeSource>)
	export function unRefResumeSource(v:Ref<ResumeSource>):ResumeSource
	export function emptyDepartmentId():DepartmentId
	export function emptyRefDepartmentId():Ref<DepartmentId>
	export function refOfDepartmentId(x:DepartmentId,v:Ref<DepartmentId>)
	export function unRefDepartmentId(v:Ref<DepartmentId>):DepartmentId
	export function emptyApplicationPrehire():ApplicationPrehire
	export function emptyRefApplicationPrehire():Ref<ApplicationPrehire>
	export function refOfApplicationPrehire(x:ApplicationPrehire,v:Ref<ApplicationPrehire>)
	export function unRefApplicationPrehire(v:Ref<ApplicationPrehire>):ApplicationPrehire
	export function emptyWebsiteDeliveryWorks():WebsiteDeliveryWorks
	export function emptyRefWebsiteDeliveryWorks():Ref<WebsiteDeliveryWorks>
	export function refOfWebsiteDeliveryWorks(x:WebsiteDeliveryWorks,v:Ref<WebsiteDeliveryWorks>)
	export function unRefWebsiteDeliveryWorks(v:Ref<WebsiteDeliveryWorks>):WebsiteDeliveryWorks
	export function emptyListTerminationReasonResp():ListTerminationReasonResp
	export function emptyRefListTerminationReasonResp():Ref<ListTerminationReasonResp>
	export function refOfListTerminationReasonResp(x:ListTerminationReasonResp,v:Ref<ListTerminationReasonResp>)
	export function unRefListTerminationReasonResp(v:Ref<ListTerminationReasonResp>):ListTerminationReasonResp
	export function emptyLocationCountry():LocationCountry
	export function emptyRefLocationCountry():Ref<LocationCountry>
	export function refOfLocationCountry(x:LocationCountry,v:Ref<LocationCountry>)
	export function unRefLocationCountry(v:Ref<LocationCountry>):LocationCountry
	export function emptyApplicationBasicInfo():ApplicationBasicInfo
	export function emptyRefApplicationBasicInfo():Ref<ApplicationBasicInfo>
	export function refOfApplicationBasicInfo(x:ApplicationBasicInfo,v:Ref<ApplicationBasicInfo>)
	export function unRefApplicationBasicInfo(v:Ref<ApplicationBasicInfo>):ApplicationBasicInfo
	export function emptyCertificateInfo():CertificateInfo
	export function emptyRefCertificateInfo():Ref<CertificateInfo>
	export function refOfCertificateInfo(x:CertificateInfo,v:Ref<CertificateInfo>)
	export function unRefCertificateInfo(v:Ref<CertificateInfo>):CertificateInfo
	export function emptyCombinedUpdateJobReq():CombinedUpdateJobReq
	export function emptyRefCombinedUpdateJobReq():Ref<CombinedUpdateJobReq>
	export function refOfCombinedUpdateJobReq(x:CombinedUpdateJobReq,v:Ref<CombinedUpdateJobReq>)
	export function unRefCombinedUpdateJobReq(v:Ref<CombinedUpdateJobReq>):CombinedUpdateJobReq
	export function emptyExternalInterviewAssessmentDimension():ExternalInterviewAssessmentDimension
	export function emptyRefExternalInterviewAssessmentDimension():Ref<ExternalInterviewAssessmentDimension>
	export function refOfExternalInterviewAssessmentDimension(x:ExternalInterviewAssessmentDimension,v:Ref<ExternalInterviewAssessmentDimension>)
	export function unRefExternalInterviewAssessmentDimension(v:Ref<ExternalInterviewAssessmentDimension>):ExternalInterviewAssessmentDimension
	export function emptyListJobRequirementSchemaRespData():ListJobRequirementSchemaRespData
	export function emptyRefListJobRequirementSchemaRespData():Ref<ListJobRequirementSchemaRespData>
	export function refOfListJobRequirementSchemaRespData(x:ListJobRequirementSchemaRespData,v:Ref<ListJobRequirementSchemaRespData>)
	export function unRefListJobRequirementSchemaRespData(v:Ref<ListJobRequirementSchemaRespData>):ListJobRequirementSchemaRespData
	export function emptyInterviewer():Interviewer
	export function emptyRefInterviewer():Ref<Interviewer>
	export function refOfInterviewer(x:Interviewer,v:Ref<Interviewer>)
	export function unRefInterviewer(v:Ref<Interviewer>):Interviewer
	export function emptyAppliTalentEducationInfo():AppliTalentEducationInfo
	export function emptyRefAppliTalentEducationInfo():Ref<AppliTalentEducationInfo>
	export function refOfAppliTalentEducationInfo(x:AppliTalentEducationInfo,v:Ref<AppliTalentEducationInfo>)
	export function unRefAppliTalentEducationInfo(v:Ref<AppliTalentEducationInfo>):AppliTalentEducationInfo
	export function emptyGetReferralWebsiteJobPostReq():GetReferralWebsiteJobPostReq
	export function emptyRefGetReferralWebsiteJobPostReq():Ref<GetReferralWebsiteJobPostReq>
	export function refOfGetReferralWebsiteJobPostReq(x:GetReferralWebsiteJobPostReq,v:Ref<GetReferralWebsiteJobPostReq>)
	export function unRefGetReferralWebsiteJobPostReq(v:Ref<GetReferralWebsiteJobPostReq>):GetReferralWebsiteJobPostReq
	export function emptyGetWebsiteDeliveryTaskRespData():GetWebsiteDeliveryTaskRespData
	export function emptyRefGetWebsiteDeliveryTaskRespData():Ref<GetWebsiteDeliveryTaskRespData>
	export function refOfGetWebsiteDeliveryTaskRespData(x:GetWebsiteDeliveryTaskRespData,v:Ref<GetWebsiteDeliveryTaskRespData>)
	export function unRefGetWebsiteDeliveryTaskRespData(v:Ref<GetWebsiteDeliveryTaskRespData>):GetWebsiteDeliveryTaskRespData
	export function emptyInterviewDimensionOption():InterviewDimensionOption
	export function emptyRefInterviewDimensionOption():Ref<InterviewDimensionOption>
	export function refOfInterviewDimensionOption(x:InterviewDimensionOption,v:Ref<InterviewDimensionOption>)
	export function unRefInterviewDimensionOption(v:Ref<InterviewDimensionOption>):InterviewDimensionOption
	export function emptyCreateByResumeWebsiteDeliveryReq():CreateByResumeWebsiteDeliveryReq
	export function emptyRefCreateByResumeWebsiteDeliveryReq():Ref<CreateByResumeWebsiteDeliveryReq>
	export function refOfCreateByResumeWebsiteDeliveryReq(x:CreateByResumeWebsiteDeliveryReq,v:Ref<CreateByResumeWebsiteDeliveryReq>)
	export function unRefCreateByResumeWebsiteDeliveryReq(v:Ref<CreateByResumeWebsiteDeliveryReq>):CreateByResumeWebsiteDeliveryReq
	export function emptyGetEmployeeReq():GetEmployeeReq
	export function emptyRefGetEmployeeReq():Ref<GetEmployeeReq>
	export function refOfGetEmployeeReq(x:GetEmployeeReq,v:Ref<GetEmployeeReq>)
	export function unRefGetEmployeeReq(v:Ref<GetEmployeeReq>):GetEmployeeReq
	export function emptyTalentResumeSource():TalentResumeSource
	export function emptyRefTalentResumeSource():Ref<TalentResumeSource>
	export function refOfTalentResumeSource(x:TalentResumeSource,v:Ref<TalentResumeSource>)
	export function unRefTalentResumeSource(v:Ref<TalentResumeSource>):TalentResumeSource
	export function emptyTalentSchemaOption():TalentSchemaOption
	export function emptyRefTalentSchemaOption():Ref<TalentSchemaOption>
	export function refOfTalentSchemaOption(x:TalentSchemaOption,v:Ref<TalentSchemaOption>)
	export function unRefTalentSchemaOption(v:Ref<TalentSchemaOption>):TalentSchemaOption
	export function emptyCreateExternalBackgroundCheckRespData():CreateExternalBackgroundCheckRespData
	export function emptyRefCreateExternalBackgroundCheckRespData():Ref<CreateExternalBackgroundCheckRespData>
	export function refOfCreateExternalBackgroundCheckRespData(x:CreateExternalBackgroundCheckRespData,v:Ref<CreateExternalBackgroundCheckRespData>)
	export function unRefCreateExternalBackgroundCheckRespData(v:Ref<CreateExternalBackgroundCheckRespData>):CreateExternalBackgroundCheckRespData
	export function emptyQueryTalentObjectRespData():QueryTalentObjectRespData
	export function emptyRefQueryTalentObjectRespData():Ref<QueryTalentObjectRespData>
	export function refOfQueryTalentObjectRespData(x:QueryTalentObjectRespData,v:Ref<QueryTalentObjectRespData>)
	export function unRefQueryTalentObjectRespData(v:Ref<QueryTalentObjectRespData>):QueryTalentObjectRespData
	export function emptyUpdateOfferCustomFieldReq():UpdateOfferCustomFieldReq
	export function emptyRefUpdateOfferCustomFieldReq():Ref<UpdateOfferCustomFieldReq>
	export function refOfUpdateOfferCustomFieldReq(x:UpdateOfferCustomFieldReq,v:Ref<UpdateOfferCustomFieldReq>)
	export function unRefUpdateOfferCustomFieldReq(v:Ref<UpdateOfferCustomFieldReq>):UpdateOfferCustomFieldReq
	export function emptySiteJobPostSearchInfo():SiteJobPostSearchInfo
	export function emptyRefSiteJobPostSearchInfo():Ref<SiteJobPostSearchInfo>
	export function refOfSiteJobPostSearchInfo(x:SiteJobPostSearchInfo,v:Ref<SiteJobPostSearchInfo>)
	export function unRefSiteJobPostSearchInfo(v:Ref<SiteJobPostSearchInfo>):SiteJobPostSearchInfo
	export function emptyCreateOfferRespData():CreateOfferRespData
	export function emptyRefCreateOfferRespData():Ref<CreateOfferRespData>
	export function refOfCreateOfferRespData(x:CreateOfferRespData,v:Ref<CreateOfferRespData>)
	export function unRefCreateOfferRespData(v:Ref<CreateOfferRespData>):CreateOfferRespData
	export function emptyTalentBatchInfo():TalentBatchInfo
	export function emptyRefTalentBatchInfo():Ref<TalentBatchInfo>
	export function refOfTalentBatchInfo(x:TalentBatchInfo,v:Ref<TalentBatchInfo>)
	export function unRefTalentBatchInfo(v:Ref<TalentBatchInfo>):TalentBatchInfo
	export function emptyNationality():Nationality
	export function emptyRefNationality():Ref<Nationality>
	export function refOfNationality(x:Nationality,v:Ref<Nationality>)
	export function unRefNationality(v:Ref<Nationality>):Nationality
	export function emptyListJobResp():ListJobResp
	export function emptyRefListJobResp():Ref<ListJobResp>
	export function refOfListJobResp(x:ListJobResp,v:Ref<ListJobResp>)
	export function unRefListJobResp(v:Ref<ListJobResp>):ListJobResp
	export function emptyListOfferApplicationFormResp():ListOfferApplicationFormResp
	export function emptyRefListOfferApplicationFormResp():Ref<ListOfferApplicationFormResp>
	export function refOfListOfferApplicationFormResp(x:ListOfferApplicationFormResp,v:Ref<ListOfferApplicationFormResp>)
	export function unRefListOfferApplicationFormResp(v:Ref<ListOfferApplicationFormResp>):ListOfferApplicationFormResp
	export function emptyBatchUpdateEcoExamPaperResp():BatchUpdateEcoExamPaperResp
	export function emptyRefBatchUpdateEcoExamPaperResp():Ref<BatchUpdateEcoExamPaperResp>
	export function refOfBatchUpdateEcoExamPaperResp(x:BatchUpdateEcoExamPaperResp,v:Ref<BatchUpdateEcoExamPaperResp>)
	export function unRefBatchUpdateEcoExamPaperResp(v:Ref<BatchUpdateEcoExamPaperResp>):BatchUpdateEcoExamPaperResp
	export function emptyCash():Cash
	export function emptyRefCash():Ref<Cash>
	export function refOfCash(x:Cash,v:Ref<Cash>)
	export function unRefCash(v:Ref<Cash>):Cash
	export function emptyUserContactInfo():UserContactInfo
	export function emptyRefUserContactInfo():Ref<UserContactInfo>
	export function refOfUserContactInfo(x:UserContactInfo,v:Ref<UserContactInfo>)
	export function unRefUserContactInfo(v:Ref<UserContactInfo>):UserContactInfo
	export function emptyListJobRequirementResp():ListJobRequirementResp
	export function emptyRefListJobRequirementResp():Ref<ListJobRequirementResp>
	export function refOfListJobRequirementResp(x:ListJobRequirementResp,v:Ref<ListJobRequirementResp>)
	export function unRefListJobRequirementResp(v:Ref<ListJobRequirementResp>):ListJobRequirementResp
	export function emptyListTalentResp():ListTalentResp
	export function emptyRefListTalentResp():Ref<ListTalentResp>
	export function refOfListTalentResp(x:ListTalentResp,v:Ref<ListTalentResp>)
	export function unRefListTalentResp(v:Ref<ListTalentResp>):ListTalentResp
	export function emptySearchTestIterator():SearchTestIterator
	export function emptyRefSearchTestIterator():Ref<SearchTestIterator>
	export function refOfSearchTestIterator(x:SearchTestIterator,v:Ref<SearchTestIterator>)
	export function unRefSearchTestIterator(v:Ref<SearchTestIterator>):SearchTestIterator
	export function emptyCity():City
	export function emptyRefCity():Ref<City>
	export function refOfCity(x:City,v:Ref<City>)
	export function unRefCity(v:Ref<City>):City
	export function emptyGetInterviewRecordReq():GetInterviewRecordReq
	export function emptyRefGetInterviewRecordReq():Ref<GetInterviewRecordReq>
	export function refOfGetInterviewRecordReq(x:GetInterviewRecordReq,v:Ref<GetInterviewRecordReq>)
	export function unRefGetInterviewRecordReq(v:Ref<GetInterviewRecordReq>):GetInterviewRecordReq
	export function emptyTalentSchemaChildObject():TalentSchemaChildObject
	export function emptyRefTalentSchemaChildObject():Ref<TalentSchemaChildObject>
	export function refOfTalentSchemaChildObject(x:TalentSchemaChildObject,v:Ref<TalentSchemaChildObject>)
	export function unRefTalentSchemaChildObject(v:Ref<TalentSchemaChildObject>):TalentSchemaChildObject
	export function emptyUpdateJobRequirementReq():UpdateJobRequirementReq
	export function emptyRefUpdateJobRequirementReq():Ref<UpdateJobRequirementReq>
	export function refOfUpdateJobRequirementReq(x:UpdateJobRequirementReq,v:Ref<UpdateJobRequirementReq>)
	export function unRefUpdateJobRequirementReq(v:Ref<UpdateJobRequirementReq>):UpdateJobRequirementReq
	export function emptyOpenJobReq():OpenJobReq
	export function emptyRefOpenJobReq():Ref<OpenJobReq>
	export function refOfOpenJobReq(x:OpenJobReq,v:Ref<OpenJobReq>)
	export function unRefOpenJobReq(v:Ref<OpenJobReq>):OpenJobReq
	export function emptyTalentProjectInfo():TalentProjectInfo
	export function emptyRefTalentProjectInfo():Ref<TalentProjectInfo>
	export function refOfTalentProjectInfo(x:TalentProjectInfo,v:Ref<TalentProjectInfo>)
	export function unRefTalentProjectInfo(v:Ref<TalentProjectInfo>):TalentProjectInfo
	export function emptyListTalentFolderIterator():ListTalentFolderIterator
	export function emptyRefListTalentFolderIterator():Ref<ListTalentFolderIterator>
	export function refOfListTalentFolderIterator(x:ListTalentFolderIterator,v:Ref<ListTalentFolderIterator>)
	export function unRefListTalentFolderIterator(v:Ref<ListTalentFolderIterator>):ListTalentFolderIterator
	export function emptyOpenJobReqBody():OpenJobReqBody
	export function emptyRefOpenJobReqBody():Ref<OpenJobReqBody>
	export function refOfOpenJobReqBody(x:OpenJobReqBody,v:Ref<OpenJobReqBody>)
	export function unRefOpenJobReqBody(v:Ref<OpenJobReqBody>):OpenJobReqBody
	export function emptyGetNoteReq():GetNoteReq
	export function emptyRefGetNoteReq():Ref<GetNoteReq>
	export function refOfGetNoteReq(x:GetNoteReq,v:Ref<GetNoteReq>)
	export function unRefGetNoteReq(v:Ref<GetNoteReq>):GetNoteReq
	export function emptyBatchDeleteEcoBackgroundCheckCustomFieldReq():BatchDeleteEcoBackgroundCheckCustomFieldReq
	export function emptyRefBatchDeleteEcoBackgroundCheckCustomFieldReq():Ref<BatchDeleteEcoBackgroundCheckCustomFieldReq>
	export function refOfBatchDeleteEcoBackgroundCheckCustomFieldReq(x:BatchDeleteEcoBackgroundCheckCustomFieldReq,v:Ref<BatchDeleteEcoBackgroundCheckCustomFieldReq>)
	export function unRefBatchDeleteEcoBackgroundCheckCustomFieldReq(v:Ref<BatchDeleteEcoBackgroundCheckCustomFieldReq>):BatchDeleteEcoBackgroundCheckCustomFieldReq
	export function emptyListInterviewTaskReq():ListInterviewTaskReq
	export function emptyRefListInterviewTaskReq():Ref<ListInterviewTaskReq>
	export function refOfListInterviewTaskReq(x:ListInterviewTaskReq,v:Ref<ListInterviewTaskReq>)
	export function unRefListInterviewTaskReq(v:Ref<ListInterviewTaskReq>):ListInterviewTaskReq
	export function emptyPatchEhrImportTaskResp():PatchEhrImportTaskResp
	export function emptyRefPatchEhrImportTaskResp():Ref<PatchEhrImportTaskResp>
	export function refOfPatchEhrImportTaskResp(x:PatchEhrImportTaskResp,v:Ref<PatchEhrImportTaskResp>)
	export function unRefPatchEhrImportTaskResp(v:Ref<PatchEhrImportTaskResp>):PatchEhrImportTaskResp
	export function emptyAppliOfferOnboardProfileCity():AppliOfferOnboardProfileCity
	export function emptyRefAppliOfferOnboardProfileCity():Ref<AppliOfferOnboardProfileCity>
	export function refOfAppliOfferOnboardProfileCity(x:AppliOfferOnboardProfileCity,v:Ref<AppliOfferOnboardProfileCity>)
	export function unRefAppliOfferOnboardProfileCity(v:Ref<AppliOfferOnboardProfileCity>):AppliOfferOnboardProfileCity
	export function emptyCreateExternalApplicationReq():CreateExternalApplicationReq
	export function emptyRefCreateExternalApplicationReq():Ref<CreateExternalApplicationReq>
	export function refOfCreateExternalApplicationReq(x:CreateExternalApplicationReq,v:Ref<CreateExternalApplicationReq>)
	export function unRefCreateExternalApplicationReq(v:Ref<CreateExternalApplicationReq>):CreateExternalApplicationReq
	export function emptyBaseResp():BaseResp
	export function emptyRefBaseResp():Ref<BaseResp>
	export function refOfBaseResp(x:BaseResp,v:Ref<BaseResp>)
	export function unRefBaseResp(v:Ref<BaseResp>):BaseResp
	export function emptyBatchUpdateEcoBackgroundCheckPackageResp():BatchUpdateEcoBackgroundCheckPackageResp
	export function emptyRefBatchUpdateEcoBackgroundCheckPackageResp():Ref<BatchUpdateEcoBackgroundCheckPackageResp>
	export function refOfBatchUpdateEcoBackgroundCheckPackageResp(x:BatchUpdateEcoBackgroundCheckPackageResp,v:Ref<BatchUpdateEcoBackgroundCheckPackageResp>)
	export function unRefBatchUpdateEcoBackgroundCheckPackageResp(v:Ref<BatchUpdateEcoBackgroundCheckPackageResp>):BatchUpdateEcoBackgroundCheckPackageResp
	export function emptyTalentFolderForList():TalentFolderForList
	export function emptyRefTalentFolderForList():Ref<TalentFolderForList>
	export function refOfTalentFolderForList(x:TalentFolderForList,v:Ref<TalentFolderForList>)
	export function unRefTalentFolderForList(v:Ref<TalentFolderForList>):TalentFolderForList
	export function emptyP2EcoExamCreatedV1Data():P2EcoExamCreatedV1Data
	export function emptyRefP2EcoExamCreatedV1Data():Ref<P2EcoExamCreatedV1Data>
	export function refOfP2EcoExamCreatedV1Data(x:P2EcoExamCreatedV1Data,v:Ref<P2EcoExamCreatedV1Data>)
	export function unRefP2EcoExamCreatedV1Data(v:Ref<P2EcoExamCreatedV1Data>):P2EcoExamCreatedV1Data
	export function emptyScoreDimensionConfig():ScoreDimensionConfig
	export function emptyRefScoreDimensionConfig():Ref<ScoreDimensionConfig>
	export function refOfScoreDimensionConfig(x:ScoreDimensionConfig,v:Ref<ScoreDimensionConfig>)
	export function unRefScoreDimensionConfig(v:Ref<ScoreDimensionConfig>):ScoreDimensionConfig
	export function emptyQuestion():Question
	export function emptyRefQuestion():Ref<Question>
	export function refOfQuestion(x:Question,v:Ref<Question>)
	export function unRefQuestion(v:Ref<Question>):Question
	export function emptySiteResumeSns():SiteResumeSns
	export function emptyRefSiteResumeSns():Ref<SiteResumeSns>
	export function refOfSiteResumeSns(x:SiteResumeSns,v:Ref<SiteResumeSns>)
	export function unRefSiteResumeSns(v:Ref<SiteResumeSns>):SiteResumeSns
	export function emptyTalentBasicInfo():TalentBasicInfo
	export function emptyRefTalentBasicInfo():Ref<TalentBasicInfo>
	export function refOfTalentBasicInfo(x:TalentBasicInfo,v:Ref<TalentBasicInfo>)
	export function unRefTalentBasicInfo(v:Ref<TalentBasicInfo>):TalentBasicInfo
	export function emptyGetWebsiteJobPostReq():GetWebsiteJobPostReq
	export function emptyRefGetWebsiteJobPostReq():Ref<GetWebsiteJobPostReq>
	export function refOfGetWebsiteJobPostReq(x:GetWebsiteJobPostReq,v:Ref<GetWebsiteJobPostReq>)
	export function unRefGetWebsiteJobPostReq(v:Ref<GetWebsiteJobPostReq>):GetWebsiteJobPostReq
	export function emptyListNoteReq():ListNoteReq
	export function emptyRefListNoteReq():Ref<ListNoteReq>
	export function refOfListNoteReq(x:ListNoteReq,v:Ref<ListNoteReq>)
	export function unRefListNoteReq(v:Ref<ListNoteReq>):ListNoteReq
	export function emptyDeleteExternalApplicationReq():DeleteExternalApplicationReq
	export function emptyRefDeleteExternalApplicationReq():Ref<DeleteExternalApplicationReq>
	export function refOfDeleteExternalApplicationReq(x:DeleteExternalApplicationReq,v:Ref<DeleteExternalApplicationReq>)
	export function unRefDeleteExternalApplicationReq(v:Ref<DeleteExternalApplicationReq>):DeleteExternalApplicationReq
	export function emptyP2ReferralAccountAssetsUpdateV1Data():P2ReferralAccountAssetsUpdateV1Data
	export function emptyRefP2ReferralAccountAssetsUpdateV1Data():Ref<P2ReferralAccountAssetsUpdateV1Data>
	export function refOfP2ReferralAccountAssetsUpdateV1Data(x:P2ReferralAccountAssetsUpdateV1Data,v:Ref<P2ReferralAccountAssetsUpdateV1Data>)
	export function unRefP2ReferralAccountAssetsUpdateV1Data(v:Ref<P2ReferralAccountAssetsUpdateV1Data>):P2ReferralAccountAssetsUpdateV1Data
	export function emptyAppliOfferBasicCustObjOpV():AppliOfferBasicCustObjOpV
	export function emptyRefAppliOfferBasicCustObjOpV():Ref<AppliOfferBasicCustObjOpV>
	export function refOfAppliOfferBasicCustObjOpV(x:AppliOfferBasicCustObjOpV,v:Ref<AppliOfferBasicCustObjOpV>)
	export function unRefAppliOfferBasicCustObjOpV(v:Ref<AppliOfferBasicCustObjOpV>):AppliOfferBasicCustObjOpV
	export function emptyEhrImportTask():EhrImportTask
	export function emptyRefEhrImportTask():Ref<EhrImportTask>
	export function refOfEhrImportTask(x:EhrImportTask,v:Ref<EhrImportTask>)
	export function unRefEhrImportTask(v:Ref<EhrImportTask>):EhrImportTask
	export function emptyListLocationRespData():ListLocationRespData
	export function emptyRefListLocationRespData():Ref<ListLocationRespData>
	export function refOfListLocationRespData(x:ListLocationRespData,v:Ref<ListLocationRespData>)
	export function unRefListLocationRespData(v:Ref<ListLocationRespData>):ListLocationRespData
	export function emptyWebsiteUser():WebsiteUser
	export function emptyRefWebsiteUser():Ref<WebsiteUser>
	export function refOfWebsiteUser(x:WebsiteUser,v:Ref<WebsiteUser>)
	export function unRefWebsiteUser(v:Ref<WebsiteUser>):WebsiteUser
	export function emptyInternOfferOnboardingInfo():InternOfferOnboardingInfo
	export function emptyRefInternOfferOnboardingInfo():Ref<InternOfferOnboardingInfo>
	export function refOfInternOfferOnboardingInfo(x:InternOfferOnboardingInfo,v:Ref<InternOfferOnboardingInfo>)
	export function unRefInternOfferOnboardingInfo(v:Ref<InternOfferOnboardingInfo>):InternOfferOnboardingInfo
	export function emptyReconciliationReferralAccountReq():ReconciliationReferralAccountReq
	export function emptyRefReconciliationReferralAccountReq():Ref<ReconciliationReferralAccountReq>
	export function refOfReconciliationReferralAccountReq(x:ReconciliationReferralAccountReq,v:Ref<ReconciliationReferralAccountReq>)
	export function unRefReconciliationReferralAccountReq(v:Ref<ReconciliationReferralAccountReq>):ReconciliationReferralAccountReq
	export function emptyWebsiteDeliveryDto():WebsiteDeliveryDto
	export function emptyRefWebsiteDeliveryDto():Ref<WebsiteDeliveryDto>
	export function refOfWebsiteDeliveryDto(x:WebsiteDeliveryDto,v:Ref<WebsiteDeliveryDto>)
	export function unRefWebsiteDeliveryDto(v:Ref<WebsiteDeliveryDto>):WebsiteDeliveryDto
	export function emptyCreateTripartiteAgreementResp():CreateTripartiteAgreementResp
	export function emptyRefCreateTripartiteAgreementResp():Ref<CreateTripartiteAgreementResp>
	export function refOfCreateTripartiteAgreementResp(x:CreateTripartiteAgreementResp,v:Ref<CreateTripartiteAgreementResp>)
	export function unRefCreateTripartiteAgreementResp(v:Ref<CreateTripartiteAgreementResp>):CreateTripartiteAgreementResp
	export function emptyListQuestionnaireRespData():ListQuestionnaireRespData
	export function emptyRefListQuestionnaireRespData():Ref<ListQuestionnaireRespData>
	export function refOfListQuestionnaireRespData(x:ListQuestionnaireRespData,v:Ref<ListQuestionnaireRespData>)
	export function unRefListQuestionnaireRespData(v:Ref<ListQuestionnaireRespData>):ListQuestionnaireRespData
	export function emptyTalentCustomizedValue():TalentCustomizedValue
	export function emptyRefTalentCustomizedValue():Ref<TalentCustomizedValue>
	export function refOfTalentCustomizedValue(x:TalentCustomizedValue,v:Ref<TalentCustomizedValue>)
	export function unRefTalentCustomizedValue(v:Ref<TalentCustomizedValue>):TalentCustomizedValue
	export function emptyListQuestionnaireResp():ListQuestionnaireResp
	export function emptyRefListQuestionnaireResp():Ref<ListQuestionnaireResp>
	export function refOfListQuestionnaireResp(x:ListQuestionnaireResp,v:Ref<ListQuestionnaireResp>)
	export function unRefListQuestionnaireResp(v:Ref<ListQuestionnaireResp>):ListQuestionnaireResp
	export function emptyGetNoteRespData():GetNoteRespData
	export function emptyRefGetNoteRespData():Ref<GetNoteRespData>
	export function refOfGetNoteRespData(x:GetNoteRespData,v:Ref<GetNoteRespData>)
	export function unRefGetNoteRespData(v:Ref<GetNoteRespData>):GetNoteRespData
	export function emptyAssessmentScoreInfo():AssessmentScoreInfo
	export function emptyRefAssessmentScoreInfo():Ref<AssessmentScoreInfo>
	export function refOfAssessmentScoreInfo(x:AssessmentScoreInfo,v:Ref<AssessmentScoreInfo>)
	export function unRefAssessmentScoreInfo(v:Ref<AssessmentScoreInfo>):AssessmentScoreInfo
	export function emptyBatchDeleteEcoAccountCustomFieldReqBody():BatchDeleteEcoAccountCustomFieldReqBody
	export function emptyRefBatchDeleteEcoAccountCustomFieldReqBody():Ref<BatchDeleteEcoAccountCustomFieldReqBody>
	export function refOfBatchDeleteEcoAccountCustomFieldReqBody(x:BatchDeleteEcoAccountCustomFieldReqBody,v:Ref<BatchDeleteEcoAccountCustomFieldReqBody>)
	export function unRefBatchDeleteEcoAccountCustomFieldReqBody(v:Ref<BatchDeleteEcoAccountCustomFieldReqBody>):BatchDeleteEcoAccountCustomFieldReqBody
	export function emptyCombinedCreateJobResp():CombinedCreateJobResp
	export function emptyRefCombinedCreateJobResp():Ref<CombinedCreateJobResp>
	export function refOfCombinedCreateJobResp(x:CombinedCreateJobResp,v:Ref<CombinedCreateJobResp>)
	export function unRefCombinedCreateJobResp(v:Ref<CombinedCreateJobResp>):CombinedCreateJobResp
	export function emptyCreateExternalApplicationRespData():CreateExternalApplicationRespData
	export function emptyRefCreateExternalApplicationRespData():Ref<CreateExternalApplicationRespData>
	export function refOfCreateExternalApplicationRespData(x:CreateExternalApplicationRespData,v:Ref<CreateExternalApplicationRespData>)
	export function unRefCreateExternalApplicationRespData(v:Ref<CreateExternalApplicationRespData>):CreateExternalApplicationRespData
	export function emptyProtectSearchAgencyRespData():ProtectSearchAgencyRespData
	export function emptyRefProtectSearchAgencyRespData():Ref<ProtectSearchAgencyRespData>
	export function refOfProtectSearchAgencyRespData(x:ProtectSearchAgencyRespData,v:Ref<ProtectSearchAgencyRespData>)
	export function unRefProtectSearchAgencyRespData(v:Ref<ProtectSearchAgencyRespData>):ProtectSearchAgencyRespData
	export function emptyEvaluationTask():EvaluationTask
	export function emptyRefEvaluationTask():Ref<EvaluationTask>
	export function refOfEvaluationTask(x:EvaluationTask,v:Ref<EvaluationTask>)
	export function unRefEvaluationTask(v:Ref<EvaluationTask>):EvaluationTask
	export function emptyListExamMarkingTaskIterator():ListExamMarkingTaskIterator
	export function emptyRefListExamMarkingTaskIterator():Ref<ListExamMarkingTaskIterator>
	export function refOfListExamMarkingTaskIterator(x:ListExamMarkingTaskIterator,v:Ref<ListExamMarkingTaskIterator>)
	export function unRefListExamMarkingTaskIterator(v:Ref<ListExamMarkingTaskIterator>):ListExamMarkingTaskIterator
	export function emptyCreateExternalInterviewResp():CreateExternalInterviewResp
	export function emptyRefCreateExternalInterviewResp():Ref<CreateExternalInterviewResp>
	export function refOfCreateExternalInterviewResp(x:CreateExternalInterviewResp,v:Ref<CreateExternalInterviewResp>)
	export function unRefCreateExternalInterviewResp(v:Ref<CreateExternalInterviewResp>):CreateExternalInterviewResp
	export function emptyExternalBackgroundCheck():ExternalBackgroundCheck
	export function emptyRefExternalBackgroundCheck():Ref<ExternalBackgroundCheck>
	export function refOfExternalBackgroundCheck(x:ExternalBackgroundCheck,v:Ref<ExternalBackgroundCheck>)
	export function unRefExternalBackgroundCheck(v:Ref<ExternalBackgroundCheck>):ExternalBackgroundCheck
	export function emptyJobConfigRoundType():JobConfigRoundType
	export function emptyRefJobConfigRoundType():Ref<JobConfigRoundType>
	export function refOfJobConfigRoundType(x:JobConfigRoundType,v:Ref<JobConfigRoundType>)
	export function unRefJobConfigRoundType(v:Ref<JobConfigRoundType>):JobConfigRoundType
	export function emptyGetJobManagerReq():GetJobManagerReq
	export function emptyRefGetJobManagerReq():Ref<GetJobManagerReq>
	export function refOfGetJobManagerReq(x:GetJobManagerReq,v:Ref<GetJobManagerReq>)
	export function unRefGetJobManagerReq(v:Ref<GetJobManagerReq>):GetJobManagerReq
	export function emptyBaseCity():BaseCity
	export function emptyRefBaseCity():Ref<BaseCity>
	export function refOfBaseCity(x:BaseCity,v:Ref<BaseCity>)
	export function unRefBaseCity(v:Ref<BaseCity>):BaseCity
	export function emptyCreateExamResp():CreateExamResp
	export function emptyRefCreateExamResp():Ref<CreateExamResp>
	export function refOfCreateExamResp(x:CreateExamResp,v:Ref<CreateExamResp>)
	export function unRefCreateExamResp(v:Ref<CreateExamResp>):CreateExamResp
	export function emptyListTripartiteAgreementIterator():ListTripartiteAgreementIterator
	export function emptyRefListTripartiteAgreementIterator():Ref<ListTripartiteAgreementIterator>
	export function refOfListTripartiteAgreementIterator(x:ListTripartiteAgreementIterator,v:Ref<ListTripartiteAgreementIterator>)
	export function unRefListTripartiteAgreementIterator(v:Ref<ListTripartiteAgreementIterator>):ListTripartiteAgreementIterator
	export function emptyWebsiteDeliveryAward():WebsiteDeliveryAward
	export function emptyRefWebsiteDeliveryAward():Ref<WebsiteDeliveryAward>
	export function refOfWebsiteDeliveryAward(x:WebsiteDeliveryAward,v:Ref<WebsiteDeliveryAward>)
	export function unRefWebsiteDeliveryAward(v:Ref<WebsiteDeliveryAward>):WebsiteDeliveryAward
	export function emptyCreateApplicationRespData():CreateApplicationRespData
	export function emptyRefCreateApplicationRespData():Ref<CreateApplicationRespData>
	export function refOfCreateApplicationRespData(x:CreateApplicationRespData,v:Ref<CreateApplicationRespData>)
	export function unRefCreateApplicationRespData(v:Ref<CreateApplicationRespData>):CreateApplicationRespData
	export function emptyUpdateOfferReq():UpdateOfferReq
	export function emptyRefUpdateOfferReq():Ref<UpdateOfferReq>
	export function refOfUpdateOfferReq(x:UpdateOfferReq,v:Ref<UpdateOfferReq>)
	export function unRefUpdateOfferReq(v:Ref<UpdateOfferReq>):UpdateOfferReq
	export function emptyListApplicationRespData():ListApplicationRespData
	export function emptyRefListApplicationRespData():Ref<ListApplicationRespData>
	export function refOfListApplicationRespData(x:ListApplicationRespData,v:Ref<ListApplicationRespData>)
	export function unRefListApplicationRespData(v:Ref<ListApplicationRespData>):ListApplicationRespData
	export function emptyPatchEhrImportTaskReq():PatchEhrImportTaskReq
	export function emptyRefPatchEhrImportTaskReq():Ref<PatchEhrImportTaskReq>
	export function refOfPatchEhrImportTaskReq(x:PatchEhrImportTaskReq,v:Ref<PatchEhrImportTaskReq>)
	export function unRefPatchEhrImportTaskReq(v:Ref<PatchEhrImportTaskReq>):PatchEhrImportTaskReq
	export function emptyConfigJobReq():ConfigJobReq
	export function emptyRefConfigJobReq():Ref<ConfigJobReq>
	export function refOfConfigJobReq(x:ConfigJobReq,v:Ref<ConfigJobReq>)
	export function unRefConfigJobReq(v:Ref<ConfigJobReq>):ConfigJobReq
	export function emptyGetByApplicationEmployeeRespData():GetByApplicationEmployeeRespData
	export function emptyRefGetByApplicationEmployeeRespData():Ref<GetByApplicationEmployeeRespData>
	export function refOfGetByApplicationEmployeeRespData(x:GetByApplicationEmployeeRespData,v:Ref<GetByApplicationEmployeeRespData>)
	export function unRefGetByApplicationEmployeeRespData(v:Ref<GetByApplicationEmployeeRespData>):GetByApplicationEmployeeRespData
	export function emptyListInterviewRegistrationSchemaRespData():ListInterviewRegistrationSchemaRespData
	export function emptyRefListInterviewRegistrationSchemaRespData():Ref<ListInterviewRegistrationSchemaRespData>
	export function refOfListInterviewRegistrationSchemaRespData(x:ListInterviewRegistrationSchemaRespData,v:Ref<ListInterviewRegistrationSchemaRespData>)
	export function unRefListInterviewRegistrationSchemaRespData(v:Ref<ListInterviewRegistrationSchemaRespData>):ListInterviewRegistrationSchemaRespData
	export function emptyPatchEmployeeRespData():PatchEmployeeRespData
	export function emptyRefPatchEmployeeRespData():Ref<PatchEmployeeRespData>
	export function refOfPatchEmployeeRespData(x:PatchEmployeeRespData,v:Ref<PatchEmployeeRespData>)
	export function unRefPatchEmployeeRespData(v:Ref<PatchEmployeeRespData>):PatchEmployeeRespData
	export function emptyAppliTalentCompetitionInfo():AppliTalentCompetitionInfo
	export function emptyRefAppliTalentCompetitionInfo():Ref<AppliTalentCompetitionInfo>
	export function refOfAppliTalentCompetitionInfo(x:AppliTalentCompetitionInfo,v:Ref<AppliTalentCompetitionInfo>)
	export function unRefAppliTalentCompetitionInfo(v:Ref<AppliTalentCompetitionInfo>):AppliTalentCompetitionInfo
	export function emptySearchTalentPoolResp():SearchTalentPoolResp
	export function emptyRefSearchTalentPoolResp():Ref<SearchTalentPoolResp>
	export function refOfSearchTalentPoolResp(x:SearchTalentPoolResp,v:Ref<SearchTalentPoolResp>)
	export function unRefSearchTalentPoolResp(v:Ref<SearchTalentPoolResp>):SearchTalentPoolResp
	export function emptyUpdateResultEcoBackgroundCheckResp():UpdateResultEcoBackgroundCheckResp
	export function emptyRefUpdateResultEcoBackgroundCheckResp():Ref<UpdateResultEcoBackgroundCheckResp>
	export function refOfUpdateResultEcoBackgroundCheckResp(x:UpdateResultEcoBackgroundCheckResp,v:Ref<UpdateResultEcoBackgroundCheckResp>)
	export function unRefUpdateResultEcoBackgroundCheckResp(v:Ref<UpdateResultEcoBackgroundCheckResp>):UpdateResultEcoBackgroundCheckResp
	export function emptyPublishAdvertisementResp():PublishAdvertisementResp
	export function emptyRefPublishAdvertisementResp():Ref<PublishAdvertisementResp>
	export function refOfPublishAdvertisementResp(x:PublishAdvertisementResp,v:Ref<PublishAdvertisementResp>)
	export function unRefPublishAdvertisementResp(v:Ref<PublishAdvertisementResp>):PublishAdvertisementResp
	export function emptyCreateJobRequirementRespData():CreateJobRequirementRespData
	export function emptyRefCreateJobRequirementRespData():Ref<CreateJobRequirementRespData>
	export function refOfCreateJobRequirementRespData(x:CreateJobRequirementRespData,v:Ref<CreateJobRequirementRespData>)
	export function unRefCreateJobRequirementRespData(v:Ref<CreateJobRequirementRespData>):CreateJobRequirementRespData
	export function emptyPatchNoteReq():PatchNoteReq
	export function emptyRefPatchNoteReq():Ref<PatchNoteReq>
	export function refOfPatchNoteReq(x:PatchNoteReq,v:Ref<PatchNoteReq>)
	export function unRefPatchNoteReq(v:Ref<PatchNoteReq>):PatchNoteReq
	export function emptyListTodoReq():ListTodoReq
	export function emptyRefListTodoReq():Ref<ListTodoReq>
	export function refOfListTodoReq(x:ListTodoReq,v:Ref<ListTodoReq>)
	export function unRefListTodoReq(v:Ref<ListTodoReq>):ListTodoReq
	export function emptySearchJobPublishRecordRespData():SearchJobPublishRecordRespData
	export function emptyRefSearchJobPublishRecordRespData():Ref<SearchJobPublishRecordRespData>
	export function refOfSearchJobPublishRecordRespData(x:SearchJobPublishRecordRespData,v:Ref<SearchJobPublishRecordRespData>)
	export function unRefSearchJobPublishRecordRespData(v:Ref<SearchJobPublishRecordRespData>):SearchJobPublishRecordRespData
	export function emptyGetJobManagerResp():GetJobManagerResp
	export function emptyRefGetJobManagerResp():Ref<GetJobManagerResp>
	export function refOfGetJobManagerResp(x:GetJobManagerResp,v:Ref<GetJobManagerResp>)
	export function unRefGetJobManagerResp(v:Ref<GetJobManagerResp>):GetJobManagerResp
	export function emptyTalentCustomizedTimeRange():TalentCustomizedTimeRange
	export function emptyRefTalentCustomizedTimeRange():Ref<TalentCustomizedTimeRange>
	export function refOfTalentCustomizedTimeRange(x:TalentCustomizedTimeRange,v:Ref<TalentCustomizedTimeRange>)
	export function unRefTalentCustomizedTimeRange(v:Ref<TalentCustomizedTimeRange>):TalentCustomizedTimeRange
	export function emptyGetOfferRespData():GetOfferRespData
	export function emptyRefGetOfferRespData():Ref<GetOfferRespData>
	export function refOfGetOfferRespData(x:GetOfferRespData,v:Ref<GetOfferRespData>)
	export function unRefGetOfferRespData(v:Ref<GetOfferRespData>):GetOfferRespData
	export function emptySiteJobPost():SiteJobPost
	export function emptyRefSiteJobPost():Ref<SiteJobPost>
	export function refOfSiteJobPost(x:SiteJobPost,v:Ref<SiteJobPost>)
	export function unRefSiteJobPost(v:Ref<SiteJobPost>):SiteJobPost
	export function emptyUpdateJobRequirementResp():UpdateJobRequirementResp
	export function emptyRefUpdateJobRequirementResp():Ref<UpdateJobRequirementResp>
	export function refOfUpdateJobRequirementResp(x:UpdateJobRequirementResp,v:Ref<UpdateJobRequirementResp>)
	export function unRefUpdateJobRequirementResp(v:Ref<UpdateJobRequirementResp>):UpdateJobRequirementResp
	export function emptyApplicationTalentAttachmentResumeInfo():ApplicationTalentAttachmentResumeInfo
	export function emptyRefApplicationTalentAttachmentResumeInfo():Ref<ApplicationTalentAttachmentResumeInfo>
	export function refOfApplicationTalentAttachmentResumeInfo(x:ApplicationTalentAttachmentResumeInfo,v:Ref<ApplicationTalentAttachmentResumeInfo>)
	export function unRefApplicationTalentAttachmentResumeInfo(v:Ref<ApplicationTalentAttachmentResumeInfo>):ApplicationTalentAttachmentResumeInfo
	export function emptyObjectAttribute():ObjectAttribute
	export function emptyRefObjectAttribute():Ref<ObjectAttribute>
	export function refOfObjectAttribute(x:ObjectAttribute,v:Ref<ObjectAttribute>)
	export function unRefObjectAttribute(v:Ref<ObjectAttribute>):ObjectAttribute
	export function emptyTransferOnboardApplicationRespData():TransferOnboardApplicationRespData
	export function emptyRefTransferOnboardApplicationRespData():Ref<TransferOnboardApplicationRespData>
	export function refOfTransferOnboardApplicationRespData(x:TransferOnboardApplicationRespData,v:Ref<TransferOnboardApplicationRespData>)
	export function unRefTransferOnboardApplicationRespData(v:Ref<TransferOnboardApplicationRespData>):TransferOnboardApplicationRespData
	export function emptyEcoBackgroundCheckPackageData():EcoBackgroundCheckPackageData
	export function emptyRefEcoBackgroundCheckPackageData():Ref<EcoBackgroundCheckPackageData>
	export function refOfEcoBackgroundCheckPackageData(x:EcoBackgroundCheckPackageData,v:Ref<EcoBackgroundCheckPackageData>)
	export function unRefEcoBackgroundCheckPackageData(v:Ref<EcoBackgroundCheckPackageData>):EcoBackgroundCheckPackageData
	export function emptyGetRoleRespData():GetRoleRespData
	export function emptyRefGetRoleRespData():Ref<GetRoleRespData>
	export function refOfGetRoleRespData(x:GetRoleRespData,v:Ref<GetRoleRespData>)
	export function unRefGetRoleRespData(v:Ref<GetRoleRespData>):GetRoleRespData
	export function emptyJobProcess():JobProcess
	export function emptyRefJobProcess():Ref<JobProcess>
	export function refOfJobProcess(x:JobProcess,v:Ref<JobProcess>)
	export function unRefJobProcess(v:Ref<JobProcess>):JobProcess
	export function emptyApplicationWebsiteChannel():ApplicationWebsiteChannel
	export function emptyRefApplicationWebsiteChannel():Ref<ApplicationWebsiteChannel>
	export function refOfApplicationWebsiteChannel(x:ApplicationWebsiteChannel,v:Ref<ApplicationWebsiteChannel>)
	export function unRefApplicationWebsiteChannel(v:Ref<ApplicationWebsiteChannel>):ApplicationWebsiteChannel
	export function emptyEducationInfo():EducationInfo
	export function emptyRefEducationInfo():Ref<EducationInfo>
	export function refOfEducationInfo(x:EducationInfo,v:Ref<EducationInfo>)
	export function unRefEducationInfo(v:Ref<EducationInfo>):EducationInfo
	export function emptyAuth():Auth
	export function emptyRefAuth():Ref<Auth>
	export function refOfAuth(x:Auth,v:Ref<Auth>)
	export function unRefAuth(v:Ref<Auth>):Auth
	export function emptyCreateJobRequirementResp():CreateJobRequirementResp
	export function emptyRefCreateJobRequirementResp():Ref<CreateJobRequirementResp>
	export function refOfCreateJobRequirementResp(x:CreateJobRequirementResp,v:Ref<CreateJobRequirementResp>)
	export function unRefCreateJobRequirementResp(v:Ref<CreateJobRequirementResp>):CreateJobRequirementResp
	export function emptyListWebsiteJobPostResp():ListWebsiteJobPostResp
	export function emptyRefListWebsiteJobPostResp():Ref<ListWebsiteJobPostResp>
	export function refOfListWebsiteJobPostResp(x:ListWebsiteJobPostResp,v:Ref<ListWebsiteJobPostResp>)
	export function unRefListWebsiteJobPostResp(v:Ref<ListWebsiteJobPostResp>):ListWebsiteJobPostResp
	export function emptyAwardInfo():AwardInfo
	export function emptyRefAwardInfo():Ref<AwardInfo>
	export function refOfAwardInfo(x:AwardInfo,v:Ref<AwardInfo>)
	export function unRefAwardInfo(v:Ref<AwardInfo>):AwardInfo
	export function emptyBatchUpdateJobManagerReqBody():BatchUpdateJobManagerReqBody
	export function emptyRefBatchUpdateJobManagerReqBody():Ref<BatchUpdateJobManagerReqBody>
	export function refOfBatchUpdateJobManagerReqBody(x:BatchUpdateJobManagerReqBody,v:Ref<BatchUpdateJobManagerReqBody>)
	export function unRefBatchUpdateJobManagerReqBody(v:Ref<BatchUpdateJobManagerReqBody>):BatchUpdateJobManagerReqBody
	export function emptyCommonSchemaChild():CommonSchemaChild
	export function emptyRefCommonSchemaChild():Ref<CommonSchemaChild>
	export function refOfCommonSchemaChild(x:CommonSchemaChild,v:Ref<CommonSchemaChild>)
	export function unRefCommonSchemaChild(v:Ref<CommonSchemaChild>):CommonSchemaChild
	export function emptyCreateTalentExternalInfoRespData():CreateTalentExternalInfoRespData
	export function emptyRefCreateTalentExternalInfoRespData():Ref<CreateTalentExternalInfoRespData>
	export function refOfCreateTalentExternalInfoRespData(x:CreateTalentExternalInfoRespData,v:Ref<CreateTalentExternalInfoRespData>)
	export function unRefCreateTalentExternalInfoRespData(v:Ref<CreateTalentExternalInfoRespData>):CreateTalentExternalInfoRespData
	export function emptyPreviewAttachmentResp():PreviewAttachmentResp
	export function emptyRefPreviewAttachmentResp():Ref<PreviewAttachmentResp>
	export function refOfPreviewAttachmentResp(x:PreviewAttachmentResp,v:Ref<PreviewAttachmentResp>)
	export function unRefPreviewAttachmentResp(v:Ref<PreviewAttachmentResp>):PreviewAttachmentResp
	export function emptyPublishAdvertisementReq():PublishAdvertisementReq
	export function emptyRefPublishAdvertisementReq():Ref<PublishAdvertisementReq>
	export function refOfPublishAdvertisementReq(x:PublishAdvertisementReq,v:Ref<PublishAdvertisementReq>)
	export function unRefPublishAdvertisementReq(v:Ref<PublishAdvertisementReq>):PublishAdvertisementReq
	export function emptyTalentNationality():TalentNationality
	export function emptyRefTalentNationality():Ref<TalentNationality>
	export function refOfTalentNationality(x:TalentNationality,v:Ref<TalentNationality>)
	export function unRefTalentNationality(v:Ref<TalentNationality>):TalentNationality
	export function emptyEcoBackgroundCheckCreateEventMobile():EcoBackgroundCheckCreateEventMobile
	export function emptyRefEcoBackgroundCheckCreateEventMobile():Ref<EcoBackgroundCheckCreateEventMobile>
	export function refOfEcoBackgroundCheckCreateEventMobile(x:EcoBackgroundCheckCreateEventMobile,v:Ref<EcoBackgroundCheckCreateEventMobile>)
	export function unRefEcoBackgroundCheckCreateEventMobile(v:Ref<EcoBackgroundCheckCreateEventMobile>):EcoBackgroundCheckCreateEventMobile
	export function emptySite():Site
	export function emptyRefSite():Ref<Site>
	export function refOfSite(x:Site,v:Ref<Site>)
	export function unRefSite(v:Ref<Site>):Site
	export function emptySiteResumeAward():SiteResumeAward
	export function emptyRefSiteResumeAward():Ref<SiteResumeAward>
	export function refOfSiteResumeAward(x:SiteResumeAward,v:Ref<SiteResumeAward>)
	export function unRefSiteResumeAward(v:Ref<SiteResumeAward>):SiteResumeAward
	export function emptyBackgroundCheckOrderFeedbackInfo():BackgroundCheckOrderFeedbackInfo
	export function emptyRefBackgroundCheckOrderFeedbackInfo():Ref<BackgroundCheckOrderFeedbackInfo>
	export function refOfBackgroundCheckOrderFeedbackInfo(x:BackgroundCheckOrderFeedbackInfo,v:Ref<BackgroundCheckOrderFeedbackInfo>)
	export function unRefBackgroundCheckOrderFeedbackInfo(v:Ref<BackgroundCheckOrderFeedbackInfo>):BackgroundCheckOrderFeedbackInfo
	export function emptyCreateExternalInterviewReq():CreateExternalInterviewReq
	export function emptyRefCreateExternalInterviewReq():Ref<CreateExternalInterviewReq>
	export function refOfCreateExternalInterviewReq(x:CreateExternalInterviewReq,v:Ref<CreateExternalInterviewReq>)
	export function unRefCreateExternalInterviewReq(v:Ref<CreateExternalInterviewReq>):CreateExternalInterviewReq
	export function emptyOpenJobResp():OpenJobResp
	export function emptyRefOpenJobResp():Ref<OpenJobResp>
	export function refOfOpenJobResp(x:OpenJobResp,v:Ref<OpenJobResp>)
	export function unRefOpenJobResp(v:Ref<OpenJobResp>):OpenJobResp
	export function emptyBatchGetIdTalentResp():BatchGetIdTalentResp
	export function emptyRefBatchGetIdTalentResp():Ref<BatchGetIdTalentResp>
	export function refOfBatchGetIdTalentResp(x:BatchGetIdTalentResp,v:Ref<BatchGetIdTalentResp>)
	export function unRefBatchGetIdTalentResp(v:Ref<BatchGetIdTalentResp>):BatchGetIdTalentResp
	export function emptyLocationDto():LocationDto
	export function emptyRefLocationDto():Ref<LocationDto>
	export function refOfLocationDto(x:LocationDto,v:Ref<LocationDto>)
	export function unRefLocationDto(v:Ref<LocationDto>):LocationDto
	export function emptyPermissionGroupInfo():PermissionGroupInfo
	export function emptyRefPermissionGroupInfo():Ref<PermissionGroupInfo>
	export function refOfPermissionGroupInfo(x:PermissionGroupInfo,v:Ref<PermissionGroupInfo>)
	export function unRefPermissionGroupInfo(v:Ref<PermissionGroupInfo>):PermissionGroupInfo
	export function emptySearchTestReq():SearchTestReq
	export function emptyRefSearchTestReq():Ref<SearchTestReq>
	export function refOfSearchTestReq(x:SearchTestReq,v:Ref<SearchTestReq>)
	export function unRefSearchTestReq(v:Ref<SearchTestReq>):SearchTestReq
	export function emptyTalentCombinedBasicInfo():TalentCombinedBasicInfo
	export function emptyRefTalentCombinedBasicInfo():Ref<TalentCombinedBasicInfo>
	export function refOfTalentCombinedBasicInfo(x:TalentCombinedBasicInfo,v:Ref<TalentCombinedBasicInfo>)
	export function unRefTalentCombinedBasicInfo(v:Ref<TalentCombinedBasicInfo>):TalentCombinedBasicInfo
	export function emptyMoveTalentTalentPoolReq():MoveTalentTalentPoolReq
	export function emptyRefMoveTalentTalentPoolReq():Ref<MoveTalentTalentPoolReq>
	export function refOfMoveTalentTalentPoolReq(x:MoveTalentTalentPoolReq,v:Ref<MoveTalentTalentPoolReq>)
	export function unRefMoveTalentTalentPoolReq(v:Ref<MoveTalentTalentPoolReq>):MoveTalentTalentPoolReq
	export function emptyJobRecruiter():JobRecruiter
	export function emptyRefJobRecruiter():Ref<JobRecruiter>
	export function refOfJobRecruiter(x:JobRecruiter,v:Ref<JobRecruiter>)
	export function unRefJobRecruiter(v:Ref<JobRecruiter>):JobRecruiter
	export function emptyListByIdJobRequirementResp():ListByIdJobRequirementResp
	export function emptyRefListByIdJobRequirementResp():Ref<ListByIdJobRequirementResp>
	export function refOfListByIdJobRequirementResp(x:ListByIdJobRequirementResp,v:Ref<ListByIdJobRequirementResp>)
	export function unRefListByIdJobRequirementResp(v:Ref<ListByIdJobRequirementResp>):ListByIdJobRequirementResp
	export function emptyOfferCustomFieldConfig():OfferCustomFieldConfig
	export function emptyRefOfferCustomFieldConfig():Ref<OfferCustomFieldConfig>
	export function refOfOfferCustomFieldConfig(x:OfferCustomFieldConfig,v:Ref<OfferCustomFieldConfig>)
	export function unRefOfferCustomFieldConfig(v:Ref<OfferCustomFieldConfig>):OfferCustomFieldConfig
	export function emptyPublishAdvertisementReqBody():PublishAdvertisementReqBody
	export function emptyRefPublishAdvertisementReqBody():Ref<PublishAdvertisementReqBody>
	export function refOfPublishAdvertisementReqBody(x:PublishAdvertisementReqBody,v:Ref<PublishAdvertisementReqBody>)
	export function unRefPublishAdvertisementReqBody(v:Ref<PublishAdvertisementReqBody>):PublishAdvertisementReqBody
	export function emptyBatchDeleteEcoBackgroundCheckCustomFieldResp():BatchDeleteEcoBackgroundCheckCustomFieldResp
	export function emptyRefBatchDeleteEcoBackgroundCheckCustomFieldResp():Ref<BatchDeleteEcoBackgroundCheckCustomFieldResp>
	export function refOfBatchDeleteEcoBackgroundCheckCustomFieldResp(x:BatchDeleteEcoBackgroundCheckCustomFieldResp,v:Ref<BatchDeleteEcoBackgroundCheckCustomFieldResp>)
	export function unRefBatchDeleteEcoBackgroundCheckCustomFieldResp(v:Ref<BatchDeleteEcoBackgroundCheckCustomFieldResp>):BatchDeleteEcoBackgroundCheckCustomFieldResp
	export function emptyListJobSchemaResp():ListJobSchemaResp
	export function emptyRefListJobSchemaResp():Ref<ListJobSchemaResp>
	export function refOfListJobSchemaResp(x:ListJobSchemaResp,v:Ref<ListJobSchemaResp>)
	export function unRefListJobSchemaResp(v:Ref<ListJobSchemaResp>):ListJobSchemaResp
	export function emptyRecoverApplicationReq():RecoverApplicationReq
	export function emptyRefRecoverApplicationReq():Ref<RecoverApplicationReq>
	export function refOfRecoverApplicationReq(x:RecoverApplicationReq,v:Ref<RecoverApplicationReq>)
	export function unRefRecoverApplicationReq(v:Ref<RecoverApplicationReq>):RecoverApplicationReq
	export function emptySearchWebsiteJobPostRespData():SearchWebsiteJobPostRespData
	export function emptyRefSearchWebsiteJobPostRespData():Ref<SearchWebsiteJobPostRespData>
	export function refOfSearchWebsiteJobPostRespData(x:SearchWebsiteJobPostRespData,v:Ref<SearchWebsiteJobPostRespData>)
	export function unRefSearchWebsiteJobPostRespData(v:Ref<SearchWebsiteJobPostRespData>):SearchWebsiteJobPostRespData
	export function emptyApplicationJob():ApplicationJob
	export function emptyRefApplicationJob():Ref<ApplicationJob>
	export function refOfApplicationJob(x:ApplicationJob,v:Ref<ApplicationJob>)
	export function unRefApplicationJob(v:Ref<ApplicationJob>):ApplicationJob
	export function emptyJob():Job
	export function emptyRefJob():Ref<Job>
	export function refOfJob(x:Job,v:Ref<Job>)
	export function unRefJob(v:Ref<Job>):Job
	export function emptyListEvaluationTaskIterator():ListEvaluationTaskIterator
	export function emptyRefListEvaluationTaskIterator():Ref<ListEvaluationTaskIterator>
	export function refOfListEvaluationTaskIterator(x:ListEvaluationTaskIterator,v:Ref<ListEvaluationTaskIterator>)
	export function unRefListEvaluationTaskIterator(v:Ref<ListEvaluationTaskIterator>):ListEvaluationTaskIterator
	export function emptyOfferApplicationResp():OfferApplicationResp
	export function emptyRefOfferApplicationResp():Ref<OfferApplicationResp>
	export function refOfOfferApplicationResp(x:OfferApplicationResp,v:Ref<OfferApplicationResp>)
	export function unRefOfferApplicationResp(v:Ref<OfferApplicationResp>):OfferApplicationResp
	export function emptyCloseJobReq():CloseJobReq
	export function emptyRefCloseJobReq():Ref<CloseJobReq>
	export function refOfCloseJobReq(x:CloseJobReq,v:Ref<CloseJobReq>)
	export function unRefCloseJobReq(v:Ref<CloseJobReq>):CloseJobReq
	export function emptyWebsiteDeliveryCompetition():WebsiteDeliveryCompetition
	export function emptyRefWebsiteDeliveryCompetition():Ref<WebsiteDeliveryCompetition>
	export function refOfWebsiteDeliveryCompetition(x:WebsiteDeliveryCompetition,v:Ref<WebsiteDeliveryCompetition>)
	export function unRefWebsiteDeliveryCompetition(v:Ref<WebsiteDeliveryCompetition>):WebsiteDeliveryCompetition
	export function emptyInterviewAssessmentDimensionArgsScore():InterviewAssessmentDimensionArgsScore
	export function emptyRefInterviewAssessmentDimensionArgsScore():Ref<InterviewAssessmentDimensionArgsScore>
	export function refOfInterviewAssessmentDimensionArgsScore(x:InterviewAssessmentDimensionArgsScore,v:Ref<InterviewAssessmentDimensionArgsScore>)
	export function unRefInterviewAssessmentDimensionArgsScore(v:Ref<InterviewAssessmentDimensionArgsScore>):InterviewAssessmentDimensionArgsScore
	export function emptyListInterviewRegistrationSchemaIterator():ListInterviewRegistrationSchemaIterator
	export function emptyRefListInterviewRegistrationSchemaIterator():Ref<ListInterviewRegistrationSchemaIterator>
	export function refOfListInterviewRegistrationSchemaIterator(x:ListInterviewRegistrationSchemaIterator,v:Ref<ListInterviewRegistrationSchemaIterator>)
	export function unRefListInterviewRegistrationSchemaIterator(v:Ref<ListInterviewRegistrationSchemaIterator>):ListInterviewRegistrationSchemaIterator
	export function emptyP2EcoExamCreatedV1():P2EcoExamCreatedV1
	export function emptyRefP2EcoExamCreatedV1():Ref<P2EcoExamCreatedV1>
	export function refOfP2EcoExamCreatedV1(x:P2EcoExamCreatedV1,v:Ref<P2EcoExamCreatedV1>)
	export function unRefP2EcoExamCreatedV1(v:Ref<P2EcoExamCreatedV1>):P2EcoExamCreatedV1
	export function emptySiteName():SiteName
	export function emptyRefSiteName():Ref<SiteName>
	export function refOfSiteName(x:SiteName,v:Ref<SiteName>)
	export function unRefSiteName(v:Ref<SiteName>):SiteName
	export function emptyBatchGetIdTalentRespData():BatchGetIdTalentRespData
	export function emptyRefBatchGetIdTalentRespData():Ref<BatchGetIdTalentRespData>
	export function refOfBatchGetIdTalentRespData(x:BatchGetIdTalentRespData,v:Ref<BatchGetIdTalentRespData>)
	export function unRefBatchGetIdTalentRespData(v:Ref<BatchGetIdTalentRespData>):BatchGetIdTalentRespData
	export function emptySubject():Subject
	export function emptyRefSubject():Ref<Subject>
	export function refOfSubject(x:Subject,v:Ref<Subject>)
	export function unRefSubject(v:Ref<Subject>):Subject
	export function emptyWebsiteJobPostCustomizedOption():WebsiteJobPostCustomizedOption
	export function emptyRefWebsiteJobPostCustomizedOption():Ref<WebsiteJobPostCustomizedOption>
	export function refOfWebsiteJobPostCustomizedOption(x:WebsiteJobPostCustomizedOption,v:Ref<WebsiteJobPostCustomizedOption>)
	export function unRefWebsiteJobPostCustomizedOption(v:Ref<WebsiteJobPostCustomizedOption>):WebsiteJobPostCustomizedOption
	export function emptyGetWebsiteDeliveryTaskResp():GetWebsiteDeliveryTaskResp
	export function emptyRefGetWebsiteDeliveryTaskResp():Ref<GetWebsiteDeliveryTaskResp>
	export function refOfGetWebsiteDeliveryTaskResp(x:GetWebsiteDeliveryTaskResp,v:Ref<GetWebsiteDeliveryTaskResp>)
	export function unRefGetWebsiteDeliveryTaskResp(v:Ref<GetWebsiteDeliveryTaskResp>):GetWebsiteDeliveryTaskResp
	export function emptyListJobProcessReq():ListJobProcessReq
	export function emptyRefListJobProcessReq():Ref<ListJobProcessReq>
	export function refOfListJobProcessReq(x:ListJobProcessReq,v:Ref<ListJobProcessReq>)
	export function unRefListJobProcessReq(v:Ref<ListJobProcessReq>):ListJobProcessReq
	export function emptyTradeDetail():TradeDetail
	export function emptyRefTradeDetail():Ref<TradeDetail>
	export function refOfTradeDetail(x:TradeDetail,v:Ref<TradeDetail>)
	export function unRefTradeDetail(v:Ref<TradeDetail>):TradeDetail
	export function emptyInterviewMeetingRoom():InterviewMeetingRoom
	export function emptyRefInterviewMeetingRoom():Ref<InterviewMeetingRoom>
	export function refOfInterviewMeetingRoom(x:InterviewMeetingRoom,v:Ref<InterviewMeetingRoom>)
	export function unRefInterviewMeetingRoom(v:Ref<InterviewMeetingRoom>):InterviewMeetingRoom
	export function emptyUpdateProgressEcoBackgroundCheckReq():UpdateProgressEcoBackgroundCheckReq
	export function emptyRefUpdateProgressEcoBackgroundCheckReq():Ref<UpdateProgressEcoBackgroundCheckReq>
	export function refOfUpdateProgressEcoBackgroundCheckReq(x:UpdateProgressEcoBackgroundCheckReq,v:Ref<UpdateProgressEcoBackgroundCheckReq>)
	export function unRefUpdateProgressEcoBackgroundCheckReq(v:Ref<UpdateProgressEcoBackgroundCheckReq>):UpdateProgressEcoBackgroundCheckReq
	export function emptyApplicationOfferAttachment():ApplicationOfferAttachment
	export function emptyRefApplicationOfferAttachment():Ref<ApplicationOfferAttachment>
	export function refOfApplicationOfferAttachment(x:ApplicationOfferAttachment,v:Ref<ApplicationOfferAttachment>)
	export function unRefApplicationOfferAttachment(v:Ref<ApplicationOfferAttachment>):ApplicationOfferAttachment
	export function emptyBatchDeleteEcoExamPaperReq():BatchDeleteEcoExamPaperReq
	export function emptyRefBatchDeleteEcoExamPaperReq():Ref<BatchDeleteEcoExamPaperReq>
	export function refOfBatchDeleteEcoExamPaperReq(x:BatchDeleteEcoExamPaperReq,v:Ref<BatchDeleteEcoExamPaperReq>)
	export function unRefBatchDeleteEcoExamPaperReq(v:Ref<BatchDeleteEcoExamPaperReq>):BatchDeleteEcoExamPaperReq
	export function emptyJobDepartment():JobDepartment
	export function emptyRefJobDepartment():Ref<JobDepartment>
	export function refOfJobDepartment(x:JobDepartment,v:Ref<JobDepartment>)
	export function unRefJobDepartment(v:Ref<JobDepartment>):JobDepartment
	export function emptyAttachment():Attachment
	export function emptyRefAttachment():Ref<Attachment>
	export function refOfAttachment(x:Attachment,v:Ref<Attachment>)
	export function unRefAttachment(v:Ref<Attachment>):Attachment
	export function emptyOnboardStatusTalentReqBody():OnboardStatusTalentReqBody
	export function emptyRefOnboardStatusTalentReqBody():Ref<OnboardStatusTalentReqBody>
	export function refOfOnboardStatusTalentReqBody(x:OnboardStatusTalentReqBody,v:Ref<OnboardStatusTalentReqBody>)
	export function unRefOnboardStatusTalentReqBody(v:Ref<OnboardStatusTalentReqBody>):OnboardStatusTalentReqBody
	export function emptyAcceptance():Acceptance
	export function emptyRefAcceptance():Ref<Acceptance>
	export function refOfAcceptance(x:Acceptance,v:Ref<Acceptance>)
	export function unRefAcceptance(v:Ref<Acceptance>):Acceptance
	export function emptyEmployeeConversionInfo():EmployeeConversionInfo
	export function emptyRefEmployeeConversionInfo():Ref<EmployeeConversionInfo>
	export function refOfEmployeeConversionInfo(x:EmployeeConversionInfo,v:Ref<EmployeeConversionInfo>)
	export function unRefEmployeeConversionInfo(v:Ref<EmployeeConversionInfo>):EmployeeConversionInfo
	export function emptyNote():Note
	export function emptyRefNote():Ref<Note>
	export function refOfNote(x:Note,v:Ref<Note>)
	export function unRefNote(v:Ref<Note>):Note
	export function emptyOfferApplyForm():OfferApplyForm
	export function emptyRefOfferApplyForm():Ref<OfferApplyForm>
	export function refOfOfferApplyForm(x:OfferApplyForm,v:Ref<OfferApplyForm>)
	export function unRefOfferApplyForm(v:Ref<OfferApplyForm>):OfferApplyForm
	export function emptyApplicationTalentAwardInfo():ApplicationTalentAwardInfo
	export function emptyRefApplicationTalentAwardInfo():Ref<ApplicationTalentAwardInfo>
	export function refOfApplicationTalentAwardInfo(x:ApplicationTalentAwardInfo,v:Ref<ApplicationTalentAwardInfo>)
	export function unRefApplicationTalentAwardInfo(v:Ref<ApplicationTalentAwardInfo>):ApplicationTalentAwardInfo
	export function emptyTerminateApplicationResp():TerminateApplicationResp
	export function emptyRefTerminateApplicationResp():Ref<TerminateApplicationResp>
	export function refOfTerminateApplicationResp(x:TerminateApplicationResp,v:Ref<TerminateApplicationResp>)
	export function unRefTerminateApplicationResp(v:Ref<TerminateApplicationResp>):TerminateApplicationResp
	export function emptyUpdateOfferRespData():UpdateOfferRespData
	export function emptyRefUpdateOfferRespData():Ref<UpdateOfferRespData>
	export function refOfUpdateOfferRespData(x:UpdateOfferRespData,v:Ref<UpdateOfferRespData>)
	export function unRefUpdateOfferRespData(v:Ref<UpdateOfferRespData>):UpdateOfferRespData
	export function emptyBatchUpdateJobManagerResp():BatchUpdateJobManagerResp
	export function emptyRefBatchUpdateJobManagerResp():Ref<BatchUpdateJobManagerResp>
	export function refOfBatchUpdateJobManagerResp(x:BatchUpdateJobManagerResp,v:Ref<BatchUpdateJobManagerResp>)
	export function unRefBatchUpdateJobManagerResp(v:Ref<BatchUpdateJobManagerResp>):BatchUpdateJobManagerResp
	export function emptyJobRequirementCustomizedData():JobRequirementCustomizedData
	export function emptyRefJobRequirementCustomizedData():Ref<JobRequirementCustomizedData>
	export function refOfJobRequirementCustomizedData(x:JobRequirementCustomizedData,v:Ref<JobRequirementCustomizedData>)
	export function unRefJobRequirementCustomizedData(v:Ref<JobRequirementCustomizedData>):JobRequirementCustomizedData
	export function emptyListTodoIterator():ListTodoIterator
	export function emptyRefListTodoIterator():Ref<ListTodoIterator>
	export function refOfListTodoIterator(x:ListTodoIterator,v:Ref<ListTodoIterator>)
	export function unRefListTodoIterator(v:Ref<ListTodoIterator>):ListTodoIterator
	export function emptyApplicationPrehireDepartment():ApplicationPrehireDepartment
	export function emptyRefApplicationPrehireDepartment():Ref<ApplicationPrehireDepartment>
	export function refOfApplicationPrehireDepartment(x:ApplicationPrehireDepartment,v:Ref<ApplicationPrehireDepartment>)
	export function unRefApplicationPrehireDepartment(v:Ref<ApplicationPrehireDepartment>):ApplicationPrehireDepartment
	export function emptyOfferCustomizedInfo():OfferCustomizedInfo
	export function emptyRefOfferCustomizedInfo():Ref<OfferCustomizedInfo>
	export function refOfOfferCustomizedInfo(x:OfferCustomizedInfo,v:Ref<OfferCustomizedInfo>)
	export function unRefOfferCustomizedInfo(v:Ref<OfferCustomizedInfo>):OfferCustomizedInfo
	export function emptyQueryLocationReq():QueryLocationReq
	export function emptyRefQueryLocationReq():Ref<QueryLocationReq>
	export function refOfQueryLocationReq(x:QueryLocationReq,v:Ref<QueryLocationReq>)
	export function unRefQueryLocationReq(v:Ref<QueryLocationReq>):QueryLocationReq
	export function emptyDeleteTripartiteAgreementReq():DeleteTripartiteAgreementReq
	export function emptyRefDeleteTripartiteAgreementReq():Ref<DeleteTripartiteAgreementReq>
	export function refOfDeleteTripartiteAgreementReq(x:DeleteTripartiteAgreementReq,v:Ref<DeleteTripartiteAgreementReq>)
	export function unRefDeleteTripartiteAgreementReq(v:Ref<DeleteTripartiteAgreementReq>):DeleteTripartiteAgreementReq
	export function emptyQueryTalentObjectResp():QueryTalentObjectResp
	export function emptyRefQueryTalentObjectResp():Ref<QueryTalentObjectResp>
	export function refOfQueryTalentObjectResp(x:QueryTalentObjectResp,v:Ref<QueryTalentObjectResp>)
	export function unRefQueryTalentObjectResp(v:Ref<QueryTalentObjectResp>):QueryTalentObjectResp
	export function emptyOfferApplyFormConfigOptionInfo():OfferApplyFormConfigOptionInfo
	export function emptyRefOfferApplyFormConfigOptionInfo():Ref<OfferApplyFormConfigOptionInfo>
	export function refOfOfferApplyFormConfigOptionInfo(x:OfferApplyFormConfigOptionInfo,v:Ref<OfferApplyFormConfigOptionInfo>)
	export function unRefOfferApplyFormConfigOptionInfo(v:Ref<OfferApplyFormConfigOptionInfo>):OfferApplyFormConfigOptionInfo
	export function emptyOfferSendRecord():OfferSendRecord
	export function emptyRefOfferSendRecord():Ref<OfferSendRecord>
	export function refOfOfferSendRecord(x:OfferSendRecord,v:Ref<OfferSendRecord>)
	export function unRefOfferSendRecord(v:Ref<OfferSendRecord>):OfferSendRecord
	export function emptyTalentCombinedWorkInfo():TalentCombinedWorkInfo
	export function emptyRefTalentCombinedWorkInfo():Ref<TalentCombinedWorkInfo>
	export function refOfTalentCombinedWorkInfo(x:TalentCombinedWorkInfo,v:Ref<TalentCombinedWorkInfo>)
	export function unRefTalentCombinedWorkInfo(v:Ref<TalentCombinedWorkInfo>):TalentCombinedWorkInfo
	export function emptyApplicationOfferOnboardProfile():ApplicationOfferOnboardProfile
	export function emptyRefApplicationOfferOnboardProfile():Ref<ApplicationOfferOnboardProfile>
	export function refOfApplicationOfferOnboardProfile(x:ApplicationOfferOnboardProfile,v:Ref<ApplicationOfferOnboardProfile>)
	export function unRefApplicationOfferOnboardProfile(v:Ref<ApplicationOfferOnboardProfile>):ApplicationOfferOnboardProfile
	export function emptyProjectInfo():ProjectInfo
	export function emptyRefProjectInfo():Ref<ProjectInfo>
	export function refOfProjectInfo(x:ProjectInfo,v:Ref<ProjectInfo>)
	export function unRefProjectInfo(v:Ref<ProjectInfo>):ProjectInfo
	export function emptyUpdateTalentExternalInfoReqBody():UpdateTalentExternalInfoReqBody
	export function emptyRefUpdateTalentExternalInfoReqBody():Ref<UpdateTalentExternalInfoReqBody>
	export function refOfUpdateTalentExternalInfoReqBody(x:UpdateTalentExternalInfoReqBody,v:Ref<UpdateTalentExternalInfoReqBody>)
	export function unRefUpdateTalentExternalInfoReqBody(v:Ref<UpdateTalentExternalInfoReqBody>):UpdateTalentExternalInfoReqBody
	export function emptyInterviewRoundType():InterviewRoundType
	export function emptyRefInterviewRoundType():Ref<InterviewRoundType>
	export function refOfInterviewRoundType(x:InterviewRoundType,v:Ref<InterviewRoundType>)
	export function unRefInterviewRoundType(v:Ref<InterviewRoundType>):InterviewRoundType
	export function emptyOfferStatusOfferResp():OfferStatusOfferResp
	export function emptyRefOfferStatusOfferResp():Ref<OfferStatusOfferResp>
	export function refOfOfferStatusOfferResp(x:OfferStatusOfferResp,v:Ref<OfferStatusOfferResp>)
	export function unRefOfferStatusOfferResp(v:Ref<OfferStatusOfferResp>):OfferStatusOfferResp
	export function emptyP2TalentDeletedV1Data():P2TalentDeletedV1Data
	export function emptyRefP2TalentDeletedV1Data():Ref<P2TalentDeletedV1Data>
	export function refOfP2TalentDeletedV1Data(x:P2TalentDeletedV1Data,v:Ref<P2TalentDeletedV1Data>)
	export function unRefP2TalentDeletedV1Data(v:Ref<P2TalentDeletedV1Data>):P2TalentDeletedV1Data
	export function emptyListApplicationInterviewReq():ListApplicationInterviewReq
	export function emptyRefListApplicationInterviewReq():Ref<ListApplicationInterviewReq>
	export function refOfListApplicationInterviewReq(x:ListApplicationInterviewReq,v:Ref<ListApplicationInterviewReq>)
	export function unRefListApplicationInterviewReq(v:Ref<ListApplicationInterviewReq>):ListApplicationInterviewReq
	export function emptyChangeEmployeeStage():ChangeEmployeeStage
	export function emptyRefChangeEmployeeStage():Ref<ChangeEmployeeStage>
	export function refOfChangeEmployeeStage(x:ChangeEmployeeStage,v:Ref<ChangeEmployeeStage>)
	export function unRefChangeEmployeeStage(v:Ref<ChangeEmployeeStage>):ChangeEmployeeStage
	export function emptyOfferApplyFormObjectConfigInfo():OfferApplyFormObjectConfigInfo
	export function emptyRefOfferApplyFormObjectConfigInfo():Ref<OfferApplyFormObjectConfigInfo>
	export function refOfOfferApplyFormObjectConfigInfo(x:OfferApplyFormObjectConfigInfo,v:Ref<OfferApplyFormObjectConfigInfo>)
	export function unRefOfferApplyFormObjectConfigInfo(v:Ref<OfferApplyFormObjectConfigInfo>):OfferApplyFormObjectConfigInfo
	export function emptyGetOfferApplicationFormReq():GetOfferApplicationFormReq
	export function emptyRefGetOfferApplicationFormReq():Ref<GetOfferApplicationFormReq>
	export function refOfGetOfferApplicationFormReq(x:GetOfferApplicationFormReq,v:Ref<GetOfferApplicationFormReq>)
	export function unRefGetOfferApplicationFormReq(v:Ref<GetOfferApplicationFormReq>):GetOfferApplicationFormReq
	export function emptyP2EcoBackgroundCheckCreatedV1():P2EcoBackgroundCheckCreatedV1
	export function emptyRefP2EcoBackgroundCheckCreatedV1():Ref<P2EcoBackgroundCheckCreatedV1>
	export function refOfP2EcoBackgroundCheckCreatedV1(x:P2EcoBackgroundCheckCreatedV1,v:Ref<P2EcoBackgroundCheckCreatedV1>)
	export function unRefP2EcoBackgroundCheckCreatedV1(v:Ref<P2EcoBackgroundCheckCreatedV1>):P2EcoBackgroundCheckCreatedV1
	export function emptyUpdateResultEcoExamResp():UpdateResultEcoExamResp
	export function emptyRefUpdateResultEcoExamResp():Ref<UpdateResultEcoExamResp>
	export function refOfUpdateResultEcoExamResp(x:UpdateResultEcoExamResp,v:Ref<UpdateResultEcoExamResp>)
	export function unRefUpdateResultEcoExamResp(v:Ref<UpdateResultEcoExamResp>):UpdateResultEcoExamResp
	export function emptyExternalReward():ExternalReward
	export function emptyRefExternalReward():Ref<ExternalReward>
	export function refOfExternalReward(x:ExternalReward,v:Ref<ExternalReward>)
	export function unRefExternalReward(v:Ref<ExternalReward>):ExternalReward
	export function emptyListTerminationReasonIterator():ListTerminationReasonIterator
	export function emptyRefListTerminationReasonIterator():Ref<ListTerminationReasonIterator>
	export function refOfListTerminationReasonIterator(x:ListTerminationReasonIterator,v:Ref<ListTerminationReasonIterator>)
	export function unRefListTerminationReasonIterator(v:Ref<ListTerminationReasonIterator>):ListTerminationReasonIterator
	export function emptyListWebsiteChannelRespData():ListWebsiteChannelRespData
	export function emptyRefListWebsiteChannelRespData():Ref<ListWebsiteChannelRespData>
	export function refOfListWebsiteChannelRespData(x:ListWebsiteChannelRespData,v:Ref<ListWebsiteChannelRespData>)
	export function unRefListWebsiteChannelRespData(v:Ref<ListWebsiteChannelRespData>):ListWebsiteChannelRespData
	export function emptyWebsiteJobPostCustomizedValue():WebsiteJobPostCustomizedValue
	export function emptyRefWebsiteJobPostCustomizedValue():Ref<WebsiteJobPostCustomizedValue>
	export function refOfWebsiteJobPostCustomizedValue(x:WebsiteJobPostCustomizedValue,v:Ref<WebsiteJobPostCustomizedValue>)
	export function unRefWebsiteJobPostCustomizedValue(v:Ref<WebsiteJobPostCustomizedValue>):WebsiteJobPostCustomizedValue
	export function emptyApplicationPrehireOptional():ApplicationPrehireOptional
	export function emptyRefApplicationPrehireOptional():Ref<ApplicationPrehireOptional>
	export function refOfApplicationPrehireOptional(x:ApplicationPrehireOptional,v:Ref<ApplicationPrehireOptional>)
	export function unRefApplicationPrehireOptional(v:Ref<ApplicationPrehireOptional>):ApplicationPrehireOptional
	export function emptyListByIdJobRequirementRespData():ListByIdJobRequirementRespData
	export function emptyRefListByIdJobRequirementRespData():Ref<ListByIdJobRequirementRespData>
	export function refOfListByIdJobRequirementRespData(x:ListByIdJobRequirementRespData,v:Ref<ListByIdJobRequirementRespData>)
	export function unRefListByIdJobRequirementRespData(v:Ref<ListByIdJobRequirementRespData>):ListByIdJobRequirementRespData
	export function emptyListResumeSourceRespData():ListResumeSourceRespData
	export function emptyRefListResumeSourceRespData():Ref<ListResumeSourceRespData>
	export function refOfListResumeSourceRespData(x:ListResumeSourceRespData,v:Ref<ListResumeSourceRespData>)
	export function unRefListResumeSourceRespData(v:Ref<ListResumeSourceRespData>):ListResumeSourceRespData
	export function emptyOfferCustomFieldConfigOption():OfferCustomFieldConfigOption
	export function emptyRefOfferCustomFieldConfigOption():Ref<OfferCustomFieldConfigOption>
	export function refOfOfferCustomFieldConfigOption(x:OfferCustomFieldConfigOption,v:Ref<OfferCustomFieldConfigOption>)
	export function unRefOfferCustomFieldConfigOption(v:Ref<OfferCustomFieldConfigOption>):OfferCustomFieldConfigOption
	export function emptyQueryLocationRespData():QueryLocationRespData
	export function emptyRefQueryLocationRespData():Ref<QueryLocationRespData>
	export function refOfQueryLocationRespData(x:QueryLocationRespData,v:Ref<QueryLocationRespData>)
	export function unRefQueryLocationRespData(v:Ref<QueryLocationRespData>):QueryLocationRespData
	export function emptyBatchUpdateEcoBackgroundCheckPackageReq():BatchUpdateEcoBackgroundCheckPackageReq
	export function emptyRefBatchUpdateEcoBackgroundCheckPackageReq():Ref<BatchUpdateEcoBackgroundCheckPackageReq>
	export function refOfBatchUpdateEcoBackgroundCheckPackageReq(x:BatchUpdateEcoBackgroundCheckPackageReq,v:Ref<BatchUpdateEcoBackgroundCheckPackageReq>)
	export function unRefBatchUpdateEcoBackgroundCheckPackageReq(v:Ref<BatchUpdateEcoBackgroundCheckPackageReq>):BatchUpdateEcoBackgroundCheckPackageReq
	export function emptyCombinedJobObjectValueMap():CombinedJobObjectValueMap
	export function emptyRefCombinedJobObjectValueMap():Ref<CombinedJobObjectValueMap>
	export function refOfCombinedJobObjectValueMap(x:CombinedJobObjectValueMap,v:Ref<CombinedJobObjectValueMap>)
	export function unRefCombinedJobObjectValueMap(v:Ref<CombinedJobObjectValueMap>):CombinedJobObjectValueMap
	export function emptySiteResumeEducation():SiteResumeEducation
	export function emptyRefSiteResumeEducation():Ref<SiteResumeEducation>
	export function refOfSiteResumeEducation(x:SiteResumeEducation,v:Ref<SiteResumeEducation>)
	export function unRefSiteResumeEducation(v:Ref<SiteResumeEducation>):SiteResumeEducation
	export function emptyGetOfferReq():GetOfferReq
	export function emptyRefGetOfferReq():Ref<GetOfferReq>
	export function refOfGetOfferReq(x:GetOfferReq,v:Ref<GetOfferReq>)
	export function unRefGetOfferReq(v:Ref<GetOfferReq>):GetOfferReq
	export function emptyJobCity():JobCity
	export function emptyRefJobCity():Ref<JobCity>
	export function refOfJobCity(x:JobCity,v:Ref<JobCity>)
	export function unRefJobCity(v:Ref<JobCity>):JobCity
	export function emptyWebsiteDeliveryCertificate():WebsiteDeliveryCertificate
	export function emptyRefWebsiteDeliveryCertificate():Ref<WebsiteDeliveryCertificate>
	export function refOfWebsiteDeliveryCertificate(x:WebsiteDeliveryCertificate,v:Ref<WebsiteDeliveryCertificate>)
	export function unRefWebsiteDeliveryCertificate(v:Ref<WebsiteDeliveryCertificate>):WebsiteDeliveryCertificate
	export function emptyAppliTalentCertificateInfo():AppliTalentCertificateInfo
	export function emptyRefAppliTalentCertificateInfo():Ref<AppliTalentCertificateInfo>
	export function refOfAppliTalentCertificateInfo(x:AppliTalentCertificateInfo,v:Ref<AppliTalentCertificateInfo>)
	export function unRefAppliTalentCertificateInfo(v:Ref<AppliTalentCertificateInfo>):AppliTalentCertificateInfo
	export function emptySearchTalentPoolRespData():SearchTalentPoolRespData
	export function emptyRefSearchTalentPoolRespData():Ref<SearchTalentPoolRespData>
	export function refOfSearchTalentPoolRespData(x:SearchTalentPoolRespData,v:Ref<SearchTalentPoolRespData>)
	export function unRefSearchTalentPoolRespData(v:Ref<SearchTalentPoolRespData>):SearchTalentPoolRespData
	export function emptyUpdateWebsiteChannelReqBody():UpdateWebsiteChannelReqBody
	export function emptyRefUpdateWebsiteChannelReqBody():Ref<UpdateWebsiteChannelReqBody>
	export function refOfUpdateWebsiteChannelReqBody(x:UpdateWebsiteChannelReqBody,v:Ref<UpdateWebsiteChannelReqBody>)
	export function unRefUpdateWebsiteChannelReqBody(v:Ref<UpdateWebsiteChannelReqBody>):UpdateWebsiteChannelReqBody
	export function emptyP2ApplicationStageChangedV1():P2ApplicationStageChangedV1
	export function emptyRefP2ApplicationStageChangedV1():Ref<P2ApplicationStageChangedV1>
	export function refOfP2ApplicationStageChangedV1(x:P2ApplicationStageChangedV1,v:Ref<P2ApplicationStageChangedV1>)
	export function unRefP2ApplicationStageChangedV1(v:Ref<P2ApplicationStageChangedV1>):P2ApplicationStageChangedV1
	export function emptyP2TalentDeletedV1():P2TalentDeletedV1
	export function emptyRefP2TalentDeletedV1():Ref<P2TalentDeletedV1>
	export function refOfP2TalentDeletedV1(x:P2TalentDeletedV1,v:Ref<P2TalentDeletedV1>)
	export function unRefP2TalentDeletedV1(v:Ref<P2TalentDeletedV1>):P2TalentDeletedV1
	export function emptyOfferApprovalTemplate():OfferApprovalTemplate
	export function emptyRefOfferApprovalTemplate():Ref<OfferApprovalTemplate>
	export function refOfOfferApprovalTemplate(x:OfferApprovalTemplate,v:Ref<OfferApprovalTemplate>)
	export function unRefOfferApprovalTemplate(v:Ref<OfferApprovalTemplate>):OfferApprovalTemplate
	export function emptyCreateEcoExamPaperReq():CreateEcoExamPaperReq
	export function emptyRefCreateEcoExamPaperReq():Ref<CreateEcoExamPaperReq>
	export function refOfCreateEcoExamPaperReq(x:CreateEcoExamPaperReq,v:Ref<CreateEcoExamPaperReq>)
	export function unRefCreateEcoExamPaperReq(v:Ref<CreateEcoExamPaperReq>):CreateEcoExamPaperReq
	export function emptyDeleteExternalReferralRewardReq():DeleteExternalReferralRewardReq
	export function emptyRefDeleteExternalReferralRewardReq():Ref<DeleteExternalReferralRewardReq>
	export function refOfDeleteExternalReferralRewardReq(x:DeleteExternalReferralRewardReq,v:Ref<DeleteExternalReferralRewardReq>)
	export function unRefDeleteExternalReferralRewardReq(v:Ref<DeleteExternalReferralRewardReq>):DeleteExternalReferralRewardReq
	export function emptyJobConfigInterviewRound():JobConfigInterviewRound
	export function emptyRefJobConfigInterviewRound():Ref<JobConfigInterviewRound>
	export function refOfJobConfigInterviewRound(x:JobConfigInterviewRound,v:Ref<JobConfigInterviewRound>)
	export function unRefJobConfigInterviewRound(v:Ref<JobConfigInterviewRound>):JobConfigInterviewRound
	export function emptyQueryAgencyReq():QueryAgencyReq
	export function emptyRefQueryAgencyReq():Ref<QueryAgencyReq>
	export function refOfQueryAgencyReq(x:QueryAgencyReq,v:Ref<QueryAgencyReq>)
	export function unRefQueryAgencyReq(v:Ref<QueryAgencyReq>):QueryAgencyReq
	export function emptyCreateByAttachmentWebsiteDeliveryReq():CreateByAttachmentWebsiteDeliveryReq
	export function emptyRefCreateByAttachmentWebsiteDeliveryReq():Ref<CreateByAttachmentWebsiteDeliveryReq>
	export function refOfCreateByAttachmentWebsiteDeliveryReq(x:CreateByAttachmentWebsiteDeliveryReq,v:Ref<CreateByAttachmentWebsiteDeliveryReq>)
	export function unRefCreateByAttachmentWebsiteDeliveryReq(v:Ref<CreateByAttachmentWebsiteDeliveryReq>):CreateByAttachmentWebsiteDeliveryReq
	export function emptyInternOfferStatusOfferReq():InternOfferStatusOfferReq
	export function emptyRefInternOfferStatusOfferReq():Ref<InternOfferStatusOfferReq>
	export function refOfInternOfferStatusOfferReq(x:InternOfferStatusOfferReq,v:Ref<InternOfferStatusOfferReq>)
	export function unRefInternOfferStatusOfferReq(v:Ref<InternOfferStatusOfferReq>):InternOfferStatusOfferReq
	export function emptyListEvaluationTaskRespData():ListEvaluationTaskRespData
	export function emptyRefListEvaluationTaskRespData():Ref<ListEvaluationTaskRespData>
	export function refOfListEvaluationTaskRespData(x:ListEvaluationTaskRespData,v:Ref<ListEvaluationTaskRespData>)
	export function unRefListEvaluationTaskRespData(v:Ref<ListEvaluationTaskRespData>):ListEvaluationTaskRespData
	export function emptyApplicationOfferSalaryPlan():ApplicationOfferSalaryPlan
	export function emptyRefApplicationOfferSalaryPlan():Ref<ApplicationOfferSalaryPlan>
	export function refOfApplicationOfferSalaryPlan(x:ApplicationOfferSalaryPlan,v:Ref<ApplicationOfferSalaryPlan>)
	export function unRefApplicationOfferSalaryPlan(v:Ref<ApplicationOfferSalaryPlan>):ApplicationOfferSalaryPlan
	export function emptyBackgroundCheckOrder():BackgroundCheckOrder
	export function emptyRefBackgroundCheckOrder():Ref<BackgroundCheckOrder>
	export function refOfBackgroundCheckOrder(x:BackgroundCheckOrder,v:Ref<BackgroundCheckOrder>)
	export function unRefBackgroundCheckOrder(v:Ref<BackgroundCheckOrder>):BackgroundCheckOrder
	export function emptyGetByApplicationEmployeeResp():GetByApplicationEmployeeResp
	export function emptyRefGetByApplicationEmployeeResp():Ref<GetByApplicationEmployeeResp>
	export function refOfGetByApplicationEmployeeResp(x:GetByApplicationEmployeeResp,v:Ref<GetByApplicationEmployeeResp>)
	export function unRefGetByApplicationEmployeeResp(v:Ref<GetByApplicationEmployeeResp>):GetByApplicationEmployeeResp
	export function emptyOfferApplyFormObjectDisplayConfigInfo():OfferApplyFormObjectDisplayConfigInfo
	export function emptyRefOfferApplyFormObjectDisplayConfigInfo():Ref<OfferApplyFormObjectDisplayConfigInfo>
	export function refOfOfferApplyFormObjectDisplayConfigInfo(x:OfferApplyFormObjectDisplayConfigInfo,v:Ref<OfferApplyFormObjectDisplayConfigInfo>)
	export function unRefOfferApplyFormObjectDisplayConfigInfo(v:Ref<OfferApplyFormObjectDisplayConfigInfo>):OfferApplyFormObjectDisplayConfigInfo
	export function emptyCreateWebsiteSiteUserResp():CreateWebsiteSiteUserResp
	export function emptyRefCreateWebsiteSiteUserResp():Ref<CreateWebsiteSiteUserResp>
	export function refOfCreateWebsiteSiteUserResp(x:CreateWebsiteSiteUserResp,v:Ref<CreateWebsiteSiteUserResp>)
	export function unRefCreateWebsiteSiteUserResp(v:Ref<CreateWebsiteSiteUserResp>):CreateWebsiteSiteUserResp
	export function emptyReferral():Referral
	export function emptyRefReferral():Ref<Referral>
	export function refOfReferral(x:Referral,v:Ref<Referral>)
	export function unRefReferral(v:Ref<Referral>):Referral
	export function emptyLocationNameInfo():LocationNameInfo
	export function emptyRefLocationNameInfo():Ref<LocationNameInfo>
	export function refOfLocationNameInfo(x:LocationNameInfo,v:Ref<LocationNameInfo>)
	export function unRefLocationNameInfo(v:Ref<LocationNameInfo>):LocationNameInfo
	export function emptyP2ReferralAccountAssetsUpdateV1():P2ReferralAccountAssetsUpdateV1
	export function emptyRefP2ReferralAccountAssetsUpdateV1():Ref<P2ReferralAccountAssetsUpdateV1>
	export function refOfP2ReferralAccountAssetsUpdateV1(x:P2ReferralAccountAssetsUpdateV1,v:Ref<P2ReferralAccountAssetsUpdateV1>)
	export function unRefP2ReferralAccountAssetsUpdateV1(v:Ref<P2ReferralAccountAssetsUpdateV1>):P2ReferralAccountAssetsUpdateV1
	export function emptyUpdateResultEcoBackgroundCheckReq():UpdateResultEcoBackgroundCheckReq
	export function emptyRefUpdateResultEcoBackgroundCheckReq():Ref<UpdateResultEcoBackgroundCheckReq>
	export function refOfUpdateResultEcoBackgroundCheckReq(x:UpdateResultEcoBackgroundCheckReq,v:Ref<UpdateResultEcoBackgroundCheckReq>)
	export function unRefUpdateResultEcoBackgroundCheckReq(v:Ref<UpdateResultEcoBackgroundCheckReq>):UpdateResultEcoBackgroundCheckReq
	export function emptyListRoleResp():ListRoleResp
	export function emptyRefListRoleResp():Ref<ListRoleResp>
	export function refOfListRoleResp(x:ListRoleResp,v:Ref<ListRoleResp>)
	export function unRefListRoleResp(v:Ref<ListRoleResp>):ListRoleResp
	export function emptySiteJobCity():SiteJobCity
	export function emptyRefSiteJobCity():Ref<SiteJobCity>
	export function refOfSiteJobCity(x:SiteJobCity,v:Ref<SiteJobCity>)
	export function unRefSiteJobCity(v:Ref<SiteJobCity>):SiteJobCity
	export function emptyLevel():Level
	export function emptyRefLevel():Ref<Level>
	export function refOfLevel(x:Level,v:Ref<Level>)
	export function unRefLevel(v:Ref<Level>):Level
	export function emptyListWebsiteIterator():ListWebsiteIterator
	export function emptyRefListWebsiteIterator():Ref<ListWebsiteIterator>
	export function refOfListWebsiteIterator(x:ListWebsiteIterator,v:Ref<ListWebsiteIterator>)
	export function unRefListWebsiteIterator(v:Ref<ListWebsiteIterator>):ListWebsiteIterator
	export function emptyCreateNoteRespData():CreateNoteRespData
	export function emptyRefCreateNoteRespData():Ref<CreateNoteRespData>
	export function refOfCreateNoteRespData(x:CreateNoteRespData,v:Ref<CreateNoteRespData>)
	export function unRefCreateNoteRespData(v:Ref<CreateNoteRespData>):CreateNoteRespData
	export function emptyOfferSignatureInfo():OfferSignatureInfo
	export function emptyRefOfferSignatureInfo():Ref<OfferSignatureInfo>
	export function refOfOfferSignatureInfo(x:OfferSignatureInfo,v:Ref<OfferSignatureInfo>)
	export function unRefOfferSignatureInfo(v:Ref<OfferSignatureInfo>):OfferSignatureInfo
	export function emptyExamMarkingTask():ExamMarkingTask
	export function emptyRefExamMarkingTask():Ref<ExamMarkingTask>
	export function refOfExamMarkingTask(x:ExamMarkingTask,v:Ref<ExamMarkingTask>)
	export function unRefExamMarkingTask(v:Ref<ExamMarkingTask>):ExamMarkingTask
	export function emptyListTripartiteAgreementReq():ListTripartiteAgreementReq
	export function emptyRefListTripartiteAgreementReq():Ref<ListTripartiteAgreementReq>
	export function refOfListTripartiteAgreementReq(x:ListTripartiteAgreementReq,v:Ref<ListTripartiteAgreementReq>)
	export function unRefListTripartiteAgreementReq(v:Ref<ListTripartiteAgreementReq>):ListTripartiteAgreementReq
	export function emptyApplicationPrehireOffer():ApplicationPrehireOffer
	export function emptyRefApplicationPrehireOffer():Ref<ApplicationPrehireOffer>
	export function refOfApplicationPrehireOffer(x:ApplicationPrehireOffer,v:Ref<ApplicationPrehireOffer>)
	export function unRefApplicationPrehireOffer(v:Ref<ApplicationPrehireOffer>):ApplicationPrehireOffer
	export function emptyCombinedUpdateTalentReq():CombinedUpdateTalentReq
	export function emptyRefCombinedUpdateTalentReq():Ref<CombinedUpdateTalentReq>
	export function refOfCombinedUpdateTalentReq(x:CombinedUpdateTalentReq,v:Ref<CombinedUpdateTalentReq>)
	export function unRefCombinedUpdateTalentReq(v:Ref<CombinedUpdateTalentReq>):CombinedUpdateTalentReq
	export function emptyGetWebsiteJobPostResp():GetWebsiteJobPostResp
	export function emptyRefGetWebsiteJobPostResp():Ref<GetWebsiteJobPostResp>
	export function refOfGetWebsiteJobPostResp(x:GetWebsiteJobPostResp,v:Ref<GetWebsiteJobPostResp>)
	export function unRefGetWebsiteJobPostResp(v:Ref<GetWebsiteJobPostResp>):GetWebsiteJobPostResp
	export function emptyPatchEmployeeResp():PatchEmployeeResp
	export function emptyRefPatchEmployeeResp():Ref<PatchEmployeeResp>
	export function refOfPatchEmployeeResp(x:PatchEmployeeResp,v:Ref<PatchEmployeeResp>)
	export function unRefPatchEmployeeResp(v:Ref<PatchEmployeeResp>):PatchEmployeeResp
	export function emptySiteApplicationResume():SiteApplicationResume
	export function emptyRefSiteApplicationResume():Ref<SiteApplicationResume>
	export function refOfSiteApplicationResume(x:SiteApplicationResume,v:Ref<SiteApplicationResume>)
	export function unRefSiteApplicationResume(v:Ref<SiteApplicationResume>):SiteApplicationResume
	export function emptyTalent():Talent
	export function emptyRefTalent():Ref<Talent>
	export function refOfTalent(x:Talent,v:Ref<Talent>)
	export function unRefTalent(v:Ref<Talent>):Talent
	export function emptyTargetMajorInfo():TargetMajorInfo
	export function emptyRefTargetMajorInfo():Ref<TargetMajorInfo>
	export function refOfTargetMajorInfo(x:TargetMajorInfo,v:Ref<TargetMajorInfo>)
	export function unRefTargetMajorInfo(v:Ref<TargetMajorInfo>):TargetMajorInfo
	export function emptyBackgroundCheckOrderProcessInfo():BackgroundCheckOrderProcessInfo
	export function emptyRefBackgroundCheckOrderProcessInfo():Ref<BackgroundCheckOrderProcessInfo>
	export function refOfBackgroundCheckOrderProcessInfo(x:BackgroundCheckOrderProcessInfo,v:Ref<BackgroundCheckOrderProcessInfo>)
	export function unRefBackgroundCheckOrderProcessInfo(v:Ref<BackgroundCheckOrderProcessInfo>):BackgroundCheckOrderProcessInfo
	export function emptyWebsiteDeliverySns():WebsiteDeliverySns
	export function emptyRefWebsiteDeliverySns():Ref<WebsiteDeliverySns>
	export function refOfWebsiteDeliverySns(x:WebsiteDeliverySns,v:Ref<WebsiteDeliverySns>)
	export function unRefWebsiteDeliverySns(v:Ref<WebsiteDeliverySns>):WebsiteDeliverySns
	export function emptyListTalentFolderRespData():ListTalentFolderRespData
	export function emptyRefListTalentFolderRespData():Ref<ListTalentFolderRespData>
	export function refOfListTalentFolderRespData(x:ListTalentFolderRespData,v:Ref<ListTalentFolderRespData>)
	export function unRefListTalentFolderRespData(v:Ref<ListTalentFolderRespData>):ListTalentFolderRespData
	export function emptyIdentification():Identification
	export function emptyRefIdentification():Ref<Identification>
	export function refOfIdentification(x:Identification,v:Ref<Identification>)
	export function unRefIdentification(v:Ref<Identification>):Identification
	export function emptyGetEmployeeRespData():GetEmployeeRespData
	export function emptyRefGetEmployeeRespData():Ref<GetEmployeeRespData>
	export function refOfGetEmployeeRespData(x:GetEmployeeRespData,v:Ref<GetEmployeeRespData>)
	export function unRefGetEmployeeRespData(v:Ref<GetEmployeeRespData>):GetEmployeeRespData
	export function emptyGetJobRespData():GetJobRespData
	export function emptyRefGetJobRespData():Ref<GetJobRespData>
	export function refOfGetJobRespData(x:GetJobRespData,v:Ref<GetJobRespData>)
	export function unRefGetJobRespData(v:Ref<GetJobRespData>):GetJobRespData
	export function emptyCombinedCreateTalentRespData():CombinedCreateTalentRespData
	export function emptyRefCombinedCreateTalentRespData():Ref<CombinedCreateTalentRespData>
	export function refOfCombinedCreateTalentRespData(x:CombinedCreateTalentRespData,v:Ref<CombinedCreateTalentRespData>)
	export function unRefCombinedCreateTalentRespData(v:Ref<CombinedCreateTalentRespData>):CombinedCreateTalentRespData
	export function emptyReferralInfo():ReferralInfo
	export function emptyRefReferralInfo():Ref<ReferralInfo>
	export function refOfReferralInfo(x:ReferralInfo,v:Ref<ReferralInfo>)
	export function unRefReferralInfo(v:Ref<ReferralInfo>):ReferralInfo
	export function emptyApplicationTalentCompetitionInfo():ApplicationTalentCompetitionInfo
	export function emptyRefApplicationTalentCompetitionInfo():Ref<ApplicationTalentCompetitionInfo>
	export function refOfApplicationTalentCompetitionInfo(x:ApplicationTalentCompetitionInfo,v:Ref<ApplicationTalentCompetitionInfo>)
	export function unRefApplicationTalentCompetitionInfo(v:Ref<ApplicationTalentCompetitionInfo>):ApplicationTalentCompetitionInfo
	export function emptyListOfferResp():ListOfferResp
	export function emptyRefListOfferResp():Ref<ListOfferResp>
	export function refOfListOfferResp(x:ListOfferResp,v:Ref<ListOfferResp>)
	export function unRefListOfferResp(v:Ref<ListOfferResp>):ListOfferResp
	export function emptyP2OfferStatusChangedV1Data():P2OfferStatusChangedV1Data
	export function emptyRefP2OfferStatusChangedV1Data():Ref<P2OfferStatusChangedV1Data>
	export function refOfP2OfferStatusChangedV1Data(x:P2OfferStatusChangedV1Data,v:Ref<P2OfferStatusChangedV1Data>)
	export function unRefP2OfferStatusChangedV1Data(v:Ref<P2OfferStatusChangedV1Data>):P2OfferStatusChangedV1Data
	export function emptyProviderIdNameObject():ProviderIdNameObject
	export function emptyRefProviderIdNameObject():Ref<ProviderIdNameObject>
	export function refOfProviderIdNameObject(x:ProviderIdNameObject,v:Ref<ProviderIdNameObject>)
	export function unRefProviderIdNameObject(v:Ref<ProviderIdNameObject>):ProviderIdNameObject
	export function emptyUpdateTripartiteAgreementRespData():UpdateTripartiteAgreementRespData
	export function emptyRefUpdateTripartiteAgreementRespData():Ref<UpdateTripartiteAgreementRespData>
	export function refOfUpdateTripartiteAgreementRespData(x:UpdateTripartiteAgreementRespData,v:Ref<UpdateTripartiteAgreementRespData>)
	export function unRefUpdateTripartiteAgreementRespData(v:Ref<UpdateTripartiteAgreementRespData>):UpdateTripartiteAgreementRespData
	export function emptyDeleteExternalApplicationResp():DeleteExternalApplicationResp
	export function emptyRefDeleteExternalApplicationResp():Ref<DeleteExternalApplicationResp>
	export function refOfDeleteExternalApplicationResp(x:DeleteExternalApplicationResp,v:Ref<DeleteExternalApplicationResp>)
	export function unRefDeleteExternalApplicationResp(v:Ref<DeleteExternalApplicationResp>):DeleteExternalApplicationResp
	export function emptyEcoBackgroundCheckCreateEventCandidateInfo():EcoBackgroundCheckCreateEventCandidateInfo
	export function emptyRefEcoBackgroundCheckCreateEventCandidateInfo():Ref<EcoBackgroundCheckCreateEventCandidateInfo>
	export function refOfEcoBackgroundCheckCreateEventCandidateInfo(x:EcoBackgroundCheckCreateEventCandidateInfo,v:Ref<EcoBackgroundCheckCreateEventCandidateInfo>)
	export function unRefEcoBackgroundCheckCreateEventCandidateInfo(v:Ref<EcoBackgroundCheckCreateEventCandidateInfo>):EcoBackgroundCheckCreateEventCandidateInfo
	export function emptyDiInfo():DiInfo
	export function emptyRefDiInfo():Ref<DiInfo>
	export function refOfDiInfo(x:DiInfo,v:Ref<DiInfo>)
	export function unRefDiInfo(v:Ref<DiInfo>):DiInfo
	export function emptyCompetitionInfo():CompetitionInfo
	export function emptyRefCompetitionInfo():Ref<CompetitionInfo>
	export function refOfCompetitionInfo(x:CompetitionInfo,v:Ref<CompetitionInfo>)
	export function unRefCompetitionInfo(v:Ref<CompetitionInfo>):CompetitionInfo
	export function emptyDeleteWebsiteChannelResp():DeleteWebsiteChannelResp
	export function emptyRefDeleteWebsiteChannelResp():Ref<DeleteWebsiteChannelResp>
	export function refOfDeleteWebsiteChannelResp(x:DeleteWebsiteChannelResp,v:Ref<DeleteWebsiteChannelResp>)
	export function unRefDeleteWebsiteChannelResp(v:Ref<DeleteWebsiteChannelResp>):DeleteWebsiteChannelResp
	export function emptyJobTypeInfo():JobTypeInfo
	export function emptyRefJobTypeInfo():Ref<JobTypeInfo>
	export function refOfJobTypeInfo(x:JobTypeInfo,v:Ref<JobTypeInfo>)
	export function unRefJobTypeInfo(v:Ref<JobTypeInfo>):JobTypeInfo
	export function emptyListByIdJobRequirementReq():ListByIdJobRequirementReq
	export function emptyRefListByIdJobRequirementReq():Ref<ListByIdJobRequirementReq>
	export function refOfListByIdJobRequirementReq(x:ListByIdJobRequirementReq,v:Ref<ListByIdJobRequirementReq>)
	export function unRefListByIdJobRequirementReq(v:Ref<ListByIdJobRequirementReq>):ListByIdJobRequirementReq
	export function emptyListInterviewRecordResp():ListInterviewRecordResp
	export function emptyRefListInterviewRecordResp():Ref<ListInterviewRecordResp>
	export function refOfListInterviewRecordResp(x:ListInterviewRecordResp,v:Ref<ListInterviewRecordResp>)
	export function unRefListInterviewRecordResp(v:Ref<ListInterviewRecordResp>):ListInterviewRecordResp
	export function emptyReconciliationReferralAccountRespData():ReconciliationReferralAccountRespData
	export function emptyRefReconciliationReferralAccountRespData():Ref<ReconciliationReferralAccountRespData>
	export function refOfReconciliationReferralAccountRespData(x:ReconciliationReferralAccountRespData,v:Ref<ReconciliationReferralAccountRespData>)
	export function unRefReconciliationReferralAccountRespData(v:Ref<ReconciliationReferralAccountRespData>):ReconciliationReferralAccountRespData
	export function emptyOfferSchemaListInfo():OfferSchemaListInfo
	export function emptyRefOfferSchemaListInfo():Ref<OfferSchemaListInfo>
	export function refOfOfferSchemaListInfo(x:OfferSchemaListInfo,v:Ref<OfferSchemaListInfo>)
	export function unRefOfferSchemaListInfo(v:Ref<OfferSchemaListInfo>):OfferSchemaListInfo
	export function emptyApplicationOfferCustomValue():ApplicationOfferCustomValue
	export function emptyRefApplicationOfferCustomValue():Ref<ApplicationOfferCustomValue>
	export function refOfApplicationOfferCustomValue(x:ApplicationOfferCustomValue,v:Ref<ApplicationOfferCustomValue>)
	export function unRefApplicationOfferCustomValue(v:Ref<ApplicationOfferCustomValue>):ApplicationOfferCustomValue
	export function emptyListJobReq():ListJobReq
	export function emptyRefListJobReq():Ref<ListJobReq>
	export function refOfListJobReq(x:ListJobReq,v:Ref<ListJobReq>)
	export function unRefListJobReq(v:Ref<ListJobReq>):ListJobReq
	export function emptyCreateWebsiteChannelRespData():CreateWebsiteChannelRespData
	export function emptyRefCreateWebsiteChannelRespData():Ref<CreateWebsiteChannelRespData>
	export function refOfCreateWebsiteChannelRespData(x:CreateWebsiteChannelRespData,v:Ref<CreateWebsiteChannelRespData>)
	export function unRefCreateWebsiteChannelRespData(v:Ref<CreateWebsiteChannelRespData>):CreateWebsiteChannelRespData
	export function emptyJobConfig():JobConfig
	export function emptyRefJobConfig():Ref<JobConfig>
	export function refOfJobConfig(x:JobConfig,v:Ref<JobConfig>)
	export function unRefJobConfig(v:Ref<JobConfig>):JobConfig
	export function emptyTalentCustomizedData():TalentCustomizedData
	export function emptyRefTalentCustomizedData():Ref<TalentCustomizedData>
	export function refOfTalentCustomizedData(x:TalentCustomizedData,v:Ref<TalentCustomizedData>)
	export function unRefTalentCustomizedData(v:Ref<TalentCustomizedData>):TalentCustomizedData
	export function emptyApplicationOffer():ApplicationOffer
	export function emptyRefApplicationOffer():Ref<ApplicationOffer>
	export function refOfApplicationOffer(x:ApplicationOffer,v:Ref<ApplicationOffer>)
	export function unRefApplicationOffer(v:Ref<ApplicationOffer>):ApplicationOffer
	export function emptyInterviewRegistrationSchema():InterviewRegistrationSchema
	export function emptyRefInterviewRegistrationSchema():Ref<InterviewRegistrationSchema>
	export function refOfInterviewRegistrationSchema(x:InterviewRegistrationSchema,v:Ref<InterviewRegistrationSchema>)
	export function unRefInterviewRegistrationSchema(v:Ref<InterviewRegistrationSchema>):InterviewRegistrationSchema
	export function emptyP2EcoAccountCreatedV1():P2EcoAccountCreatedV1
	export function emptyRefP2EcoAccountCreatedV1():Ref<P2EcoAccountCreatedV1>
	export function refOfP2EcoAccountCreatedV1(x:P2EcoAccountCreatedV1,v:Ref<P2EcoAccountCreatedV1>)
	export function unRefP2EcoAccountCreatedV1(v:Ref<P2EcoAccountCreatedV1>):P2EcoAccountCreatedV1
	export function emptyTalentIdentificationInfo():TalentIdentificationInfo
	export function emptyRefTalentIdentificationInfo():Ref<TalentIdentificationInfo>
	export function refOfTalentIdentificationInfo(x:TalentIdentificationInfo,v:Ref<TalentIdentificationInfo>)
	export function unRefTalentIdentificationInfo(v:Ref<TalentIdentificationInfo>):TalentIdentificationInfo
	export function emptyAppliOfferSalaryPlanTemplate():AppliOfferSalaryPlanTemplate
	export function emptyRefAppliOfferSalaryPlanTemplate():Ref<AppliOfferSalaryPlanTemplate>
	export function refOfAppliOfferSalaryPlanTemplate(x:AppliOfferSalaryPlanTemplate,v:Ref<AppliOfferSalaryPlanTemplate>)
	export function unRefAppliOfferSalaryPlanTemplate(v:Ref<AppliOfferSalaryPlanTemplate>):AppliOfferSalaryPlanTemplate
	export function emptyListWebsiteChannelResp():ListWebsiteChannelResp
	export function emptyRefListWebsiteChannelResp():Ref<ListWebsiteChannelResp>
	export function refOfListWebsiteChannelResp(x:ListWebsiteChannelResp,v:Ref<ListWebsiteChannelResp>)
	export function unRefListWebsiteChannelResp(v:Ref<ListWebsiteChannelResp>):ListWebsiteChannelResp
	export function emptyListJobFunctionReq():ListJobFunctionReq
	export function emptyRefListJobFunctionReq():Ref<ListJobFunctionReq>
	export function refOfListJobFunctionReq(x:ListJobFunctionReq,v:Ref<ListJobFunctionReq>)
	export function unRefListJobFunctionReq(v:Ref<ListJobFunctionReq>):ListJobFunctionReq
	export function emptySiteResumeLanguageSkill():SiteResumeLanguageSkill
	export function emptyRefSiteResumeLanguageSkill():Ref<SiteResumeLanguageSkill>
	export function refOfSiteResumeLanguageSkill(x:SiteResumeLanguageSkill,v:Ref<SiteResumeLanguageSkill>)
	export function unRefSiteResumeLanguageSkill(v:Ref<SiteResumeLanguageSkill>):SiteResumeLanguageSkill
	export function emptyGetReferralWebsiteJobPostResp():GetReferralWebsiteJobPostResp
	export function emptyRefGetReferralWebsiteJobPostResp():Ref<GetReferralWebsiteJobPostResp>
	export function refOfGetReferralWebsiteJobPostResp(x:GetReferralWebsiteJobPostResp,v:Ref<GetReferralWebsiteJobPostResp>)
	export function unRefGetReferralWebsiteJobPostResp(v:Ref<GetReferralWebsiteJobPostResp>):GetReferralWebsiteJobPostResp
	export function emptyLoginInfoEcoExamReq():LoginInfoEcoExamReq
	export function emptyRefLoginInfoEcoExamReq():Ref<LoginInfoEcoExamReq>
	export function refOfLoginInfoEcoExamReq(x:LoginInfoEcoExamReq,v:Ref<LoginInfoEcoExamReq>)
	export function unRefLoginInfoEcoExamReq(v:Ref<LoginInfoEcoExamReq>):LoginInfoEcoExamReq
	export function emptyOfferStatusOfferReq():OfferStatusOfferReq
	export function emptyRefOfferStatusOfferReq():Ref<OfferStatusOfferReq>
	export function refOfOfferStatusOfferReq(x:OfferStatusOfferReq,v:Ref<OfferStatusOfferReq>)
	export function unRefOfferStatusOfferReq(v:Ref<OfferStatusOfferReq>):OfferStatusOfferReq
	export function emptyBatchDeleteEcoExamPaperResp():BatchDeleteEcoExamPaperResp
	export function emptyRefBatchDeleteEcoExamPaperResp():Ref<BatchDeleteEcoExamPaperResp>
	export function refOfBatchDeleteEcoExamPaperResp(x:BatchDeleteEcoExamPaperResp,v:Ref<BatchDeleteEcoExamPaperResp>)
	export function unRefBatchDeleteEcoExamPaperResp(v:Ref<BatchDeleteEcoExamPaperResp>):BatchDeleteEcoExamPaperResp
	export function emptyDimensionAbility():DimensionAbility
	export function emptyRefDimensionAbility():Ref<DimensionAbility>
	export function refOfDimensionAbility(x:DimensionAbility,v:Ref<DimensionAbility>)
	export function unRefDimensionAbility(v:Ref<DimensionAbility>):DimensionAbility
	export function emptyJobRequirementCustomizedOption():JobRequirementCustomizedOption
	export function emptyRefJobRequirementCustomizedOption():Ref<JobRequirementCustomizedOption>
	export function refOfJobRequirementCustomizedOption(x:JobRequirementCustomizedOption,v:Ref<JobRequirementCustomizedOption>)
	export function unRefJobRequirementCustomizedOption(v:Ref<JobRequirementCustomizedOption>):JobRequirementCustomizedOption
	export function emptyFiveStartScoringResult():FiveStartScoringResult
	export function emptyRefFiveStartScoringResult():Ref<FiveStartScoringResult>
	export function refOfFiveStartScoringResult(x:FiveStartScoringResult,v:Ref<FiveStartScoringResult>)
	export function unRefFiveStartScoringResult(v:Ref<FiveStartScoringResult>):FiveStartScoringResult
	export function emptyGetAttachmentRespData():GetAttachmentRespData
	export function emptyRefGetAttachmentRespData():Ref<GetAttachmentRespData>
	export function refOfGetAttachmentRespData(x:GetAttachmentRespData,v:Ref<GetAttachmentRespData>)
	export function unRefGetAttachmentRespData(v:Ref<GetAttachmentRespData>):GetAttachmentRespData
	export function emptySearchTestRespData():SearchTestRespData
	export function emptyRefSearchTestRespData():Ref<SearchTestRespData>
	export function refOfSearchTestRespData(x:SearchTestRespData,v:Ref<SearchTestRespData>)
	export function unRefSearchTestRespData(v:Ref<SearchTestRespData>):SearchTestRespData
	export function emptyTest():Test
	export function emptyRefTest():Ref<Test>
	export function refOfTest(x:Test,v:Ref<Test>)
	export function unRefTest(v:Ref<Test>):Test
	export function emptyEcoExamResultDetail():EcoExamResultDetail
	export function emptyRefEcoExamResultDetail():Ref<EcoExamResultDetail>
	export function refOfEcoExamResultDetail(x:EcoExamResultDetail,v:Ref<EcoExamResultDetail>)
	export function unRefEcoExamResultDetail(v:Ref<EcoExamResultDetail>):EcoExamResultDetail
	export function emptyTodo():Todo
	export function emptyRefTodo():Ref<Todo>
	export function refOfTodo(x:Todo,v:Ref<Todo>)
	export function unRefTodo(v:Ref<Todo>):Todo
	export function emptyCreateReferralAccountResp():CreateReferralAccountResp
	export function emptyRefCreateReferralAccountResp():Ref<CreateReferralAccountResp>
	export function refOfCreateReferralAccountResp(x:CreateReferralAccountResp,v:Ref<CreateReferralAccountResp>)
	export function unRefCreateReferralAccountResp(v:Ref<CreateReferralAccountResp>):CreateReferralAccountResp
	export function emptyStore():Store
	export function emptyRefStore():Ref<Store>
	export function refOfStore(x:Store,v:Ref<Store>)
	export function unRefStore(v:Ref<Store>):Store
	export function emptyJobCustomizedValue():JobCustomizedValue
	export function emptyRefJobCustomizedValue():Ref<JobCustomizedValue>
	export function refOfJobCustomizedValue(x:JobCustomizedValue,v:Ref<JobCustomizedValue>)
	export function unRefJobCustomizedValue(v:Ref<JobCustomizedValue>):JobCustomizedValue
	export function emptyGetOfferSchemaReq():GetOfferSchemaReq
	export function emptyRefGetOfferSchemaReq():Ref<GetOfferSchemaReq>
	export function refOfGetOfferSchemaReq(x:GetOfferSchemaReq,v:Ref<GetOfferSchemaReq>)
	export function unRefGetOfferSchemaReq(v:Ref<GetOfferSchemaReq>):GetOfferSchemaReq
	export function emptyMoveTalentTalentPoolRespData():MoveTalentTalentPoolRespData
	export function emptyRefMoveTalentTalentPoolRespData():Ref<MoveTalentTalentPoolRespData>
	export function refOfMoveTalentTalentPoolRespData(x:MoveTalentTalentPoolRespData,v:Ref<MoveTalentTalentPoolRespData>)
	export function unRefMoveTalentTalentPoolRespData(v:Ref<MoveTalentTalentPoolRespData>):MoveTalentTalentPoolRespData
	export function emptyBackgroundCheckProcessInfo():BackgroundCheckProcessInfo
	export function emptyRefBackgroundCheckProcessInfo():Ref<BackgroundCheckProcessInfo>
	export function refOfBackgroundCheckProcessInfo(x:BackgroundCheckProcessInfo,v:Ref<BackgroundCheckProcessInfo>)
	export function unRefBackgroundCheckProcessInfo(v:Ref<BackgroundCheckProcessInfo>):BackgroundCheckProcessInfo
	export function emptyExternalApplication():ExternalApplication
	export function emptyRefExternalApplication():Ref<ExternalApplication>
	export function refOfExternalApplication(x:ExternalApplication,v:Ref<ExternalApplication>)
	export function unRefExternalApplication(v:Ref<ExternalApplication>):ExternalApplication
	export function emptyListInterviewRoundTypeReq():ListInterviewRoundTypeReq
	export function emptyRefListInterviewRoundTypeReq():Ref<ListInterviewRoundTypeReq>
	export function refOfListInterviewRoundTypeReq(x:ListInterviewRoundTypeReq,v:Ref<ListInterviewRoundTypeReq>)
	export function unRefListInterviewRoundTypeReq(v:Ref<ListInterviewRoundTypeReq>):ListInterviewRoundTypeReq
	export function emptyUpdateExternalApplicationResp():UpdateExternalApplicationResp
	export function emptyRefUpdateExternalApplicationResp():Ref<UpdateExternalApplicationResp>
	export function refOfUpdateExternalApplicationResp(x:UpdateExternalApplicationResp,v:Ref<UpdateExternalApplicationResp>)
	export function unRefUpdateExternalApplicationResp(v:Ref<UpdateExternalApplicationResp>):UpdateExternalApplicationResp
	export function emptyGetInterviewRecordResp():GetInterviewRecordResp
	export function emptyRefGetInterviewRecordResp():Ref<GetInterviewRecordResp>
	export function refOfGetInterviewRecordResp(x:GetInterviewRecordResp,v:Ref<GetInterviewRecordResp>)
	export function unRefGetInterviewRecordResp(v:Ref<GetInterviewRecordResp>):GetInterviewRecordResp
	export function emptyInterviewAppointmentConfigContent():InterviewAppointmentConfigContent
	export function emptyRefInterviewAppointmentConfigContent():Ref<InterviewAppointmentConfigContent>
	export function refOfInterviewAppointmentConfigContent(x:InterviewAppointmentConfigContent,v:Ref<InterviewAppointmentConfigContent>)
	export function unRefInterviewAppointmentConfigContent(v:Ref<InterviewAppointmentConfigContent>):InterviewAppointmentConfigContent
	export function emptyOfferInfo():OfferInfo
	export function emptyRefOfferInfo():Ref<OfferInfo>
	export function refOfOfferInfo(x:OfferInfo,v:Ref<OfferInfo>)
	export function unRefOfferInfo(v:Ref<OfferInfo>):OfferInfo
	export function emptyOfferApplicationRespData():OfferApplicationRespData
	export function emptyRefOfferApplicationRespData():Ref<OfferApplicationRespData>
	export function refOfOfferApplicationRespData(x:OfferApplicationRespData,v:Ref<OfferApplicationRespData>)
	export function unRefOfferApplicationRespData(v:Ref<OfferApplicationRespData>):OfferApplicationRespData
	export function emptyWorksInfo():WorksInfo
	export function emptyRefWorksInfo():Ref<WorksInfo>
	export function refOfWorksInfo(x:WorksInfo,v:Ref<WorksInfo>)
	export function unRefWorksInfo(v:Ref<WorksInfo>):WorksInfo
	export function emptyGetByApplicationEmployeeReq():GetByApplicationEmployeeReq
	export function emptyRefGetByApplicationEmployeeReq():Ref<GetByApplicationEmployeeReq>
	export function refOfGetByApplicationEmployeeReq(x:GetByApplicationEmployeeReq,v:Ref<GetByApplicationEmployeeReq>)
	export function unRefGetByApplicationEmployeeReq(v:Ref<GetByApplicationEmployeeReq>):GetByApplicationEmployeeReq
	export function emptyListInterviewFeedbackFormReq():ListInterviewFeedbackFormReq
	export function emptyRefListInterviewFeedbackFormReq():Ref<ListInterviewFeedbackFormReq>
	export function refOfListInterviewFeedbackFormReq(x:ListInterviewFeedbackFormReq,v:Ref<ListInterviewFeedbackFormReq>)
	export function unRefListInterviewFeedbackFormReq(v:Ref<ListInterviewFeedbackFormReq>):ListInterviewFeedbackFormReq
	export function emptySearchJobPublishRecordReq():SearchJobPublishRecordReq
	export function emptyRefSearchJobPublishRecordReq():Ref<SearchJobPublishRecordReq>
	export function refOfSearchJobPublishRecordReq(x:SearchJobPublishRecordReq,v:Ref<SearchJobPublishRecordReq>)
	export function unRefSearchJobPublishRecordReq(v:Ref<SearchJobPublishRecordReq>):SearchJobPublishRecordReq
	export function emptyUserRole():UserRole
	export function emptyRefUserRole():Ref<UserRole>
	export function refOfUserRole(x:UserRole,v:Ref<UserRole>)
	export function unRefUserRole(v:Ref<UserRole>):UserRole
	export function emptyListRegistrationSchemaRespData():ListRegistrationSchemaRespData
	export function emptyRefListRegistrationSchemaRespData():Ref<ListRegistrationSchemaRespData>
	export function refOfListRegistrationSchemaRespData(x:ListRegistrationSchemaRespData,v:Ref<ListRegistrationSchemaRespData>)
	export function unRefListRegistrationSchemaRespData(v:Ref<ListRegistrationSchemaRespData>):ListRegistrationSchemaRespData
	export function emptyP2EhrImportTaskForInternshipOfferImportedV1():P2EhrImportTaskForInternshipOfferImportedV1
	export function emptyRefP2EhrImportTaskForInternshipOfferImportedV1():Ref<P2EhrImportTaskForInternshipOfferImportedV1>
	export function refOfP2EhrImportTaskForInternshipOfferImportedV1(x:P2EhrImportTaskForInternshipOfferImportedV1,v:Ref<P2EhrImportTaskForInternshipOfferImportedV1>)
	export function unRefP2EhrImportTaskForInternshipOfferImportedV1(v:Ref<P2EhrImportTaskForInternshipOfferImportedV1>):P2EhrImportTaskForInternshipOfferImportedV1
	export function emptySiteJobType():SiteJobType
	export function emptyRefSiteJobType():Ref<SiteJobType>
	export function refOfSiteJobType(x:SiteJobType,v:Ref<SiteJobType>)
	export function unRefSiteJobType(v:Ref<SiteJobType>):SiteJobType
	export function emptyCombinedUpdateJobRespData():CombinedUpdateJobRespData
	export function emptyRefCombinedUpdateJobRespData():Ref<CombinedUpdateJobRespData>
	export function refOfCombinedUpdateJobRespData(x:CombinedUpdateJobRespData,v:Ref<CombinedUpdateJobRespData>)
	export function unRefCombinedUpdateJobRespData(v:Ref<CombinedUpdateJobRespData>):CombinedUpdateJobRespData
	export function emptyOfferJobInfo():OfferJobInfo
	export function emptyRefOfferJobInfo():Ref<OfferJobInfo>
	export function refOfOfferJobInfo(x:OfferJobInfo,v:Ref<OfferJobInfo>)
	export function unRefOfferJobInfo(v:Ref<OfferJobInfo>):OfferJobInfo
	export function emptyListExternalApplicationRespData():ListExternalApplicationRespData
	export function emptyRefListExternalApplicationRespData():Ref<ListExternalApplicationRespData>
	export function refOfListExternalApplicationRespData(x:ListExternalApplicationRespData,v:Ref<ListExternalApplicationRespData>)
	export function unRefListExternalApplicationRespData(v:Ref<ListExternalApplicationRespData>):ListExternalApplicationRespData
	export function emptyTalentPool():TalentPool
	export function emptyRefTalentPool():Ref<TalentPool>
	export function refOfTalentPool(x:TalentPool,v:Ref<TalentPool>)
	export function unRefTalentPool(v:Ref<TalentPool>):TalentPool
	export function emptyGetApplicationRespData():GetApplicationRespData
	export function emptyRefGetApplicationRespData():Ref<GetApplicationRespData>
	export function refOfGetApplicationRespData(x:GetApplicationRespData,v:Ref<GetApplicationRespData>)
	export function unRefGetApplicationRespData(v:Ref<GetApplicationRespData>):GetApplicationRespData
	export function emptyUpdateExternalApplicationReq():UpdateExternalApplicationReq
	export function emptyRefUpdateExternalApplicationReq():Ref<UpdateExternalApplicationReq>
	export function refOfUpdateExternalApplicationReq(x:UpdateExternalApplicationReq,v:Ref<UpdateExternalApplicationReq>)
	export function unRefUpdateExternalApplicationReq(v:Ref<UpdateExternalApplicationReq>):UpdateExternalApplicationReq
	export function emptyOnboardStatusTalentReq():OnboardStatusTalentReq
	export function emptyRefOnboardStatusTalentReq():Ref<OnboardStatusTalentReq>
	export function refOfOnboardStatusTalentReq(x:OnboardStatusTalentReq,v:Ref<OnboardStatusTalentReq>)
	export function unRefOnboardStatusTalentReq(v:Ref<OnboardStatusTalentReq>):OnboardStatusTalentReq
	export function emptyCommonAddress():CommonAddress
	export function emptyRefCommonAddress():Ref<CommonAddress>
	export function refOfCommonAddress(x:CommonAddress,v:Ref<CommonAddress>)
	export function unRefCommonAddress(v:Ref<CommonAddress>):CommonAddress
	export function emptyCreateExamReq():CreateExamReq
	export function emptyRefCreateExamReq():Ref<CreateExamReq>
	export function refOfCreateExamReq(x:CreateExamReq,v:Ref<CreateExamReq>)
	export function unRefCreateExamReq(v:Ref<CreateExamReq>):CreateExamReq
	export function emptySiteResumeCertificate():SiteResumeCertificate
	export function emptyRefSiteResumeCertificate():Ref<SiteResumeCertificate>
	export function refOfSiteResumeCertificate(x:SiteResumeCertificate,v:Ref<SiteResumeCertificate>)
	export function unRefSiteResumeCertificate(v:Ref<SiteResumeCertificate>):SiteResumeCertificate
	export function emptyCreateAttachmentRespData():CreateAttachmentRespData
	export function emptyRefCreateAttachmentRespData():Ref<CreateAttachmentRespData>
	export function refOfCreateAttachmentRespData(x:CreateAttachmentRespData,v:Ref<CreateAttachmentRespData>)
	export function unRefCreateAttachmentRespData(v:Ref<CreateAttachmentRespData>):CreateAttachmentRespData
	export function emptyPatchExternalInterviewAssessmentReq():PatchExternalInterviewAssessmentReq
	export function emptyRefPatchExternalInterviewAssessmentReq():Ref<PatchExternalInterviewAssessmentReq>
	export function refOfPatchExternalInterviewAssessmentReq(x:PatchExternalInterviewAssessmentReq,v:Ref<PatchExternalInterviewAssessmentReq>)
	export function unRefPatchExternalInterviewAssessmentReq(v:Ref<PatchExternalInterviewAssessmentReq>):PatchExternalInterviewAssessmentReq
	export function emptyPatchNoteRespData():PatchNoteRespData
	export function emptyRefPatchNoteRespData():Ref<PatchNoteRespData>
	export function refOfPatchNoteRespData(x:PatchNoteRespData,v:Ref<PatchNoteRespData>)
	export function unRefPatchNoteRespData(v:Ref<PatchNoteRespData>):PatchNoteRespData
	export function emptyListJobTypeRespData():ListJobTypeRespData
	export function emptyRefListJobTypeRespData():Ref<ListJobTypeRespData>
	export function refOfListJobTypeRespData(x:ListJobTypeRespData,v:Ref<ListJobTypeRespData>)
	export function unRefListJobTypeRespData(v:Ref<ListJobTypeRespData>):ListJobTypeRespData
	export function emptyTalentCertificateInfo():TalentCertificateInfo
	export function emptyRefTalentCertificateInfo():Ref<TalentCertificateInfo>
	export function refOfTalentCertificateInfo(x:TalentCertificateInfo,v:Ref<TalentCertificateInfo>)
	export function unRefTalentCertificateInfo(v:Ref<TalentCertificateInfo>):TalentCertificateInfo
	export function emptyTransferStageApplicationReqBody():TransferStageApplicationReqBody
	export function emptyRefTransferStageApplicationReqBody():Ref<TransferStageApplicationReqBody>
	export function refOfTransferStageApplicationReqBody(x:TransferStageApplicationReqBody,v:Ref<TransferStageApplicationReqBody>)
	export function unRefTransferStageApplicationReqBody(v:Ref<TransferStageApplicationReqBody>):TransferStageApplicationReqBody
	export function emptyGetOfferApplicationFormRespData():GetOfferApplicationFormRespData
	export function emptyRefGetOfferApplicationFormRespData():Ref<GetOfferApplicationFormRespData>
	export function refOfGetOfferApplicationFormRespData(x:GetOfferApplicationFormRespData,v:Ref<GetOfferApplicationFormRespData>)
	export function unRefGetOfferApplicationFormRespData(v:Ref<GetOfferApplicationFormRespData>):GetOfferApplicationFormRespData
	export function emptyInternOfferStatusOfferResp():InternOfferStatusOfferResp
	export function emptyRefInternOfferStatusOfferResp():Ref<InternOfferStatusOfferResp>
	export function refOfInternOfferStatusOfferResp(x:InternOfferStatusOfferResp,v:Ref<InternOfferStatusOfferResp>)
	export function unRefInternOfferStatusOfferResp(v:Ref<InternOfferStatusOfferResp>):InternOfferStatusOfferResp
	export function emptyTalentCareerInfo():TalentCareerInfo
	export function emptyRefTalentCareerInfo():Ref<TalentCareerInfo>
	export function refOfTalentCareerInfo(x:TalentCareerInfo,v:Ref<TalentCareerInfo>)
	export function unRefTalentCareerInfo(v:Ref<TalentCareerInfo>):TalentCareerInfo
	export function emptyBaseBilingualWithId():BaseBilingualWithId
	export function emptyRefBaseBilingualWithId():Ref<BaseBilingualWithId>
	export function refOfBaseBilingualWithId(x:BaseBilingualWithId,v:Ref<BaseBilingualWithId>)
	export function unRefBaseBilingualWithId(v:Ref<BaseBilingualWithId>):BaseBilingualWithId
	export function emptyWebsiteDeliveryWorksAttachment():WebsiteDeliveryWorksAttachment
	export function emptyRefWebsiteDeliveryWorksAttachment():Ref<WebsiteDeliveryWorksAttachment>
	export function refOfWebsiteDeliveryWorksAttachment(x:WebsiteDeliveryWorksAttachment,v:Ref<WebsiteDeliveryWorksAttachment>)
	export function unRefWebsiteDeliveryWorksAttachment(v:Ref<WebsiteDeliveryWorksAttachment>):WebsiteDeliveryWorksAttachment
	export function emptyOffer():Offer
	export function emptyRefOffer():Ref<Offer>
	export function refOfOffer(x:Offer,v:Ref<Offer>)
	export function unRefOffer(v:Ref<Offer>):Offer
	export function emptyCombinedUpdateTalentReqBody():CombinedUpdateTalentReqBody
	export function emptyRefCombinedUpdateTalentReqBody():Ref<CombinedUpdateTalentReqBody>
	export function refOfCombinedUpdateTalentReqBody(x:CombinedUpdateTalentReqBody,v:Ref<CombinedUpdateTalentReqBody>)
	export function unRefCombinedUpdateTalentReqBody(v:Ref<CombinedUpdateTalentReqBody>):CombinedUpdateTalentReqBody
	export function emptyListJobTypeReq():ListJobTypeReq
	export function emptyRefListJobTypeReq():Ref<ListJobTypeReq>
	export function refOfListJobTypeReq(x:ListJobTypeReq,v:Ref<ListJobTypeReq>)
	export function unRefListJobTypeReq(v:Ref<ListJobTypeReq>):ListJobTypeReq
	export function emptyApplicationStageInfo():ApplicationStageInfo
	export function emptyRefApplicationStageInfo():Ref<ApplicationStageInfo>
	export function refOfApplicationStageInfo(x:ApplicationStageInfo,v:Ref<ApplicationStageInfo>)
	export function unRefApplicationStageInfo(v:Ref<ApplicationStageInfo>):ApplicationStageInfo
	export function emptyCreateExternalInterviewAssessmentRespData():CreateExternalInterviewAssessmentRespData
	export function emptyRefCreateExternalInterviewAssessmentRespData():Ref<CreateExternalInterviewAssessmentRespData>
	export function refOfCreateExternalInterviewAssessmentRespData(x:CreateExternalInterviewAssessmentRespData,v:Ref<CreateExternalInterviewAssessmentRespData>)
	export function unRefCreateExternalInterviewAssessmentRespData(v:Ref<CreateExternalInterviewAssessmentRespData>):CreateExternalInterviewAssessmentRespData
	export function emptyEcoBackgroundCheckPackage():EcoBackgroundCheckPackage
	export function emptyRefEcoBackgroundCheckPackage():Ref<EcoBackgroundCheckPackage>
	export function refOfEcoBackgroundCheckPackage(x:EcoBackgroundCheckPackage,v:Ref<EcoBackgroundCheckPackage>)
	export function unRefEcoBackgroundCheckPackage(v:Ref<EcoBackgroundCheckPackage>):EcoBackgroundCheckPackage
	export function emptyApplicationReferral():ApplicationReferral
	export function emptyRefApplicationReferral():Ref<ApplicationReferral>
	export function refOfApplicationReferral(x:ApplicationReferral,v:Ref<ApplicationReferral>)
	export function unRefApplicationReferral(v:Ref<ApplicationReferral>):ApplicationReferral
	export function emptyTerminateApplicationReqBody():TerminateApplicationReqBody
	export function emptyRefTerminateApplicationReqBody():Ref<TerminateApplicationReqBody>
	export function refOfTerminateApplicationReqBody(x:TerminateApplicationReqBody,v:Ref<TerminateApplicationReqBody>)
	export function unRefTerminateApplicationReqBody(v:Ref<TerminateApplicationReqBody>):TerminateApplicationReqBody
	export function emptySelectOptionResult():SelectOptionResult
	export function emptyRefSelectOptionResult():Ref<SelectOptionResult>
	export function refOfSelectOptionResult(x:SelectOptionResult,v:Ref<SelectOptionResult>)
	export function unRefSelectOptionResult(v:Ref<SelectOptionResult>):SelectOptionResult
	export function emptyOfferBasicInfo():OfferBasicInfo
	export function emptyRefOfferBasicInfo():Ref<OfferBasicInfo>
	export function refOfOfferBasicInfo(x:OfferBasicInfo,v:Ref<OfferBasicInfo>)
	export function unRefOfferBasicInfo(v:Ref<OfferBasicInfo>):OfferBasicInfo
	export function emptyPatchEmployeeReq():PatchEmployeeReq
	export function emptyRefPatchEmployeeReq():Ref<PatchEmployeeReq>
	export function refOfPatchEmployeeReq(x:PatchEmployeeReq,v:Ref<PatchEmployeeReq>)
	export function unRefPatchEmployeeReq(v:Ref<PatchEmployeeReq>):PatchEmployeeReq
	export function emptyBatchDeleteEcoBackgroundCheckCustomFieldReqBody():BatchDeleteEcoBackgroundCheckCustomFieldReqBody
	export function emptyRefBatchDeleteEcoBackgroundCheckCustomFieldReqBody():Ref<BatchDeleteEcoBackgroundCheckCustomFieldReqBody>
	export function refOfBatchDeleteEcoBackgroundCheckCustomFieldReqBody(x:BatchDeleteEcoBackgroundCheckCustomFieldReqBody,v:Ref<BatchDeleteEcoBackgroundCheckCustomFieldReqBody>)
	export function unRefBatchDeleteEcoBackgroundCheckCustomFieldReqBody(v:Ref<BatchDeleteEcoBackgroundCheckCustomFieldReqBody>):BatchDeleteEcoBackgroundCheckCustomFieldReqBody
	export function emptyBatchUpdateEcoBackgroundCheckCustomFieldReq():BatchUpdateEcoBackgroundCheckCustomFieldReq
	export function emptyRefBatchUpdateEcoBackgroundCheckCustomFieldReq():Ref<BatchUpdateEcoBackgroundCheckCustomFieldReq>
	export function refOfBatchUpdateEcoBackgroundCheckCustomFieldReq(x:BatchUpdateEcoBackgroundCheckCustomFieldReq,v:Ref<BatchUpdateEcoBackgroundCheckCustomFieldReq>)
	export function unRefBatchUpdateEcoBackgroundCheckCustomFieldReq(v:Ref<BatchUpdateEcoBackgroundCheckCustomFieldReq>):BatchUpdateEcoBackgroundCheckCustomFieldReq
	export function emptyCommonSchemaOption():CommonSchemaOption
	export function emptyRefCommonSchemaOption():Ref<CommonSchemaOption>
	export function refOfCommonSchemaOption(x:CommonSchemaOption,v:Ref<CommonSchemaOption>)
	export function unRefCommonSchemaOption(v:Ref<CommonSchemaOption>):CommonSchemaOption
	export function emptyListJobTypeResp():ListJobTypeResp
	export function emptyRefListJobTypeResp():Ref<ListJobTypeResp>
	export function refOfListJobTypeResp(x:ListJobTypeResp,v:Ref<ListJobTypeResp>)
	export function unRefListJobTypeResp(v:Ref<ListJobTypeResp>):ListJobTypeResp
	export function emptyListTodoRespData():ListTodoRespData
	export function emptyRefListTodoRespData():Ref<ListTodoRespData>
	export function refOfListTodoRespData(x:ListTodoRespData,v:Ref<ListTodoRespData>)
	export function unRefListTodoRespData(v:Ref<ListTodoRespData>):ListTodoRespData
	export function emptyListExamMarkingTaskRespData():ListExamMarkingTaskRespData
	export function emptyRefListExamMarkingTaskRespData():Ref<ListExamMarkingTaskRespData>
	export function refOfListExamMarkingTaskRespData(x:ListExamMarkingTaskRespData,v:Ref<ListExamMarkingTaskRespData>)
	export function unRefListExamMarkingTaskRespData(v:Ref<ListExamMarkingTaskRespData>):ListExamMarkingTaskRespData
	export function emptyListInterviewRecordReq():ListInterviewRecordReq
	export function emptyRefListInterviewRecordReq():Ref<ListInterviewRecordReq>
	export function refOfListInterviewRecordReq(x:ListInterviewRecordReq,v:Ref<ListInterviewRecordReq>)
	export function unRefListInterviewRecordReq(v:Ref<ListInterviewRecordReq>):ListInterviewRecordReq
	export function emptyListJobSchemaRespData():ListJobSchemaRespData
	export function emptyRefListJobSchemaRespData():Ref<ListJobSchemaRespData>
	export function refOfListJobSchemaRespData(x:ListJobSchemaRespData,v:Ref<ListJobSchemaRespData>)
	export function unRefListJobSchemaRespData(v:Ref<ListJobSchemaRespData>):ListJobSchemaRespData
	export function emptyTransferOnboardApplicationReq():TransferOnboardApplicationReq
	export function emptyRefTransferOnboardApplicationReq():Ref<TransferOnboardApplicationReq>
	export function refOfTransferOnboardApplicationReq(x:TransferOnboardApplicationReq,v:Ref<TransferOnboardApplicationReq>)
	export function unRefTransferOnboardApplicationReq(v:Ref<TransferOnboardApplicationReq>):TransferOnboardApplicationReq
	export function emptyGetWebsiteDeliveryTaskReq():GetWebsiteDeliveryTaskReq
	export function emptyRefGetWebsiteDeliveryTaskReq():Ref<GetWebsiteDeliveryTaskReq>
	export function refOfGetWebsiteDeliveryTaskReq(x:GetWebsiteDeliveryTaskReq,v:Ref<GetWebsiteDeliveryTaskReq>)
	export function unRefGetWebsiteDeliveryTaskReq(v:Ref<GetWebsiteDeliveryTaskReq>):GetWebsiteDeliveryTaskReq
	export function emptyReconciliationReferralAccountReqBody():ReconciliationReferralAccountReqBody
	export function emptyRefReconciliationReferralAccountReqBody():Ref<ReconciliationReferralAccountReqBody>
	export function refOfReconciliationReferralAccountReqBody(x:ReconciliationReferralAccountReqBody,v:Ref<ReconciliationReferralAccountReqBody>)
	export function unRefReconciliationReferralAccountReqBody(v:Ref<ReconciliationReferralAccountReqBody>):ReconciliationReferralAccountReqBody
	export function emptyAccount():Account
	export function emptyRefAccount():Ref<Account>
	export function refOfAccount(x:Account,v:Ref<Account>)
	export function unRefAccount(v:Ref<Account>):Account
	export function emptyAddToFolderTalentResp():AddToFolderTalentResp
	export function emptyRefAddToFolderTalentResp():Ref<AddToFolderTalentResp>
	export function refOfAddToFolderTalentResp(x:AddToFolderTalentResp,v:Ref<AddToFolderTalentResp>)
	export function unRefAddToFolderTalentResp(v:Ref<AddToFolderTalentResp>):AddToFolderTalentResp
	export function emptyTerminateApplicationReq():TerminateApplicationReq
	export function emptyRefTerminateApplicationReq():Ref<TerminateApplicationReq>
	export function refOfTerminateApplicationReq(x:TerminateApplicationReq,v:Ref<TerminateApplicationReq>)
	export function unRefTerminateApplicationReq(v:Ref<TerminateApplicationReq>):TerminateApplicationReq
	export function emptyIdNameObject():IdNameObject
	export function emptyRefIdNameObject():Ref<IdNameObject>
	export function refOfIdNameObject(x:IdNameObject,v:Ref<IdNameObject>)
	export function unRefIdNameObject(v:Ref<IdNameObject>):IdNameObject
	export function emptyBatchDeleteEcoExamPaperReqBody():BatchDeleteEcoExamPaperReqBody
	export function emptyRefBatchDeleteEcoExamPaperReqBody():Ref<BatchDeleteEcoExamPaperReqBody>
	export function refOfBatchDeleteEcoExamPaperReqBody(x:BatchDeleteEcoExamPaperReqBody,v:Ref<BatchDeleteEcoExamPaperReqBody>)
	export function unRefBatchDeleteEcoExamPaperReqBody(v:Ref<BatchDeleteEcoExamPaperReqBody>):BatchDeleteEcoExamPaperReqBody
	export function emptySearchWebsiteJobPostIterator():SearchWebsiteJobPostIterator
	export function emptyRefSearchWebsiteJobPostIterator():Ref<SearchWebsiteJobPostIterator>
	export function refOfSearchWebsiteJobPostIterator(x:SearchWebsiteJobPostIterator,v:Ref<SearchWebsiteJobPostIterator>)
	export function unRefSearchWebsiteJobPostIterator(v:Ref<SearchWebsiteJobPostIterator>):SearchWebsiteJobPostIterator
	export function emptyInterviewRoundTypeAssessmentTemplate():InterviewRoundTypeAssessmentTemplate
	export function emptyRefInterviewRoundTypeAssessmentTemplate():Ref<InterviewRoundTypeAssessmentTemplate>
	export function refOfInterviewRoundTypeAssessmentTemplate(x:InterviewRoundTypeAssessmentTemplate,v:Ref<InterviewRoundTypeAssessmentTemplate>)
	export function unRefInterviewRoundTypeAssessmentTemplate(v:Ref<InterviewRoundTypeAssessmentTemplate>):InterviewRoundTypeAssessmentTemplate
	export function emptyListWebsiteJobPostIterator():ListWebsiteJobPostIterator
	export function emptyRefListWebsiteJobPostIterator():Ref<ListWebsiteJobPostIterator>
	export function refOfListWebsiteJobPostIterator(x:ListWebsiteJobPostIterator,v:Ref<ListWebsiteJobPostIterator>)
	export function unRefListWebsiteJobPostIterator(v:Ref<ListWebsiteJobPostIterator>):ListWebsiteJobPostIterator
	export function emptyApplicationTalent():ApplicationTalent
	export function emptyRefApplicationTalent():Ref<ApplicationTalent>
	export function refOfApplicationTalent(x:ApplicationTalent,v:Ref<ApplicationTalent>)
	export function unRefApplicationTalent(v:Ref<ApplicationTalent>):ApplicationTalent
	export function emptyUpdateExternalApplicationRespData():UpdateExternalApplicationRespData
	export function emptyRefUpdateExternalApplicationRespData():Ref<UpdateExternalApplicationRespData>
	export function refOfUpdateExternalApplicationRespData(x:UpdateExternalApplicationRespData,v:Ref<UpdateExternalApplicationRespData>)
	export function unRefUpdateExternalApplicationRespData(v:Ref<UpdateExternalApplicationRespData>):UpdateExternalApplicationRespData
	export function emptySearchReferralResp():SearchReferralResp
	export function emptyRefSearchReferralResp():Ref<SearchReferralResp>
	export function refOfSearchReferralResp(x:SearchReferralResp,v:Ref<SearchReferralResp>)
	export function unRefSearchReferralResp(v:Ref<SearchReferralResp>):SearchReferralResp
	export function emptyUpdateTalentExternalInfoResp():UpdateTalentExternalInfoResp
	export function emptyRefUpdateTalentExternalInfoResp():Ref<UpdateTalentExternalInfoResp>
	export function refOfUpdateTalentExternalInfoResp(x:UpdateTalentExternalInfoResp,v:Ref<UpdateTalentExternalInfoResp>)
	export function unRefUpdateTalentExternalInfoResp(v:Ref<UpdateTalentExternalInfoResp>):UpdateTalentExternalInfoResp
	export function emptyBatchDeleteEcoAccountCustomFieldReq():BatchDeleteEcoAccountCustomFieldReq
	export function emptyRefBatchDeleteEcoAccountCustomFieldReq():Ref<BatchDeleteEcoAccountCustomFieldReq>
	export function refOfBatchDeleteEcoAccountCustomFieldReq(x:BatchDeleteEcoAccountCustomFieldReq,v:Ref<BatchDeleteEcoAccountCustomFieldReq>)
	export function unRefBatchDeleteEcoAccountCustomFieldReq(v:Ref<BatchDeleteEcoAccountCustomFieldReq>):BatchDeleteEcoAccountCustomFieldReq
	export function emptyFilter():Filter
	export function emptyRefFilter():Ref<Filter>
	export function refOfFilter(x:Filter,v:Ref<Filter>)
	export function unRefFilter(v:Ref<Filter>):Filter
	export function emptyListEvaluationIterator():ListEvaluationIterator
	export function emptyRefListEvaluationIterator():Ref<ListEvaluationIterator>
	export function refOfListEvaluationIterator(x:ListEvaluationIterator,v:Ref<ListEvaluationIterator>)
	export function unRefListEvaluationIterator(v:Ref<ListEvaluationIterator>):ListEvaluationIterator
	export function emptyAddToFolderTalentReqBody():AddToFolderTalentReqBody
	export function emptyRefAddToFolderTalentReqBody():Ref<AddToFolderTalentReqBody>
	export function refOfAddToFolderTalentReqBody(x:AddToFolderTalentReqBody,v:Ref<AddToFolderTalentReqBody>)
	export function unRefAddToFolderTalentReqBody(v:Ref<AddToFolderTalentReqBody>):AddToFolderTalentReqBody
	export function emptyCloseJobResp():CloseJobResp
	export function emptyRefCloseJobResp():Ref<CloseJobResp>
	export function refOfCloseJobResp(x:CloseJobResp,v:Ref<CloseJobResp>)
	export function unRefCloseJobResp(v:Ref<CloseJobResp>):CloseJobResp
	export function emptyOfferApplyFormFormulaExtraMapInfo():OfferApplyFormFormulaExtraMapInfo
	export function emptyRefOfferApplyFormFormulaExtraMapInfo():Ref<OfferApplyFormFormulaExtraMapInfo>
	export function refOfOfferApplyFormFormulaExtraMapInfo(x:OfferApplyFormFormulaExtraMapInfo,v:Ref<OfferApplyFormFormulaExtraMapInfo>)
	export function unRefOfferApplyFormFormulaExtraMapInfo(v:Ref<OfferApplyFormFormulaExtraMapInfo>):OfferApplyFormFormulaExtraMapInfo
	export function emptyListBackgroundCheckOrderRespData():ListBackgroundCheckOrderRespData
	export function emptyRefListBackgroundCheckOrderRespData():Ref<ListBackgroundCheckOrderRespData>
	export function refOfListBackgroundCheckOrderRespData(x:ListBackgroundCheckOrderRespData,v:Ref<ListBackgroundCheckOrderRespData>)
	export function unRefListBackgroundCheckOrderRespData(v:Ref<ListBackgroundCheckOrderRespData>):ListBackgroundCheckOrderRespData
	export function emptyLanguageInfo():LanguageInfo
	export function emptyRefLanguageInfo():Ref<LanguageInfo>
	export function refOfLanguageInfo(x:LanguageInfo,v:Ref<LanguageInfo>)
	export function unRefLanguageInfo(v:Ref<LanguageInfo>):LanguageInfo
	export function emptyJobConfigRoundTypeResult():JobConfigRoundTypeResult
	export function emptyRefJobConfigRoundTypeResult():Ref<JobConfigRoundTypeResult>
	export function refOfJobConfigRoundTypeResult(x:JobConfigRoundTypeResult,v:Ref<JobConfigRoundTypeResult>)
	export function unRefJobConfigRoundTypeResult(v:Ref<JobConfigRoundTypeResult>):JobConfigRoundTypeResult
	export function emptyListJobRequirementReq():ListJobRequirementReq
	export function emptyRefListJobRequirementReq():Ref<ListJobRequirementReq>
	export function refOfListJobRequirementReq(x:ListJobRequirementReq,v:Ref<ListJobRequirementReq>)
	export function unRefListJobRequirementReq(v:Ref<ListJobRequirementReq>):ListJobRequirementReq
	export function emptyP2EcoBackgroundCheckCreatedV1Data():P2EcoBackgroundCheckCreatedV1Data
	export function emptyRefP2EcoBackgroundCheckCreatedV1Data():Ref<P2EcoBackgroundCheckCreatedV1Data>
	export function refOfP2EcoBackgroundCheckCreatedV1Data(x:P2EcoBackgroundCheckCreatedV1Data,v:Ref<P2EcoBackgroundCheckCreatedV1Data>)
	export function unRefP2EcoBackgroundCheckCreatedV1Data(v:Ref<P2EcoBackgroundCheckCreatedV1Data>):P2EcoBackgroundCheckCreatedV1Data
	export function emptyCreateTalentExternalInfoResp():CreateTalentExternalInfoResp
	export function emptyRefCreateTalentExternalInfoResp():Ref<CreateTalentExternalInfoResp>
	export function refOfCreateTalentExternalInfoResp(x:CreateTalentExternalInfoResp,v:Ref<CreateTalentExternalInfoResp>)
	export function unRefCreateTalentExternalInfoResp(v:Ref<CreateTalentExternalInfoResp>):CreateTalentExternalInfoResp
	export function emptyWebsiteDeliveryCustomizedDataParent():WebsiteDeliveryCustomizedDataParent
	export function emptyRefWebsiteDeliveryCustomizedDataParent():Ref<WebsiteDeliveryCustomizedDataParent>
	export function refOfWebsiteDeliveryCustomizedDataParent(x:WebsiteDeliveryCustomizedDataParent,v:Ref<WebsiteDeliveryCustomizedDataParent>)
	export function unRefWebsiteDeliveryCustomizedDataParent(v:Ref<WebsiteDeliveryCustomizedDataParent>):WebsiteDeliveryCustomizedDataParent
	export function emptyTalentSchemaObject():TalentSchemaObject
	export function emptyRefTalentSchemaObject():Ref<TalentSchemaObject>
	export function refOfTalentSchemaObject(x:TalentSchemaObject,v:Ref<TalentSchemaObject>)
	export function unRefTalentSchemaObject(v:Ref<TalentSchemaObject>):TalentSchemaObject
	export function emptyListJobProcessRespData():ListJobProcessRespData
	export function emptyRefListJobProcessRespData():Ref<ListJobProcessRespData>
	export function refOfListJobProcessRespData(x:ListJobProcessRespData,v:Ref<ListJobProcessRespData>)
	export function unRefListJobProcessRespData(v:Ref<ListJobProcessRespData>):ListJobProcessRespData
	export function emptyTalentCustomizedDataObjectValue():TalentCustomizedDataObjectValue
	export function emptyRefTalentCustomizedDataObjectValue():Ref<TalentCustomizedDataObjectValue>
	export function refOfTalentCustomizedDataObjectValue(x:TalentCustomizedDataObjectValue,v:Ref<TalentCustomizedDataObjectValue>)
	export function unRefTalentCustomizedDataObjectValue(v:Ref<TalentCustomizedDataObjectValue>):TalentCustomizedDataObjectValue
	export function emptyLocation():Location
	export function emptyRefLocation():Ref<Location>
	export function refOfLocation(x:Location,v:Ref<Location>)
	export function unRefLocation(v:Ref<Location>):Location
	export function emptyDepartment():Department
	export function emptyRefDepartment():Ref<Department>
	export function refOfDepartment(x:Department,v:Ref<Department>)
	export function unRefDepartment(v:Ref<Department>):Department
	export function emptyCreateEcoBackgroundCheckCustomFieldResp():CreateEcoBackgroundCheckCustomFieldResp
	export function emptyRefCreateEcoBackgroundCheckCustomFieldResp():Ref<CreateEcoBackgroundCheckCustomFieldResp>
	export function refOfCreateEcoBackgroundCheckCustomFieldResp(x:CreateEcoBackgroundCheckCustomFieldResp,v:Ref<CreateEcoBackgroundCheckCustomFieldResp>)
	export function unRefCreateEcoBackgroundCheckCustomFieldResp(v:Ref<CreateEcoBackgroundCheckCustomFieldResp>):CreateEcoBackgroundCheckCustomFieldResp
	export function emptyEcoBackgroundCheckCustomField():EcoBackgroundCheckCustomField
	export function emptyRefEcoBackgroundCheckCustomField():Ref<EcoBackgroundCheckCustomField>
	export function refOfEcoBackgroundCheckCustomField(x:EcoBackgroundCheckCustomField,v:Ref<EcoBackgroundCheckCustomField>)
	export function unRefEcoBackgroundCheckCustomField(v:Ref<EcoBackgroundCheckCustomField>):EcoBackgroundCheckCustomField
	export function emptyCreateApplicationReq():CreateApplicationReq
	export function emptyRefCreateApplicationReq():Ref<CreateApplicationReq>
	export function refOfCreateApplicationReq(x:CreateApplicationReq,v:Ref<CreateApplicationReq>)
	export function unRefCreateApplicationReq(v:Ref<CreateApplicationReq>):CreateApplicationReq
	export function emptyInterviewFeedbackFormDimension():InterviewFeedbackFormDimension
	export function emptyRefInterviewFeedbackFormDimension():Ref<InterviewFeedbackFormDimension>
	export function refOfInterviewFeedbackFormDimension(x:InterviewFeedbackFormDimension,v:Ref<InterviewFeedbackFormDimension>)
	export function unRefInterviewFeedbackFormDimension(v:Ref<InterviewFeedbackFormDimension>):InterviewFeedbackFormDimension
	export function emptyDeleteExternalApplicationRespData():DeleteExternalApplicationRespData
	export function emptyRefDeleteExternalApplicationRespData():Ref<DeleteExternalApplicationRespData>
	export function refOfDeleteExternalApplicationRespData(x:DeleteExternalApplicationRespData,v:Ref<DeleteExternalApplicationRespData>)
	export function unRefDeleteExternalApplicationRespData(v:Ref<DeleteExternalApplicationRespData>):DeleteExternalApplicationRespData
	export function emptyInterviewAddress():InterviewAddress
	export function emptyRefInterviewAddress():Ref<InterviewAddress>
	export function refOfInterviewAddress(x:InterviewAddress,v:Ref<InterviewAddress>)
	export function unRefInterviewAddress(v:Ref<InterviewAddress>):InterviewAddress
	export function emptyListInterviewRoundTypeResp():ListInterviewRoundTypeResp
	export function emptyRefListInterviewRoundTypeResp():Ref<ListInterviewRoundTypeResp>
	export function refOfListInterviewRoundTypeResp(x:ListInterviewRoundTypeResp,v:Ref<ListInterviewRoundTypeResp>)
	export function unRefListInterviewRoundTypeResp(v:Ref<ListInterviewRoundTypeResp>):ListInterviewRoundTypeResp
	export function emptyRecoverApplicationResp():RecoverApplicationResp
	export function emptyRefRecoverApplicationResp():Ref<RecoverApplicationResp>
	export function refOfRecoverApplicationResp(x:RecoverApplicationResp,v:Ref<RecoverApplicationResp>)
	export function unRefRecoverApplicationResp(v:Ref<RecoverApplicationResp>):RecoverApplicationResp
	export function emptyTalentInternshipInfo():TalentInternshipInfo
	export function emptyRefTalentInternshipInfo():Ref<TalentInternshipInfo>
	export function refOfTalentInternshipInfo(x:TalentInternshipInfo,v:Ref<TalentInternshipInfo>)
	export function unRefTalentInternshipInfo(v:Ref<TalentInternshipInfo>):TalentInternshipInfo
	export function emptyWebsiteDeliveryInternship():WebsiteDeliveryInternship
	export function emptyRefWebsiteDeliveryInternship():Ref<WebsiteDeliveryInternship>
	export function refOfWebsiteDeliveryInternship(x:WebsiteDeliveryInternship,v:Ref<WebsiteDeliveryInternship>)
	export function unRefWebsiteDeliveryInternship(v:Ref<WebsiteDeliveryInternship>):WebsiteDeliveryInternship
	export function emptyListInterviewFeedbackFormResp():ListInterviewFeedbackFormResp
	export function emptyRefListInterviewFeedbackFormResp():Ref<ListInterviewFeedbackFormResp>
	export function refOfListInterviewFeedbackFormResp(x:ListInterviewFeedbackFormResp,v:Ref<ListInterviewFeedbackFormResp>)
	export function unRefListInterviewFeedbackFormResp(v:Ref<ListInterviewFeedbackFormResp>):ListInterviewFeedbackFormResp
	export function emptyListWebsiteResp():ListWebsiteResp
	export function emptyRefListWebsiteResp():Ref<ListWebsiteResp>
	export function refOfListWebsiteResp(x:ListWebsiteResp,v:Ref<ListWebsiteResp>)
	export function unRefListWebsiteResp(v:Ref<ListWebsiteResp>):ListWebsiteResp
	export function emptyTalentOperationLog():TalentOperationLog
	export function emptyRefTalentOperationLog():Ref<TalentOperationLog>
	export function refOfTalentOperationLog(x:TalentOperationLog,v:Ref<TalentOperationLog>)
	export function unRefTalentOperationLog(v:Ref<TalentOperationLog>):TalentOperationLog
	export function emptyApplicationJobAddress():ApplicationJobAddress
	export function emptyRefApplicationJobAddress():Ref<ApplicationJobAddress>
	export function refOfApplicationJobAddress(x:ApplicationJobAddress,v:Ref<ApplicationJobAddress>)
	export function unRefApplicationJobAddress(v:Ref<ApplicationJobAddress>):ApplicationJobAddress
	export function emptyBatchUpdateEcoBackgroundCheckCustomFieldResp():BatchUpdateEcoBackgroundCheckCustomFieldResp
	export function emptyRefBatchUpdateEcoBackgroundCheckCustomFieldResp():Ref<BatchUpdateEcoBackgroundCheckCustomFieldResp>
	export function refOfBatchUpdateEcoBackgroundCheckCustomFieldResp(x:BatchUpdateEcoBackgroundCheckCustomFieldResp,v:Ref<BatchUpdateEcoBackgroundCheckCustomFieldResp>)
	export function unRefBatchUpdateEcoBackgroundCheckCustomFieldResp(v:Ref<BatchUpdateEcoBackgroundCheckCustomFieldResp>):BatchUpdateEcoBackgroundCheckCustomFieldResp
	export function emptyGetAgencyResp():GetAgencyResp
	export function emptyRefGetAgencyResp():Ref<GetAgencyResp>
	export function refOfGetAgencyResp(x:GetAgencyResp,v:Ref<GetAgencyResp>)
	export function unRefGetAgencyResp(v:Ref<GetAgencyResp>):GetAgencyResp
	export function emptyListOfferApplicationFormRespData():ListOfferApplicationFormRespData
	export function emptyRefListOfferApplicationFormRespData():Ref<ListOfferApplicationFormRespData>
	export function refOfListOfferApplicationFormRespData(x:ListOfferApplicationFormRespData,v:Ref<ListOfferApplicationFormRespData>)
	export function unRefListOfferApplicationFormRespData(v:Ref<ListOfferApplicationFormRespData>):ListOfferApplicationFormRespData
	export function emptyCreateJobRequirementReq():CreateJobRequirementReq
	export function emptyRefCreateJobRequirementReq():Ref<CreateJobRequirementReq>
	export function refOfCreateJobRequirementReq(x:CreateJobRequirementReq,v:Ref<CreateJobRequirementReq>)
	export function unRefCreateJobRequirementReq(v:Ref<CreateJobRequirementReq>):CreateJobRequirementReq
	export function emptyWebsiteJobPostCustomizedTimeRange():WebsiteJobPostCustomizedTimeRange
	export function emptyRefWebsiteJobPostCustomizedTimeRange():Ref<WebsiteJobPostCustomizedTimeRange>
	export function refOfWebsiteJobPostCustomizedTimeRange(x:WebsiteJobPostCustomizedTimeRange,v:Ref<WebsiteJobPostCustomizedTimeRange>)
	export function unRefWebsiteJobPostCustomizedTimeRange(v:Ref<WebsiteJobPostCustomizedTimeRange>):WebsiteJobPostCustomizedTimeRange
	export function emptyTalentEducationInfo():TalentEducationInfo
	export function emptyRefTalentEducationInfo():Ref<TalentEducationInfo>
	export function refOfTalentEducationInfo(x:TalentEducationInfo,v:Ref<TalentEducationInfo>)
	export function unRefTalentEducationInfo(v:Ref<TalentEducationInfo>):TalentEducationInfo
	export function emptyListInterviewTaskRespData():ListInterviewTaskRespData
	export function emptyRefListInterviewTaskRespData():Ref<ListInterviewTaskRespData>
	export function refOfListInterviewTaskRespData(x:ListInterviewTaskRespData,v:Ref<ListInterviewTaskRespData>)
	export function unRefListInterviewTaskRespData(v:Ref<ListInterviewTaskRespData>):ListInterviewTaskRespData
	export function emptyListJobFunctionIterator():ListJobFunctionIterator
	export function emptyRefListJobFunctionIterator():Ref<ListJobFunctionIterator>
	export function refOfListJobFunctionIterator(x:ListJobFunctionIterator,v:Ref<ListJobFunctionIterator>)
	export function unRefListJobFunctionIterator(v:Ref<ListJobFunctionIterator>):ListJobFunctionIterator
	export function emptyProtectSearchAgencyReq():ProtectSearchAgencyReq
	export function emptyRefProtectSearchAgencyReq():Ref<ProtectSearchAgencyReq>
	export function refOfProtectSearchAgencyReq(x:ProtectSearchAgencyReq,v:Ref<ProtectSearchAgencyReq>)
	export function unRefProtectSearchAgencyReq(v:Ref<ProtectSearchAgencyReq>):ProtectSearchAgencyReq
	export function emptyApplicationTalentWorksInfo():ApplicationTalentWorksInfo
	export function emptyRefApplicationTalentWorksInfo():Ref<ApplicationTalentWorksInfo>
	export function refOfApplicationTalentWorksInfo(x:ApplicationTalentWorksInfo,v:Ref<ApplicationTalentWorksInfo>)
	export function unRefApplicationTalentWorksInfo(v:Ref<ApplicationTalentWorksInfo>):ApplicationTalentWorksInfo
	export function emptySearchDiversityInclusionResp():SearchDiversityInclusionResp
	export function emptyRefSearchDiversityInclusionResp():Ref<SearchDiversityInclusionResp>
	export function refOfSearchDiversityInclusionResp(x:SearchDiversityInclusionResp,v:Ref<SearchDiversityInclusionResp>)
	export function unRefSearchDiversityInclusionResp(v:Ref<SearchDiversityInclusionResp>):SearchDiversityInclusionResp
	export function emptyListInterviewRecordRespData():ListInterviewRecordRespData
	export function emptyRefListInterviewRecordRespData():Ref<ListInterviewRecordRespData>
	export function refOfListInterviewRecordRespData(x:ListInterviewRecordRespData,v:Ref<ListInterviewRecordRespData>)
	export function unRefListInterviewRecordRespData(v:Ref<ListInterviewRecordRespData>):ListInterviewRecordRespData
	export function emptyListApplicationResp():ListApplicationResp
	export function emptyRefListApplicationResp():Ref<ListApplicationResp>
	export function refOfListApplicationResp(x:ListApplicationResp,v:Ref<ListApplicationResp>)
	export function unRefListApplicationResp(v:Ref<ListApplicationResp>):ListApplicationResp
	export function emptyAttachmentInfo():AttachmentInfo
	export function emptyRefAttachmentInfo():Ref<AttachmentInfo>
	export function refOfAttachmentInfo(x:AttachmentInfo,v:Ref<AttachmentInfo>)
	export function unRefAttachmentInfo(v:Ref<AttachmentInfo>):AttachmentInfo
	export function emptyBatchDeleteEcoBackgroundCheckPackageResp():BatchDeleteEcoBackgroundCheckPackageResp
	export function emptyRefBatchDeleteEcoBackgroundCheckPackageResp():Ref<BatchDeleteEcoBackgroundCheckPackageResp>
	export function refOfBatchDeleteEcoBackgroundCheckPackageResp(x:BatchDeleteEcoBackgroundCheckPackageResp,v:Ref<BatchDeleteEcoBackgroundCheckPackageResp>)
	export function unRefBatchDeleteEcoBackgroundCheckPackageResp(v:Ref<BatchDeleteEcoBackgroundCheckPackageResp>):BatchDeleteEcoBackgroundCheckPackageResp
	export function emptyCommonSchema():CommonSchema
	export function emptyRefCommonSchema():Ref<CommonSchema>
	export function refOfCommonSchema(x:CommonSchema,v:Ref<CommonSchema>)
	export function unRefCommonSchema(v:Ref<CommonSchema>):CommonSchema
	export function emptyGetOfferSchemaRespData():GetOfferSchemaRespData
	export function emptyRefGetOfferSchemaRespData():Ref<GetOfferSchemaRespData>
	export function refOfGetOfferSchemaRespData(x:GetOfferSchemaRespData,v:Ref<GetOfferSchemaRespData>)
	export function unRefGetOfferSchemaRespData(v:Ref<GetOfferSchemaRespData>):GetOfferSchemaRespData
	export function emptyBatchGetIdTalentReqBody():BatchGetIdTalentReqBody
	export function emptyRefBatchGetIdTalentReqBody():Ref<BatchGetIdTalentReqBody>
	export function refOfBatchGetIdTalentReqBody(x:BatchGetIdTalentReqBody,v:Ref<BatchGetIdTalentReqBody>)
	export function unRefBatchGetIdTalentReqBody(v:Ref<BatchGetIdTalentReqBody>):BatchGetIdTalentReqBody
	export function emptyCreateTripartiteAgreementReq():CreateTripartiteAgreementReq
	export function emptyRefCreateTripartiteAgreementReq():Ref<CreateTripartiteAgreementReq>
	export function refOfCreateTripartiteAgreementReq(x:CreateTripartiteAgreementReq,v:Ref<CreateTripartiteAgreementReq>)
	export function unRefCreateTripartiteAgreementReq(v:Ref<CreateTripartiteAgreementReq>):CreateTripartiteAgreementReq
	export function emptyWithdrawReferralAccountResp():WithdrawReferralAccountResp
	export function emptyRefWithdrawReferralAccountResp():Ref<WithdrawReferralAccountResp>
	export function refOfWithdrawReferralAccountResp(x:WithdrawReferralAccountResp,v:Ref<WithdrawReferralAccountResp>)
	export function unRefWithdrawReferralAccountResp(v:Ref<WithdrawReferralAccountResp>):WithdrawReferralAccountResp
	export function emptyAbility():Ability
	export function emptyRefAbility():Ref<Ability>
	export function refOfAbility(x:Ability,v:Ref<Ability>)
	export function unRefAbility(v:Ref<Ability>):Ability
	export function emptyWithdrawReferralAccountReqBody():WithdrawReferralAccountReqBody
	export function emptyRefWithdrawReferralAccountReqBody():Ref<WithdrawReferralAccountReqBody>
	export function refOfWithdrawReferralAccountReqBody(x:WithdrawReferralAccountReqBody,v:Ref<WithdrawReferralAccountReqBody>)
	export function unRefWithdrawReferralAccountReqBody(v:Ref<WithdrawReferralAccountReqBody>):WithdrawReferralAccountReqBody
	export function emptyDummy():Dummy
	export function emptyRefDummy():Ref<Dummy>
	export function refOfDummy(x:Dummy,v:Ref<Dummy>)
	export function unRefDummy(v:Ref<Dummy>):Dummy
	export function emptyGetByApplicationReferralRespData():GetByApplicationReferralRespData
	export function emptyRefGetByApplicationReferralRespData():Ref<GetByApplicationReferralRespData>
	export function refOfGetByApplicationReferralRespData(x:GetByApplicationReferralRespData,v:Ref<GetByApplicationReferralRespData>)
	export function unRefGetByApplicationReferralRespData(v:Ref<GetByApplicationReferralRespData>):GetByApplicationReferralRespData
	export function emptyGetTalentRespData():GetTalentRespData
	export function emptyRefGetTalentRespData():Ref<GetTalentRespData>
	export function refOfGetTalentRespData(x:GetTalentRespData,v:Ref<GetTalentRespData>)
	export function unRefGetTalentRespData(v:Ref<GetTalentRespData>):GetTalentRespData
	export function emptyInterviewRecordTemplate():InterviewRecordTemplate
	export function emptyRefInterviewRecordTemplate():Ref<InterviewRecordTemplate>
	export function refOfInterviewRecordTemplate(x:InterviewRecordTemplate,v:Ref<InterviewRecordTemplate>)
	export function unRefInterviewRecordTemplate(v:Ref<InterviewRecordTemplate>):InterviewRecordTemplate
	export function emptyLocationState():LocationState
	export function emptyRefLocationState():Ref<LocationState>
	export function refOfLocationState(x:LocationState,v:Ref<LocationState>)
	export function unRefLocationState(v:Ref<LocationState>):LocationState
	export function emptyP2ApplicationDeletedV1Data():P2ApplicationDeletedV1Data
	export function emptyRefP2ApplicationDeletedV1Data():Ref<P2ApplicationDeletedV1Data>
	export function refOfP2ApplicationDeletedV1Data(x:P2ApplicationDeletedV1Data,v:Ref<P2ApplicationDeletedV1Data>)
	export function unRefP2ApplicationDeletedV1Data(v:Ref<P2ApplicationDeletedV1Data>):P2ApplicationDeletedV1Data
	export function emptyProtectAgencyReq():ProtectAgencyReq
	export function emptyRefProtectAgencyReq():Ref<ProtectAgencyReq>
	export function refOfProtectAgencyReq(x:ProtectAgencyReq,v:Ref<ProtectAgencyReq>)
	export function unRefProtectAgencyReq(v:Ref<ProtectAgencyReq>):ProtectAgencyReq
	export function emptyWithdrawReferralAccountReq():WithdrawReferralAccountReq
	export function emptyRefWithdrawReferralAccountReq():Ref<WithdrawReferralAccountReq>
	export function refOfWithdrawReferralAccountReq(x:WithdrawReferralAccountReq,v:Ref<WithdrawReferralAccountReq>)
	export function unRefWithdrawReferralAccountReq(v:Ref<WithdrawReferralAccountReq>):WithdrawReferralAccountReq
	export function emptyDeleteExternalReferralRewardResp():DeleteExternalReferralRewardResp
	export function emptyRefDeleteExternalReferralRewardResp():Ref<DeleteExternalReferralRewardResp>
	export function refOfDeleteExternalReferralRewardResp(x:DeleteExternalReferralRewardResp,v:Ref<DeleteExternalReferralRewardResp>)
	export function unRefDeleteExternalReferralRewardResp(v:Ref<DeleteExternalReferralRewardResp>):DeleteExternalReferralRewardResp
	export function emptyJobCustomizedData():JobCustomizedData
	export function emptyRefJobCustomizedData():Ref<JobCustomizedData>
	export function refOfJobCustomizedData(x:JobCustomizedData,v:Ref<JobCustomizedData>)
	export function unRefJobCustomizedData(v:Ref<JobCustomizedData>):JobCustomizedData
	export function emptyTalentCustomizedOption():TalentCustomizedOption
	export function emptyRefTalentCustomizedOption():Ref<TalentCustomizedOption>
	export function refOfTalentCustomizedOption(x:TalentCustomizedOption,v:Ref<TalentCustomizedOption>)
	export function unRefTalentCustomizedOption(v:Ref<TalentCustomizedOption>):TalentCustomizedOption
	export function emptyConfigJobRespData():ConfigJobRespData
	export function emptyRefConfigJobRespData():Ref<ConfigJobRespData>
	export function refOfConfigJobRespData(x:ConfigJobRespData,v:Ref<ConfigJobRespData>)
	export function unRefConfigJobRespData(v:Ref<ConfigJobRespData>):ConfigJobRespData
	export function emptyListInterviewTaskIterator():ListInterviewTaskIterator
	export function emptyRefListInterviewTaskIterator():Ref<ListInterviewTaskIterator>
	export function refOfListInterviewTaskIterator(x:ListInterviewTaskIterator,v:Ref<ListInterviewTaskIterator>)
	export function unRefListInterviewTaskIterator(v:Ref<ListInterviewTaskIterator>):ListInterviewTaskIterator
	export function emptyUpdateOfferCustomFieldResp():UpdateOfferCustomFieldResp
	export function emptyRefUpdateOfferCustomFieldResp():Ref<UpdateOfferCustomFieldResp>
	export function refOfUpdateOfferCustomFieldResp(x:UpdateOfferCustomFieldResp,v:Ref<UpdateOfferCustomFieldResp>)
	export function unRefUpdateOfferCustomFieldResp(v:Ref<UpdateOfferCustomFieldResp>):UpdateOfferCustomFieldResp
	export function emptyApplicationTalentProjectInfo():ApplicationTalentProjectInfo
	export function emptyRefApplicationTalentProjectInfo():Ref<ApplicationTalentProjectInfo>
	export function refOfApplicationTalentProjectInfo(x:ApplicationTalentProjectInfo,v:Ref<ApplicationTalentProjectInfo>)
	export function unRefApplicationTalentProjectInfo(v:Ref<ApplicationTalentProjectInfo>):ApplicationTalentProjectInfo
	export function emptyCodeNameObject():CodeNameObject
	export function emptyRefCodeNameObject():Ref<CodeNameObject>
	export function refOfCodeNameObject(x:CodeNameObject,v:Ref<CodeNameObject>)
	export function unRefCodeNameObject(v:Ref<CodeNameObject>):CodeNameObject
	export function emptyGetApplicationReq():GetApplicationReq
	export function emptyRefGetApplicationReq():Ref<GetApplicationReq>
	export function refOfGetApplicationReq(x:GetApplicationReq,v:Ref<GetApplicationReq>)
	export function unRefGetApplicationReq(v:Ref<GetApplicationReq>):GetApplicationReq
	export function emptyJobRequirementDto():JobRequirementDto
	export function emptyRefJobRequirementDto():Ref<JobRequirementDto>
	export function refOfJobRequirementDto(x:JobRequirementDto,v:Ref<JobRequirementDto>)
	export function unRefJobRequirementDto(v:Ref<JobRequirementDto>):JobRequirementDto
	export function emptyApplicationOfferBasicInfoCustomizedObjectOptionValue():ApplicationOfferBasicInfoCustomizedObjectOptionValue
	export function emptyRefApplicationOfferBasicInfoCustomizedObjectOptionValue():Ref<ApplicationOfferBasicInfoCustomizedObjectOptionValue>
	export function refOfApplicationOfferBasicInfoCustomizedObjectOptionValue(x:ApplicationOfferBasicInfoCustomizedObjectOptionValue,v:Ref<ApplicationOfferBasicInfoCustomizedObjectOptionValue>)
	export function unRefApplicationOfferBasicInfoCustomizedObjectOptionValue(v:Ref<ApplicationOfferBasicInfoCustomizedObjectOptionValue>):ApplicationOfferBasicInfoCustomizedObjectOptionValue
	export function emptyListBackgroundCheckOrderReq():ListBackgroundCheckOrderReq
	export function emptyRefListBackgroundCheckOrderReq():Ref<ListBackgroundCheckOrderReq>
	export function refOfListBackgroundCheckOrderReq(x:ListBackgroundCheckOrderReq,v:Ref<ListBackgroundCheckOrderReq>)
	export function unRefListBackgroundCheckOrderReq(v:Ref<ListBackgroundCheckOrderReq>):ListBackgroundCheckOrderReq
	export function emptyListWebsiteReq():ListWebsiteReq
	export function emptyRefListWebsiteReq():Ref<ListWebsiteReq>
	export function refOfListWebsiteReq(x:ListWebsiteReq,v:Ref<ListWebsiteReq>)
	export function unRefListWebsiteReq(v:Ref<ListWebsiteReq>):ListWebsiteReq
	export function emptyListReferralWebsiteJobPostReq():ListReferralWebsiteJobPostReq
	export function emptyRefListReferralWebsiteJobPostReq():Ref<ListReferralWebsiteJobPostReq>
	export function refOfListReferralWebsiteJobPostReq(x:ListReferralWebsiteJobPostReq,v:Ref<ListReferralWebsiteJobPostReq>)
	export function unRefListReferralWebsiteJobPostReq(v:Ref<ListReferralWebsiteJobPostReq>):ListReferralWebsiteJobPostReq
	export function emptySearchDiversityInclusionReqBody():SearchDiversityInclusionReqBody
	export function emptyRefSearchDiversityInclusionReqBody():Ref<SearchDiversityInclusionReqBody>
	export function refOfSearchDiversityInclusionReqBody(x:SearchDiversityInclusionReqBody,v:Ref<SearchDiversityInclusionReqBody>)
	export function unRefSearchDiversityInclusionReqBody(v:Ref<SearchDiversityInclusionReqBody>):SearchDiversityInclusionReqBody
	export function emptyTalentCustomizedAttachment():TalentCustomizedAttachment
	export function emptyRefTalentCustomizedAttachment():Ref<TalentCustomizedAttachment>
	export function refOfTalentCustomizedAttachment(x:TalentCustomizedAttachment,v:Ref<TalentCustomizedAttachment>)
	export function unRefTalentCustomizedAttachment(v:Ref<TalentCustomizedAttachment>):TalentCustomizedAttachment
	export function emptyApplication():Application
	export function emptyRefApplication():Ref<Application>
	export function refOfApplication(x:Application,v:Ref<Application>)
	export function unRefApplication(v:Ref<Application>):Application
	export function emptyEcoBackgroundCheckCustomFieldDataOption():EcoBackgroundCheckCustomFieldDataOption
	export function emptyRefEcoBackgroundCheckCustomFieldDataOption():Ref<EcoBackgroundCheckCustomFieldDataOption>
	export function refOfEcoBackgroundCheckCustomFieldDataOption(x:EcoBackgroundCheckCustomFieldDataOption,v:Ref<EcoBackgroundCheckCustomFieldDataOption>)
	export function unRefEcoBackgroundCheckCustomFieldDataOption(v:Ref<EcoBackgroundCheckCustomFieldDataOption>):EcoBackgroundCheckCustomFieldDataOption
	export function emptyUpdateTripartiteAgreementReq():UpdateTripartiteAgreementReq
	export function emptyRefUpdateTripartiteAgreementReq():Ref<UpdateTripartiteAgreementReq>
	export function refOfUpdateTripartiteAgreementReq(x:UpdateTripartiteAgreementReq,v:Ref<UpdateTripartiteAgreementReq>)
	export function unRefUpdateTripartiteAgreementReq(v:Ref<UpdateTripartiteAgreementReq>):UpdateTripartiteAgreementReq
	export function emptyDeleteNoteReq():DeleteNoteReq
	export function emptyRefDeleteNoteReq():Ref<DeleteNoteReq>
	export function refOfDeleteNoteReq(x:DeleteNoteReq,v:Ref<DeleteNoteReq>)
	export function unRefDeleteNoteReq(v:Ref<DeleteNoteReq>):DeleteNoteReq
	export function emptyOnboardStatusTalentResp():OnboardStatusTalentResp
	export function emptyRefOnboardStatusTalentResp():Ref<OnboardStatusTalentResp>
	export function refOfOnboardStatusTalentResp(x:OnboardStatusTalentResp,v:Ref<OnboardStatusTalentResp>)
	export function unRefOnboardStatusTalentResp(v:Ref<OnboardStatusTalentResp>):OnboardStatusTalentResp
	export function emptyGetAttachmentReq():GetAttachmentReq
	export function emptyRefGetAttachmentReq():Ref<GetAttachmentReq>
	export function refOfGetAttachmentReq(x:GetAttachmentReq,v:Ref<GetAttachmentReq>)
	export function unRefGetAttachmentReq(v:Ref<GetAttachmentReq>):GetAttachmentReq
	export function emptyCombinedCreateTalentReqBody():CombinedCreateTalentReqBody
	export function emptyRefCombinedCreateTalentReqBody():Ref<CombinedCreateTalentReqBody>
	export function refOfCombinedCreateTalentReqBody(x:CombinedCreateTalentReqBody,v:Ref<CombinedCreateTalentReqBody>)
	export function unRefCombinedCreateTalentReqBody(v:Ref<CombinedCreateTalentReqBody>):CombinedCreateTalentReqBody
	export function emptyGetAgencyReq():GetAgencyReq
	export function emptyRefGetAgencyReq():Ref<GetAgencyReq>
	export function refOfGetAgencyReq(x:GetAgencyReq,v:Ref<GetAgencyReq>)
	export function unRefGetAgencyReq(v:Ref<GetAgencyReq>):GetAgencyReq
	export function emptyP2ApplicationStageChangedV1Data():P2ApplicationStageChangedV1Data
	export function emptyRefP2ApplicationStageChangedV1Data():Ref<P2ApplicationStageChangedV1Data>
	export function refOfP2ApplicationStageChangedV1Data(x:P2ApplicationStageChangedV1Data,v:Ref<P2ApplicationStageChangedV1Data>)
	export function unRefP2ApplicationStageChangedV1Data(v:Ref<P2ApplicationStageChangedV1Data>):P2ApplicationStageChangedV1Data
	export function emptyListJobTypeIterator():ListJobTypeIterator
	export function emptyRefListJobTypeIterator():Ref<ListJobTypeIterator>
	export function refOfListJobTypeIterator(x:ListJobTypeIterator,v:Ref<ListJobTypeIterator>)
	export function unRefListJobTypeIterator(v:Ref<ListJobTypeIterator>):ListJobTypeIterator
	export function emptyTestResultDetail():TestResultDetail
	export function emptyRefTestResultDetail():Ref<TestResultDetail>
	export function refOfTestResultDetail(x:TestResultDetail,v:Ref<TestResultDetail>)
	export function unRefTestResultDetail(v:Ref<TestResultDetail>):TestResultDetail
	export function emptyJobCustomizedTimeRange():JobCustomizedTimeRange
	export function emptyRefJobCustomizedTimeRange():Ref<JobCustomizedTimeRange>
	export function refOfJobCustomizedTimeRange(x:JobCustomizedTimeRange,v:Ref<JobCustomizedTimeRange>)
	export function unRefJobCustomizedTimeRange(v:Ref<JobCustomizedTimeRange>):JobCustomizedTimeRange
	export function emptyPoint():Point
	export function emptyRefPoint():Ref<Point>
	export function refOfPoint(x:Point,v:Ref<Point>)
	export function unRefPoint(v:Ref<Point>):Point
	export function emptyRegistrationBasicInfo():RegistrationBasicInfo
	export function emptyRefRegistrationBasicInfo():Ref<RegistrationBasicInfo>
	export function refOfRegistrationBasicInfo(x:RegistrationBasicInfo,v:Ref<RegistrationBasicInfo>)
	export function unRefRegistrationBasicInfo(v:Ref<RegistrationBasicInfo>):RegistrationBasicInfo
	export function emptyCreateOfferResp():CreateOfferResp
	export function emptyRefCreateOfferResp():Ref<CreateOfferResp>
	export function refOfCreateOfferResp(x:CreateOfferResp,v:Ref<CreateOfferResp>)
	export function unRefCreateOfferResp(v:Ref<CreateOfferResp>):CreateOfferResp
	export function emptyGetEmployeeResp():GetEmployeeResp
	export function emptyRefGetEmployeeResp():Ref<GetEmployeeResp>
	export function refOfGetEmployeeResp(x:GetEmployeeResp,v:Ref<GetEmployeeResp>)
	export function unRefGetEmployeeResp(v:Ref<GetEmployeeResp>):GetEmployeeResp
	export function emptyListLocationReq():ListLocationReq
	export function emptyRefListLocationReq():Ref<ListLocationReq>
	export function refOfListLocationReq(x:ListLocationReq,v:Ref<ListLocationReq>)
	export function unRefListLocationReq(v:Ref<ListLocationReq>):ListLocationReq
	export function emptyPatchExternalInterviewAssessmentRespData():PatchExternalInterviewAssessmentRespData
	export function emptyRefPatchExternalInterviewAssessmentRespData():Ref<PatchExternalInterviewAssessmentRespData>
	export function refOfPatchExternalInterviewAssessmentRespData(x:PatchExternalInterviewAssessmentRespData,v:Ref<PatchExternalInterviewAssessmentRespData>)
	export function unRefPatchExternalInterviewAssessmentRespData(v:Ref<PatchExternalInterviewAssessmentRespData>):PatchExternalInterviewAssessmentRespData
	export function emptyCombinedJob():CombinedJob
	export function emptyRefCombinedJob():Ref<CombinedJob>
	export function refOfCombinedJob(x:CombinedJob,v:Ref<CombinedJob>)
	export function unRefCombinedJob(v:Ref<CombinedJob>):CombinedJob
	export function emptyEcoExamLoginInfo():EcoExamLoginInfo
	export function emptyRefEcoExamLoginInfo():Ref<EcoExamLoginInfo>
	export function refOfEcoExamLoginInfo(x:EcoExamLoginInfo,v:Ref<EcoExamLoginInfo>)
	export function unRefEcoExamLoginInfo(v:Ref<EcoExamLoginInfo>):EcoExamLoginInfo
	export function emptyBatchUpdateEcoAccountCustomFieldReq():BatchUpdateEcoAccountCustomFieldReq
	export function emptyRefBatchUpdateEcoAccountCustomFieldReq():Ref<BatchUpdateEcoAccountCustomFieldReq>
	export function refOfBatchUpdateEcoAccountCustomFieldReq(x:BatchUpdateEcoAccountCustomFieldReq,v:Ref<BatchUpdateEcoAccountCustomFieldReq>)
	export function unRefBatchUpdateEcoAccountCustomFieldReq(v:Ref<BatchUpdateEcoAccountCustomFieldReq>):BatchUpdateEcoAccountCustomFieldReq
	export function emptyV1():V1
	export function emptyRefV1():Ref<V1>
	export function refOfV1(x:V1,v:Ref<V1>)
	export function unRefV1(v:Ref<V1>):V1
	export function emptyWebsiteDeliveryAttachment():WebsiteDeliveryAttachment
	export function emptyRefWebsiteDeliveryAttachment():Ref<WebsiteDeliveryAttachment>
	export function refOfWebsiteDeliveryAttachment(x:WebsiteDeliveryAttachment,v:Ref<WebsiteDeliveryAttachment>)
	export function unRefWebsiteDeliveryAttachment(v:Ref<WebsiteDeliveryAttachment>):WebsiteDeliveryAttachment
	export function emptyListEvaluationResp():ListEvaluationResp
	export function emptyRefListEvaluationResp():Ref<ListEvaluationResp>
	export function refOfListEvaluationResp(x:ListEvaluationResp,v:Ref<ListEvaluationResp>)
	export function unRefListEvaluationResp(v:Ref<ListEvaluationResp>):ListEvaluationResp
	export function emptySnsInfo():SnsInfo
	export function emptyRefSnsInfo():Ref<SnsInfo>
	export function refOfSnsInfo(x:SnsInfo,v:Ref<SnsInfo>)
	export function unRefSnsInfo(v:Ref<SnsInfo>):SnsInfo
	export function emptyEntityInfo():EntityInfo
	export function emptyRefEntityInfo():Ref<EntityInfo>
	export function refOfEntityInfo(x:EntityInfo,v:Ref<EntityInfo>)
	export function unRefEntityInfo(v:Ref<EntityInfo>):EntityInfo
	export function emptySiteJobPostSearchRequest():SiteJobPostSearchRequest
	export function emptyRefSiteJobPostSearchRequest():Ref<SiteJobPostSearchRequest>
	export function refOfSiteJobPostSearchRequest(x:SiteJobPostSearchRequest,v:Ref<SiteJobPostSearchRequest>)
	export function unRefSiteJobPostSearchRequest(v:Ref<SiteJobPostSearchRequest>):SiteJobPostSearchRequest
	export function emptyEcoAccountCustomField():EcoAccountCustomField
	export function emptyRefEcoAccountCustomField():Ref<EcoAccountCustomField>
	export function refOfEcoAccountCustomField(x:EcoAccountCustomField,v:Ref<EcoAccountCustomField>)
	export function unRefEcoAccountCustomField(v:Ref<EcoAccountCustomField>):EcoAccountCustomField
	export function emptyBatchDeleteEcoBackgroundCheckPackageReqBody():BatchDeleteEcoBackgroundCheckPackageReqBody
	export function emptyRefBatchDeleteEcoBackgroundCheckPackageReqBody():Ref<BatchDeleteEcoBackgroundCheckPackageReqBody>
	export function refOfBatchDeleteEcoBackgroundCheckPackageReqBody(x:BatchDeleteEcoBackgroundCheckPackageReqBody,v:Ref<BatchDeleteEcoBackgroundCheckPackageReqBody>)
	export function unRefBatchDeleteEcoBackgroundCheckPackageReqBody(v:Ref<BatchDeleteEcoBackgroundCheckPackageReqBody>):BatchDeleteEcoBackgroundCheckPackageReqBody
	export function emptyCreateTalentExternalInfoReqBody():CreateTalentExternalInfoReqBody
	export function emptyRefCreateTalentExternalInfoReqBody():Ref<CreateTalentExternalInfoReqBody>
	export function refOfCreateTalentExternalInfoReqBody(x:CreateTalentExternalInfoReqBody,v:Ref<CreateTalentExternalInfoReqBody>)
	export function unRefCreateTalentExternalInfoReqBody(v:Ref<CreateTalentExternalInfoReqBody>):CreateTalentExternalInfoReqBody
	export function emptyDeleteJobRequirementResp():DeleteJobRequirementResp
	export function emptyRefDeleteJobRequirementResp():Ref<DeleteJobRequirementResp>
	export function refOfDeleteJobRequirementResp(x:DeleteJobRequirementResp,v:Ref<DeleteJobRequirementResp>)
	export function unRefDeleteJobRequirementResp(v:Ref<DeleteJobRequirementResp>):DeleteJobRequirementResp
	export function emptySiteResumeCareer():SiteResumeCareer
	export function emptyRefSiteResumeCareer():Ref<SiteResumeCareer>
	export function refOfSiteResumeCareer(x:SiteResumeCareer,v:Ref<SiteResumeCareer>)
	export function unRefSiteResumeCareer(v:Ref<SiteResumeCareer>):SiteResumeCareer
	export function emptySearchReferralRespData():SearchReferralRespData
	export function emptyRefSearchReferralRespData():Ref<SearchReferralRespData>
	export function refOfSearchReferralRespData(x:SearchReferralRespData,v:Ref<SearchReferralRespData>)
	export function unRefSearchReferralRespData(v:Ref<SearchReferralRespData>):SearchReferralRespData
	export function emptyApplicationStage():ApplicationStage
	export function emptyRefApplicationStage():Ref<ApplicationStage>
	export function refOfApplicationStage(x:ApplicationStage,v:Ref<ApplicationStage>)
	export function unRefApplicationStage(v:Ref<ApplicationStage>):ApplicationStage
	export function emptyBatchDeleteEcoBackgroundCheckPackageReq():BatchDeleteEcoBackgroundCheckPackageReq
	export function emptyRefBatchDeleteEcoBackgroundCheckPackageReq():Ref<BatchDeleteEcoBackgroundCheckPackageReq>
	export function refOfBatchDeleteEcoBackgroundCheckPackageReq(x:BatchDeleteEcoBackgroundCheckPackageReq,v:Ref<BatchDeleteEcoBackgroundCheckPackageReq>)
	export function unRefBatchDeleteEcoBackgroundCheckPackageReq(v:Ref<BatchDeleteEcoBackgroundCheckPackageReq>):BatchDeleteEcoBackgroundCheckPackageReq
	export function emptyDeleteNoteResp():DeleteNoteResp
	export function emptyRefDeleteNoteResp():Ref<DeleteNoteResp>
	export function refOfDeleteNoteResp(x:DeleteNoteResp,v:Ref<DeleteNoteResp>)
	export function unRefDeleteNoteResp(v:Ref<DeleteNoteResp>):DeleteNoteResp
	export function emptyGetInterviewRecordAttachmentReq():GetInterviewRecordAttachmentReq
	export function emptyRefGetInterviewRecordAttachmentReq():Ref<GetInterviewRecordAttachmentReq>
	export function refOfGetInterviewRecordAttachmentReq(x:GetInterviewRecordAttachmentReq,v:Ref<GetInterviewRecordAttachmentReq>)
	export function unRefGetInterviewRecordAttachmentReq(v:Ref<GetInterviewRecordAttachmentReq>):GetInterviewRecordAttachmentReq
	export function emptyOfferListInfo():OfferListInfo
	export function emptyRefOfferListInfo():Ref<OfferListInfo>
	export function refOfOfferListInfo(x:OfferListInfo,v:Ref<OfferListInfo>)
	export function unRefOfferListInfo(v:Ref<OfferListInfo>):OfferListInfo
	export function emptyP2EhrImportTaskForInternshipOfferImportedV1Data():P2EhrImportTaskForInternshipOfferImportedV1Data
	export function emptyRefP2EhrImportTaskForInternshipOfferImportedV1Data():Ref<P2EhrImportTaskForInternshipOfferImportedV1Data>
	export function refOfP2EhrImportTaskForInternshipOfferImportedV1Data(x:P2EhrImportTaskForInternshipOfferImportedV1Data,v:Ref<P2EhrImportTaskForInternshipOfferImportedV1Data>)
	export function unRefP2EhrImportTaskForInternshipOfferImportedV1Data(v:Ref<P2EhrImportTaskForInternshipOfferImportedV1Data>):P2EhrImportTaskForInternshipOfferImportedV1Data
	export function emptyMentionEntity():MentionEntity
	export function emptyRefMentionEntity():Ref<MentionEntity>
	export function refOfMentionEntity(x:MentionEntity,v:Ref<MentionEntity>)
	export function unRefMentionEntity(v:Ref<MentionEntity>):MentionEntity
	export function emptyTalentInterviewRegistrationSimple():TalentInterviewRegistrationSimple
	export function emptyRefTalentInterviewRegistrationSimple():Ref<TalentInterviewRegistrationSimple>
	export function refOfTalentInterviewRegistrationSimple(x:TalentInterviewRegistrationSimple,v:Ref<TalentInterviewRegistrationSimple>)
	export function unRefTalentInterviewRegistrationSimple(v:Ref<TalentInterviewRegistrationSimple>):TalentInterviewRegistrationSimple
	export function emptyBackgroundCheckOrderCreator():BackgroundCheckOrderCreator
	export function emptyRefBackgroundCheckOrderCreator():Ref<BackgroundCheckOrderCreator>
	export function refOfBackgroundCheckOrderCreator(x:BackgroundCheckOrderCreator,v:Ref<BackgroundCheckOrderCreator>)
	export function unRefBackgroundCheckOrderCreator(v:Ref<BackgroundCheckOrderCreator>):BackgroundCheckOrderCreator
	export function emptyLocationBaseInfo():LocationBaseInfo
	export function emptyRefLocationBaseInfo():Ref<LocationBaseInfo>
	export function refOfLocationBaseInfo(x:LocationBaseInfo,v:Ref<LocationBaseInfo>)
	export function unRefLocationBaseInfo(v:Ref<LocationBaseInfo>):LocationBaseInfo
	export function emptyCommonSchemaConfig():CommonSchemaConfig
	export function emptyRefCommonSchemaConfig():Ref<CommonSchemaConfig>
	export function refOfCommonSchemaConfig(x:CommonSchemaConfig,v:Ref<CommonSchemaConfig>)
	export function unRefCommonSchemaConfig(v:Ref<CommonSchemaConfig>):CommonSchemaConfig
	export function emptyJobManager():JobManager
	export function emptyRefJobManager():Ref<JobManager>
	export function refOfJobManager(x:JobManager,v:Ref<JobManager>)
	export function unRefJobManager(v:Ref<JobManager>):JobManager
	export function emptyTalentCustomizedDataChild():TalentCustomizedDataChild
	export function emptyRefTalentCustomizedDataChild():Ref<TalentCustomizedDataChild>
	export function refOfTalentCustomizedDataChild(x:TalentCustomizedDataChild,v:Ref<TalentCustomizedDataChild>)
	export function unRefTalentCustomizedDataChild(v:Ref<TalentCustomizedDataChild>):TalentCustomizedDataChild
	export function emptyOfferSalaryInfo():OfferSalaryInfo
	export function emptyRefOfferSalaryInfo():Ref<OfferSalaryInfo>
	export function refOfOfferSalaryInfo(x:OfferSalaryInfo,v:Ref<OfferSalaryInfo>)
	export function unRefOfferSalaryInfo(v:Ref<OfferSalaryInfo>):OfferSalaryInfo
	export function emptyInterviewScore():InterviewScore
	export function emptyRefInterviewScore():Ref<InterviewScore>
	export function refOfInterviewScore(x:InterviewScore,v:Ref<InterviewScore>)
	export function unRefInterviewScore(v:Ref<InterviewScore>):InterviewScore
	export function emptyOfferApplyFormPreObjectConfigInfo():OfferApplyFormPreObjectConfigInfo
	export function emptyRefOfferApplyFormPreObjectConfigInfo():Ref<OfferApplyFormPreObjectConfigInfo>
	export function refOfOfferApplyFormPreObjectConfigInfo(x:OfferApplyFormPreObjectConfigInfo,v:Ref<OfferApplyFormPreObjectConfigInfo>)
	export function unRefOfferApplyFormPreObjectConfigInfo(v:Ref<OfferApplyFormPreObjectConfigInfo>):OfferApplyFormPreObjectConfigInfo
	export function emptyCreateReferralAccountReqBody():CreateReferralAccountReqBody
	export function emptyRefCreateReferralAccountReqBody():Ref<CreateReferralAccountReqBody>
	export function refOfCreateReferralAccountReqBody(x:CreateReferralAccountReqBody,v:Ref<CreateReferralAccountReqBody>)
	export function unRefCreateReferralAccountReqBody(v:Ref<CreateReferralAccountReqBody>):CreateReferralAccountReqBody
	export function emptyListReferralWebsiteJobPostRespData():ListReferralWebsiteJobPostRespData
	export function emptyRefListReferralWebsiteJobPostRespData():Ref<ListReferralWebsiteJobPostRespData>
	export function refOfListReferralWebsiteJobPostRespData(x:ListReferralWebsiteJobPostRespData,v:Ref<ListReferralWebsiteJobPostRespData>)
	export function unRefListReferralWebsiteJobPostRespData(v:Ref<ListReferralWebsiteJobPostRespData>):ListReferralWebsiteJobPostRespData
	export function emptyApplicationTalentCertificateInfo():ApplicationTalentCertificateInfo
	export function emptyRefApplicationTalentCertificateInfo():Ref<ApplicationTalentCertificateInfo>
	export function refOfApplicationTalentCertificateInfo(x:ApplicationTalentCertificateInfo,v:Ref<ApplicationTalentCertificateInfo>)
	export function unRefApplicationTalentCertificateInfo(v:Ref<ApplicationTalentCertificateInfo>):ApplicationTalentCertificateInfo
	export function emptyWebsiteDelivery():WebsiteDelivery
	export function emptyRefWebsiteDelivery():Ref<WebsiteDelivery>
	export function refOfWebsiteDelivery(x:WebsiteDelivery,v:Ref<WebsiteDelivery>)
	export function unRefWebsiteDelivery(v:Ref<WebsiteDelivery>):WebsiteDelivery
	export function emptyInterviewAssessmentDimension():InterviewAssessmentDimension
	export function emptyRefInterviewAssessmentDimension():Ref<InterviewAssessmentDimension>
	export function refOfInterviewAssessmentDimension(x:InterviewAssessmentDimension,v:Ref<InterviewAssessmentDimension>)
	export function unRefInterviewAssessmentDimension(v:Ref<InterviewAssessmentDimension>):InterviewAssessmentDimension
	export function emptyListResumeSourceIterator():ListResumeSourceIterator
	export function emptyRefListResumeSourceIterator():Ref<ListResumeSourceIterator>
	export function refOfListResumeSourceIterator(x:ListResumeSourceIterator,v:Ref<ListResumeSourceIterator>)
	export function unRefListResumeSourceIterator(v:Ref<ListResumeSourceIterator>):ListResumeSourceIterator
	export function emptyListTripartiteAgreementResp():ListTripartiteAgreementResp
	export function emptyRefListTripartiteAgreementResp():Ref<ListTripartiteAgreementResp>
	export function refOfListTripartiteAgreementResp(x:ListTripartiteAgreementResp,v:Ref<ListTripartiteAgreementResp>)
	export function unRefListTripartiteAgreementResp(v:Ref<ListTripartiteAgreementResp>):ListTripartiteAgreementResp
	export function emptyEcoAccountCustomFieldEventData():EcoAccountCustomFieldEventData
	export function emptyRefEcoAccountCustomFieldEventData():Ref<EcoAccountCustomFieldEventData>
	export function refOfEcoAccountCustomFieldEventData(x:EcoAccountCustomFieldEventData,v:Ref<EcoAccountCustomFieldEventData>)
	export function unRefEcoAccountCustomFieldEventData(v:Ref<EcoAccountCustomFieldEventData>):EcoAccountCustomFieldEventData
	export function emptyPortalJobPost():PortalJobPost
	export function emptyRefPortalJobPost():Ref<PortalJobPost>
	export function refOfPortalJobPost(x:PortalJobPost,v:Ref<PortalJobPost>)
	export function unRefPortalJobPost(v:Ref<PortalJobPost>):PortalJobPost
	export function emptyBatchGetIdTalentReq():BatchGetIdTalentReq
	export function emptyRefBatchGetIdTalentReq():Ref<BatchGetIdTalentReq>
	export function refOfBatchGetIdTalentReq(x:BatchGetIdTalentReq,v:Ref<BatchGetIdTalentReq>)
	export function unRefBatchGetIdTalentReq(v:Ref<BatchGetIdTalentReq>):BatchGetIdTalentReq
	export function emptyAppliOfferOnboardProfile():AppliOfferOnboardProfile
	export function emptyRefAppliOfferOnboardProfile():Ref<AppliOfferOnboardProfile>
	export function refOfAppliOfferOnboardProfile(x:AppliOfferOnboardProfile,v:Ref<AppliOfferOnboardProfile>)
	export function unRefAppliOfferOnboardProfile(v:Ref<AppliOfferOnboardProfile>):AppliOfferOnboardProfile
	export function emptyCreateExternalInterviewAssessmentResp():CreateExternalInterviewAssessmentResp
	export function emptyRefCreateExternalInterviewAssessmentResp():Ref<CreateExternalInterviewAssessmentResp>
	export function refOfCreateExternalInterviewAssessmentResp(x:CreateExternalInterviewAssessmentResp,v:Ref<CreateExternalInterviewAssessmentResp>)
	export function unRefCreateExternalInterviewAssessmentResp(v:Ref<CreateExternalInterviewAssessmentResp>):CreateExternalInterviewAssessmentResp
	export function emptyCreateNoteReq():CreateNoteReq
	export function emptyRefCreateNoteReq():Ref<CreateNoteReq>
	export function refOfCreateNoteReq(x:CreateNoteReq,v:Ref<CreateNoteReq>)
	export function unRefCreateNoteReq(v:Ref<CreateNoteReq>):CreateNoteReq
	export function emptyListBackgroundCheckOrderResp():ListBackgroundCheckOrderResp
	export function emptyRefListBackgroundCheckOrderResp():Ref<ListBackgroundCheckOrderResp>
	export function refOfListBackgroundCheckOrderResp(x:ListBackgroundCheckOrderResp,v:Ref<ListBackgroundCheckOrderResp>)
	export function unRefListBackgroundCheckOrderResp(v:Ref<ListBackgroundCheckOrderResp>):ListBackgroundCheckOrderResp
	export function emptyListEvaluationTaskResp():ListEvaluationTaskResp
	export function emptyRefListEvaluationTaskResp():Ref<ListEvaluationTaskResp>
	export function refOfListEvaluationTaskResp(x:ListEvaluationTaskResp,v:Ref<ListEvaluationTaskResp>)
	export function unRefListEvaluationTaskResp(v:Ref<ListEvaluationTaskResp>):ListEvaluationTaskResp
	export function emptySearchTalentPoolReq():SearchTalentPoolReq
	export function emptyRefSearchTalentPoolReq():Ref<SearchTalentPoolReq>
	export function refOfSearchTalentPoolReq(x:SearchTalentPoolReq,v:Ref<SearchTalentPoolReq>)
	export function unRefSearchTalentPoolReq(v:Ref<SearchTalentPoolReq>):SearchTalentPoolReq
	export function emptyCreateEcoBackgroundCheckPackageResp():CreateEcoBackgroundCheckPackageResp
	export function emptyRefCreateEcoBackgroundCheckPackageResp():Ref<CreateEcoBackgroundCheckPackageResp>
	export function refOfCreateEcoBackgroundCheckPackageResp(x:CreateEcoBackgroundCheckPackageResp,v:Ref<CreateEcoBackgroundCheckPackageResp>)
	export function unRefCreateEcoBackgroundCheckPackageResp(v:Ref<CreateEcoBackgroundCheckPackageResp>):CreateEcoBackgroundCheckPackageResp
	export function emptyInternOfferOffboardingInfo():InternOfferOffboardingInfo
	export function emptyRefInternOfferOffboardingInfo():Ref<InternOfferOffboardingInfo>
	export function refOfInternOfferOffboardingInfo(x:InternOfferOffboardingInfo,v:Ref<InternOfferOffboardingInfo>)
	export function unRefInternOfferOffboardingInfo(v:Ref<InternOfferOffboardingInfo>):InternOfferOffboardingInfo
	export function emptyOfferStatusOfferReqBody():OfferStatusOfferReqBody
	export function emptyRefOfferStatusOfferReqBody():Ref<OfferStatusOfferReqBody>
	export function refOfOfferStatusOfferReqBody(x:OfferStatusOfferReqBody,v:Ref<OfferStatusOfferReqBody>)
	export function unRefOfferStatusOfferReqBody(v:Ref<OfferStatusOfferReqBody>):OfferStatusOfferReqBody
	export function emptySearchReferralReq():SearchReferralReq
	export function emptyRefSearchReferralReq():Ref<SearchReferralReq>
	export function refOfSearchReferralReq(x:SearchReferralReq,v:Ref<SearchReferralReq>)
	export function unRefSearchReferralReq(v:Ref<SearchReferralReq>):SearchReferralReq
	export function emptyBackgroundCheckItemInfo():BackgroundCheckItemInfo
	export function emptyRefBackgroundCheckItemInfo():Ref<BackgroundCheckItemInfo>
	export function refOfBackgroundCheckItemInfo(x:BackgroundCheckItemInfo,v:Ref<BackgroundCheckItemInfo>)
	export function unRefBackgroundCheckItemInfo(v:Ref<BackgroundCheckItemInfo>):BackgroundCheckItemInfo
	export function emptyListEvaluationRespData():ListEvaluationRespData
	export function emptyRefListEvaluationRespData():Ref<ListEvaluationRespData>
	export function refOfListEvaluationRespData(x:ListEvaluationRespData,v:Ref<ListEvaluationRespData>)
	export function unRefListEvaluationRespData(v:Ref<ListEvaluationRespData>):ListEvaluationRespData
	export function emptyGetOfferApplicationFormResp():GetOfferApplicationFormResp
	export function emptyRefGetOfferApplicationFormResp():Ref<GetOfferApplicationFormResp>
	export function refOfGetOfferApplicationFormResp(x:GetOfferApplicationFormResp,v:Ref<GetOfferApplicationFormResp>)
	export function unRefGetOfferApplicationFormResp(v:Ref<GetOfferApplicationFormResp>):GetOfferApplicationFormResp
	export function emptyListInterviewRegistrationSchemaResp():ListInterviewRegistrationSchemaResp
	export function emptyRefListInterviewRegistrationSchemaResp():Ref<ListInterviewRegistrationSchemaResp>
	export function refOfListInterviewRegistrationSchemaResp(x:ListInterviewRegistrationSchemaResp,v:Ref<ListInterviewRegistrationSchemaResp>)
	export function unRefListInterviewRegistrationSchemaResp(v:Ref<ListInterviewRegistrationSchemaResp>):ListInterviewRegistrationSchemaResp
	export function emptyCombinedCreateTalentResp():CombinedCreateTalentResp
	export function emptyRefCombinedCreateTalentResp():Ref<CombinedCreateTalentResp>
	export function refOfCombinedCreateTalentResp(x:CombinedCreateTalentResp,v:Ref<CombinedCreateTalentResp>)
	export function unRefCombinedCreateTalentResp(v:Ref<CombinedCreateTalentResp>):CombinedCreateTalentResp
	export function emptySearchTalentPoolIterator():SearchTalentPoolIterator
	export function emptyRefSearchTalentPoolIterator():Ref<SearchTalentPoolIterator>
	export function refOfSearchTalentPoolIterator(x:SearchTalentPoolIterator,v:Ref<SearchTalentPoolIterator>)
	export function unRefSearchTalentPoolIterator(v:Ref<SearchTalentPoolIterator>):SearchTalentPoolIterator
	export function emptyCreateAttachmentResp():CreateAttachmentResp
	export function emptyRefCreateAttachmentResp():Ref<CreateAttachmentResp>
	export function refOfCreateAttachmentResp(x:CreateAttachmentResp,v:Ref<CreateAttachmentResp>)
	export function unRefCreateAttachmentResp(v:Ref<CreateAttachmentResp>):CreateAttachmentResp
	export function emptySiteResumeInternship():SiteResumeInternship
	export function emptyRefSiteResumeInternship():Ref<SiteResumeInternship>
	export function refOfSiteResumeInternship(x:SiteResumeInternship,v:Ref<SiteResumeInternship>)
	export function unRefSiteResumeInternship(v:Ref<SiteResumeInternship>):SiteResumeInternship
	export function emptyListTalentReq():ListTalentReq
	export function emptyRefListTalentReq():Ref<ListTalentReq>
	export function refOfListTalentReq(x:ListTalentReq,v:Ref<ListTalentReq>)
	export function unRefListTalentReq(v:Ref<ListTalentReq>):ListTalentReq
	export function emptyLoginInfoEcoExamResp():LoginInfoEcoExamResp
	export function emptyRefLoginInfoEcoExamResp():Ref<LoginInfoEcoExamResp>
	export function refOfLoginInfoEcoExamResp(x:LoginInfoEcoExamResp,v:Ref<LoginInfoEcoExamResp>)
	export function unRefLoginInfoEcoExamResp(v:Ref<LoginInfoEcoExamResp>):LoginInfoEcoExamResp
	export function emptyListJobFunctionRespData():ListJobFunctionRespData
	export function emptyRefListJobFunctionRespData():Ref<ListJobFunctionRespData>
	export function refOfListJobFunctionRespData(x:ListJobFunctionRespData,v:Ref<ListJobFunctionRespData>)
	export function unRefListJobFunctionRespData(v:Ref<ListJobFunctionRespData>):ListJobFunctionRespData
	export function emptyListReferralWebsiteJobPostIterator():ListReferralWebsiteJobPostIterator
	export function emptyRefListReferralWebsiteJobPostIterator():Ref<ListReferralWebsiteJobPostIterator>
	export function refOfListReferralWebsiteJobPostIterator(x:ListReferralWebsiteJobPostIterator,v:Ref<ListReferralWebsiteJobPostIterator>)
	export function unRefListReferralWebsiteJobPostIterator(v:Ref<ListReferralWebsiteJobPostIterator>):ListReferralWebsiteJobPostIterator
	export function emptyCommonSchemaSetting():CommonSchemaSetting
	export function emptyRefCommonSchemaSetting():Ref<CommonSchemaSetting>
	export function refOfCommonSchemaSetting(x:CommonSchemaSetting,v:Ref<CommonSchemaSetting>)
	export function unRefCommonSchemaSetting(v:Ref<CommonSchemaSetting>):CommonSchemaSetting
	export function emptyCreateExternalReferralRewardResp():CreateExternalReferralRewardResp
	export function emptyRefCreateExternalReferralRewardResp():Ref<CreateExternalReferralRewardResp>
	export function refOfCreateExternalReferralRewardResp(x:CreateExternalReferralRewardResp,v:Ref<CreateExternalReferralRewardResp>)
	export function unRefCreateExternalReferralRewardResp(v:Ref<CreateExternalReferralRewardResp>):CreateExternalReferralRewardResp
	export function emptyInterviewDimensionScore():InterviewDimensionScore
	export function emptyRefInterviewDimensionScore():Ref<InterviewDimensionScore>
	export function refOfInterviewDimensionScore(x:InterviewDimensionScore,v:Ref<InterviewDimensionScore>)
	export function unRefInterviewDimensionScore(v:Ref<InterviewDimensionScore>):InterviewDimensionScore
	export function emptyLocationCity():LocationCity
	export function emptyRefLocationCity():Ref<LocationCity>
	export function refOfLocationCity(x:LocationCity,v:Ref<LocationCity>)
	export function unRefLocationCity(v:Ref<LocationCity>):LocationCity
	export function emptyPreviewAttachmentReq():PreviewAttachmentReq
	export function emptyRefPreviewAttachmentReq():Ref<PreviewAttachmentReq>
	export function refOfPreviewAttachmentReq(x:PreviewAttachmentReq,v:Ref<PreviewAttachmentReq>)
	export function unRefPreviewAttachmentReq(v:Ref<PreviewAttachmentReq>):PreviewAttachmentReq
	export function emptyUpdateResultEcoExamReq():UpdateResultEcoExamReq
	export function emptyRefUpdateResultEcoExamReq():Ref<UpdateResultEcoExamReq>
	export function refOfUpdateResultEcoExamReq(x:UpdateResultEcoExamReq,v:Ref<UpdateResultEcoExamReq>)
	export function unRefUpdateResultEcoExamReq(v:Ref<UpdateResultEcoExamReq>):UpdateResultEcoExamReq
	export function emptyCreateExternalInterviewAssessmentReq():CreateExternalInterviewAssessmentReq
	export function emptyRefCreateExternalInterviewAssessmentReq():Ref<CreateExternalInterviewAssessmentReq>
	export function refOfCreateExternalInterviewAssessmentReq(x:CreateExternalInterviewAssessmentReq,v:Ref<CreateExternalInterviewAssessmentReq>)
	export function unRefCreateExternalInterviewAssessmentReq(v:Ref<CreateExternalInterviewAssessmentReq>):CreateExternalInterviewAssessmentReq
	export function emptyDeactivateReferralAccountRespData():DeactivateReferralAccountRespData
	export function emptyRefDeactivateReferralAccountRespData():Ref<DeactivateReferralAccountRespData>
	export function refOfDeactivateReferralAccountRespData(x:DeactivateReferralAccountRespData,v:Ref<DeactivateReferralAccountRespData>)
	export function unRefDeactivateReferralAccountRespData(v:Ref<DeactivateReferralAccountRespData>):DeactivateReferralAccountRespData
	export function emptyEcoExamPaperData():EcoExamPaperData
	export function emptyRefEcoExamPaperData():Ref<EcoExamPaperData>
	export function refOfEcoExamPaperData(x:EcoExamPaperData,v:Ref<EcoExamPaperData>)
	export function unRefEcoExamPaperData(v:Ref<EcoExamPaperData>):EcoExamPaperData
	export function emptyGetByTalentInterviewResp():GetByTalentInterviewResp
	export function emptyRefGetByTalentInterviewResp():Ref<GetByTalentInterviewResp>
	export function refOfGetByTalentInterviewResp(x:GetByTalentInterviewResp,v:Ref<GetByTalentInterviewResp>)
	export function unRefGetByTalentInterviewResp(v:Ref<GetByTalentInterviewResp>):GetByTalentInterviewResp
	export function emptyListInterviewRespData():ListInterviewRespData
	export function emptyRefListInterviewRespData():Ref<ListInterviewRespData>
	export function refOfListInterviewRespData(x:ListInterviewRespData,v:Ref<ListInterviewRespData>)
	export function unRefListInterviewRespData(v:Ref<ListInterviewRespData>):ListInterviewRespData
	export function emptyListTalentFolderReq():ListTalentFolderReq
	export function emptyRefListTalentFolderReq():Ref<ListTalentFolderReq>
	export function refOfListTalentFolderReq(x:ListTalentFolderReq,v:Ref<ListTalentFolderReq>)
	export function unRefListTalentFolderReq(v:Ref<ListTalentFolderReq>):ListTalentFolderReq
	export function emptyBatchUpdateJobManagerReq():BatchUpdateJobManagerReq
	export function emptyRefBatchUpdateJobManagerReq():Ref<BatchUpdateJobManagerReq>
	export function refOfBatchUpdateJobManagerReq(x:BatchUpdateJobManagerReq,v:Ref<BatchUpdateJobManagerReq>)
	export function unRefBatchUpdateJobManagerReq(v:Ref<BatchUpdateJobManagerReq>):BatchUpdateJobManagerReq
	export function emptyEcoExamPaper():EcoExamPaper
	export function emptyRefEcoExamPaper():Ref<EcoExamPaper>
	export function refOfEcoExamPaper(x:EcoExamPaper,v:Ref<EcoExamPaper>)
	export function unRefEcoExamPaper(v:Ref<EcoExamPaper>):EcoExamPaper
	export function emptyListJobProcessResp():ListJobProcessResp
	export function emptyRefListJobProcessResp():Ref<ListJobProcessResp>
	export function refOfListJobProcessResp(x:ListJobProcessResp,v:Ref<ListJobProcessResp>)
	export function unRefListJobProcessResp(v:Ref<ListJobProcessResp>):ListJobProcessResp
	export function emptyCreateExternalReferralRewardRespData():CreateExternalReferralRewardRespData
	export function emptyRefCreateExternalReferralRewardRespData():Ref<CreateExternalReferralRewardRespData>
	export function refOfCreateExternalReferralRewardRespData(x:CreateExternalReferralRewardRespData,v:Ref<CreateExternalReferralRewardRespData>)
	export function unRefCreateExternalReferralRewardRespData(v:Ref<CreateExternalReferralRewardRespData>):CreateExternalReferralRewardRespData
	export function emptyInterviewRecord():InterviewRecord
	export function emptyRefInterviewRecord():Ref<InterviewRecord>
	export function refOfInterviewRecord(x:InterviewRecord,v:Ref<InterviewRecord>)
	export function unRefInterviewRecord(v:Ref<InterviewRecord>):InterviewRecord
	export function emptyRegistrationSchema():RegistrationSchema
	export function emptyRefRegistrationSchema():Ref<RegistrationSchema>
	export function refOfRegistrationSchema(x:RegistrationSchema,v:Ref<RegistrationSchema>)
	export function unRefRegistrationSchema(v:Ref<RegistrationSchema>):RegistrationSchema
	export function emptyCareerInfo():CareerInfo
	export function emptyRefCareerInfo():Ref<CareerInfo>
	export function refOfCareerInfo(x:CareerInfo,v:Ref<CareerInfo>)
	export function unRefCareerInfo(v:Ref<CareerInfo>):CareerInfo
	export function emptyCombinedUpdateJobResp():CombinedUpdateJobResp
	export function emptyRefCombinedUpdateJobResp():Ref<CombinedUpdateJobResp>
	export function refOfCombinedUpdateJobResp(x:CombinedUpdateJobResp,v:Ref<CombinedUpdateJobResp>)
	export function unRefCombinedUpdateJobResp(v:Ref<CombinedUpdateJobResp>):CombinedUpdateJobResp
	export function emptyListWebsiteJobPostReq():ListWebsiteJobPostReq
	export function emptyRefListWebsiteJobPostReq():Ref<ListWebsiteJobPostReq>
	export function refOfListWebsiteJobPostReq(x:ListWebsiteJobPostReq,v:Ref<ListWebsiteJobPostReq>)
	export function unRefListWebsiteJobPostReq(v:Ref<ListWebsiteJobPostReq>):ListWebsiteJobPostReq
	export function emptyP2EcoBackgroundCheckCanceledV1Data():P2EcoBackgroundCheckCanceledV1Data
	export function emptyRefP2EcoBackgroundCheckCanceledV1Data():Ref<P2EcoBackgroundCheckCanceledV1Data>
	export function refOfP2EcoBackgroundCheckCanceledV1Data(x:P2EcoBackgroundCheckCanceledV1Data,v:Ref<P2EcoBackgroundCheckCanceledV1Data>)
	export function unRefP2EcoBackgroundCheckCanceledV1Data(v:Ref<P2EcoBackgroundCheckCanceledV1Data>):P2EcoBackgroundCheckCanceledV1Data
	export function emptyBatchUpdateJobManagerRespData():BatchUpdateJobManagerRespData
	export function emptyRefBatchUpdateJobManagerRespData():Ref<BatchUpdateJobManagerRespData>
	export function refOfBatchUpdateJobManagerRespData(x:BatchUpdateJobManagerRespData,v:Ref<BatchUpdateJobManagerRespData>)
	export function unRefBatchUpdateJobManagerRespData(v:Ref<BatchUpdateJobManagerRespData>):BatchUpdateJobManagerRespData
	export function emptyCombinedCreateJobReq():CombinedCreateJobReq
	export function emptyRefCombinedCreateJobReq():Ref<CombinedCreateJobReq>
	export function refOfCombinedCreateJobReq(x:CombinedCreateJobReq,v:Ref<CombinedCreateJobReq>)
	export function unRefCombinedCreateJobReq(v:Ref<CombinedCreateJobReq>):CombinedCreateJobReq
	export function emptyP2EcoBackgroundCheckCanceledV1():P2EcoBackgroundCheckCanceledV1
	export function emptyRefP2EcoBackgroundCheckCanceledV1():Ref<P2EcoBackgroundCheckCanceledV1>
	export function refOfP2EcoBackgroundCheckCanceledV1(x:P2EcoBackgroundCheckCanceledV1,v:Ref<P2EcoBackgroundCheckCanceledV1>)
	export function unRefP2EcoBackgroundCheckCanceledV1(v:Ref<P2EcoBackgroundCheckCanceledV1>):P2EcoBackgroundCheckCanceledV1
	export function emptySiteResumeProject():SiteResumeProject
	export function emptyRefSiteResumeProject():Ref<SiteResumeProject>
	export function refOfSiteResumeProject(x:SiteResumeProject,v:Ref<SiteResumeProject>)
	export function unRefSiteResumeProject(v:Ref<SiteResumeProject>):SiteResumeProject
	export function emptyBatchDeleteEcoAccountCustomFieldResp():BatchDeleteEcoAccountCustomFieldResp
	export function emptyRefBatchDeleteEcoAccountCustomFieldResp():Ref<BatchDeleteEcoAccountCustomFieldResp>
	export function refOfBatchDeleteEcoAccountCustomFieldResp(x:BatchDeleteEcoAccountCustomFieldResp,v:Ref<BatchDeleteEcoAccountCustomFieldResp>)
	export function unRefBatchDeleteEcoAccountCustomFieldResp(v:Ref<BatchDeleteEcoAccountCustomFieldResp>):BatchDeleteEcoAccountCustomFieldResp
	export function emptyListRegistrationSchemaReq():ListRegistrationSchemaReq
	export function emptyRefListRegistrationSchemaReq():Ref<ListRegistrationSchemaReq>
	export function refOfListRegistrationSchemaReq(x:ListRegistrationSchemaReq,v:Ref<ListRegistrationSchemaReq>)
	export function unRefListRegistrationSchemaReq(v:Ref<ListRegistrationSchemaReq>):ListRegistrationSchemaReq
	export function emptyListTodoResp():ListTodoResp
	export function emptyRefListTodoResp():Ref<ListTodoResp>
	export function refOfListTodoResp(x:ListTodoResp,v:Ref<ListTodoResp>)
	export function unRefListTodoResp(v:Ref<ListTodoResp>):ListTodoResp
	export function emptyEcoExamResult():EcoExamResult
	export function emptyRefEcoExamResult():Ref<EcoExamResult>
	export function refOfEcoExamResult(x:EcoExamResult,v:Ref<EcoExamResult>)
	export function unRefEcoExamResult(v:Ref<EcoExamResult>):EcoExamResult
	export function emptyListTalentFolderResp():ListTalentFolderResp
	export function emptyRefListTalentFolderResp():Ref<ListTalentFolderResp>
	export function refOfListTalentFolderResp(x:ListTalentFolderResp,v:Ref<ListTalentFolderResp>)
	export function unRefListTalentFolderResp(v:Ref<ListTalentFolderResp>):ListTalentFolderResp
	export function emptyP2EhrImportTaskImportedV1Data():P2EhrImportTaskImportedV1Data
	export function emptyRefP2EhrImportTaskImportedV1Data():Ref<P2EhrImportTaskImportedV1Data>
	export function refOfP2EhrImportTaskImportedV1Data(x:P2EhrImportTaskImportedV1Data,v:Ref<P2EhrImportTaskImportedV1Data>)
	export function unRefP2EhrImportTaskImportedV1Data(v:Ref<P2EhrImportTaskImportedV1Data>):P2EhrImportTaskImportedV1Data
	export function emptyTalentCustomizedDataObjectValueChild():TalentCustomizedDataObjectValueChild
	export function emptyRefTalentCustomizedDataObjectValueChild():Ref<TalentCustomizedDataObjectValueChild>
	export function refOfTalentCustomizedDataObjectValueChild(x:TalentCustomizedDataObjectValueChild,v:Ref<TalentCustomizedDataObjectValueChild>)
	export function unRefTalentCustomizedDataObjectValueChild(v:Ref<TalentCustomizedDataObjectValueChild>):TalentCustomizedDataObjectValueChild
	export function emptyOfferSchemaName():OfferSchemaName
	export function emptyRefOfferSchemaName():Ref<OfferSchemaName>
	export function refOfOfferSchemaName(x:OfferSchemaName,v:Ref<OfferSchemaName>)
	export function unRefOfferSchemaName(v:Ref<OfferSchemaName>):OfferSchemaName
	export function emptyListQuestionnaireReq():ListQuestionnaireReq
	export function emptyRefListQuestionnaireReq():Ref<ListQuestionnaireReq>
	export function refOfListQuestionnaireReq(x:ListQuestionnaireReq,v:Ref<ListQuestionnaireReq>)
	export function unRefListQuestionnaireReq(v:Ref<ListQuestionnaireReq>):ListQuestionnaireReq
	export function emptyPatchNoteResp():PatchNoteResp
	export function emptyRefPatchNoteResp():Ref<PatchNoteResp>
	export function refOfPatchNoteResp(x:PatchNoteResp,v:Ref<PatchNoteResp>)
	export function unRefPatchNoteResp(v:Ref<PatchNoteResp>):PatchNoteResp
	export function emptyUpdateProgressEcoBackgroundCheckResp():UpdateProgressEcoBackgroundCheckResp
	export function emptyRefUpdateProgressEcoBackgroundCheckResp():Ref<UpdateProgressEcoBackgroundCheckResp>
	export function refOfUpdateProgressEcoBackgroundCheckResp(x:UpdateProgressEcoBackgroundCheckResp,v:Ref<UpdateProgressEcoBackgroundCheckResp>)
	export function unRefUpdateProgressEcoBackgroundCheckResp(v:Ref<UpdateProgressEcoBackgroundCheckResp>):UpdateProgressEcoBackgroundCheckResp
	export function emptyInterviewAssessmentTemplate():InterviewAssessmentTemplate
	export function emptyRefInterviewAssessmentTemplate():Ref<InterviewAssessmentTemplate>
	export function refOfInterviewAssessmentTemplate(x:InterviewAssessmentTemplate,v:Ref<InterviewAssessmentTemplate>)
	export function unRefInterviewAssessmentTemplate(v:Ref<InterviewAssessmentTemplate>):InterviewAssessmentTemplate
	export function emptyListExamMarkingTaskReq():ListExamMarkingTaskReq
	export function emptyRefListExamMarkingTaskReq():Ref<ListExamMarkingTaskReq>
	export function refOfListExamMarkingTaskReq(x:ListExamMarkingTaskReq,v:Ref<ListExamMarkingTaskReq>)
	export function unRefListExamMarkingTaskReq(v:Ref<ListExamMarkingTaskReq>):ListExamMarkingTaskReq
	export function emptyInterviewAssessmentDimensionArgs():InterviewAssessmentDimensionArgs
	export function emptyRefInterviewAssessmentDimensionArgs():Ref<InterviewAssessmentDimensionArgs>
	export function refOfInterviewAssessmentDimensionArgs(x:InterviewAssessmentDimensionArgs,v:Ref<InterviewAssessmentDimensionArgs>)
	export function unRefInterviewAssessmentDimensionArgs(v:Ref<InterviewAssessmentDimensionArgs>):InterviewAssessmentDimensionArgs
	export function emptyInterviewExtend():InterviewExtend
	export function emptyRefInterviewExtend():Ref<InterviewExtend>
	export function refOfInterviewExtend(x:InterviewExtend,v:Ref<InterviewExtend>)
	export function unRefInterviewExtend(v:Ref<InterviewExtend>):InterviewExtend
	export function emptyI18n():I18n
	export function emptyRefI18n():Ref<I18n>
	export function refOfI18n(x:I18n,v:Ref<I18n>)
	export function unRefI18n(v:Ref<I18n>):I18n
	export function emptyP2OfferStatusChangedV1():P2OfferStatusChangedV1
	export function emptyRefP2OfferStatusChangedV1():Ref<P2OfferStatusChangedV1>
	export function refOfP2OfferStatusChangedV1(x:P2OfferStatusChangedV1,v:Ref<P2OfferStatusChangedV1>)
	export function unRefP2OfferStatusChangedV1(v:Ref<P2OfferStatusChangedV1>):P2OfferStatusChangedV1
	export function emptyBaseDistrict():BaseDistrict
	export function emptyRefBaseDistrict():Ref<BaseDistrict>
	export function refOfBaseDistrict(x:BaseDistrict,v:Ref<BaseDistrict>)
	export function unRefBaseDistrict(v:Ref<BaseDistrict>):BaseDistrict
	export function emptyUpdateTalentExternalInfoReq():UpdateTalentExternalInfoReq
	export function emptyRefUpdateTalentExternalInfoReq():Ref<UpdateTalentExternalInfoReq>
	export function refOfUpdateTalentExternalInfoReq(x:UpdateTalentExternalInfoReq,v:Ref<UpdateTalentExternalInfoReq>)
	export function unRefUpdateTalentExternalInfoReq(v:Ref<UpdateTalentExternalInfoReq>):UpdateTalentExternalInfoReq
	export function emptyUpdateResultEcoBackgroundCheckReqBody():UpdateResultEcoBackgroundCheckReqBody
	export function emptyRefUpdateResultEcoBackgroundCheckReqBody():Ref<UpdateResultEcoBackgroundCheckReqBody>
	export function refOfUpdateResultEcoBackgroundCheckReqBody(x:UpdateResultEcoBackgroundCheckReqBody,v:Ref<UpdateResultEcoBackgroundCheckReqBody>)
	export function unRefUpdateResultEcoBackgroundCheckReqBody(v:Ref<UpdateResultEcoBackgroundCheckReqBody>):UpdateResultEcoBackgroundCheckReqBody
	export function emptyListNoteResp():ListNoteResp
	export function emptyRefListNoteResp():Ref<ListNoteResp>
	export function refOfListNoteResp(x:ListNoteResp,v:Ref<ListNoteResp>)
	export function unRefListNoteResp(v:Ref<ListNoteResp>):ListNoteResp
	export function emptyJobRequirementCustomizedValue():JobRequirementCustomizedValue
	export function emptyRefJobRequirementCustomizedValue():Ref<JobRequirementCustomizedValue>
	export function refOfJobRequirementCustomizedValue(x:JobRequirementCustomizedValue,v:Ref<JobRequirementCustomizedValue>)
	export function unRefJobRequirementCustomizedValue(v:Ref<JobRequirementCustomizedValue>):JobRequirementCustomizedValue
	export function emptyWebsiteDeliveryIdentification():WebsiteDeliveryIdentification
	export function emptyRefWebsiteDeliveryIdentification():Ref<WebsiteDeliveryIdentification>
	export function refOfWebsiteDeliveryIdentification(x:WebsiteDeliveryIdentification,v:Ref<WebsiteDeliveryIdentification>)
	export function unRefWebsiteDeliveryIdentification(v:Ref<WebsiteDeliveryIdentification>):WebsiteDeliveryIdentification
	export function emptyUpdateConfigJobResp():UpdateConfigJobResp
	export function emptyRefUpdateConfigJobResp():Ref<UpdateConfigJobResp>
	export function refOfUpdateConfigJobResp(x:UpdateConfigJobResp,v:Ref<UpdateConfigJobResp>)
	export function unRefUpdateConfigJobResp(v:Ref<UpdateConfigJobResp>):UpdateConfigJobResp
	export function emptyCreateTripartiteAgreementRespData():CreateTripartiteAgreementRespData
	export function emptyRefCreateTripartiteAgreementRespData():Ref<CreateTripartiteAgreementRespData>
	export function refOfCreateTripartiteAgreementRespData(x:CreateTripartiteAgreementRespData,v:Ref<CreateTripartiteAgreementRespData>)
	export function unRefCreateTripartiteAgreementRespData(v:Ref<CreateTripartiteAgreementRespData>):CreateTripartiteAgreementRespData
	export function emptyListOfferApplicationFormReq():ListOfferApplicationFormReq
	export function emptyRefListOfferApplicationFormReq():Ref<ListOfferApplicationFormReq>
	export function refOfListOfferApplicationFormReq(x:ListOfferApplicationFormReq,v:Ref<ListOfferApplicationFormReq>)
	export function unRefListOfferApplicationFormReq(v:Ref<ListOfferApplicationFormReq>):ListOfferApplicationFormReq
	export function emptySearchTalentOperationLogReq():SearchTalentOperationLogReq
	export function emptyRefSearchTalentOperationLogReq():Ref<SearchTalentOperationLogReq>
	export function refOfSearchTalentOperationLogReq(x:SearchTalentOperationLogReq,v:Ref<SearchTalentOperationLogReq>)
	export function unRefSearchTalentOperationLogReq(v:Ref<SearchTalentOperationLogReq>):SearchTalentOperationLogReq
	export function emptyAgencyProtection():AgencyProtection
	export function emptyRefAgencyProtection():Ref<AgencyProtection>
	export function refOfAgencyProtection(x:AgencyProtection,v:Ref<AgencyProtection>)
	export function unRefAgencyProtection(v:Ref<AgencyProtection>):AgencyProtection
	export function emptyCreateByResumeWebsiteDeliveryResp():CreateByResumeWebsiteDeliveryResp
	export function emptyRefCreateByResumeWebsiteDeliveryResp():Ref<CreateByResumeWebsiteDeliveryResp>
	export function refOfCreateByResumeWebsiteDeliveryResp(x:CreateByResumeWebsiteDeliveryResp,v:Ref<CreateByResumeWebsiteDeliveryResp>)
	export function unRefCreateByResumeWebsiteDeliveryResp(v:Ref<CreateByResumeWebsiteDeliveryResp>):CreateByResumeWebsiteDeliveryResp
	export function emptyRoleDetail():RoleDetail
	export function emptyRefRoleDetail():Ref<RoleDetail>
	export function refOfRoleDetail(x:RoleDetail,v:Ref<RoleDetail>)
	export function unRefRoleDetail(v:Ref<RoleDetail>):RoleDetail
	export function emptyInterviewFeedbackForm():InterviewFeedbackForm
	export function emptyRefInterviewFeedbackForm():Ref<InterviewFeedbackForm>
	export function refOfInterviewFeedbackForm(x:InterviewFeedbackForm,v:Ref<InterviewFeedbackForm>)
	export function unRefInterviewFeedbackForm(v:Ref<InterviewFeedbackForm>):InterviewFeedbackForm
	export function emptyBaseAddress():BaseAddress
	export function emptyRefBaseAddress():Ref<BaseAddress>
	export function refOfBaseAddress(x:BaseAddress,v:Ref<BaseAddress>)
	export function unRefBaseAddress(v:Ref<BaseAddress>):BaseAddress
	export function emptyCreateExamRespData():CreateExamRespData
	export function emptyRefCreateExamRespData():Ref<CreateExamRespData>
	export function refOfCreateExamRespData(x:CreateExamRespData,v:Ref<CreateExamRespData>)
	export function unRefCreateExamRespData(v:Ref<CreateExamRespData>):CreateExamRespData
	export function emptyDeactivateReferralAccountReq():DeactivateReferralAccountReq
	export function emptyRefDeactivateReferralAccountReq():Ref<DeactivateReferralAccountReq>
	export function refOfDeactivateReferralAccountReq(x:DeactivateReferralAccountReq,v:Ref<DeactivateReferralAccountReq>)
	export function unRefDeactivateReferralAccountReq(v:Ref<DeactivateReferralAccountReq>):DeactivateReferralAccountReq
	export function emptyTodoCommon():TodoCommon
	export function emptyRefTodoCommon():Ref<TodoCommon>
	export function refOfTodoCommon(x:TodoCommon,v:Ref<TodoCommon>)
	export function unRefTodoCommon(v:Ref<TodoCommon>):TodoCommon
	export function emptySalary():Salary
	export function emptyRefSalary():Ref<Salary>
	export function refOfSalary(x:Salary,v:Ref<Salary>)
	export function unRefSalary(v:Ref<Salary>):Salary
	export function emptyApplicationOfferCustomModule():ApplicationOfferCustomModule
	export function emptyRefApplicationOfferCustomModule():Ref<ApplicationOfferCustomModule>
	export function refOfApplicationOfferCustomModule(x:ApplicationOfferCustomModule,v:Ref<ApplicationOfferCustomModule>)
	export function unRefApplicationOfferCustomModule(v:Ref<ApplicationOfferCustomModule>):ApplicationOfferCustomModule
	export function emptyProtectAgencyReqBody():ProtectAgencyReqBody
	export function emptyRefProtectAgencyReqBody():Ref<ProtectAgencyReqBody>
	export function refOfProtectAgencyReqBody(x:ProtectAgencyReqBody,v:Ref<ProtectAgencyReqBody>)
	export function unRefProtectAgencyReqBody(v:Ref<ProtectAgencyReqBody>):ProtectAgencyReqBody
	export function emptySearchTestReqBody():SearchTestReqBody
	export function emptyRefSearchTestReqBody():Ref<SearchTestReqBody>
	export function refOfSearchTestReqBody(x:SearchTestReqBody,v:Ref<SearchTestReqBody>)
	export function unRefSearchTestReqBody(v:Ref<SearchTestReqBody>):SearchTestReqBody
	export function emptyBasicInfo():BasicInfo
	export function emptyRefBasicInfo():Ref<BasicInfo>
	export function refOfBasicInfo(x:BasicInfo,v:Ref<BasicInfo>)
	export function unRefBasicInfo(v:Ref<BasicInfo>):BasicInfo
	export function emptyListLocationIterator():ListLocationIterator
	export function emptyRefListLocationIterator():Ref<ListLocationIterator>
	export function refOfListLocationIterator(x:ListLocationIterator,v:Ref<ListLocationIterator>)
	export function unRefListLocationIterator(v:Ref<ListLocationIterator>):ListLocationIterator
	export function emptyTransferStageApplicationReq():TransferStageApplicationReq
	export function emptyRefTransferStageApplicationReq():Ref<TransferStageApplicationReq>
	export function refOfTransferStageApplicationReq(x:TransferStageApplicationReq,v:Ref<TransferStageApplicationReq>)
	export function unRefTransferStageApplicationReq(v:Ref<TransferStageApplicationReq>):TransferStageApplicationReq
	export function emptyTalentCombinedEducationInfo():TalentCombinedEducationInfo
	export function emptyRefTalentCombinedEducationInfo():Ref<TalentCombinedEducationInfo>
	export function refOfTalentCombinedEducationInfo(x:TalentCombinedEducationInfo,v:Ref<TalentCombinedEducationInfo>)
	export function unRefTalentCombinedEducationInfo(v:Ref<TalentCombinedEducationInfo>):TalentCombinedEducationInfo
	export function emptyEcoBackgroundCheckReportFile():EcoBackgroundCheckReportFile
	export function emptyRefEcoBackgroundCheckReportFile():Ref<EcoBackgroundCheckReportFile>
	export function refOfEcoBackgroundCheckReportFile(x:EcoBackgroundCheckReportFile,v:Ref<EcoBackgroundCheckReportFile>)
	export function unRefEcoBackgroundCheckReportFile(v:Ref<EcoBackgroundCheckReportFile>):EcoBackgroundCheckReportFile
	export function emptyAssets():Assets
	export function emptyRefAssets():Ref<Assets>
	export function refOfAssets(x:Assets,v:Ref<Assets>)
	export function unRefAssets(v:Ref<Assets>):Assets
	export function emptyCombinedUpdateTalentResp():CombinedUpdateTalentResp
	export function emptyRefCombinedUpdateTalentResp():Ref<CombinedUpdateTalentResp>
	export function refOfCombinedUpdateTalentResp(x:CombinedUpdateTalentResp,v:Ref<CombinedUpdateTalentResp>)
	export function unRefCombinedUpdateTalentResp(v:Ref<CombinedUpdateTalentResp>):CombinedUpdateTalentResp
	export function emptyListApplicationInterviewResp():ListApplicationInterviewResp
	export function emptyRefListApplicationInterviewResp():Ref<ListApplicationInterviewResp>
	export function refOfListApplicationInterviewResp(x:ListApplicationInterviewResp,v:Ref<ListApplicationInterviewResp>)
	export function unRefListApplicationInterviewResp(v:Ref<ListApplicationInterviewResp>):ListApplicationInterviewResp
	export function emptyTransferOnboardApplicationResp():TransferOnboardApplicationResp
	export function emptyRefTransferOnboardApplicationResp():Ref<TransferOnboardApplicationResp>
	export function refOfTransferOnboardApplicationResp(x:TransferOnboardApplicationResp,v:Ref<TransferOnboardApplicationResp>)
	export function unRefTransferOnboardApplicationResp(v:Ref<TransferOnboardApplicationResp>):TransferOnboardApplicationResp
	export function emptyListEvaluationTaskReq():ListEvaluationTaskReq
	export function emptyRefListEvaluationTaskReq():Ref<ListEvaluationTaskReq>
	export function refOfListEvaluationTaskReq(x:ListEvaluationTaskReq,v:Ref<ListEvaluationTaskReq>)
	export function unRefListEvaluationTaskReq(v:Ref<ListEvaluationTaskReq>):ListEvaluationTaskReq
	export function emptyCombinedJobResultDefaultJobPost():CombinedJobResultDefaultJobPost
	export function emptyRefCombinedJobResultDefaultJobPost():Ref<CombinedJobResultDefaultJobPost>
	export function refOfCombinedJobResultDefaultJobPost(x:CombinedJobResultDefaultJobPost,v:Ref<CombinedJobResultDefaultJobPost>)
	export function unRefCombinedJobResultDefaultJobPost(v:Ref<CombinedJobResultDefaultJobPost>):CombinedJobResultDefaultJobPost
	export function emptyJobCustomizedOption():JobCustomizedOption
	export function emptyRefJobCustomizedOption():Ref<JobCustomizedOption>
	export function refOfJobCustomizedOption(x:JobCustomizedOption,v:Ref<JobCustomizedOption>)
	export function unRefJobCustomizedOption(v:Ref<JobCustomizedOption>):JobCustomizedOption
	export function emptyOfferFile():OfferFile
	export function emptyRefOfferFile():Ref<OfferFile>
	export function refOfOfferFile(x:OfferFile,v:Ref<OfferFile>)
	export function unRefOfferFile(v:Ref<OfferFile>):OfferFile
	export function emptySearchTalentOperationLogReqBody():SearchTalentOperationLogReqBody
	export function emptyRefSearchTalentOperationLogReqBody():Ref<SearchTalentOperationLogReqBody>
	export function refOfSearchTalentOperationLogReqBody(x:SearchTalentOperationLogReqBody,v:Ref<SearchTalentOperationLogReqBody>)
	export function unRefSearchTalentOperationLogReqBody(v:Ref<SearchTalentOperationLogReqBody>):SearchTalentOperationLogReqBody
	export function emptyListApplicationInterviewRespData():ListApplicationInterviewRespData
	export function emptyRefListApplicationInterviewRespData():Ref<ListApplicationInterviewRespData>
	export function refOfListApplicationInterviewRespData(x:ListApplicationInterviewRespData,v:Ref<ListApplicationInterviewRespData>)
	export function unRefListApplicationInterviewRespData(v:Ref<ListApplicationInterviewRespData>):ListApplicationInterviewRespData
	export function emptyBackgroundCheckFeedbackInfo():BackgroundCheckFeedbackInfo
	export function emptyRefBackgroundCheckFeedbackInfo():Ref<BackgroundCheckFeedbackInfo>
	export function refOfBackgroundCheckFeedbackInfo(x:BackgroundCheckFeedbackInfo,v:Ref<BackgroundCheckFeedbackInfo>)
	export function unRefBackgroundCheckFeedbackInfo(v:Ref<BackgroundCheckFeedbackInfo>):BackgroundCheckFeedbackInfo
	export function emptyDataPermission():DataPermission
	export function emptyRefDataPermission():Ref<DataPermission>
	export function refOfDataPermission(x:DataPermission,v:Ref<DataPermission>)
	export function unRefDataPermission(v:Ref<DataPermission>):DataPermission
	export function emptyExternalInterviewAssessment():ExternalInterviewAssessment
	export function emptyRefExternalInterviewAssessment():Ref<ExternalInterviewAssessment>
	export function refOfExternalInterviewAssessment(x:ExternalInterviewAssessment,v:Ref<ExternalInterviewAssessment>)
	export function unRefExternalInterviewAssessment(v:Ref<ExternalInterviewAssessment>):ExternalInterviewAssessment
	export function emptyCreateExternalApplicationResp():CreateExternalApplicationResp
	export function emptyRefCreateExternalApplicationResp():Ref<CreateExternalApplicationResp>
	export function refOfCreateExternalApplicationResp(x:CreateExternalApplicationResp,v:Ref<CreateExternalApplicationResp>)
	export function unRefCreateExternalApplicationResp(v:Ref<CreateExternalApplicationResp>):CreateExternalApplicationResp
	export function emptyCreateExternalBackgroundCheckResp():CreateExternalBackgroundCheckResp
	export function emptyRefCreateExternalBackgroundCheckResp():Ref<CreateExternalBackgroundCheckResp>
	export function refOfCreateExternalBackgroundCheckResp(x:CreateExternalBackgroundCheckResp,v:Ref<CreateExternalBackgroundCheckResp>)
	export function unRefCreateExternalBackgroundCheckResp(v:Ref<CreateExternalBackgroundCheckResp>):CreateExternalBackgroundCheckResp
	export function emptyEmployeeOverboardInfo():EmployeeOverboardInfo
	export function emptyRefEmployeeOverboardInfo():Ref<EmployeeOverboardInfo>
	export function refOfEmployeeOverboardInfo(x:EmployeeOverboardInfo,v:Ref<EmployeeOverboardInfo>)
	export function unRefEmployeeOverboardInfo(v:Ref<EmployeeOverboardInfo>):EmployeeOverboardInfo
	export function emptyGetByTalentInterviewRespData():GetByTalentInterviewRespData
	export function emptyRefGetByTalentInterviewRespData():Ref<GetByTalentInterviewRespData>
	export function refOfGetByTalentInterviewRespData(x:GetByTalentInterviewRespData,v:Ref<GetByTalentInterviewRespData>)
	export function unRefGetByTalentInterviewRespData(v:Ref<GetByTalentInterviewRespData>):GetByTalentInterviewRespData
	export function emptyAgency():Agency
	export function emptyRefAgency():Ref<Agency>
	export function refOfAgency(x:Agency,v:Ref<Agency>)
	export function unRefAgency(v:Ref<Agency>):Agency
	export function emptyGetTalentReq():GetTalentReq
	export function emptyRefGetTalentReq():Ref<GetTalentReq>
	export function refOfGetTalentReq(x:GetTalentReq,v:Ref<GetTalentReq>)
	export function unRefGetTalentReq(v:Ref<GetTalentReq>):GetTalentReq
	export function emptyListRoleRespData():ListRoleRespData
	export function emptyRefListRoleRespData():Ref<ListRoleRespData>
	export function refOfListRoleRespData(x:ListRoleRespData,v:Ref<ListRoleRespData>)
	export function unRefListRoleRespData(v:Ref<ListRoleRespData>):ListRoleRespData
	export function emptySiteResumeWork():SiteResumeWork
	export function emptyRefSiteResumeWork():Ref<SiteResumeWork>
	export function refOfSiteResumeWork(x:SiteResumeWork,v:Ref<SiteResumeWork>)
	export function unRefSiteResumeWork(v:Ref<SiteResumeWork>):SiteResumeWork
	export function emptyApplicationStageTime():ApplicationStageTime
	export function emptyRefApplicationStageTime():Ref<ApplicationStageTime>
	export function refOfApplicationStageTime(x:ApplicationStageTime,v:Ref<ApplicationStageTime>)
	export function unRefApplicationStageTime(v:Ref<ApplicationStageTime>):ApplicationStageTime
	export function emptyGetInterviewRecordAttachmentResp():GetInterviewRecordAttachmentResp
	export function emptyRefGetInterviewRecordAttachmentResp():Ref<GetInterviewRecordAttachmentResp>
	export function refOfGetInterviewRecordAttachmentResp(x:GetInterviewRecordAttachmentResp,v:Ref<GetInterviewRecordAttachmentResp>)
	export function unRefGetInterviewRecordAttachmentResp(v:Ref<GetInterviewRecordAttachmentResp>):GetInterviewRecordAttachmentResp
	export function emptyDegreeFilter():DegreeFilter
	export function emptyRefDegreeFilter():Ref<DegreeFilter>
	export function refOfDegreeFilter(x:DegreeFilter,v:Ref<DegreeFilter>)
	export function unRefDegreeFilter(v:Ref<DegreeFilter>):DegreeFilter
	export function emptyEvaluation():Evaluation
	export function emptyRefEvaluation():Ref<Evaluation>
	export function refOfEvaluation(x:Evaluation,v:Ref<Evaluation>)
	export function unRefEvaluation(v:Ref<Evaluation>):Evaluation
	export function emptyUpdateTripartiteAgreementResp():UpdateTripartiteAgreementResp
	export function emptyRefUpdateTripartiteAgreementResp():Ref<UpdateTripartiteAgreementResp>
	export function refOfUpdateTripartiteAgreementResp(x:UpdateTripartiteAgreementResp,v:Ref<UpdateTripartiteAgreementResp>)
	export function unRefUpdateTripartiteAgreementResp(v:Ref<UpdateTripartiteAgreementResp>):UpdateTripartiteAgreementResp
	export function emptyCreateExternalInterviewRespData():CreateExternalInterviewRespData
	export function emptyRefCreateExternalInterviewRespData():Ref<CreateExternalInterviewRespData>
	export function refOfCreateExternalInterviewRespData(x:CreateExternalInterviewRespData,v:Ref<CreateExternalInterviewRespData>)
	export function unRefCreateExternalInterviewRespData(v:Ref<CreateExternalInterviewRespData>):CreateExternalInterviewRespData
	export function emptyInterviewDimensionAssessment():InterviewDimensionAssessment
	export function emptyRefInterviewDimensionAssessment():Ref<InterviewDimensionAssessment>
	export function refOfInterviewDimensionAssessment(x:InterviewDimensionAssessment,v:Ref<InterviewDimensionAssessment>)
	export function unRefInterviewDimensionAssessment(v:Ref<InterviewDimensionAssessment>):InterviewDimensionAssessment
	export function emptyTalentAwardInfo():TalentAwardInfo
	export function emptyRefTalentAwardInfo():Ref<TalentAwardInfo>
	export function refOfTalentAwardInfo(x:TalentAwardInfo,v:Ref<TalentAwardInfo>)
	export function unRefTalentAwardInfo(v:Ref<TalentAwardInfo>):TalentAwardInfo
	export function emptyTalentSelfEvaluation():TalentSelfEvaluation
	export function emptyRefTalentSelfEvaluation():Ref<TalentSelfEvaluation>
	export function refOfTalentSelfEvaluation(x:TalentSelfEvaluation,v:Ref<TalentSelfEvaluation>)
	export function unRefTalentSelfEvaluation(v:Ref<TalentSelfEvaluation>):TalentSelfEvaluation
	export function emptyConfigJobResp():ConfigJobResp
	export function emptyRefConfigJobResp():Ref<ConfigJobResp>
	export function refOfConfigJobResp(x:ConfigJobResp,v:Ref<ConfigJobResp>)
	export function unRefConfigJobResp(v:Ref<ConfigJobResp>):ConfigJobResp
	export function emptyDeleteJobRequirementReq():DeleteJobRequirementReq
	export function emptyRefDeleteJobRequirementReq():Ref<DeleteJobRequirementReq>
	export function refOfDeleteJobRequirementReq(x:DeleteJobRequirementReq,v:Ref<DeleteJobRequirementReq>)
	export function unRefDeleteJobRequirementReq(v:Ref<DeleteJobRequirementReq>):DeleteJobRequirementReq
	export function emptyGetByApplicationReferralResp():GetByApplicationReferralResp
	export function emptyRefGetByApplicationReferralResp():Ref<GetByApplicationReferralResp>
	export function refOfGetByApplicationReferralResp(x:GetByApplicationReferralResp,v:Ref<GetByApplicationReferralResp>)
	export function unRefGetByApplicationReferralResp(v:Ref<GetByApplicationReferralResp>):GetByApplicationReferralResp
	export function emptyAppliTalentAttachResumeInfo():AppliTalentAttachResumeInfo
	export function emptyRefAppliTalentAttachResumeInfo():Ref<AppliTalentAttachResumeInfo>
	export function refOfAppliTalentAttachResumeInfo(x:AppliTalentAttachResumeInfo,v:Ref<AppliTalentAttachResumeInfo>)
	export function unRefAppliTalentAttachResumeInfo(v:Ref<AppliTalentAttachResumeInfo>):AppliTalentAttachResumeInfo
	export function emptyApplicationTalentBasicInfo():ApplicationTalentBasicInfo
	export function emptyRefApplicationTalentBasicInfo():Ref<ApplicationTalentBasicInfo>
	export function refOfApplicationTalentBasicInfo(x:ApplicationTalentBasicInfo,v:Ref<ApplicationTalentBasicInfo>)
	export function unRefApplicationTalentBasicInfo(v:Ref<ApplicationTalentBasicInfo>):ApplicationTalentBasicInfo
	export function emptyProtectSearchAgencyReqBody():ProtectSearchAgencyReqBody
	export function emptyRefProtectSearchAgencyReqBody():Ref<ProtectSearchAgencyReqBody>
	export function refOfProtectSearchAgencyReqBody(x:ProtectSearchAgencyReqBody,v:Ref<ProtectSearchAgencyReqBody>)
	export function unRefProtectSearchAgencyReqBody(v:Ref<ProtectSearchAgencyReqBody>):ProtectSearchAgencyReqBody
	export function emptyCountry():Country
	export function emptyRefCountry():Ref<Country>
	export function refOfCountry(x:Country,v:Ref<Country>)
	export function unRefCountry(v:Ref<Country>):Country
	export function emptyCreateEcoAccountCustomFieldReq():CreateEcoAccountCustomFieldReq
	export function emptyRefCreateEcoAccountCustomFieldReq():Ref<CreateEcoAccountCustomFieldReq>
	export function refOfCreateEcoAccountCustomFieldReq(x:CreateEcoAccountCustomFieldReq,v:Ref<CreateEcoAccountCustomFieldReq>)
	export function unRefCreateEcoAccountCustomFieldReq(v:Ref<CreateEcoAccountCustomFieldReq>):CreateEcoAccountCustomFieldReq
	export function emptyWebsiteDeliverySelfEvaluation():WebsiteDeliverySelfEvaluation
	export function emptyRefWebsiteDeliverySelfEvaluation():Ref<WebsiteDeliverySelfEvaluation>
	export function refOfWebsiteDeliverySelfEvaluation(x:WebsiteDeliverySelfEvaluation,v:Ref<WebsiteDeliverySelfEvaluation>)
	export function unRefWebsiteDeliverySelfEvaluation(v:Ref<WebsiteDeliverySelfEvaluation>):WebsiteDeliverySelfEvaluation
	export function emptyJobRecruiter2():JobRecruiter2
	export function emptyRefJobRecruiter2():Ref<JobRecruiter2>
	export function refOfJobRecruiter2(x:JobRecruiter2,v:Ref<JobRecruiter2>)
	export function unRefJobRecruiter2(v:Ref<JobRecruiter2>):JobRecruiter2
	export function emptyAppliOfferBasicCustObj():AppliOfferBasicCustObj
	export function emptyRefAppliOfferBasicCustObj():Ref<AppliOfferBasicCustObj>
	export function refOfAppliOfferBasicCustObj(x:AppliOfferBasicCustObj,v:Ref<AppliOfferBasicCustObj>)
	export function unRefAppliOfferBasicCustObj(v:Ref<AppliOfferBasicCustObj>):AppliOfferBasicCustObj
	export function emptyEmployee():Employee
	export function emptyRefEmployee():Ref<Employee>
	export function refOfEmployee(x:Employee,v:Ref<Employee>)
	export function unRefEmployee(v:Ref<Employee>):Employee
	export function emptyExternalInterview():ExternalInterview
	export function emptyRefExternalInterview():Ref<ExternalInterview>
	export function refOfExternalInterview(x:ExternalInterview,v:Ref<ExternalInterview>)
	export function unRefExternalInterview(v:Ref<ExternalInterview>):ExternalInterview
	export function emptyQueryAgencyRespData():QueryAgencyRespData
	export function emptyRefQueryAgencyRespData():Ref<QueryAgencyRespData>
	export function refOfQueryAgencyRespData(x:QueryAgencyRespData,v:Ref<QueryAgencyRespData>)
	export function unRefQueryAgencyRespData(v:Ref<QueryAgencyRespData>):QueryAgencyRespData
	export function emptyListJobRequirementRespData():ListJobRequirementRespData
	export function emptyRefListJobRequirementRespData():Ref<ListJobRequirementRespData>
	export function refOfListJobRequirementRespData(x:ListJobRequirementRespData,v:Ref<ListJobRequirementRespData>)
	export function unRefListJobRequirementRespData(v:Ref<ListJobRequirementRespData>):ListJobRequirementRespData
	export function emptySearchDiversityInclusionRespData():SearchDiversityInclusionRespData
	export function emptyRefSearchDiversityInclusionRespData():Ref<SearchDiversityInclusionRespData>
	export function refOfSearchDiversityInclusionRespData(x:SearchDiversityInclusionRespData,v:Ref<SearchDiversityInclusionRespData>)
	export function unRefSearchDiversityInclusionRespData(v:Ref<SearchDiversityInclusionRespData>):SearchDiversityInclusionRespData
	export function emptyJobHighlight():JobHighlight
	export function emptyRefJobHighlight():Ref<JobHighlight>
	export function refOfJobHighlight(x:JobHighlight,v:Ref<JobHighlight>)
	export function unRefJobHighlight(v:Ref<JobHighlight>):JobHighlight
	export function emptyListRegistrationSchemaResp():ListRegistrationSchemaResp
	export function emptyRefListRegistrationSchemaResp():Ref<ListRegistrationSchemaResp>
	export function refOfListRegistrationSchemaResp(x:ListRegistrationSchemaResp,v:Ref<ListRegistrationSchemaResp>)
	export function unRefListRegistrationSchemaResp(v:Ref<ListRegistrationSchemaResp>):ListRegistrationSchemaResp
	export function emptyBatchUpdateEcoExamPaperReq():BatchUpdateEcoExamPaperReq
	export function emptyRefBatchUpdateEcoExamPaperReq():Ref<BatchUpdateEcoExamPaperReq>
	export function refOfBatchUpdateEcoExamPaperReq(x:BatchUpdateEcoExamPaperReq,v:Ref<BatchUpdateEcoExamPaperReq>)
	export function unRefBatchUpdateEcoExamPaperReq(v:Ref<BatchUpdateEcoExamPaperReq>):BatchUpdateEcoExamPaperReq
	export function emptyLocationDistrict():LocationDistrict
	export function emptyRefLocationDistrict():Ref<LocationDistrict>
	export function refOfLocationDistrict(x:LocationDistrict,v:Ref<LocationDistrict>)
	export function unRefLocationDistrict(v:Ref<LocationDistrict>):LocationDistrict
	export function emptyCancelEcoBackgroundCheckResp():CancelEcoBackgroundCheckResp
	export function emptyRefCancelEcoBackgroundCheckResp():Ref<CancelEcoBackgroundCheckResp>
	export function refOfCancelEcoBackgroundCheckResp(x:CancelEcoBackgroundCheckResp,v:Ref<CancelEcoBackgroundCheckResp>)
	export function unRefCancelEcoBackgroundCheckResp(v:Ref<CancelEcoBackgroundCheckResp>):CancelEcoBackgroundCheckResp
	export function emptySearchTalentOperationLogRespData():SearchTalentOperationLogRespData
	export function emptyRefSearchTalentOperationLogRespData():Ref<SearchTalentOperationLogRespData>
	export function refOfSearchTalentOperationLogRespData(x:SearchTalentOperationLogRespData,v:Ref<SearchTalentOperationLogRespData>)
	export function unRefSearchTalentOperationLogRespData(v:Ref<SearchTalentOperationLogRespData>):SearchTalentOperationLogRespData
	export function emptyListInterviewReq():ListInterviewReq
	export function emptyRefListInterviewReq():Ref<ListInterviewReq>
	export function refOfListInterviewReq(x:ListInterviewReq,v:Ref<ListInterviewReq>)
	export function unRefListInterviewReq(v:Ref<ListInterviewReq>):ListInterviewReq
	export function emptyAppliOfferBasicInfoUser():AppliOfferBasicInfoUser
	export function emptyRefAppliOfferBasicInfoUser():Ref<AppliOfferBasicInfoUser>
	export function refOfAppliOfferBasicInfoUser(x:AppliOfferBasicInfoUser,v:Ref<AppliOfferBasicInfoUser>)
	export function unRefAppliOfferBasicInfoUser(v:Ref<AppliOfferBasicInfoUser>):AppliOfferBasicInfoUser
	export function emptyGetAttachmentResp():GetAttachmentResp
	export function emptyRefGetAttachmentResp():Ref<GetAttachmentResp>
	export function refOfGetAttachmentResp(x:GetAttachmentResp,v:Ref<GetAttachmentResp>)
	export function unRefGetAttachmentResp(v:Ref<GetAttachmentResp>):GetAttachmentResp
	export function emptySiteJobRecruitmentType():SiteJobRecruitmentType
	export function emptyRefSiteJobRecruitmentType():Ref<SiteJobRecruitmentType>
	export function refOfSiteJobRecruitmentType(x:SiteJobRecruitmentType,v:Ref<SiteJobRecruitmentType>)
	export function unRefSiteJobRecruitmentType(v:Ref<SiteJobRecruitmentType>):SiteJobRecruitmentType
	export function emptyQueryAgencyResp():QueryAgencyResp
	export function emptyRefQueryAgencyResp():Ref<QueryAgencyResp>
	export function refOfQueryAgencyResp(x:QueryAgencyResp,v:Ref<QueryAgencyResp>)
	export function unRefQueryAgencyResp(v:Ref<QueryAgencyResp>):QueryAgencyResp
	export function emptySearchWebsiteJobPostReq():SearchWebsiteJobPostReq
	export function emptyRefSearchWebsiteJobPostReq():Ref<SearchWebsiteJobPostReq>
	export function refOfSearchWebsiteJobPostReq(x:SearchWebsiteJobPostReq,v:Ref<SearchWebsiteJobPostReq>)
	export function unRefSearchWebsiteJobPostReq(v:Ref<SearchWebsiteJobPostReq>):SearchWebsiteJobPostReq
	export function emptySearchWebsiteJobPostResp():SearchWebsiteJobPostResp
	export function emptyRefSearchWebsiteJobPostResp():Ref<SearchWebsiteJobPostResp>
	export function refOfSearchWebsiteJobPostResp(x:SearchWebsiteJobPostResp,v:Ref<SearchWebsiteJobPostResp>)
	export function unRefSearchWebsiteJobPostResp(v:Ref<SearchWebsiteJobPostResp>):SearchWebsiteJobPostResp
	export function emptyCandidateTagFilter():CandidateTagFilter
	export function emptyRefCandidateTagFilter():Ref<CandidateTagFilter>
	export function refOfCandidateTagFilter(x:CandidateTagFilter,v:Ref<CandidateTagFilter>)
	export function unRefCandidateTagFilter(v:Ref<CandidateTagFilter>):CandidateTagFilter
	export function emptyInterviewQuestion():InterviewQuestion
	export function emptyRefInterviewQuestion():Ref<InterviewQuestion>
	export function refOfInterviewQuestion(x:InterviewQuestion,v:Ref<InterviewQuestion>)
	export function unRefInterviewQuestion(v:Ref<InterviewQuestion>):InterviewQuestion
	export function emptySearchTalentOperationLogResp():SearchTalentOperationLogResp
	export function emptyRefSearchTalentOperationLogResp():Ref<SearchTalentOperationLogResp>
	export function refOfSearchTalentOperationLogResp(x:SearchTalentOperationLogResp,v:Ref<SearchTalentOperationLogResp>)
	export function unRefSearchTalentOperationLogResp(v:Ref<SearchTalentOperationLogResp>):SearchTalentOperationLogResp
	export function emptyGetWebsiteJobPostRespData():GetWebsiteJobPostRespData
	export function emptyRefGetWebsiteJobPostRespData():Ref<GetWebsiteJobPostRespData>
	export function refOfGetWebsiteJobPostRespData(x:GetWebsiteJobPostRespData,v:Ref<GetWebsiteJobPostRespData>)
	export function unRefGetWebsiteJobPostRespData(v:Ref<GetWebsiteJobPostRespData>):GetWebsiteJobPostRespData
	export function emptyTalentCompetitionInfo():TalentCompetitionInfo
	export function emptyRefTalentCompetitionInfo():Ref<TalentCompetitionInfo>
	export function refOfTalentCompetitionInfo(x:TalentCompetitionInfo,v:Ref<TalentCompetitionInfo>)
	export function unRefTalentCompetitionInfo(v:Ref<TalentCompetitionInfo>):TalentCompetitionInfo
	export function emptyTalentExternalInfo():TalentExternalInfo
	export function emptyRefTalentExternalInfo():Ref<TalentExternalInfo>
	export function refOfTalentExternalInfo(x:TalentExternalInfo,v:Ref<TalentExternalInfo>)
	export function unRefTalentExternalInfo(v:Ref<TalentExternalInfo>):TalentExternalInfo
	export function emptyListWebsiteJobPostRespData():ListWebsiteJobPostRespData
	export function emptyRefListWebsiteJobPostRespData():Ref<ListWebsiteJobPostRespData>
	export function refOfListWebsiteJobPostRespData(x:ListWebsiteJobPostRespData,v:Ref<ListWebsiteJobPostRespData>)
	export function unRefListWebsiteJobPostRespData(v:Ref<ListWebsiteJobPostRespData>):ListWebsiteJobPostRespData
	export function emptySiteApplication():SiteApplication
	export function emptyRefSiteApplication():Ref<SiteApplication>
	export function refOfSiteApplication(x:SiteApplication,v:Ref<SiteApplication>)
	export function unRefSiteApplication(v:Ref<SiteApplication>):SiteApplication
	export function emptyGetRoleReq():GetRoleReq
	export function emptyRefGetRoleReq():Ref<GetRoleReq>
	export function refOfGetRoleReq(x:GetRoleReq,v:Ref<GetRoleReq>)
	export function unRefGetRoleReq(v:Ref<GetRoleReq>):GetRoleReq
	export function emptyListRoleReq():ListRoleReq
	export function emptyRefListRoleReq():Ref<ListRoleReq>
	export function refOfListRoleReq(x:ListRoleReq,v:Ref<ListRoleReq>)
	export function unRefListRoleReq(v:Ref<ListRoleReq>):ListRoleReq
	export function emptyMasterLocationInfo():MasterLocationInfo
	export function emptyRefMasterLocationInfo():Ref<MasterLocationInfo>
	export function refOfMasterLocationInfo(x:MasterLocationInfo,v:Ref<MasterLocationInfo>)
	export function unRefMasterLocationInfo(v:Ref<MasterLocationInfo>):MasterLocationInfo
	export function emptyPermissionCollection():PermissionCollection
	export function emptyRefPermissionCollection():Ref<PermissionCollection>
	export function refOfPermissionCollection(x:PermissionCollection,v:Ref<PermissionCollection>)
	export function unRefPermissionCollection(v:Ref<PermissionCollection>):PermissionCollection
	export function emptySearchReferralReqBody():SearchReferralReqBody
	export function emptyRefSearchReferralReqBody():Ref<SearchReferralReqBody>
	export function refOfSearchReferralReqBody(x:SearchReferralReqBody,v:Ref<SearchReferralReqBody>)
	export function unRefSearchReferralReqBody(v:Ref<SearchReferralReqBody>):SearchReferralReqBody
	export function emptyGetOfferResp():GetOfferResp
	export function emptyRefGetOfferResp():Ref<GetOfferResp>
	export function refOfGetOfferResp(x:GetOfferResp,v:Ref<GetOfferResp>)
	export function unRefGetOfferResp(v:Ref<GetOfferResp>):GetOfferResp
	export function emptyExternalGrantRoleInfo():ExternalGrantRoleInfo
	export function emptyRefExternalGrantRoleInfo():Ref<ExternalGrantRoleInfo>
	export function refOfExternalGrantRoleInfo(x:ExternalGrantRoleInfo,v:Ref<ExternalGrantRoleInfo>)
	export function unRefExternalGrantRoleInfo(v:Ref<ExternalGrantRoleInfo>):ExternalGrantRoleInfo
	export function emptyApplicationTalentCareerInfo():ApplicationTalentCareerInfo
	export function emptyRefApplicationTalentCareerInfo():Ref<ApplicationTalentCareerInfo>
	export function refOfApplicationTalentCareerInfo(x:ApplicationTalentCareerInfo,v:Ref<ApplicationTalentCareerInfo>)
	export function unRefApplicationTalentCareerInfo(v:Ref<ApplicationTalentCareerInfo>):ApplicationTalentCareerInfo
	export function emptyExternalBackgroundCheckAttachment():ExternalBackgroundCheckAttachment
	export function emptyRefExternalBackgroundCheckAttachment():Ref<ExternalBackgroundCheckAttachment>
	export function refOfExternalBackgroundCheckAttachment(x:ExternalBackgroundCheckAttachment,v:Ref<ExternalBackgroundCheckAttachment>)
	export function unRefExternalBackgroundCheckAttachment(v:Ref<ExternalBackgroundCheckAttachment>):ExternalBackgroundCheckAttachment
	export function emptyP2ApplicationDeletedV1():P2ApplicationDeletedV1
	export function emptyRefP2ApplicationDeletedV1():Ref<P2ApplicationDeletedV1>
	export function refOfP2ApplicationDeletedV1(x:P2ApplicationDeletedV1,v:Ref<P2ApplicationDeletedV1>)
	export function unRefP2ApplicationDeletedV1(v:Ref<P2ApplicationDeletedV1>):P2ApplicationDeletedV1
	export function emptyTransferOnboardApplicationReqBody():TransferOnboardApplicationReqBody
	export function emptyRefTransferOnboardApplicationReqBody():Ref<TransferOnboardApplicationReqBody>
	export function refOfTransferOnboardApplicationReqBody(x:TransferOnboardApplicationReqBody,v:Ref<TransferOnboardApplicationReqBody>)
	export function unRefTransferOnboardApplicationReqBody(v:Ref<TransferOnboardApplicationReqBody>):TransferOnboardApplicationReqBody
	export function emptyUpdateConfigJobRespData():UpdateConfigJobRespData
	export function emptyRefUpdateConfigJobRespData():Ref<UpdateConfigJobRespData>
	export function refOfUpdateConfigJobRespData(x:UpdateConfigJobRespData,v:Ref<UpdateConfigJobRespData>)
	export function unRefUpdateConfigJobRespData(v:Ref<UpdateConfigJobRespData>):UpdateConfigJobRespData
	export function emptyCreateExternalBackgroundCheckReq():CreateExternalBackgroundCheckReq
	export function emptyRefCreateExternalBackgroundCheckReq():Ref<CreateExternalBackgroundCheckReq>
	export function refOfCreateExternalBackgroundCheckReq(x:CreateExternalBackgroundCheckReq,v:Ref<CreateExternalBackgroundCheckReq>)
	export function unRefCreateExternalBackgroundCheckReq(v:Ref<CreateExternalBackgroundCheckReq>):CreateExternalBackgroundCheckReq
	export function emptyJobType():JobType
	export function emptyRefJobType():Ref<JobType>
	export function refOfJobType(x:JobType,v:Ref<JobType>)
	export function unRefJobType(v:Ref<JobType>):JobType
	export function emptyListRoleIterator():ListRoleIterator
	export function emptyRefListRoleIterator():Ref<ListRoleIterator>
	export function refOfListRoleIterator(x:ListRoleIterator,v:Ref<ListRoleIterator>)
	export function unRefListRoleIterator(v:Ref<ListRoleIterator>):ListRoleIterator
	export function emptyAddToFolderTalentRespData():AddToFolderTalentRespData
	export function emptyRefAddToFolderTalentRespData():Ref<AddToFolderTalentRespData>
	export function refOfAddToFolderTalentRespData(x:AddToFolderTalentRespData,v:Ref<AddToFolderTalentRespData>)
	export function unRefAddToFolderTalentRespData(v:Ref<AddToFolderTalentRespData>):AddToFolderTalentRespData
	export function emptyApplicationOfferOnboardProfileAddress():ApplicationOfferOnboardProfileAddress
	export function emptyRefApplicationOfferOnboardProfileAddress():Ref<ApplicationOfferOnboardProfileAddress>
	export function refOfApplicationOfferOnboardProfileAddress(x:ApplicationOfferOnboardProfileAddress,v:Ref<ApplicationOfferOnboardProfileAddress>)
	export function unRefApplicationOfferOnboardProfileAddress(v:Ref<ApplicationOfferOnboardProfileAddress>):ApplicationOfferOnboardProfileAddress
	export function emptyBusinessManagementScope():BusinessManagementScope
	export function emptyRefBusinessManagementScope():Ref<BusinessManagementScope>
	export function refOfBusinessManagementScope(x:BusinessManagementScope,v:Ref<BusinessManagementScope>)
	export function unRefBusinessManagementScope(v:Ref<BusinessManagementScope>):BusinessManagementScope
	export function emptyP2EhrImportTaskImportedV1():P2EhrImportTaskImportedV1
	export function emptyRefP2EhrImportTaskImportedV1():Ref<P2EhrImportTaskImportedV1>
	export function refOfP2EhrImportTaskImportedV1(x:P2EhrImportTaskImportedV1,v:Ref<P2EhrImportTaskImportedV1>)
	export function unRefP2EhrImportTaskImportedV1(v:Ref<P2EhrImportTaskImportedV1>):P2EhrImportTaskImportedV1
	export function emptyUpdateConfigJobReq():UpdateConfigJobReq
	export function emptyRefUpdateConfigJobReq():Ref<UpdateConfigJobReq>
	export function refOfUpdateConfigJobReq(x:UpdateConfigJobReq,v:Ref<UpdateConfigJobReq>)
	export function unRefUpdateConfigJobReq(v:Ref<UpdateConfigJobReq>):UpdateConfigJobReq
	export function emptyBatchUpdateEcoAccountCustomFieldResp():BatchUpdateEcoAccountCustomFieldResp
	export function emptyRefBatchUpdateEcoAccountCustomFieldResp():Ref<BatchUpdateEcoAccountCustomFieldResp>
	export function refOfBatchUpdateEcoAccountCustomFieldResp(x:BatchUpdateEcoAccountCustomFieldResp,v:Ref<BatchUpdateEcoAccountCustomFieldResp>)
	export function unRefBatchUpdateEcoAccountCustomFieldResp(v:Ref<BatchUpdateEcoAccountCustomFieldResp>):BatchUpdateEcoAccountCustomFieldResp
	export function emptyDiData():DiData
	export function emptyRefDiData():Ref<DiData>
	export function refOfDiData(x:DiData,v:Ref<DiData>)
	export function unRefDiData(v:Ref<DiData>):DiData
	export function emptyGetNoteResp():GetNoteResp
	export function emptyRefGetNoteResp():Ref<GetNoteResp>
	export function refOfGetNoteResp(x:GetNoteResp,v:Ref<GetNoteResp>)
	export function unRefGetNoteResp(v:Ref<GetNoteResp>):GetNoteResp
	export function emptyUpdateWebsiteChannelReq():UpdateWebsiteChannelReq
	export function emptyRefUpdateWebsiteChannelReq():Ref<UpdateWebsiteChannelReq>
	export function refOfUpdateWebsiteChannelReq(x:UpdateWebsiteChannelReq,v:Ref<UpdateWebsiteChannelReq>)
	export function unRefUpdateWebsiteChannelReq(v:Ref<UpdateWebsiteChannelReq>):UpdateWebsiteChannelReq
	export function emptyApplicationOfferBasicInfo():ApplicationOfferBasicInfo
	export function emptyRefApplicationOfferBasicInfo():Ref<ApplicationOfferBasicInfo>
	export function refOfApplicationOfferBasicInfo(x:ApplicationOfferBasicInfo,v:Ref<ApplicationOfferBasicInfo>)
	export function unRefApplicationOfferBasicInfo(v:Ref<ApplicationOfferBasicInfo>):ApplicationOfferBasicInfo
	export function emptyMobile():Mobile
	export function emptyRefMobile():Ref<Mobile>
	export function refOfMobile(x:Mobile,v:Ref<Mobile>)
	export function unRefMobile(v:Ref<Mobile>):Mobile
	export function emptyReconciliationReferralAccountResp():ReconciliationReferralAccountResp
	export function emptyRefReconciliationReferralAccountResp():Ref<ReconciliationReferralAccountResp>
	export function refOfReconciliationReferralAccountResp(x:ReconciliationReferralAccountResp,v:Ref<ReconciliationReferralAccountResp>)
	export function unRefReconciliationReferralAccountResp(v:Ref<ReconciliationReferralAccountResp>):ReconciliationReferralAccountResp
	export function emptyListWebsiteChannelReq():ListWebsiteChannelReq
	export function emptyRefListWebsiteChannelReq():Ref<ListWebsiteChannelReq>
	export function refOfListWebsiteChannelReq(x:ListWebsiteChannelReq,v:Ref<ListWebsiteChannelReq>)
	export function unRefListWebsiteChannelReq(v:Ref<ListWebsiteChannelReq>):ListWebsiteChannelReq
	export function emptyMoveTalentTalentPoolResp():MoveTalentTalentPoolResp
	export function emptyRefMoveTalentTalentPoolResp():Ref<MoveTalentTalentPoolResp>
	export function refOfMoveTalentTalentPoolResp(x:MoveTalentTalentPoolResp,v:Ref<MoveTalentTalentPoolResp>)
	export function unRefMoveTalentTalentPoolResp(v:Ref<MoveTalentTalentPoolResp>):MoveTalentTalentPoolResp
	export function emptyCreateWebsiteChannelReqBody():CreateWebsiteChannelReqBody
	export function emptyRefCreateWebsiteChannelReqBody():Ref<CreateWebsiteChannelReqBody>
	export function refOfCreateWebsiteChannelReqBody(x:CreateWebsiteChannelReqBody,v:Ref<CreateWebsiteChannelReqBody>)
	export function unRefCreateWebsiteChannelReqBody(v:Ref<CreateWebsiteChannelReqBody>):CreateWebsiteChannelReqBody
	export function emptyListTerminationReasonReq():ListTerminationReasonReq
	export function emptyRefListTerminationReasonReq():Ref<ListTerminationReasonReq>
	export function refOfListTerminationReasonReq(x:ListTerminationReasonReq,v:Ref<ListTerminationReasonReq>)
	export function unRefListTerminationReasonReq(v:Ref<ListTerminationReasonReq>):ListTerminationReasonReq
	export function emptyCreateEcoExamPaperResp():CreateEcoExamPaperResp
	export function emptyRefCreateEcoExamPaperResp():Ref<CreateEcoExamPaperResp>
	export function refOfCreateEcoExamPaperResp(x:CreateEcoExamPaperResp,v:Ref<CreateEcoExamPaperResp>)
	export function unRefCreateEcoExamPaperResp(v:Ref<CreateEcoExamPaperResp>):CreateEcoExamPaperResp
	export function emptyCreateReferralAccountRespData():CreateReferralAccountRespData
	export function emptyRefCreateReferralAccountRespData():Ref<CreateReferralAccountRespData>
	export function refOfCreateReferralAccountRespData(x:CreateReferralAccountRespData,v:Ref<CreateReferralAccountRespData>)
	export function unRefCreateReferralAccountRespData(v:Ref<CreateReferralAccountRespData>):CreateReferralAccountRespData
	export function emptyPermissionScopeRule():PermissionScopeRule
	export function emptyRefPermissionScopeRule():Ref<PermissionScopeRule>
	export function refOfPermissionScopeRule(x:PermissionScopeRule,v:Ref<PermissionScopeRule>)
	export function unRefPermissionScopeRule(v:Ref<PermissionScopeRule>):PermissionScopeRule
	export function emptyRecruiterJobRespData():RecruiterJobRespData
	export function emptyRefRecruiterJobRespData():Ref<RecruiterJobRespData>
	export function refOfRecruiterJobRespData(x:RecruiterJobRespData,v:Ref<RecruiterJobRespData>)
	export function unRefRecruiterJobRespData(v:Ref<RecruiterJobRespData>):RecruiterJobRespData
	export function emptyListOfferReq():ListOfferReq
	export function emptyRefListOfferReq():Ref<ListOfferReq>
	export function refOfListOfferReq(x:ListOfferReq,v:Ref<ListOfferReq>)
	export function unRefListOfferReq(v:Ref<ListOfferReq>):ListOfferReq
	export function emptyEcoExamCreateEventCandidateInfo():EcoExamCreateEventCandidateInfo
	export function emptyRefEcoExamCreateEventCandidateInfo():Ref<EcoExamCreateEventCandidateInfo>
	export function refOfEcoExamCreateEventCandidateInfo(x:EcoExamCreateEventCandidateInfo,v:Ref<EcoExamCreateEventCandidateInfo>)
	export function unRefEcoExamCreateEventCandidateInfo(v:Ref<EcoExamCreateEventCandidateInfo>):EcoExamCreateEventCandidateInfo
	export function emptyCombinedCreateJobRespData():CombinedCreateJobRespData
	export function emptyRefCombinedCreateJobRespData():Ref<CombinedCreateJobRespData>
	export function refOfCombinedCreateJobRespData(x:CombinedCreateJobRespData,v:Ref<CombinedCreateJobRespData>)
	export function unRefCombinedCreateJobRespData(v:Ref<CombinedCreateJobRespData>):CombinedCreateJobRespData
	export function emptyListNoteRespData():ListNoteRespData
	export function emptyRefListNoteRespData():Ref<ListNoteRespData>
	export function refOfListNoteRespData(x:ListNoteRespData,v:Ref<ListNoteRespData>)
	export function unRefListNoteRespData(v:Ref<ListNoteRespData>):ListNoteRespData
	export function emptyCreateApplicationResp():CreateApplicationResp
	export function emptyRefCreateApplicationResp():Ref<CreateApplicationResp>
	export function refOfCreateApplicationResp(x:CreateApplicationResp,v:Ref<CreateApplicationResp>)
	export function unRefCreateApplicationResp(v:Ref<CreateApplicationResp>):CreateApplicationResp
	export function emptyWebsiteJobPostCustomizedData():WebsiteJobPostCustomizedData
	export function emptyRefWebsiteJobPostCustomizedData():Ref<WebsiteJobPostCustomizedData>
	export function refOfWebsiteJobPostCustomizedData(x:WebsiteJobPostCustomizedData,v:Ref<WebsiteJobPostCustomizedData>)
	export function unRefWebsiteJobPostCustomizedData(v:Ref<WebsiteJobPostCustomizedData>):WebsiteJobPostCustomizedData
	export function emptySiteResumeIdentification():SiteResumeIdentification
	export function emptyRefSiteResumeIdentification():Ref<SiteResumeIdentification>
	export function refOfSiteResumeIdentification(x:SiteResumeIdentification,v:Ref<SiteResumeIdentification>)
	export function unRefSiteResumeIdentification(v:Ref<SiteResumeIdentification>):SiteResumeIdentification
	export function emptyTripartiteAgreementInfo():TripartiteAgreementInfo
	export function emptyRefTripartiteAgreementInfo():Ref<TripartiteAgreementInfo>
	export function refOfTripartiteAgreementInfo(x:TripartiteAgreementInfo,v:Ref<TripartiteAgreementInfo>)
	export function unRefTripartiteAgreementInfo(v:Ref<TripartiteAgreementInfo>):TripartiteAgreementInfo
	export function emptyUpdateWebsiteChannelRespData():UpdateWebsiteChannelRespData
	export function emptyRefUpdateWebsiteChannelRespData():Ref<UpdateWebsiteChannelRespData>
	export function refOfUpdateWebsiteChannelRespData(x:UpdateWebsiteChannelRespData,v:Ref<UpdateWebsiteChannelRespData>)
	export function unRefUpdateWebsiteChannelRespData(v:Ref<UpdateWebsiteChannelRespData>):UpdateWebsiteChannelRespData
	export function emptySignatureAttachment():SignatureAttachment
	export function emptyRefSignatureAttachment():Ref<SignatureAttachment>
	export function refOfSignatureAttachment(x:SignatureAttachment,v:Ref<SignatureAttachment>)
	export function unRefSignatureAttachment(v:Ref<SignatureAttachment>):SignatureAttachment
	export function emptyWebsiteDeliveryBasicInfo():WebsiteDeliveryBasicInfo
	export function emptyRefWebsiteDeliveryBasicInfo():Ref<WebsiteDeliveryBasicInfo>
	export function refOfWebsiteDeliveryBasicInfo(x:WebsiteDeliveryBasicInfo,v:Ref<WebsiteDeliveryBasicInfo>)
	export function unRefWebsiteDeliveryBasicInfo(v:Ref<WebsiteDeliveryBasicInfo>):WebsiteDeliveryBasicInfo
	export function emptyBackgroundCheckCustomFieldDataValue():BackgroundCheckCustomFieldDataValue
	export function emptyRefBackgroundCheckCustomFieldDataValue():Ref<BackgroundCheckCustomFieldDataValue>
	export function refOfBackgroundCheckCustomFieldDataValue(x:BackgroundCheckCustomFieldDataValue,v:Ref<BackgroundCheckCustomFieldDataValue>)
	export function unRefBackgroundCheckCustomFieldDataValue(v:Ref<BackgroundCheckCustomFieldDataValue>):BackgroundCheckCustomFieldDataValue
	export function emptyCreateWebsiteSiteUserReq():CreateWebsiteSiteUserReq
	export function emptyRefCreateWebsiteSiteUserReq():Ref<CreateWebsiteSiteUserReq>
	export function refOfCreateWebsiteSiteUserReq(x:CreateWebsiteSiteUserReq,v:Ref<CreateWebsiteSiteUserReq>)
	export function unRefCreateWebsiteSiteUserReq(v:Ref<CreateWebsiteSiteUserReq>):CreateWebsiteSiteUserReq
	export function emptyUpdateWebsiteChannelResp():UpdateWebsiteChannelResp
	export function emptyRefUpdateWebsiteChannelResp():Ref<UpdateWebsiteChannelResp>
	export function refOfUpdateWebsiteChannelResp(x:UpdateWebsiteChannelResp,v:Ref<UpdateWebsiteChannelResp>)
	export function unRefUpdateWebsiteChannelResp(v:Ref<UpdateWebsiteChannelResp>):UpdateWebsiteChannelResp
	export function emptyListWebsiteRespData():ListWebsiteRespData
	export function emptyRefListWebsiteRespData():Ref<ListWebsiteRespData>
	export function refOfListWebsiteRespData(x:ListWebsiteRespData,v:Ref<ListWebsiteRespData>)
	export function unRefListWebsiteRespData(v:Ref<ListWebsiteRespData>):ListWebsiteRespData
	export function emptyTalentCombinedCareerInfo():TalentCombinedCareerInfo
	export function emptyRefTalentCombinedCareerInfo():Ref<TalentCombinedCareerInfo>
	export function refOfTalentCombinedCareerInfo(x:TalentCombinedCareerInfo,v:Ref<TalentCombinedCareerInfo>)
	export function unRefTalentCombinedCareerInfo(v:Ref<TalentCombinedCareerInfo>):TalentCombinedCareerInfo
	export function emptySearchDiversityInclusionReq():SearchDiversityInclusionReq
	export function emptyRefSearchDiversityInclusionReq():Ref<SearchDiversityInclusionReq>
	export function refOfSearchDiversityInclusionReq(x:SearchDiversityInclusionReq,v:Ref<SearchDiversityInclusionReq>)
	export function unRefSearchDiversityInclusionReq(v:Ref<SearchDiversityInclusionReq>):SearchDiversityInclusionReq
	export function emptyBaseCountry():BaseCountry
	export function emptyRefBaseCountry():Ref<BaseCountry>
	export function refOfBaseCountry(x:BaseCountry,v:Ref<BaseCountry>)
	export function unRefBaseCountry(v:Ref<BaseCountry>):BaseCountry
	export function emptyCreateWebsiteChannelResp():CreateWebsiteChannelResp
	export function emptyRefCreateWebsiteChannelResp():Ref<CreateWebsiteChannelResp>
	export function refOfCreateWebsiteChannelResp(x:CreateWebsiteChannelResp,v:Ref<CreateWebsiteChannelResp>)
	export function unRefCreateWebsiteChannelResp(v:Ref<CreateWebsiteChannelResp>):CreateWebsiteChannelResp
	export function emptyRangeFilter():RangeFilter
	export function emptyRefRangeFilter():Ref<RangeFilter>
	export function refOfRangeFilter(x:RangeFilter,v:Ref<RangeFilter>)
	export function unRefRangeFilter(v:Ref<RangeFilter>):RangeFilter
	export function emptyInternshipInfo():InternshipInfo
	export function emptyRefInternshipInfo():Ref<InternshipInfo>
	export function refOfInternshipInfo(x:InternshipInfo,v:Ref<InternshipInfo>)
	export function unRefInternshipInfo(v:Ref<InternshipInfo>):InternshipInfo
	export function emptyListEvaluationReq():ListEvaluationReq
	export function emptyRefListEvaluationReq():Ref<ListEvaluationReq>
	export function refOfListEvaluationReq(x:ListEvaluationReq,v:Ref<ListEvaluationReq>)
	export function unRefListEvaluationReq(v:Ref<ListEvaluationReq>):ListEvaluationReq
	export function emptyPatchNoteReqBody():PatchNoteReqBody
	export function emptyRefPatchNoteReqBody():Ref<PatchNoteReqBody>
	export function refOfPatchNoteReqBody(x:PatchNoteReqBody,v:Ref<PatchNoteReqBody>)
	export function unRefPatchNoteReqBody(v:Ref<PatchNoteReqBody>):PatchNoteReqBody
	export function emptyQueryLocationReqBody():QueryLocationReqBody
	export function emptyRefQueryLocationReqBody():Ref<QueryLocationReqBody>
	export function refOfQueryLocationReqBody(x:QueryLocationReqBody,v:Ref<QueryLocationReqBody>)
	export function unRefQueryLocationReqBody(v:Ref<QueryLocationReqBody>):QueryLocationReqBody
	export function emptyCreateReferralAccountReq():CreateReferralAccountReq
	export function emptyRefCreateReferralAccountReq():Ref<CreateReferralAccountReq>
	export function refOfCreateReferralAccountReq(x:CreateReferralAccountReq,v:Ref<CreateReferralAccountReq>)
	export function unRefCreateReferralAccountReq(v:Ref<CreateReferralAccountReq>):CreateReferralAccountReq
	export function emptyApplicationResumeSource():ApplicationResumeSource
	export function emptyRefApplicationResumeSource():Ref<ApplicationResumeSource>
	export function refOfApplicationResumeSource(x:ApplicationResumeSource,v:Ref<ApplicationResumeSource>)
	export function unRefApplicationResumeSource(v:Ref<ApplicationResumeSource>):ApplicationResumeSource
	export function emptyWebsiteDeliveryResume():WebsiteDeliveryResume
	export function emptyRefWebsiteDeliveryResume():Ref<WebsiteDeliveryResume>
	export function refOfWebsiteDeliveryResume(x:WebsiteDeliveryResume,v:Ref<WebsiteDeliveryResume>)
	export function unRefWebsiteDeliveryResume(v:Ref<WebsiteDeliveryResume>):WebsiteDeliveryResume
	export function emptyGetReferralWebsiteJobPostRespData():GetReferralWebsiteJobPostRespData
	export function emptyRefGetReferralWebsiteJobPostRespData():Ref<GetReferralWebsiteJobPostRespData>
	export function refOfGetReferralWebsiteJobPostRespData(x:GetReferralWebsiteJobPostRespData,v:Ref<GetReferralWebsiteJobPostRespData>)
	export function unRefGetReferralWebsiteJobPostRespData(v:Ref<GetReferralWebsiteJobPostRespData>):GetReferralWebsiteJobPostRespData
	export function emptyOfferSchemaChild():OfferSchemaChild
	export function emptyRefOfferSchemaChild():Ref<OfferSchemaChild>
	export function refOfOfferSchemaChild(x:OfferSchemaChild,v:Ref<OfferSchemaChild>)
	export function unRefOfferSchemaChild(v:Ref<OfferSchemaChild>):OfferSchemaChild
	export function emptyDeactivateReferralAccountResp():DeactivateReferralAccountResp
	export function emptyRefDeactivateReferralAccountResp():Ref<DeactivateReferralAccountResp>
	export function refOfDeactivateReferralAccountResp(x:DeactivateReferralAccountResp,v:Ref<DeactivateReferralAccountResp>)
	export function unRefDeactivateReferralAccountResp(v:Ref<DeactivateReferralAccountResp>):DeactivateReferralAccountResp
	export function emptyAddToFolderTalentReq():AddToFolderTalentReq
	export function emptyRefAddToFolderTalentReq():Ref<AddToFolderTalentReq>
	export function refOfAddToFolderTalentReq(x:AddToFolderTalentReq,v:Ref<AddToFolderTalentReq>)
	export function unRefAddToFolderTalentReq(v:Ref<AddToFolderTalentReq>):AddToFolderTalentReq
	export function emptySearchJobPublishRecordResp():SearchJobPublishRecordResp
	export function emptyRefSearchJobPublishRecordResp():Ref<SearchJobPublishRecordResp>
	export function refOfSearchJobPublishRecordResp(x:SearchJobPublishRecordResp,v:Ref<SearchJobPublishRecordResp>)
	export function unRefSearchJobPublishRecordResp(v:Ref<SearchJobPublishRecordResp>):SearchJobPublishRecordResp
	export function emptyEcoAccountCustomFieldData():EcoAccountCustomFieldData
	export function emptyRefEcoAccountCustomFieldData():Ref<EcoAccountCustomFieldData>
	export function refOfEcoAccountCustomFieldData(x:EcoAccountCustomFieldData,v:Ref<EcoAccountCustomFieldData>)
	export function unRefEcoAccountCustomFieldData(v:Ref<EcoAccountCustomFieldData>):EcoAccountCustomFieldData
	export function emptyListByIdJobRequirementReqBody():ListByIdJobRequirementReqBody
	export function emptyRefListByIdJobRequirementReqBody():Ref<ListByIdJobRequirementReqBody>
	export function refOfListByIdJobRequirementReqBody(x:ListByIdJobRequirementReqBody,v:Ref<ListByIdJobRequirementReqBody>)
	export function unRefListByIdJobRequirementReqBody(v:Ref<ListByIdJobRequirementReqBody>):ListByIdJobRequirementReqBody
	export function emptyAppliOfferOnboardProfileAdd():AppliOfferOnboardProfileAdd
	export function emptyRefAppliOfferOnboardProfileAdd():Ref<AppliOfferOnboardProfileAdd>
	export function refOfAppliOfferOnboardProfileAdd(x:AppliOfferOnboardProfileAdd,v:Ref<AppliOfferOnboardProfileAdd>)
	export function unRefAppliOfferOnboardProfileAdd(v:Ref<AppliOfferOnboardProfileAdd>):AppliOfferOnboardProfileAdd
	export function emptyCancelEcoBackgroundCheckReqBody():CancelEcoBackgroundCheckReqBody
	export function emptyRefCancelEcoBackgroundCheckReqBody():Ref<CancelEcoBackgroundCheckReqBody>
	export function refOfCancelEcoBackgroundCheckReqBody(x:CancelEcoBackgroundCheckReqBody,v:Ref<CancelEcoBackgroundCheckReqBody>)
	export function unRefCancelEcoBackgroundCheckReqBody(v:Ref<CancelEcoBackgroundCheckReqBody>):CancelEcoBackgroundCheckReqBody
	export function emptyCreateNoteResp():CreateNoteResp
	export function emptyRefCreateNoteResp():Ref<CreateNoteResp>
	export function refOfCreateNoteResp(x:CreateNoteResp,v:Ref<CreateNoteResp>)
	export function unRefCreateNoteResp(v:Ref<CreateNoteResp>):CreateNoteResp
	export function emptyEcoExamResultReport():EcoExamResultReport
	export function emptyRefEcoExamResultReport():Ref<EcoExamResultReport>
	export function refOfEcoExamResultReport(x:EcoExamResultReport,v:Ref<EcoExamResultReport>)
	export function unRefEcoExamResultReport(v:Ref<EcoExamResultReport>):EcoExamResultReport
	export function emptyWebsiteDeliveryEducation():WebsiteDeliveryEducation
	export function emptyRefWebsiteDeliveryEducation():Ref<WebsiteDeliveryEducation>
	export function refOfWebsiteDeliveryEducation(x:WebsiteDeliveryEducation,v:Ref<WebsiteDeliveryEducation>)
	export function unRefWebsiteDeliveryEducation(v:Ref<WebsiteDeliveryEducation>):WebsiteDeliveryEducation
	export function emptyGetInterviewRecordRespData():GetInterviewRecordRespData
	export function emptyRefGetInterviewRecordRespData():Ref<GetInterviewRecordRespData>
	export function refOfGetInterviewRecordRespData(x:GetInterviewRecordRespData,v:Ref<GetInterviewRecordRespData>)
	export function unRefGetInterviewRecordRespData(v:Ref<GetInterviewRecordRespData>):GetInterviewRecordRespData
	export function emptyListRegistrationSchemaIterator():ListRegistrationSchemaIterator
	export function emptyRefListRegistrationSchemaIterator():Ref<ListRegistrationSchemaIterator>
	export function refOfListRegistrationSchemaIterator(x:ListRegistrationSchemaIterator,v:Ref<ListRegistrationSchemaIterator>)
	export function unRefListRegistrationSchemaIterator(v:Ref<ListRegistrationSchemaIterator>):ListRegistrationSchemaIterator
	export function emptyListResumeSourceReq():ListResumeSourceReq
	export function emptyRefListResumeSourceReq():Ref<ListResumeSourceReq>
	export function refOfListResumeSourceReq(x:ListResumeSourceReq,v:Ref<ListResumeSourceReq>)
	export function unRefListResumeSourceReq(v:Ref<ListResumeSourceReq>):ListResumeSourceReq
	export function emptyGetAgencyRespData():GetAgencyRespData
	export function emptyRefGetAgencyRespData():Ref<GetAgencyRespData>
	export function refOfGetAgencyRespData(x:GetAgencyRespData,v:Ref<GetAgencyRespData>)
	export function unRefGetAgencyRespData(v:Ref<GetAgencyRespData>):GetAgencyRespData
	export function emptyOfferApplyFormInfo():OfferApplyFormInfo
	export function emptyRefOfferApplyFormInfo():Ref<OfferApplyFormInfo>
	export function refOfOfferApplyFormInfo(x:OfferApplyFormInfo,v:Ref<OfferApplyFormInfo>)
	export function unRefOfferApplyFormInfo(v:Ref<OfferApplyFormInfo>):OfferApplyFormInfo
	export function emptyListJobRequirementSchemaReq():ListJobRequirementSchemaReq
	export function emptyRefListJobRequirementSchemaReq():Ref<ListJobRequirementSchemaReq>
	export function refOfListJobRequirementSchemaReq(x:ListJobRequirementSchemaReq,v:Ref<ListJobRequirementSchemaReq>)
	export function unRefListJobRequirementSchemaReq(v:Ref<ListJobRequirementSchemaReq>):ListJobRequirementSchemaReq
	export function emptyCreateEcoAccountCustomFieldResp():CreateEcoAccountCustomFieldResp
	export function emptyRefCreateEcoAccountCustomFieldResp():Ref<CreateEcoAccountCustomFieldResp>
	export function refOfCreateEcoAccountCustomFieldResp(x:CreateEcoAccountCustomFieldResp,v:Ref<CreateEcoAccountCustomFieldResp>)
	export function unRefCreateEcoAccountCustomFieldResp(v:Ref<CreateEcoAccountCustomFieldResp>):CreateEcoAccountCustomFieldResp
	export function emptyCreateWebsiteSiteUserRespData():CreateWebsiteSiteUserRespData
	export function emptyRefCreateWebsiteSiteUserRespData():Ref<CreateWebsiteSiteUserRespData>
	export function refOfCreateWebsiteSiteUserRespData(x:CreateWebsiteSiteUserRespData,v:Ref<CreateWebsiteSiteUserRespData>)
	export function unRefCreateWebsiteSiteUserRespData(v:Ref<CreateWebsiteSiteUserRespData>):CreateWebsiteSiteUserRespData
	export function emptyJobRecruitmentType():JobRecruitmentType
	export function emptyRefJobRecruitmentType():Ref<JobRecruitmentType>
	export function refOfJobRecruitmentType(x:JobRecruitmentType,v:Ref<JobRecruitmentType>)
	export function unRefJobRecruitmentType(v:Ref<JobRecruitmentType>):JobRecruitmentType
	export function emptyOfferApplyFormObjectInfo():OfferApplyFormObjectInfo
	export function emptyRefOfferApplyFormObjectInfo():Ref<OfferApplyFormObjectInfo>
	export function refOfOfferApplyFormObjectInfo(x:OfferApplyFormObjectInfo,v:Ref<OfferApplyFormObjectInfo>)
	export function unRefOfferApplyFormObjectInfo(v:Ref<OfferApplyFormObjectInfo>):OfferApplyFormObjectInfo
	export function emptyListSubjectReq():ListSubjectReq
	export function emptyRefListSubjectReq():Ref<ListSubjectReq>
	export function refOfListSubjectReq(x:ListSubjectReq,v:Ref<ListSubjectReq>)
	export function unRefListSubjectReq(v:Ref<ListSubjectReq>):ListSubjectReq
	export function emptyRole():Role
	export function emptyRefRole():Ref<Role>
	export function refOfRole(x:Role,v:Ref<Role>)
	export function unRefRole(v:Ref<Role>):Role
	export function emptyTalentSnsInfo():TalentSnsInfo
	export function emptyRefTalentSnsInfo():Ref<TalentSnsInfo>
	export function refOfTalentSnsInfo(x:TalentSnsInfo,v:Ref<TalentSnsInfo>)
	export function unRefTalentSnsInfo(v:Ref<TalentSnsInfo>):TalentSnsInfo
	export function emptyGetOfferSchemaResp():GetOfferSchemaResp
	export function emptyRefGetOfferSchemaResp():Ref<GetOfferSchemaResp>
	export function refOfGetOfferSchemaResp(x:GetOfferSchemaResp,v:Ref<GetOfferSchemaResp>)
	export function unRefGetOfferSchemaResp(v:Ref<GetOfferSchemaResp>):GetOfferSchemaResp
	export function emptyListReferralWebsiteJobPostResp():ListReferralWebsiteJobPostResp
	export function emptyRefListReferralWebsiteJobPostResp():Ref<ListReferralWebsiteJobPostResp>
	export function refOfListReferralWebsiteJobPostResp(x:ListReferralWebsiteJobPostResp,v:Ref<ListReferralWebsiteJobPostResp>)
	export function unRefListReferralWebsiteJobPostResp(v:Ref<ListReferralWebsiteJobPostResp>):ListReferralWebsiteJobPostResp
	export function emptyListTripartiteAgreementRespData():ListTripartiteAgreementRespData
	export function emptyRefListTripartiteAgreementRespData():Ref<ListTripartiteAgreementRespData>
	export function refOfListTripartiteAgreementRespData(x:ListTripartiteAgreementRespData,v:Ref<ListTripartiteAgreementRespData>)
	export function unRefListTripartiteAgreementRespData(v:Ref<ListTripartiteAgreementRespData>):ListTripartiteAgreementRespData
	export function emptyListInterviewFeedbackFormRespData():ListInterviewFeedbackFormRespData
	export function emptyRefListInterviewFeedbackFormRespData():Ref<ListInterviewFeedbackFormRespData>
	export function refOfListInterviewFeedbackFormRespData(x:ListInterviewFeedbackFormRespData,v:Ref<ListInterviewFeedbackFormRespData>)
	export function unRefListInterviewFeedbackFormRespData(v:Ref<ListInterviewFeedbackFormRespData>):ListInterviewFeedbackFormRespData
	export function emptyCreateByAttachmentWebsiteDeliveryRespData():CreateByAttachmentWebsiteDeliveryRespData
	export function emptyRefCreateByAttachmentWebsiteDeliveryRespData():Ref<CreateByAttachmentWebsiteDeliveryRespData>
	export function refOfCreateByAttachmentWebsiteDeliveryRespData(x:CreateByAttachmentWebsiteDeliveryRespData,v:Ref<CreateByAttachmentWebsiteDeliveryRespData>)
	export function unRefCreateByAttachmentWebsiteDeliveryRespData(v:Ref<CreateByAttachmentWebsiteDeliveryRespData>):CreateByAttachmentWebsiteDeliveryRespData
	export function emptyListExternalApplicationResp():ListExternalApplicationResp
	export function emptyRefListExternalApplicationResp():Ref<ListExternalApplicationResp>
	export function refOfListExternalApplicationResp(x:ListExternalApplicationResp,v:Ref<ListExternalApplicationResp>)
	export function unRefListExternalApplicationResp(v:Ref<ListExternalApplicationResp>):ListExternalApplicationResp
	export function emptyGetApplicationResp():GetApplicationResp
	export function emptyRefGetApplicationResp():Ref<GetApplicationResp>
	export function refOfGetApplicationResp(x:GetApplicationResp,v:Ref<GetApplicationResp>)
	export function unRefGetApplicationResp(v:Ref<GetApplicationResp>):GetApplicationResp
	export function emptySearchTestResp():SearchTestResp
	export function emptyRefSearchTestResp():Ref<SearchTestResp>
	export function refOfSearchTestResp(x:SearchTestResp,v:Ref<SearchTestResp>)
	export function unRefSearchTestResp(v:Ref<SearchTestResp>):SearchTestResp
	export function emptyWithdrawReferralAccountRespData():WithdrawReferralAccountRespData
	export function emptyRefWithdrawReferralAccountRespData():Ref<WithdrawReferralAccountRespData>
	export function refOfWithdrawReferralAccountRespData(x:WithdrawReferralAccountRespData,v:Ref<WithdrawReferralAccountRespData>)
	export function unRefWithdrawReferralAccountRespData(v:Ref<WithdrawReferralAccountRespData>):WithdrawReferralAccountRespData
	export function emptyGetJobReq():GetJobReq
	export function emptyRefGetJobReq():Ref<GetJobReq>
	export function refOfGetJobReq(x:GetJobReq,v:Ref<GetJobReq>)
	export function unRefGetJobReq(v:Ref<GetJobReq>):GetJobReq
	export function emptyJobCategory():JobCategory
	export function emptyRefJobCategory():Ref<JobCategory>
	export function refOfJobCategory(x:JobCategory,v:Ref<JobCategory>)
	export function unRefJobCategory(v:Ref<JobCategory>):JobCategory
	export function emptyRecruitmentType():RecruitmentType
	export function emptyRefRecruitmentType():Ref<RecruitmentType>
	export function refOfRecruitmentType(x:RecruitmentType,v:Ref<RecruitmentType>)
	export function unRefRecruitmentType(v:Ref<RecruitmentType>):RecruitmentType
	export function emptyAttachmentV2():AttachmentV2
	export function emptyRefAttachmentV2():Ref<AttachmentV2>
	export function refOfAttachmentV2(x:AttachmentV2,v:Ref<AttachmentV2>)
	export function unRefAttachmentV2(v:Ref<AttachmentV2>):AttachmentV2
	export function emptyCreateTalentExternalInfoReq():CreateTalentExternalInfoReq
	export function emptyRefCreateTalentExternalInfoReq():Ref<CreateTalentExternalInfoReq>
	export function refOfCreateTalentExternalInfoReq(x:CreateTalentExternalInfoReq,v:Ref<CreateTalentExternalInfoReq>)
	export function unRefCreateTalentExternalInfoReq(v:Ref<CreateTalentExternalInfoReq>):CreateTalentExternalInfoReq
	export function emptyCreateByResumeWebsiteDeliveryRespData():CreateByResumeWebsiteDeliveryRespData
	export function emptyRefCreateByResumeWebsiteDeliveryRespData():Ref<CreateByResumeWebsiteDeliveryRespData>
	export function refOfCreateByResumeWebsiteDeliveryRespData(x:CreateByResumeWebsiteDeliveryRespData,v:Ref<CreateByResumeWebsiteDeliveryRespData>)
	export function unRefCreateByResumeWebsiteDeliveryRespData(v:Ref<CreateByResumeWebsiteDeliveryRespData>):CreateByResumeWebsiteDeliveryRespData
	export function emptyEcoBackgroundCheckPackageAdditionalItem():EcoBackgroundCheckPackageAdditionalItem
	export function emptyRefEcoBackgroundCheckPackageAdditionalItem():Ref<EcoBackgroundCheckPackageAdditionalItem>
	export function refOfEcoBackgroundCheckPackageAdditionalItem(x:EcoBackgroundCheckPackageAdditionalItem,v:Ref<EcoBackgroundCheckPackageAdditionalItem>)
	export function unRefEcoBackgroundCheckPackageAdditionalItem(v:Ref<EcoBackgroundCheckPackageAdditionalItem>):EcoBackgroundCheckPackageAdditionalItem
	export function emptyCreateWebsiteChannelReq():CreateWebsiteChannelReq
	export function emptyRefCreateWebsiteChannelReq():Ref<CreateWebsiteChannelReq>
	export function refOfCreateWebsiteChannelReq(x:CreateWebsiteChannelReq,v:Ref<CreateWebsiteChannelReq>)
	export function unRefCreateWebsiteChannelReq(v:Ref<CreateWebsiteChannelReq>):CreateWebsiteChannelReq
	export function emptyGetByApplicationReferralReq():GetByApplicationReferralReq
	export function emptyRefGetByApplicationReferralReq():Ref<GetByApplicationReferralReq>
	export function refOfGetByApplicationReferralReq(x:GetByApplicationReferralReq,v:Ref<GetByApplicationReferralReq>)
	export function unRefGetByApplicationReferralReq(v:Ref<GetByApplicationReferralReq>):GetByApplicationReferralReq
	export function emptyListExternalApplicationIterator():ListExternalApplicationIterator
	export function emptyRefListExternalApplicationIterator():Ref<ListExternalApplicationIterator>
	export function refOfListExternalApplicationIterator(x:ListExternalApplicationIterator,v:Ref<ListExternalApplicationIterator>)
	export function unRefListExternalApplicationIterator(v:Ref<ListExternalApplicationIterator>):ListExternalApplicationIterator
	export function emptySearchWebsiteJobPostReqBody():SearchWebsiteJobPostReqBody
	export function emptyRefSearchWebsiteJobPostReqBody():Ref<SearchWebsiteJobPostReqBody>
	export function refOfSearchWebsiteJobPostReqBody(x:SearchWebsiteJobPostReqBody,v:Ref<SearchWebsiteJobPostReqBody>)
	export function unRefSearchWebsiteJobPostReqBody(v:Ref<SearchWebsiteJobPostReqBody>):SearchWebsiteJobPostReqBody
	export function emptyProtectSearchAgencyResp():ProtectSearchAgencyResp
	export function emptyRefProtectSearchAgencyResp():Ref<ProtectSearchAgencyResp>
	export function refOfProtectSearchAgencyResp(x:ProtectSearchAgencyResp,v:Ref<ProtectSearchAgencyResp>)
	export function unRefProtectSearchAgencyResp(v:Ref<ProtectSearchAgencyResp>):ProtectSearchAgencyResp
	export function emptySearchJobPublishRecordReqBody():SearchJobPublishRecordReqBody
	export function emptyRefSearchJobPublishRecordReqBody():Ref<SearchJobPublishRecordReqBody>
	export function refOfSearchJobPublishRecordReqBody(x:SearchJobPublishRecordReqBody,v:Ref<SearchJobPublishRecordReqBody>)
	export function unRefSearchJobPublishRecordReqBody(v:Ref<SearchJobPublishRecordReqBody>):SearchJobPublishRecordReqBody
	export function emptyCreateExamReqBody():CreateExamReqBody
	export function emptyRefCreateExamReqBody():Ref<CreateExamReqBody>
	export function refOfCreateExamReqBody(x:CreateExamReqBody,v:Ref<CreateExamReqBody>)
	export function unRefCreateExamReqBody(v:Ref<CreateExamReqBody>):CreateExamReqBody
	export function emptyMoveTalentTalentPoolReqBody():MoveTalentTalentPoolReqBody
	export function emptyRefMoveTalentTalentPoolReqBody():Ref<MoveTalentTalentPoolReqBody>
	export function refOfMoveTalentTalentPoolReqBody(x:MoveTalentTalentPoolReqBody,v:Ref<MoveTalentTalentPoolReqBody>)
	export function unRefMoveTalentTalentPoolReqBody(v:Ref<MoveTalentTalentPoolReqBody>):MoveTalentTalentPoolReqBody
	export function emptyTalentCombinedSnsInfo():TalentCombinedSnsInfo
	export function emptyRefTalentCombinedSnsInfo():Ref<TalentCombinedSnsInfo>
	export function refOfTalentCombinedSnsInfo(x:TalentCombinedSnsInfo,v:Ref<TalentCombinedSnsInfo>)
	export function unRefTalentCombinedSnsInfo(v:Ref<TalentCombinedSnsInfo>):TalentCombinedSnsInfo
	export function emptyCreateEcoBackgroundCheckPackageReq():CreateEcoBackgroundCheckPackageReq
	export function emptyRefCreateEcoBackgroundCheckPackageReq():Ref<CreateEcoBackgroundCheckPackageReq>
	export function refOfCreateEcoBackgroundCheckPackageReq(x:CreateEcoBackgroundCheckPackageReq,v:Ref<CreateEcoBackgroundCheckPackageReq>)
	export function unRefCreateEcoBackgroundCheckPackageReq(v:Ref<CreateEcoBackgroundCheckPackageReq>):CreateEcoBackgroundCheckPackageReq
	export function emptyP2EcoAccountCreatedV1Data():P2EcoAccountCreatedV1Data
	export function emptyRefP2EcoAccountCreatedV1Data():Ref<P2EcoAccountCreatedV1Data>
	export function refOfP2EcoAccountCreatedV1Data(x:P2EcoAccountCreatedV1Data,v:Ref<P2EcoAccountCreatedV1Data>)
	export function unRefP2EcoAccountCreatedV1Data(v:Ref<P2EcoAccountCreatedV1Data>):P2EcoAccountCreatedV1Data
	export function emptyInterview():Interview
	export function emptyRefInterview():Ref<Interview>
	export function refOfInterview(x:Interview,v:Ref<Interview>)
	export function unRefInterview(v:Ref<Interview>):Interview
	export function emptyTestSchedule():TestSchedule
	export function emptyRefTestSchedule():Ref<TestSchedule>
	export function refOfTestSchedule(x:TestSchedule,v:Ref<TestSchedule>)
	export function unRefTestSchedule(v:Ref<TestSchedule>):TestSchedule
	export function emptyUpdateOfferResp():UpdateOfferResp
	export function emptyRefUpdateOfferResp():Ref<UpdateOfferResp>
	export function refOfUpdateOfferResp(x:UpdateOfferResp,v:Ref<UpdateOfferResp>)
	export function unRefUpdateOfferResp(v:Ref<UpdateOfferResp>):UpdateOfferResp
	export function emptyCombinedUpdateTalentRespData():CombinedUpdateTalentRespData
	export function emptyRefCombinedUpdateTalentRespData():Ref<CombinedUpdateTalentRespData>
	export function refOfCombinedUpdateTalentRespData(x:CombinedUpdateTalentRespData,v:Ref<CombinedUpdateTalentRespData>)
	export function unRefCombinedUpdateTalentRespData(v:Ref<CombinedUpdateTalentRespData>):CombinedUpdateTalentRespData
	export function emptyTalentCombinedProjectInfo():TalentCombinedProjectInfo
	export function emptyRefTalentCombinedProjectInfo():Ref<TalentCombinedProjectInfo>
	export function refOfTalentCombinedProjectInfo(x:TalentCombinedProjectInfo,v:Ref<TalentCombinedProjectInfo>)
	export function unRefTalentCombinedProjectInfo(v:Ref<TalentCombinedProjectInfo>):TalentCombinedProjectInfo
	export function emptyGetTalentResp():GetTalentResp
	export function emptyRefGetTalentResp():Ref<GetTalentResp>
	export function refOfGetTalentResp(x:GetTalentResp,v:Ref<GetTalentResp>)
	export function unRefGetTalentResp(v:Ref<GetTalentResp>):GetTalentResp
	export function emptyTalentCombinedLanguageInfo():TalentCombinedLanguageInfo
	export function emptyRefTalentCombinedLanguageInfo():Ref<TalentCombinedLanguageInfo>
	export function refOfTalentCombinedLanguageInfo(x:TalentCombinedLanguageInfo,v:Ref<TalentCombinedLanguageInfo>)
	export function unRefTalentCombinedLanguageInfo(v:Ref<TalentCombinedLanguageInfo>):TalentCombinedLanguageInfo
	export function emptyOfferSchemaDetailOption():OfferSchemaDetailOption
	export function emptyRefOfferSchemaDetailOption():Ref<OfferSchemaDetailOption>
	export function refOfOfferSchemaDetailOption(x:OfferSchemaDetailOption,v:Ref<OfferSchemaDetailOption>)
	export function unRefOfferSchemaDetailOption(v:Ref<OfferSchemaDetailOption>):OfferSchemaDetailOption
	export function emptyTransferStageApplicationResp():TransferStageApplicationResp
	export function emptyRefTransferStageApplicationResp():Ref<TransferStageApplicationResp>
	export function refOfTransferStageApplicationResp(x:TransferStageApplicationResp,v:Ref<TransferStageApplicationResp>)
	export function unRefTransferStageApplicationResp(v:Ref<TransferStageApplicationResp>):TransferStageApplicationResp
	export function emptyQueryLocationResp():QueryLocationResp
	export function emptyRefQueryLocationResp():Ref<QueryLocationResp>
	export function refOfQueryLocationResp(x:QueryLocationResp,v:Ref<QueryLocationResp>)
	export function unRefQueryLocationResp(v:Ref<QueryLocationResp>):QueryLocationResp
	export function emptyRegistrationInfo():RegistrationInfo
	export function emptyRefRegistrationInfo():Ref<RegistrationInfo>
	export function refOfRegistrationInfo(x:RegistrationInfo,v:Ref<RegistrationInfo>)
	export function unRefRegistrationInfo(v:Ref<RegistrationInfo>):RegistrationInfo
	export function emptyUserBusinessManagementScope():UserBusinessManagementScope
	export function emptyRefUserBusinessManagementScope():Ref<UserBusinessManagementScope>
	export function refOfUserBusinessManagementScope(x:UserBusinessManagementScope,v:Ref<UserBusinessManagementScope>)
	export function unRefUserBusinessManagementScope(v:Ref<UserBusinessManagementScope>):UserBusinessManagementScope
	export function emptyCreateExternalReferralRewardReq():CreateExternalReferralRewardReq
	export function emptyRefCreateExternalReferralRewardReq():Ref<CreateExternalReferralRewardReq>
	export function refOfCreateExternalReferralRewardReq(x:CreateExternalReferralRewardReq,v:Ref<CreateExternalReferralRewardReq>)
	export function unRefCreateExternalReferralRewardReq(v:Ref<CreateExternalReferralRewardReq>):CreateExternalReferralRewardReq
	export function emptyListSubjectRespData():ListSubjectRespData
	export function emptyRefListSubjectRespData():Ref<ListSubjectRespData>
	export function refOfListSubjectRespData(x:ListSubjectRespData,v:Ref<ListSubjectRespData>)
	export function unRefListSubjectRespData(v:Ref<ListSubjectRespData>):ListSubjectRespData
	export function emptyRegistrationSchemaInfo():RegistrationSchemaInfo
	export function emptyRefRegistrationSchemaInfo():Ref<RegistrationSchemaInfo>
	export function refOfRegistrationSchemaInfo(x:RegistrationSchemaInfo,v:Ref<RegistrationSchemaInfo>)
	export function unRefRegistrationSchemaInfo(v:Ref<RegistrationSchemaInfo>):RegistrationSchemaInfo
	export function emptyCreateEcoBackgroundCheckCustomFieldReq():CreateEcoBackgroundCheckCustomFieldReq
	export function emptyRefCreateEcoBackgroundCheckCustomFieldReq():Ref<CreateEcoBackgroundCheckCustomFieldReq>
	export function refOfCreateEcoBackgroundCheckCustomFieldReq(x:CreateEcoBackgroundCheckCustomFieldReq,v:Ref<CreateEcoBackgroundCheckCustomFieldReq>)
	export function unRefCreateEcoBackgroundCheckCustomFieldReq(v:Ref<CreateEcoBackgroundCheckCustomFieldReq>):CreateEcoBackgroundCheckCustomFieldReq
	export function emptyCreateByAttachmentWebsiteDeliveryResp():CreateByAttachmentWebsiteDeliveryResp
	export function emptyRefCreateByAttachmentWebsiteDeliveryResp():Ref<CreateByAttachmentWebsiteDeliveryResp>
	export function refOfCreateByAttachmentWebsiteDeliveryResp(x:CreateByAttachmentWebsiteDeliveryResp,v:Ref<CreateByAttachmentWebsiteDeliveryResp>)
	export function unRefCreateByAttachmentWebsiteDeliveryResp(v:Ref<CreateByAttachmentWebsiteDeliveryResp>):CreateByAttachmentWebsiteDeliveryResp
	export function emptyEcoExamCreateEventMobile():EcoExamCreateEventMobile
	export function emptyRefEcoExamCreateEventMobile():Ref<EcoExamCreateEventMobile>
	export function refOfEcoExamCreateEventMobile(x:EcoExamCreateEventMobile,v:Ref<EcoExamCreateEventMobile>)
	export function unRefEcoExamCreateEventMobile(v:Ref<EcoExamCreateEventMobile>):EcoExamCreateEventMobile
	export function emptyApplicationTalentLanguageInfo():ApplicationTalentLanguageInfo
	export function emptyRefApplicationTalentLanguageInfo():Ref<ApplicationTalentLanguageInfo>
	export function refOfApplicationTalentLanguageInfo(x:ApplicationTalentLanguageInfo,v:Ref<ApplicationTalentLanguageInfo>)
	export function unRefApplicationTalentLanguageInfo(v:Ref<ApplicationTalentLanguageInfo>):ApplicationTalentLanguageInfo
	export function emptyCombinedJobResult():CombinedJobResult
	export function emptyRefCombinedJobResult():Ref<CombinedJobResult>
	export function refOfCombinedJobResult(x:CombinedJobResult,v:Ref<CombinedJobResult>)
	export function unRefCombinedJobResult(v:Ref<CombinedJobResult>):CombinedJobResult
	export function emptyWebsiteDeliveryCareer():WebsiteDeliveryCareer
	export function emptyRefWebsiteDeliveryCareer():Ref<WebsiteDeliveryCareer>
	export function refOfWebsiteDeliveryCareer(x:WebsiteDeliveryCareer,v:Ref<WebsiteDeliveryCareer>)
	export function unRefWebsiteDeliveryCareer(v:Ref<WebsiteDeliveryCareer>):WebsiteDeliveryCareer
	export function emptyWebsiteJobPost():WebsiteJobPost
	export function emptyRefWebsiteJobPost():Ref<WebsiteJobPost>
	export function refOfWebsiteJobPost(x:WebsiteJobPost,v:Ref<WebsiteJobPost>)
	export function unRefWebsiteJobPost(v:Ref<WebsiteJobPost>):WebsiteJobPost
	export function emptyApplicationOfferSalaryPlanSalaryTemplate():ApplicationOfferSalaryPlanSalaryTemplate
	export function emptyRefApplicationOfferSalaryPlanSalaryTemplate():Ref<ApplicationOfferSalaryPlanSalaryTemplate>
	export function refOfApplicationOfferSalaryPlanSalaryTemplate(x:ApplicationOfferSalaryPlanSalaryTemplate,v:Ref<ApplicationOfferSalaryPlanSalaryTemplate>)
	export function unRefApplicationOfferSalaryPlanSalaryTemplate(v:Ref<ApplicationOfferSalaryPlanSalaryTemplate>):ApplicationOfferSalaryPlanSalaryTemplate
	export function emptyJobRequirementCustomizedTimeRange():JobRequirementCustomizedTimeRange
	export function emptyRefJobRequirementCustomizedTimeRange():Ref<JobRequirementCustomizedTimeRange>
	export function refOfJobRequirementCustomizedTimeRange(x:JobRequirementCustomizedTimeRange,v:Ref<JobRequirementCustomizedTimeRange>)
	export function unRefJobRequirementCustomizedTimeRange(v:Ref<JobRequirementCustomizedTimeRange>):JobRequirementCustomizedTimeRange
	export function emptyWebsiteChannelInfo():WebsiteChannelInfo
	export function emptyRefWebsiteChannelInfo():Ref<WebsiteChannelInfo>
	export function refOfWebsiteChannelInfo(x:WebsiteChannelInfo,v:Ref<WebsiteChannelInfo>)
	export function unRefWebsiteChannelInfo(v:Ref<WebsiteChannelInfo>):WebsiteChannelInfo
	export function emptyTalentFolder():TalentFolder
	export function emptyRefTalentFolder():Ref<TalentFolder>
	export function refOfTalentFolder(x:TalentFolder,v:Ref<TalentFolder>)
	export function unRefTalentFolder(v:Ref<TalentFolder>):TalentFolder
	export function emptyLoginInfoEcoExamReqBody():LoginInfoEcoExamReqBody
	export function emptyRefLoginInfoEcoExamReqBody():Ref<LoginInfoEcoExamReqBody>
	export function refOfLoginInfoEcoExamReqBody(x:LoginInfoEcoExamReqBody,v:Ref<LoginInfoEcoExamReqBody>)
	export function unRefLoginInfoEcoExamReqBody(v:Ref<LoginInfoEcoExamReqBody>):LoginInfoEcoExamReqBody
	export function emptyApplicationOfferOnboardProfileCity():ApplicationOfferOnboardProfileCity
	export function emptyRefApplicationOfferOnboardProfileCity():Ref<ApplicationOfferOnboardProfileCity>
	export function refOfApplicationOfferOnboardProfileCity(x:ApplicationOfferOnboardProfileCity,v:Ref<ApplicationOfferOnboardProfileCity>)
	export function unRefApplicationOfferOnboardProfileCity(v:Ref<ApplicationOfferOnboardProfileCity>):ApplicationOfferOnboardProfileCity
	export function emptyBonusAmount():BonusAmount
	export function emptyRefBonusAmount():Ref<BonusAmount>
	export function refOfBonusAmount(x:BonusAmount,v:Ref<BonusAmount>)
	export function unRefBonusAmount(v:Ref<BonusAmount>):BonusAmount
	export function emptyWebsiteDeliveryLanguage():WebsiteDeliveryLanguage
	export function emptyRefWebsiteDeliveryLanguage():Ref<WebsiteDeliveryLanguage>
	export function refOfWebsiteDeliveryLanguage(x:WebsiteDeliveryLanguage,v:Ref<WebsiteDeliveryLanguage>)
	export function unRefWebsiteDeliveryLanguage(v:Ref<WebsiteDeliveryLanguage>):WebsiteDeliveryLanguage
	export function emptyGetByTalentInterviewReq():GetByTalentInterviewReq
	export function emptyRefGetByTalentInterviewReq():Ref<GetByTalentInterviewReq>
	export function refOfGetByTalentInterviewReq(x:GetByTalentInterviewReq,v:Ref<GetByTalentInterviewReq>)
	export function unRefGetByTalentInterviewReq(v:Ref<GetByTalentInterviewReq>):GetByTalentInterviewReq
	export function emptyJobConfigInterviewRoundConf():JobConfigInterviewRoundConf
	export function emptyRefJobConfigInterviewRoundConf():Ref<JobConfigInterviewRoundConf>
	export function refOfJobConfigInterviewRoundConf(x:JobConfigInterviewRoundConf,v:Ref<JobConfigInterviewRoundConf>)
	export function unRefJobConfigInterviewRoundConf(v:Ref<JobConfigInterviewRoundConf>):JobConfigInterviewRoundConf
	export function emptyRecruiterJobReq():RecruiterJobReq
	export function emptyRefRecruiterJobReq():Ref<RecruiterJobReq>
	export function refOfRecruiterJobReq(x:RecruiterJobReq,v:Ref<RecruiterJobReq>)
	export function unRefRecruiterJobReq(v:Ref<RecruiterJobReq>):RecruiterJobReq
	export function emptyUpdateProgressEcoBackgroundCheckReqBody():UpdateProgressEcoBackgroundCheckReqBody
	export function emptyRefUpdateProgressEcoBackgroundCheckReqBody():Ref<UpdateProgressEcoBackgroundCheckReqBody>
	export function refOfUpdateProgressEcoBackgroundCheckReqBody(x:UpdateProgressEcoBackgroundCheckReqBody,v:Ref<UpdateProgressEcoBackgroundCheckReqBody>)
	export function unRefUpdateProgressEcoBackgroundCheckReqBody(v:Ref<UpdateProgressEcoBackgroundCheckReqBody>):UpdateProgressEcoBackgroundCheckReqBody
	export function emptyListInterviewResp():ListInterviewResp
	export function emptyRefListInterviewResp():Ref<ListInterviewResp>
	export function refOfListInterviewResp(x:ListInterviewResp,v:Ref<ListInterviewResp>)
	export function unRefListInterviewResp(v:Ref<ListInterviewResp>):ListInterviewResp
	export function emptyEcoBackgroundCheckCustomFieldData():EcoBackgroundCheckCustomFieldData
	export function emptyRefEcoBackgroundCheckCustomFieldData():Ref<EcoBackgroundCheckCustomFieldData>
	export function refOfEcoBackgroundCheckCustomFieldData(x:EcoBackgroundCheckCustomFieldData,v:Ref<EcoBackgroundCheckCustomFieldData>)
	export function unRefEcoBackgroundCheckCustomFieldData(v:Ref<EcoBackgroundCheckCustomFieldData>):EcoBackgroundCheckCustomFieldData
	export function emptyListOfferRespData():ListOfferRespData
	export function emptyRefListOfferRespData():Ref<ListOfferRespData>
	export function refOfListOfferRespData(x:ListOfferRespData,v:Ref<ListOfferRespData>)
	export function unRefListOfferRespData(v:Ref<ListOfferRespData>):ListOfferRespData
	export function emptyListSubjectResp():ListSubjectResp
	export function emptyRefListSubjectResp():Ref<ListSubjectResp>
	export function refOfListSubjectResp(x:ListSubjectResp,v:Ref<ListSubjectResp>)
	export function unRefListSubjectResp(v:Ref<ListSubjectResp>):ListSubjectResp
	export function emptyWebsiteDeliveryAttachmentIndentification():WebsiteDeliveryAttachmentIndentification
	export function emptyRefWebsiteDeliveryAttachmentIndentification():Ref<WebsiteDeliveryAttachmentIndentification>
	export function refOfWebsiteDeliveryAttachmentIndentification(x:WebsiteDeliveryAttachmentIndentification,v:Ref<WebsiteDeliveryAttachmentIndentification>)
	export function unRefWebsiteDeliveryAttachmentIndentification(v:Ref<WebsiteDeliveryAttachmentIndentification>):WebsiteDeliveryAttachmentIndentification
	export function emptyGetRoleResp():GetRoleResp
	export function emptyRefGetRoleResp():Ref<GetRoleResp>
	export function refOfGetRoleResp(x:GetRoleResp,v:Ref<GetRoleResp>)
	export function unRefGetRoleResp(v:Ref<GetRoleResp>):GetRoleResp
	export function emptyJobProcesses():JobProcesses
	export function emptyRefJobProcesses():Ref<JobProcesses>
	export function refOfJobProcesses(x:JobProcesses,v:Ref<JobProcesses>)
	export function unRefJobProcesses(v:Ref<JobProcesses>):JobProcesses
	export function emptyJobRequirementCustomizedDataDto():JobRequirementCustomizedDataDto
	export function emptyRefJobRequirementCustomizedDataDto():Ref<JobRequirementCustomizedDataDto>
	export function refOfJobRequirementCustomizedDataDto(x:JobRequirementCustomizedDataDto,v:Ref<JobRequirementCustomizedDataDto>)
	export function unRefJobRequirementCustomizedDataDto(v:Ref<JobRequirementCustomizedDataDto>):JobRequirementCustomizedDataDto
	export function emptyOfferApplyFormSchema():OfferApplyFormSchema
	export function emptyRefOfferApplyFormSchema():Ref<OfferApplyFormSchema>
	export function refOfOfferApplyFormSchema(x:OfferApplyFormSchema,v:Ref<OfferApplyFormSchema>)
	export function unRefOfferApplyFormSchema(v:Ref<OfferApplyFormSchema>):OfferApplyFormSchema
	export function emptyCreateOfferReq():CreateOfferReq
	export function emptyRefCreateOfferReq():Ref<CreateOfferReq>
	export function refOfCreateOfferReq(x:CreateOfferReq,v:Ref<CreateOfferReq>)
	export function unRefCreateOfferReq(v:Ref<CreateOfferReq>):CreateOfferReq
	export function emptyListApplicationReq():ListApplicationReq
	export function emptyRefListApplicationReq():Ref<ListApplicationReq>
	export function refOfListApplicationReq(x:ListApplicationReq,v:Ref<ListApplicationReq>)
	export function unRefListApplicationReq(v:Ref<ListApplicationReq>):ListApplicationReq
	export function emptyListInterviewRoundTypeRespData():ListInterviewRoundTypeRespData
	export function emptyRefListInterviewRoundTypeRespData():Ref<ListInterviewRoundTypeRespData>
	export function refOfListInterviewRoundTypeRespData(x:ListInterviewRoundTypeRespData,v:Ref<ListInterviewRoundTypeRespData>)
	export function unRefListInterviewRoundTypeRespData(v:Ref<ListInterviewRoundTypeRespData>):ListInterviewRoundTypeRespData
	export function emptyApplicationTalentEducationInfo():ApplicationTalentEducationInfo
	export function emptyRefApplicationTalentEducationInfo():Ref<ApplicationTalentEducationInfo>
	export function refOfApplicationTalentEducationInfo(x:ApplicationTalentEducationInfo,v:Ref<ApplicationTalentEducationInfo>)
	export function unRefApplicationTalentEducationInfo(v:Ref<ApplicationTalentEducationInfo>):ApplicationTalentEducationInfo
	export function emptyUpdateTalentExternalInfoRespData():UpdateTalentExternalInfoRespData
	export function emptyRefUpdateTalentExternalInfoRespData():Ref<UpdateTalentExternalInfoRespData>
	export function refOfUpdateTalentExternalInfoRespData(x:UpdateTalentExternalInfoRespData,v:Ref<UpdateTalentExternalInfoRespData>)
	export function unRefUpdateTalentExternalInfoRespData(v:Ref<UpdateTalentExternalInfoRespData>):UpdateTalentExternalInfoRespData
	export function emptyOfferSelectionObject():OfferSelectionObject
	export function emptyRefOfferSelectionObject():Ref<OfferSelectionObject>
	export function refOfOfferSelectionObject(x:OfferSelectionObject,v:Ref<OfferSelectionObject>)
	export function unRefOfferSelectionObject(v:Ref<OfferSelectionObject>):OfferSelectionObject
	export function emptyWebsite():Website
	export function emptyRefWebsite():Ref<Website>
	export function refOfWebsite(x:Website,v:Ref<Website>)
	export function unRefWebsite(v:Ref<Website>):Website
	export function emptyTalentCityInfo():TalentCityInfo
	export function emptyRefTalentCityInfo():Ref<TalentCityInfo>
	export function refOfTalentCityInfo(x:TalentCityInfo,v:Ref<TalentCityInfo>)
	export function unRefTalentCityInfo(v:Ref<TalentCityInfo>):TalentCityInfo
	export function emptyInternOfferStatus():InternOfferStatus
	export function emptyRefInternOfferStatus():Ref<InternOfferStatus>
	export function refOfInternOfferStatus(x:InternOfferStatus,v:Ref<InternOfferStatus>)
	export function unRefInternOfferStatus(v:Ref<InternOfferStatus>):InternOfferStatus
	export function emptyWebsiteDeliveryCustomizedData():WebsiteDeliveryCustomizedData
	export function emptyRefWebsiteDeliveryCustomizedData():Ref<WebsiteDeliveryCustomizedData>
	export function refOfWebsiteDeliveryCustomizedData(x:WebsiteDeliveryCustomizedData,v:Ref<WebsiteDeliveryCustomizedData>)
	export function unRefWebsiteDeliveryCustomizedData(v:Ref<WebsiteDeliveryCustomizedData>):WebsiteDeliveryCustomizedData
	export function emptyApplicationTalentSnsInfo():ApplicationTalentSnsInfo
	export function emptyRefApplicationTalentSnsInfo():Ref<ApplicationTalentSnsInfo>
	export function refOfApplicationTalentSnsInfo(x:ApplicationTalentSnsInfo,v:Ref<ApplicationTalentSnsInfo>)
	export function unRefApplicationTalentSnsInfo(v:Ref<ApplicationTalentSnsInfo>):ApplicationTalentSnsInfo
	export function emptySequence():Sequence
	export function emptyRefSequence():Ref<Sequence>
	export function refOfSequence(x:Sequence,v:Ref<Sequence>)
	export function unRefSequence(v:Ref<Sequence>):Sequence
	export function emptyJobRequirement():JobRequirement
	export function emptyRefJobRequirement():Ref<JobRequirement>
	export function refOfJobRequirement(x:JobRequirement,v:Ref<JobRequirement>)
	export function unRefJobRequirement(v:Ref<JobRequirement>):JobRequirement
	export function emptyListLocationResp():ListLocationResp
	export function emptyRefListLocationResp():Ref<ListLocationResp>
	export function refOfListLocationResp(x:ListLocationResp,v:Ref<ListLocationResp>)
	export function unRefListLocationResp(v:Ref<ListLocationResp>):ListLocationResp
	export function emptyListTerminationReasonRespData():ListTerminationReasonRespData
	export function emptyRefListTerminationReasonRespData():Ref<ListTerminationReasonRespData>
	export function refOfListTerminationReasonRespData(x:ListTerminationReasonRespData,v:Ref<ListTerminationReasonRespData>)
	export function unRefListTerminationReasonRespData(v:Ref<ListTerminationReasonRespData>):ListTerminationReasonRespData
	export function emptyEcoBackgroundCheckCreateEventCustomKv():EcoBackgroundCheckCreateEventCustomKv
	export function emptyRefEcoBackgroundCheckCreateEventCustomKv():Ref<EcoBackgroundCheckCreateEventCustomKv>
	export function refOfEcoBackgroundCheckCreateEventCustomKv(x:EcoBackgroundCheckCreateEventCustomKv,v:Ref<EcoBackgroundCheckCreateEventCustomKv>)
	export function unRefEcoBackgroundCheckCreateEventCustomKv(v:Ref<EcoBackgroundCheckCreateEventCustomKv>):EcoBackgroundCheckCreateEventCustomKv
	export function emptyInternOfferStatusOfferRespData():InternOfferStatusOfferRespData
	export function emptyRefInternOfferStatusOfferRespData():Ref<InternOfferStatusOfferRespData>
	export function refOfInternOfferStatusOfferRespData(x:InternOfferStatusOfferRespData,v:Ref<InternOfferStatusOfferRespData>)
	export function unRefInternOfferStatusOfferRespData(v:Ref<InternOfferStatusOfferRespData>):InternOfferStatusOfferRespData
	export function emptyCheckFailedAccountInfo():CheckFailedAccountInfo
	export function emptyRefCheckFailedAccountInfo():Ref<CheckFailedAccountInfo>
	export function refOfCheckFailedAccountInfo(x:CheckFailedAccountInfo,v:Ref<CheckFailedAccountInfo>)
	export function unRefCheckFailedAccountInfo(v:Ref<CheckFailedAccountInfo>):CheckFailedAccountInfo
	export function emptyEcoBackgroundCheckCreateEventContactInfo():EcoBackgroundCheckCreateEventContactInfo
	export function emptyRefEcoBackgroundCheckCreateEventContactInfo():Ref<EcoBackgroundCheckCreateEventContactInfo>
	export function refOfEcoBackgroundCheckCreateEventContactInfo(x:EcoBackgroundCheckCreateEventContactInfo,v:Ref<EcoBackgroundCheckCreateEventContactInfo>)
	export function unRefEcoBackgroundCheckCreateEventContactInfo(v:Ref<EcoBackgroundCheckCreateEventContactInfo>):EcoBackgroundCheckCreateEventContactInfo
	export function emptyOfferEmailInfo():OfferEmailInfo
	export function emptyRefOfferEmailInfo():Ref<OfferEmailInfo>
	export function refOfOfferEmailInfo(x:OfferEmailInfo,v:Ref<OfferEmailInfo>)
	export function unRefOfferEmailInfo(v:Ref<OfferEmailInfo>):OfferEmailInfo
}