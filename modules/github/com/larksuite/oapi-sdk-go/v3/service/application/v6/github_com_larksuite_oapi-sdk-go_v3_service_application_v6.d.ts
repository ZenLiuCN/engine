// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'github.com/larksuite/oapi-sdk-go/v3/service/application/v6'{

	// @ts-ignore
	import * as larkcore from 'github.com/larksuite/oapi-sdk-go/v3/core'
	// @ts-ignore
	import * as context from 'golang/context'
	// @ts-ignore
	import * as larkevent from 'github.com/larksuite/oapi-sdk-go/v3/event'
	// @ts-ignore
	import type {int64,Alias,Nothing,Ref,Struct,bool,int,error} from 'go'
	//"app"
	export const AbilityApp:string
	//"bot"
	export const AbilityBot:string
	//"h5"
	export const AbilityH5:string
	//"mp"
	export const AbilityMp:string
	export interface Accessibility extends Struct<Accessibility>{

			reason:Ref<string>
			state:Ref<string>
	}
	export interface AccessibilityBuilder extends Struct<AccessibilityBuilder>{

			reason(reason:string):Ref<AccessibilityBuilder>
			state(state:string):Ref<AccessibilityBuilder>
			build():Ref<Accessibility>
	}
	export interface AppAbility extends Struct<AppAbility>{

			gadget:Ref<Gadget>
			webApp:Ref<WebApp>
			bot:Ref<Bot>
			workplaceWidgets:Ref<WorkplaceWidget>[]
			navigate:Ref<Navigate>
			cloudDoc:Ref<CloudDoc>
			docsBlocks:Ref<DocsBlock>[]
			messageAction:Ref<MessageAction>
			plusMenu:Ref<PlusMenu>
	}
	export interface AppAbilityBot extends Struct<AppAbilityBot>{

			enable:Ref<bool>
			messageCardCallbackUrl:Ref<string>
			i18ns:Ref<AppAbilityBotI18n>[]
	}
	export interface AppAbilityBotBuilder extends Struct<AppAbilityBotBuilder>{

			enable(enable:bool):Ref<AppAbilityBotBuilder>
			messageCardCallbackUrl(messageCardCallbackUrl:string):Ref<AppAbilityBotBuilder>
			i18ns(i18ns:Ref<AppAbilityBotI18n>[]):Ref<AppAbilityBotBuilder>
			build():Ref<AppAbilityBot>
	}
	export interface AppAbilityBotI18n extends Struct<AppAbilityBotI18n>{

			i18nKey:Ref<string>
			getStartedDesc:Ref<string>
	}
	export interface AppAbilityBotI18nBuilder extends Struct<AppAbilityBotI18nBuilder>{

			i18nKey(i18nKey:string):Ref<AppAbilityBotI18nBuilder>
			getStartedDesc(getStartedDesc:string):Ref<AppAbilityBotI18nBuilder>
			build():Ref<AppAbilityBotI18n>
	}
	export interface AppAbilityBuilder extends Struct<AppAbilityBuilder>{

			gadget(gadget:Ref<Gadget>):Ref<AppAbilityBuilder>
			webApp(webApp:Ref<WebApp>):Ref<AppAbilityBuilder>
			bot(bot:Ref<Bot>):Ref<AppAbilityBuilder>
			workplaceWidgets(workplaceWidgets:Ref<WorkplaceWidget>[]):Ref<AppAbilityBuilder>
			navigate(navigate:Ref<Navigate>):Ref<AppAbilityBuilder>
			cloudDoc(cloudDoc:Ref<CloudDoc>):Ref<AppAbilityBuilder>
			docsBlocks(docsBlocks:Ref<DocsBlock>[]):Ref<AppAbilityBuilder>
			messageAction(messageAction:Ref<MessageAction>):Ref<AppAbilityBuilder>
			plusMenu(plusMenu:Ref<PlusMenu>):Ref<AppAbilityBuilder>
			build():Ref<AppAbility>
	}
	export interface AppAbilityWeb extends Struct<AppAbilityWeb>{

			enable:Ref<bool>
			pcUrl:Ref<string>
			pcNewPageOpenMode:Ref<string>
			mobileUrl:Ref<string>
	}
	export interface AppAbilityWebBuilder extends Struct<AppAbilityWebBuilder>{

			enable(enable:bool):Ref<AppAbilityWebBuilder>
			pcUrl(pcUrl:string):Ref<AppAbilityWebBuilder>
			pcNewPageOpenMode(pcNewPageOpenMode:string):Ref<AppAbilityWebBuilder>
			mobileUrl(mobileUrl:string):Ref<AppAbilityWebBuilder>
			build():Ref<AppAbilityWeb>
	}
	export interface AppAdminUser extends Struct<AppAdminUser>{

			adminType:string[]
			userId:Ref<string>
	}
	export interface AppAdminUserBuilder extends Struct<AppAdminUserBuilder>{

			adminType(adminType:string[]):Ref<AppAdminUserBuilder>
			userId(userId:string):Ref<AppAdminUserBuilder>
			build():Ref<AppAdminUser>
	}
	export interface AppBadge extends Struct<AppBadge>{

			userId:Ref<string>
			version:Ref<string>
			extra:Ref<string>
			pc:Ref<ClientBadgeNum>
			mobile:Ref<ClientBadgeNum>
	}
	export interface AppBadgeBuilder extends Struct<AppBadgeBuilder>{

			userId(userId:string):Ref<AppBadgeBuilder>
			version(version:string):Ref<AppBadgeBuilder>
			extra(extra:string):Ref<AppBadgeBuilder>
			pc(pc:Ref<ClientBadgeNum>):Ref<AppBadgeBuilder>
			mobile(mobile:Ref<ClientBadgeNum>):Ref<AppBadgeBuilder>
			build():Ref<AppBadge>
	}
	export interface AppCollaborator extends Struct<AppCollaborator>{

			type:Ref<string>
			userId:Ref<string>
	}
	export interface AppCollaboratorBuilder extends Struct<AppCollaboratorBuilder>{

			type(type_:string):Ref<AppCollaboratorBuilder>
			userId(userId:string):Ref<AppCollaboratorBuilder>
			build():Ref<AppCollaborator>
	}
	export interface AppCommonCategory extends Struct<AppCommonCategory>{

			i18nKey:Ref<string>
			category:Ref<string>
	}
	export interface AppCommonCategoryBuilder extends Struct<AppCommonCategoryBuilder>{

			i18nKey(i18nKey:string):Ref<AppCommonCategoryBuilder>
			category(category:string):Ref<AppCommonCategoryBuilder>
			build():Ref<AppCommonCategory>
	}
	export interface AppConfigContactsRange extends Struct<AppConfigContactsRange>{

			contactsRangeType:Ref<string>
			visibleList:Ref<AppContactsRangeIdList>
	}
	export interface AppConfigContactsRangeBuilder extends Struct<AppConfigContactsRangeBuilder>{

			contactsRangeType(contactsRangeType:string):Ref<AppConfigContactsRangeBuilder>
			visibleList(visibleList:Ref<AppContactsRangeIdList>):Ref<AppConfigContactsRangeBuilder>
			build():Ref<AppConfigContactsRange>
	}
	export interface AppConfigEvent extends Struct<AppConfigEvent>{

			subscriptionType:Ref<string>
			requestUrl:Ref<string>
			addEvents:string[]
			removeEvents:string[]
	}
	export interface AppConfigEventBuilder extends Struct<AppConfigEventBuilder>{

			subscriptionType(subscriptionType:string):Ref<AppConfigEventBuilder>
			requestUrl(requestUrl:string):Ref<AppConfigEventBuilder>
			addEvents(addEvents:string[]):Ref<AppConfigEventBuilder>
			removeEvents(removeEvents:string[]):Ref<AppConfigEventBuilder>
			build():Ref<AppConfigEvent>
	}
	export interface AppConfigScope extends Struct<AppConfigScope>{

			addScopes:Ref<AppConfigScopeItem>[]
			removeScopes:Ref<AppConfigScopeItem>[]
	}
	export interface AppConfigScopeBuilder extends Struct<AppConfigScopeBuilder>{

			addScopes(addScopes:Ref<AppConfigScopeItem>[]):Ref<AppConfigScopeBuilder>
			removeScopes(removeScopes:Ref<AppConfigScopeItem>[]):Ref<AppConfigScopeBuilder>
			build():Ref<AppConfigScope>
	}
	export interface AppConfigScopeItem extends Struct<AppConfigScopeItem>{

			scopeName:Ref<string>
			tokenType:Ref<string>
	}
	export interface AppConfigScopeItemBuilder extends Struct<AppConfigScopeItemBuilder>{

			scopeName(scopeName:string):Ref<AppConfigScopeItemBuilder>
			tokenType(tokenType:string):Ref<AppConfigScopeItemBuilder>
			build():Ref<AppConfigScopeItem>
	}
	export interface AppConfigSecurity extends Struct<AppConfigSecurity>{

			add:Ref<AppConfigSecurityItem>
			remove:Ref<AppConfigSecurityItem>
	}
	export interface AppConfigSecurityBuilder extends Struct<AppConfigSecurityBuilder>{

			add(add:Ref<AppConfigSecurityItem>):Ref<AppConfigSecurityBuilder>
			remove(remove:Ref<AppConfigSecurityItem>):Ref<AppConfigSecurityBuilder>
			build():Ref<AppConfigSecurity>
	}
	export interface AppConfigSecurityItem extends Struct<AppConfigSecurityItem>{

			redirectUrls:string[]
			allowedIps:string[]
			h5TrustedDomains:string[]
			webViewTrustedDomains:string[]
			allowedSchemas:string[]
			allowedServerDomains:string[]
	}
	export interface AppConfigSecurityItemBuilder extends Struct<AppConfigSecurityItemBuilder>{

			redirectUrls(redirectUrls:string[]):Ref<AppConfigSecurityItemBuilder>
			allowedIps(allowedIps:string[]):Ref<AppConfigSecurityItemBuilder>
			h5TrustedDomains(h5TrustedDomains:string[]):Ref<AppConfigSecurityItemBuilder>
			webViewTrustedDomains(webViewTrustedDomains:string[]):Ref<AppConfigSecurityItemBuilder>
			allowedSchemas(allowedSchemas:string[]):Ref<AppConfigSecurityItemBuilder>
			allowedServerDomains(allowedServerDomains:string[]):Ref<AppConfigSecurityItemBuilder>
			build():Ref<AppConfigSecurityItem>
	}
	export interface AppConfigVisibility extends Struct<AppConfigVisibility>{

			isVisibleToAll:Ref<bool>
			visibleList:Ref<AppVisibilityIdList>
	}
	export interface AppConfigVisibilityBuilder extends Struct<AppConfigVisibilityBuilder>{

			isVisibleToAll(isVisibleToAll:bool):Ref<AppConfigVisibilityBuilder>
			visibleList(visibleList:Ref<AppVisibilityIdList>):Ref<AppConfigVisibilityBuilder>
			build():Ref<AppConfigVisibility>
	}
	export interface AppContactsRangeIdList extends Struct<AppContactsRangeIdList>{

			userIds:string[]
			departmentIds:string[]
			groupIds:string[]
	}
	export interface AppContactsRangeIdListBuilder extends Struct<AppContactsRangeIdListBuilder>{

			userIds(userIds:string[]):Ref<AppContactsRangeIdListBuilder>
			departmentIds(departmentIds:string[]):Ref<AppContactsRangeIdListBuilder>
			groupIds(groupIds:string[]):Ref<AppContactsRangeIdListBuilder>
			build():Ref<AppContactsRangeIdList>
	}
	export interface AppCustomCategory extends Struct<AppCustomCategory>{

			i18nKey:Ref<string>
			description:Ref<string>
			appIds:string[]
	}
	export interface AppCustomCategoryBuilder extends Struct<AppCustomCategoryBuilder>{

			i18nKey(i18nKey:string):Ref<AppCustomCategoryBuilder>
			description(description:string):Ref<AppCustomCategoryBuilder>
			appIds(appIds:string[]):Ref<AppCustomCategoryBuilder>
			build():Ref<AppCustomCategory>
	}
	export interface AppCustomCategoryI18nInfo extends Struct<AppCustomCategoryI18nInfo>{

			i18nKey:Ref<string>
			name:Ref<string>
	}
	export interface AppCustomCategoryI18nInfoBuilder extends Struct<AppCustomCategoryI18nInfoBuilder>{

			i18nKey(i18nKey:string):Ref<AppCustomCategoryI18nInfoBuilder>
			name(name:string):Ref<AppCustomCategoryI18nInfoBuilder>
			build():Ref<AppCustomCategoryI18nInfo>
	}
	export interface AppI18nInfo extends Struct<AppI18nInfo>{

			i18nKey:Ref<string>
			name:Ref<string>
			description:Ref<string>
			helpUse:Ref<string>
	}
	export interface AppI18nInfoBuilder extends Struct<AppI18nInfoBuilder>{

			i18nKey(i18nKey:string):Ref<AppI18nInfoBuilder>
			name(name:string):Ref<AppI18nInfoBuilder>
			description(description:string):Ref<AppI18nInfoBuilder>
			helpUse(helpUse:string):Ref<AppI18nInfoBuilder>
			build():Ref<AppI18nInfo>
	}
	export interface AppMessageTrendItem extends Struct<AppMessageTrendItem>{

			chatType:Ref<string>
			eventType:Ref<string>
			messageType:Ref<string>
			trend:Ref<UsageTrendItem>[]
	}
	export interface AppMessageTrendItemBuilder extends Struct<AppMessageTrendItemBuilder>{

			chatType(chatType:string):Ref<AppMessageTrendItemBuilder>
			eventType(eventType:string):Ref<AppMessageTrendItemBuilder>
			messageType(messageType:string):Ref<AppMessageTrendItemBuilder>
			trend(trend:Ref<UsageTrendItem>[]):Ref<AppMessageTrendItemBuilder>
			build():Ref<AppMessageTrendItem>
	}
	export interface AppRecommendRule extends Struct<AppRecommendRule>{

			id:Ref<string>
			name:Ref<string>
			status:Ref<string>
			visibilityInfo:Ref<AppRecommendRuleVisibilityInfo>
			recommendItemInfos:Ref<AppRecommendRuleItemInfo>[]
			distributedRecommendItemInfos:Ref<AppRecommendRuleItemInfo>[]
	}
	export interface AppRecommendRuleBuilder extends Struct<AppRecommendRuleBuilder>{

			id(id:string):Ref<AppRecommendRuleBuilder>
			name(name:string):Ref<AppRecommendRuleBuilder>
			status(status:string):Ref<AppRecommendRuleBuilder>
			visibilityInfo(visibilityInfo:Ref<AppRecommendRuleVisibilityInfo>):Ref<AppRecommendRuleBuilder>
			recommendItemInfos(recommendItemInfos:Ref<AppRecommendRuleItemInfo>[]):Ref<AppRecommendRuleBuilder>
			distributedRecommendItemInfos(distributedRecommendItemInfos:Ref<AppRecommendRuleItemInfo>[]):Ref<AppRecommendRuleBuilder>
			build():Ref<AppRecommendRule>
	}
	export interface AppRecommendRuleItemInfo extends Struct<AppRecommendRuleItemInfo>{

			itemId:Ref<string>
			itemType:Ref<string>
			name:Ref<string>
			description:Ref<string>
			linkUrl:Ref<string>
			clientId:Ref<string>
			iconUrl:Ref<string>
			defaultLocale:Ref<string>
			i18nName:Ref<AppRecommendRuleItemInfoI18nName>
	}
	export interface AppRecommendRuleItemInfoBuilder extends Struct<AppRecommendRuleItemInfoBuilder>{

			itemId(itemId:string):Ref<AppRecommendRuleItemInfoBuilder>
			itemType(itemType:string):Ref<AppRecommendRuleItemInfoBuilder>
			name(name:string):Ref<AppRecommendRuleItemInfoBuilder>
			description(description:string):Ref<AppRecommendRuleItemInfoBuilder>
			linkUrl(linkUrl:string):Ref<AppRecommendRuleItemInfoBuilder>
			clientId(clientId:string):Ref<AppRecommendRuleItemInfoBuilder>
			iconUrl(iconUrl:string):Ref<AppRecommendRuleItemInfoBuilder>
			defaultLocale(defaultLocale:string):Ref<AppRecommendRuleItemInfoBuilder>
			i18nName(i18nName:Ref<AppRecommendRuleItemInfoI18nName>):Ref<AppRecommendRuleItemInfoBuilder>
			build():Ref<AppRecommendRuleItemInfo>
	}
	export interface AppRecommendRuleItemInfoI18nName extends Struct<AppRecommendRuleItemInfoI18nName>{

			zhCn:Ref<string>
			zhHk:Ref<string>
			zhTw:Ref<string>
			enUs:Ref<string>
			jaJp:Ref<string>
	}
	export interface AppRecommendRuleItemInfoI18nNameBuilder extends Struct<AppRecommendRuleItemInfoI18nNameBuilder>{

			zhCn(zhCn:string):Ref<AppRecommendRuleItemInfoI18nNameBuilder>
			zhHk(zhHk:string):Ref<AppRecommendRuleItemInfoI18nNameBuilder>
			zhTw(zhTw:string):Ref<AppRecommendRuleItemInfoI18nNameBuilder>
			enUs(enUs:string):Ref<AppRecommendRuleItemInfoI18nNameBuilder>
			jaJp(jaJp:string):Ref<AppRecommendRuleItemInfoI18nNameBuilder>
			build():Ref<AppRecommendRuleItemInfoI18nName>
	}
	export interface AppRecommendRuleVisibilityInfo extends Struct<AppRecommendRuleVisibilityInfo>{

			isAll:Ref<bool>
			departmentIds:string[]
			userIds:string[]
			groupIds:string[]
	}
	export interface AppRecommendRuleVisibilityInfoBuilder extends Struct<AppRecommendRuleVisibilityInfoBuilder>{

			isAll(isAll:bool):Ref<AppRecommendRuleVisibilityInfoBuilder>
			departmentIds(departmentIds:string[]):Ref<AppRecommendRuleVisibilityInfoBuilder>
			userIds(userIds:string[]):Ref<AppRecommendRuleVisibilityInfoBuilder>
			groupIds(groupIds:string[]):Ref<AppRecommendRuleVisibilityInfoBuilder>
			build():Ref<AppRecommendRuleVisibilityInfo>
	}
	export interface AppScope extends Struct<AppScope>{

			scope:Ref<string>
			description:Ref<string>
			level:Ref<int>
	}
	export interface AppScopeBuilder extends Struct<AppScopeBuilder>{

			scope(scope:string):Ref<AppScopeBuilder>
			description(description:string):Ref<AppScopeBuilder>
			level(level:int):Ref<AppScopeBuilder>
			build():Ref<AppScope>
	}
	export interface AppScopeI18nInfo extends Struct<AppScopeI18nInfo>{

			i18nKey:Ref<string>
			description:Ref<string>
	}
	export interface AppScopeI18nInfoBuilder extends Struct<AppScopeI18nInfoBuilder>{

			i18nKey(i18nKey:string):Ref<AppScopeI18nInfoBuilder>
			description(description:string):Ref<AppScopeI18nInfoBuilder>
			build():Ref<AppScopeI18nInfo>
	}
	export interface AppScopes extends Struct<AppScopes>{

			highLevelScopes:string[]
			lowLevelScopes:string[]
	}
	export interface AppScopesBuilder extends Struct<AppScopesBuilder>{

			highLevelScopes(highLevelScopes:string[]):Ref<AppScopesBuilder>
			lowLevelScopes(lowLevelScopes:string[]):Ref<AppScopesBuilder>
			build():Ref<AppScopes>
	}
	export interface AppUsageTrendItems extends Struct<AppUsageTrendItems>{

			id:Ref<string>
			trend:Ref<UsageTrendItem>[]
	}
	export interface AppUsageTrendItemsBuilder extends Struct<AppUsageTrendItemsBuilder>{

			id(id:string):Ref<AppUsageTrendItemsBuilder>
			trend(trend:Ref<UsageTrendItem>[]):Ref<AppUsageTrendItemsBuilder>
			build():Ref<AppUsageTrendItems>
	}
	export interface AppVersionId extends Struct<AppVersionId>{

			version:Ref<string>
			versionId:Ref<string>
	}
	export interface AppVersionIdBuilder extends Struct<AppVersionIdBuilder>{

			version(version:string):Ref<AppVersionIdBuilder>
			versionId(versionId:string):Ref<AppVersionIdBuilder>
			build():Ref<AppVersionId>
	}
	export interface AppVersionRemark extends Struct<AppVersionRemark>{

			remark:Ref<string>
			updateRemark:Ref<string>
			visibility:Ref<AppVisibility>
	}
	export interface AppVersionRemarkBuilder extends Struct<AppVersionRemarkBuilder>{

			remark(remark:string):Ref<AppVersionRemarkBuilder>
			updateRemark(updateRemark:string):Ref<AppVersionRemarkBuilder>
			visibility(visibility:Ref<AppVisibility>):Ref<AppVersionRemarkBuilder>
			build():Ref<AppVersionRemark>
	}
	export interface AppVersionRemarkEvent extends Struct<AppVersionRemarkEvent>{

			remark:Ref<string>
			updateRemark:Ref<string>
			visibility:Ref<AppVisibilityEvent>
	}
	export interface AppVersionRemarkEventBuilder extends Struct<AppVersionRemarkEventBuilder>{

			remark(remark:string):Ref<AppVersionRemarkEventBuilder>
			updateRemark(updateRemark:string):Ref<AppVersionRemarkEventBuilder>
			visibility(visibility:Ref<AppVisibilityEvent>):Ref<AppVersionRemarkEventBuilder>
			build():Ref<AppVersionRemarkEvent>
	}
	//1
	export const AppVersionStatusAudited:int
	//2
	export const AppVersionStatusReject:int
	//4
	export const AppVersionStatusUnaudit:int
	//3
	export const AppVersionStatusUnderAudit:int
	//0
	export const AppVersionStatusUnknown:int
	export interface AppVisibility extends Struct<AppVisibility>{

			isAll:Ref<bool>
			visibleList:Ref<AppVisibleList>
			invisibleList:Ref<AppVisibleList>
	}
	export interface AppVisibilityBuilder extends Struct<AppVisibilityBuilder>{

			isAll(isAll:bool):Ref<AppVisibilityBuilder>
			visibleList(visibleList:Ref<AppVisibleList>):Ref<AppVisibilityBuilder>
			invisibleList(invisibleList:Ref<AppVisibleList>):Ref<AppVisibilityBuilder>
			build():Ref<AppVisibility>
	}
	export interface AppVisibilityEvent extends Struct<AppVisibilityEvent>{

			isAll:Ref<bool>
			visibleList:Ref<AppVisibleListEvent>
			invisibleList:Ref<AppVisibleListEvent>
	}
	export interface AppVisibilityEventBuilder extends Struct<AppVisibilityEventBuilder>{

			isAll(isAll:bool):Ref<AppVisibilityEventBuilder>
			visibleList(visibleList:Ref<AppVisibleListEvent>):Ref<AppVisibilityEventBuilder>
			invisibleList(invisibleList:Ref<AppVisibleListEvent>):Ref<AppVisibilityEventBuilder>
			build():Ref<AppVisibilityEvent>
	}
	export interface AppVisibilityIdList extends Struct<AppVisibilityIdList>{

			userIds:string[]
			departmentIds:string[]
			groupIds:string[]
	}
	export interface AppVisibilityIdListBuilder extends Struct<AppVisibilityIdListBuilder>{

			userIds(userIds:string[]):Ref<AppVisibilityIdListBuilder>
			departmentIds(departmentIds:string[]):Ref<AppVisibilityIdListBuilder>
			groupIds(groupIds:string[]):Ref<AppVisibilityIdListBuilder>
			build():Ref<AppVisibilityIdList>
	}
	export interface AppVisibilityItem extends Struct<AppVisibilityItem>{

			userId:Ref<string>
			departmentId:Ref<string>
			groupId:Ref<string>
	}
	export interface AppVisibilityItemBuilder extends Struct<AppVisibilityItemBuilder>{

			userId(userId:string):Ref<AppVisibilityItemBuilder>
			departmentId(departmentId:string):Ref<AppVisibilityItemBuilder>
			groupId(groupId:string):Ref<AppVisibilityItemBuilder>
			build():Ref<AppVisibilityItem>
	}
	export interface AppVisibleList extends Struct<AppVisibleList>{

			openIds:string[]
			departmentIds:string[]
			groupIds:string[]
	}
	export interface AppVisibleListBuilder extends Struct<AppVisibleListBuilder>{

			openIds(openIds:string[]):Ref<AppVisibleListBuilder>
			departmentIds(departmentIds:string[]):Ref<AppVisibleListBuilder>
			groupIds(groupIds:string[]):Ref<AppVisibleListBuilder>
			build():Ref<AppVisibleList>
	}
	export interface AppVisibleListEvent extends Struct<AppVisibleListEvent>{

			openIds:Ref<UserId>[]
			departmentIds:string[]
	}
	export interface AppVisibleListEventBuilder extends Struct<AppVisibleListEventBuilder>{

			openIds(openIds:Ref<UserId>[]):Ref<AppVisibleListEventBuilder>
			departmentIds(departmentIds:string[]):Ref<AppVisibleListEventBuilder>
			build():Ref<AppVisibleListEvent>
	}
	export interface Application extends Struct<Application>{

			appId:Ref<string>
			creatorId:Ref<string>
			status:Ref<int>
			sceneType:Ref<int>
			paymentType:Ref<int>
			createSource:Ref<string>
			redirectUrls:string[]
			onlineVersionId:Ref<string>
			unauditVersionId:Ref<string>
			appName:Ref<string>
			avatarUrl:Ref<string>
			description:Ref<string>
			scopes:Ref<AppScope>[]
			backHomeUrl:Ref<string>
			i18n:Ref<AppI18nInfo>[]
			primaryLanguage:Ref<string>
			commonCategories:string[]
			owner:Ref<ApplicationOwner>
			mobileDefaultAbility:Ref<string>
			pcDefaultAbility:Ref<string>
	}
	export interface ApplicationAppContactsRange extends Struct<ApplicationAppContactsRange>{

			contactsScopeType:Ref<string>
			visibleList:Ref<AppVisibleList>
	}
	export interface ApplicationAppContactsRangeBuilder extends Struct<ApplicationAppContactsRangeBuilder>{

			contactsScopeType(contactsScopeType:string):Ref<ApplicationAppContactsRangeBuilder>
			visibleList(visibleList:Ref<AppVisibleList>):Ref<ApplicationAppContactsRangeBuilder>
			build():Ref<ApplicationAppContactsRange>
	}
	export interface ApplicationAppUsage extends Struct<ApplicationAppUsage>{

			metricName:Ref<string>
			metricValue:Ref<int>
	}
	export interface ApplicationAppUsageBuilder extends Struct<ApplicationAppUsageBuilder>{

			metricName(metricName:string):Ref<ApplicationAppUsageBuilder>
			metricValue(metricValue:int):Ref<ApplicationAppUsageBuilder>
			build():Ref<ApplicationAppUsage>
	}
	export interface ApplicationAppVersion extends Struct<ApplicationAppVersion>{

			appId:Ref<string>
			version:Ref<string>
			versionId:Ref<string>
			appName:Ref<string>
			avatarUrl:Ref<string>
			description:Ref<string>
			scopes:Ref<AppScope>[]
			backHomeUrl:Ref<string>
			i18n:Ref<AppI18nInfo>[]
			commonCategories:string[]
			events:string[]
			status:Ref<int>
			createTime:Ref<string>
			publishTime:Ref<string>
			ability:Ref<AppAbility>
			remark:Ref<AppVersionRemark>
			eventInfos:Ref<Event>[]
	}
	export interface ApplicationAppVersionBuilder extends Struct<ApplicationAppVersionBuilder>{

			appId(appId:string):Ref<ApplicationAppVersionBuilder>
			version(version:string):Ref<ApplicationAppVersionBuilder>
			versionId(versionId:string):Ref<ApplicationAppVersionBuilder>
			appName(appName:string):Ref<ApplicationAppVersionBuilder>
			avatarUrl(avatarUrl:string):Ref<ApplicationAppVersionBuilder>
			description(description:string):Ref<ApplicationAppVersionBuilder>
			scopes(scopes:Ref<AppScope>[]):Ref<ApplicationAppVersionBuilder>
			backHomeUrl(backHomeUrl:string):Ref<ApplicationAppVersionBuilder>
			i18n(i18n:Ref<AppI18nInfo>[]):Ref<ApplicationAppVersionBuilder>
			commonCategories(commonCategories:string[]):Ref<ApplicationAppVersionBuilder>
			events(events:string[]):Ref<ApplicationAppVersionBuilder>
			status(status:int):Ref<ApplicationAppVersionBuilder>
			createTime(createTime:string):Ref<ApplicationAppVersionBuilder>
			publishTime(publishTime:string):Ref<ApplicationAppVersionBuilder>
			ability(ability:Ref<AppAbility>):Ref<ApplicationAppVersionBuilder>
			remark(remark:Ref<AppVersionRemark>):Ref<ApplicationAppVersionBuilder>
			eventInfos(eventInfos:Ref<Event>[]):Ref<ApplicationAppVersionBuilder>
			build():Ref<ApplicationAppVersion>
	}
	export interface ApplicationAppVersionEvent extends Struct<ApplicationAppVersionEvent>{

			appId:Ref<string>
			version:Ref<string>
			versionId:Ref<string>
			appName:Ref<string>
			avatarUrl:Ref<string>
			description:Ref<string>
			scopes:Ref<AppScope>[]
			backHomeUrl:Ref<string>
			i18n:Ref<AppI18nInfo>[]
			commonCategories:string[]
			events:string[]
			status:Ref<int>
			createTime:Ref<string>
			publishTime:Ref<string>
			ability:Ref<AppAbility>
			remark:Ref<AppVersionRemarkEvent>
	}
	export interface ApplicationAppVersionEventBuilder extends Struct<ApplicationAppVersionEventBuilder>{

			appId(appId:string):Ref<ApplicationAppVersionEventBuilder>
			version(version:string):Ref<ApplicationAppVersionEventBuilder>
			versionId(versionId:string):Ref<ApplicationAppVersionEventBuilder>
			appName(appName:string):Ref<ApplicationAppVersionEventBuilder>
			avatarUrl(avatarUrl:string):Ref<ApplicationAppVersionEventBuilder>
			description(description:string):Ref<ApplicationAppVersionEventBuilder>
			scopes(scopes:Ref<AppScope>[]):Ref<ApplicationAppVersionEventBuilder>
			backHomeUrl(backHomeUrl:string):Ref<ApplicationAppVersionEventBuilder>
			i18n(i18n:Ref<AppI18nInfo>[]):Ref<ApplicationAppVersionEventBuilder>
			commonCategories(commonCategories:string[]):Ref<ApplicationAppVersionEventBuilder>
			events(events:string[]):Ref<ApplicationAppVersionEventBuilder>
			status(status:int):Ref<ApplicationAppVersionEventBuilder>
			createTime(createTime:string):Ref<ApplicationAppVersionEventBuilder>
			publishTime(publishTime:string):Ref<ApplicationAppVersionEventBuilder>
			ability(ability:Ref<AppAbility>):Ref<ApplicationAppVersionEventBuilder>
			remark(remark:Ref<AppVersionRemarkEvent>):Ref<ApplicationAppVersionEventBuilder>
			build():Ref<ApplicationAppVersionEvent>
	}
	export interface ApplicationBuilder extends Struct<ApplicationBuilder>{

			appId(appId:string):Ref<ApplicationBuilder>
			creatorId(creatorId:string):Ref<ApplicationBuilder>
			status(status:int):Ref<ApplicationBuilder>
			sceneType(sceneType:int):Ref<ApplicationBuilder>
			paymentType(paymentType:int):Ref<ApplicationBuilder>
			createSource(createSource:string):Ref<ApplicationBuilder>
			redirectUrls(redirectUrls:string[]):Ref<ApplicationBuilder>
			onlineVersionId(onlineVersionId:string):Ref<ApplicationBuilder>
			unauditVersionId(unauditVersionId:string):Ref<ApplicationBuilder>
			appName(appName:string):Ref<ApplicationBuilder>
			avatarUrl(avatarUrl:string):Ref<ApplicationBuilder>
			description(description:string):Ref<ApplicationBuilder>
			scopes(scopes:Ref<AppScope>[]):Ref<ApplicationBuilder>
			backHomeUrl(backHomeUrl:string):Ref<ApplicationBuilder>
			i18n(i18n:Ref<AppI18nInfo>[]):Ref<ApplicationBuilder>
			primaryLanguage(primaryLanguage:string):Ref<ApplicationBuilder>
			commonCategories(commonCategories:string[]):Ref<ApplicationBuilder>
			owner(owner:Ref<ApplicationOwner>):Ref<ApplicationBuilder>
			mobileDefaultAbility(mobileDefaultAbility:string):Ref<ApplicationBuilder>
			pcDefaultAbility(pcDefaultAbility:string):Ref<ApplicationBuilder>
			build():Ref<Application>
	}
	export interface ApplicationDepartmentAppUsage extends Struct<ApplicationDepartmentAppUsage>{

			departmentId:Ref<string>
			app:Ref<ApplicationAppUsage>[]
			gadget:Ref<ApplicationAppUsage>[]
			webapp:Ref<ApplicationAppUsage>[]
			bot:Ref<ApplicationAppUsage>[]
	}
	export interface ApplicationDepartmentAppUsageBuilder extends Struct<ApplicationDepartmentAppUsageBuilder>{

			departmentId(departmentId:string):Ref<ApplicationDepartmentAppUsageBuilder>
			app(app:Ref<ApplicationAppUsage>[]):Ref<ApplicationDepartmentAppUsageBuilder>
			gadget(gadget:Ref<ApplicationAppUsage>[]):Ref<ApplicationDepartmentAppUsageBuilder>
			webapp(webapp:Ref<ApplicationAppUsage>[]):Ref<ApplicationDepartmentAppUsageBuilder>
			bot(bot:Ref<ApplicationAppUsage>[]):Ref<ApplicationDepartmentAppUsageBuilder>
			build():Ref<ApplicationDepartmentAppUsage>
	}
	export interface ApplicationEventOwner extends Struct<ApplicationEventOwner>{

			type:Ref<int>
			name:Ref<string>
			helpDesk:Ref<string>
			email:Ref<string>
			phone:Ref<string>
			ownerId:Ref<UserId>
			customerServiceAccount:Ref<string>
	}
	export interface ApplicationEventOwnerBuilder extends Struct<ApplicationEventOwnerBuilder>{

			type(type_:int):Ref<ApplicationEventOwnerBuilder>
			name(name:string):Ref<ApplicationEventOwnerBuilder>
			helpDesk(helpDesk:string):Ref<ApplicationEventOwnerBuilder>
			email(email:string):Ref<ApplicationEventOwnerBuilder>
			phone(phone:string):Ref<ApplicationEventOwnerBuilder>
			ownerId(ownerId:Ref<UserId>):Ref<ApplicationEventOwnerBuilder>
			customerServiceAccount(customerServiceAccount:string):Ref<ApplicationEventOwnerBuilder>
			build():Ref<ApplicationEventOwner>
	}
	export interface ApplicationFeedback extends Struct<ApplicationFeedback>{

			feedbackId:Ref<string>
			appId:Ref<string>
			feedbackTime:Ref<string>
			tenantName:Ref<string>
			feedbackType:Ref<int>
			status:Ref<int>
			faultType:int[]
			faultTime:Ref<string>
			source:Ref<int>
			contact:Ref<string>
			updateTime:Ref<string>
			description:Ref<string>
			userId:Ref<string>
			operatorId:Ref<string>
			images:string[]
			feedbackPath:Ref<string>
	}
	export interface ApplicationFeedbackBuilder extends Struct<ApplicationFeedbackBuilder>{

			feedbackId(feedbackId:string):Ref<ApplicationFeedbackBuilder>
			appId(appId:string):Ref<ApplicationFeedbackBuilder>
			feedbackTime(feedbackTime:string):Ref<ApplicationFeedbackBuilder>
			tenantName(tenantName:string):Ref<ApplicationFeedbackBuilder>
			feedbackType(feedbackType:int):Ref<ApplicationFeedbackBuilder>
			status(status:int):Ref<ApplicationFeedbackBuilder>
			faultType(faultType:int[]):Ref<ApplicationFeedbackBuilder>
			faultTime(faultTime:string):Ref<ApplicationFeedbackBuilder>
			source(source:int):Ref<ApplicationFeedbackBuilder>
			contact(contact:string):Ref<ApplicationFeedbackBuilder>
			updateTime(updateTime:string):Ref<ApplicationFeedbackBuilder>
			description(description:string):Ref<ApplicationFeedbackBuilder>
			userId(userId:string):Ref<ApplicationFeedbackBuilder>
			operatorId(operatorId:string):Ref<ApplicationFeedbackBuilder>
			images(images:string[]):Ref<ApplicationFeedbackBuilder>
			feedbackPath(feedbackPath:string):Ref<ApplicationFeedbackBuilder>
			build():Ref<ApplicationFeedback>
	}
	export interface ApplicationOwner extends Struct<ApplicationOwner>{

			type:Ref<int>
			ownerId:Ref<string>
			name:Ref<string>
			helpDesk:Ref<string>
			email:Ref<string>
			phone:Ref<string>
			customerServiceAccount:Ref<string>
	}
	export interface ApplicationOwnerBuilder extends Struct<ApplicationOwnerBuilder>{

			type(type_:int):Ref<ApplicationOwnerBuilder>
			ownerId(ownerId:string):Ref<ApplicationOwnerBuilder>
			name(name:string):Ref<ApplicationOwnerBuilder>
			helpDesk(helpDesk:string):Ref<ApplicationOwnerBuilder>
			email(email:string):Ref<ApplicationOwnerBuilder>
			phone(phone:string):Ref<ApplicationOwnerBuilder>
			customerServiceAccount(customerServiceAccount:string):Ref<ApplicationOwnerBuilder>
			build():Ref<ApplicationOwner>
	}
	export interface ApplicationVisibility extends Struct<ApplicationVisibility>{

			isAll:Ref<bool>
			visibleList:Ref<AppVisibleList>
			invisibleList:Ref<AppVisibleList>
	}
	export interface ApplicationVisibilityBuilder extends Struct<ApplicationVisibilityBuilder>{

			isAll(isAll:bool):Ref<ApplicationVisibilityBuilder>
			visibleList(visibleList:Ref<AppVisibleList>):Ref<ApplicationVisibilityBuilder>
			invisibleList(invisibleList:Ref<AppVisibleList>):Ref<ApplicationVisibilityBuilder>
			build():Ref<ApplicationVisibility>
	}
	export interface ApplicationVisibilityDepartmentWhiteBlackInfo extends Struct<ApplicationVisibilityDepartmentWhiteBlackInfo>{

			departmentId:Ref<string>
			inWhiteList:Ref<bool>
			inBlackList:Ref<bool>
	}
	export interface ApplicationVisibilityDepartmentWhiteBlackInfoBuilder extends Struct<ApplicationVisibilityDepartmentWhiteBlackInfoBuilder>{

			departmentId(departmentId:string):Ref<ApplicationVisibilityDepartmentWhiteBlackInfoBuilder>
			inWhiteList(inWhiteList:bool):Ref<ApplicationVisibilityDepartmentWhiteBlackInfoBuilder>
			inBlackList(inBlackList:bool):Ref<ApplicationVisibilityDepartmentWhiteBlackInfoBuilder>
			build():Ref<ApplicationVisibilityDepartmentWhiteBlackInfo>
	}
	export interface ApplicationVisibilityGroupWhiteBlackInfo extends Struct<ApplicationVisibilityGroupWhiteBlackInfo>{

			groupId:Ref<string>
			inWhiteList:Ref<bool>
			inBlackList:Ref<bool>
	}
	export interface ApplicationVisibilityGroupWhiteBlackInfoBuilder extends Struct<ApplicationVisibilityGroupWhiteBlackInfoBuilder>{

			groupId(groupId:string):Ref<ApplicationVisibilityGroupWhiteBlackInfoBuilder>
			inWhiteList(inWhiteList:bool):Ref<ApplicationVisibilityGroupWhiteBlackInfoBuilder>
			inBlackList(inBlackList:bool):Ref<ApplicationVisibilityGroupWhiteBlackInfoBuilder>
			build():Ref<ApplicationVisibilityGroupWhiteBlackInfo>
	}
	export interface ApplicationVisibilityUserWhiteBlackInfo extends Struct<ApplicationVisibilityUserWhiteBlackInfo>{

			userId:Ref<string>
			inWhiteList:Ref<bool>
			inBlackList:Ref<bool>
			inPaidList:Ref<bool>
	}
	export interface ApplicationVisibilityUserWhiteBlackInfoBuilder extends Struct<ApplicationVisibilityUserWhiteBlackInfoBuilder>{

			userId(userId:string):Ref<ApplicationVisibilityUserWhiteBlackInfoBuilder>
			inWhiteList(inWhiteList:bool):Ref<ApplicationVisibilityUserWhiteBlackInfoBuilder>
			inBlackList(inBlackList:bool):Ref<ApplicationVisibilityUserWhiteBlackInfoBuilder>
			inPaidList(inPaidList:bool):Ref<ApplicationVisibilityUserWhiteBlackInfoBuilder>
			build():Ref<ApplicationVisibilityUserWhiteBlackInfo>
	}
	export interface Block extends Struct<Block>{

			blockTypeId:Ref<string>
			versionId:Ref<string>
			i18n:Ref<BlockI18nInfo>[]
			mobileIconUrl:Ref<string>
			pcIconUrl:Ref<string>
	}
	export interface BlockBuilder extends Struct<BlockBuilder>{

			blockTypeId(blockTypeId:string):Ref<BlockBuilder>
			versionId(versionId:string):Ref<BlockBuilder>
			i18n(i18n:Ref<BlockI18nInfo>[]):Ref<BlockBuilder>
			mobileIconUrl(mobileIconUrl:string):Ref<BlockBuilder>
			pcIconUrl(pcIconUrl:string):Ref<BlockBuilder>
			build():Ref<Block>
	}
	export interface BlockI18nInfo extends Struct<BlockI18nInfo>{

			i18nKey:Ref<string>
			name:Ref<string>
	}
	export interface BlockI18nInfoBuilder extends Struct<BlockI18nInfoBuilder>{

			i18nKey(i18nKey:string):Ref<BlockI18nInfoBuilder>
			name(name:string):Ref<BlockI18nInfoBuilder>
			build():Ref<BlockI18nInfo>
	}
	export interface Bot extends Struct<Bot>{

			cardRequestUrl:Ref<string>
	}
	export interface BotBuilder extends Struct<BotBuilder>{

			cardRequestUrl(cardRequestUrl:string):Ref<BotBuilder>
			build():Ref<Bot>
	}
	export interface CheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder extends Struct<CheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder>{

			userIds(userIds:string[]):Ref<CheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder>
			departmentIds(departmentIds:string[]):Ref<CheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder>
			groupIds(groupIds:string[]):Ref<CheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder>
			build():Ref<CheckWhiteBlackListApplicationVisibilityReqBody>
	}
	export interface CheckWhiteBlackListApplicationVisibilityReq extends Struct<CheckWhiteBlackListApplicationVisibilityReq>{

			body:Ref<CheckWhiteBlackListApplicationVisibilityReqBody>
	}
	export interface CheckWhiteBlackListApplicationVisibilityReqBody extends Struct<CheckWhiteBlackListApplicationVisibilityReqBody>{

			userIds:string[]
			departmentIds:string[]
			groupIds:string[]
	}
	export interface CheckWhiteBlackListApplicationVisibilityReqBodyBuilder extends Struct<CheckWhiteBlackListApplicationVisibilityReqBodyBuilder>{

			userIds(userIds:string[]):Ref<CheckWhiteBlackListApplicationVisibilityReqBodyBuilder>
			departmentIds(departmentIds:string[]):Ref<CheckWhiteBlackListApplicationVisibilityReqBodyBuilder>
			groupIds(groupIds:string[]):Ref<CheckWhiteBlackListApplicationVisibilityReqBodyBuilder>
			build():Ref<CheckWhiteBlackListApplicationVisibilityReqBody>
	}
	export interface CheckWhiteBlackListApplicationVisibilityReqBuilder extends Struct<CheckWhiteBlackListApplicationVisibilityReqBuilder>{

			appId(appId:string):Ref<CheckWhiteBlackListApplicationVisibilityReqBuilder>
			userIdType(userIdType:string):Ref<CheckWhiteBlackListApplicationVisibilityReqBuilder>
			departmentIdType(departmentIdType:string):Ref<CheckWhiteBlackListApplicationVisibilityReqBuilder>
			body(body:Ref<CheckWhiteBlackListApplicationVisibilityReqBody>):Ref<CheckWhiteBlackListApplicationVisibilityReqBuilder>
			build():Ref<CheckWhiteBlackListApplicationVisibilityReq>
	}
	export interface CheckWhiteBlackListApplicationVisibilityResp extends Struct<CheckWhiteBlackListApplicationVisibilityResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CheckWhiteBlackListApplicationVisibilityRespData>
			success():bool
	}
	export interface CheckWhiteBlackListApplicationVisibilityRespData extends Struct<CheckWhiteBlackListApplicationVisibilityRespData>{

			userVisibilityList:Ref<ApplicationVisibilityUserWhiteBlackInfo>[]
			departmentVisibilityList:Ref<ApplicationVisibilityDepartmentWhiteBlackInfo>[]
			groupVisibilityList:Ref<ApplicationVisibilityGroupWhiteBlackInfo>[]
	}
	export interface ClientBadgeNum extends Struct<ClientBadgeNum>{

			webApp:Ref<int>
			gadget:Ref<int>
	}
	export interface ClientBadgeNumBuilder extends Struct<ClientBadgeNumBuilder>{

			webApp(webApp:int):Ref<ClientBadgeNumBuilder>
			gadget(gadget:int):Ref<ClientBadgeNumBuilder>
			build():Ref<ClientBadgeNum>
	}
	export interface CloudDoc extends Struct<CloudDoc>{

			spaceUrl:Ref<string>
			i18n:Ref<CloudDocI18nInfo>[]
			iconUrl:Ref<string>
			mode:Ref<int>
	}
	export interface CloudDocBuilder extends Struct<CloudDocBuilder>{

			spaceUrl(spaceUrl:string):Ref<CloudDocBuilder>
			i18n(i18n:Ref<CloudDocI18nInfo>[]):Ref<CloudDocBuilder>
			iconUrl(iconUrl:string):Ref<CloudDocBuilder>
			mode(mode:int):Ref<CloudDocBuilder>
			build():Ref<CloudDoc>
	}
	export interface CloudDocI18nInfo extends Struct<CloudDocI18nInfo>{

			i18nKey:Ref<string>
			name:Ref<string>
			readDescription:Ref<string>
			writeDescription:Ref<string>
	}
	export interface CloudDocI18nInfoBuilder extends Struct<CloudDocI18nInfoBuilder>{

			i18nKey(i18nKey:string):Ref<CloudDocI18nInfoBuilder>
			name(name:string):Ref<CloudDocI18nInfoBuilder>
			readDescription(readDescription:string):Ref<CloudDocI18nInfoBuilder>
			writeDescription(writeDescription:string):Ref<CloudDocI18nInfoBuilder>
			build():Ref<CloudDocI18nInfo>
	}
	export interface ContactsRangeConfigurationApplicationReq extends Struct<ContactsRangeConfigurationApplicationReq>{

	}
	export interface ContactsRangeConfigurationApplicationReqBuilder extends Struct<ContactsRangeConfigurationApplicationReqBuilder>{

			appId(appId:string):Ref<ContactsRangeConfigurationApplicationReqBuilder>
			pageSize(pageSize:int):Ref<ContactsRangeConfigurationApplicationReqBuilder>
			pageToken(pageToken:string):Ref<ContactsRangeConfigurationApplicationReqBuilder>
			departmentIdType(departmentIdType:string):Ref<ContactsRangeConfigurationApplicationReqBuilder>
			userIdType(userIdType:string):Ref<ContactsRangeConfigurationApplicationReqBuilder>
			build():Ref<ContactsRangeConfigurationApplicationReq>
	}
	export interface ContactsRangeConfigurationApplicationResp extends Struct<ContactsRangeConfigurationApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ContactsRangeConfigurationApplicationRespData>
			success():bool
	}
	export interface ContactsRangeConfigurationApplicationRespData extends Struct<ContactsRangeConfigurationApplicationRespData>{

			contactsRange:Ref<ApplicationAppContactsRange>
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface ContactsRangeSuggestApplicationAppVersionReq extends Struct<ContactsRangeSuggestApplicationAppVersionReq>{

	}
	export interface ContactsRangeSuggestApplicationAppVersionReqBuilder extends Struct<ContactsRangeSuggestApplicationAppVersionReqBuilder>{

			appId(appId:string):Ref<ContactsRangeSuggestApplicationAppVersionReqBuilder>
			versionId(versionId:string):Ref<ContactsRangeSuggestApplicationAppVersionReqBuilder>
			departmentIdType(departmentIdType:string):Ref<ContactsRangeSuggestApplicationAppVersionReqBuilder>
			userIdType(userIdType:string):Ref<ContactsRangeSuggestApplicationAppVersionReqBuilder>
			build():Ref<ContactsRangeSuggestApplicationAppVersionReq>
	}
	export interface ContactsRangeSuggestApplicationAppVersionResp extends Struct<ContactsRangeSuggestApplicationAppVersionResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ContactsRangeSuggestApplicationAppVersionRespData>
			success():bool
	}
	export interface ContactsRangeSuggestApplicationAppVersionRespData extends Struct<ContactsRangeSuggestApplicationAppVersionRespData>{

			contactsRange:Ref<ApplicationAppContactsRange>
	}
	//"all"
	export const ContactsRangeTypeAll:string
	//"equal_to_availability"
	export const ContactsRangeTypeEqualToAvailability:string
	//"some"
	export const ContactsRangeTypeSome:string
	//1
	export const CycleTypeDay:int
	//3
	export const CycleTypeMonth:int
	//1
	export const CycleTypeOverviewApplicationAppUsageDay:int
	//3
	export const CycleTypeOverviewApplicationAppUsageMonth:int
	//2
	export const CycleTypeOverviewApplicationAppUsageWeek:int
	//2
	export const CycleTypeWeek:int
	export interface DepartmentId extends Struct<DepartmentId>{

			departmentId:Ref<string>
			openDepartmentId:Ref<string>
	}
	export interface DepartmentIdBuilder extends Struct<DepartmentIdBuilder>{

			departmentId(departmentId:string):Ref<DepartmentIdBuilder>
			openDepartmentId(openDepartmentId:string):Ref<DepartmentIdBuilder>
			build():Ref<DepartmentId>
	}
	//"department_id"
	export const DepartmentIdTypeCheckWhiteBlackListApplicationVisibilityDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeCheckWhiteBlackListApplicationVisibilityOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeContactsRangeSuggestApplicationAppVersionDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeContactsRangeSuggestApplicationAppVersionOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeDepartmentOverviewApplicationAppUsageDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeDepartmentOverviewApplicationAppUsageOpenDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypeOverviewApplicationAppUsageDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypeOverviewApplicationAppUsageOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypePatchApplicationContactsRangeDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypePatchApplicationContactsRangeOpenDepartmentId:string
	//"department_id"
	export const DepartmentIdTypePatchApplicationVisibilityDepartmentId:string
	//"open_department_id"
	export const DepartmentIdTypePatchApplicationVisibilityOpenDepartmentId:string
	export interface DepartmentOverviewApplicationAppUsagePathReqBodyBuilder extends Struct<DepartmentOverviewApplicationAppUsagePathReqBodyBuilder>{

			date(date:string):Ref<DepartmentOverviewApplicationAppUsagePathReqBodyBuilder>
			cycleType(cycleType:int):Ref<DepartmentOverviewApplicationAppUsagePathReqBodyBuilder>
			departmentId(departmentId:string):Ref<DepartmentOverviewApplicationAppUsagePathReqBodyBuilder>
			recursion(recursion:int):Ref<DepartmentOverviewApplicationAppUsagePathReqBodyBuilder>
			pageSize(pageSize:int):Ref<DepartmentOverviewApplicationAppUsagePathReqBodyBuilder>
			pageToken(pageToken:string):Ref<DepartmentOverviewApplicationAppUsagePathReqBodyBuilder>
			build():Ref<DepartmentOverviewApplicationAppUsageReqBody>
	}
	export interface DepartmentOverviewApplicationAppUsageReq extends Struct<DepartmentOverviewApplicationAppUsageReq>{

			body:Ref<DepartmentOverviewApplicationAppUsageReqBody>
	}
	export interface DepartmentOverviewApplicationAppUsageReqBody extends Struct<DepartmentOverviewApplicationAppUsageReqBody>{

			date:Ref<string>
			cycleType:Ref<int>
			departmentId:Ref<string>
			recursion:Ref<int>
			pageSize:Ref<int>
			pageToken:Ref<string>
	}
	export interface DepartmentOverviewApplicationAppUsageReqBodyBuilder extends Struct<DepartmentOverviewApplicationAppUsageReqBodyBuilder>{

			date(date:string):Ref<DepartmentOverviewApplicationAppUsageReqBodyBuilder>
			cycleType(cycleType:int):Ref<DepartmentOverviewApplicationAppUsageReqBodyBuilder>
			departmentId(departmentId:string):Ref<DepartmentOverviewApplicationAppUsageReqBodyBuilder>
			recursion(recursion:int):Ref<DepartmentOverviewApplicationAppUsageReqBodyBuilder>
			pageSize(pageSize:int):Ref<DepartmentOverviewApplicationAppUsageReqBodyBuilder>
			pageToken(pageToken:string):Ref<DepartmentOverviewApplicationAppUsageReqBodyBuilder>
			build():Ref<DepartmentOverviewApplicationAppUsageReqBody>
	}
	export interface DepartmentOverviewApplicationAppUsageReqBuilder extends Struct<DepartmentOverviewApplicationAppUsageReqBuilder>{

			appId(appId:string):Ref<DepartmentOverviewApplicationAppUsageReqBuilder>
			departmentIdType(departmentIdType:string):Ref<DepartmentOverviewApplicationAppUsageReqBuilder>
			body(body:Ref<DepartmentOverviewApplicationAppUsageReqBody>):Ref<DepartmentOverviewApplicationAppUsageReqBuilder>
			build():Ref<DepartmentOverviewApplicationAppUsageReq>
	}
	export interface DepartmentOverviewApplicationAppUsageResp extends Struct<DepartmentOverviewApplicationAppUsageResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<DepartmentOverviewApplicationAppUsageRespData>
			success():bool
	}
	export interface DepartmentOverviewApplicationAppUsageRespData extends Struct<DepartmentOverviewApplicationAppUsageRespData>{

			hasMore:Ref<bool>
			pageToken:Ref<string>
			items:Ref<ApplicationDepartmentAppUsage>[]
	}
	export interface DocsBlock extends Struct<DocsBlock>{

			blockTypeId:Ref<string>
			i18n:Ref<BlockI18nInfo>[]
			mobileIconUrl:Ref<string>
			pcIconUrl:Ref<string>
	}
	export interface DocsBlockBuilder extends Struct<DocsBlockBuilder>{

			blockTypeId(blockTypeId:string):Ref<DocsBlockBuilder>
			i18n(i18n:Ref<BlockI18nInfo>[]):Ref<DocsBlockBuilder>
			mobileIconUrl(mobileIconUrl:string):Ref<DocsBlockBuilder>
			pcIconUrl(pcIconUrl:string):Ref<DocsBlockBuilder>
			build():Ref<DocsBlock>
	}
	export interface Event extends Struct<Event>{

			eventType:Ref<string>
			eventName:Ref<string>
			eventDescription:Ref<string>
	}
	export interface EventAndCallbackEncryptStrategy extends Struct<EventAndCallbackEncryptStrategy>{

			encryptionKey:Ref<string>
			verificationToken:Ref<string>
	}
	export interface EventAndCallbackEncryptStrategyBuilder extends Struct<EventAndCallbackEncryptStrategyBuilder>{

			encryptionKey(encryptionKey:string):Ref<EventAndCallbackEncryptStrategyBuilder>
			verificationToken(verificationToken:string):Ref<EventAndCallbackEncryptStrategyBuilder>
			build():Ref<EventAndCallbackEncryptStrategy>
	}
	export interface EventBuilder extends Struct<EventBuilder>{

			eventType(eventType:string):Ref<EventBuilder>
			eventName(eventName:string):Ref<EventBuilder>
			eventDescription(eventDescription:string):Ref<EventBuilder>
			build():Ref<Event>
	}
	export interface Gadget extends Struct<Gadget>{

			enablePcMode:Ref<int>
			schemaUrls:string[]
			pcUseMobilePkg:Ref<bool>
			pcVersion:Ref<string>
			mobileVersion:Ref<string>
			mobileMinLarkVersion:Ref<string>
			pcMinLarkVersion:Ref<string>
	}
	export interface GadgetBuilder extends Struct<GadgetBuilder>{

			enablePcMode(enablePcMode:int):Ref<GadgetBuilder>
			schemaUrls(schemaUrls:string[]):Ref<GadgetBuilder>
			pcUseMobilePkg(pcUseMobilePkg:bool):Ref<GadgetBuilder>
			pcVersion(pcVersion:string):Ref<GadgetBuilder>
			mobileVersion(mobileVersion:string):Ref<GadgetBuilder>
			mobileMinLarkVersion(mobileMinLarkVersion:string):Ref<GadgetBuilder>
			pcMinLarkVersion(pcMinLarkVersion:string):Ref<GadgetBuilder>
			build():Ref<Gadget>
	}
	export interface GetApplicationAppVersionReq extends Struct<GetApplicationAppVersionReq>{

	}
	export interface GetApplicationAppVersionReqBuilder extends Struct<GetApplicationAppVersionReqBuilder>{

			appId(appId:string):Ref<GetApplicationAppVersionReqBuilder>
			versionId(versionId:string):Ref<GetApplicationAppVersionReqBuilder>
			lang(lang:string):Ref<GetApplicationAppVersionReqBuilder>
			userIdType(userIdType:string):Ref<GetApplicationAppVersionReqBuilder>
			build():Ref<GetApplicationAppVersionReq>
	}
	export interface GetApplicationAppVersionResp extends Struct<GetApplicationAppVersionResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetApplicationAppVersionRespData>
			success():bool
	}
	export interface GetApplicationAppVersionRespData extends Struct<GetApplicationAppVersionRespData>{

			appVersion:Ref<ApplicationAppVersion>
	}
	export interface GetApplicationReq extends Struct<GetApplicationReq>{

	}
	export interface GetApplicationReqBuilder extends Struct<GetApplicationReqBuilder>{

			appId(appId:string):Ref<GetApplicationReqBuilder>
			lang(lang:string):Ref<GetApplicationReqBuilder>
			userIdType(userIdType:string):Ref<GetApplicationReqBuilder>
			build():Ref<GetApplicationReq>
	}
	export interface GetApplicationResp extends Struct<GetApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetApplicationRespData>
			success():bool
	}
	export interface GetApplicationRespData extends Struct<GetApplicationRespData>{

			app:Ref<Application>
	}
	//"en_us"
	export const I18nKeyEnUs:string
	//"en_us"
	export const I18nKeyGetApplicationAppVersionEnUs:string
	//"ja_jp"
	export const I18nKeyGetApplicationAppVersionJaJp:string
	//"zh_cn"
	export const I18nKeyGetApplicationAppVersionZhCn:string
	//"ja_jp"
	export const I18nKeyJaJp:string
	//"en_us"
	export const I18nKeyListApplicationAppVersionEnUs:string
	//"ja_jp"
	export const I18nKeyListApplicationAppVersionJaJp:string
	//"zh_cn"
	export const I18nKeyListApplicationAppVersionZhCn:string
	//"en_us"
	export const I18nKeyPatchApplicationEnUs:string
	//"ja_jp"
	export const I18nKeyPatchApplicationJaJp:string
	//"zh_cn"
	export const I18nKeyPatchApplicationZhCn:string
	//"en_us"
	export const I18nKeyUnderauditlistApplicationEnUs:string
	//"ja_jp"
	export const I18nKeyUnderauditlistApplicationJaJp:string
	//"zh_cn"
	export const I18nKeyUnderauditlistApplicationZhCn:string
	//"zh_cn"
	export const I18nKeyZhCn:string
	export interface ListAppRecommendRuleIterator extends Struct<ListAppRecommendRuleIterator>{

			next():[bool,Ref<AppRecommendRule>]
			nextPageToken():Ref<string>
	}
	export interface ListAppRecommendRuleReq extends Struct<ListAppRecommendRuleReq>{

			limit:int
	}
	export interface ListAppRecommendRuleReqBuilder extends Struct<ListAppRecommendRuleReqBuilder>{

			limit(limit:int):Ref<ListAppRecommendRuleReqBuilder>
			pageSize(pageSize:int):Ref<ListAppRecommendRuleReqBuilder>
			pageToken(pageToken:string):Ref<ListAppRecommendRuleReqBuilder>
			userIdType(userIdType:string):Ref<ListAppRecommendRuleReqBuilder>
			build():Ref<ListAppRecommendRuleReq>
	}
	export interface ListAppRecommendRuleResp extends Struct<ListAppRecommendRuleResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListAppRecommendRuleRespData>
			success():bool
	}
	export interface ListAppRecommendRuleRespData extends Struct<ListAppRecommendRuleRespData>{

			rules:Ref<AppRecommendRule>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface ListApplicationAppVersionIterator extends Struct<ListApplicationAppVersionIterator>{

			next():[bool,Ref<ApplicationAppVersion>]
			nextPageToken():Ref<string>
	}
	export interface ListApplicationAppVersionReq extends Struct<ListApplicationAppVersionReq>{

			limit:int
	}
	export interface ListApplicationAppVersionReqBuilder extends Struct<ListApplicationAppVersionReqBuilder>{

			limit(limit:int):Ref<ListApplicationAppVersionReqBuilder>
			appId(appId:string):Ref<ListApplicationAppVersionReqBuilder>
			lang(lang:string):Ref<ListApplicationAppVersionReqBuilder>
			pageSize(pageSize:int):Ref<ListApplicationAppVersionReqBuilder>
			pageToken(pageToken:string):Ref<ListApplicationAppVersionReqBuilder>
			order(order:int):Ref<ListApplicationAppVersionReqBuilder>
			userIdType(userIdType:string):Ref<ListApplicationAppVersionReqBuilder>
			build():Ref<ListApplicationAppVersionReq>
	}
	export interface ListApplicationAppVersionResp extends Struct<ListApplicationAppVersionResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListApplicationAppVersionRespData>
			success():bool
	}
	export interface ListApplicationAppVersionRespData extends Struct<ListApplicationAppVersionRespData>{

			items:Ref<ApplicationAppVersion>[]
			pageToken:Ref<string>
			hasMore:Ref<bool>
	}
	export interface ListApplicationFeedbackReq extends Struct<ListApplicationFeedbackReq>{

	}
	export interface ListApplicationFeedbackReqBuilder extends Struct<ListApplicationFeedbackReqBuilder>{

			appId(appId:string):Ref<ListApplicationFeedbackReqBuilder>
			fromDate(fromDate:string):Ref<ListApplicationFeedbackReqBuilder>
			toDate(toDate:string):Ref<ListApplicationFeedbackReqBuilder>
			feedbackType(feedbackType:int):Ref<ListApplicationFeedbackReqBuilder>
			status(status:int):Ref<ListApplicationFeedbackReqBuilder>
			userIdType(userIdType:string):Ref<ListApplicationFeedbackReqBuilder>
			pageToken(pageToken:string):Ref<ListApplicationFeedbackReqBuilder>
			pageSize(pageSize:int):Ref<ListApplicationFeedbackReqBuilder>
			build():Ref<ListApplicationFeedbackReq>
	}
	export interface ListApplicationFeedbackResp extends Struct<ListApplicationFeedbackResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<ListApplicationFeedbackRespData>
			success():bool
	}
	export interface ListApplicationFeedbackRespData extends Struct<ListApplicationFeedbackRespData>{

			feedbackList:Ref<ApplicationFeedback>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface MessageAction extends Struct<MessageAction>{

			pcAppLink:Ref<string>
			mobileAppLink:Ref<string>
			i18n:Ref<MessageActionI18nInfo>[]
	}
	export interface MessageActionBuilder extends Struct<MessageActionBuilder>{

			pcAppLink(pcAppLink:string):Ref<MessageActionBuilder>
			mobileAppLink(mobileAppLink:string):Ref<MessageActionBuilder>
			i18n(i18n:Ref<MessageActionI18nInfo>[]):Ref<MessageActionBuilder>
			build():Ref<MessageAction>
	}
	export interface MessageActionI18nInfo extends Struct<MessageActionI18nInfo>{

			i18nKey:Ref<string>
			name:Ref<string>
	}
	export interface MessageActionI18nInfoBuilder extends Struct<MessageActionI18nInfoBuilder>{

			i18nKey(i18nKey:string):Ref<MessageActionI18nInfoBuilder>
			name(name:string):Ref<MessageActionI18nInfoBuilder>
			build():Ref<MessageActionI18nInfo>
	}
	export interface MessageOverviewItem extends Struct<MessageOverviewItem>{

			pageView:Ref<string>
			uniqueVisitor:Ref<string>
			chatType:Ref<string>
			messageType:Ref<string>
			eventType:Ref<string>
	}
	export interface MessageOverviewItemBuilder extends Struct<MessageOverviewItemBuilder>{

			pageView(pageView:string):Ref<MessageOverviewItemBuilder>
			uniqueVisitor(uniqueVisitor:string):Ref<MessageOverviewItemBuilder>
			chatType(chatType:string):Ref<MessageOverviewItemBuilder>
			messageType(messageType:string):Ref<MessageOverviewItemBuilder>
			eventType(eventType:string):Ref<MessageOverviewItemBuilder>
			build():Ref<MessageOverviewItem>
	}
	export interface Miniprogram extends Struct<Miniprogram>{

			enablePcMode:Ref<int>
			schemaUrls:string[]
			pcUseMobilePkg:Ref<bool>
			pcVersionId:Ref<string>
			mobileVersionId:Ref<string>
			mobileMinLarkVersion:Ref<string>
			pcMinLarkVersion:Ref<string>
	}
	export interface MiniprogramBuilder extends Struct<MiniprogramBuilder>{

			enablePcMode(enablePcMode:int):Ref<MiniprogramBuilder>
			schemaUrls(schemaUrls:string[]):Ref<MiniprogramBuilder>
			pcUseMobilePkg(pcUseMobilePkg:bool):Ref<MiniprogramBuilder>
			pcVersionId(pcVersionId:string):Ref<MiniprogramBuilder>
			mobileVersionId(mobileVersionId:string):Ref<MiniprogramBuilder>
			mobileMinLarkVersion(mobileMinLarkVersion:string):Ref<MiniprogramBuilder>
			pcMinLarkVersion(pcMinLarkVersion:string):Ref<MiniprogramBuilder>
			build():Ref<Miniprogram>
	}
	export interface MsgAction extends Struct<MsgAction>{

			pcAppLink:Ref<string>
			mobileAppLink:Ref<string>
			i18n:Ref<MsgActionI18nInfo>[]
	}
	export interface MsgActionBuilder extends Struct<MsgActionBuilder>{

			pcAppLink(pcAppLink:string):Ref<MsgActionBuilder>
			mobileAppLink(mobileAppLink:string):Ref<MsgActionBuilder>
			i18n(i18n:Ref<MsgActionI18nInfo>[]):Ref<MsgActionBuilder>
			build():Ref<MsgAction>
	}
	export interface MsgActionI18nInfo extends Struct<MsgActionI18nInfo>{

			i18nKey:Ref<string>
			name:Ref<string>
	}
	export interface MsgActionI18nInfoBuilder extends Struct<MsgActionI18nInfoBuilder>{

			i18nKey(i18nKey:string):Ref<MsgActionI18nInfoBuilder>
			name(name:string):Ref<MsgActionI18nInfoBuilder>
			build():Ref<MsgActionI18nInfo>
	}
	export interface Navigate extends Struct<Navigate>{

			pc:Ref<NavigateMeta>
			mobile:Ref<NavigateMeta>
	}
	export interface NavigateBuilder extends Struct<NavigateBuilder>{

			pc(pc:Ref<NavigateMeta>):Ref<NavigateBuilder>
			mobile(mobile:Ref<NavigateMeta>):Ref<NavigateBuilder>
			build():Ref<Navigate>
	}
	export interface NavigateMeta extends Struct<NavigateMeta>{

			version:Ref<string>
			imageUrl:Ref<string>
			hoverImageUrl:Ref<string>
	}
	export interface NavigateMetaBuilder extends Struct<NavigateMetaBuilder>{

			version(version:string):Ref<NavigateMetaBuilder>
			imageUrl(imageUrl:string):Ref<NavigateMetaBuilder>
			hoverImageUrl(hoverImageUrl:string):Ref<NavigateMetaBuilder>
			build():Ref<NavigateMeta>
	}
	export function New(config:Ref<larkcore.Config>):Ref<V6>

	export function newAccessibilityBuilder():Ref<AccessibilityBuilder>

	export function newAppAbilityBotBuilder():Ref<AppAbilityBotBuilder>

	export function newAppAbilityBotI18nBuilder():Ref<AppAbilityBotI18nBuilder>

	export function newAppAbilityBuilder():Ref<AppAbilityBuilder>

	export function newAppAbilityWebBuilder():Ref<AppAbilityWebBuilder>

	export function newAppAdminUserBuilder():Ref<AppAdminUserBuilder>

	export function newAppBadgeBuilder():Ref<AppBadgeBuilder>

	export function newAppCollaboratorBuilder():Ref<AppCollaboratorBuilder>

	export function newAppCommonCategoryBuilder():Ref<AppCommonCategoryBuilder>

	export function newAppConfigContactsRangeBuilder():Ref<AppConfigContactsRangeBuilder>

	export function newAppConfigEventBuilder():Ref<AppConfigEventBuilder>

	export function newAppConfigScopeBuilder():Ref<AppConfigScopeBuilder>

	export function newAppConfigScopeItemBuilder():Ref<AppConfigScopeItemBuilder>

	export function newAppConfigSecurityBuilder():Ref<AppConfigSecurityBuilder>

	export function newAppConfigSecurityItemBuilder():Ref<AppConfigSecurityItemBuilder>

	export function newAppConfigVisibilityBuilder():Ref<AppConfigVisibilityBuilder>

	export function newAppContactsRangeIdListBuilder():Ref<AppContactsRangeIdListBuilder>

	export function newAppCustomCategoryBuilder():Ref<AppCustomCategoryBuilder>

	export function newAppCustomCategoryI18nInfoBuilder():Ref<AppCustomCategoryI18nInfoBuilder>

	export function newAppI18nInfoBuilder():Ref<AppI18nInfoBuilder>

	export function newAppMessageTrendItemBuilder():Ref<AppMessageTrendItemBuilder>

	export function newAppRecommendRuleBuilder():Ref<AppRecommendRuleBuilder>

	export function newAppRecommendRuleItemInfoBuilder():Ref<AppRecommendRuleItemInfoBuilder>

	export function newAppRecommendRuleItemInfoI18nNameBuilder():Ref<AppRecommendRuleItemInfoI18nNameBuilder>

	export function newAppRecommendRuleVisibilityInfoBuilder():Ref<AppRecommendRuleVisibilityInfoBuilder>

	export function newAppScopeBuilder():Ref<AppScopeBuilder>

	export function newAppScopeI18nInfoBuilder():Ref<AppScopeI18nInfoBuilder>

	export function newAppScopesBuilder():Ref<AppScopesBuilder>

	export function newAppUsageTrendItemsBuilder():Ref<AppUsageTrendItemsBuilder>

	export function newAppVersionIdBuilder():Ref<AppVersionIdBuilder>

	export function newAppVersionRemarkBuilder():Ref<AppVersionRemarkBuilder>

	export function newAppVersionRemarkEventBuilder():Ref<AppVersionRemarkEventBuilder>

	export function newAppVisibilityBuilder():Ref<AppVisibilityBuilder>

	export function newAppVisibilityEventBuilder():Ref<AppVisibilityEventBuilder>

	export function newAppVisibilityIdListBuilder():Ref<AppVisibilityIdListBuilder>

	export function newAppVisibilityItemBuilder():Ref<AppVisibilityItemBuilder>

	export function newAppVisibleListBuilder():Ref<AppVisibleListBuilder>

	export function newAppVisibleListEventBuilder():Ref<AppVisibleListEventBuilder>

	export function newApplicationAppContactsRangeBuilder():Ref<ApplicationAppContactsRangeBuilder>

	export function newApplicationAppUsageBuilder():Ref<ApplicationAppUsageBuilder>

	export function newApplicationAppVersionBuilder():Ref<ApplicationAppVersionBuilder>

	export function newApplicationAppVersionEventBuilder():Ref<ApplicationAppVersionEventBuilder>

	export function newApplicationBuilder():Ref<ApplicationBuilder>

	export function newApplicationDepartmentAppUsageBuilder():Ref<ApplicationDepartmentAppUsageBuilder>

	export function newApplicationEventOwnerBuilder():Ref<ApplicationEventOwnerBuilder>

	export function newApplicationFeedbackBuilder():Ref<ApplicationFeedbackBuilder>

	export function newApplicationOwnerBuilder():Ref<ApplicationOwnerBuilder>

	export function newApplicationVisibilityBuilder():Ref<ApplicationVisibilityBuilder>

	export function newApplicationVisibilityDepartmentWhiteBlackInfoBuilder():Ref<ApplicationVisibilityDepartmentWhiteBlackInfoBuilder>

	export function newApplicationVisibilityGroupWhiteBlackInfoBuilder():Ref<ApplicationVisibilityGroupWhiteBlackInfoBuilder>

	export function newApplicationVisibilityUserWhiteBlackInfoBuilder():Ref<ApplicationVisibilityUserWhiteBlackInfoBuilder>

	export function newBlockBuilder():Ref<BlockBuilder>

	export function newBlockI18nInfoBuilder():Ref<BlockI18nInfoBuilder>

	export function newBotBuilder():Ref<BotBuilder>

	export function newCheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder():Ref<CheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder>

	export function newCheckWhiteBlackListApplicationVisibilityReqBodyBuilder():Ref<CheckWhiteBlackListApplicationVisibilityReqBodyBuilder>

	export function newCheckWhiteBlackListApplicationVisibilityReqBuilder():Ref<CheckWhiteBlackListApplicationVisibilityReqBuilder>

	export function newClientBadgeNumBuilder():Ref<ClientBadgeNumBuilder>

	export function newCloudDocBuilder():Ref<CloudDocBuilder>

	export function newCloudDocI18nInfoBuilder():Ref<CloudDocI18nInfoBuilder>

	export function newContactsRangeConfigurationApplicationReqBuilder():Ref<ContactsRangeConfigurationApplicationReqBuilder>

	export function newContactsRangeSuggestApplicationAppVersionReqBuilder():Ref<ContactsRangeSuggestApplicationAppVersionReqBuilder>

	export function newDepartmentIdBuilder():Ref<DepartmentIdBuilder>

	export function newDepartmentOverviewApplicationAppUsagePathReqBodyBuilder():Ref<DepartmentOverviewApplicationAppUsagePathReqBodyBuilder>

	export function newDepartmentOverviewApplicationAppUsageReqBodyBuilder():Ref<DepartmentOverviewApplicationAppUsageReqBodyBuilder>

	export function newDepartmentOverviewApplicationAppUsageReqBuilder():Ref<DepartmentOverviewApplicationAppUsageReqBuilder>

	export function newDocsBlockBuilder():Ref<DocsBlockBuilder>

	export function newEventAndCallbackEncryptStrategyBuilder():Ref<EventAndCallbackEncryptStrategyBuilder>

	export function newEventBuilder():Ref<EventBuilder>

	export function newGadgetBuilder():Ref<GadgetBuilder>

	export function newGetApplicationAppVersionReqBuilder():Ref<GetApplicationAppVersionReqBuilder>

	export function newGetApplicationReqBuilder():Ref<GetApplicationReqBuilder>

	export function newListAppRecommendRuleReqBuilder():Ref<ListAppRecommendRuleReqBuilder>

	export function newListApplicationAppVersionReqBuilder():Ref<ListApplicationAppVersionReqBuilder>

	export function newListApplicationFeedbackReqBuilder():Ref<ListApplicationFeedbackReqBuilder>

	export function newMessageActionBuilder():Ref<MessageActionBuilder>

	export function newMessageActionI18nInfoBuilder():Ref<MessageActionI18nInfoBuilder>

	export function newMessageOverviewItemBuilder():Ref<MessageOverviewItemBuilder>

	export function newMiniprogramBuilder():Ref<MiniprogramBuilder>

	export function newMsgActionBuilder():Ref<MsgActionBuilder>

	export function newMsgActionI18nInfoBuilder():Ref<MsgActionI18nInfoBuilder>

	export function newNavigateBuilder():Ref<NavigateBuilder>

	export function newNavigateMetaBuilder():Ref<NavigateMetaBuilder>

	export function newOpenapiOptionBuilder():Ref<OpenapiOptionBuilder>

	export function newOperatorBuilder():Ref<OperatorBuilder>

	export function newOverviewApplicationAppUsagePathReqBodyBuilder():Ref<OverviewApplicationAppUsagePathReqBodyBuilder>

	export function newOverviewApplicationAppUsageReqBodyBuilder():Ref<OverviewApplicationAppUsageReqBodyBuilder>

	export function newOverviewApplicationAppUsageReqBuilder():Ref<OverviewApplicationAppUsageReqBuilder>

	export function newP1AppOpenV6Handler(v1:(v2:context.Context,v1:Ref<P1AppOpenV6>))=>void/*error*/):Ref<P1AppOpenV6Handler>

	export function newP1AppStatusChangedV6Handler(v1:(v2:context.Context,v1:Ref<P1AppStatusChangedV6>))=>void/*error*/):Ref<P1AppStatusChangedV6Handler>

	export function newP1AppUninstalledV6Handler(v1:(v2:context.Context,v1:Ref<P1AppUninstalledV6>))=>void/*error*/):Ref<P1AppUninstalledV6Handler>

	export function newP1OrderPaidV6Handler(v1:(v2:context.Context,v1:Ref<P1OrderPaidV6>))=>void/*error*/):Ref<P1OrderPaidV6Handler>

	export function newP2ApplicationAppVersionAuditV6Handler(v1:(v2:context.Context,v1:Ref<P2ApplicationAppVersionAuditV6>))=>void/*error*/):Ref<P2ApplicationAppVersionAuditV6Handler>

	export function newP2ApplicationAppVersionPublishApplyV6Handler(v1:(v2:context.Context,v1:Ref<P2ApplicationAppVersionPublishApplyV6>))=>void/*error*/):Ref<P2ApplicationAppVersionPublishApplyV6Handler>

	export function newP2ApplicationAppVersionPublishRevokeV6Handler(v1:(v2:context.Context,v1:Ref<P2ApplicationAppVersionPublishRevokeV6>))=>void/*error*/):Ref<P2ApplicationAppVersionPublishRevokeV6Handler>

	export function newP2ApplicationCreatedV6Handler(v1:(v2:context.Context,v1:Ref<P2ApplicationCreatedV6>))=>void/*error*/):Ref<P2ApplicationCreatedV6Handler>

	export function newP2ApplicationFeedbackCreatedV6Handler(v1:(v2:context.Context,v1:Ref<P2ApplicationFeedbackCreatedV6>))=>void/*error*/):Ref<P2ApplicationFeedbackCreatedV6Handler>

	export function newP2ApplicationFeedbackUpdatedV6Handler(v1:(v2:context.Context,v1:Ref<P2ApplicationFeedbackUpdatedV6>))=>void/*error*/):Ref<P2ApplicationFeedbackUpdatedV6Handler>

	export function newP2ApplicationVisibilityAddedV6Handler(v1:(v2:context.Context,v1:Ref<P2ApplicationVisibilityAddedV6>))=>void/*error*/):Ref<P2ApplicationVisibilityAddedV6Handler>

	export function newP2BotMenuV6Handler(v1:(v2:context.Context,v1:Ref<P2BotMenuV6>))=>void/*error*/):Ref<P2BotMenuV6Handler>

	export function newPatchApplicationAppVersionReqBuilder():Ref<PatchApplicationAppVersionReqBuilder>

	export function newPatchApplicationContactsRangePathReqBodyBuilder():Ref<PatchApplicationContactsRangePathReqBodyBuilder>

	export function newPatchApplicationContactsRangeReqBodyBuilder():Ref<PatchApplicationContactsRangeReqBodyBuilder>

	export function newPatchApplicationContactsRangeReqBuilder():Ref<PatchApplicationContactsRangeReqBuilder>

	export function newPatchApplicationFeedbackReqBuilder():Ref<PatchApplicationFeedbackReqBuilder>

	export function newPatchApplicationReqBuilder():Ref<PatchApplicationReqBuilder>

	export function newPatchApplicationVisibilityPathReqBodyBuilder():Ref<PatchApplicationVisibilityPathReqBodyBuilder>

	export function newPatchApplicationVisibilityReqBodyBuilder():Ref<PatchApplicationVisibilityReqBodyBuilder>

	export function newPatchApplicationVisibilityReqBuilder():Ref<PatchApplicationVisibilityReqBuilder>

	export function newPlusMenuBuilder():Ref<PlusMenuBuilder>

	export function newScopeBuilder():Ref<ScopeBuilder>

	export function newSetAppBadgeReqBuilder():Ref<SetAppBadgeReqBuilder>

	export function newUnderauditlistApplicationReqBuilder():Ref<UnderauditlistApplicationReqBuilder>

	export function newUpdateApplicationManagementPathReqBodyBuilder():Ref<UpdateApplicationManagementPathReqBodyBuilder>

	export function newUpdateApplicationManagementReqBodyBuilder():Ref<UpdateApplicationManagementReqBodyBuilder>

	export function newUpdateApplicationManagementReqBuilder():Ref<UpdateApplicationManagementReqBuilder>

	export function newUsageOverviewItemBuilder():Ref<UsageOverviewItemBuilder>

	export function newUsageTrendItemBuilder():Ref<UsageTrendItemBuilder>

	export function newUsageUserBuilder():Ref<UsageUserBuilder>

	export function newUserBuilder():Ref<UserBuilder>

	export function newUserIdBuilder():Ref<UserIdBuilder>

	export function newWebAppBuilder():Ref<WebAppBuilder>

	export function newWorkplaceWidgetBuilder():Ref<WorkplaceWidgetBuilder>

	//2
	export const OpenFeedbackTypeAdvice:int
	//1
	export const OpenFeedbackTypeFault:int
	//3
	export const OpenMarkStatusClosed:int
	//1
	export const OpenMarkStatusMarked:int
	//3
	export const OpenMarkStatusPatchApplicationFeedbackClosed:int
	//1
	export const OpenMarkStatusPatchApplicationFeedbackMarked:int
	//2
	export const OpenMarkStatusPatchApplicationFeedbackProcessing:int
	//0
	export const OpenMarkStatusPatchApplicationFeedbackUnmarked:int
	//2
	export const OpenMarkStatusProcessing:int
	//0
	export const OpenMarkStatusUnmarked:int
	export interface OpenapiOption extends Struct<OpenapiOption>{

			httpMethod:Ref<string>
			urlPattern:Ref<string>
			accessibility:Ref<Accessibility>
	}
	export interface OpenapiOptionBuilder extends Struct<OpenapiOptionBuilder>{

			httpMethod(httpMethod:string):Ref<OpenapiOptionBuilder>
			urlPattern(urlPattern:string):Ref<OpenapiOptionBuilder>
			accessibility(accessibility:Ref<Accessibility>):Ref<OpenapiOptionBuilder>
			build():Ref<OpenapiOption>
	}
	export interface Operator extends Struct<Operator>{

			operatorName:Ref<string>
			operatorId:Ref<UserId>
	}
	export interface OperatorBuilder extends Struct<OperatorBuilder>{

			operatorName(operatorName:string):Ref<OperatorBuilder>
			operatorId(operatorId:Ref<UserId>):Ref<OperatorBuilder>
			build():Ref<Operator>
	}
	export interface OverviewApplicationAppUsagePathReqBodyBuilder extends Struct<OverviewApplicationAppUsagePathReqBodyBuilder>{

			date(date:string):Ref<OverviewApplicationAppUsagePathReqBodyBuilder>
			cycleType(cycleType:int):Ref<OverviewApplicationAppUsagePathReqBodyBuilder>
			departmentId(departmentId:string):Ref<OverviewApplicationAppUsagePathReqBodyBuilder>
			ability(ability:string):Ref<OverviewApplicationAppUsagePathReqBodyBuilder>
			build():Ref<OverviewApplicationAppUsageReqBody>
	}
	export interface OverviewApplicationAppUsageReq extends Struct<OverviewApplicationAppUsageReq>{

			body:Ref<OverviewApplicationAppUsageReqBody>
	}
	export interface OverviewApplicationAppUsageReqBody extends Struct<OverviewApplicationAppUsageReqBody>{

			date:Ref<string>
			cycleType:Ref<int>
			departmentId:Ref<string>
			ability:Ref<string>
	}
	export interface OverviewApplicationAppUsageReqBodyBuilder extends Struct<OverviewApplicationAppUsageReqBodyBuilder>{

			date(date:string):Ref<OverviewApplicationAppUsageReqBodyBuilder>
			cycleType(cycleType:int):Ref<OverviewApplicationAppUsageReqBodyBuilder>
			departmentId(departmentId:string):Ref<OverviewApplicationAppUsageReqBodyBuilder>
			ability(ability:string):Ref<OverviewApplicationAppUsageReqBodyBuilder>
			build():Ref<OverviewApplicationAppUsageReqBody>
	}
	export interface OverviewApplicationAppUsageReqBuilder extends Struct<OverviewApplicationAppUsageReqBuilder>{

			appId(appId:string):Ref<OverviewApplicationAppUsageReqBuilder>
			departmentIdType(departmentIdType:string):Ref<OverviewApplicationAppUsageReqBuilder>
			body(body:Ref<OverviewApplicationAppUsageReqBody>):Ref<OverviewApplicationAppUsageReqBuilder>
			build():Ref<OverviewApplicationAppUsageReq>
	}
	export interface OverviewApplicationAppUsageResp extends Struct<OverviewApplicationAppUsageResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<OverviewApplicationAppUsageRespData>
			success():bool
	}
	export interface OverviewApplicationAppUsageRespData extends Struct<OverviewApplicationAppUsageRespData>{

			items:Ref<ApplicationAppUsage>[]
	}
	export interface P1AppOpenApplicantV6 extends Struct<P1AppOpenApplicantV6>{

			openID:string
	}
	export interface P1AppOpenInstallerEmployeeV6 extends Struct<P1AppOpenInstallerEmployeeV6>{

			openID:string
	}
	export interface P1AppOpenInstallerV6 extends Struct<P1AppOpenInstallerV6>{

			openID:string
	}
	export interface P1AppOpenV6 extends Struct<P1AppOpenV6>,larkevent.EventHandlerModel{

			eventReq:Ref<larkevent.EventReq>
			eventBase:Ref<larkevent.EventBase>
			event:Ref<P1AppOpenV6Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P1AppOpenV6Data extends Struct<P1AppOpenV6Data>{

			appID:string
			tenantKey:string
			type:string
			applicants:Ref<P1AppOpenApplicantV6>[]
			installer:Ref<P1AppOpenInstallerV6>
			installerEmployee:Ref<P1AppOpenInstallerEmployeeV6>
	}
	export interface P1AppOpenV6Handler extends Struct<P1AppOpenV6Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P1AppStatusChangeOperatorV6 extends Struct<P1AppStatusChangeOperatorV6>{

			openID:string
			userID:string
			unionId:string
	}
	export interface P1AppStatusChangedV6 extends Struct<P1AppStatusChangedV6>,larkevent.EventHandlerModel{

			eventReq:Ref<larkevent.EventReq>
			eventBase:Ref<larkevent.EventBase>
			event:Ref<P1AppStatusChangedV6Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P1AppStatusChangedV6Data extends Struct<P1AppStatusChangedV6Data>{

			appID:string
			tenantKey:string
			type:string
			status:string
			operator:Ref<P1AppStatusChangeOperatorV6>
	}
	export interface P1AppStatusChangedV6Handler extends Struct<P1AppStatusChangedV6Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P1AppUninstalledV6 extends larkevent.EventHandlerModel,Struct<P1AppUninstalledV6>{

			eventReq:Ref<larkevent.EventReq>
			eventBase:Ref<larkevent.EventBase>
			event:Ref<P1AppUninstalledV6Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P1AppUninstalledV6Data extends Struct<P1AppUninstalledV6Data>{

			appID:string
			tenantKey:string
			type:string
	}
	export interface P1AppUninstalledV6Handler extends Struct<P1AppUninstalledV6Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P1OrderPaidV6 extends Struct<P1OrderPaidV6>,larkevent.EventHandlerModel{

			eventReq:Ref<larkevent.EventReq>
			eventBase:Ref<larkevent.EventBase>
			event:Ref<P1OrderPaidV6Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P1OrderPaidV6Data extends Struct<P1OrderPaidV6Data>{

			type:string
			appID:string
			orderID:string
			pricePlanID:string
			pricePlanType:string
			buyCount:int64
			seats:int64
			createTime:string
			payTime:string
			buyType:string
			srcOrderID:string
			orderPayPrice:int64
			tenantKey:string
	}
	export interface P1OrderPaidV6Handler extends Struct<P1OrderPaidV6Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2ApplicationAppVersionAuditV6 extends Struct<P2ApplicationAppVersionAuditV6>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ApplicationAppVersionAuditV6Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ApplicationAppVersionAuditV6Data extends Struct<P2ApplicationAppVersionAuditV6Data>{

			operatorId:Ref<UserId>
			versionId:Ref<string>
			creatorId:Ref<UserId>
			appId:Ref<string>
			operation:Ref<string>
			remark:Ref<string>
			auditSource:Ref<string>
	}
	export interface P2ApplicationAppVersionAuditV6Handler extends Struct<P2ApplicationAppVersionAuditV6Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2ApplicationAppVersionPublishApplyV6 extends Struct<P2ApplicationAppVersionPublishApplyV6>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ApplicationAppVersionPublishApplyV6Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ApplicationAppVersionPublishApplyV6Data extends Struct<P2ApplicationAppVersionPublishApplyV6Data>{

			operatorId:Ref<UserId>
			onlineVersion:Ref<ApplicationAppVersionEvent>
			underAuditVersion:Ref<ApplicationAppVersionEvent>
			appStatus:Ref<int>
	}
	export interface P2ApplicationAppVersionPublishApplyV6Handler extends Struct<P2ApplicationAppVersionPublishApplyV6Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2ApplicationAppVersionPublishRevokeV6 extends Struct<P2ApplicationAppVersionPublishRevokeV6>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ApplicationAppVersionPublishRevokeV6Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ApplicationAppVersionPublishRevokeV6Data extends Struct<P2ApplicationAppVersionPublishRevokeV6Data>{

			operatorId:Ref<UserId>
			creatorId:Ref<UserId>
			appId:Ref<string>
			versionId:Ref<string>
	}
	export interface P2ApplicationAppVersionPublishRevokeV6Handler extends Struct<P2ApplicationAppVersionPublishRevokeV6Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2ApplicationCreatedV6 extends Struct<P2ApplicationCreatedV6>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ApplicationCreatedV6Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ApplicationCreatedV6Data extends Struct<P2ApplicationCreatedV6Data>{

			operatorId:Ref<UserId>
			appId:Ref<string>
			name:Ref<string>
			description:Ref<string>
			avatar:Ref<string>
			appSceneType:Ref<int>
			primaryLanguage:Ref<string>
			createSource:Ref<string>
	}
	export interface P2ApplicationCreatedV6Handler extends Struct<P2ApplicationCreatedV6Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2ApplicationFeedbackCreatedV6 extends Struct<P2ApplicationFeedbackCreatedV6>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ApplicationFeedbackCreatedV6Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ApplicationFeedbackCreatedV6Data extends Struct<P2ApplicationFeedbackCreatedV6Data>{

			userId:Ref<UserId>
			appId:Ref<string>
			feedbackTime:Ref<string>
			tenantName:Ref<string>
			feedbackType:Ref<int>
			faultType:int[]
			faultTime:Ref<string>
			source:Ref<int>
			contact:Ref<string>
			description:Ref<string>
			images:string[]
			feedbackId:Ref<string>
			feedbackPath:Ref<string>
	}
	export interface P2ApplicationFeedbackCreatedV6Handler extends larkevent.EventHandler,Struct<P2ApplicationFeedbackCreatedV6Handler>{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2ApplicationFeedbackUpdatedV6 extends Struct<P2ApplicationFeedbackUpdatedV6>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ApplicationFeedbackUpdatedV6Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ApplicationFeedbackUpdatedV6Data extends Struct<P2ApplicationFeedbackUpdatedV6Data>{

			feedbackIds:string[]
			status:Ref<int>
			appId:Ref<string>
			updateTime:Ref<string>
			operatorId:Ref<UserId>
	}
	export interface P2ApplicationFeedbackUpdatedV6Handler extends Struct<P2ApplicationFeedbackUpdatedV6Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2ApplicationVisibilityAddedV6 extends Struct<P2ApplicationVisibilityAddedV6>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2ApplicationVisibilityAddedV6Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2ApplicationVisibilityAddedV6Data extends Struct<P2ApplicationVisibilityAddedV6Data>{

			users:Ref<User>[]
			source:Ref<int>
	}
	export interface P2ApplicationVisibilityAddedV6Handler extends Struct<P2ApplicationVisibilityAddedV6Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface P2BotMenuV6 extends Struct<P2BotMenuV6>,larkevent.EventHandlerModel{

			eventV2Base:Ref<larkevent.EventV2Base>
			eventReq:Ref<larkevent.EventReq>
			event:Ref<P2BotMenuV6Data>
			rawReq(req:Ref<larkevent.EventReq>):void
	}
	export interface P2BotMenuV6Data extends Struct<P2BotMenuV6Data>{

			operator:Ref<Operator>
			eventKey:Ref<string>
			timestamp:Ref<int64>
	}
	export interface P2BotMenuV6Handler extends Struct<P2BotMenuV6Handler>,larkevent.EventHandler{

			event():any
			handle(ctx:context.Context,event:any)/*error*/
	}
	export interface PatchApplicationAppVersionReq extends Struct<PatchApplicationAppVersionReq>{

			applicationAppVersion:Ref<ApplicationAppVersion>
	}
	export interface PatchApplicationAppVersionReqBuilder extends Struct<PatchApplicationAppVersionReqBuilder>{

			appId(appId:string):Ref<PatchApplicationAppVersionReqBuilder>
			versionId(versionId:string):Ref<PatchApplicationAppVersionReqBuilder>
			userIdType(userIdType:string):Ref<PatchApplicationAppVersionReqBuilder>
			operatorId(operatorId:string):Ref<PatchApplicationAppVersionReqBuilder>
			rejectReason(rejectReason:string):Ref<PatchApplicationAppVersionReqBuilder>
			applicationAppVersion(applicationAppVersion:Ref<ApplicationAppVersion>):Ref<PatchApplicationAppVersionReqBuilder>
			build():Ref<PatchApplicationAppVersionReq>
	}
	export interface PatchApplicationAppVersionResp extends Struct<PatchApplicationAppVersionResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface PatchApplicationContactsRangePathReqBodyBuilder extends Struct<PatchApplicationContactsRangePathReqBodyBuilder>{

			contactsRangeType(contactsRangeType:string):Ref<PatchApplicationContactsRangePathReqBodyBuilder>
			addVisibleList(addVisibleList:Ref<AppContactsRangeIdList>):Ref<PatchApplicationContactsRangePathReqBodyBuilder>
			delVisibleList(delVisibleList:Ref<AppContactsRangeIdList>):Ref<PatchApplicationContactsRangePathReqBodyBuilder>
			build():Ref<PatchApplicationContactsRangeReqBody>
	}
	export interface PatchApplicationContactsRangeReq extends Struct<PatchApplicationContactsRangeReq>{

			body:Ref<PatchApplicationContactsRangeReqBody>
	}
	export interface PatchApplicationContactsRangeReqBody extends Struct<PatchApplicationContactsRangeReqBody>{

			contactsRangeType:Ref<string>
			addVisibleList:Ref<AppContactsRangeIdList>
			delVisibleList:Ref<AppContactsRangeIdList>
	}
	export interface PatchApplicationContactsRangeReqBodyBuilder extends Struct<PatchApplicationContactsRangeReqBodyBuilder>{

			contactsRangeType(contactsRangeType:string):Ref<PatchApplicationContactsRangeReqBodyBuilder>
			addVisibleList(addVisibleList:Ref<AppContactsRangeIdList>):Ref<PatchApplicationContactsRangeReqBodyBuilder>
			delVisibleList(delVisibleList:Ref<AppContactsRangeIdList>):Ref<PatchApplicationContactsRangeReqBodyBuilder>
			build():Ref<PatchApplicationContactsRangeReqBody>
	}
	export interface PatchApplicationContactsRangeReqBuilder extends Struct<PatchApplicationContactsRangeReqBuilder>{

			appId(appId:string):Ref<PatchApplicationContactsRangeReqBuilder>
			userIdType(userIdType:string):Ref<PatchApplicationContactsRangeReqBuilder>
			departmentIdType(departmentIdType:string):Ref<PatchApplicationContactsRangeReqBuilder>
			body(body:Ref<PatchApplicationContactsRangeReqBody>):Ref<PatchApplicationContactsRangeReqBuilder>
			build():Ref<PatchApplicationContactsRangeReq>
	}
	export interface PatchApplicationContactsRangeResp extends Struct<PatchApplicationContactsRangeResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface PatchApplicationFeedbackReq extends Struct<PatchApplicationFeedbackReq>{

	}
	export interface PatchApplicationFeedbackReqBuilder extends Struct<PatchApplicationFeedbackReqBuilder>{

			appId(appId:string):Ref<PatchApplicationFeedbackReqBuilder>
			feedbackId(feedbackId:string):Ref<PatchApplicationFeedbackReqBuilder>
			userIdType(userIdType:string):Ref<PatchApplicationFeedbackReqBuilder>
			status(status:int):Ref<PatchApplicationFeedbackReqBuilder>
			operatorId(operatorId:string):Ref<PatchApplicationFeedbackReqBuilder>
			build():Ref<PatchApplicationFeedbackReq>
	}
	export interface PatchApplicationFeedbackResp extends Struct<PatchApplicationFeedbackResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface PatchApplicationReq extends Struct<PatchApplicationReq>{

			application:Ref<Application>
	}
	export interface PatchApplicationReqBuilder extends Struct<PatchApplicationReqBuilder>{

			appId(appId:string):Ref<PatchApplicationReqBuilder>
			lang(lang:string):Ref<PatchApplicationReqBuilder>
			application(application:Ref<Application>):Ref<PatchApplicationReqBuilder>
			build():Ref<PatchApplicationReq>
	}
	export interface PatchApplicationResp extends Struct<PatchApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface PatchApplicationVisibilityPathReqBodyBuilder extends Struct<PatchApplicationVisibilityPathReqBodyBuilder>{

			addVisibleList(addVisibleList:Ref<AppVisibilityIdList>):Ref<PatchApplicationVisibilityPathReqBodyBuilder>
			delVisibleList(delVisibleList:Ref<AppVisibilityIdList>):Ref<PatchApplicationVisibilityPathReqBodyBuilder>
			addInvisibleList(addInvisibleList:Ref<AppVisibilityIdList>):Ref<PatchApplicationVisibilityPathReqBodyBuilder>
			delInvisibleList(delInvisibleList:Ref<AppVisibilityIdList>):Ref<PatchApplicationVisibilityPathReqBodyBuilder>
			isVisibleToAll(isVisibleToAll:bool):Ref<PatchApplicationVisibilityPathReqBodyBuilder>
			build():Ref<PatchApplicationVisibilityReqBody>
	}
	export interface PatchApplicationVisibilityReq extends Struct<PatchApplicationVisibilityReq>{

			body:Ref<PatchApplicationVisibilityReqBody>
	}
	export interface PatchApplicationVisibilityReqBody extends Struct<PatchApplicationVisibilityReqBody>{

			addVisibleList:Ref<AppVisibilityIdList>
			delVisibleList:Ref<AppVisibilityIdList>
			addInvisibleList:Ref<AppVisibilityIdList>
			delInvisibleList:Ref<AppVisibilityIdList>
			isVisibleToAll:Ref<bool>
	}
	export interface PatchApplicationVisibilityReqBodyBuilder extends Struct<PatchApplicationVisibilityReqBodyBuilder>{

			addVisibleList(addVisibleList:Ref<AppVisibilityIdList>):Ref<PatchApplicationVisibilityReqBodyBuilder>
			delVisibleList(delVisibleList:Ref<AppVisibilityIdList>):Ref<PatchApplicationVisibilityReqBodyBuilder>
			addInvisibleList(addInvisibleList:Ref<AppVisibilityIdList>):Ref<PatchApplicationVisibilityReqBodyBuilder>
			delInvisibleList(delInvisibleList:Ref<AppVisibilityIdList>):Ref<PatchApplicationVisibilityReqBodyBuilder>
			isVisibleToAll(isVisibleToAll:bool):Ref<PatchApplicationVisibilityReqBodyBuilder>
			build():Ref<PatchApplicationVisibilityReqBody>
	}
	export interface PatchApplicationVisibilityReqBuilder extends Struct<PatchApplicationVisibilityReqBuilder>{

			appId(appId:string):Ref<PatchApplicationVisibilityReqBuilder>
			departmentIdType(departmentIdType:string):Ref<PatchApplicationVisibilityReqBuilder>
			userIdType(userIdType:string):Ref<PatchApplicationVisibilityReqBuilder>
			body(body:Ref<PatchApplicationVisibilityReqBody>):Ref<PatchApplicationVisibilityReqBuilder>
			build():Ref<PatchApplicationVisibilityReq>
	}
	export interface PatchApplicationVisibilityResp extends Struct<PatchApplicationVisibilityResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface PlusMenu extends Struct<PlusMenu>{

			pcAppLink:Ref<string>
			mobileAppLink:Ref<string>
	}
	export interface PlusMenuBuilder extends Struct<PlusMenuBuilder>{

			pcAppLink(pcAppLink:string):Ref<PlusMenuBuilder>
			mobileAppLink(mobileAppLink:string):Ref<PlusMenuBuilder>
			build():Ref<PlusMenu>
	}
	export interface Scope extends Struct<Scope>{

			scopeName:Ref<string>
			grantStatus:Ref<int>
	}
	export interface ScopeBuilder extends Struct<ScopeBuilder>{

			scopeName(scopeName:string):Ref<ScopeBuilder>
			grantStatus(grantStatus:int):Ref<ScopeBuilder>
			build():Ref<Scope>
	}
	export interface SetAppBadgeReq extends Struct<SetAppBadgeReq>{

			appBadge:Ref<AppBadge>
	}
	export interface SetAppBadgeReqBuilder extends Struct<SetAppBadgeReqBuilder>{

			userIdType(userIdType:string):Ref<SetAppBadgeReqBuilder>
			appBadge(appBadge:Ref<AppBadge>):Ref<SetAppBadgeReqBuilder>
			build():Ref<SetAppBadgeReq>
	}
	export interface SetAppBadgeResp extends Struct<SetAppBadgeResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface UnderauditlistApplicationIterator extends Struct<UnderauditlistApplicationIterator>{

			next():[bool,Ref<Application>]
			nextPageToken():Ref<string>
	}
	export interface UnderauditlistApplicationReq extends Struct<UnderauditlistApplicationReq>{

			limit:int
	}
	export interface UnderauditlistApplicationReqBuilder extends Struct<UnderauditlistApplicationReqBuilder>{

			limit(limit:int):Ref<UnderauditlistApplicationReqBuilder>
			lang(lang:string):Ref<UnderauditlistApplicationReqBuilder>
			pageToken(pageToken:string):Ref<UnderauditlistApplicationReqBuilder>
			pageSize(pageSize:int):Ref<UnderauditlistApplicationReqBuilder>
			userIdType(userIdType:string):Ref<UnderauditlistApplicationReqBuilder>
			build():Ref<UnderauditlistApplicationReq>
	}
	export interface UnderauditlistApplicationResp extends Struct<UnderauditlistApplicationResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<UnderauditlistApplicationRespData>
			success():bool
	}
	export interface UnderauditlistApplicationRespData extends Struct<UnderauditlistApplicationRespData>{

			items:Ref<Application>[]
			hasMore:Ref<bool>
			pageToken:Ref<string>
	}
	export interface UpdateApplicationManagementPathReqBodyBuilder extends Struct<UpdateApplicationManagementPathReqBodyBuilder>{

			enable(enable:bool):Ref<UpdateApplicationManagementPathReqBodyBuilder>
			build():Ref<UpdateApplicationManagementReqBody>
	}
	export interface UpdateApplicationManagementReq extends Struct<UpdateApplicationManagementReq>{

			body:Ref<UpdateApplicationManagementReqBody>
	}
	export interface UpdateApplicationManagementReqBody extends Struct<UpdateApplicationManagementReqBody>{

			enable:Ref<bool>
	}
	export interface UpdateApplicationManagementReqBodyBuilder extends Struct<UpdateApplicationManagementReqBodyBuilder>{

			enable(enable:bool):Ref<UpdateApplicationManagementReqBodyBuilder>
			build():Ref<UpdateApplicationManagementReqBody>
	}
	export interface UpdateApplicationManagementReqBuilder extends Struct<UpdateApplicationManagementReqBuilder>{

			appId(appId:string):Ref<UpdateApplicationManagementReqBuilder>
			body(body:Ref<UpdateApplicationManagementReqBody>):Ref<UpdateApplicationManagementReqBuilder>
			build():Ref<UpdateApplicationManagementReq>
	}
	export interface UpdateApplicationManagementResp extends Struct<UpdateApplicationManagementResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			success():bool
	}
	export interface UsageOverviewItem extends Struct<UsageOverviewItem>{

			pageView:Ref<string>
			uniqueVisitor:Ref<string>
			departmentId:Ref<string>
	}
	export interface UsageOverviewItemBuilder extends Struct<UsageOverviewItemBuilder>{

			pageView(pageView:string):Ref<UsageOverviewItemBuilder>
			uniqueVisitor(uniqueVisitor:string):Ref<UsageOverviewItemBuilder>
			departmentId(departmentId:string):Ref<UsageOverviewItemBuilder>
			build():Ref<UsageOverviewItem>
	}
	export interface UsageTrendItem extends Struct<UsageTrendItem>{

			timestamp:Ref<string>
			pageView:Ref<string>
			uniqueVisitor:Ref<string>
	}
	export interface UsageTrendItemBuilder extends Struct<UsageTrendItemBuilder>{

			timestamp(timestamp:string):Ref<UsageTrendItemBuilder>
			pageView(pageView:string):Ref<UsageTrendItemBuilder>
			uniqueVisitor(uniqueVisitor:string):Ref<UsageTrendItemBuilder>
			build():Ref<UsageTrendItem>
	}
	export interface UsageUser extends Struct<UsageUser>{

			userId:Ref<string>
	}
	export interface UsageUserBuilder extends Struct<UsageUserBuilder>{

			userId(userId:string):Ref<UsageUserBuilder>
			build():Ref<UsageUser>
	}
	export interface User extends Struct<User>{

			userId:Ref<UserId>
	}
	export interface UserBuilder extends Struct<UserBuilder>{

			userId(userId:Ref<UserId>):Ref<UserBuilder>
			build():Ref<User>
	}
	export interface UserId extends Struct<UserId>{

			userId:Ref<string>
			openId:Ref<string>
			unionId:Ref<string>
	}
	export interface UserIdBuilder extends Struct<UserIdBuilder>{

			userId(userId:string):Ref<UserIdBuilder>
			openId(openId:string):Ref<UserIdBuilder>
			unionId(unionId:string):Ref<UserIdBuilder>
			build():Ref<UserId>
	}
	//"open_id"
	export const UserIdTypeCheckWhiteBlackListApplicationVisibilityOpenId:string
	//"union_id"
	export const UserIdTypeCheckWhiteBlackListApplicationVisibilityUnionId:string
	//"user_id"
	export const UserIdTypeCheckWhiteBlackListApplicationVisibilityUserId:string
	//"open_id"
	export const UserIdTypeContactsRangeConfigurationApplicationOpenId:string
	//"union_id"
	export const UserIdTypeContactsRangeConfigurationApplicationUnionId:string
	//"user_id"
	export const UserIdTypeContactsRangeConfigurationApplicationUserId:string
	//"open_id"
	export const UserIdTypeContactsRangeSuggestApplicationAppVersionOpenId:string
	//"union_id"
	export const UserIdTypeContactsRangeSuggestApplicationAppVersionUnionId:string
	//"user_id"
	export const UserIdTypeContactsRangeSuggestApplicationAppVersionUserId:string
	//"open_id"
	export const UserIdTypeGetApplicationAppVersionOpenId:string
	//"union_id"
	export const UserIdTypeGetApplicationAppVersionUnionId:string
	//"user_id"
	export const UserIdTypeGetApplicationAppVersionUserId:string
	//"open_id"
	export const UserIdTypeGetApplicationOpenId:string
	//"union_id"
	export const UserIdTypeGetApplicationUnionId:string
	//"user_id"
	export const UserIdTypeGetApplicationUserId:string
	//"open_id"
	export const UserIdTypeListAppRecommendRuleOpenId:string
	//"union_id"
	export const UserIdTypeListAppRecommendRuleUnionId:string
	//"user_id"
	export const UserIdTypeListAppRecommendRuleUserId:string
	//"open_id"
	export const UserIdTypeListApplicationAppVersionOpenId:string
	//"union_id"
	export const UserIdTypeListApplicationAppVersionUnionId:string
	//"user_id"
	export const UserIdTypeListApplicationAppVersionUserId:string
	//"open_id"
	export const UserIdTypeListApplicationFeedbackOpenId:string
	//"union_id"
	export const UserIdTypeListApplicationFeedbackUnionId:string
	//"user_id"
	export const UserIdTypeListApplicationFeedbackUserId:string
	//"open_id"
	export const UserIdTypeOpenId:string
	//"open_id"
	export const UserIdTypePatchApplicationAppVersionOpenId:string
	//"union_id"
	export const UserIdTypePatchApplicationAppVersionUnionId:string
	//"user_id"
	export const UserIdTypePatchApplicationAppVersionUserId:string
	//"open_id"
	export const UserIdTypePatchApplicationContactsRangeOpenId:string
	//"union_id"
	export const UserIdTypePatchApplicationContactsRangeUnionId:string
	//"user_id"
	export const UserIdTypePatchApplicationContactsRangeUserId:string
	//"open_id"
	export const UserIdTypePatchApplicationFeedbackOpenId:string
	//"union_id"
	export const UserIdTypePatchApplicationFeedbackUnionId:string
	//"user_id"
	export const UserIdTypePatchApplicationFeedbackUserId:string
	//"open_id"
	export const UserIdTypePatchApplicationVisibilityOpenId:string
	//"union_id"
	export const UserIdTypePatchApplicationVisibilityUnionId:string
	//"user_id"
	export const UserIdTypePatchApplicationVisibilityUserId:string
	//"open_id"
	export const UserIdTypeUnderauditlistApplicationOpenId:string
	//"union_id"
	export const UserIdTypeUnderauditlistApplicationUnionId:string
	//"user_id"
	export const UserIdTypeUnderauditlistApplicationUserId:string
	//"union_id"
	export const UserIdTypeUnionId:string
	//"user_id"
	export const UserIdTypeUserId:string
	export interface V6 extends Struct<V6>{

			appBadge:Ref<{
			
				set(ctx:context.Context,req:Ref<SetAppBadgeReq>,...options:larkcore.RequestOptionFunc[]):Ref<SetAppBadgeResp>
			}>
			appRecommendRule:Ref<{
			
				list(ctx:context.Context,req:Ref<ListAppRecommendRuleReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListAppRecommendRuleResp>
				listByIterator(ctx:context.Context,req:Ref<ListAppRecommendRuleReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListAppRecommendRuleIterator>
			}>
			application:Ref<{
			
				contactsRangeConfiguration(ctx:context.Context,req:Ref<ContactsRangeConfigurationApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<ContactsRangeConfigurationApplicationResp>
				get(ctx:context.Context,req:Ref<GetApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetApplicationResp>
				patch(ctx:context.Context,req:Ref<PatchApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchApplicationResp>
				underauditlist(ctx:context.Context,req:Ref<UnderauditlistApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<UnderauditlistApplicationResp>
				underauditlistByIterator(ctx:context.Context,req:Ref<UnderauditlistApplicationReq>,...options:larkcore.RequestOptionFunc[]):Ref<UnderauditlistApplicationIterator>
			}>
			applicationAppUsage:Ref<{
			
				departmentOverview(ctx:context.Context,req:Ref<DepartmentOverviewApplicationAppUsageReq>,...options:larkcore.RequestOptionFunc[]):Ref<DepartmentOverviewApplicationAppUsageResp>
				overview(ctx:context.Context,req:Ref<OverviewApplicationAppUsageReq>,...options:larkcore.RequestOptionFunc[]):Ref<OverviewApplicationAppUsageResp>
			}>
			applicationAppVersion:Ref<{
			
				contactsRangeSuggest(ctx:context.Context,req:Ref<ContactsRangeSuggestApplicationAppVersionReq>,...options:larkcore.RequestOptionFunc[]):Ref<ContactsRangeSuggestApplicationAppVersionResp>
				get(ctx:context.Context,req:Ref<GetApplicationAppVersionReq>,...options:larkcore.RequestOptionFunc[]):Ref<GetApplicationAppVersionResp>
				list(ctx:context.Context,req:Ref<ListApplicationAppVersionReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListApplicationAppVersionResp>
				listByIterator(ctx:context.Context,req:Ref<ListApplicationAppVersionReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListApplicationAppVersionIterator>
				patch(ctx:context.Context,req:Ref<PatchApplicationAppVersionReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchApplicationAppVersionResp>
			}>
			applicationContactsRange:Ref<{
			
				patch(ctx:context.Context,req:Ref<PatchApplicationContactsRangeReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchApplicationContactsRangeResp>
			}>
			applicationFeedback:Ref<{
			
				list(ctx:context.Context,req:Ref<ListApplicationFeedbackReq>,...options:larkcore.RequestOptionFunc[]):Ref<ListApplicationFeedbackResp>
				patch(ctx:context.Context,req:Ref<PatchApplicationFeedbackReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchApplicationFeedbackResp>
			}>
			applicationManagement:Ref<{
			
				update(ctx:context.Context,req:Ref<UpdateApplicationManagementReq>,...options:larkcore.RequestOptionFunc[]):Ref<UpdateApplicationManagementResp>
			}>
			applicationVisibility:Ref<{
			
				checkWhiteBlackList(ctx:context.Context,req:Ref<CheckWhiteBlackListApplicationVisibilityReq>,...options:larkcore.RequestOptionFunc[]):Ref<CheckWhiteBlackListApplicationVisibilityResp>
				patch(ctx:context.Context,req:Ref<PatchApplicationVisibilityReq>,...options:larkcore.RequestOptionFunc[]):Ref<PatchApplicationVisibilityResp>
			}>
	}
	export interface WebApp extends Struct<WebApp>{

			pcUrl:Ref<string>
			mobileUrl:Ref<string>
	}
	export interface WebAppBuilder extends Struct<WebAppBuilder>{

			pcUrl(pcUrl:string):Ref<WebAppBuilder>
			mobileUrl(mobileUrl:string):Ref<WebAppBuilder>
			build():Ref<WebApp>
	}
	export interface Widget extends Alias<Nothing>{

	}
	export interface WorkplaceWidget extends Struct<WorkplaceWidget>{

			minLarkVersion:Ref<string>
	}
	export interface WorkplaceWidgetBuilder extends Struct<WorkplaceWidgetBuilder>{

			minLarkVersion(minLarkVersion:string):Ref<WorkplaceWidgetBuilder>
			build():Ref<WorkplaceWidget>
	}
	export function emptyAppAbilityWebBuilder():AppAbilityWebBuilder
	export function emptyRefAppAbilityWebBuilder():Ref<AppAbilityWebBuilder>
	export function refOfAppAbilityWebBuilder(x:AppAbilityWebBuilder,v:Ref<AppAbilityWebBuilder>)
	export function unRefAppAbilityWebBuilder(v:Ref<AppAbilityWebBuilder>):AppAbilityWebBuilder
	export function emptyAppUsageTrendItemsBuilder():AppUsageTrendItemsBuilder
	export function emptyRefAppUsageTrendItemsBuilder():Ref<AppUsageTrendItemsBuilder>
	export function refOfAppUsageTrendItemsBuilder(x:AppUsageTrendItemsBuilder,v:Ref<AppUsageTrendItemsBuilder>)
	export function unRefAppUsageTrendItemsBuilder(v:Ref<AppUsageTrendItemsBuilder>):AppUsageTrendItemsBuilder
	export function emptyAppVersionIdBuilder():AppVersionIdBuilder
	export function emptyRefAppVersionIdBuilder():Ref<AppVersionIdBuilder>
	export function refOfAppVersionIdBuilder(x:AppVersionIdBuilder,v:Ref<AppVersionIdBuilder>)
	export function unRefAppVersionIdBuilder(v:Ref<AppVersionIdBuilder>):AppVersionIdBuilder
	export function emptyListApplicationFeedbackRespData():ListApplicationFeedbackRespData
	export function emptyRefListApplicationFeedbackRespData():Ref<ListApplicationFeedbackRespData>
	export function refOfListApplicationFeedbackRespData(x:ListApplicationFeedbackRespData,v:Ref<ListApplicationFeedbackRespData>)
	export function unRefListApplicationFeedbackRespData(v:Ref<ListApplicationFeedbackRespData>):ListApplicationFeedbackRespData
	export function emptyWorkplaceWidget():WorkplaceWidget
	export function emptyRefWorkplaceWidget():Ref<WorkplaceWidget>
	export function refOfWorkplaceWidget(x:WorkplaceWidget,v:Ref<WorkplaceWidget>)
	export function unRefWorkplaceWidget(v:Ref<WorkplaceWidget>):WorkplaceWidget
	export function emptyP2ApplicationFeedbackUpdatedV6Data():P2ApplicationFeedbackUpdatedV6Data
	export function emptyRefP2ApplicationFeedbackUpdatedV6Data():Ref<P2ApplicationFeedbackUpdatedV6Data>
	export function refOfP2ApplicationFeedbackUpdatedV6Data(x:P2ApplicationFeedbackUpdatedV6Data,v:Ref<P2ApplicationFeedbackUpdatedV6Data>)
	export function unRefP2ApplicationFeedbackUpdatedV6Data(v:Ref<P2ApplicationFeedbackUpdatedV6Data>):P2ApplicationFeedbackUpdatedV6Data
	export function emptyPatchApplicationVisibilityReqBuilder():PatchApplicationVisibilityReqBuilder
	export function emptyRefPatchApplicationVisibilityReqBuilder():Ref<PatchApplicationVisibilityReqBuilder>
	export function refOfPatchApplicationVisibilityReqBuilder(x:PatchApplicationVisibilityReqBuilder,v:Ref<PatchApplicationVisibilityReqBuilder>)
	export function unRefPatchApplicationVisibilityReqBuilder(v:Ref<PatchApplicationVisibilityReqBuilder>):PatchApplicationVisibilityReqBuilder
	export function emptyUnderauditlistApplicationIterator():UnderauditlistApplicationIterator
	export function emptyRefUnderauditlistApplicationIterator():Ref<UnderauditlistApplicationIterator>
	export function refOfUnderauditlistApplicationIterator(x:UnderauditlistApplicationIterator,v:Ref<UnderauditlistApplicationIterator>)
	export function unRefUnderauditlistApplicationIterator(v:Ref<UnderauditlistApplicationIterator>):UnderauditlistApplicationIterator
	export function emptyApplication():Application
	export function emptyRefApplication():Ref<Application>
	export function refOfApplication(x:Application,v:Ref<Application>)
	export function unRefApplication(v:Ref<Application>):Application
	export function emptyBlock():Block
	export function emptyRefBlock():Ref<Block>
	export function refOfBlock(x:Block,v:Ref<Block>)
	export function unRefBlock(v:Ref<Block>):Block
	export function emptyBlockBuilder():BlockBuilder
	export function emptyRefBlockBuilder():Ref<BlockBuilder>
	export function refOfBlockBuilder(x:BlockBuilder,v:Ref<BlockBuilder>)
	export function unRefBlockBuilder(v:Ref<BlockBuilder>):BlockBuilder
	export function emptyCheckWhiteBlackListApplicationVisibilityReqBody():CheckWhiteBlackListApplicationVisibilityReqBody
	export function emptyRefCheckWhiteBlackListApplicationVisibilityReqBody():Ref<CheckWhiteBlackListApplicationVisibilityReqBody>
	export function refOfCheckWhiteBlackListApplicationVisibilityReqBody(x:CheckWhiteBlackListApplicationVisibilityReqBody,v:Ref<CheckWhiteBlackListApplicationVisibilityReqBody>)
	export function unRefCheckWhiteBlackListApplicationVisibilityReqBody(v:Ref<CheckWhiteBlackListApplicationVisibilityReqBody>):CheckWhiteBlackListApplicationVisibilityReqBody
	export function emptyMiniprogramBuilder():MiniprogramBuilder
	export function emptyRefMiniprogramBuilder():Ref<MiniprogramBuilder>
	export function refOfMiniprogramBuilder(x:MiniprogramBuilder,v:Ref<MiniprogramBuilder>)
	export function unRefMiniprogramBuilder(v:Ref<MiniprogramBuilder>):MiniprogramBuilder
	export function emptyUserId():UserId
	export function emptyRefUserId():Ref<UserId>
	export function refOfUserId(x:UserId,v:Ref<UserId>)
	export function unRefUserId(v:Ref<UserId>):UserId
	export function emptyContactsRangeConfigurationApplicationReq():ContactsRangeConfigurationApplicationReq
	export function emptyRefContactsRangeConfigurationApplicationReq():Ref<ContactsRangeConfigurationApplicationReq>
	export function refOfContactsRangeConfigurationApplicationReq(x:ContactsRangeConfigurationApplicationReq,v:Ref<ContactsRangeConfigurationApplicationReq>)
	export function unRefContactsRangeConfigurationApplicationReq(v:Ref<ContactsRangeConfigurationApplicationReq>):ContactsRangeConfigurationApplicationReq
	export function emptyDepartmentOverviewApplicationAppUsageReqBuilder():DepartmentOverviewApplicationAppUsageReqBuilder
	export function emptyRefDepartmentOverviewApplicationAppUsageReqBuilder():Ref<DepartmentOverviewApplicationAppUsageReqBuilder>
	export function refOfDepartmentOverviewApplicationAppUsageReqBuilder(x:DepartmentOverviewApplicationAppUsageReqBuilder,v:Ref<DepartmentOverviewApplicationAppUsageReqBuilder>)
	export function unRefDepartmentOverviewApplicationAppUsageReqBuilder(v:Ref<DepartmentOverviewApplicationAppUsageReqBuilder>):DepartmentOverviewApplicationAppUsageReqBuilder
	export function emptyP1AppUninstalledV6Handler():P1AppUninstalledV6Handler
	export function emptyRefP1AppUninstalledV6Handler():Ref<P1AppUninstalledV6Handler>
	export function refOfP1AppUninstalledV6Handler(x:P1AppUninstalledV6Handler,v:Ref<P1AppUninstalledV6Handler>)
	export function unRefP1AppUninstalledV6Handler(v:Ref<P1AppUninstalledV6Handler>):P1AppUninstalledV6Handler
	export function emptyP2ApplicationAppVersionAuditV6():P2ApplicationAppVersionAuditV6
	export function emptyRefP2ApplicationAppVersionAuditV6():Ref<P2ApplicationAppVersionAuditV6>
	export function refOfP2ApplicationAppVersionAuditV6(x:P2ApplicationAppVersionAuditV6,v:Ref<P2ApplicationAppVersionAuditV6>)
	export function unRefP2ApplicationAppVersionAuditV6(v:Ref<P2ApplicationAppVersionAuditV6>):P2ApplicationAppVersionAuditV6
	export function emptyUsageUserBuilder():UsageUserBuilder
	export function emptyRefUsageUserBuilder():Ref<UsageUserBuilder>
	export function refOfUsageUserBuilder(x:UsageUserBuilder,v:Ref<UsageUserBuilder>)
	export function unRefUsageUserBuilder(v:Ref<UsageUserBuilder>):UsageUserBuilder
	export function emptyContactsRangeSuggestApplicationAppVersionResp():ContactsRangeSuggestApplicationAppVersionResp
	export function emptyRefContactsRangeSuggestApplicationAppVersionResp():Ref<ContactsRangeSuggestApplicationAppVersionResp>
	export function refOfContactsRangeSuggestApplicationAppVersionResp(x:ContactsRangeSuggestApplicationAppVersionResp,v:Ref<ContactsRangeSuggestApplicationAppVersionResp>)
	export function unRefContactsRangeSuggestApplicationAppVersionResp(v:Ref<ContactsRangeSuggestApplicationAppVersionResp>):ContactsRangeSuggestApplicationAppVersionResp
	export function emptyP1AppOpenV6():P1AppOpenV6
	export function emptyRefP1AppOpenV6():Ref<P1AppOpenV6>
	export function refOfP1AppOpenV6(x:P1AppOpenV6,v:Ref<P1AppOpenV6>)
	export function unRefP1AppOpenV6(v:Ref<P1AppOpenV6>):P1AppOpenV6
	export function emptyPlusMenuBuilder():PlusMenuBuilder
	export function emptyRefPlusMenuBuilder():Ref<PlusMenuBuilder>
	export function refOfPlusMenuBuilder(x:PlusMenuBuilder,v:Ref<PlusMenuBuilder>)
	export function unRefPlusMenuBuilder(v:Ref<PlusMenuBuilder>):PlusMenuBuilder
	export function emptyAppCommonCategoryBuilder():AppCommonCategoryBuilder
	export function emptyRefAppCommonCategoryBuilder():Ref<AppCommonCategoryBuilder>
	export function refOfAppCommonCategoryBuilder(x:AppCommonCategoryBuilder,v:Ref<AppCommonCategoryBuilder>)
	export function unRefAppCommonCategoryBuilder(v:Ref<AppCommonCategoryBuilder>):AppCommonCategoryBuilder
	export function emptyAppVisibleListBuilder():AppVisibleListBuilder
	export function emptyRefAppVisibleListBuilder():Ref<AppVisibleListBuilder>
	export function refOfAppVisibleListBuilder(x:AppVisibleListBuilder,v:Ref<AppVisibleListBuilder>)
	export function unRefAppVisibleListBuilder(v:Ref<AppVisibleListBuilder>):AppVisibleListBuilder
	export function emptyApplicationAppVersionBuilder():ApplicationAppVersionBuilder
	export function emptyRefApplicationAppVersionBuilder():Ref<ApplicationAppVersionBuilder>
	export function refOfApplicationAppVersionBuilder(x:ApplicationAppVersionBuilder,v:Ref<ApplicationAppVersionBuilder>)
	export function unRefApplicationAppVersionBuilder(v:Ref<ApplicationAppVersionBuilder>):ApplicationAppVersionBuilder
	export function emptyP1AppStatusChangeOperatorV6():P1AppStatusChangeOperatorV6
	export function emptyRefP1AppStatusChangeOperatorV6():Ref<P1AppStatusChangeOperatorV6>
	export function refOfP1AppStatusChangeOperatorV6(x:P1AppStatusChangeOperatorV6,v:Ref<P1AppStatusChangeOperatorV6>)
	export function unRefP1AppStatusChangeOperatorV6(v:Ref<P1AppStatusChangeOperatorV6>):P1AppStatusChangeOperatorV6
	export function emptyAccessibilityBuilder():AccessibilityBuilder
	export function emptyRefAccessibilityBuilder():Ref<AccessibilityBuilder>
	export function refOfAccessibilityBuilder(x:AccessibilityBuilder,v:Ref<AccessibilityBuilder>)
	export function unRefAccessibilityBuilder(v:Ref<AccessibilityBuilder>):AccessibilityBuilder
	export function emptyAppVisibleListEventBuilder():AppVisibleListEventBuilder
	export function emptyRefAppVisibleListEventBuilder():Ref<AppVisibleListEventBuilder>
	export function refOfAppVisibleListEventBuilder(x:AppVisibleListEventBuilder,v:Ref<AppVisibleListEventBuilder>)
	export function unRefAppVisibleListEventBuilder(v:Ref<AppVisibleListEventBuilder>):AppVisibleListEventBuilder
	export function emptyUpdateApplicationManagementReqBuilder():UpdateApplicationManagementReqBuilder
	export function emptyRefUpdateApplicationManagementReqBuilder():Ref<UpdateApplicationManagementReqBuilder>
	export function refOfUpdateApplicationManagementReqBuilder(x:UpdateApplicationManagementReqBuilder,v:Ref<UpdateApplicationManagementReqBuilder>)
	export function unRefUpdateApplicationManagementReqBuilder(v:Ref<UpdateApplicationManagementReqBuilder>):UpdateApplicationManagementReqBuilder
	export function emptyWebApp():WebApp
	export function emptyRefWebApp():Ref<WebApp>
	export function refOfWebApp(x:WebApp,v:Ref<WebApp>)
	export function unRefWebApp(v:Ref<WebApp>):WebApp
	export function emptyOverviewApplicationAppUsageRespData():OverviewApplicationAppUsageRespData
	export function emptyRefOverviewApplicationAppUsageRespData():Ref<OverviewApplicationAppUsageRespData>
	export function refOfOverviewApplicationAppUsageRespData(x:OverviewApplicationAppUsageRespData,v:Ref<OverviewApplicationAppUsageRespData>)
	export function unRefOverviewApplicationAppUsageRespData(v:Ref<OverviewApplicationAppUsageRespData>):OverviewApplicationAppUsageRespData
	export function emptyUnderauditlistApplicationResp():UnderauditlistApplicationResp
	export function emptyRefUnderauditlistApplicationResp():Ref<UnderauditlistApplicationResp>
	export function refOfUnderauditlistApplicationResp(x:UnderauditlistApplicationResp,v:Ref<UnderauditlistApplicationResp>)
	export function unRefUnderauditlistApplicationResp(v:Ref<UnderauditlistApplicationResp>):UnderauditlistApplicationResp
	export function emptyAppRecommendRuleItemInfoI18nName():AppRecommendRuleItemInfoI18nName
	export function emptyRefAppRecommendRuleItemInfoI18nName():Ref<AppRecommendRuleItemInfoI18nName>
	export function refOfAppRecommendRuleItemInfoI18nName(x:AppRecommendRuleItemInfoI18nName,v:Ref<AppRecommendRuleItemInfoI18nName>)
	export function unRefAppRecommendRuleItemInfoI18nName(v:Ref<AppRecommendRuleItemInfoI18nName>):AppRecommendRuleItemInfoI18nName
	export function emptyAppVisibilityEvent():AppVisibilityEvent
	export function emptyRefAppVisibilityEvent():Ref<AppVisibilityEvent>
	export function refOfAppVisibilityEvent(x:AppVisibilityEvent,v:Ref<AppVisibilityEvent>)
	export function unRefAppVisibilityEvent(v:Ref<AppVisibilityEvent>):AppVisibilityEvent
	export function emptyApplicationFeedback():ApplicationFeedback
	export function emptyRefApplicationFeedback():Ref<ApplicationFeedback>
	export function refOfApplicationFeedback(x:ApplicationFeedback,v:Ref<ApplicationFeedback>)
	export function unRefApplicationFeedback(v:Ref<ApplicationFeedback>):ApplicationFeedback
	export function emptyP2ApplicationVisibilityAddedV6():P2ApplicationVisibilityAddedV6
	export function emptyRefP2ApplicationVisibilityAddedV6():Ref<P2ApplicationVisibilityAddedV6>
	export function refOfP2ApplicationVisibilityAddedV6(x:P2ApplicationVisibilityAddedV6,v:Ref<P2ApplicationVisibilityAddedV6>)
	export function unRefP2ApplicationVisibilityAddedV6(v:Ref<P2ApplicationVisibilityAddedV6>):P2ApplicationVisibilityAddedV6
	export function emptyAppConfigEventBuilder():AppConfigEventBuilder
	export function emptyRefAppConfigEventBuilder():Ref<AppConfigEventBuilder>
	export function refOfAppConfigEventBuilder(x:AppConfigEventBuilder,v:Ref<AppConfigEventBuilder>)
	export function unRefAppConfigEventBuilder(v:Ref<AppConfigEventBuilder>):AppConfigEventBuilder
	export function emptyAppVisibilityIdList():AppVisibilityIdList
	export function emptyRefAppVisibilityIdList():Ref<AppVisibilityIdList>
	export function refOfAppVisibilityIdList(x:AppVisibilityIdList,v:Ref<AppVisibilityIdList>)
	export function unRefAppVisibilityIdList(v:Ref<AppVisibilityIdList>):AppVisibilityIdList
	export function emptyContactsRangeSuggestApplicationAppVersionReq():ContactsRangeSuggestApplicationAppVersionReq
	export function emptyRefContactsRangeSuggestApplicationAppVersionReq():Ref<ContactsRangeSuggestApplicationAppVersionReq>
	export function refOfContactsRangeSuggestApplicationAppVersionReq(x:ContactsRangeSuggestApplicationAppVersionReq,v:Ref<ContactsRangeSuggestApplicationAppVersionReq>)
	export function unRefContactsRangeSuggestApplicationAppVersionReq(v:Ref<ContactsRangeSuggestApplicationAppVersionReq>):ContactsRangeSuggestApplicationAppVersionReq
	export function emptyContactsRangeSuggestApplicationAppVersionReqBuilder():ContactsRangeSuggestApplicationAppVersionReqBuilder
	export function emptyRefContactsRangeSuggestApplicationAppVersionReqBuilder():Ref<ContactsRangeSuggestApplicationAppVersionReqBuilder>
	export function refOfContactsRangeSuggestApplicationAppVersionReqBuilder(x:ContactsRangeSuggestApplicationAppVersionReqBuilder,v:Ref<ContactsRangeSuggestApplicationAppVersionReqBuilder>)
	export function unRefContactsRangeSuggestApplicationAppVersionReqBuilder(v:Ref<ContactsRangeSuggestApplicationAppVersionReqBuilder>):ContactsRangeSuggestApplicationAppVersionReqBuilder
	export function emptyDepartmentOverviewApplicationAppUsageReqBody():DepartmentOverviewApplicationAppUsageReqBody
	export function emptyRefDepartmentOverviewApplicationAppUsageReqBody():Ref<DepartmentOverviewApplicationAppUsageReqBody>
	export function refOfDepartmentOverviewApplicationAppUsageReqBody(x:DepartmentOverviewApplicationAppUsageReqBody,v:Ref<DepartmentOverviewApplicationAppUsageReqBody>)
	export function unRefDepartmentOverviewApplicationAppUsageReqBody(v:Ref<DepartmentOverviewApplicationAppUsageReqBody>):DepartmentOverviewApplicationAppUsageReqBody
	export function emptyCheckWhiteBlackListApplicationVisibilityRespData():CheckWhiteBlackListApplicationVisibilityRespData
	export function emptyRefCheckWhiteBlackListApplicationVisibilityRespData():Ref<CheckWhiteBlackListApplicationVisibilityRespData>
	export function refOfCheckWhiteBlackListApplicationVisibilityRespData(x:CheckWhiteBlackListApplicationVisibilityRespData,v:Ref<CheckWhiteBlackListApplicationVisibilityRespData>)
	export function unRefCheckWhiteBlackListApplicationVisibilityRespData(v:Ref<CheckWhiteBlackListApplicationVisibilityRespData>):CheckWhiteBlackListApplicationVisibilityRespData
	export function emptyGetApplicationAppVersionReqBuilder():GetApplicationAppVersionReqBuilder
	export function emptyRefGetApplicationAppVersionReqBuilder():Ref<GetApplicationAppVersionReqBuilder>
	export function refOfGetApplicationAppVersionReqBuilder(x:GetApplicationAppVersionReqBuilder,v:Ref<GetApplicationAppVersionReqBuilder>)
	export function unRefGetApplicationAppVersionReqBuilder(v:Ref<GetApplicationAppVersionReqBuilder>):GetApplicationAppVersionReqBuilder
	export function emptyOverviewApplicationAppUsagePathReqBodyBuilder():OverviewApplicationAppUsagePathReqBodyBuilder
	export function emptyRefOverviewApplicationAppUsagePathReqBodyBuilder():Ref<OverviewApplicationAppUsagePathReqBodyBuilder>
	export function refOfOverviewApplicationAppUsagePathReqBodyBuilder(x:OverviewApplicationAppUsagePathReqBodyBuilder,v:Ref<OverviewApplicationAppUsagePathReqBodyBuilder>)
	export function unRefOverviewApplicationAppUsagePathReqBodyBuilder(v:Ref<OverviewApplicationAppUsagePathReqBodyBuilder>):OverviewApplicationAppUsagePathReqBodyBuilder
	export function emptyAppAdminUser():AppAdminUser
	export function emptyRefAppAdminUser():Ref<AppAdminUser>
	export function refOfAppAdminUser(x:AppAdminUser,v:Ref<AppAdminUser>)
	export function unRefAppAdminUser(v:Ref<AppAdminUser>):AppAdminUser
	export function emptyAppConfigScopeItem():AppConfigScopeItem
	export function emptyRefAppConfigScopeItem():Ref<AppConfigScopeItem>
	export function refOfAppConfigScopeItem(x:AppConfigScopeItem,v:Ref<AppConfigScopeItem>)
	export function unRefAppConfigScopeItem(v:Ref<AppConfigScopeItem>):AppConfigScopeItem
	export function emptyAppConfigSecurityItem():AppConfigSecurityItem
	export function emptyRefAppConfigSecurityItem():Ref<AppConfigSecurityItem>
	export function refOfAppConfigSecurityItem(x:AppConfigSecurityItem,v:Ref<AppConfigSecurityItem>)
	export function unRefAppConfigSecurityItem(v:Ref<AppConfigSecurityItem>):AppConfigSecurityItem
	export function emptyAppConfigSecurityItemBuilder():AppConfigSecurityItemBuilder
	export function emptyRefAppConfigSecurityItemBuilder():Ref<AppConfigSecurityItemBuilder>
	export function refOfAppConfigSecurityItemBuilder(x:AppConfigSecurityItemBuilder,v:Ref<AppConfigSecurityItemBuilder>)
	export function unRefAppConfigSecurityItemBuilder(v:Ref<AppConfigSecurityItemBuilder>):AppConfigSecurityItemBuilder
	export function emptyAppRecommendRuleItemInfoBuilder():AppRecommendRuleItemInfoBuilder
	export function emptyRefAppRecommendRuleItemInfoBuilder():Ref<AppRecommendRuleItemInfoBuilder>
	export function refOfAppRecommendRuleItemInfoBuilder(x:AppRecommendRuleItemInfoBuilder,v:Ref<AppRecommendRuleItemInfoBuilder>)
	export function unRefAppRecommendRuleItemInfoBuilder(v:Ref<AppRecommendRuleItemInfoBuilder>):AppRecommendRuleItemInfoBuilder
	export function emptyListApplicationAppVersionRespData():ListApplicationAppVersionRespData
	export function emptyRefListApplicationAppVersionRespData():Ref<ListApplicationAppVersionRespData>
	export function refOfListApplicationAppVersionRespData(x:ListApplicationAppVersionRespData,v:Ref<ListApplicationAppVersionRespData>)
	export function unRefListApplicationAppVersionRespData(v:Ref<ListApplicationAppVersionRespData>):ListApplicationAppVersionRespData
	export function emptyP1AppOpenInstallerV6():P1AppOpenInstallerV6
	export function emptyRefP1AppOpenInstallerV6():Ref<P1AppOpenInstallerV6>
	export function refOfP1AppOpenInstallerV6(x:P1AppOpenInstallerV6,v:Ref<P1AppOpenInstallerV6>)
	export function unRefP1AppOpenInstallerV6(v:Ref<P1AppOpenInstallerV6>):P1AppOpenInstallerV6
	export function emptyP2ApplicationAppVersionPublishApplyV6():P2ApplicationAppVersionPublishApplyV6
	export function emptyRefP2ApplicationAppVersionPublishApplyV6():Ref<P2ApplicationAppVersionPublishApplyV6>
	export function refOfP2ApplicationAppVersionPublishApplyV6(x:P2ApplicationAppVersionPublishApplyV6,v:Ref<P2ApplicationAppVersionPublishApplyV6>)
	export function unRefP2ApplicationAppVersionPublishApplyV6(v:Ref<P2ApplicationAppVersionPublishApplyV6>):P2ApplicationAppVersionPublishApplyV6
	export function emptyPatchApplicationResp():PatchApplicationResp
	export function emptyRefPatchApplicationResp():Ref<PatchApplicationResp>
	export function refOfPatchApplicationResp(x:PatchApplicationResp,v:Ref<PatchApplicationResp>)
	export function unRefPatchApplicationResp(v:Ref<PatchApplicationResp>):PatchApplicationResp
	export function emptyAppCustomCategoryI18nInfoBuilder():AppCustomCategoryI18nInfoBuilder
	export function emptyRefAppCustomCategoryI18nInfoBuilder():Ref<AppCustomCategoryI18nInfoBuilder>
	export function refOfAppCustomCategoryI18nInfoBuilder(x:AppCustomCategoryI18nInfoBuilder,v:Ref<AppCustomCategoryI18nInfoBuilder>)
	export function unRefAppCustomCategoryI18nInfoBuilder(v:Ref<AppCustomCategoryI18nInfoBuilder>):AppCustomCategoryI18nInfoBuilder
	export function emptyAppI18nInfo():AppI18nInfo
	export function emptyRefAppI18nInfo():Ref<AppI18nInfo>
	export function refOfAppI18nInfo(x:AppI18nInfo,v:Ref<AppI18nInfo>)
	export function unRefAppI18nInfo(v:Ref<AppI18nInfo>):AppI18nInfo
	export function emptyGadgetBuilder():GadgetBuilder
	export function emptyRefGadgetBuilder():Ref<GadgetBuilder>
	export function refOfGadgetBuilder(x:GadgetBuilder,v:Ref<GadgetBuilder>)
	export function unRefGadgetBuilder(v:Ref<GadgetBuilder>):GadgetBuilder
	export function emptyOverviewApplicationAppUsageReqBuilder():OverviewApplicationAppUsageReqBuilder
	export function emptyRefOverviewApplicationAppUsageReqBuilder():Ref<OverviewApplicationAppUsageReqBuilder>
	export function refOfOverviewApplicationAppUsageReqBuilder(x:OverviewApplicationAppUsageReqBuilder,v:Ref<OverviewApplicationAppUsageReqBuilder>)
	export function unRefOverviewApplicationAppUsageReqBuilder(v:Ref<OverviewApplicationAppUsageReqBuilder>):OverviewApplicationAppUsageReqBuilder
	export function emptyP1AppOpenApplicantV6():P1AppOpenApplicantV6
	export function emptyRefP1AppOpenApplicantV6():Ref<P1AppOpenApplicantV6>
	export function refOfP1AppOpenApplicantV6(x:P1AppOpenApplicantV6,v:Ref<P1AppOpenApplicantV6>)
	export function unRefP1AppOpenApplicantV6(v:Ref<P1AppOpenApplicantV6>):P1AppOpenApplicantV6
	export function emptyAppCollaborator():AppCollaborator
	export function emptyRefAppCollaborator():Ref<AppCollaborator>
	export function refOfAppCollaborator(x:AppCollaborator,v:Ref<AppCollaborator>)
	export function unRefAppCollaborator(v:Ref<AppCollaborator>):AppCollaborator
	export function emptyApplicationVisibilityUserWhiteBlackInfoBuilder():ApplicationVisibilityUserWhiteBlackInfoBuilder
	export function emptyRefApplicationVisibilityUserWhiteBlackInfoBuilder():Ref<ApplicationVisibilityUserWhiteBlackInfoBuilder>
	export function refOfApplicationVisibilityUserWhiteBlackInfoBuilder(x:ApplicationVisibilityUserWhiteBlackInfoBuilder,v:Ref<ApplicationVisibilityUserWhiteBlackInfoBuilder>)
	export function unRefApplicationVisibilityUserWhiteBlackInfoBuilder(v:Ref<ApplicationVisibilityUserWhiteBlackInfoBuilder>):ApplicationVisibilityUserWhiteBlackInfoBuilder
	export function emptyGetApplicationAppVersionRespData():GetApplicationAppVersionRespData
	export function emptyRefGetApplicationAppVersionRespData():Ref<GetApplicationAppVersionRespData>
	export function refOfGetApplicationAppVersionRespData(x:GetApplicationAppVersionRespData,v:Ref<GetApplicationAppVersionRespData>)
	export function unRefGetApplicationAppVersionRespData(v:Ref<GetApplicationAppVersionRespData>):GetApplicationAppVersionRespData
	export function emptyMiniprogram():Miniprogram
	export function emptyRefMiniprogram():Ref<Miniprogram>
	export function refOfMiniprogram(x:Miniprogram,v:Ref<Miniprogram>)
	export function unRefMiniprogram(v:Ref<Miniprogram>):Miniprogram
	export function emptyAppAbilityBotI18n():AppAbilityBotI18n
	export function emptyRefAppAbilityBotI18n():Ref<AppAbilityBotI18n>
	export function refOfAppAbilityBotI18n(x:AppAbilityBotI18n,v:Ref<AppAbilityBotI18n>)
	export function unRefAppAbilityBotI18n(v:Ref<AppAbilityBotI18n>):AppAbilityBotI18n
	export function emptyMsgActionI18nInfoBuilder():MsgActionI18nInfoBuilder
	export function emptyRefMsgActionI18nInfoBuilder():Ref<MsgActionI18nInfoBuilder>
	export function refOfMsgActionI18nInfoBuilder(x:MsgActionI18nInfoBuilder,v:Ref<MsgActionI18nInfoBuilder>)
	export function unRefMsgActionI18nInfoBuilder(v:Ref<MsgActionI18nInfoBuilder>):MsgActionI18nInfoBuilder
	export function emptyAppConfigContactsRangeBuilder():AppConfigContactsRangeBuilder
	export function emptyRefAppConfigContactsRangeBuilder():Ref<AppConfigContactsRangeBuilder>
	export function refOfAppConfigContactsRangeBuilder(x:AppConfigContactsRangeBuilder,v:Ref<AppConfigContactsRangeBuilder>)
	export function unRefAppConfigContactsRangeBuilder(v:Ref<AppConfigContactsRangeBuilder>):AppConfigContactsRangeBuilder
	export function emptyListAppRecommendRuleReqBuilder():ListAppRecommendRuleReqBuilder
	export function emptyRefListAppRecommendRuleReqBuilder():Ref<ListAppRecommendRuleReqBuilder>
	export function refOfListAppRecommendRuleReqBuilder(x:ListAppRecommendRuleReqBuilder,v:Ref<ListAppRecommendRuleReqBuilder>)
	export function unRefListAppRecommendRuleReqBuilder(v:Ref<ListAppRecommendRuleReqBuilder>):ListAppRecommendRuleReqBuilder
	export function emptyMessageActionI18nInfo():MessageActionI18nInfo
	export function emptyRefMessageActionI18nInfo():Ref<MessageActionI18nInfo>
	export function refOfMessageActionI18nInfo(x:MessageActionI18nInfo,v:Ref<MessageActionI18nInfo>)
	export function unRefMessageActionI18nInfo(v:Ref<MessageActionI18nInfo>):MessageActionI18nInfo
	export function emptyUsageOverviewItemBuilder():UsageOverviewItemBuilder
	export function emptyRefUsageOverviewItemBuilder():Ref<UsageOverviewItemBuilder>
	export function refOfUsageOverviewItemBuilder(x:UsageOverviewItemBuilder,v:Ref<UsageOverviewItemBuilder>)
	export function unRefUsageOverviewItemBuilder(v:Ref<UsageOverviewItemBuilder>):UsageOverviewItemBuilder
	export function emptyUsageTrendItemBuilder():UsageTrendItemBuilder
	export function emptyRefUsageTrendItemBuilder():Ref<UsageTrendItemBuilder>
	export function refOfUsageTrendItemBuilder(x:UsageTrendItemBuilder,v:Ref<UsageTrendItemBuilder>)
	export function unRefUsageTrendItemBuilder(v:Ref<UsageTrendItemBuilder>):UsageTrendItemBuilder
	export function emptyAppAdminUserBuilder():AppAdminUserBuilder
	export function emptyRefAppAdminUserBuilder():Ref<AppAdminUserBuilder>
	export function refOfAppAdminUserBuilder(x:AppAdminUserBuilder,v:Ref<AppAdminUserBuilder>)
	export function unRefAppAdminUserBuilder(v:Ref<AppAdminUserBuilder>):AppAdminUserBuilder
	export function emptyAppConfigVisibility():AppConfigVisibility
	export function emptyRefAppConfigVisibility():Ref<AppConfigVisibility>
	export function refOfAppConfigVisibility(x:AppConfigVisibility,v:Ref<AppConfigVisibility>)
	export function unRefAppConfigVisibility(v:Ref<AppConfigVisibility>):AppConfigVisibility
	export function emptyClientBadgeNum():ClientBadgeNum
	export function emptyRefClientBadgeNum():Ref<ClientBadgeNum>
	export function refOfClientBadgeNum(x:ClientBadgeNum,v:Ref<ClientBadgeNum>)
	export function unRefClientBadgeNum(v:Ref<ClientBadgeNum>):ClientBadgeNum
	export function emptyDepartmentId():DepartmentId
	export function emptyRefDepartmentId():Ref<DepartmentId>
	export function refOfDepartmentId(x:DepartmentId,v:Ref<DepartmentId>)
	export function unRefDepartmentId(v:Ref<DepartmentId>):DepartmentId
	export function emptyPatchApplicationAppVersionResp():PatchApplicationAppVersionResp
	export function emptyRefPatchApplicationAppVersionResp():Ref<PatchApplicationAppVersionResp>
	export function refOfPatchApplicationAppVersionResp(x:PatchApplicationAppVersionResp,v:Ref<PatchApplicationAppVersionResp>)
	export function unRefPatchApplicationAppVersionResp(v:Ref<PatchApplicationAppVersionResp>):PatchApplicationAppVersionResp
	export function emptyPatchApplicationContactsRangeReqBuilder():PatchApplicationContactsRangeReqBuilder
	export function emptyRefPatchApplicationContactsRangeReqBuilder():Ref<PatchApplicationContactsRangeReqBuilder>
	export function refOfPatchApplicationContactsRangeReqBuilder(x:PatchApplicationContactsRangeReqBuilder,v:Ref<PatchApplicationContactsRangeReqBuilder>)
	export function unRefPatchApplicationContactsRangeReqBuilder(v:Ref<PatchApplicationContactsRangeReqBuilder>):PatchApplicationContactsRangeReqBuilder
	export function emptyPatchApplicationVisibilityReq():PatchApplicationVisibilityReq
	export function emptyRefPatchApplicationVisibilityReq():Ref<PatchApplicationVisibilityReq>
	export function refOfPatchApplicationVisibilityReq(x:PatchApplicationVisibilityReq,v:Ref<PatchApplicationVisibilityReq>)
	export function unRefPatchApplicationVisibilityReq(v:Ref<PatchApplicationVisibilityReq>):PatchApplicationVisibilityReq
	export function emptyDepartmentOverviewApplicationAppUsageResp():DepartmentOverviewApplicationAppUsageResp
	export function emptyRefDepartmentOverviewApplicationAppUsageResp():Ref<DepartmentOverviewApplicationAppUsageResp>
	export function refOfDepartmentOverviewApplicationAppUsageResp(x:DepartmentOverviewApplicationAppUsageResp,v:Ref<DepartmentOverviewApplicationAppUsageResp>)
	export function unRefDepartmentOverviewApplicationAppUsageResp(v:Ref<DepartmentOverviewApplicationAppUsageResp>):DepartmentOverviewApplicationAppUsageResp
	export function emptyEventBuilder():EventBuilder
	export function emptyRefEventBuilder():Ref<EventBuilder>
	export function refOfEventBuilder(x:EventBuilder,v:Ref<EventBuilder>)
	export function unRefEventBuilder(v:Ref<EventBuilder>):EventBuilder
	export function emptyListApplicationFeedbackReqBuilder():ListApplicationFeedbackReqBuilder
	export function emptyRefListApplicationFeedbackReqBuilder():Ref<ListApplicationFeedbackReqBuilder>
	export function refOfListApplicationFeedbackReqBuilder(x:ListApplicationFeedbackReqBuilder,v:Ref<ListApplicationFeedbackReqBuilder>)
	export function unRefListApplicationFeedbackReqBuilder(v:Ref<ListApplicationFeedbackReqBuilder>):ListApplicationFeedbackReqBuilder
	export function emptyOverviewApplicationAppUsageReqBodyBuilder():OverviewApplicationAppUsageReqBodyBuilder
	export function emptyRefOverviewApplicationAppUsageReqBodyBuilder():Ref<OverviewApplicationAppUsageReqBodyBuilder>
	export function refOfOverviewApplicationAppUsageReqBodyBuilder(x:OverviewApplicationAppUsageReqBodyBuilder,v:Ref<OverviewApplicationAppUsageReqBodyBuilder>)
	export function unRefOverviewApplicationAppUsageReqBodyBuilder(v:Ref<OverviewApplicationAppUsageReqBodyBuilder>):OverviewApplicationAppUsageReqBodyBuilder
	export function emptyP2ApplicationFeedbackCreatedV6Handler():P2ApplicationFeedbackCreatedV6Handler
	export function emptyRefP2ApplicationFeedbackCreatedV6Handler():Ref<P2ApplicationFeedbackCreatedV6Handler>
	export function refOfP2ApplicationFeedbackCreatedV6Handler(x:P2ApplicationFeedbackCreatedV6Handler,v:Ref<P2ApplicationFeedbackCreatedV6Handler>)
	export function unRefP2ApplicationFeedbackCreatedV6Handler(v:Ref<P2ApplicationFeedbackCreatedV6Handler>):P2ApplicationFeedbackCreatedV6Handler
	export function emptyListApplicationAppVersionReqBuilder():ListApplicationAppVersionReqBuilder
	export function emptyRefListApplicationAppVersionReqBuilder():Ref<ListApplicationAppVersionReqBuilder>
	export function refOfListApplicationAppVersionReqBuilder(x:ListApplicationAppVersionReqBuilder,v:Ref<ListApplicationAppVersionReqBuilder>)
	export function unRefListApplicationAppVersionReqBuilder(v:Ref<ListApplicationAppVersionReqBuilder>):ListApplicationAppVersionReqBuilder
	export function emptyPatchApplicationAppVersionReq():PatchApplicationAppVersionReq
	export function emptyRefPatchApplicationAppVersionReq():Ref<PatchApplicationAppVersionReq>
	export function refOfPatchApplicationAppVersionReq(x:PatchApplicationAppVersionReq,v:Ref<PatchApplicationAppVersionReq>)
	export function unRefPatchApplicationAppVersionReq(v:Ref<PatchApplicationAppVersionReq>):PatchApplicationAppVersionReq
	export function emptyUnderauditlistApplicationReq():UnderauditlistApplicationReq
	export function emptyRefUnderauditlistApplicationReq():Ref<UnderauditlistApplicationReq>
	export function refOfUnderauditlistApplicationReq(x:UnderauditlistApplicationReq,v:Ref<UnderauditlistApplicationReq>)
	export function unRefUnderauditlistApplicationReq(v:Ref<UnderauditlistApplicationReq>):UnderauditlistApplicationReq
	export function emptyApplicationDepartmentAppUsageBuilder():ApplicationDepartmentAppUsageBuilder
	export function emptyRefApplicationDepartmentAppUsageBuilder():Ref<ApplicationDepartmentAppUsageBuilder>
	export function refOfApplicationDepartmentAppUsageBuilder(x:ApplicationDepartmentAppUsageBuilder,v:Ref<ApplicationDepartmentAppUsageBuilder>)
	export function unRefApplicationDepartmentAppUsageBuilder(v:Ref<ApplicationDepartmentAppUsageBuilder>):ApplicationDepartmentAppUsageBuilder
	export function emptyApplicationEventOwnerBuilder():ApplicationEventOwnerBuilder
	export function emptyRefApplicationEventOwnerBuilder():Ref<ApplicationEventOwnerBuilder>
	export function refOfApplicationEventOwnerBuilder(x:ApplicationEventOwnerBuilder,v:Ref<ApplicationEventOwnerBuilder>)
	export function unRefApplicationEventOwnerBuilder(v:Ref<ApplicationEventOwnerBuilder>):ApplicationEventOwnerBuilder
	export function emptyBlockI18nInfoBuilder():BlockI18nInfoBuilder
	export function emptyRefBlockI18nInfoBuilder():Ref<BlockI18nInfoBuilder>
	export function refOfBlockI18nInfoBuilder(x:BlockI18nInfoBuilder,v:Ref<BlockI18nInfoBuilder>)
	export function unRefBlockI18nInfoBuilder(v:Ref<BlockI18nInfoBuilder>):BlockI18nInfoBuilder
	export function emptyCloudDocBuilder():CloudDocBuilder
	export function emptyRefCloudDocBuilder():Ref<CloudDocBuilder>
	export function refOfCloudDocBuilder(x:CloudDocBuilder,v:Ref<CloudDocBuilder>)
	export function unRefCloudDocBuilder(v:Ref<CloudDocBuilder>):CloudDocBuilder
	export function emptyDepartmentOverviewApplicationAppUsageReqBodyBuilder():DepartmentOverviewApplicationAppUsageReqBodyBuilder
	export function emptyRefDepartmentOverviewApplicationAppUsageReqBodyBuilder():Ref<DepartmentOverviewApplicationAppUsageReqBodyBuilder>
	export function refOfDepartmentOverviewApplicationAppUsageReqBodyBuilder(x:DepartmentOverviewApplicationAppUsageReqBodyBuilder,v:Ref<DepartmentOverviewApplicationAppUsageReqBodyBuilder>)
	export function unRefDepartmentOverviewApplicationAppUsageReqBodyBuilder(v:Ref<DepartmentOverviewApplicationAppUsageReqBodyBuilder>):DepartmentOverviewApplicationAppUsageReqBodyBuilder
	export function emptyUserIdBuilder():UserIdBuilder
	export function emptyRefUserIdBuilder():Ref<UserIdBuilder>
	export function refOfUserIdBuilder(x:UserIdBuilder,v:Ref<UserIdBuilder>)
	export function unRefUserIdBuilder(v:Ref<UserIdBuilder>):UserIdBuilder
	export function emptyApplicationDepartmentAppUsage():ApplicationDepartmentAppUsage
	export function emptyRefApplicationDepartmentAppUsage():Ref<ApplicationDepartmentAppUsage>
	export function refOfApplicationDepartmentAppUsage(x:ApplicationDepartmentAppUsage,v:Ref<ApplicationDepartmentAppUsage>)
	export function unRefApplicationDepartmentAppUsage(v:Ref<ApplicationDepartmentAppUsage>):ApplicationDepartmentAppUsage
	export function emptyContactsRangeConfigurationApplicationReqBuilder():ContactsRangeConfigurationApplicationReqBuilder
	export function emptyRefContactsRangeConfigurationApplicationReqBuilder():Ref<ContactsRangeConfigurationApplicationReqBuilder>
	export function refOfContactsRangeConfigurationApplicationReqBuilder(x:ContactsRangeConfigurationApplicationReqBuilder,v:Ref<ContactsRangeConfigurationApplicationReqBuilder>)
	export function unRefContactsRangeConfigurationApplicationReqBuilder(v:Ref<ContactsRangeConfigurationApplicationReqBuilder>):ContactsRangeConfigurationApplicationReqBuilder
	export function emptyDepartmentOverviewApplicationAppUsageReq():DepartmentOverviewApplicationAppUsageReq
	export function emptyRefDepartmentOverviewApplicationAppUsageReq():Ref<DepartmentOverviewApplicationAppUsageReq>
	export function refOfDepartmentOverviewApplicationAppUsageReq(x:DepartmentOverviewApplicationAppUsageReq,v:Ref<DepartmentOverviewApplicationAppUsageReq>)
	export function unRefDepartmentOverviewApplicationAppUsageReq(v:Ref<DepartmentOverviewApplicationAppUsageReq>):DepartmentOverviewApplicationAppUsageReq
	export function emptyWebAppBuilder():WebAppBuilder
	export function emptyRefWebAppBuilder():Ref<WebAppBuilder>
	export function refOfWebAppBuilder(x:WebAppBuilder,v:Ref<WebAppBuilder>)
	export function unRefWebAppBuilder(v:Ref<WebAppBuilder>):WebAppBuilder
	export function emptyWorkplaceWidgetBuilder():WorkplaceWidgetBuilder
	export function emptyRefWorkplaceWidgetBuilder():Ref<WorkplaceWidgetBuilder>
	export function refOfWorkplaceWidgetBuilder(x:WorkplaceWidgetBuilder,v:Ref<WorkplaceWidgetBuilder>)
	export function unRefWorkplaceWidgetBuilder(v:Ref<WorkplaceWidgetBuilder>):WorkplaceWidgetBuilder
	export function emptyAppContactsRangeIdList():AppContactsRangeIdList
	export function emptyRefAppContactsRangeIdList():Ref<AppContactsRangeIdList>
	export function refOfAppContactsRangeIdList(x:AppContactsRangeIdList,v:Ref<AppContactsRangeIdList>)
	export function unRefAppContactsRangeIdList(v:Ref<AppContactsRangeIdList>):AppContactsRangeIdList
	export function emptyAppI18nInfoBuilder():AppI18nInfoBuilder
	export function emptyRefAppI18nInfoBuilder():Ref<AppI18nInfoBuilder>
	export function refOfAppI18nInfoBuilder(x:AppI18nInfoBuilder,v:Ref<AppI18nInfoBuilder>)
	export function unRefAppI18nInfoBuilder(v:Ref<AppI18nInfoBuilder>):AppI18nInfoBuilder
	export function emptyAppRecommendRuleItemInfoI18nNameBuilder():AppRecommendRuleItemInfoI18nNameBuilder
	export function emptyRefAppRecommendRuleItemInfoI18nNameBuilder():Ref<AppRecommendRuleItemInfoI18nNameBuilder>
	export function refOfAppRecommendRuleItemInfoI18nNameBuilder(x:AppRecommendRuleItemInfoI18nNameBuilder,v:Ref<AppRecommendRuleItemInfoI18nNameBuilder>)
	export function unRefAppRecommendRuleItemInfoI18nNameBuilder(v:Ref<AppRecommendRuleItemInfoI18nNameBuilder>):AppRecommendRuleItemInfoI18nNameBuilder
	export function emptyAppScopeBuilder():AppScopeBuilder
	export function emptyRefAppScopeBuilder():Ref<AppScopeBuilder>
	export function refOfAppScopeBuilder(x:AppScopeBuilder,v:Ref<AppScopeBuilder>)
	export function unRefAppScopeBuilder(v:Ref<AppScopeBuilder>):AppScopeBuilder
	export function emptyP2ApplicationVisibilityAddedV6Handler():P2ApplicationVisibilityAddedV6Handler
	export function emptyRefP2ApplicationVisibilityAddedV6Handler():Ref<P2ApplicationVisibilityAddedV6Handler>
	export function refOfP2ApplicationVisibilityAddedV6Handler(x:P2ApplicationVisibilityAddedV6Handler,v:Ref<P2ApplicationVisibilityAddedV6Handler>)
	export function unRefP2ApplicationVisibilityAddedV6Handler(v:Ref<P2ApplicationVisibilityAddedV6Handler>):P2ApplicationVisibilityAddedV6Handler
	export function emptyEvent():Event
	export function emptyRefEvent():Ref<Event>
	export function refOfEvent(x:Event,v:Ref<Event>)
	export function unRefEvent(v:Ref<Event>):Event
	export function emptyP1AppOpenInstallerEmployeeV6():P1AppOpenInstallerEmployeeV6
	export function emptyRefP1AppOpenInstallerEmployeeV6():Ref<P1AppOpenInstallerEmployeeV6>
	export function refOfP1AppOpenInstallerEmployeeV6(x:P1AppOpenInstallerEmployeeV6,v:Ref<P1AppOpenInstallerEmployeeV6>)
	export function unRefP1AppOpenInstallerEmployeeV6(v:Ref<P1AppOpenInstallerEmployeeV6>):P1AppOpenInstallerEmployeeV6
	export function emptyUnderauditlistApplicationReqBuilder():UnderauditlistApplicationReqBuilder
	export function emptyRefUnderauditlistApplicationReqBuilder():Ref<UnderauditlistApplicationReqBuilder>
	export function refOfUnderauditlistApplicationReqBuilder(x:UnderauditlistApplicationReqBuilder,v:Ref<UnderauditlistApplicationReqBuilder>)
	export function unRefUnderauditlistApplicationReqBuilder(v:Ref<UnderauditlistApplicationReqBuilder>):UnderauditlistApplicationReqBuilder
	export function emptyScopeBuilder():ScopeBuilder
	export function emptyRefScopeBuilder():Ref<ScopeBuilder>
	export function refOfScopeBuilder(x:ScopeBuilder,v:Ref<ScopeBuilder>)
	export function unRefScopeBuilder(v:Ref<ScopeBuilder>):ScopeBuilder
	export function emptyAccessibility():Accessibility
	export function emptyRefAccessibility():Ref<Accessibility>
	export function refOfAccessibility(x:Accessibility,v:Ref<Accessibility>)
	export function unRefAccessibility(v:Ref<Accessibility>):Accessibility
	export function emptyAppCustomCategoryBuilder():AppCustomCategoryBuilder
	export function emptyRefAppCustomCategoryBuilder():Ref<AppCustomCategoryBuilder>
	export function refOfAppCustomCategoryBuilder(x:AppCustomCategoryBuilder,v:Ref<AppCustomCategoryBuilder>)
	export function unRefAppCustomCategoryBuilder(v:Ref<AppCustomCategoryBuilder>):AppCustomCategoryBuilder
	export function emptyAppScopeI18nInfoBuilder():AppScopeI18nInfoBuilder
	export function emptyRefAppScopeI18nInfoBuilder():Ref<AppScopeI18nInfoBuilder>
	export function refOfAppScopeI18nInfoBuilder(x:AppScopeI18nInfoBuilder,v:Ref<AppScopeI18nInfoBuilder>)
	export function unRefAppScopeI18nInfoBuilder(v:Ref<AppScopeI18nInfoBuilder>):AppScopeI18nInfoBuilder
	export function emptyAppVisibilityItem():AppVisibilityItem
	export function emptyRefAppVisibilityItem():Ref<AppVisibilityItem>
	export function refOfAppVisibilityItem(x:AppVisibilityItem,v:Ref<AppVisibilityItem>)
	export function unRefAppVisibilityItem(v:Ref<AppVisibilityItem>):AppVisibilityItem
	export function emptyApplicationVisibilityBuilder():ApplicationVisibilityBuilder
	export function emptyRefApplicationVisibilityBuilder():Ref<ApplicationVisibilityBuilder>
	export function refOfApplicationVisibilityBuilder(x:ApplicationVisibilityBuilder,v:Ref<ApplicationVisibilityBuilder>)
	export function unRefApplicationVisibilityBuilder(v:Ref<ApplicationVisibilityBuilder>):ApplicationVisibilityBuilder
	export function emptyPatchApplicationVisibilityPathReqBodyBuilder():PatchApplicationVisibilityPathReqBodyBuilder
	export function emptyRefPatchApplicationVisibilityPathReqBodyBuilder():Ref<PatchApplicationVisibilityPathReqBodyBuilder>
	export function refOfPatchApplicationVisibilityPathReqBodyBuilder(x:PatchApplicationVisibilityPathReqBodyBuilder,v:Ref<PatchApplicationVisibilityPathReqBodyBuilder>)
	export function unRefPatchApplicationVisibilityPathReqBodyBuilder(v:Ref<PatchApplicationVisibilityPathReqBodyBuilder>):PatchApplicationVisibilityPathReqBodyBuilder
	export function emptyUpdateApplicationManagementReqBodyBuilder():UpdateApplicationManagementReqBodyBuilder
	export function emptyRefUpdateApplicationManagementReqBodyBuilder():Ref<UpdateApplicationManagementReqBodyBuilder>
	export function refOfUpdateApplicationManagementReqBodyBuilder(x:UpdateApplicationManagementReqBodyBuilder,v:Ref<UpdateApplicationManagementReqBodyBuilder>)
	export function unRefUpdateApplicationManagementReqBodyBuilder(v:Ref<UpdateApplicationManagementReqBodyBuilder>):UpdateApplicationManagementReqBodyBuilder
	export function emptyApplicationAppContactsRange():ApplicationAppContactsRange
	export function emptyRefApplicationAppContactsRange():Ref<ApplicationAppContactsRange>
	export function refOfApplicationAppContactsRange(x:ApplicationAppContactsRange,v:Ref<ApplicationAppContactsRange>)
	export function unRefApplicationAppContactsRange(v:Ref<ApplicationAppContactsRange>):ApplicationAppContactsRange
	export function emptyApplicationAppVersionEvent():ApplicationAppVersionEvent
	export function emptyRefApplicationAppVersionEvent():Ref<ApplicationAppVersionEvent>
	export function refOfApplicationAppVersionEvent(x:ApplicationAppVersionEvent,v:Ref<ApplicationAppVersionEvent>)
	export function unRefApplicationAppVersionEvent(v:Ref<ApplicationAppVersionEvent>):ApplicationAppVersionEvent
	export function emptyCheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder():CheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder
	export function emptyRefCheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder():Ref<CheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder>
	export function refOfCheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder(x:CheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder,v:Ref<CheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder>)
	export function unRefCheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder(v:Ref<CheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder>):CheckWhiteBlackListApplicationVisibilityPathReqBodyBuilder
	export function emptyMsgAction():MsgAction
	export function emptyRefMsgAction():Ref<MsgAction>
	export function refOfMsgAction(x:MsgAction,v:Ref<MsgAction>)
	export function unRefMsgAction(v:Ref<MsgAction>):MsgAction
	export function emptyOverviewApplicationAppUsageResp():OverviewApplicationAppUsageResp
	export function emptyRefOverviewApplicationAppUsageResp():Ref<OverviewApplicationAppUsageResp>
	export function refOfOverviewApplicationAppUsageResp(x:OverviewApplicationAppUsageResp,v:Ref<OverviewApplicationAppUsageResp>)
	export function unRefOverviewApplicationAppUsageResp(v:Ref<OverviewApplicationAppUsageResp>):OverviewApplicationAppUsageResp
	export function emptyAppVersionRemarkEvent():AppVersionRemarkEvent
	export function emptyRefAppVersionRemarkEvent():Ref<AppVersionRemarkEvent>
	export function refOfAppVersionRemarkEvent(x:AppVersionRemarkEvent,v:Ref<AppVersionRemarkEvent>)
	export function unRefAppVersionRemarkEvent(v:Ref<AppVersionRemarkEvent>):AppVersionRemarkEvent
	export function emptyP1AppUninstalledV6Data():P1AppUninstalledV6Data
	export function emptyRefP1AppUninstalledV6Data():Ref<P1AppUninstalledV6Data>
	export function refOfP1AppUninstalledV6Data(x:P1AppUninstalledV6Data,v:Ref<P1AppUninstalledV6Data>)
	export function unRefP1AppUninstalledV6Data(v:Ref<P1AppUninstalledV6Data>):P1AppUninstalledV6Data
	export function emptyPatchApplicationContactsRangeReqBody():PatchApplicationContactsRangeReqBody
	export function emptyRefPatchApplicationContactsRangeReqBody():Ref<PatchApplicationContactsRangeReqBody>
	export function refOfPatchApplicationContactsRangeReqBody(x:PatchApplicationContactsRangeReqBody,v:Ref<PatchApplicationContactsRangeReqBody>)
	export function unRefPatchApplicationContactsRangeReqBody(v:Ref<PatchApplicationContactsRangeReqBody>):PatchApplicationContactsRangeReqBody
	export function emptyPlusMenu():PlusMenu
	export function emptyRefPlusMenu():Ref<PlusMenu>
	export function refOfPlusMenu(x:PlusMenu,v:Ref<PlusMenu>)
	export function unRefPlusMenu(v:Ref<PlusMenu>):PlusMenu
	export function emptyOperatorBuilder():OperatorBuilder
	export function emptyRefOperatorBuilder():Ref<OperatorBuilder>
	export function refOfOperatorBuilder(x:OperatorBuilder,v:Ref<OperatorBuilder>)
	export function unRefOperatorBuilder(v:Ref<OperatorBuilder>):OperatorBuilder
	export function emptyP1AppOpenV6Handler():P1AppOpenV6Handler
	export function emptyRefP1AppOpenV6Handler():Ref<P1AppOpenV6Handler>
	export function refOfP1AppOpenV6Handler(x:P1AppOpenV6Handler,v:Ref<P1AppOpenV6Handler>)
	export function unRefP1AppOpenV6Handler(v:Ref<P1AppOpenV6Handler>):P1AppOpenV6Handler
	export function emptyPatchApplicationContactsRangeReq():PatchApplicationContactsRangeReq
	export function emptyRefPatchApplicationContactsRangeReq():Ref<PatchApplicationContactsRangeReq>
	export function refOfPatchApplicationContactsRangeReq(x:PatchApplicationContactsRangeReq,v:Ref<PatchApplicationContactsRangeReq>)
	export function unRefPatchApplicationContactsRangeReq(v:Ref<PatchApplicationContactsRangeReq>):PatchApplicationContactsRangeReq
	export function emptyUnderauditlistApplicationRespData():UnderauditlistApplicationRespData
	export function emptyRefUnderauditlistApplicationRespData():Ref<UnderauditlistApplicationRespData>
	export function refOfUnderauditlistApplicationRespData(x:UnderauditlistApplicationRespData,v:Ref<UnderauditlistApplicationRespData>)
	export function unRefUnderauditlistApplicationRespData(v:Ref<UnderauditlistApplicationRespData>):UnderauditlistApplicationRespData
	export function emptyUpdateApplicationManagementReqBody():UpdateApplicationManagementReqBody
	export function emptyRefUpdateApplicationManagementReqBody():Ref<UpdateApplicationManagementReqBody>
	export function refOfUpdateApplicationManagementReqBody(x:UpdateApplicationManagementReqBody,v:Ref<UpdateApplicationManagementReqBody>)
	export function unRefUpdateApplicationManagementReqBody(v:Ref<UpdateApplicationManagementReqBody>):UpdateApplicationManagementReqBody
	export function emptyAppRecommendRuleBuilder():AppRecommendRuleBuilder
	export function emptyRefAppRecommendRuleBuilder():Ref<AppRecommendRuleBuilder>
	export function refOfAppRecommendRuleBuilder(x:AppRecommendRuleBuilder,v:Ref<AppRecommendRuleBuilder>)
	export function unRefAppRecommendRuleBuilder(v:Ref<AppRecommendRuleBuilder>):AppRecommendRuleBuilder
	export function emptyDepartmentIdBuilder():DepartmentIdBuilder
	export function emptyRefDepartmentIdBuilder():Ref<DepartmentIdBuilder>
	export function refOfDepartmentIdBuilder(x:DepartmentIdBuilder,v:Ref<DepartmentIdBuilder>)
	export function unRefDepartmentIdBuilder(v:Ref<DepartmentIdBuilder>):DepartmentIdBuilder
	export function emptyP2ApplicationAppVersionAuditV6Handler():P2ApplicationAppVersionAuditV6Handler
	export function emptyRefP2ApplicationAppVersionAuditV6Handler():Ref<P2ApplicationAppVersionAuditV6Handler>
	export function refOfP2ApplicationAppVersionAuditV6Handler(x:P2ApplicationAppVersionAuditV6Handler,v:Ref<P2ApplicationAppVersionAuditV6Handler>)
	export function unRefP2ApplicationAppVersionAuditV6Handler(v:Ref<P2ApplicationAppVersionAuditV6Handler>):P2ApplicationAppVersionAuditV6Handler
	export function emptyUsageOverviewItem():UsageOverviewItem
	export function emptyRefUsageOverviewItem():Ref<UsageOverviewItem>
	export function refOfUsageOverviewItem(x:UsageOverviewItem,v:Ref<UsageOverviewItem>)
	export function unRefUsageOverviewItem(v:Ref<UsageOverviewItem>):UsageOverviewItem
	export function emptyAppCustomCategoryI18nInfo():AppCustomCategoryI18nInfo
	export function emptyRefAppCustomCategoryI18nInfo():Ref<AppCustomCategoryI18nInfo>
	export function refOfAppCustomCategoryI18nInfo(x:AppCustomCategoryI18nInfo,v:Ref<AppCustomCategoryI18nInfo>)
	export function unRefAppCustomCategoryI18nInfo(v:Ref<AppCustomCategoryI18nInfo>):AppCustomCategoryI18nInfo
	export function emptyAppRecommendRuleVisibilityInfoBuilder():AppRecommendRuleVisibilityInfoBuilder
	export function emptyRefAppRecommendRuleVisibilityInfoBuilder():Ref<AppRecommendRuleVisibilityInfoBuilder>
	export function refOfAppRecommendRuleVisibilityInfoBuilder(x:AppRecommendRuleVisibilityInfoBuilder,v:Ref<AppRecommendRuleVisibilityInfoBuilder>)
	export function unRefAppRecommendRuleVisibilityInfoBuilder(v:Ref<AppRecommendRuleVisibilityInfoBuilder>):AppRecommendRuleVisibilityInfoBuilder
	export function emptyUpdateApplicationManagementResp():UpdateApplicationManagementResp
	export function emptyRefUpdateApplicationManagementResp():Ref<UpdateApplicationManagementResp>
	export function refOfUpdateApplicationManagementResp(x:UpdateApplicationManagementResp,v:Ref<UpdateApplicationManagementResp>)
	export function unRefUpdateApplicationManagementResp(v:Ref<UpdateApplicationManagementResp>):UpdateApplicationManagementResp
	export function emptyP1AppStatusChangedV6Data():P1AppStatusChangedV6Data
	export function emptyRefP1AppStatusChangedV6Data():Ref<P1AppStatusChangedV6Data>
	export function refOfP1AppStatusChangedV6Data(x:P1AppStatusChangedV6Data,v:Ref<P1AppStatusChangedV6Data>)
	export function unRefP1AppStatusChangedV6Data(v:Ref<P1AppStatusChangedV6Data>):P1AppStatusChangedV6Data
	export function emptyP2BotMenuV6():P2BotMenuV6
	export function emptyRefP2BotMenuV6():Ref<P2BotMenuV6>
	export function refOfP2BotMenuV6(x:P2BotMenuV6,v:Ref<P2BotMenuV6>)
	export function unRefP2BotMenuV6(v:Ref<P2BotMenuV6>):P2BotMenuV6
	export function emptyPatchApplicationContactsRangeReqBodyBuilder():PatchApplicationContactsRangeReqBodyBuilder
	export function emptyRefPatchApplicationContactsRangeReqBodyBuilder():Ref<PatchApplicationContactsRangeReqBodyBuilder>
	export function refOfPatchApplicationContactsRangeReqBodyBuilder(x:PatchApplicationContactsRangeReqBodyBuilder,v:Ref<PatchApplicationContactsRangeReqBodyBuilder>)
	export function unRefPatchApplicationContactsRangeReqBodyBuilder(v:Ref<PatchApplicationContactsRangeReqBodyBuilder>):PatchApplicationContactsRangeReqBodyBuilder
	export function emptyAppRecommendRule():AppRecommendRule
	export function emptyRefAppRecommendRule():Ref<AppRecommendRule>
	export function refOfAppRecommendRule(x:AppRecommendRule,v:Ref<AppRecommendRule>)
	export function unRefAppRecommendRule(v:Ref<AppRecommendRule>):AppRecommendRule
	export function emptyApplicationVisibility():ApplicationVisibility
	export function emptyRefApplicationVisibility():Ref<ApplicationVisibility>
	export function refOfApplicationVisibility(x:ApplicationVisibility,v:Ref<ApplicationVisibility>)
	export function unRefApplicationVisibility(v:Ref<ApplicationVisibility>):ApplicationVisibility
	export function emptyListApplicationAppVersionIterator():ListApplicationAppVersionIterator
	export function emptyRefListApplicationAppVersionIterator():Ref<ListApplicationAppVersionIterator>
	export function refOfListApplicationAppVersionIterator(x:ListApplicationAppVersionIterator,v:Ref<ListApplicationAppVersionIterator>)
	export function unRefListApplicationAppVersionIterator(v:Ref<ListApplicationAppVersionIterator>):ListApplicationAppVersionIterator
	export function emptyListApplicationFeedbackReq():ListApplicationFeedbackReq
	export function emptyRefListApplicationFeedbackReq():Ref<ListApplicationFeedbackReq>
	export function refOfListApplicationFeedbackReq(x:ListApplicationFeedbackReq,v:Ref<ListApplicationFeedbackReq>)
	export function unRefListApplicationFeedbackReq(v:Ref<ListApplicationFeedbackReq>):ListApplicationFeedbackReq
	export function emptyMsgActionI18nInfo():MsgActionI18nInfo
	export function emptyRefMsgActionI18nInfo():Ref<MsgActionI18nInfo>
	export function refOfMsgActionI18nInfo(x:MsgActionI18nInfo,v:Ref<MsgActionI18nInfo>)
	export function unRefMsgActionI18nInfo(v:Ref<MsgActionI18nInfo>):MsgActionI18nInfo
	export function emptyAppConfigScopeItemBuilder():AppConfigScopeItemBuilder
	export function emptyRefAppConfigScopeItemBuilder():Ref<AppConfigScopeItemBuilder>
	export function refOfAppConfigScopeItemBuilder(x:AppConfigScopeItemBuilder,v:Ref<AppConfigScopeItemBuilder>)
	export function unRefAppConfigScopeItemBuilder(v:Ref<AppConfigScopeItemBuilder>):AppConfigScopeItemBuilder
	export function emptyDepartmentOverviewApplicationAppUsageRespData():DepartmentOverviewApplicationAppUsageRespData
	export function emptyRefDepartmentOverviewApplicationAppUsageRespData():Ref<DepartmentOverviewApplicationAppUsageRespData>
	export function refOfDepartmentOverviewApplicationAppUsageRespData(x:DepartmentOverviewApplicationAppUsageRespData,v:Ref<DepartmentOverviewApplicationAppUsageRespData>)
	export function unRefDepartmentOverviewApplicationAppUsageRespData(v:Ref<DepartmentOverviewApplicationAppUsageRespData>):DepartmentOverviewApplicationAppUsageRespData
	export function emptyListAppRecommendRuleResp():ListAppRecommendRuleResp
	export function emptyRefListAppRecommendRuleResp():Ref<ListAppRecommendRuleResp>
	export function refOfListAppRecommendRuleResp(x:ListAppRecommendRuleResp,v:Ref<ListAppRecommendRuleResp>)
	export function unRefListAppRecommendRuleResp(v:Ref<ListAppRecommendRuleResp>):ListAppRecommendRuleResp
	export function emptyAppUsageTrendItems():AppUsageTrendItems
	export function emptyRefAppUsageTrendItems():Ref<AppUsageTrendItems>
	export function refOfAppUsageTrendItems(x:AppUsageTrendItems,v:Ref<AppUsageTrendItems>)
	export function unRefAppUsageTrendItems(v:Ref<AppUsageTrendItems>):AppUsageTrendItems
	export function emptyApplicationVisibilityUserWhiteBlackInfo():ApplicationVisibilityUserWhiteBlackInfo
	export function emptyRefApplicationVisibilityUserWhiteBlackInfo():Ref<ApplicationVisibilityUserWhiteBlackInfo>
	export function refOfApplicationVisibilityUserWhiteBlackInfo(x:ApplicationVisibilityUserWhiteBlackInfo,v:Ref<ApplicationVisibilityUserWhiteBlackInfo>)
	export function unRefApplicationVisibilityUserWhiteBlackInfo(v:Ref<ApplicationVisibilityUserWhiteBlackInfo>):ApplicationVisibilityUserWhiteBlackInfo
	export function emptyContactsRangeConfigurationApplicationRespData():ContactsRangeConfigurationApplicationRespData
	export function emptyRefContactsRangeConfigurationApplicationRespData():Ref<ContactsRangeConfigurationApplicationRespData>
	export function refOfContactsRangeConfigurationApplicationRespData(x:ContactsRangeConfigurationApplicationRespData,v:Ref<ContactsRangeConfigurationApplicationRespData>)
	export function unRefContactsRangeConfigurationApplicationRespData(v:Ref<ContactsRangeConfigurationApplicationRespData>):ContactsRangeConfigurationApplicationRespData
	export function emptyGetApplicationReq():GetApplicationReq
	export function emptyRefGetApplicationReq():Ref<GetApplicationReq>
	export function refOfGetApplicationReq(x:GetApplicationReq,v:Ref<GetApplicationReq>)
	export function unRefGetApplicationReq(v:Ref<GetApplicationReq>):GetApplicationReq
	export function emptyP2ApplicationAppVersionPublishRevokeV6Handler():P2ApplicationAppVersionPublishRevokeV6Handler
	export function emptyRefP2ApplicationAppVersionPublishRevokeV6Handler():Ref<P2ApplicationAppVersionPublishRevokeV6Handler>
	export function refOfP2ApplicationAppVersionPublishRevokeV6Handler(x:P2ApplicationAppVersionPublishRevokeV6Handler,v:Ref<P2ApplicationAppVersionPublishRevokeV6Handler>)
	export function unRefP2ApplicationAppVersionPublishRevokeV6Handler(v:Ref<P2ApplicationAppVersionPublishRevokeV6Handler>):P2ApplicationAppVersionPublishRevokeV6Handler
	export function emptyScope():Scope
	export function emptyRefScope():Ref<Scope>
	export function refOfScope(x:Scope,v:Ref<Scope>)
	export function unRefScope(v:Ref<Scope>):Scope
	export function emptyUsageTrendItem():UsageTrendItem
	export function emptyRefUsageTrendItem():Ref<UsageTrendItem>
	export function refOfUsageTrendItem(x:UsageTrendItem,v:Ref<UsageTrendItem>)
	export function unRefUsageTrendItem(v:Ref<UsageTrendItem>):UsageTrendItem
	export function emptyAppConfigEvent():AppConfigEvent
	export function emptyRefAppConfigEvent():Ref<AppConfigEvent>
	export function refOfAppConfigEvent(x:AppConfigEvent,v:Ref<AppConfigEvent>)
	export function unRefAppConfigEvent(v:Ref<AppConfigEvent>):AppConfigEvent
	export function emptyGetApplicationAppVersionReq():GetApplicationAppVersionReq
	export function emptyRefGetApplicationAppVersionReq():Ref<GetApplicationAppVersionReq>
	export function refOfGetApplicationAppVersionReq(x:GetApplicationAppVersionReq,v:Ref<GetApplicationAppVersionReq>)
	export function unRefGetApplicationAppVersionReq(v:Ref<GetApplicationAppVersionReq>):GetApplicationAppVersionReq
	export function emptyGetApplicationAppVersionResp():GetApplicationAppVersionResp
	export function emptyRefGetApplicationAppVersionResp():Ref<GetApplicationAppVersionResp>
	export function refOfGetApplicationAppVersionResp(x:GetApplicationAppVersionResp,v:Ref<GetApplicationAppVersionResp>)
	export function unRefGetApplicationAppVersionResp(v:Ref<GetApplicationAppVersionResp>):GetApplicationAppVersionResp
	export function emptyP1OrderPaidV6():P1OrderPaidV6
	export function emptyRefP1OrderPaidV6():Ref<P1OrderPaidV6>
	export function refOfP1OrderPaidV6(x:P1OrderPaidV6,v:Ref<P1OrderPaidV6>)
	export function unRefP1OrderPaidV6(v:Ref<P1OrderPaidV6>):P1OrderPaidV6
	export function emptyP2ApplicationVisibilityAddedV6Data():P2ApplicationVisibilityAddedV6Data
	export function emptyRefP2ApplicationVisibilityAddedV6Data():Ref<P2ApplicationVisibilityAddedV6Data>
	export function refOfP2ApplicationVisibilityAddedV6Data(x:P2ApplicationVisibilityAddedV6Data,v:Ref<P2ApplicationVisibilityAddedV6Data>)
	export function unRefP2ApplicationVisibilityAddedV6Data(v:Ref<P2ApplicationVisibilityAddedV6Data>):P2ApplicationVisibilityAddedV6Data
	export function emptyP2ApplicationAppVersionPublishApplyV6Data():P2ApplicationAppVersionPublishApplyV6Data
	export function emptyRefP2ApplicationAppVersionPublishApplyV6Data():Ref<P2ApplicationAppVersionPublishApplyV6Data>
	export function refOfP2ApplicationAppVersionPublishApplyV6Data(x:P2ApplicationAppVersionPublishApplyV6Data,v:Ref<P2ApplicationAppVersionPublishApplyV6Data>)
	export function unRefP2ApplicationAppVersionPublishApplyV6Data(v:Ref<P2ApplicationAppVersionPublishApplyV6Data>):P2ApplicationAppVersionPublishApplyV6Data
	export function emptySetAppBadgeReqBuilder():SetAppBadgeReqBuilder
	export function emptyRefSetAppBadgeReqBuilder():Ref<SetAppBadgeReqBuilder>
	export function refOfSetAppBadgeReqBuilder(x:SetAppBadgeReqBuilder,v:Ref<SetAppBadgeReqBuilder>)
	export function unRefSetAppBadgeReqBuilder(v:Ref<SetAppBadgeReqBuilder>):SetAppBadgeReqBuilder
	export function emptyP1AppStatusChangedV6():P1AppStatusChangedV6
	export function emptyRefP1AppStatusChangedV6():Ref<P1AppStatusChangedV6>
	export function refOfP1AppStatusChangedV6(x:P1AppStatusChangedV6,v:Ref<P1AppStatusChangedV6>)
	export function unRefP1AppStatusChangedV6(v:Ref<P1AppStatusChangedV6>):P1AppStatusChangedV6
	export function emptyPatchApplicationContactsRangeResp():PatchApplicationContactsRangeResp
	export function emptyRefPatchApplicationContactsRangeResp():Ref<PatchApplicationContactsRangeResp>
	export function refOfPatchApplicationContactsRangeResp(x:PatchApplicationContactsRangeResp,v:Ref<PatchApplicationContactsRangeResp>)
	export function unRefPatchApplicationContactsRangeResp(v:Ref<PatchApplicationContactsRangeResp>):PatchApplicationContactsRangeResp
	export function emptyAppCollaboratorBuilder():AppCollaboratorBuilder
	export function emptyRefAppCollaboratorBuilder():Ref<AppCollaboratorBuilder>
	export function refOfAppCollaboratorBuilder(x:AppCollaboratorBuilder,v:Ref<AppCollaboratorBuilder>)
	export function unRefAppCollaboratorBuilder(v:Ref<AppCollaboratorBuilder>):AppCollaboratorBuilder
	export function emptyAppContactsRangeIdListBuilder():AppContactsRangeIdListBuilder
	export function emptyRefAppContactsRangeIdListBuilder():Ref<AppContactsRangeIdListBuilder>
	export function refOfAppContactsRangeIdListBuilder(x:AppContactsRangeIdListBuilder,v:Ref<AppContactsRangeIdListBuilder>)
	export function unRefAppContactsRangeIdListBuilder(v:Ref<AppContactsRangeIdListBuilder>):AppContactsRangeIdListBuilder
	export function emptyAppVisibilityBuilder():AppVisibilityBuilder
	export function emptyRefAppVisibilityBuilder():Ref<AppVisibilityBuilder>
	export function refOfAppVisibilityBuilder(x:AppVisibilityBuilder,v:Ref<AppVisibilityBuilder>)
	export function unRefAppVisibilityBuilder(v:Ref<AppVisibilityBuilder>):AppVisibilityBuilder
	export function emptyListApplicationAppVersionReq():ListApplicationAppVersionReq
	export function emptyRefListApplicationAppVersionReq():Ref<ListApplicationAppVersionReq>
	export function refOfListApplicationAppVersionReq(x:ListApplicationAppVersionReq,v:Ref<ListApplicationAppVersionReq>)
	export function unRefListApplicationAppVersionReq(v:Ref<ListApplicationAppVersionReq>):ListApplicationAppVersionReq
	export function emptyListApplicationAppVersionResp():ListApplicationAppVersionResp
	export function emptyRefListApplicationAppVersionResp():Ref<ListApplicationAppVersionResp>
	export function refOfListApplicationAppVersionResp(x:ListApplicationAppVersionResp,v:Ref<ListApplicationAppVersionResp>)
	export function unRefListApplicationAppVersionResp(v:Ref<ListApplicationAppVersionResp>):ListApplicationAppVersionResp
	export function emptyAppVisibilityItemBuilder():AppVisibilityItemBuilder
	export function emptyRefAppVisibilityItemBuilder():Ref<AppVisibilityItemBuilder>
	export function refOfAppVisibilityItemBuilder(x:AppVisibilityItemBuilder,v:Ref<AppVisibilityItemBuilder>)
	export function unRefAppVisibilityItemBuilder(v:Ref<AppVisibilityItemBuilder>):AppVisibilityItemBuilder
	export function emptyCloudDoc():CloudDoc
	export function emptyRefCloudDoc():Ref<CloudDoc>
	export function refOfCloudDoc(x:CloudDoc,v:Ref<CloudDoc>)
	export function unRefCloudDoc(v:Ref<CloudDoc>):CloudDoc
	export function emptyMessageOverviewItem():MessageOverviewItem
	export function emptyRefMessageOverviewItem():Ref<MessageOverviewItem>
	export function refOfMessageOverviewItem(x:MessageOverviewItem,v:Ref<MessageOverviewItem>)
	export function unRefMessageOverviewItem(v:Ref<MessageOverviewItem>):MessageOverviewItem
	export function emptyP2ApplicationFeedbackCreatedV6():P2ApplicationFeedbackCreatedV6
	export function emptyRefP2ApplicationFeedbackCreatedV6():Ref<P2ApplicationFeedbackCreatedV6>
	export function refOfP2ApplicationFeedbackCreatedV6(x:P2ApplicationFeedbackCreatedV6,v:Ref<P2ApplicationFeedbackCreatedV6>)
	export function unRefP2ApplicationFeedbackCreatedV6(v:Ref<P2ApplicationFeedbackCreatedV6>):P2ApplicationFeedbackCreatedV6
	export function emptyPatchApplicationVisibilityReqBodyBuilder():PatchApplicationVisibilityReqBodyBuilder
	export function emptyRefPatchApplicationVisibilityReqBodyBuilder():Ref<PatchApplicationVisibilityReqBodyBuilder>
	export function refOfPatchApplicationVisibilityReqBodyBuilder(x:PatchApplicationVisibilityReqBodyBuilder,v:Ref<PatchApplicationVisibilityReqBodyBuilder>)
	export function unRefPatchApplicationVisibilityReqBodyBuilder(v:Ref<PatchApplicationVisibilityReqBodyBuilder>):PatchApplicationVisibilityReqBodyBuilder
	export function emptyAppAbility():AppAbility
	export function emptyRefAppAbility():Ref<AppAbility>
	export function refOfAppAbility(x:AppAbility,v:Ref<AppAbility>)
	export function unRefAppAbility(v:Ref<AppAbility>):AppAbility
	export function emptyOverviewApplicationAppUsageReqBody():OverviewApplicationAppUsageReqBody
	export function emptyRefOverviewApplicationAppUsageReqBody():Ref<OverviewApplicationAppUsageReqBody>
	export function refOfOverviewApplicationAppUsageReqBody(x:OverviewApplicationAppUsageReqBody,v:Ref<OverviewApplicationAppUsageReqBody>)
	export function unRefOverviewApplicationAppUsageReqBody(v:Ref<OverviewApplicationAppUsageReqBody>):OverviewApplicationAppUsageReqBody
	export function emptySetAppBadgeResp():SetAppBadgeResp
	export function emptyRefSetAppBadgeResp():Ref<SetAppBadgeResp>
	export function refOfSetAppBadgeResp(x:SetAppBadgeResp,v:Ref<SetAppBadgeResp>)
	export function unRefSetAppBadgeResp(v:Ref<SetAppBadgeResp>):SetAppBadgeResp
	export function emptyBotBuilder():BotBuilder
	export function emptyRefBotBuilder():Ref<BotBuilder>
	export function refOfBotBuilder(x:BotBuilder,v:Ref<BotBuilder>)
	export function unRefBotBuilder(v:Ref<BotBuilder>):BotBuilder
	export function emptyListAppRecommendRuleIterator():ListAppRecommendRuleIterator
	export function emptyRefListAppRecommendRuleIterator():Ref<ListAppRecommendRuleIterator>
	export function refOfListAppRecommendRuleIterator(x:ListAppRecommendRuleIterator,v:Ref<ListAppRecommendRuleIterator>)
	export function unRefListAppRecommendRuleIterator(v:Ref<ListAppRecommendRuleIterator>):ListAppRecommendRuleIterator
	export function emptyP2ApplicationCreatedV6Data():P2ApplicationCreatedV6Data
	export function emptyRefP2ApplicationCreatedV6Data():Ref<P2ApplicationCreatedV6Data>
	export function refOfP2ApplicationCreatedV6Data(x:P2ApplicationCreatedV6Data,v:Ref<P2ApplicationCreatedV6Data>)
	export function unRefP2ApplicationCreatedV6Data(v:Ref<P2ApplicationCreatedV6Data>):P2ApplicationCreatedV6Data
	export function emptyAppVersionId():AppVersionId
	export function emptyRefAppVersionId():Ref<AppVersionId>
	export function refOfAppVersionId(x:AppVersionId,v:Ref<AppVersionId>)
	export function unRefAppVersionId(v:Ref<AppVersionId>):AppVersionId
	export function emptyAppVersionRemarkBuilder():AppVersionRemarkBuilder
	export function emptyRefAppVersionRemarkBuilder():Ref<AppVersionRemarkBuilder>
	export function refOfAppVersionRemarkBuilder(x:AppVersionRemarkBuilder,v:Ref<AppVersionRemarkBuilder>)
	export function unRefAppVersionRemarkBuilder(v:Ref<AppVersionRemarkBuilder>):AppVersionRemarkBuilder
	export function emptyGetApplicationReqBuilder():GetApplicationReqBuilder
	export function emptyRefGetApplicationReqBuilder():Ref<GetApplicationReqBuilder>
	export function refOfGetApplicationReqBuilder(x:GetApplicationReqBuilder,v:Ref<GetApplicationReqBuilder>)
	export function unRefGetApplicationReqBuilder(v:Ref<GetApplicationReqBuilder>):GetApplicationReqBuilder
	export function emptyGetApplicationResp():GetApplicationResp
	export function emptyRefGetApplicationResp():Ref<GetApplicationResp>
	export function refOfGetApplicationResp(x:GetApplicationResp,v:Ref<GetApplicationResp>)
	export function unRefGetApplicationResp(v:Ref<GetApplicationResp>):GetApplicationResp
	export function emptyAppAbilityBot():AppAbilityBot
	export function emptyRefAppAbilityBot():Ref<AppAbilityBot>
	export function refOfAppAbilityBot(x:AppAbilityBot,v:Ref<AppAbilityBot>)
	export function unRefAppAbilityBot(v:Ref<AppAbilityBot>):AppAbilityBot
	export function emptyAppMessageTrendItemBuilder():AppMessageTrendItemBuilder
	export function emptyRefAppMessageTrendItemBuilder():Ref<AppMessageTrendItemBuilder>
	export function refOfAppMessageTrendItemBuilder(x:AppMessageTrendItemBuilder,v:Ref<AppMessageTrendItemBuilder>)
	export function unRefAppMessageTrendItemBuilder(v:Ref<AppMessageTrendItemBuilder>):AppMessageTrendItemBuilder
	export function emptyP2ApplicationAppVersionPublishRevokeV6():P2ApplicationAppVersionPublishRevokeV6
	export function emptyRefP2ApplicationAppVersionPublishRevokeV6():Ref<P2ApplicationAppVersionPublishRevokeV6>
	export function refOfP2ApplicationAppVersionPublishRevokeV6(x:P2ApplicationAppVersionPublishRevokeV6,v:Ref<P2ApplicationAppVersionPublishRevokeV6>)
	export function unRefP2ApplicationAppVersionPublishRevokeV6(v:Ref<P2ApplicationAppVersionPublishRevokeV6>):P2ApplicationAppVersionPublishRevokeV6
	export function emptyP2ApplicationCreatedV6Handler():P2ApplicationCreatedV6Handler
	export function emptyRefP2ApplicationCreatedV6Handler():Ref<P2ApplicationCreatedV6Handler>
	export function refOfP2ApplicationCreatedV6Handler(x:P2ApplicationCreatedV6Handler,v:Ref<P2ApplicationCreatedV6Handler>)
	export function unRefP2ApplicationCreatedV6Handler(v:Ref<P2ApplicationCreatedV6Handler>):P2ApplicationCreatedV6Handler
	export function emptyUpdateApplicationManagementReq():UpdateApplicationManagementReq
	export function emptyRefUpdateApplicationManagementReq():Ref<UpdateApplicationManagementReq>
	export function refOfUpdateApplicationManagementReq(x:UpdateApplicationManagementReq,v:Ref<UpdateApplicationManagementReq>)
	export function unRefUpdateApplicationManagementReq(v:Ref<UpdateApplicationManagementReq>):UpdateApplicationManagementReq
	export function emptyContactsRangeConfigurationApplicationResp():ContactsRangeConfigurationApplicationResp
	export function emptyRefContactsRangeConfigurationApplicationResp():Ref<ContactsRangeConfigurationApplicationResp>
	export function refOfContactsRangeConfigurationApplicationResp(x:ContactsRangeConfigurationApplicationResp,v:Ref<ContactsRangeConfigurationApplicationResp>)
	export function unRefContactsRangeConfigurationApplicationResp(v:Ref<ContactsRangeConfigurationApplicationResp>):ContactsRangeConfigurationApplicationResp
	export function emptyP2ApplicationCreatedV6():P2ApplicationCreatedV6
	export function emptyRefP2ApplicationCreatedV6():Ref<P2ApplicationCreatedV6>
	export function refOfP2ApplicationCreatedV6(x:P2ApplicationCreatedV6,v:Ref<P2ApplicationCreatedV6>)
	export function unRefP2ApplicationCreatedV6(v:Ref<P2ApplicationCreatedV6>):P2ApplicationCreatedV6
	export function emptyP2BotMenuV6Handler():P2BotMenuV6Handler
	export function emptyRefP2BotMenuV6Handler():Ref<P2BotMenuV6Handler>
	export function refOfP2BotMenuV6Handler(x:P2BotMenuV6Handler,v:Ref<P2BotMenuV6Handler>)
	export function unRefP2BotMenuV6Handler(v:Ref<P2BotMenuV6Handler>):P2BotMenuV6Handler
	export function emptyAppVersionRemarkEventBuilder():AppVersionRemarkEventBuilder
	export function emptyRefAppVersionRemarkEventBuilder():Ref<AppVersionRemarkEventBuilder>
	export function refOfAppVersionRemarkEventBuilder(x:AppVersionRemarkEventBuilder,v:Ref<AppVersionRemarkEventBuilder>)
	export function unRefAppVersionRemarkEventBuilder(v:Ref<AppVersionRemarkEventBuilder>):AppVersionRemarkEventBuilder
	export function emptyApplicationFeedbackBuilder():ApplicationFeedbackBuilder
	export function emptyRefApplicationFeedbackBuilder():Ref<ApplicationFeedbackBuilder>
	export function refOfApplicationFeedbackBuilder(x:ApplicationFeedbackBuilder,v:Ref<ApplicationFeedbackBuilder>)
	export function unRefApplicationFeedbackBuilder(v:Ref<ApplicationFeedbackBuilder>):ApplicationFeedbackBuilder
	export function emptyCheckWhiteBlackListApplicationVisibilityReqBodyBuilder():CheckWhiteBlackListApplicationVisibilityReqBodyBuilder
	export function emptyRefCheckWhiteBlackListApplicationVisibilityReqBodyBuilder():Ref<CheckWhiteBlackListApplicationVisibilityReqBodyBuilder>
	export function refOfCheckWhiteBlackListApplicationVisibilityReqBodyBuilder(x:CheckWhiteBlackListApplicationVisibilityReqBodyBuilder,v:Ref<CheckWhiteBlackListApplicationVisibilityReqBodyBuilder>)
	export function unRefCheckWhiteBlackListApplicationVisibilityReqBodyBuilder(v:Ref<CheckWhiteBlackListApplicationVisibilityReqBodyBuilder>):CheckWhiteBlackListApplicationVisibilityReqBodyBuilder
	export function emptyAppAbilityBotBuilder():AppAbilityBotBuilder
	export function emptyRefAppAbilityBotBuilder():Ref<AppAbilityBotBuilder>
	export function refOfAppAbilityBotBuilder(x:AppAbilityBotBuilder,v:Ref<AppAbilityBotBuilder>)
	export function unRefAppAbilityBotBuilder(v:Ref<AppAbilityBotBuilder>):AppAbilityBotBuilder
	export function emptyAppAbilityWeb():AppAbilityWeb
	export function emptyRefAppAbilityWeb():Ref<AppAbilityWeb>
	export function refOfAppAbilityWeb(x:AppAbilityWeb,v:Ref<AppAbilityWeb>)
	export function unRefAppAbilityWeb(v:Ref<AppAbilityWeb>):AppAbilityWeb
	export function emptyListAppRecommendRuleRespData():ListAppRecommendRuleRespData
	export function emptyRefListAppRecommendRuleRespData():Ref<ListAppRecommendRuleRespData>
	export function refOfListAppRecommendRuleRespData(x:ListAppRecommendRuleRespData,v:Ref<ListAppRecommendRuleRespData>)
	export function unRefListAppRecommendRuleRespData(v:Ref<ListAppRecommendRuleRespData>):ListAppRecommendRuleRespData
	export function emptyOpenapiOption():OpenapiOption
	export function emptyRefOpenapiOption():Ref<OpenapiOption>
	export function refOfOpenapiOption(x:OpenapiOption,v:Ref<OpenapiOption>)
	export function unRefOpenapiOption(v:Ref<OpenapiOption>):OpenapiOption
	export function emptyUsageUser():UsageUser
	export function emptyRefUsageUser():Ref<UsageUser>
	export function refOfUsageUser(x:UsageUser,v:Ref<UsageUser>)
	export function unRefUsageUser(v:Ref<UsageUser>):UsageUser
	export function emptyApplicationOwner():ApplicationOwner
	export function emptyRefApplicationOwner():Ref<ApplicationOwner>
	export function refOfApplicationOwner(x:ApplicationOwner,v:Ref<ApplicationOwner>)
	export function unRefApplicationOwner(v:Ref<ApplicationOwner>):ApplicationOwner
	export function emptyDepartmentOverviewApplicationAppUsagePathReqBodyBuilder():DepartmentOverviewApplicationAppUsagePathReqBodyBuilder
	export function emptyRefDepartmentOverviewApplicationAppUsagePathReqBodyBuilder():Ref<DepartmentOverviewApplicationAppUsagePathReqBodyBuilder>
	export function refOfDepartmentOverviewApplicationAppUsagePathReqBodyBuilder(x:DepartmentOverviewApplicationAppUsagePathReqBodyBuilder,v:Ref<DepartmentOverviewApplicationAppUsagePathReqBodyBuilder>)
	export function unRefDepartmentOverviewApplicationAppUsagePathReqBodyBuilder(v:Ref<DepartmentOverviewApplicationAppUsagePathReqBodyBuilder>):DepartmentOverviewApplicationAppUsagePathReqBodyBuilder
	export function emptyGadget():Gadget
	export function emptyRefGadget():Ref<Gadget>
	export function refOfGadget(x:Gadget,v:Ref<Gadget>)
	export function unRefGadget(v:Ref<Gadget>):Gadget
	export function emptyNavigateMetaBuilder():NavigateMetaBuilder
	export function emptyRefNavigateMetaBuilder():Ref<NavigateMetaBuilder>
	export function refOfNavigateMetaBuilder(x:NavigateMetaBuilder,v:Ref<NavigateMetaBuilder>)
	export function unRefNavigateMetaBuilder(v:Ref<NavigateMetaBuilder>):NavigateMetaBuilder
	export function emptyMessageActionI18nInfoBuilder():MessageActionI18nInfoBuilder
	export function emptyRefMessageActionI18nInfoBuilder():Ref<MessageActionI18nInfoBuilder>
	export function refOfMessageActionI18nInfoBuilder(x:MessageActionI18nInfoBuilder,v:Ref<MessageActionI18nInfoBuilder>)
	export function unRefMessageActionI18nInfoBuilder(v:Ref<MessageActionI18nInfoBuilder>):MessageActionI18nInfoBuilder
	export function emptyPatchApplicationReqBuilder():PatchApplicationReqBuilder
	export function emptyRefPatchApplicationReqBuilder():Ref<PatchApplicationReqBuilder>
	export function refOfPatchApplicationReqBuilder(x:PatchApplicationReqBuilder,v:Ref<PatchApplicationReqBuilder>)
	export function unRefPatchApplicationReqBuilder(v:Ref<PatchApplicationReqBuilder>):PatchApplicationReqBuilder
	export function emptyUser():User
	export function emptyRefUser():Ref<User>
	export function refOfUser(x:User,v:Ref<User>)
	export function unRefUser(v:Ref<User>):User
	export function emptyEventAndCallbackEncryptStrategyBuilder():EventAndCallbackEncryptStrategyBuilder
	export function emptyRefEventAndCallbackEncryptStrategyBuilder():Ref<EventAndCallbackEncryptStrategyBuilder>
	export function refOfEventAndCallbackEncryptStrategyBuilder(x:EventAndCallbackEncryptStrategyBuilder,v:Ref<EventAndCallbackEncryptStrategyBuilder>)
	export function unRefEventAndCallbackEncryptStrategyBuilder(v:Ref<EventAndCallbackEncryptStrategyBuilder>):EventAndCallbackEncryptStrategyBuilder
	export function emptyAppRecommendRuleItemInfo():AppRecommendRuleItemInfo
	export function emptyRefAppRecommendRuleItemInfo():Ref<AppRecommendRuleItemInfo>
	export function refOfAppRecommendRuleItemInfo(x:AppRecommendRuleItemInfo,v:Ref<AppRecommendRuleItemInfo>)
	export function unRefAppRecommendRuleItemInfo(v:Ref<AppRecommendRuleItemInfo>):AppRecommendRuleItemInfo
	export function emptyAppScope():AppScope
	export function emptyRefAppScope():Ref<AppScope>
	export function refOfAppScope(x:AppScope,v:Ref<AppScope>)
	export function unRefAppScope(v:Ref<AppScope>):AppScope
	export function emptyAppVisibleList():AppVisibleList
	export function emptyRefAppVisibleList():Ref<AppVisibleList>
	export function refOfAppVisibleList(x:AppVisibleList,v:Ref<AppVisibleList>)
	export function unRefAppVisibleList(v:Ref<AppVisibleList>):AppVisibleList
	export function emptyApplicationAppUsage():ApplicationAppUsage
	export function emptyRefApplicationAppUsage():Ref<ApplicationAppUsage>
	export function refOfApplicationAppUsage(x:ApplicationAppUsage,v:Ref<ApplicationAppUsage>)
	export function unRefApplicationAppUsage(v:Ref<ApplicationAppUsage>):ApplicationAppUsage
	export function emptyContactsRangeSuggestApplicationAppVersionRespData():ContactsRangeSuggestApplicationAppVersionRespData
	export function emptyRefContactsRangeSuggestApplicationAppVersionRespData():Ref<ContactsRangeSuggestApplicationAppVersionRespData>
	export function refOfContactsRangeSuggestApplicationAppVersionRespData(x:ContactsRangeSuggestApplicationAppVersionRespData,v:Ref<ContactsRangeSuggestApplicationAppVersionRespData>)
	export function unRefContactsRangeSuggestApplicationAppVersionRespData(v:Ref<ContactsRangeSuggestApplicationAppVersionRespData>):ContactsRangeSuggestApplicationAppVersionRespData
	export function emptyApplicationOwnerBuilder():ApplicationOwnerBuilder
	export function emptyRefApplicationOwnerBuilder():Ref<ApplicationOwnerBuilder>
	export function refOfApplicationOwnerBuilder(x:ApplicationOwnerBuilder,v:Ref<ApplicationOwnerBuilder>)
	export function unRefApplicationOwnerBuilder(v:Ref<ApplicationOwnerBuilder>):ApplicationOwnerBuilder
	export function emptyP2ApplicationAppVersionPublishRevokeV6Data():P2ApplicationAppVersionPublishRevokeV6Data
	export function emptyRefP2ApplicationAppVersionPublishRevokeV6Data():Ref<P2ApplicationAppVersionPublishRevokeV6Data>
	export function refOfP2ApplicationAppVersionPublishRevokeV6Data(x:P2ApplicationAppVersionPublishRevokeV6Data,v:Ref<P2ApplicationAppVersionPublishRevokeV6Data>)
	export function unRefP2ApplicationAppVersionPublishRevokeV6Data(v:Ref<P2ApplicationAppVersionPublishRevokeV6Data>):P2ApplicationAppVersionPublishRevokeV6Data
	export function emptyCheckWhiteBlackListApplicationVisibilityReqBuilder():CheckWhiteBlackListApplicationVisibilityReqBuilder
	export function emptyRefCheckWhiteBlackListApplicationVisibilityReqBuilder():Ref<CheckWhiteBlackListApplicationVisibilityReqBuilder>
	export function refOfCheckWhiteBlackListApplicationVisibilityReqBuilder(x:CheckWhiteBlackListApplicationVisibilityReqBuilder,v:Ref<CheckWhiteBlackListApplicationVisibilityReqBuilder>)
	export function unRefCheckWhiteBlackListApplicationVisibilityReqBuilder(v:Ref<CheckWhiteBlackListApplicationVisibilityReqBuilder>):CheckWhiteBlackListApplicationVisibilityReqBuilder
	export function emptyDocsBlock():DocsBlock
	export function emptyRefDocsBlock():Ref<DocsBlock>
	export function refOfDocsBlock(x:DocsBlock,v:Ref<DocsBlock>)
	export function unRefDocsBlock(v:Ref<DocsBlock>):DocsBlock
	export function emptyP1AppUninstalledV6():P1AppUninstalledV6
	export function emptyRefP1AppUninstalledV6():Ref<P1AppUninstalledV6>
	export function refOfP1AppUninstalledV6(x:P1AppUninstalledV6,v:Ref<P1AppUninstalledV6>)
	export function unRefP1AppUninstalledV6(v:Ref<P1AppUninstalledV6>):P1AppUninstalledV6
	export function emptySetAppBadgeReq():SetAppBadgeReq
	export function emptyRefSetAppBadgeReq():Ref<SetAppBadgeReq>
	export function refOfSetAppBadgeReq(x:SetAppBadgeReq,v:Ref<SetAppBadgeReq>)
	export function unRefSetAppBadgeReq(v:Ref<SetAppBadgeReq>):SetAppBadgeReq
	export function emptyP2ApplicationFeedbackUpdatedV6():P2ApplicationFeedbackUpdatedV6
	export function emptyRefP2ApplicationFeedbackUpdatedV6():Ref<P2ApplicationFeedbackUpdatedV6>
	export function refOfP2ApplicationFeedbackUpdatedV6(x:P2ApplicationFeedbackUpdatedV6,v:Ref<P2ApplicationFeedbackUpdatedV6>)
	export function unRefP2ApplicationFeedbackUpdatedV6(v:Ref<P2ApplicationFeedbackUpdatedV6>):P2ApplicationFeedbackUpdatedV6
	export function emptyAppConfigScope():AppConfigScope
	export function emptyRefAppConfigScope():Ref<AppConfigScope>
	export function refOfAppConfigScope(x:AppConfigScope,v:Ref<AppConfigScope>)
	export function unRefAppConfigScope(v:Ref<AppConfigScope>):AppConfigScope
	export function emptyListAppRecommendRuleReq():ListAppRecommendRuleReq
	export function emptyRefListAppRecommendRuleReq():Ref<ListAppRecommendRuleReq>
	export function refOfListAppRecommendRuleReq(x:ListAppRecommendRuleReq,v:Ref<ListAppRecommendRuleReq>)
	export function unRefListAppRecommendRuleReq(v:Ref<ListAppRecommendRuleReq>):ListAppRecommendRuleReq
	export function emptyNavigate():Navigate
	export function emptyRefNavigate():Ref<Navigate>
	export function refOfNavigate(x:Navigate,v:Ref<Navigate>)
	export function unRefNavigate(v:Ref<Navigate>):Navigate
	export function emptyNavigateMeta():NavigateMeta
	export function emptyRefNavigateMeta():Ref<NavigateMeta>
	export function refOfNavigateMeta(x:NavigateMeta,v:Ref<NavigateMeta>)
	export function unRefNavigateMeta(v:Ref<NavigateMeta>):NavigateMeta
	export function emptyP2ApplicationFeedbackCreatedV6Data():P2ApplicationFeedbackCreatedV6Data
	export function emptyRefP2ApplicationFeedbackCreatedV6Data():Ref<P2ApplicationFeedbackCreatedV6Data>
	export function refOfP2ApplicationFeedbackCreatedV6Data(x:P2ApplicationFeedbackCreatedV6Data,v:Ref<P2ApplicationFeedbackCreatedV6Data>)
	export function unRefP2ApplicationFeedbackCreatedV6Data(v:Ref<P2ApplicationFeedbackCreatedV6Data>):P2ApplicationFeedbackCreatedV6Data
	export function emptyAppConfigContactsRange():AppConfigContactsRange
	export function emptyRefAppConfigContactsRange():Ref<AppConfigContactsRange>
	export function refOfAppConfigContactsRange(x:AppConfigContactsRange,v:Ref<AppConfigContactsRange>)
	export function unRefAppConfigContactsRange(v:Ref<AppConfigContactsRange>):AppConfigContactsRange
	export function emptyApplicationVisibilityGroupWhiteBlackInfoBuilder():ApplicationVisibilityGroupWhiteBlackInfoBuilder
	export function emptyRefApplicationVisibilityGroupWhiteBlackInfoBuilder():Ref<ApplicationVisibilityGroupWhiteBlackInfoBuilder>
	export function refOfApplicationVisibilityGroupWhiteBlackInfoBuilder(x:ApplicationVisibilityGroupWhiteBlackInfoBuilder,v:Ref<ApplicationVisibilityGroupWhiteBlackInfoBuilder>)
	export function unRefApplicationVisibilityGroupWhiteBlackInfoBuilder(v:Ref<ApplicationVisibilityGroupWhiteBlackInfoBuilder>):ApplicationVisibilityGroupWhiteBlackInfoBuilder
	export function emptyOperator():Operator
	export function emptyRefOperator():Ref<Operator>
	export function refOfOperator(x:Operator,v:Ref<Operator>)
	export function unRefOperator(v:Ref<Operator>):Operator
	export function emptyP2ApplicationFeedbackUpdatedV6Handler():P2ApplicationFeedbackUpdatedV6Handler
	export function emptyRefP2ApplicationFeedbackUpdatedV6Handler():Ref<P2ApplicationFeedbackUpdatedV6Handler>
	export function refOfP2ApplicationFeedbackUpdatedV6Handler(x:P2ApplicationFeedbackUpdatedV6Handler,v:Ref<P2ApplicationFeedbackUpdatedV6Handler>)
	export function unRefP2ApplicationFeedbackUpdatedV6Handler(v:Ref<P2ApplicationFeedbackUpdatedV6Handler>):P2ApplicationFeedbackUpdatedV6Handler
	export function emptyUpdateApplicationManagementPathReqBodyBuilder():UpdateApplicationManagementPathReqBodyBuilder
	export function emptyRefUpdateApplicationManagementPathReqBodyBuilder():Ref<UpdateApplicationManagementPathReqBodyBuilder>
	export function refOfUpdateApplicationManagementPathReqBodyBuilder(x:UpdateApplicationManagementPathReqBodyBuilder,v:Ref<UpdateApplicationManagementPathReqBodyBuilder>)
	export function unRefUpdateApplicationManagementPathReqBodyBuilder(v:Ref<UpdateApplicationManagementPathReqBodyBuilder>):UpdateApplicationManagementPathReqBodyBuilder
	export function emptyAppBadgeBuilder():AppBadgeBuilder
	export function emptyRefAppBadgeBuilder():Ref<AppBadgeBuilder>
	export function refOfAppBadgeBuilder(x:AppBadgeBuilder,v:Ref<AppBadgeBuilder>)
	export function unRefAppBadgeBuilder(v:Ref<AppBadgeBuilder>):AppBadgeBuilder
	export function emptyAppCustomCategory():AppCustomCategory
	export function emptyRefAppCustomCategory():Ref<AppCustomCategory>
	export function refOfAppCustomCategory(x:AppCustomCategory,v:Ref<AppCustomCategory>)
	export function unRefAppCustomCategory(v:Ref<AppCustomCategory>):AppCustomCategory
	export function emptyApplicationVisibilityGroupWhiteBlackInfo():ApplicationVisibilityGroupWhiteBlackInfo
	export function emptyRefApplicationVisibilityGroupWhiteBlackInfo():Ref<ApplicationVisibilityGroupWhiteBlackInfo>
	export function refOfApplicationVisibilityGroupWhiteBlackInfo(x:ApplicationVisibilityGroupWhiteBlackInfo,v:Ref<ApplicationVisibilityGroupWhiteBlackInfo>)
	export function unRefApplicationVisibilityGroupWhiteBlackInfo(v:Ref<ApplicationVisibilityGroupWhiteBlackInfo>):ApplicationVisibilityGroupWhiteBlackInfo
	export function emptyDocsBlockBuilder():DocsBlockBuilder
	export function emptyRefDocsBlockBuilder():Ref<DocsBlockBuilder>
	export function refOfDocsBlockBuilder(x:DocsBlockBuilder,v:Ref<DocsBlockBuilder>)
	export function unRefDocsBlockBuilder(v:Ref<DocsBlockBuilder>):DocsBlockBuilder
	export function emptyP1OrderPaidV6Data():P1OrderPaidV6Data
	export function emptyRefP1OrderPaidV6Data():Ref<P1OrderPaidV6Data>
	export function refOfP1OrderPaidV6Data(x:P1OrderPaidV6Data,v:Ref<P1OrderPaidV6Data>)
	export function unRefP1OrderPaidV6Data(v:Ref<P1OrderPaidV6Data>):P1OrderPaidV6Data
	export function emptyBot():Bot
	export function emptyRefBot():Ref<Bot>
	export function refOfBot(x:Bot,v:Ref<Bot>)
	export function unRefBot(v:Ref<Bot>):Bot
	export function emptyPatchApplicationVisibilityReqBody():PatchApplicationVisibilityReqBody
	export function emptyRefPatchApplicationVisibilityReqBody():Ref<PatchApplicationVisibilityReqBody>
	export function refOfPatchApplicationVisibilityReqBody(x:PatchApplicationVisibilityReqBody,v:Ref<PatchApplicationVisibilityReqBody>)
	export function unRefPatchApplicationVisibilityReqBody(v:Ref<PatchApplicationVisibilityReqBody>):PatchApplicationVisibilityReqBody
	export function emptyPatchApplicationFeedbackReq():PatchApplicationFeedbackReq
	export function emptyRefPatchApplicationFeedbackReq():Ref<PatchApplicationFeedbackReq>
	export function refOfPatchApplicationFeedbackReq(x:PatchApplicationFeedbackReq,v:Ref<PatchApplicationFeedbackReq>)
	export function unRefPatchApplicationFeedbackReq(v:Ref<PatchApplicationFeedbackReq>):PatchApplicationFeedbackReq
	export function emptyPatchApplicationFeedbackReqBuilder():PatchApplicationFeedbackReqBuilder
	export function emptyRefPatchApplicationFeedbackReqBuilder():Ref<PatchApplicationFeedbackReqBuilder>
	export function refOfPatchApplicationFeedbackReqBuilder(x:PatchApplicationFeedbackReqBuilder,v:Ref<PatchApplicationFeedbackReqBuilder>)
	export function unRefPatchApplicationFeedbackReqBuilder(v:Ref<PatchApplicationFeedbackReqBuilder>):PatchApplicationFeedbackReqBuilder
	export function emptyAppScopeI18nInfo():AppScopeI18nInfo
	export function emptyRefAppScopeI18nInfo():Ref<AppScopeI18nInfo>
	export function refOfAppScopeI18nInfo(x:AppScopeI18nInfo,v:Ref<AppScopeI18nInfo>)
	export function unRefAppScopeI18nInfo(v:Ref<AppScopeI18nInfo>):AppScopeI18nInfo
	export function emptyAppVisibilityEventBuilder():AppVisibilityEventBuilder
	export function emptyRefAppVisibilityEventBuilder():Ref<AppVisibilityEventBuilder>
	export function refOfAppVisibilityEventBuilder(x:AppVisibilityEventBuilder,v:Ref<AppVisibilityEventBuilder>)
	export function unRefAppVisibilityEventBuilder(v:Ref<AppVisibilityEventBuilder>):AppVisibilityEventBuilder
	export function emptyApplicationAppVersionEventBuilder():ApplicationAppVersionEventBuilder
	export function emptyRefApplicationAppVersionEventBuilder():Ref<ApplicationAppVersionEventBuilder>
	export function refOfApplicationAppVersionEventBuilder(x:ApplicationAppVersionEventBuilder,v:Ref<ApplicationAppVersionEventBuilder>)
	export function unRefApplicationAppVersionEventBuilder(v:Ref<ApplicationAppVersionEventBuilder>):ApplicationAppVersionEventBuilder
	export function emptyGetApplicationRespData():GetApplicationRespData
	export function emptyRefGetApplicationRespData():Ref<GetApplicationRespData>
	export function refOfGetApplicationRespData(x:GetApplicationRespData,v:Ref<GetApplicationRespData>)
	export function unRefGetApplicationRespData(v:Ref<GetApplicationRespData>):GetApplicationRespData
	export function emptyNavigateBuilder():NavigateBuilder
	export function emptyRefNavigateBuilder():Ref<NavigateBuilder>
	export function refOfNavigateBuilder(x:NavigateBuilder,v:Ref<NavigateBuilder>)
	export function unRefNavigateBuilder(v:Ref<NavigateBuilder>):NavigateBuilder
	export function emptyAppConfigSecurity():AppConfigSecurity
	export function emptyRefAppConfigSecurity():Ref<AppConfigSecurity>
	export function refOfAppConfigSecurity(x:AppConfigSecurity,v:Ref<AppConfigSecurity>)
	export function unRefAppConfigSecurity(v:Ref<AppConfigSecurity>):AppConfigSecurity
	export function emptyPatchApplicationReq():PatchApplicationReq
	export function emptyRefPatchApplicationReq():Ref<PatchApplicationReq>
	export function refOfPatchApplicationReq(x:PatchApplicationReq,v:Ref<PatchApplicationReq>)
	export function unRefPatchApplicationReq(v:Ref<PatchApplicationReq>):PatchApplicationReq
	export function emptyAppScopes():AppScopes
	export function emptyRefAppScopes():Ref<AppScopes>
	export function refOfAppScopes(x:AppScopes,v:Ref<AppScopes>)
	export function unRefAppScopes(v:Ref<AppScopes>):AppScopes
	export function emptyAppVisibilityIdListBuilder():AppVisibilityIdListBuilder
	export function emptyRefAppVisibilityIdListBuilder():Ref<AppVisibilityIdListBuilder>
	export function refOfAppVisibilityIdListBuilder(x:AppVisibilityIdListBuilder,v:Ref<AppVisibilityIdListBuilder>)
	export function unRefAppVisibilityIdListBuilder(v:Ref<AppVisibilityIdListBuilder>):AppVisibilityIdListBuilder
	export function emptyP2ApplicationAppVersionAuditV6Data():P2ApplicationAppVersionAuditV6Data
	export function emptyRefP2ApplicationAppVersionAuditV6Data():Ref<P2ApplicationAppVersionAuditV6Data>
	export function refOfP2ApplicationAppVersionAuditV6Data(x:P2ApplicationAppVersionAuditV6Data,v:Ref<P2ApplicationAppVersionAuditV6Data>)
	export function unRefP2ApplicationAppVersionAuditV6Data(v:Ref<P2ApplicationAppVersionAuditV6Data>):P2ApplicationAppVersionAuditV6Data
	export function emptyClientBadgeNumBuilder():ClientBadgeNumBuilder
	export function emptyRefClientBadgeNumBuilder():Ref<ClientBadgeNumBuilder>
	export function refOfClientBadgeNumBuilder(x:ClientBadgeNumBuilder,v:Ref<ClientBadgeNumBuilder>)
	export function unRefClientBadgeNumBuilder(v:Ref<ClientBadgeNumBuilder>):ClientBadgeNumBuilder
	export function emptyOpenapiOptionBuilder():OpenapiOptionBuilder
	export function emptyRefOpenapiOptionBuilder():Ref<OpenapiOptionBuilder>
	export function refOfOpenapiOptionBuilder(x:OpenapiOptionBuilder,v:Ref<OpenapiOptionBuilder>)
	export function unRefOpenapiOptionBuilder(v:Ref<OpenapiOptionBuilder>):OpenapiOptionBuilder
	export function emptyPatchApplicationAppVersionReqBuilder():PatchApplicationAppVersionReqBuilder
	export function emptyRefPatchApplicationAppVersionReqBuilder():Ref<PatchApplicationAppVersionReqBuilder>
	export function refOfPatchApplicationAppVersionReqBuilder(x:PatchApplicationAppVersionReqBuilder,v:Ref<PatchApplicationAppVersionReqBuilder>)
	export function unRefPatchApplicationAppVersionReqBuilder(v:Ref<PatchApplicationAppVersionReqBuilder>):PatchApplicationAppVersionReqBuilder
	export function emptyAppConfigSecurityBuilder():AppConfigSecurityBuilder
	export function emptyRefAppConfigSecurityBuilder():Ref<AppConfigSecurityBuilder>
	export function refOfAppConfigSecurityBuilder(x:AppConfigSecurityBuilder,v:Ref<AppConfigSecurityBuilder>)
	export function unRefAppConfigSecurityBuilder(v:Ref<AppConfigSecurityBuilder>):AppConfigSecurityBuilder
	export function emptyAppConfigVisibilityBuilder():AppConfigVisibilityBuilder
	export function emptyRefAppConfigVisibilityBuilder():Ref<AppConfigVisibilityBuilder>
	export function refOfAppConfigVisibilityBuilder(x:AppConfigVisibilityBuilder,v:Ref<AppConfigVisibilityBuilder>)
	export function unRefAppConfigVisibilityBuilder(v:Ref<AppConfigVisibilityBuilder>):AppConfigVisibilityBuilder
	export function emptyAppRecommendRuleVisibilityInfo():AppRecommendRuleVisibilityInfo
	export function emptyRefAppRecommendRuleVisibilityInfo():Ref<AppRecommendRuleVisibilityInfo>
	export function refOfAppRecommendRuleVisibilityInfo(x:AppRecommendRuleVisibilityInfo,v:Ref<AppRecommendRuleVisibilityInfo>)
	export function unRefAppRecommendRuleVisibilityInfo(v:Ref<AppRecommendRuleVisibilityInfo>):AppRecommendRuleVisibilityInfo
	export function emptyApplicationAppUsageBuilder():ApplicationAppUsageBuilder
	export function emptyRefApplicationAppUsageBuilder():Ref<ApplicationAppUsageBuilder>
	export function refOfApplicationAppUsageBuilder(x:ApplicationAppUsageBuilder,v:Ref<ApplicationAppUsageBuilder>)
	export function unRefApplicationAppUsageBuilder(v:Ref<ApplicationAppUsageBuilder>):ApplicationAppUsageBuilder
	export function emptyApplicationAppVersion():ApplicationAppVersion
	export function emptyRefApplicationAppVersion():Ref<ApplicationAppVersion>
	export function refOfApplicationAppVersion(x:ApplicationAppVersion,v:Ref<ApplicationAppVersion>)
	export function unRefApplicationAppVersion(v:Ref<ApplicationAppVersion>):ApplicationAppVersion
	export function emptyPatchApplicationFeedbackResp():PatchApplicationFeedbackResp
	export function emptyRefPatchApplicationFeedbackResp():Ref<PatchApplicationFeedbackResp>
	export function refOfPatchApplicationFeedbackResp(x:PatchApplicationFeedbackResp,v:Ref<PatchApplicationFeedbackResp>)
	export function unRefPatchApplicationFeedbackResp(v:Ref<PatchApplicationFeedbackResp>):PatchApplicationFeedbackResp
	export function emptyAppVisibleListEvent():AppVisibleListEvent
	export function emptyRefAppVisibleListEvent():Ref<AppVisibleListEvent>
	export function refOfAppVisibleListEvent(x:AppVisibleListEvent,v:Ref<AppVisibleListEvent>)
	export function unRefAppVisibleListEvent(v:Ref<AppVisibleListEvent>):AppVisibleListEvent
	export function emptyApplicationVisibilityDepartmentWhiteBlackInfo():ApplicationVisibilityDepartmentWhiteBlackInfo
	export function emptyRefApplicationVisibilityDepartmentWhiteBlackInfo():Ref<ApplicationVisibilityDepartmentWhiteBlackInfo>
	export function refOfApplicationVisibilityDepartmentWhiteBlackInfo(x:ApplicationVisibilityDepartmentWhiteBlackInfo,v:Ref<ApplicationVisibilityDepartmentWhiteBlackInfo>)
	export function unRefApplicationVisibilityDepartmentWhiteBlackInfo(v:Ref<ApplicationVisibilityDepartmentWhiteBlackInfo>):ApplicationVisibilityDepartmentWhiteBlackInfo
	export function emptyP2ApplicationAppVersionPublishApplyV6Handler():P2ApplicationAppVersionPublishApplyV6Handler
	export function emptyRefP2ApplicationAppVersionPublishApplyV6Handler():Ref<P2ApplicationAppVersionPublishApplyV6Handler>
	export function refOfP2ApplicationAppVersionPublishApplyV6Handler(x:P2ApplicationAppVersionPublishApplyV6Handler,v:Ref<P2ApplicationAppVersionPublishApplyV6Handler>)
	export function unRefP2ApplicationAppVersionPublishApplyV6Handler(v:Ref<P2ApplicationAppVersionPublishApplyV6Handler>):P2ApplicationAppVersionPublishApplyV6Handler
	export function emptyAppVersionRemark():AppVersionRemark
	export function emptyRefAppVersionRemark():Ref<AppVersionRemark>
	export function refOfAppVersionRemark(x:AppVersionRemark,v:Ref<AppVersionRemark>)
	export function unRefAppVersionRemark(v:Ref<AppVersionRemark>):AppVersionRemark
	export function emptyAppAbilityBuilder():AppAbilityBuilder
	export function emptyRefAppAbilityBuilder():Ref<AppAbilityBuilder>
	export function refOfAppAbilityBuilder(x:AppAbilityBuilder,v:Ref<AppAbilityBuilder>)
	export function unRefAppAbilityBuilder(v:Ref<AppAbilityBuilder>):AppAbilityBuilder
	export function emptyAppCommonCategory():AppCommonCategory
	export function emptyRefAppCommonCategory():Ref<AppCommonCategory>
	export function refOfAppCommonCategory(x:AppCommonCategory,v:Ref<AppCommonCategory>)
	export function unRefAppCommonCategory(v:Ref<AppCommonCategory>):AppCommonCategory
	export function emptyMessageAction():MessageAction
	export function emptyRefMessageAction():Ref<MessageAction>
	export function refOfMessageAction(x:MessageAction,v:Ref<MessageAction>)
	export function unRefMessageAction(v:Ref<MessageAction>):MessageAction
	export function emptyMsgActionBuilder():MsgActionBuilder
	export function emptyRefMsgActionBuilder():Ref<MsgActionBuilder>
	export function refOfMsgActionBuilder(x:MsgActionBuilder,v:Ref<MsgActionBuilder>)
	export function unRefMsgActionBuilder(v:Ref<MsgActionBuilder>):MsgActionBuilder
	export function emptyApplicationAppContactsRangeBuilder():ApplicationAppContactsRangeBuilder
	export function emptyRefApplicationAppContactsRangeBuilder():Ref<ApplicationAppContactsRangeBuilder>
	export function refOfApplicationAppContactsRangeBuilder(x:ApplicationAppContactsRangeBuilder,v:Ref<ApplicationAppContactsRangeBuilder>)
	export function unRefApplicationAppContactsRangeBuilder(v:Ref<ApplicationAppContactsRangeBuilder>):ApplicationAppContactsRangeBuilder
	export function emptyApplicationEventOwner():ApplicationEventOwner
	export function emptyRefApplicationEventOwner():Ref<ApplicationEventOwner>
	export function refOfApplicationEventOwner(x:ApplicationEventOwner,v:Ref<ApplicationEventOwner>)
	export function unRefApplicationEventOwner(v:Ref<ApplicationEventOwner>):ApplicationEventOwner
	export function emptyCheckWhiteBlackListApplicationVisibilityResp():CheckWhiteBlackListApplicationVisibilityResp
	export function emptyRefCheckWhiteBlackListApplicationVisibilityResp():Ref<CheckWhiteBlackListApplicationVisibilityResp>
	export function refOfCheckWhiteBlackListApplicationVisibilityResp(x:CheckWhiteBlackListApplicationVisibilityResp,v:Ref<CheckWhiteBlackListApplicationVisibilityResp>)
	export function unRefCheckWhiteBlackListApplicationVisibilityResp(v:Ref<CheckWhiteBlackListApplicationVisibilityResp>):CheckWhiteBlackListApplicationVisibilityResp
	export function emptyMessageOverviewItemBuilder():MessageOverviewItemBuilder
	export function emptyRefMessageOverviewItemBuilder():Ref<MessageOverviewItemBuilder>
	export function refOfMessageOverviewItemBuilder(x:MessageOverviewItemBuilder,v:Ref<MessageOverviewItemBuilder>)
	export function unRefMessageOverviewItemBuilder(v:Ref<MessageOverviewItemBuilder>):MessageOverviewItemBuilder
	export function emptyAppBadge():AppBadge
	export function emptyRefAppBadge():Ref<AppBadge>
	export function refOfAppBadge(x:AppBadge,v:Ref<AppBadge>)
	export function unRefAppBadge(v:Ref<AppBadge>):AppBadge
	export function emptyAppMessageTrendItem():AppMessageTrendItem
	export function emptyRefAppMessageTrendItem():Ref<AppMessageTrendItem>
	export function refOfAppMessageTrendItem(x:AppMessageTrendItem,v:Ref<AppMessageTrendItem>)
	export function unRefAppMessageTrendItem(v:Ref<AppMessageTrendItem>):AppMessageTrendItem
	export function emptyCheckWhiteBlackListApplicationVisibilityReq():CheckWhiteBlackListApplicationVisibilityReq
	export function emptyRefCheckWhiteBlackListApplicationVisibilityReq():Ref<CheckWhiteBlackListApplicationVisibilityReq>
	export function refOfCheckWhiteBlackListApplicationVisibilityReq(x:CheckWhiteBlackListApplicationVisibilityReq,v:Ref<CheckWhiteBlackListApplicationVisibilityReq>)
	export function unRefCheckWhiteBlackListApplicationVisibilityReq(v:Ref<CheckWhiteBlackListApplicationVisibilityReq>):CheckWhiteBlackListApplicationVisibilityReq
	export function emptyCloudDocI18nInfo():CloudDocI18nInfo
	export function emptyRefCloudDocI18nInfo():Ref<CloudDocI18nInfo>
	export function refOfCloudDocI18nInfo(x:CloudDocI18nInfo,v:Ref<CloudDocI18nInfo>)
	export function unRefCloudDocI18nInfo(v:Ref<CloudDocI18nInfo>):CloudDocI18nInfo
	export function emptyAppConfigScopeBuilder():AppConfigScopeBuilder
	export function emptyRefAppConfigScopeBuilder():Ref<AppConfigScopeBuilder>
	export function refOfAppConfigScopeBuilder(x:AppConfigScopeBuilder,v:Ref<AppConfigScopeBuilder>)
	export function unRefAppConfigScopeBuilder(v:Ref<AppConfigScopeBuilder>):AppConfigScopeBuilder
	export function emptyMessageActionBuilder():MessageActionBuilder
	export function emptyRefMessageActionBuilder():Ref<MessageActionBuilder>
	export function refOfMessageActionBuilder(x:MessageActionBuilder,v:Ref<MessageActionBuilder>)
	export function unRefMessageActionBuilder(v:Ref<MessageActionBuilder>):MessageActionBuilder
	export function emptyOverviewApplicationAppUsageReq():OverviewApplicationAppUsageReq
	export function emptyRefOverviewApplicationAppUsageReq():Ref<OverviewApplicationAppUsageReq>
	export function refOfOverviewApplicationAppUsageReq(x:OverviewApplicationAppUsageReq,v:Ref<OverviewApplicationAppUsageReq>)
	export function unRefOverviewApplicationAppUsageReq(v:Ref<OverviewApplicationAppUsageReq>):OverviewApplicationAppUsageReq
	export function emptyPatchApplicationVisibilityResp():PatchApplicationVisibilityResp
	export function emptyRefPatchApplicationVisibilityResp():Ref<PatchApplicationVisibilityResp>
	export function refOfPatchApplicationVisibilityResp(x:PatchApplicationVisibilityResp,v:Ref<PatchApplicationVisibilityResp>)
	export function unRefPatchApplicationVisibilityResp(v:Ref<PatchApplicationVisibilityResp>):PatchApplicationVisibilityResp
	export function emptyV6():V6
	export function emptyRefV6():Ref<V6>
	export function refOfV6(x:V6,v:Ref<V6>)
	export function unRefV6(v:Ref<V6>):V6
	export function emptyListApplicationFeedbackResp():ListApplicationFeedbackResp
	export function emptyRefListApplicationFeedbackResp():Ref<ListApplicationFeedbackResp>
	export function refOfListApplicationFeedbackResp(x:ListApplicationFeedbackResp,v:Ref<ListApplicationFeedbackResp>)
	export function unRefListApplicationFeedbackResp(v:Ref<ListApplicationFeedbackResp>):ListApplicationFeedbackResp
	export function emptyUserBuilder():UserBuilder
	export function emptyRefUserBuilder():Ref<UserBuilder>
	export function refOfUserBuilder(x:UserBuilder,v:Ref<UserBuilder>)
	export function unRefUserBuilder(v:Ref<UserBuilder>):UserBuilder
	export function emptyAppScopesBuilder():AppScopesBuilder
	export function emptyRefAppScopesBuilder():Ref<AppScopesBuilder>
	export function refOfAppScopesBuilder(x:AppScopesBuilder,v:Ref<AppScopesBuilder>)
	export function unRefAppScopesBuilder(v:Ref<AppScopesBuilder>):AppScopesBuilder
	export function emptyApplicationBuilder():ApplicationBuilder
	export function emptyRefApplicationBuilder():Ref<ApplicationBuilder>
	export function refOfApplicationBuilder(x:ApplicationBuilder,v:Ref<ApplicationBuilder>)
	export function unRefApplicationBuilder(v:Ref<ApplicationBuilder>):ApplicationBuilder
	export function emptyApplicationVisibilityDepartmentWhiteBlackInfoBuilder():ApplicationVisibilityDepartmentWhiteBlackInfoBuilder
	export function emptyRefApplicationVisibilityDepartmentWhiteBlackInfoBuilder():Ref<ApplicationVisibilityDepartmentWhiteBlackInfoBuilder>
	export function refOfApplicationVisibilityDepartmentWhiteBlackInfoBuilder(x:ApplicationVisibilityDepartmentWhiteBlackInfoBuilder,v:Ref<ApplicationVisibilityDepartmentWhiteBlackInfoBuilder>)
	export function unRefApplicationVisibilityDepartmentWhiteBlackInfoBuilder(v:Ref<ApplicationVisibilityDepartmentWhiteBlackInfoBuilder>):ApplicationVisibilityDepartmentWhiteBlackInfoBuilder
	export function emptyCloudDocI18nInfoBuilder():CloudDocI18nInfoBuilder
	export function emptyRefCloudDocI18nInfoBuilder():Ref<CloudDocI18nInfoBuilder>
	export function refOfCloudDocI18nInfoBuilder(x:CloudDocI18nInfoBuilder,v:Ref<CloudDocI18nInfoBuilder>)
	export function unRefCloudDocI18nInfoBuilder(v:Ref<CloudDocI18nInfoBuilder>):CloudDocI18nInfoBuilder
	export function emptyEventAndCallbackEncryptStrategy():EventAndCallbackEncryptStrategy
	export function emptyRefEventAndCallbackEncryptStrategy():Ref<EventAndCallbackEncryptStrategy>
	export function refOfEventAndCallbackEncryptStrategy(x:EventAndCallbackEncryptStrategy,v:Ref<EventAndCallbackEncryptStrategy>)
	export function unRefEventAndCallbackEncryptStrategy(v:Ref<EventAndCallbackEncryptStrategy>):EventAndCallbackEncryptStrategy
	export function emptyP1AppStatusChangedV6Handler():P1AppStatusChangedV6Handler
	export function emptyRefP1AppStatusChangedV6Handler():Ref<P1AppStatusChangedV6Handler>
	export function refOfP1AppStatusChangedV6Handler(x:P1AppStatusChangedV6Handler,v:Ref<P1AppStatusChangedV6Handler>)
	export function unRefP1AppStatusChangedV6Handler(v:Ref<P1AppStatusChangedV6Handler>):P1AppStatusChangedV6Handler
	export function emptyP1OrderPaidV6Handler():P1OrderPaidV6Handler
	export function emptyRefP1OrderPaidV6Handler():Ref<P1OrderPaidV6Handler>
	export function refOfP1OrderPaidV6Handler(x:P1OrderPaidV6Handler,v:Ref<P1OrderPaidV6Handler>)
	export function unRefP1OrderPaidV6Handler(v:Ref<P1OrderPaidV6Handler>):P1OrderPaidV6Handler
	export function emptyPatchApplicationContactsRangePathReqBodyBuilder():PatchApplicationContactsRangePathReqBodyBuilder
	export function emptyRefPatchApplicationContactsRangePathReqBodyBuilder():Ref<PatchApplicationContactsRangePathReqBodyBuilder>
	export function refOfPatchApplicationContactsRangePathReqBodyBuilder(x:PatchApplicationContactsRangePathReqBodyBuilder,v:Ref<PatchApplicationContactsRangePathReqBodyBuilder>)
	export function unRefPatchApplicationContactsRangePathReqBodyBuilder(v:Ref<PatchApplicationContactsRangePathReqBodyBuilder>):PatchApplicationContactsRangePathReqBodyBuilder
	export function emptyAppAbilityBotI18nBuilder():AppAbilityBotI18nBuilder
	export function emptyRefAppAbilityBotI18nBuilder():Ref<AppAbilityBotI18nBuilder>
	export function refOfAppAbilityBotI18nBuilder(x:AppAbilityBotI18nBuilder,v:Ref<AppAbilityBotI18nBuilder>)
	export function unRefAppAbilityBotI18nBuilder(v:Ref<AppAbilityBotI18nBuilder>):AppAbilityBotI18nBuilder
	export function emptyAppVisibility():AppVisibility
	export function emptyRefAppVisibility():Ref<AppVisibility>
	export function refOfAppVisibility(x:AppVisibility,v:Ref<AppVisibility>)
	export function unRefAppVisibility(v:Ref<AppVisibility>):AppVisibility
	export function emptyBlockI18nInfo():BlockI18nInfo
	export function emptyRefBlockI18nInfo():Ref<BlockI18nInfo>
	export function refOfBlockI18nInfo(x:BlockI18nInfo,v:Ref<BlockI18nInfo>)
	export function unRefBlockI18nInfo(v:Ref<BlockI18nInfo>):BlockI18nInfo
	export function emptyP1AppOpenV6Data():P1AppOpenV6Data
	export function emptyRefP1AppOpenV6Data():Ref<P1AppOpenV6Data>
	export function refOfP1AppOpenV6Data(x:P1AppOpenV6Data,v:Ref<P1AppOpenV6Data>)
	export function unRefP1AppOpenV6Data(v:Ref<P1AppOpenV6Data>):P1AppOpenV6Data
	export function emptyP2BotMenuV6Data():P2BotMenuV6Data
	export function emptyRefP2BotMenuV6Data():Ref<P2BotMenuV6Data>
	export function refOfP2BotMenuV6Data(x:P2BotMenuV6Data,v:Ref<P2BotMenuV6Data>)
	export function unRefP2BotMenuV6Data(v:Ref<P2BotMenuV6Data>):P2BotMenuV6Data
}