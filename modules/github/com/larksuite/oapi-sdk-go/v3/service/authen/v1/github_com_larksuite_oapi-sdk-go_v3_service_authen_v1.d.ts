// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
// Code generated by define_gene; DO NOT EDIT.
declare module 'github.com/larksuite/oapi-sdk-go/v3/service/authen/v1'{

	// @ts-ignore
	import * as larkcore from 'github.com/larksuite/oapi-sdk-go/v3/core'
	// @ts-ignore
	import * as context from 'golang/context'
	// @ts-ignore
	import type {Struct,Ref,error,bool,int} from 'go'
	export interface CreateAccessTokenPathReqBodyBuilder extends Struct<CreateAccessTokenPathReqBodyBuilder>{

			grantType(grantType:string):Ref<CreateAccessTokenPathReqBodyBuilder>
			code(code:string):Ref<CreateAccessTokenPathReqBodyBuilder>
			build():Ref<CreateAccessTokenReqBody>
	}
	export interface CreateAccessTokenReq extends Struct<CreateAccessTokenReq>{

			body:Ref<CreateAccessTokenReqBody>
	}
	export interface CreateAccessTokenReqBody extends Struct<CreateAccessTokenReqBody>{

			grantType:Ref<string>
			code:Ref<string>
	}
	export interface CreateAccessTokenReqBodyBuilder extends Struct<CreateAccessTokenReqBodyBuilder>{

			grantType(grantType:string):Ref<CreateAccessTokenReqBodyBuilder>
			code(code:string):Ref<CreateAccessTokenReqBodyBuilder>
			build():Ref<CreateAccessTokenReqBody>
	}
	export interface CreateAccessTokenReqBuilder extends Struct<CreateAccessTokenReqBuilder>{

			body(body:Ref<CreateAccessTokenReqBody>):Ref<CreateAccessTokenReqBuilder>
			build():Ref<CreateAccessTokenReq>
	}
	export interface CreateAccessTokenResp extends Struct<CreateAccessTokenResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateAccessTokenRespData>
			success():bool
	}
	export interface CreateAccessTokenRespData extends Struct<CreateAccessTokenRespData>{

			accessToken:Ref<string>
			tokenType:Ref<string>
			expiresIn:Ref<int>
			name:Ref<string>
			enName:Ref<string>
			avatarUrl:Ref<string>
			avatarThumb:Ref<string>
			avatarMiddle:Ref<string>
			avatarBig:Ref<string>
			openId:Ref<string>
			unionId:Ref<string>
			email:Ref<string>
			enterpriseEmail:Ref<string>
			userId:Ref<string>
			mobile:Ref<string>
			tenantKey:Ref<string>
			refreshExpiresIn:Ref<int>
			refreshToken:Ref<string>
			sid:Ref<string>
	}
	export interface CreateOidcAccessTokenPathReqBodyBuilder extends Struct<CreateOidcAccessTokenPathReqBodyBuilder>{

			grantType(grantType:string):Ref<CreateOidcAccessTokenPathReqBodyBuilder>
			code(code:string):Ref<CreateOidcAccessTokenPathReqBodyBuilder>
			build():Ref<CreateOidcAccessTokenReqBody>
	}
	export interface CreateOidcAccessTokenReq extends Struct<CreateOidcAccessTokenReq>{

			body:Ref<CreateOidcAccessTokenReqBody>
	}
	export interface CreateOidcAccessTokenReqBody extends Struct<CreateOidcAccessTokenReqBody>{

			grantType:Ref<string>
			code:Ref<string>
	}
	export interface CreateOidcAccessTokenReqBodyBuilder extends Struct<CreateOidcAccessTokenReqBodyBuilder>{

			grantType(grantType:string):Ref<CreateOidcAccessTokenReqBodyBuilder>
			code(code:string):Ref<CreateOidcAccessTokenReqBodyBuilder>
			build():Ref<CreateOidcAccessTokenReqBody>
	}
	export interface CreateOidcAccessTokenReqBuilder extends Struct<CreateOidcAccessTokenReqBuilder>{

			body(body:Ref<CreateOidcAccessTokenReqBody>):Ref<CreateOidcAccessTokenReqBuilder>
			build():Ref<CreateOidcAccessTokenReq>
	}
	export interface CreateOidcAccessTokenResp extends Struct<CreateOidcAccessTokenResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateOidcAccessTokenRespData>
			success():bool
	}
	export interface CreateOidcAccessTokenRespData extends Struct<CreateOidcAccessTokenRespData>{

			accessToken:Ref<string>
			refreshToken:Ref<string>
			tokenType:Ref<string>
			expiresIn:Ref<int>
			refreshExpiresIn:Ref<int>
			scope:Ref<string>
	}
	export interface CreateOidcRefreshAccessTokenPathReqBodyBuilder extends Struct<CreateOidcRefreshAccessTokenPathReqBodyBuilder>{

			grantType(grantType:string):Ref<CreateOidcRefreshAccessTokenPathReqBodyBuilder>
			refreshToken(refreshToken:string):Ref<CreateOidcRefreshAccessTokenPathReqBodyBuilder>
			build():Ref<CreateOidcRefreshAccessTokenReqBody>
	}
	export interface CreateOidcRefreshAccessTokenReq extends Struct<CreateOidcRefreshAccessTokenReq>{

			body:Ref<CreateOidcRefreshAccessTokenReqBody>
	}
	export interface CreateOidcRefreshAccessTokenReqBody extends Struct<CreateOidcRefreshAccessTokenReqBody>{

			grantType:Ref<string>
			refreshToken:Ref<string>
	}
	export interface CreateOidcRefreshAccessTokenReqBodyBuilder extends Struct<CreateOidcRefreshAccessTokenReqBodyBuilder>{

			grantType(grantType:string):Ref<CreateOidcRefreshAccessTokenReqBodyBuilder>
			refreshToken(refreshToken:string):Ref<CreateOidcRefreshAccessTokenReqBodyBuilder>
			build():Ref<CreateOidcRefreshAccessTokenReqBody>
	}
	export interface CreateOidcRefreshAccessTokenReqBuilder extends Struct<CreateOidcRefreshAccessTokenReqBuilder>{

			body(body:Ref<CreateOidcRefreshAccessTokenReqBody>):Ref<CreateOidcRefreshAccessTokenReqBuilder>
			build():Ref<CreateOidcRefreshAccessTokenReq>
	}
	export interface CreateOidcRefreshAccessTokenResp extends Struct<CreateOidcRefreshAccessTokenResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateOidcRefreshAccessTokenRespData>
			success():bool
	}
	export interface CreateOidcRefreshAccessTokenRespData extends Struct<CreateOidcRefreshAccessTokenRespData>{

			accessToken:Ref<string>
			refreshToken:Ref<string>
			tokenType:Ref<string>
			expiresIn:Ref<int>
			refreshExpiresIn:Ref<int>
			scope:Ref<string>
	}
	export interface CreateRefreshAccessTokenPathReqBodyBuilder extends Struct<CreateRefreshAccessTokenPathReqBodyBuilder>{

			grantType(grantType:string):Ref<CreateRefreshAccessTokenPathReqBodyBuilder>
			refreshToken(refreshToken:string):Ref<CreateRefreshAccessTokenPathReqBodyBuilder>
			build():Ref<CreateRefreshAccessTokenReqBody>
	}
	export interface CreateRefreshAccessTokenReq extends Struct<CreateRefreshAccessTokenReq>{

			body:Ref<CreateRefreshAccessTokenReqBody>
	}
	export interface CreateRefreshAccessTokenReqBody extends Struct<CreateRefreshAccessTokenReqBody>{

			grantType:Ref<string>
			refreshToken:Ref<string>
	}
	export interface CreateRefreshAccessTokenReqBodyBuilder extends Struct<CreateRefreshAccessTokenReqBodyBuilder>{

			grantType(grantType:string):Ref<CreateRefreshAccessTokenReqBodyBuilder>
			refreshToken(refreshToken:string):Ref<CreateRefreshAccessTokenReqBodyBuilder>
			build():Ref<CreateRefreshAccessTokenReqBody>
	}
	export interface CreateRefreshAccessTokenReqBuilder extends Struct<CreateRefreshAccessTokenReqBuilder>{

			body(body:Ref<CreateRefreshAccessTokenReqBody>):Ref<CreateRefreshAccessTokenReqBuilder>
			build():Ref<CreateRefreshAccessTokenReq>
	}
	export interface CreateRefreshAccessTokenResp extends Struct<CreateRefreshAccessTokenResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<CreateRefreshAccessTokenRespData>
			success():bool
	}
	export interface CreateRefreshAccessTokenRespData extends Struct<CreateRefreshAccessTokenRespData>{

			accessToken:Ref<string>
			tokenType:Ref<string>
			expiresIn:Ref<int>
			name:Ref<string>
			enName:Ref<string>
			avatarUrl:Ref<string>
			avatarThumb:Ref<string>
			avatarMiddle:Ref<string>
			avatarBig:Ref<string>
			openId:Ref<string>
			unionId:Ref<string>
			email:Ref<string>
			enterpriseEmail:Ref<string>
			userId:Ref<string>
			mobile:Ref<string>
			tenantKey:Ref<string>
			refreshExpiresIn:Ref<int>
			refreshToken:Ref<string>
			sid:Ref<string>
	}
	export interface DepartmentId extends Struct<DepartmentId>{

			departmentId:Ref<string>
			openDepartmentId:Ref<string>
	}
	export interface DepartmentIdBuilder extends Struct<DepartmentIdBuilder>{

			departmentId(departmentId:string):Ref<DepartmentIdBuilder>
			openDepartmentId(openDepartmentId:string):Ref<DepartmentIdBuilder>
			build():Ref<DepartmentId>
	}
	export interface GetUserInfoResp extends Struct<GetUserInfoResp>{

			apiResp:Ref<larkcore.ApiResp>
			codeError:larkcore.CodeError
			data:Ref<GetUserInfoRespData>
			success():bool
	}
	export interface GetUserInfoRespData extends Struct<GetUserInfoRespData>{

			name:Ref<string>
			enName:Ref<string>
			avatarUrl:Ref<string>
			avatarThumb:Ref<string>
			avatarMiddle:Ref<string>
			avatarBig:Ref<string>
			openId:Ref<string>
			unionId:Ref<string>
			email:Ref<string>
			enterpriseEmail:Ref<string>
			userId:Ref<string>
			mobile:Ref<string>
			tenantKey:Ref<string>
			employeeNo:Ref<string>
	}
	export function New(config:Ref<larkcore.Config>):Ref<V1>

	export function newCreateAccessTokenPathReqBodyBuilder():Ref<CreateAccessTokenPathReqBodyBuilder>

	export function newCreateAccessTokenReqBodyBuilder():Ref<CreateAccessTokenReqBodyBuilder>

	export function newCreateAccessTokenReqBuilder():Ref<CreateAccessTokenReqBuilder>

	export function newCreateOidcAccessTokenPathReqBodyBuilder():Ref<CreateOidcAccessTokenPathReqBodyBuilder>

	export function newCreateOidcAccessTokenReqBodyBuilder():Ref<CreateOidcAccessTokenReqBodyBuilder>

	export function newCreateOidcAccessTokenReqBuilder():Ref<CreateOidcAccessTokenReqBuilder>

	export function newCreateOidcRefreshAccessTokenPathReqBodyBuilder():Ref<CreateOidcRefreshAccessTokenPathReqBodyBuilder>

	export function newCreateOidcRefreshAccessTokenReqBodyBuilder():Ref<CreateOidcRefreshAccessTokenReqBodyBuilder>

	export function newCreateOidcRefreshAccessTokenReqBuilder():Ref<CreateOidcRefreshAccessTokenReqBuilder>

	export function newCreateRefreshAccessTokenPathReqBodyBuilder():Ref<CreateRefreshAccessTokenPathReqBodyBuilder>

	export function newCreateRefreshAccessTokenReqBodyBuilder():Ref<CreateRefreshAccessTokenReqBodyBuilder>

	export function newCreateRefreshAccessTokenReqBuilder():Ref<CreateRefreshAccessTokenReqBuilder>

	export function newDepartmentIdBuilder():Ref<DepartmentIdBuilder>

	export function newTokenInfoBuilder():Ref<TokenInfoBuilder>

	export function newUserAccessTokenInfoBuilder():Ref<UserAccessTokenInfoBuilder>

	export function newUserInfoBuilder():Ref<UserInfoBuilder>

	export interface TokenInfo extends Struct<TokenInfo>{

			accessToken:Ref<string>
			refreshToken:Ref<string>
			tokenType:Ref<string>
			expiresIn:Ref<int>
			refreshExpiresIn:Ref<int>
			scope:Ref<string>
	}
	export interface TokenInfoBuilder extends Struct<TokenInfoBuilder>{

			accessToken(accessToken:string):Ref<TokenInfoBuilder>
			refreshToken(refreshToken:string):Ref<TokenInfoBuilder>
			tokenType(tokenType:string):Ref<TokenInfoBuilder>
			expiresIn(expiresIn:int):Ref<TokenInfoBuilder>
			refreshExpiresIn(refreshExpiresIn:int):Ref<TokenInfoBuilder>
			scope(scope:string):Ref<TokenInfoBuilder>
			build():Ref<TokenInfo>
	}
	export interface UserAccessTokenInfo extends Struct<UserAccessTokenInfo>{

			accessToken:Ref<string>
			tokenType:Ref<string>
			expiresIn:Ref<int>
			name:Ref<string>
			enName:Ref<string>
			avatarUrl:Ref<string>
			avatarThumb:Ref<string>
			avatarMiddle:Ref<string>
			avatarBig:Ref<string>
			openId:Ref<string>
			unionId:Ref<string>
			email:Ref<string>
			enterpriseEmail:Ref<string>
			userId:Ref<string>
			mobile:Ref<string>
			tenantKey:Ref<string>
			refreshExpiresIn:Ref<int>
			refreshToken:Ref<string>
			sid:Ref<string>
	}
	export interface UserAccessTokenInfoBuilder extends Struct<UserAccessTokenInfoBuilder>{

			accessToken(accessToken:string):Ref<UserAccessTokenInfoBuilder>
			tokenType(tokenType:string):Ref<UserAccessTokenInfoBuilder>
			expiresIn(expiresIn:int):Ref<UserAccessTokenInfoBuilder>
			name(name:string):Ref<UserAccessTokenInfoBuilder>
			enName(enName:string):Ref<UserAccessTokenInfoBuilder>
			avatarUrl(avatarUrl:string):Ref<UserAccessTokenInfoBuilder>
			avatarThumb(avatarThumb:string):Ref<UserAccessTokenInfoBuilder>
			avatarMiddle(avatarMiddle:string):Ref<UserAccessTokenInfoBuilder>
			avatarBig(avatarBig:string):Ref<UserAccessTokenInfoBuilder>
			openId(openId:string):Ref<UserAccessTokenInfoBuilder>
			unionId(unionId:string):Ref<UserAccessTokenInfoBuilder>
			email(email:string):Ref<UserAccessTokenInfoBuilder>
			enterpriseEmail(enterpriseEmail:string):Ref<UserAccessTokenInfoBuilder>
			userId(userId:string):Ref<UserAccessTokenInfoBuilder>
			mobile(mobile:string):Ref<UserAccessTokenInfoBuilder>
			tenantKey(tenantKey:string):Ref<UserAccessTokenInfoBuilder>
			refreshExpiresIn(refreshExpiresIn:int):Ref<UserAccessTokenInfoBuilder>
			refreshToken(refreshToken:string):Ref<UserAccessTokenInfoBuilder>
			sid(sid:string):Ref<UserAccessTokenInfoBuilder>
			build():Ref<UserAccessTokenInfo>
	}
	export interface UserInfo extends Struct<UserInfo>{

			name:Ref<string>
			enName:Ref<string>
			avatarUrl:Ref<string>
			avatarThumb:Ref<string>
			avatarMiddle:Ref<string>
			avatarBig:Ref<string>
			openId:Ref<string>
			unionId:Ref<string>
			email:Ref<string>
			enterpriseEmail:Ref<string>
			userId:Ref<string>
			mobile:Ref<string>
			tenantKey:Ref<string>
			employeeNo:Ref<string>
	}
	export interface UserInfoBuilder extends Struct<UserInfoBuilder>{

			name(name:string):Ref<UserInfoBuilder>
			enName(enName:string):Ref<UserInfoBuilder>
			avatarUrl(avatarUrl:string):Ref<UserInfoBuilder>
			avatarThumb(avatarThumb:string):Ref<UserInfoBuilder>
			avatarMiddle(avatarMiddle:string):Ref<UserInfoBuilder>
			avatarBig(avatarBig:string):Ref<UserInfoBuilder>
			openId(openId:string):Ref<UserInfoBuilder>
			unionId(unionId:string):Ref<UserInfoBuilder>
			email(email:string):Ref<UserInfoBuilder>
			enterpriseEmail(enterpriseEmail:string):Ref<UserInfoBuilder>
			userId(userId:string):Ref<UserInfoBuilder>
			mobile(mobile:string):Ref<UserInfoBuilder>
			tenantKey(tenantKey:string):Ref<UserInfoBuilder>
			employeeNo(employeeNo:string):Ref<UserInfoBuilder>
			build():Ref<UserInfo>
	}
	export interface V1 extends Struct<V1>{

			accessToken:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateAccessTokenReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateAccessTokenResp>
			}>
			oidcAccessToken:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateOidcAccessTokenReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateOidcAccessTokenResp>
			}>
			oidcRefreshAccessToken:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateOidcRefreshAccessTokenReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateOidcRefreshAccessTokenResp>
			}>
			refreshAccessToken:Ref<{
			
				create(ctx:context.Context,req:Ref<CreateRefreshAccessTokenReq>,...options:larkcore.RequestOptionFunc[]):Ref<CreateRefreshAccessTokenResp>
			}>
			userInfo:Ref<{
			
				get(ctx:context.Context,...options:larkcore.RequestOptionFunc[]):Ref<GetUserInfoResp>
			}>
	}
	export function emptyCreateAccessTokenResp():CreateAccessTokenResp
	export function emptyRefCreateAccessTokenResp():Ref<CreateAccessTokenResp>
	export function refOfCreateAccessTokenResp(x:CreateAccessTokenResp,v:Ref<CreateAccessTokenResp>)
	export function unRefCreateAccessTokenResp(v:Ref<CreateAccessTokenResp>):CreateAccessTokenResp
	export function emptyCreateOidcAccessTokenReq():CreateOidcAccessTokenReq
	export function emptyRefCreateOidcAccessTokenReq():Ref<CreateOidcAccessTokenReq>
	export function refOfCreateOidcAccessTokenReq(x:CreateOidcAccessTokenReq,v:Ref<CreateOidcAccessTokenReq>)
	export function unRefCreateOidcAccessTokenReq(v:Ref<CreateOidcAccessTokenReq>):CreateOidcAccessTokenReq
	export function emptyCreateOidcAccessTokenRespData():CreateOidcAccessTokenRespData
	export function emptyRefCreateOidcAccessTokenRespData():Ref<CreateOidcAccessTokenRespData>
	export function refOfCreateOidcAccessTokenRespData(x:CreateOidcAccessTokenRespData,v:Ref<CreateOidcAccessTokenRespData>)
	export function unRefCreateOidcAccessTokenRespData(v:Ref<CreateOidcAccessTokenRespData>):CreateOidcAccessTokenRespData
	export function emptyCreateRefreshAccessTokenResp():CreateRefreshAccessTokenResp
	export function emptyRefCreateRefreshAccessTokenResp():Ref<CreateRefreshAccessTokenResp>
	export function refOfCreateRefreshAccessTokenResp(x:CreateRefreshAccessTokenResp,v:Ref<CreateRefreshAccessTokenResp>)
	export function unRefCreateRefreshAccessTokenResp(v:Ref<CreateRefreshAccessTokenResp>):CreateRefreshAccessTokenResp
	export function emptyGetUserInfoRespData():GetUserInfoRespData
	export function emptyRefGetUserInfoRespData():Ref<GetUserInfoRespData>
	export function refOfGetUserInfoRespData(x:GetUserInfoRespData,v:Ref<GetUserInfoRespData>)
	export function unRefGetUserInfoRespData(v:Ref<GetUserInfoRespData>):GetUserInfoRespData
	export function emptyCreateRefreshAccessTokenReq():CreateRefreshAccessTokenReq
	export function emptyRefCreateRefreshAccessTokenReq():Ref<CreateRefreshAccessTokenReq>
	export function refOfCreateRefreshAccessTokenReq(x:CreateRefreshAccessTokenReq,v:Ref<CreateRefreshAccessTokenReq>)
	export function unRefCreateRefreshAccessTokenReq(v:Ref<CreateRefreshAccessTokenReq>):CreateRefreshAccessTokenReq
	export function emptyCreateRefreshAccessTokenRespData():CreateRefreshAccessTokenRespData
	export function emptyRefCreateRefreshAccessTokenRespData():Ref<CreateRefreshAccessTokenRespData>
	export function refOfCreateRefreshAccessTokenRespData(x:CreateRefreshAccessTokenRespData,v:Ref<CreateRefreshAccessTokenRespData>)
	export function unRefCreateRefreshAccessTokenRespData(v:Ref<CreateRefreshAccessTokenRespData>):CreateRefreshAccessTokenRespData
	export function emptyDepartmentId():DepartmentId
	export function emptyRefDepartmentId():Ref<DepartmentId>
	export function refOfDepartmentId(x:DepartmentId,v:Ref<DepartmentId>)
	export function unRefDepartmentId(v:Ref<DepartmentId>):DepartmentId
	export function emptyUserAccessTokenInfo():UserAccessTokenInfo
	export function emptyRefUserAccessTokenInfo():Ref<UserAccessTokenInfo>
	export function refOfUserAccessTokenInfo(x:UserAccessTokenInfo,v:Ref<UserAccessTokenInfo>)
	export function unRefUserAccessTokenInfo(v:Ref<UserAccessTokenInfo>):UserAccessTokenInfo
	export function emptyCreateOidcAccessTokenReqBody():CreateOidcAccessTokenReqBody
	export function emptyRefCreateOidcAccessTokenReqBody():Ref<CreateOidcAccessTokenReqBody>
	export function refOfCreateOidcAccessTokenReqBody(x:CreateOidcAccessTokenReqBody,v:Ref<CreateOidcAccessTokenReqBody>)
	export function unRefCreateOidcAccessTokenReqBody(v:Ref<CreateOidcAccessTokenReqBody>):CreateOidcAccessTokenReqBody
	export function emptyCreateOidcRefreshAccessTokenResp():CreateOidcRefreshAccessTokenResp
	export function emptyRefCreateOidcRefreshAccessTokenResp():Ref<CreateOidcRefreshAccessTokenResp>
	export function refOfCreateOidcRefreshAccessTokenResp(x:CreateOidcRefreshAccessTokenResp,v:Ref<CreateOidcRefreshAccessTokenResp>)
	export function unRefCreateOidcRefreshAccessTokenResp(v:Ref<CreateOidcRefreshAccessTokenResp>):CreateOidcRefreshAccessTokenResp
	export function emptyGetUserInfoResp():GetUserInfoResp
	export function emptyRefGetUserInfoResp():Ref<GetUserInfoResp>
	export function refOfGetUserInfoResp(x:GetUserInfoResp,v:Ref<GetUserInfoResp>)
	export function unRefGetUserInfoResp(v:Ref<GetUserInfoResp>):GetUserInfoResp
	export function emptyCreateOidcRefreshAccessTokenReq():CreateOidcRefreshAccessTokenReq
	export function emptyRefCreateOidcRefreshAccessTokenReq():Ref<CreateOidcRefreshAccessTokenReq>
	export function refOfCreateOidcRefreshAccessTokenReq(x:CreateOidcRefreshAccessTokenReq,v:Ref<CreateOidcRefreshAccessTokenReq>)
	export function unRefCreateOidcRefreshAccessTokenReq(v:Ref<CreateOidcRefreshAccessTokenReq>):CreateOidcRefreshAccessTokenReq
	export function emptyCreateAccessTokenRespData():CreateAccessTokenRespData
	export function emptyRefCreateAccessTokenRespData():Ref<CreateAccessTokenRespData>
	export function refOfCreateAccessTokenRespData(x:CreateAccessTokenRespData,v:Ref<CreateAccessTokenRespData>)
	export function unRefCreateAccessTokenRespData(v:Ref<CreateAccessTokenRespData>):CreateAccessTokenRespData
	export function emptyCreateOidcRefreshAccessTokenRespData():CreateOidcRefreshAccessTokenRespData
	export function emptyRefCreateOidcRefreshAccessTokenRespData():Ref<CreateOidcRefreshAccessTokenRespData>
	export function refOfCreateOidcRefreshAccessTokenRespData(x:CreateOidcRefreshAccessTokenRespData,v:Ref<CreateOidcRefreshAccessTokenRespData>)
	export function unRefCreateOidcRefreshAccessTokenRespData(v:Ref<CreateOidcRefreshAccessTokenRespData>):CreateOidcRefreshAccessTokenRespData
	export function emptyCreateRefreshAccessTokenReqBody():CreateRefreshAccessTokenReqBody
	export function emptyRefCreateRefreshAccessTokenReqBody():Ref<CreateRefreshAccessTokenReqBody>
	export function refOfCreateRefreshAccessTokenReqBody(x:CreateRefreshAccessTokenReqBody,v:Ref<CreateRefreshAccessTokenReqBody>)
	export function unRefCreateRefreshAccessTokenReqBody(v:Ref<CreateRefreshAccessTokenReqBody>):CreateRefreshAccessTokenReqBody
	export function emptyCreateAccessTokenReqBody():CreateAccessTokenReqBody
	export function emptyRefCreateAccessTokenReqBody():Ref<CreateAccessTokenReqBody>
	export function refOfCreateAccessTokenReqBody(x:CreateAccessTokenReqBody,v:Ref<CreateAccessTokenReqBody>)
	export function unRefCreateAccessTokenReqBody(v:Ref<CreateAccessTokenReqBody>):CreateAccessTokenReqBody
	export function emptyCreateOidcAccessTokenResp():CreateOidcAccessTokenResp
	export function emptyRefCreateOidcAccessTokenResp():Ref<CreateOidcAccessTokenResp>
	export function refOfCreateOidcAccessTokenResp(x:CreateOidcAccessTokenResp,v:Ref<CreateOidcAccessTokenResp>)
	export function unRefCreateOidcAccessTokenResp(v:Ref<CreateOidcAccessTokenResp>):CreateOidcAccessTokenResp
	export function emptyCreateOidcRefreshAccessTokenReqBody():CreateOidcRefreshAccessTokenReqBody
	export function emptyRefCreateOidcRefreshAccessTokenReqBody():Ref<CreateOidcRefreshAccessTokenReqBody>
	export function refOfCreateOidcRefreshAccessTokenReqBody(x:CreateOidcRefreshAccessTokenReqBody,v:Ref<CreateOidcRefreshAccessTokenReqBody>)
	export function unRefCreateOidcRefreshAccessTokenReqBody(v:Ref<CreateOidcRefreshAccessTokenReqBody>):CreateOidcRefreshAccessTokenReqBody
	export function emptyTokenInfo():TokenInfo
	export function emptyRefTokenInfo():Ref<TokenInfo>
	export function refOfTokenInfo(x:TokenInfo,v:Ref<TokenInfo>)
	export function unRefTokenInfo(v:Ref<TokenInfo>):TokenInfo
	export function emptyUserInfo():UserInfo
	export function emptyRefUserInfo():Ref<UserInfo>
	export function refOfUserInfo(x:UserInfo,v:Ref<UserInfo>)
	export function unRefUserInfo(v:Ref<UserInfo>):UserInfo
	export function emptyCreateAccessTokenReq():CreateAccessTokenReq
	export function emptyRefCreateAccessTokenReq():Ref<CreateAccessTokenReq>
	export function refOfCreateAccessTokenReq(x:CreateAccessTokenReq,v:Ref<CreateAccessTokenReq>)
	export function unRefCreateAccessTokenReq(v:Ref<CreateAccessTokenReq>):CreateAccessTokenReq
	export function emptyV1():V1
	export function emptyRefV1():Ref<V1>
	export function refOfV1(x:V1,v:Ref<V1>)
	export function unRefV1(v:Ref<V1>):V1
}