// Code generated by define_gene; DO NOT EDIT.
package larkevent

import (
	_ "embed"
	"github.com/ZenLiuCN/engine"

	_ "github.com/ZenLiuCN/engine/modules/github/com/larksuite/oapi-sdk-go/v3/core"
	_ "github.com/ZenLiuCN/engine/modules/golang/context"
	_ "github.com/ZenLiuCN/engine/modules/golang/net/http"
	"github.com/larksuite/oapi-sdk-go/v3/event"
)

var (
	//go:embed github_com_larksuite_oapi-sdk-go_v3_event.d.ts
	GithubComLarksuiteOapiSdkGo3EventDefine   []byte
	GithubComLarksuiteOapiSdkGo3EventDeclared = map[string]any{
		"ChallengeResponseFormat": larkevent.ChallengeResponseFormat,
		"ContentTypeJson":         larkevent.ContentTypeJson,
		"signature":               larkevent.Signature,
		"withLogLevel":            larkevent.WithLogLevel,
		"ContentTypeHeader":       larkevent.ContentTypeHeader,
		"EventSignature":          larkevent.EventSignature,
		"ReqTypeChallenge":        larkevent.ReqTypeChallenge,
		"ReqTypeEventCallBack":    larkevent.ReqTypeEventCallBack,
		"eventDecrypt":            larkevent.EventDecrypt,
		"EventRequestNonce":       larkevent.EventRequestNonce,
		"EventRequestTimestamp":   larkevent.EventRequestTimestamp,
		"WebhookResponseFormat":   larkevent.WebhookResponseFormat,
		"withLogger":              larkevent.WithLogger,
		"DefaultContentType":      larkevent.DefaultContentType,
		"withSkipSignVerify":      larkevent.WithSkipSignVerify,

		"emptyEventHeader":        engine.Empty[larkevent.EventHeader],
		"emptyRefEventHeader":     engine.EmptyRefer[larkevent.EventHeader],
		"refOfEventHeader":        engine.ReferOf[larkevent.EventHeader],
		"unRefEventHeader":        engine.UnRefer[larkevent.EventHeader],
		"emptyEventV2Base":        engine.Empty[larkevent.EventV2Base],
		"emptyRefEventV2Base":     engine.EmptyRefer[larkevent.EventV2Base],
		"refOfEventV2Base":        engine.ReferOf[larkevent.EventV2Base],
		"unRefEventV2Base":        engine.UnRefer[larkevent.EventV2Base],
		"emptyEventV2Body":        engine.Empty[larkevent.EventV2Body],
		"emptyRefEventV2Body":     engine.EmptyRefer[larkevent.EventV2Body],
		"refOfEventV2Body":        engine.ReferOf[larkevent.EventV2Body],
		"unRefEventV2Body":        engine.UnRefer[larkevent.EventV2Body],
		"emptyEventReq":           engine.Empty[larkevent.EventReq],
		"emptyRefEventReq":        engine.EmptyRefer[larkevent.EventReq],
		"refOfEventReq":           engine.ReferOf[larkevent.EventReq],
		"unRefEventReq":           engine.UnRefer[larkevent.EventReq],
		"emptyEventResp":          engine.Empty[larkevent.EventResp],
		"emptyRefEventResp":       engine.EmptyRefer[larkevent.EventResp],
		"refOfEventResp":          engine.ReferOf[larkevent.EventResp],
		"unRefEventResp":          engine.UnRefer[larkevent.EventResp],
		"emptyEventV1Header":      engine.Empty[larkevent.EventV1Header],
		"emptyRefEventV1Header":   engine.EmptyRefer[larkevent.EventV1Header],
		"refOfEventV1Header":      engine.ReferOf[larkevent.EventV1Header],
		"unRefEventV1Header":      engine.UnRefer[larkevent.EventV1Header],
		"emptyEventBase":          engine.Empty[larkevent.EventBase],
		"emptyRefEventBase":       engine.EmptyRefer[larkevent.EventBase],
		"refOfEventBase":          engine.ReferOf[larkevent.EventBase],
		"unRefEventBase":          engine.UnRefer[larkevent.EventBase],
		"emptyEventEncryptMsg":    engine.Empty[larkevent.EventEncryptMsg],
		"emptyRefEventEncryptMsg": engine.EmptyRefer[larkevent.EventEncryptMsg],
		"refOfEventEncryptMsg":    engine.ReferOf[larkevent.EventEncryptMsg],
		"unRefEventEncryptMsg":    engine.UnRefer[larkevent.EventEncryptMsg],
		"emptyEventFuzzy":         engine.Empty[larkevent.EventFuzzy],
		"emptyRefEventFuzzy":      engine.EmptyRefer[larkevent.EventFuzzy],
		"refOfEventFuzzy":         engine.ReferOf[larkevent.EventFuzzy],
		"unRefEventFuzzy":         engine.UnRefer[larkevent.EventFuzzy]}
)

func init() {
	engine.RegisterModule(GithubComLarksuiteOapiSdkGo3EventModule{})
}

type GithubComLarksuiteOapiSdkGo3EventModule struct{}

func (S GithubComLarksuiteOapiSdkGo3EventModule) Identity() string {
	return "github.com/larksuite/oapi-sdk-go/v3/event"
}
func (S GithubComLarksuiteOapiSdkGo3EventModule) TypeDefine() []byte {
	return GithubComLarksuiteOapiSdkGo3EventDefine
}
func (S GithubComLarksuiteOapiSdkGo3EventModule) Exports() map[string]any {
	return GithubComLarksuiteOapiSdkGo3EventDeclared
}
