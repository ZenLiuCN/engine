// Code generated by "stringer -type=Kind"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KNone-0]
	_ = x[KTFunc-1]
	_ = x[KTType-2]
	_ = x[KTConst-3]
	_ = x[KTVar-4]
	_ = x[KVar-5]
	_ = x[KFunc-6]
	_ = x[KNamed-7]
	_ = x[KStruct-8]
	_ = x[KMap-9]
	_ = x[KPointer-10]
	_ = x[KArray-11]
	_ = x[KSlice-12]
	_ = x[KInterface-13]
	_ = x[KChan-14]
	_ = x[KBasic-15]
	_ = x[KTypeParam-16]
	_ = x[KSign-17]
	_ = x[KUnion-18]
	_ = x[KTuple-19]
}

const _Kind_name = "KNoneKTFuncKTTypeKTConstKTVarKVarKFuncKNamedKStructKMapKPointerKArrayKSliceKInterfaceKChanKBasicKTypeParamKSignKUnionKTuple"

var _Kind_index = [...]uint8{0, 5, 11, 17, 24, 29, 33, 38, 44, 51, 55, 63, 69, 75, 85, 90, 96, 106, 111, 117, 123}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
