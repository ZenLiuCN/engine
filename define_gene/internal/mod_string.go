// Code generated by "stringer -type=Mod"; DO NOT EDIT.

package internal

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ModPointerElt-0]
	_ = x[ModChanElt-1]
	_ = x[ModeNamedElt-2]
	_ = x[ModMapKey-3]
	_ = x[ModMapValue-4]
	_ = x[ModArrayElt-5]
	_ = x[ModSliceElt-6]
	_ = x[ModParam-7]
	_ = x[ModResult-8]
	_ = x[ModEmbedded-9]
	_ = x[ModMethod-10]
	_ = x[ModFunction-11]
	_ = x[ModField-12]
	_ = x[ModTuple-13]
	_ = x[ModEllipsis-14]
}

const _Mod_name = "ModPointerEltModChanEltModeNamedEltModMapKeyModMapValueModArrayEltModSliceEltModParamModResultModEmbeddedModMethodModFunctionModFieldModTupleModEllipsis"

var _Mod_index = [...]uint8{0, 13, 23, 35, 44, 55, 66, 77, 85, 94, 105, 114, 125, 133, 141, 152}

func (i Mod) String() string {
	if i >= Mod(len(_Mod_index)-1) {
		return "Mod(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Mod_name[_Mod_index[i]:_Mod_index[i+1]]
}
